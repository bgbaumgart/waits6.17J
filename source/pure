000000 /               ;: OUTER[J17,SYS]
                       ;LIST OF INDEPENDENT MONITOR COMMAND FEATURES
                       ;THESE FEATURES CAN BE ELIMINATED FROM A SYSTEM BY
                       ;SETTING THE APPROPRIATE FTXXXX SYMBOL BELOW TO 0
                       ;AND REASSEMBLING. SOME OF THE ROUTINES AFFECTED
                       ;BY EACH FEATURE ARE LISTED BELOW.
                       ;APPEARS IN APRSER,SCHEDU,SCNSER,DSKSER,SYSINI,STUFF,LOWCOR
                       ;APPEARS IN APRSER,SYSINI,ONCE,STUFF,SCHEDU
                       ;IF FTDISK=-1,THEN FTLOGIN MUST BE -1
                       ;APPEARS IN APRSER,STUFF,LOWCOR
                       ;FTDISK IMPLIES FTLOGIN
                       ;EXEC MODE SYSTEM DDT
                       ;HAVE IMP UNLESS OTHERWISE SPECIFIED
                       ;APPEARS IN TTYSER, OUTER(CH5 CODE).
                       ;SET TO -1 TO INCLUDE SERVICE FOR OLD SCROUNGY KEYBOARDS.
                       ; ACCUMULATOR ASSIGNMENTS
                       ;ACCUMULATOR ASSIGNMENTS
                       ;* MEANS LOADED BY UUO HANDLER ON ALL UUOS
                       ;CHANNEL AND EACH USER JOB
                       ;MESSAG		;OR TEMPORARY
                       ;RH=ADDRESS OF DEVICE DATA BLOCK
                       ;RH=ABSOLUTE ADDRESS OF USER AREA
                       ;LH=HIGHEST REL. LOC. IN USER AREA
                       ; CONTENTS OF FIRST WORD OF 3 WORD USER BUFFER HEADER
                       ;PROG IN INDEX FIELD FOR RELOCATION
                       ;AC FIELD DEFINITIONS FOR XCTR
                       ;MNEMONICS FOR DDB WORDS
                       ; SOME BITS IN TTYTAB, USED EVERY WHERE IN THE WORLD
                       ;"COMMAND" ONLY SERVICES TTY WHEN COMBIT
                       ;IS SET!
                       ; DEVICE DATA BLOCK DEFINITIONS
                       ; DEVICE DATA BLOCK NAMES
                       ;C(LH)=DEVICE MNEMONIC
                       ;C(RH)=DEVICE NUMBER, LEFT JUSTIFIED
                       ;BITS 0-5=JOB NUMBER(BYTE POINTER=PJOBN)
                       ;ZERO VALUE IMPLIES NOT ASSIGNED
                       ; BITS 6-11 = HUNG DEVICE COUNT. SET WHEN
                       ;DEVICE BECOMES ACTIVE. DECREMENTED EVERY SECOND.
                       ; BITS 12-17 = HUNG DEVICE COUNT
                       ;SETTING. 0 MEANS DEVICE CAN NEVER BE HUNG.
                       ;BITS 18-24=DEVICE NUMBER,BINARY(BYTE POINTER=PUNIT)
                       ;BITS 25-35=BUFFER SIZE
                       ; C(LH) = NEXT DEVICE DATA BLOCK
                       ;C(RH)=DEVICE SERVICE DISPATCH TABLE
                       ;    DEVICE SERVICE DISPATCH TABLE ASSIGNMENTS
                       ;IMMEDIATE ADDRESS PART OF CLOSE UUO
                       ; INPUT, SHORT DISPATCH TABLE
                       ; CALL D,[SIXBIT /UTPCLR/]
                       ;END OF LONG DISPATCH TABLE
                       ; DEVICE CHARACTERISTICS WORD DEFINITIONS
                       ; BITS 6-11 = LEFT HALF OF IMAGE MODE BYTE POINTER
                       ;BIT 35-J=1 IF MODE J IS LEGAL FOR THIS DEVICE
                       ;BIT 18 DEVICE ASSIGNED BY CONSOLE COMMAND
                       ;BIT 19 DEVICE ASSIGNED BY PROGRAM (INIT)
                       ;RIGHT HALF OF DEVICE CHARACTERISTICS WORD(DEVCHR UUO)
                       ;NOTE: READ CODE BETWEEN SYS1 & IOGO BEFORE CHANGING ASSCON
                       ; ASSIGNED BY PROGRAM (INIT UUO)
                       ;LEFT HALF DEVICE CHARACTERISTICS(DEVCHR UUO)
                       ; 1 IF DEVICE IS AVAILABLE TO THIS JOB
                       ;SET BY DEVCHR UUO
                       ; INDICATES DEVICE HAS A LONG DISPATCH TABLE
                       ;(OTHER UUOS BESIDES INPUT,OUTPUT,CLOSE,RELEASE)
                       ; DDB ASSIGNMENTS, DEVCHR BITS
                       ; C(LH) = RE. ADR. OF 3 WORD OUTPUT BUFFER HEADER
                       ;C(RH)=REL. ADR. OF 3 WORD INPUT BUFFER HEADER
                       ; C(LH) = PROG, IN INDEX FIELD
                       ;C(RH)=REL. INPUT BUFFER ADD. SERVICE ROUT. IS FILLING
                       ; C(LH) = PROG, IN INDEX FIELD
                       ;C(RH)=REL. OUTPUT BUFFER ADR. SERVICE ROU. IS EMPTYING
                       ;FOR LONG DISPATCH TABLE DEVICES ONLY:
                       ; LH OF DEVICE CHARACTERISTICS EXTENSION WORD, DEVCMR
                       ; AND DOES NOT SET IOACT, BUT SETS DEVSBB
                       ; CALLED EVEN IF IO IS ACTIVE
                       ;ALSO OK IF USER HAS DEV INITED ALREADY
                       ; I/O STATUS WORD ASSIGNMENTS
                       ;DATA MODES: BITS 32-35(BYTE POINTER=PIOMOD)
                       ; STATUS BITS
                       ;RIGHT HALF (USER)
                       ; DON'T COMPUTE WORD COUNT
                       ; READ WITH NO REREAD CHECK FOR MTAPE
                       ; FOR LPT - NO CHAR. CONVERSION
                       ; FOR PTP - DON'T COMPUTE PARITY
                       ; FOR XGP-ESCAPE TO OTHER MODES
                       ;BITS 27,28	DENSITY OF MAG TAPE
                       ;		00=INSTALATION STANDARD
                       ;		01=200 BPI
                       ;		10=556 BPI
                       ;		11=800 BPI
                       ; MAG TAPE, BCD MODE, WRITE EVEN PARITY
                       ; IMPROPER MODE, DETECTED BY THE
                       ;INPUT SERVICE ROUTINE
                       ; LEFT HALF (SYSTEM)
                       ; NEXT ITEM WILL BE THE FIRST ITEM OF A BUFFER
                       ;REST OF BITS IN LH ARE DEVICE DEPENDENT EXCEPT BIT 14 WHICH
                       ;IS KEPT IN RESERVE.
                       ;LEFT HALF USRJDA (JOB DEVICE ASSIGNMENTS) UUO'S FOR THIS CHANNEL SINCE LAST INIT
                       ; INIT - SAVEGET DEPENDS ON THIS BEING THE SIGN BIT
                       ; INIT WITH INPUT BUFFER HEADER SPECIFIED
                       ; INIT WITH OUTPUT BUFFER HEADER SPECIFIED
                       ; THIS DEVICE IS A SYSTEM TAPE, OR UFD 1,3
                       ;PROJ.PROG. NO 1,3 ON DSK
                       ;RELEASE CLEARS THEM ALL
                       ;MTAPE UUO BITS
                       ; SET SLICE LEVEL, IF 1, ACCORDING TO 'SLEVEL'
                       ; VALUE OF SLICE LEVEL, IF SLICE IF 1
                       ; JOB BUFFER AREA HEADER
                       ; BIT 0 = 1 IF THIS BUFFER RING HAS NEVER BEEN
                       ;REFERENCED FROM THE USER'S PROGRAM BY
                       ;AN INPUT OR OUTPUT COMMAND.
                       ;BITS 1-17=UNUSED
                       ;BITS 18-35=CURRENT BUFFER ADDRESS
                       ; BYTE POINTER TO NEXT BYTE-1
                       ; JOB BUFFER HEADER
                       ; 1 IF BUFFER IF FULL, OR BEING EMPTIED
                       ;0 IF BUFFER IS EMPTY (OR BEING FILLED)
                       ;BITS 1-17=BUFFER SIZE
                       ;BITS 18-35=NEXT BUFFER ADDRESS
                       ;JOB STATUS WORD(JBTSTS IN IOINI1), ONE FOR EACH JOB
                       ;WHICH IS ON DISK.  SET BY COMMAND DECODER
                       ;CLEARED WHEN JOB IN CORE AGAIN.
                       ;JOB TO STOP AFTER CURRENT BUFFERFULL
                       ;SO JOB CAN BE SHUFFLED IN CORE
                       ; REALLY A HIGH SEGMENT WITH NO JOB DATA AREA
                       ;NEEDED SO ONLY ONE REQUEST PER JOB
                       ;BITS 10-14 USED TO INDICATE JOB IN WAIT FOR A SHARABLE DEVICE
                       ;0 MEANS JOB NOT WAITING FOR SHARABLE DEVICE
                       ;SEE SCHEDULER(CLKCSS) FOR DEFINITION OF WAIT CODES
                       ; CLEARED BY CLRSIN WHEN JBTSIN=0 FOR THE
                       ; "OTHER" SEGMENT.
                       ; THIS UPPER SEGMENT IS WRITE PROTECTED
                       ; RH BITS IN JBTSTS . . .
                       ;   JOB WAS ON DISK AND COULDN'T GET WIPED
                       ; BITS 30-35 ARE THE NUMBER OF THE HIGH SEGMENT THIS JOB HAS, ZERO IF NONE
                       ;BITS WHICH DO NOT MATTER FOR RUNABILITY
                       ;JBTSIN SWAP IN LIST BITS
                       ;CALL INTRUN AT FININ
                       ;CALL BATSW AT FININ
                       ;CALL COMMAND AT FININ
                       ;CALL JRSRCH AND JRDWIN AT FININ
                       ;TURN BIT OFF AT FININ
                       ;BITS 24-29 BACKWARD LINK IN SWAP IN CHAIN
                       ;BITS 30-35 FORWARD LINK IN SWAP IN CHAIN
                       ;BITS IN JBTSIN WHICH MAY HAVE TURNED ON JHLDIN IN JBTSTS FOR ANOTHER JOB
                       ;JOBS ENTERED AT END OF LIST, SWAPPED IN FROM FRONT
                       ;JBTST2	TWO PROCESSOR INTERLOCKED SPACEWAR STATUS BITS
                       ;JBTST2 IS USED FOR COMMUNICATING FROM THE SPACEWAR
                       ;SERVICE ROUTINE TO THE REST OF THE SYSTEM.  THE BITS IN
                       ;IT ARE DEFINED AS FOLLOWS:
                       ;LH BITS
                       ;GOOD REASON (LIKE TO SHUFFLE IT).  GIVE THE
                       ;SPACEWAR MODULE ONE MORE QUANTUM WITH A WARNING
                       ;THAT IT WILL BE A WHILE UNTIL IT IS RUN AGAIN
                       ;BITS 18-35 ARE THE PC AT THE TIME OF THE ERROR.
                       ;THE ROUTINE WHICH IS ENTERED WHEN A SPW JOB DOES
                       ;A UUO (TERMINATES) ACTUALLY DOES THE SUSPENSION.
                       ;BITS 10-12 ARE NOT USED AS YET
                       ;ERROR BITS:  SWPERB SET FOR ANY OF THESE.
                       ;PRIVILEGE BITS (IN JBTPRV AND JB2PRV)
                       ;DEFINE BITS
                       ;	LEFT HALF
                       ;  NEXT THREE MUST BE 100000,40000, AND 20000 UNLESS DSKSER IS CHANGED!!!
                       ;THESE ARE THE RESTRICTED PRIVILEGES FOR ENABLE COMMAND
000000 / 000102,,000000           XWD XGPPRV!SSLPRV,0         ;
                       ;STATISTICS VARIABLES
                       ;LENGTH OF STATISTICS TABLE
                       ;OPCODES FOR VARIOUS STATS
                       ;FOLLOWING TWO 18 BIT BYTES ARE JOBNAME
                       ; SYSTEM MACROS
                       ;MACRO TO PREVENT SCHEDULING, USED AT UUO LEVEL WHEN A
                       ;REENTRANT ROUTINE IS CHANGING COMMON DATA NOT YET
                       ;ASSIGNED TO A PARTICULAR JOB
                       ;MACRO TO ALLOW SCHEDULING ONCE MORE
                       ;MACRO TO PREVENT CORE SHUFFLING, USED AT UUO LEVEL WHEN
                       ;A ROUTINE SETS UP AN ABSOLUTE USER ADDRESS IN AN AC
                       ;OTHER THAN PDP,PROG, OR JDAT. THE MAIN EXAMPLE IS A BLT
                       ;FROM EXEC TO USER OR USER TO EXEC.
                       ;MACRO TO START A DEVICE FROM UUO LEVEL
                       ;TAC:=XWD DEVINT FLAGS,CONO ARGUMENTS
                       ;MORE SYSTEM MACROS
000000 / 051440,,000000        TTYUUO   11,                   ;
000000 / 051600,,000000        TTYUUO   14,                   ;
                       ;USER MODE DATA REFERENCE
000000 / 256000,,000000           XCT                         ;
                       ; MACRO TO DEFINE TABLES FOR SECONDARY DISPATCH UUOS
                       ;; MACROS TO SYNCHRONIZE PROCESSORS
                       ;MACROS TO PUSH AND POP ACS, DISASTER MACROS
                       ;THIS MACRO IS FOR USE IN CALLING DISERR IN COMCSS
                       ;EXAMPLE:
                       ;	PUSHJ P,DISERR
                       ;	DISARG	STR,[ASCIZ/TAC=/]
                       ;	DISARG	OCT,TAC
                       ;	DISARG	STR,[ASCIZ/
                       ;/]
                       ;	-1
                       ;WOULD TYPE:
                       ;	TAC=000000000030
                       ;IF TAC CONTAINED 30
000000 / 000000,,000000                                       ;
000000 / 000000,,000000                                       ;
000000 / 000040,,000000                                       ;
000000 / 000100,,000000                                       ;
000000 / 000140,,000000                                       ;
000000 / 000200,,000000                                       ;
000000 / 000240,,000000                                       ;
000000 / 000300,,000000                                       ;
                       ;PARAMETER ASSIGNMENTS FOR THIS SYSTEM.
                       ; HERE, WE DEFINE THE LEGAL QUEUES AND QUANTUM TIMES
                       ;JOB STATUS CODES WHICH HAVE NO CORRESPONDING QUEUES
                       ;JOBS ARE UNRUNABLE WHEN IN THESE STATES
                       ; QUANTUM TIME
                       ;RECOMPUTE PRIORITIES EVERY 2.0 SECONDS
                       ;	XD SWAPLIMIT,=90*2000 	;NOW DEFINED IN CORDAT AS A CORE CELL.
                       ;DEVICE NAMES NOT IN THE ASSEMBLER.(IN INCREASING ORDER)
                       ;IOP CONO/CONI BITS
                       ;7		35-33 PI CHANNEL
                       ;STANDARD MAG TAPE DENSITY(556 BPI),PARITY(ODD-BINARY)
                       ; STANDARD MAG TAPE DENSITY
                       ;STDENS=D+P WHERE D AND P ARE:
                       ;D=1(200 BPI);D=2(556 BPI);D=3(800 BPI)
                       ;P=0(ODD-BINARY PARITY);P=4(EVEN-BCD PARITY)
                       ;NO. OF TIMES TO TRY ON DECTAPE ERRORS
                       ; NUMBER OF RETRYS ON DECTAPE ERRORS
                       ;SIZE OF MAGTAPE RECORDS(DATA WORDS IN BUFFER)
                       ; SIZE FOF MAGTAPE RECORDS
                       ;SIZE OF LPT BUFFER(NO. OF DATA WORDS)
                       ; SIZE OF LPT BUFFERS
                       ; SIZE OF LPT SYSTEM BUFFER
                       ; SIZE OF PTP SYSTEM BUFFER
                       ;MAX. NO. OF CONSECUTIVE DECTAPE BLOCKS BEFORE RESCHEDULING
                       ; MAX. NO. OF CONSECUTIVE DECTAPE BLOCKS BEFORE
                       ;RESCHEDULING IF ANOTHER JOB WAITING
                       ; SPECIAL LOCATIONS IN MEMORY
                       ; MEMORY SIZE FOR SYSTEM DDT AND SYSMAK
                       ;SYSDSP SYSTEM INITIALIZATION DISPATCH TABLE, STARTING AT LOC 200
                       ;THIS SUBROUTINE MUST BE LOADED FIRST
                       ;ROUTINE "ONCE" IS ONCE ONLY CODE. IT CONVERTS THE DATE
                       ;AND SETS UP IO SERVICE CHAIN,
000074 / 000000,,156717                                       ;;AFTER LOADING WITH SYMBOLS
000162 / 000000,,156175                                       ;
000163 / 000000,,156200                                       ;
000164 / 000000,,156177                                       ;
000165 / 000000,,156174                                       ;
                       BOOTWC:
000166 / 000000,,000000                                       ;;DDT STORES WCMA FOR IOP FOR SWAPPED USER CORE HERE
                       BOOTSE:
000167 / 000000,,000000                                       ;;DDT STORES SECTOR NUMBER FOR ABOVE HERE
                       ; 200 - INITIALIZE SYSTEM VARIABLES ONCE ONLY
                       SYSDSP:
000200 / 254000,,040447          JRST      SYSINI             ;
                       ; 201 - GO INTO EXEC DDT
000201 / 254000,,156717          JRST         DDT             ;
                       ; 202 - MAKE NEW SYSTEM OUT OF JOB 1
000202 / 254000,,155055          JRST      SYSMAK             ;
                       ; 203 - INITIALIZE SYSTEM VARIABLES ALL OVER AGAIN
000203 / 254000,,040454          JRST        JSR2             ;
                       ; 204 - P2 RESTART ADDRESS
000204 / 254000,,000204          JRST      000204             ;;LOOP HERE UNTIL PDP-10 IS READY. THEN JRST P2START
                       ; 205 - BRING MACHINE UP IN MAINTENANCE MODE
000205 / 254200,,000205          HALT      000205             ;;NOT ANY MORE!
                       ; 206 - WRITE OUT SYSTEM ON THE DISK
000206 / 254000,,164676          JRST       BEGIN             ;
                       ; 207 - STOP MONITOR, ERROR HALT, WRITES OUT LAST SAT BLOCK AND STOPS
000207 / 254200,,000207          HALT      000207             ;
                       ; AT LOCATION 210 BEGINS THE LIST OF USEFUL LOCATIONS
                       ;IN THE SYSTEM USED BY SYSTAT.
000210 / 000000,,026114           XWD 0,JBTSTS                ;
000211 / 000000,,027720                                       ;
000212 / 000000,,021427                                       ;
000213 / 000000,,020273                                       ;
000214 / 000000,,031243                                       ;
000215 / 000000,,024635                                       ;
000216 / 000000,,022200                                       ;
000217 / 000000,,000610                                       ;
                       ; THIS IS AT LOCATION 220
000220 / 000000,,032347                                       ;
000221 / 020006,,072024                                       ;
000222 / 000000,,000077                                       ;
000223 / 000000,,027120                                       ;
000224 / 000000,,021323                                       ;
000225 / 000000,,030142                                       ;
000226 / 000000,,024061                                       ;
000227 / 000000,,037565                                       ;
                       ;NEXT IS 230
000230 / 000000,,020373                                       ;
000231 / 000000,,020574                                       ;
000232 / 000000,,020703                                       ;
000233 / 000000,,021103                                       ;
000234 / 000000,,000016                                       ;
000235 / 000000,,037636                                       ;
000236 / 000000,,027320                                       ;
000237 / 000000,,012607                                       ;
                       ; NEXT IS LOC 240
000240 / 000000,,021203                                       ;
000241 / 000000,,034465                                       ;
000242 / 000000,,026320                                       ;
000243 / 000000,,000600                                       ;
000244 / 000000,,035405                                       ;
000245 / 000000,,035265                                       ;
000246 / 000000,,024636                                       ;
000247 / 000000,,036141                                       ;
                       ; NEXT IS AT 250
000250 / 000000,,030242                                       ;
000251 / 000000,,030342                                       ;
000252 / 000000,,026103                                       ;
000253 / 000000,,017714                                       ;
000254 / 000000,,000567                                       ;
000255 / 000000,,021627                                       ;
000256 / 000000,,026102                                       ;
000257 / 000000,,022201                                       ;
                       ;NEXT IS AT 260
000260 / 000000,,036205                                       ;
000261 / 000000,,016032                                       ;
000262 / 000000,,000571                                       ;
000263 / 000000,,022067                                       ;
000264 / 000000,,022463                                       ;
000265 / 000000,,035407                                       ;
000266 / 000000,,022075                                       ;
000267 / 000000,,000570                                       ;
                       ;NEXT IS AT 270
000270 / 000000,,020064                                       ;
000271 / 000000,,027420                                       ;
000272 / 166046,,057513           XWD UCLLEN⊗9+UCLDLN,UCLTAB  ;
000273 / 000000,,030020           XWD 0,DSKPPN                ;
000274 / 000000,,031343                                       ;
000275 / 000000,,026420                                       ;
000276 / 000000,,012230                                       ;
000277 / 000000,,023424                                       ;
                       ;NEXT IS AT 300
000300 / 777602,,051466           XWD -DISPL,COMTAB           ;
000301 / 000000,,016225                                       ;
000302 / 000000,,017717                                       ;
000303 / 000000,,032146                                       ;
000304 / 000000,,027520                                       ;
000305 / 777756,,053240           XWD -LFTLEN,LFTTAB          ;
000306 / 000000,,053262           XWD -RHTLEN,RHTTAB          ;
000307 / 000000,,032665                                       ;
                       ;NEXT IS AT 310
000310 / 000000,,033165                                       ;
000311 / 000000,,035266                                       ;
000312 / 000000,,014566                                       ;
                       ; HERE LIE THE ROUTINES TO PUSH AND POP ACCUMULATORS
                       SIXRUN:
000315 / 255000,,000000          JFCL                         ;
                       PUSHIT:
000316 / 261140,,000000          PUSH    P,                   ;; SAVE 0
000317 / 574000,,000003          HLRE      000003             ;; PICK UP COUNT
000320 / 271000,,000020          ADDI      000020             ;; ADD IN DISPLACEMENT
000321 / 430000,,000003           XOR      000003             ;; IF SIGNS ARE DIFFERENT, NOT ENOUGH STACK
000322 / 325000,,000331        JUMPGE      PUSHOK             ;
000323 / 262140,,000000           POP    P,                   ;; CAN'T DO IT, LOSE BIG
151374 / 000000,,154175                                       ;
151374 / 440700,,154175 POINT 7,00154175,                     ;
000324 / 200040,,151374          MOVE  TAC,151374             ;
000325 / 264000,,000517           JSR      000517             ;
000326 / 700300,,000040         CONSZ  APR, MAOFF             ;
000327 / 254000,,156717          JRST         DDT             ;
000330 / 254200,,000365          HALT      000365             ;
                       PUSHOK:
000331 / 262140,,000000           POP    P,                   ;; GET BACK 0
000332 / 250003,,000000          EXCH            (P)          ;;SAVE 0 AND GET RETURN.
000333 / 202003,,000020         MOVEM          20(P)          ;;GEE, THIS WAY WE RETURN WITH A POPJ
000334 / 201003,,000001         MOVEI           1(P)          ;
000335 / 505000,,000001          HRLI           1             ;
000336 / 251003,,000017           BLT          17(P)          ;
152014 / 000020,,000020           XWD 20,20                   ;
000337 / 270140,,152014           ADD    P,152014             ;
000340 / 263140,,000000          POPJ    P,                   ;;RETURN TO SENDER
                       POPIT:
000341 / 205003,,777761         MOVSI      777761(P)          ;
000342 / 541000,,000001          HRRI           1             ;
000343 / 251000,,000017           BLT          17             ;
000344 / 200003,,000020          MOVE          20(P)          ;
000345 / 250003,,000000          EXCH            (P)          ;
000346 / 263140,,000000          POPJ    P,                   ;
                       ;THIS PRINTS "YOU'RE IN DDT" AND ENTERS DDT.
                       DDTCAL:
000347 / 202040,,000364         MOVEM  TAC,DDTPAC             ;
000350 / 332000,,156175         SKIPE      156175             ;;ANY DDT?
000351 / 254000,,000360          JRST      000360             ;;NO	
                       ;FTDSWP
151373 / 000000,,153546                                       ;
151373 / 440700,,153546 POINT 7,00153546,                     ;
000352 / 200040,,151373          MOVE  TAC,151373             ;
000353 / 264000,,000517           JSR      000517             ;
000354 / 200040,,000364          MOVE  TAC,DDTPAC             ;
000355 / 700300,,000040         CONSZ  APR, MAOFF             ;
000356 / 254000,,156717          JRST         DDT             ;
000357 / 254200,,156717          JRST    4,   DDT             ;
                       NXDDT:
151372 / 000000,,153232                                       ;
151372 / 440700,,153232 POINT 7,00153232,                     ;
000360 / 200040,,151372          MOVE  TAC,151372             ;
000361 / 264000,,000517           JSR      000517             ;
000362 / 200040,,000364          MOVE  TAC,DDTPAC             ;
000363 / 263140,,000000          POPJ    P,                   ;
                       DDTPAC:
000364 / 000000,,000000                                       ;
                       ; THIS PART HANDLES AUTOMATIC RELOADS AND RESTARTS
                       AUTOLO:
000365 / 700300,,000040         CONSZ  APR,000040             ;;ARE WE THE PDP-6
000366 / 254000,,000372          JRST      000372             ;;PDP-10
000367 / 700200,,200000          CONO  APR,200000             ;
000370 / 700600,,010400          CONO   PI,010400             ;;RESET PI'S
000371 / 254000,,000204          JRST      000204             ;;P2 RESTART LOC
                       AUTO10:
000372 / 250140,,023657          EXCH    P, ERRPD             ;
000373 / 260140,,000316         PUSHJ    P,PUSHIT             ;
000374 / 476000,,036035         SETOM      036035             ;
000375 / 260140,,043761         PUSHJ    P,DISFLU             ;
000376 / 260140,,000341         PUSHJ    P, POPIT             ;
000377 / 336000,,000500         SKIPN      000500             ;
000400 / 744700,,000400         CONSZ  DSK,  1B27             ;
000401 / 260140,,000347         PUSHJ    P,000347             ;
000402 / 700200,,200000          CONO  APR,200000             ;
000403 / 700600,,010400          CONO   PI,010400             ;; RESET PI SYSTEM
000404 / 260140,,075226         PUSHJ    P,075226             ;; WRITE OUT SAT
000405 / 700200,,200000          CONO  APR,200000             ;
000406 / 700600,,010400          CONO   PI,010400             ;; RESET PI SYSTEM
000407 / 336000,,000562         SKIPN      000562             ;;ANY SIX AT ALL?
000410 / 254000,,000431          JRST      000431             ;;NO SKIP THE INTERLOCK
000411 / 402000,,035406         SETZM      035406             ;
152754 / 264000,,000461           JSR       AUTO6             ;
000412 / 200040,,152754          MOVE  TAC,152754             ;
000413 / 202040,,000046         MOVEM  TAC,    46             ;
000414 / 202040,,000056         MOVEM  TAC,    56             ;
000415 / 201040,,200000         MOVEI  TAC,200000             ;
000416 / 336000,,035406         SKIPN      035406             ;
000417 / 367040,,000416          SOJG  TAC,000416             ;
000420 / 326040,,000431         JUMPN  TAC, AUTO1             ;
000421 / 332000,,035406         SKIPE      035406             ;
000422 / 254000,,000431          JRST       AUTO1             ;
000423 / 200040,,000443          MOVE  TAC,000443             ;;PLEASE START PDP-6
000424 / 264000,,000517           JSR      000517             ;
                       ; WAIT FOR THE PDP-6 TO CATCH UP BEFORE RELOADING
                       AUTO2:
000425 / 476000,,000616         SETOM         CH3             ;
000426 / 402000,,000616         SETZM      000616             ;; MAKE SURE PDP-6 GETS PAST INITIALIZE CODE
000427 / 336000,,035406         SKIPN      035406             ;
000430 / 254000,,000425          JRST       AUTO2             ;
                       AUTO1:
000431 / 200040,,000453          MOVE  TAC,000453             ;;AUTO RESTART
000432 / 264000,,000517           JSR      000517             ;
000433 / 200040,,024635          MOVE  TAC,UPTIME             ;
000434 / 250040,,026103          EXCH  TAC,026103             ;
000435 / 254000,,000440          JRST       AUTO3             ;
000436 / 402000,,035406         SETZM      035406             ;; IF MONITOR IS STILL OK, DO A 200 RESTART
000437 / 254000,,000200          JRST      SYSDSP             ;
                       AUTO3:
000440 / 515740,,000501         HRLZI   17, AUTOL             ;
000441 / 251740,,000017           BLT   17,    17             ;
000442 / 254000,,000000          JRST                         ;
                       SIXPNT:
000443 / 000000,,000444                                       ;
000443 / 440700,,000444 POINT 7,00000444,                     ;
                       RSTPNT:
000453 / 000000,,000454                                       ;
000453 / 440700,,000454 POINT 7,00000454,                     ;
                       ; HERE WE PUT A ROUTINE INTO THE ACS AND JUMP TO IT WHILE SYSTEM IS BEING READ IN
                       AUTO6:
000461 / 000000,,000000                                       ;
000462 / 700600,,010400          CONO   PI, 10400             ;
000463 / 700200,,200000          CONO  APR,200000             ;
152527 / 200740,,035406          MOVE   17,035406             ;
000464 / 200040,,152527          MOVE    1,152527             ;
153033 / 326740,,000001         JUMPN   17,     1             ;
000465 / 200100,,153033          MOVE    2,153033             ;
153174 / 367000,,000003          SOJG           3             ;
000466 / 200140,,153174          MOVE    3,153174             ;
152720 / 254000,,000473          JRST       AUTO4             ;
000467 / 200200,,152720          MOVE    4,152720             ;
000470 / 201000,,100000         MOVEI      100000             ;
000471 / 476000,,035406         SETOM      035406             ;
000472 / 254000,,000001          JRST           1             ;
                       AUTO4:
152757 / 264000,,000731           JSR       P2CH3             ;
000473 / 200040,,152757          MOVE  TAC,152757             ;; RESTORE INTERRUPT LOCATIONS
000474 / 202040,,000046         MOVEM  TAC,    46             ;
152760 / 264000,,000771           JSR       P2CH7             ;
000475 / 200040,,152760          MOVE  TAC,152760             ;
000476 / 202040,,000056         MOVEM  TAC,    56             ;
000477 / 254000,,000204          JRST      000204             ;
                       DEBMOD:
000500 / 000000,,000000                                       ;
                       AUTOL:
                       AUTOL3:
000501 / 744600,,014000          CONO  DSK,014000             ;
000502 / 701200,,000000          CONO  IOP,                   ;
000503 / 701140,,000014         DATAO  IOP,AUTOL1             ;
000504 / 255000,,000000          JFCL                         ;
000505 / 255000,,000000          JFCL                         ;
000506 / 744540,,016027         DATAO  DSK,016027             ;
000507 / 701340,,300070         CONSO  IOP,300070             ;;WAIT FOR SOMETHING TO HAPPEN
000510 / 254000,,000006          JRST      000006             ;
000511 / 701300,,300060         CONSZ  IOP,300060             ;;DID SOMETHING BAD HAPPEN
000512 / 254200,,000000          HALT                         ;
000513 / 402000,,035406         SETZM      035406             ;
000514 / 254000,,000200          JRST      SYSDSP             ;
                       AUTOL1:
000515 / 550000,,000000           XWD -=76*2000,0             ;
                       ; ROUTINE TO TYPE ON THE CONSOLE TELETYPE
                       ; ENTER WITH BYTE PTR TO ASCIZ IN TAC.
                       ___TM2:
000516 / 000000,,000000                                       ;;TEMPORARY CELL
                       DDTTYP:
000517 / 000000,,000000                                       ;;JSR TO HERE.
000520 / 202100,,000516         MOVEM TAC1,000516             ;;SAVE TAC1
                       DDTTY1:
000521 / 134100,,000001          ILDB TAC1,000001             ;;GET BYTE
000522 / 322100,,000542         JUMPE TAC1,000542             ;;NULL ENDS THE MESSAGE
000523 / 712300,,000020         CONSZ  CTY,000020             ;;WAIT FOR OUTPUT BUSY TO BE OFF.
000524 / 254000,,000523          JRST      000523             ;
000525 / 712140,,000002         DATAO  CTY,000002             ;;TYPE CHARACTER
000526 / 712340,,000040         CONSO  CTY,000040             ;;DID THEY TYPE ANYTHING (INPUT DONE)
000527 / 254000,,000521          JRST      000521             ;;NO. - LOOP TO GET NEXT CHARACTER
000530 / 712040,,000002         DATAI  CTY,000002             ;;YES. READ CHARACTER.
                       DDTTY3:
000531 / 712300,,000020         CONSZ  CTY,    20             ;
000532 / 254000,,000531          JRST      000531             ;;WAIT TO ECHO CHARACTER
000533 / 712140,,000002         DATAO  CTY,000002             ;;ECHO
000534 / 302100,,000015          CAIE TAC1,000015             ;;CR?
000535 / 254000,,000540          JRST      000540             ;;NO. STOP NOW.
000536 / 201100,,000012         MOVEI TAC1,    12             ;
000537 / 254000,,000531          JRST      000531             ;;YES. GO DO A LF.
                       DDTTY4:
000540 / 134100,,000001          ILDB TAC1,000001             ;;FLUSH UNTIL NULL BYTE
000541 / 326100,,000540         JUMPN TAC1,000540             ;;BEACUSE SOME PEOPLE RETURN TO 1(TAC)
                       DDTTY2:
000542 / 200100,,000516          MOVE TAC1,000516             ;;RESTORE TAC1
000543 / 254020,,000517          JRST      @000517            ;
                       ; THIS ROUTINE SKIPS AND SETS DISFLAG AND TURNS OFF PI'S IF
                       ;THE SYSTEM SHOULD BE RESTARTED
                       ALTNOW:
000544 / 200040,,024635          MOVE  TAC,UPTIME             ;
000545 / 250040,,026102          EXCH  TAC,026102             ;
000546 / 274040,,024635           SUB  TAC,UPTIME             ;
000547 / 213000,,000001         MOVNS         TAC             ;
000550 / 303040,,007020         CAILE  TAC,007020             ;
000551 / 263140,,000000          POPJ    P,                   ;
000552 / 700600,,000400          CONO   PI, PIOFF             ;
000553 / 350003,,000000           AOS            (P)          ;
000554 / 476000,,036035         SETOM      036035             ;
000555 / 263140,,000000          POPJ    P,                   ;
                       ;OTHER SYSTEM DATA STORAGE
                       ;LOCATIONS SETUP BY ONCE ONLY OPERATOR DIALOGUE
                       DETFLG:
000556 / 000000,,000000                                       ;; TELLS SYSINI THAT AD AND DIS ARE TO BE DETACHED FROM THE SYSTEM
                       CRKTIM:
000557 / 000000,,000000                                       ;; TIME OF DAY TO BE PASSED ALONG
                       CRKDAT:
000560 / 000000,,000000                                       ;; DATE CELL
                       P1NUM:
000561 / 000000,,000000                                       ;; PROCESSOR 1 NUMBER
                       ; HAS BIT 'MAOFF' SET IN LH IF P1 IS IN MA TRAP OFFSET
                       P2NUM:
000562 / 000000,,000000                                       ;; PROCESSOR 2 NUMBER AND MAOFF FLAG
                       PWRCNT:
000563 / 000001,,000000                                       ;; POWER FAILURE COUNT DOWN
                       P2RCNT:
000564 / 000001,,000000                                       ;; P2 POWER FAILURE COUNT DOWN
                       XJBPFI:
000565 / 000114,,000000           XWD JOBPFI,0                ;
                       ;JOBPFI=HIGHEST LOC. IN USER JOB DATA AREA
                       ;PROTECTED FROM IO
                       ;DEC 3.16
                       REFLAG:
000566 / 000000,,000000                                       ;;DEC 3.16
                       ;IF REFLAG IS NON-ZERO (SET BY REFRESH CODE IN ONCE) THEN THE
                       ;FIRST USER TO TYPE "LOGIN" IS GIVEN IT AS A PROGECT-PROGRAMMER
                       ;NUMBER.
                       MAINTM:
000567 / 000000,,000000                                       ;; IF MAINTMODE≠0, ONLY GOD MAY LOG IN.
                       NOLOGI:
000570 / 000000,,000000                                       ;; SET ≠ 0 TO PREVENT LOGINS
                       EXPMOD:
000571 / 000000,,000000                                       ;;IF ≠ 0 THEN X.TXT[2,2] IS TYPED BY LOGIN
                       BLTSWP:
000572 / 000000,,000000                                       ;;IF ≠ 0 THEN BLT CORE IMAGE AFTER SWAPIN
                       SYSSIZ:
000573 / 000000,,155055                                       ;;SIZE OF MONITOR(FIRST LOC NOT USED)
                       ; P2 INITIALIZATION WAIT LOOP. WAITS FOR P1 TO TELL IT TO GO
                       P2XFR1:
000574 / 254000,,000575          JRST      000575             ;
                       P2XFR:
000575 / 344000,,000575          AOJA      000575             ;
000576 / 344000,,000576          AOJA      000576             ;
000577 / 254200,,777777          JRST    4,777777             ;
                       PICON:
000600 / 700600,,032237          CONO   PI,032237             ;; PI ENABLE CHNS 3, 5, 6, AND 7
                       ; AND PARITY BOX
                       P2CON:
000601 / 700600,,032237          CONO   PI,032237             ;; PI ENABLE FOR P2
                       INIMES:
000602 / 000000,,000603                                       ;
                       SAVITM:
000607 / 000000,,000000                                       ;; SOMEWHERE IN IOINIT
                       ; INTERRUPT BIT DEFINITIONS, APR CONI BIT DEFINITIONS
                       ;USER INTERRUPT BIT ASSIGNMENTS - LH FIRST . . .
                       ; INTERRUPT BIT ASSIGNMENTS - RH
                       DEVLST:
000610 / 011756,,000000           XWD DSKDDB,0                ;
                       ;THE FOLLOWING ARE USED TO CREATE MXQUE
                       ;THE MAXIMUM QUEUE SIZE
                       ;IOINIT -- CHANNEL LINKAGES AND SAVE ROUTINES.
                       ;INTERRUPT ROUTINE LINKAGES
                       ;IF THE CHANNEL OF A DEVICE IS CHANGED IN S,
                       ;  THE CODE HEREIN MUST BE CHANGED AS WELL.
                       ;USED IN ONCE
                       CH1:
000611 / 000000,,000000                                       ;
000612 / 254000,,151130          JRST      151130             ;;A-D IS THE ONLY THING  ON CH1.
000613 / 254520,,000611           JEN      @   CH1            ;
                       CH2:
000614 / 000000,,000000                                       ;
000615 / 254520,,000614           JEN      @   CH2            ;
                       CH3:
000616 / 000000,,000000                                       ;
                       DPYCON:
000617 / 743300,,400000         CONSZ  DPY,400000             ;; III PROCESSOR?
000620 / 254000,,127027          JRST      127027             ;; YES
000621 / 751300,,000020         CONSZ  510,000020             ;; DATA DISK?
000622 / 254000,,134726          JRST      134726             ;; YES
000623 / 700700,,400000         CONSZ   PI,400000             ;; POWER FAILURE?
000624 / 254000,,041162          JRST      041162             ;; OH DEAR?
                       PARCON:
000625 / 700700,,100000         CONSZ   PI,100000             ;;PARITY ERROR?
000626 / 254000,,037723          JRST      037723             ;;YES.
                       APRCON:
000627 / 700340,,000400         CONSO  APR,000400             ;;THIS IS THE PDP-10 NOT APR INTERRUPT BIT
000630 / 254000,,046262          JRST      046262             ;;YES.
000631 / 254520,,000616           JEN      @   CH3            ;
                       CH4:
000632 / 000000,,000000                                       ;
                       DTCCON:
000633 / 721700,,000000         CONSZ  DTS,                   ;;DEC TAPE CONTROLLER?
000634 / 254000,,106144          JRST      106144             ;;YES.
                       MTCCON:
000635 / 722700,,000000         CONSZ  MTS,                   ;;MAG TAPE CONTROLLER?
000636 / 254000,,106665          JRST      106665             ;;YES.
000637 / 740300,,040000         CONSZ  IMP,040000             ;; ERROR BIT
000640 / 254000,,122525          JRST      122525             ;; YES, HE MIGHT BE DEAD
000641 / 740300,,030000         CONSZ  IMP,030000             ;; INPUT DONE OR INPUT END?
000642 / 254000,,122465          JRST      IMPINT             ;
                       IMPOTS:
000643 / 740300,,004000         CONSZ  IMP,004000             ;; OUTPUT DONE?
000644 / 254000,,122504          JRST      122504             ;; YES
                       IMPCTS:
000645 / 254520,,000632           JEN      @   CH4            ;
                       ; MORE PI CHANNEL ROUTINES FOR P1
                       CH5:
000646 / 000000,,000000                                       ;
                       LPTCON:
000647 / 712700,,000000         CONSZ  LPT,                   ;;LINE PRINTER?
000650 / 254000,,123304          JRST      123304             ;;YES.
000651 / 730300,,001010         CONSZ DCSA,001010             ;;TELETYPE SCANNER?
000652 / 254000,,142627          JRST      142627             ;;YES.
000653 / 731300,,000010         CONSZ  DKB,000010             ;;MICROSWITCH KEYBOARD?
000654 / 254000,,142454          JRST      142454             ;;YES
000655 / 712300,,000050         CONSZ  TTY,000050             ;;CONSOLE TELETYPE?
000656 / 254000,,142641          JRST      142641             ;;YES.
000657 / 737300,,000007         CONSZ   PK,000007             ;;PIA?
000660 / 737340,,000010         CONSO   PK,000010             ;;INTERRUPT BIT?
000661 / 254000,,000663          JRST      000663             ;
000662 / 254000,,143576          JRST      143576             ;;(TELEPHONE) PAGING KLUDGE (IN TTYSER)
                       PTRCN1:
000663 / 710700,,000000         CONSZ  PTR,                   ;;PAPER TAPE READER?
000664 / 254000,,124401          JRST      124401             ;;YES.
000665 / 254520,,000646           JEN      @   CH5            ;
                       ;	NOTE:	SCNINT IS PLACED FIRST BECAUSE DISCONNECTED TELETYPES
                       ;		RUN OPEN, FLOODING THE SYSTEM WITH INTERRUPTS.  SINCE
                       ;		THE VASE MAJORITY OF CH5 INTERRUPTS ARE OF THIS NATURE
                       ;		TTYS SHOULD BE THE FIRST TO BE CHECKED.
                       ;	NOTE:	FOR SIMILAR REASONS, DKBINT IS PLACED JUST AFTER SCNINT.
                       ;		ALSO, LPTINT IS NOW FIRST SINCE THE LPT GENERATES INTERRUPTS
                       ;		AT A VERY HIGH RATE WHILE LOADING THE BUFFER.
                       ; MORE PI CHANNEL ROUTINES FOR P1
                       CH6:
000666 / 000000,,000000                                       ;
000667 / 750300,,000020         CONSZ  PMP,000020             ;; 2314 MAYBE?
000670 / 750340,,000004         CONSO  PMP,000004             ;;IS IT US OR D2CHN?
000671 / 304000,,000000          CAIA                         ;
000672 / 254000,,103561          JRST      103561             ;; YES, DO YO' STUFF, BWANA SAHIB!
                       TVCON:
000673 / 701300,,000000         CONSZ  IOP,                   ;;I/O PROC. FOR TV CAMERA?
000674 / 254000,,150714          JRST      150714             ;;YES.
                       DIPCON:
000675 / 701300,,300070         CONSZ  IOP,300070             ;;I/O PROCESSOR FOR DISK?
000676 / 254000,,113363          JRST      IFBINT             ;
000677 / 744700,,003370         CONSZ  DSK,003370             ;;DISK INTERFACE?
000700 / 254000,,113405          JRST      DFBINT             ;
                       PTPCN1:
000701 / 710300,,000000         CONSZ  PTP,                   ;;PAPER TAPE PUNCH?
000702 / 254000,,124126          JRST      124126             ;;YES.
000703 / 737700,,000020         CONSZ  DIL,    20             ;
000704 / 254000,,145740          JRST      145740             ;;DIALER INTERRUPT
                       ;IFN DILNUM
                       ;BO 6-MAY-74
000705 / 747300,,770000         CONSZ  D11,770000             ;;ERROR INTERRUPT FROM THE PDP-11?
000706 / 254000,,125766          JRST      ELFINT             ;
                       ;ELFNUM
000707 / 254520,,000666           JEN      @   CH6            ;
                       CH7:
000710 / 000000,,000000                                       ;
000711 / 333000,,024464        SKIPLE      024464             ;;CLOCK INTERRUPT?
000712 / 254000,,047013          JRST      047013             ;;YES.
000713 / 335000,,024464        SKIPGE      CLKFLG             ;
000714 / 254000,,047010          JRST      047010             ;;SPECIAL ENTRY FOR USRXIT KLUDGE
000715 / 254520,,000710           JEN      @   CH7            ;
                       ; CHANNEL ROUTINES FOR P2
                       P2CH1:
000716 / 000000,,000000                                       ;
                       ADJMP:
000717 / 255000,,151130          JFCL      151130             ;; SERVE IT! (TURNED INTO JRST WHEN RUNNING)
000720 / 724700,,002000         CONSZ  DAC,002000             ;; NEW DA CONVERTER INTERRUPTING?
                       DACJMP:
000721 / 254000,,125520          JRST      125520             ;; YES
000722 / 724300,,000040         CONSZ  ADC,000040             ;; NEW AD CONVERTER INTERRUPTING?
                       ADCJMP:
000723 / 254000,,125071          JRST      125071             ;; YES, GO SERVICE
000724 / 254520,,000716           JEN      @ P2CH1            ;
                       P2CH2:
000725 / 000000,,000000                                       ;
000726 / 744300,,000010         CONSZ  XGP,000010             ;;XGP INTERFACE INTERRUPTING?
000727 / 254000,,110505          JRST      110505             ;;YES. PROCESS INTERRUPT.
000730 / 254520,,000725           JEN      @ P2CH2            ;
                       P2CH3:
000731 / 000000,,000000                                       ;
000732 / 700700,,400000         CONSZ   PI,400000             ;; POWER FAILURE?
000733 / 254000,,041172          JRST      041172             ;; OH DEAR!!
                       P2RCON:
000734 / 700700,,100000         CONSZ   PI,100000             ;; PARITY ERROR MAYBE?
000735 / 254000,,040406          JRST      040406             ;; P2 PARITY ROUTINES
                       AP2CON:
000736 / 700300,,631200         CONSZ  APR,631200             ;; APR FLAG BITS FOR P2(CHECKS PC CHNG ENB)
000737 / 254000,,046260          JRST      046260             ;; GO TO P2 APR ROUTINES
000740 / 254520,,000731           JEN      @ P2CH3            ;
                       ; MORE P2 INTERRUPT ROUTINES
                       P2CH4:
000741 / 000000,,000000                                       ;
                       P2CH4S:
000742 / 202740,,002276         MOVEM   17,002276             ;;SAVE AC'S FOR XGPSER COMPILER
152736 / 254520,,000741           JEN      @ P2CH4            ;
000743 / 200740,,152736          MOVE   17,152736             ;
000744 / 202740,,000760         MOVEM   17,000760             ;;SET THE EXIT INSTRUCTION TO NORMAL
000745 / 201740,,002257         MOVEI   17,CH4SA2             ;
000746 / 251740,,002275           BLT   17,002275             ;
000747 / 205740,,017046         MOVSI   17,017046             ;;GET OLD AC'S FROM COMPILER
000750 / 251740,,000017           BLT   17,    17             ;
000751 / 254020,,000752          JRST      @X2DISP            ;
                       X2DISP:
000752 / 000000,,000753                                       ;;JSR HERE TO CO-ROUTINE COMPILER
000753 / 202740,,017065         MOVEM   17,017065             ;
000754 / 201740,,017046         MOVEI   17,XGPSAC             ;
000755 / 251740,,017064           BLT   17,017064             ;
000756 / 205740,,002257         MOVSI   17,CH4SA2             ;
000757 / 251740,,000017           BLT   17,    17             ;
                       P2CH4E:
000760 / 254520,,000741           JEN      @000741            ;;CHANNEL 4 EXIT LOCATION.  CLOBBERED BY CH2.
                       P2CH5:
000761 / 000000,,000000                                       ;
                       PTRCN2:
000762 / 710700,,000000         CONSZ  PTR,                   ;; PTR ON THIS PROCESSOR?
000763 / 254000,,124401          JRST      124401             ;; YES, SERVICE IT
000764 / 254520,,000761           JEN      @ P2CH5            ;
                       P2CH6:
000765 / 000000,,000000                                       ;
                       PTPCN2:
000766 / 710300,,000000         CONSZ  PTP,                   ;; PTP ON THIS PROCESSOR?
000767 / 254000,,124126          JRST      PTPINT             ;
000770 / 254520,,000765           JEN      @ P2CH6            ;
                       P2CH7:
000771 / 000000,,000000                                       ;
000772 / 333000,,025702        SKIPLE      025702             ;; APR CLOCK INTERRUPT
000773 / 254000,,047047          JRST      CL2INT             ;
000774 / 335000,,025702        SKIPGE      025702             ;
000775 / 254000,,047044          JRST      CL2IN0             ;
000776 / 254520,,000771           JEN      @ P2CH7            ;
                       ;CHANNEL SAVE AND RESTORE CODE.
                       ;  AGAIN, THESE DEPEND ON THE CHANNEL VALUES.
                       CH1SAV:
000777 / 000000,,000000                                       ;;JSR HERE
001000 / 202740,,001466         MOVEM   17,001466             ;
001001 / 201740,,001447         MOVEI   17,CH1SAC             ;
001002 / 251740,,001465           BLT   17,001465             ;
151624 / 777700,,001046          IOWD INTPLN,CH1PDL           ;
001003 / 200140,,151624          MOVE    P,151624             ;
001004 / 201540,,000000         MOVEI  PID,                   ;
001005 / 260160,,000777         PUSHJ    P,@CH1SAV            ;
                       CH1RET:
001006 / 205740,,001447         MOVSI   17,CH1SAC             ;
001007 / 251740,,000017           BLT   17,    17             ;
001010 / 254520,,000611           JEN      @   CH1            ;
                       DTCSAV:
                       MTCSAV:
                       CH4SAV:
001011 / 000000,,000000                                       ;;JSR HERE
001012 / 202740,,001506         MOVEM   17,001506             ;
001013 / 201740,,001467         MOVEI   17,CH4SAC             ;
001014 / 251740,,001505           BLT   17,001505             ;
151625 / 777700,,001146          IOWD INTPLN,CH4PDL           ;
001015 / 200140,,151625          MOVE    P,151625             ;
001016 / 201540,,000000         MOVEI  PID,                   ;
001017 / 260160,,001011         PUSHJ    P,@CH4SAV            ;
                       CH4RET:
001020 / 205740,,001467         MOVSI   17,CH4SAC             ;
001021 / 251740,,000017           BLT   17,    17             ;
001022 / 254520,,000632           JEN      @   CH4            ;
                       KBDSAV:
                       SCNSAV:
                       CDRSAV:
                       LPTSAV:
                       PKSAV:
                       CH5SAV:
001023 / 000000,,000000                                       ;;JSR HERE.
001024 / 202740,,001526         MOVEM   17,001526             ;
001025 / 201740,,001507         MOVEI   17,CH5SAC             ;
001026 / 251740,,001525           BLT   17,001525             ;
151626 / 777700,,001246          IOWD INTPLN,CH5PDL           ;
001027 / 200140,,151626          MOVE    P,151626             ;
001030 / 201540,,000000         MOVEI  PID,                   ;
001031 / 260160,,001023         PUSHJ    P,@CH5SAV            ;
                       CH5RET:
001032 / 205740,,001507         MOVSI   17,CH5SAC             ;
001033 / 251740,,000017           BLT   17,    17             ;
001034 / 254520,,000646           JEN      @   CH5            ;
                       DSKSAV:
                       TVSAV:
                       ELFSAV:
                       ELDSAV:
                       CH6SAV:
001035 / 000000,,000000                                       ;;JSR HERE.
001036 / 202740,,001546         MOVEM   17,001546             ;
001037 / 201740,,001527         MOVEI   17,CH6SAC             ;
001040 / 251740,,001545           BLT   17,001545             ;
151627 / 777700,,001346          IOWD INTPLN,CH6PDL           ;
001041 / 200140,,151627          MOVE  PDP,151627             ;
151676 / 000000,,000000                                       ;
001042 / 200540,,151676          MOVE  PID,151676             ;
001043 / 260160,,001035         PUSHJ  PDP,@CH6SAV            ;
                       CH6RET:
001044 / 205740,,001527         MOVSI   17,CH6SAC             ;
001045 / 251740,,000017           BLT   17,    17             ;
001046 / 254520,,000666           JEN      @   CH6            ;
                       CH1PDL:
                       CH4PDL:
                       CH5PDL:
                       CH6PDL:
                       CH1SAC:
                       CH4SAC:
                       CH5SAC:
                       CH6SAC:
                       ; P2 PI CHANNEL AC SAVE AND RESTORE ROUTINES
                       ADCSAV:
                       DACSAV:
                       CH1SV2:
001547 / 000000,,000000                                       ;
001550 / 202740,,002236         MOVEM   17,002236             ;
001551 / 201740,,002217         MOVEI   17,CH1SA2             ;
001552 / 251740,,002235           BLT   17,002235             ;
151630 / 777700,,001616          IOWD INTPLN,CH1PD2           ;
001553 / 200140,,151630          MOVE  PDP,151630             ;
151732 / 000000,,001216                                       ;
001554 / 200540,,151732          MOVE  PID,151732             ;
001555 / 260160,,001547         PUSHJ  PDP,@CH1SV2            ;
001556 / 205740,,002217         MOVSI   17,CH1SA2             ;
001557 / 251740,,000017           BLT   17,    17             ;
001560 / 254520,,000716           JEN      @ P2CH1            ;
                       XGPSAV:
                       CH2SV2:
001561 / 000000,,000000                                       ;
001562 / 202740,,002256         MOVEM   17,002256             ;
001563 / 201740,,002237         MOVEI   17,CH2SA2             ;
001564 / 251740,,002255           BLT   17,002255             ;
151631 / 777700,,001716          IOWD INTPLN,CH2PD2           ;
001565 / 200140,,151631          MOVE    P,151631             ;
151732 / 000000,,001216                                       ;
001566 / 200540,,151732          MOVE  PID,151732             ;
001567 / 260160,,001561         PUSHJ    P,@CH2SV2            ;
001570 / 205740,,002237         MOVSI   17,CH2SA2             ;
001571 / 251740,,000017           BLT   17,    17             ;
001572 / 254520,,000725           JEN      @ P2CH2            ;
                       CH5SV2:
001573 / 000000,,000000                                       ;
001574 / 202740,,002316         MOVEM   17,002316             ;
001575 / 201740,,002277         MOVEI   17,CH5SA2             ;
001576 / 251740,,002315           BLT   17,002315             ;
151632 / 777700,,002016          IOWD INTPLN,CH5PD2           ;
001577 / 200140,,151632          MOVE  PDP,151632             ;
151732 / 000000,,001216                                       ;
001600 / 200540,,151732          MOVE  PID,151732             ;
001601 / 260160,,001573         PUSHJ  PDP,@CH5SV2            ;
001602 / 205740,,002277         MOVSI   17,CH5SA2             ;
001603 / 251740,,000017           BLT   17,    17             ;
001604 / 254520,,000761           JEN      @ P2CH5            ;
                       CH6SV2:
001605 / 000000,,000000                                       ;
001606 / 202740,,002336         MOVEM   17,002336             ;
001607 / 201740,,002317         MOVEI   17,CH6SA2             ;
001610 / 251740,,002335           BLT   17,002335             ;
151633 / 777700,,002116          IOWD INTPLN,CH6PD2           ;
001611 / 200140,,151633          MOVE  PDP,151633             ;
151732 / 000000,,001216                                       ;
001612 / 200540,,151732          MOVE  PID,151732             ;
001613 / 260160,,001605         PUSHJ  PDP,@CH6SV2            ;
001614 / 205740,,002317         MOVSI   17,CH6SA2             ;
001615 / 251740,,000017           BLT   17,    17             ;
001616 / 254520,,000765           JEN      @ P2CH6            ;
                       ; P2 INTERRUPT AC STORAGE AND PD LISTS
                       CH1PD2:
                       CH2PD2:
                       ;CH4PD2:	BLOCK INTPLN
                       CH5PD2:
                       CH6PD2:
                       CH1SA2:
                       CH2SA2:
                       CH4SA2:
                       CH5SA2:
                       CH6SA2:
                       ; INDIRECT AC SAVE LOCATIONS FOR 2-PROC SYSTEM
                       PTPSAV:
002337 / 000000,,001035                                       ;
                       PTRSAV:
002340 / 000000,,001023                                       ;
                       ADSAV:
002341 / 000000,,000777                                       ;
                       ; THESE ARE BLT'ED UP THERE FOR 2-PROC MODE
                       ALTSAV:
002342 / 000000,,001605                                       ;
002343 / 000000,,001573                                       ;
002344 / 000000,,001547                                       ;
                       ; HERE WE DEFINE THE CHANNEL NUMBERS, CHANNEL TRAP LOCATIONS AND
                       ; THE PI CHANNEL ON AND OFF BITS
002345 /               ;: OUTER[J17,SYS] EOF.
002345 /               ;: JOBDAT[J17,SYS]
                       ;;BEGIN JOBDAT - JOB DATA AREA
                       ;THIS AREA PROVIDES STORAGE OF ITEMS OF INTEREST TO BOTH
                       ;THE MONITOR AND THE USER
                       ;MACRO TO DEFINE SYMBOLS FOR MONITOR USE ONLY
                       ;THESE MAY BE CHANGED TO SUIT MONITOR
                       ;MACRO TO DEFINE SYMBOLS FOR USER USE
                       ;THESE CANNOT BE CHANGED WITHOUT INVALIDATING OLD SAVED FILES
                       ;MACRO TO DEFINE PARAMETERS OF INTEREST TO MONITOR ONLY
                       ;THESE MAY BE CHANGED TO SUIT MONITOR
                       ;MUST ASSEMBLE WITH SYSPAR TAPE FIRST
                       ;IE RELATIVE 0-17 IN USER AREA
                       ;WHEN JOB IS INACTIVE. THESE ARE EITHER THE
                       ;USERS AC IF JOB WAS STOPPED IN USER MODE
                       ;OR ARE THE EXEC IF STOPED IN EXEC MODE
                       ;0-16 ALSO STORED HERE ON CLK INTERRUPTS
                       ;42 UNUSED (PLEASE SEE JBR OR BH BEFORE SNARFING)
                       ;RH=APR CONSO FLAGS FOR USER APR TRAPPING
                       ;SET BY CALL [SIXBIT /APRENB/]
                       ;ONLY JOBJDA...JOBJDA+C(JOBHCU) ARE COPIED INTO
                       ;MONITOR WHEN JOB IS RUN. 0 MEANS NONE OR
                       ;CHAN. 0 IN USE, -1 MEANS SAVEGET HAS ACTIVE IO
                       ;LH=UUOS DONE SO FAR,RH=ADR. OF DEVICE DATA BLOCK IN MONITOR
                       ;USED BY ANYACT ROUT. IN CORE1
                       ;SET BY LOADER, NOT YET USED BY DDT
                       ;RH=STARTING ADDRESS OF USER PROGRAM
                       ;USED BY MONITOR TO ASSIGN I/O BUFFERS IN TOP
                       ;OF USER AREA
                       ;RESTORE FROM HERE ON GET
                       ;D OR E COMMANDS
                       ;ENABLED BY APRENB UUO
                       ;STARTC COMMANDS
                       ;RH=FIRST LOC AFTER FIRST FORTRAN 4 BLOCK DATA
                       ;TO BE USED FOR JOB CHAINING
                       ;134-137 USED BY LOADER FOR BLT TO MOVE PROGRAM DOWN(CAN BE REMOVED)
                       ;;;	BEND
002345 /               ;: JOBDAT[J17,SYS] EOF.
002345 /               ;: ALLDAT[J17,SYS]
                       ;TEMP STORAGE &C. FOR DSKSER
                       ;PACKAD IS A TABLE THAT CONTAINS THE LAST LEGAL PHYSICAL TRACK NUMBER FOR
                       ;ANY GIVEN DISK PACK.
002345 / 777777,,777777                                       ;;FOR REFERENCE TO PACKAD-1
                       PACKAD:
002346 / 000000,,035537                                       ;;LAST LEGAL TRACK IN THIS PACK
002347 / 000000,,073277                                       ;;LAST LEGAL TRACK IN THIS PACK
002350 / 000000,,131037                                       ;;LAST LEGAL TRACK IN THIS PACK
002351 / 000000,,166577                                       ;;LAST LEGAL TRACK IN THIS PACK
                       ;NCYLSH IS A TABLE CONTAINING THE NUMBER OF CYLINDERS FOR EACH PACK
                       ;EACH ENTRY IS SHIFTED LEFT 4 BITS.  USED AT READDN IN HPIC
                       NCYLSH:
002352 / 000000,,031000                                       ;
002353 / 000000,,031000                                       ;
002354 / 000000,,031000                                       ;
002355 / 000000,,031000                                       ;
002356 /                 ;::   BEGIN STANFO.DSKDAT.
                       ;QBEGIN TO QUEND ZEROED BY DSKSER INITIALIZATION
                       QBEGIN:
                       QEND:
002406 / 000000,,000000                                       ;
                       QALT:
002407 / 000000,,000000                                       ;;0 SELECTS UDP QUEUE, -1 SELECTS DISK QUEUE
                       QUBEG:
                       QUEND:
002420 / 000000,,000000                                       ;
                       MIPTR:
                       MOPTR:
                       MQEND:
002425 / 000000,,002406                                       ;
002426 / 000000,,002420                                       ;
                       MQBEG:
002427 / 000000,,002356                                       ;
002430 / 000000,,002410                                       ;
                       DFBUSY:
002431 / 000000,,000000                                       ;;FLAG TO INDICATE I-SUBR ACTIVITY.
                       DQCNT:
002432 / 000000,,000000                                       ;;NUMBER OF LOSERS CURRENTLY IN DISK QUEUE
                       TFRRTN:
002433 / 000000,,000000                                       ;;WHERE IN I-SUBR TO RTN TO WHEN XFER DONE
                       INTRTN:
002434 / 000000,,000000                                       ;;WHERE TO GO TO DISMISS INTERRUPT
                       DSKACS:
                       DSKPDL:
                       DSKSV:
002525 / 000000,,000000                                       ;
002526 / 202740,,001546         MOVEM   17,001546             ;
002527 / 201740,,001527         MOVEI   17,UUOACS             ;
002530 / 251740,,001545           BLT   17,001545             ;;SAVE USER'S ACS IN COMMON CH6 AREA.
151640 / 777730,,002454           XWD -50,DSKPDL-1            ;
002531 / 200140,,151640          MOVE    3,151640             ;
002532 / 260160,,002525         PUSHJ    3,@002525            ;;SERVICE INTERRUPT.
002533 / 205740,,001527         MOVSI   17,001527             ;;RETURN HERE TO DISMISS;
002534 / 251740,,000017           BLT   17,000017             ;;RESTORE USER'S AC'S.
002535 / 254520,,000666           JEN      @DSKCHL            ;
                       DSKEDD:
002536 / 000000,,000000                                       ;;ERROR VERSION OF ABOVE
                       ACDDB:
002537 / 000000,,000000                                       ;;LAST DDB FOR BAD AUDIT
                       SWPDDB:
002540 / 000000,,000000                                       ;;UDP DDB FOR SWAPPING
                       ERRBIT:
002541 / 000000,,000000                                       ;;ERROR BITS FOR LAST XFER
                       DSKERB:
002542 / 000000,,000000                                       ;;ERROR BITS (LH=IOP, RH=DISC)
                       DSKJB:
002543 / 000000,,000000                                       ;
                       DSKMA:
002544 / 000000,,000000                                       ;
                       DXB:
002545 / 000000,,000000                                       ;;CURRENT DDB
                       DXC:
002546 / 000000,,000000                                       ;;CURRENT TFRCTL
                       DXJ:
002547 / 000000,,000000                                       ;;JOB NUMBER
                       DXP:
002550 / 000000,,000000                                       ;;LAST STACK PTR
                       DXS:
002551 / 000000,,000000                                       ;;CURRENT TFRSEC
                       DXW:
002552 / 000000,,000000                                       ;;CURRENT TFRIOW
                       SYSBUF:
                       SYSDTA:
                       QBUF:
                       BKIN:
007253 / 000000,,000000                                       ;;PRESENT OCCUPANT OF SYSBUF
                       DFTEMP:
007254 / 000000,,000000                                       ;;SCRATCH CELL.
                       SATDIR:
007255 / 777777,,777777                                       ;;I/O DIRECTION. USED BY ACISAT ETC.
                       ;-1:READ    0:WRITE	THE SAT TABLE.
                       ;SAT TABLE AS STORED ON BLOCK 0 OF THE DISK
                       SATTAB:
007256 / 000000,,000000                                       ;;BLOCKS USED ON DISK
007257 / 000000,,000000                                       ;;NUMBER OF LAST BLOCK ASSIGNED
007260 / 000000,,000000                                       ;;IDENT.NO. OF ALL DISK INFO
007261 / 000000,,000000                                       ;;XOR CHECKSUM OF SAT BITS BELOW
007262 / 000000,,000000                                       ;;NO. OF BAD TRACKS IN TABLE BELOW.
007263 / 000000,,000000                                       ;;CHECK (SUM) OF TABLE.
007341 / 000000,,000000                                       ;;CONTAINS 'SATID ' FOR NEW UDPS
007342 / 000000,,000000                                       ;;TIME SAT LAST WRITTEN
007343 / 000000,,000000                                       ;;DATE SAT LAST WRITTEN
                       P1OFF:
007344 / 000000,,000000                                       ;;# PDP-10 POWER FAILURES	(MAIN SAT ONLY!)
                       P2OFF:
007345 / 000000,,000000                                       ;;# OF PDP-6 POWER FAILURES	(MAIN SAT ONLY)
007346 / 000000,,000000                                       ;;BUFFER WORD.			(NOT NEEDED)
                       SATEND:
011732 / 000000,,000000                                       ;;END OF MAIN BIT TABLE (UDP SATS ARE DIFFERENT SIZE)
                       ;HERE ARE THE MAGIC TABLES FOR MULTIPLE FILE STRUCTURES. REG/BH 7-14-74
                       SATADR:
011733 / 000000,,007256                                       ;;CORE ADDRESS OF SAT FOR EACH STRUCTURE
011734 / 000000,,000000                                       ;
                       TSATSZ:
011735 / 000000,,002454                                       ;;LENGTH OF SAT FOR EACH STRUCTURE
011736 / 000000,,000742                                       ;
                       BFSET:
011737 / 000000,,000000                                       ;;BLOCK NUMBER OFFSET TO FIRST BN IN STR
011740 / 000000,,131040                                       ;;OFFSET TO FIRST BLOCK OF THIS UDP
                       BFSETS:
011741 / 000000,,000000                                       ;;SAME AS BFSET ONLY SHIFTED LEFT 6 BITS
011742 / 000013,,104000                                       ;
                       LSTRKT:
011743 / 000000,,166577                                       ;;MAX TRK FOR GODMOD--DSK GETS ALL PACKS
011744 / 000000,,035537                                       ;;BUT EACH UDP ONLY GETS ITSELF
                       DKDBML:
011745 / 000000,,011756                                       ;;ADDRESSES OF MODEL DDBS
011746 / 000000,,012066                                       ;
                       LSTBTB:
011747 / 000000,,131037                                       ;
011750 / 000000,,035537                                       ;
                       UDPOWN:
011751 / 777777,,777777                                       ;
                       ;JOB # OF PRIVATE OWNER.  -1 IF PUBLIC
                       ;UDPCNT THRU SATMOD+UPACKS ZEROED BY DSKINI
                       UDPCNT:
                       SATMOD:
                       ;DSKDDB: THE DUMMY DEVICE DATA BLOCK IS THE FIRST ONE IN THE CHAIN.
011755 / 300000,,000000                                       ;;EXTRA WORD FOR MORE GOOD BITS
                       DSKDDB:
                       ;DEVNAM
011757 / 000074,,000201           XWD =60*HUNGST,201	         ;
                       ;DEVCHR  PUNIT=0!
011760 / 000000,,000000                                       ;;DEVIOS
011761 / 012066,,074756           XWD UDP1DD,DSKDSP	          ;
                       ;DEVSER. NEXT DDB IS UDP.
011762 / 201007,,154403           XWD DVOUT+DVIN+DVDIR+DVDSK+DVLNG,154403	 ;
                       ;DEVMOD
011763 / 000000,,000000                                       ;;DEVLOG
011764 / 000000,,000000                                       ;;DEVBUF
011765 / 000007,,000000           XWD PROG,0		                ;
                       ;DEVIAD
011766 / 000007,,000000           XWD PROG,0		                ;
                       ;DEVOAD
                       ;NEXT 8 LOCATIONS COPIED FOR AUDITOR
                       ;	INTERNAL FILNAM
011767 / 000000,,000000                                       ;
                       ;	INTERNAL FILEXT
011770 / 000000,,000000                                       ;
                       ;	INTERNAL FILPRO
011771 / 000000,,000000                                       ;
                       ;	INTERNAL FILPPN
011772 / 000000,,000000                                       ;
                       ;	INTERNAL FILLOC
011773 / 000000,,000000                                       ;
                       ;	INTERNAL FILLNG
011774 / 000000,,000000                                       ;
                       ;	INTERNAL REFTIM
011775 / 000000,,000000                                       ;
                       ;	INTERNAL DMPTIM
011776 / 000000,,000000                                       ;
                       ;	INTERNAL USETP
011777 / 000000,,000000                                       ;
                       ;	INTERNAL UFDPRO
012000 / 000000,,000000                                       ;;PROTECTION OF THE UFD FROM WHICH FILE CAME
                       ;	INTERNAL UFDPR1
012001 / 000000,,000000                                       ;;TEMP COPY OF ABOVE WHILE DOING RENAME
                       ;ALSO, RH← LH(DQINFO+3) OF UFD LAST ACCESSED
                       ;	INTERNAL UFDPPN
012002 / 000000,,000000                                       ;;PPN OF LAST UFD USED
                       ;	INTERNAL UFDADR
012003 / 000000,,000000                                       ;;DISK ADDR OF LAST UFD USED
                       ;	INTERNAL ACCNAM
012004 / 000000,,000000                                       ;
                       ;	INTERNAL ACCEXT
012005 / 000000,,000000                                       ;
                       ;	INTERNAL ACCPRO
012006 / 000000,,000000                                       ;
                       ;	INTERNAL ACCPPN
012007 / 000000,,000000                                       ;
                       ;	INTERNAL SRCNAM
012010 / 000000,,000000                                       ;
                       ;	INTERNAL SRCEXT
012011 / 000000,,000000                                       ;
                       ;	INTERNAL SRCPRO
012012 / 000000,,000000                                       ;
                       ;	INTERNAL SRCLOC
012013 / 000000,,000000                                       ;
                       ;	INTERNAL SRCTMP
012014 / 000000,,000000                                       ;
                       ;	INTERNAL DMPBUF
012015 / 000000,,000000                                       ;
                       ;	INTERNAL TFRSEC
012016 / 000000,,000000                                       ;
                       ;	INTERNAL TFRIOW
012017 / 000000,,000000                                       ;
                       ;	INTERNAL TFRCTL
012020 / 000000,,000000                                       ;
                       ;	INTERNAL DSKFAD
012021 / 000000,,000000                                       ;
                       ;	INTERNAL DSKLAD
012022 / 000000,,000000                                       ;
                       ;	INTERNAL CORFAD
012023 / 000000,,000000                                       ;
                       ;	INTERNAL CORLAD
012024 / 000000,,000000                                       ;
                       ;	INTERNAL DDNAM
012025 / 000000,,000000                                       ;
                       ;	INTERNAL DDEXT
012026 / 000000,,000000                                       ;
                       ;	INTERNAL DDPRO
012027 / 000000,,000000                                       ;
                       ;	INTERNAL DDPPN
012030 / 000000,,000000                                       ;
                       ;	INTERNAL DDLOC
012031 / 000000,,000000                                       ;
                       ;	INTERNAL DDLNG
012032 / 000000,,000000                                       ;
                       ;	INTERNAL DREFTM
012033 / 000000,,000000                                       ;
                       ;	INTERNAL DDMPTM
012034 / 000000,,000000                                       ;
                       ;	INTERNAL DGRP1R
012035 / 000000,,000000                                       ;;	FIRST USER RCRD NO. THIS GRP
                       ;	INTERNAL DNXTGP
012036 / 000000,,000000                                       ;;	BLOCK NUMBER OF NEXT GROUP
                       ;	INTERNAL DSATID
012037 / 000000,,000000                                       ;
                       ;	INTERNAL DQINFO
012040 / 000000,,000000                                       ;;START OF SPECIAL STORAGE FOR LOGIN ETC.
                       ;	INTERNAL DOFFST
012044 / 000000,,000000                                       ;;RECORD OFFSET
012065 / 360000,,000000                                       ;
                       UDP1DD:
012067 / 000036,,004201                                       ;
012070 / 000000,,000000                                       ;
012071 / 017175,,074756                                       ;;FOR OLD STYLE USE UDPDSP INSTEAD!
012072 / 301007,,154403           XWD DVDSK!DVUDP!DVOUT!DVIN!DVDIR!DVLNG,154403	 ;
                       ;DVDSK!
012073 / 000000,,000000                                       ;
012074 / 000000,,000000                                       ;
012075 / 000007,,000000           XWD PROG,0		                ;
012076 / 000007,,000000           XWD PROG,0		                ;
012077 / 000000,,000121                                       ;
                       HA:
012220 / 000000,,000000                                       ;
012221 / 000000,,000000                                       ;
012222 / 000000,,000000                                       ;
                       ;HERE ARE VARIOUS PIECES OF DATA.
                       PMPCNI:
012223 / 000000,,000000                                       ;
                       DSKLRN:
012224 / 000000,,000000                                       ;;LOGICAL DISK ADDRESS FOR THIS XFER.
                       DSKHNG:
012225 / 000000,,000000                                       ;;DISK HUNG COUNTING CELL, COUNTED DOWN BY DEVCHK
                       DHNGST:
012226 / 000000,,000000                                       ;;DSKHNG SET FROM HERE ON EACH DSK INTERRUPT
                       DRAUFO:
012227 / 000000,,000000                                       ;
                       DSKOPS:
                       DSKOVC:
012330 / 000000,,000000                                       ;
                       STAC:
012331 / 000000,,000000                                       ;
                       STAC1:
012332 / 000000,,000000                                       ;
                       SAC3:
012333 / 000000,,000000                                       ;
                       SDAT:
012334 / 000000,,000000                                       ;
                       SAVP:
012335 / 000000,,000000                                       ;
                       INTPDL:
012336 / 000000,,000000                                       ;
                       SKCMD:
012337 / 000006,,036007                                       ;;SEEK COMMAND.
                       SKWCMA:
012340 / 000000,,012531                                       ;
                       SCCMD:
012341 / 000006,,036461                                       ;;SEARCH COMMAND,WITH CHAIN & SKIP IF OFF
                       SCWCMA:
012342 / 000000,,012533                                       ;
                       ;FOLLOWING MUST BE IN ORDER:
                       RCMD:
012343 / 000006,,022006                                       ;;READ COMMAND
                       WCMD:
012344 / 000006,,022005                                       ;;WRITE COMMAND
012345 / 000006,,016555                                       ;;"USE" MODE. SRCH KEY/DATA EQ-HI.
012346 / 000006,,016455                                       ;;"OWN" MODE. SRCH KEY/DATA EQ.
                       ;NEXT 2 LOCS ARE A TABLE!
012347 / 331000,,000001         SKIPL      000001             ;;READ END TEST
                       ENDTAB:
151656 / 777777,,000000                                       ;
012350 / 311040,,151656          CAML  TAC,151656             ;;WRITE END TEST
                       SNSCMD:
012351 / 000006,,034004                                       ;;SENSE COMMAND.(4 BYTE MODE)
                       SNWCMA:
012352 / 000000,,012353                                       ;
                       SNSDAT:
012361 / 000000,,000000                                       ;
                       RCALCM:
012362 / 000006,,000023                                       ;;RECALIBRATE THE SEEK HYDRAULICS.
                       RDHACM:
012363 / 000006,,034032                                       ;;READ HOME ADDRESS.(4 BYTE MODE)
                       NOPCMD:
012364 / 000006,,000003                                       ;;NO-OP COMMAND
                       ;COMMANDS FOR DIAGNOSTIC LOAD AND WRITE
                       DWCMD:
012365 / 000006,,036163                                       ;;DIAGNOSTIC WRITE
                       MSKCMD:
012366 / 000006,,022037                                       ;;SET FILE MASK
                       DLCMD:
012367 / 000006,,036123                                       ;;DIAGNOSTIC LOAD
                       RD1CMD:
012370 / 000006,,034104                                       ;;READ DIAGNOSTIC STATUS 1
                       FILMSK:
                       ;PERMIT DIAGNOSTIC WRITE COMMAND
                       ;COLLECT ERROR COUNTS HERE
                       ERRCL0:
012372 / 000000,,000000                                       ;
                       ERRCL1:
012373 / 000000,,000000                                       ;
                       ERRCL2:
012374 / 000000,,000000                                       ;
                       ERRCL3:
012375 / 000000,,000000                                       ;
                       ERRCL4:
012376 / 000000,,000000                                       ;
                       ERRSNS:
012377 / 000000,,000000                                       ;
                       ERRHA:
012400 / 000000,,000000                                       ;
                       ERRRCL:
012401 / 000000,,000000                                       ;
                       SHADPE:
012402 / 000000,,000000                                       ;
                       ;THESE ARE THE HARD ERROR MAXIMUMS!
                       MAXCL0:
012403 / 000000,,000100                                       ;
                       MAXCL1:
012404 / 000000,,000100                                       ;
                       MAXCL2:
012405 / 000000,,000100                                       ;
                       MAXCL3:
012406 / 000000,,000100                                       ;
                       MAXCL4:
012407 / 000000,,000100                                       ;
                       MAXSNS:
012410 / 000000,,000010                                       ;
                       MAXHA:
012411 / 000000,,000010                                       ;
                       MAXRCL:
012412 / 000000,,000010                                       ;
                       ;THESE ARE THE MASKS FOR WHEN TO PRINT AN ERROR CLASS
                       ;THEY MUST BE -2**N-1 FOR TDNE
                       TYMSK0:
012413 / 777777,,777767                                       ;
                       TYMSK1:
012414 / 777777,,777767                                       ;
                       TYMSK2:
012415 / 777777,,777767                                       ;
                       TYMSK3:
012416 / 777777,,777767                                       ;
                       TYMSK4:
012417 / 777777,,777757                                       ;
                       ;COLLECT TOTAL COUNTS HERE
                       TOTCL0:
012420 / 000000,,000000                                       ;
                       TOTCL1:
012421 / 000000,,000000                                       ;
                       TOTCL2:
012422 / 000000,,000000                                       ;
                       TOTCL3:
012423 / 000000,,000000                                       ;
                       TOTCL4:
012424 / 000000,,000000                                       ;
                       ;SET THESE FLAGS TO FORCE TYPEOUT OF EVERY ERROR
                       TYPCL0:
012425 / 000000,,000000                                       ;
                       TYPCL1:
012426 / 000000,,000000                                       ;
                       TYPCL2:
012427 / 000000,,000000                                       ;
                       TYPCL3:
012430 / 000000,,000000                                       ;
                       TYPCL4:
012431 / 000000,,000000                                       ;
                       DSKACT:
012432 / 000000,,000000                                       ;;FLAG DISK CHANNEL ACTIVE
                       DEATH:
012433 / 000000,,000000                                       ;;ERROR ROUTINE HAS DECREED DEATH TO THE INFIDEL'S
                       TYPANY:
012434 / 000000,,000000                                       ;
                       SNSTYP:
012435 / 000000,,000000                                       ;
                       CSTOP:
012436 / 000000,,000000                                       ;
                       ERRCMD:
012437 / 000000,,000000                                       ;
                       CNISAV:
012440 / 000000,,000000                                       ;
                       XDSKMA:
012441 / 000000,,000000                                       ;
                       HNGFLG:
012442 / 000000,,000000                                       ;
                       CT:
012443 / 000000,,000000                                       ;
                       LCT:
012444 / 000000,,000000                                       ;
                       WCT:
012445 / 000000,,000000                                       ;
                       HAFLAG:
012446 / 000000,,000000                                       ;
                       DSKFLG:
012447 / 000000,,000000                                       ;
                       D2INT:
012450 / 000000,,000000                                       ;;JSR HERE FROM 144
012451 / 202040,,012541         MOVEM  TAC,  TSAV             ;
012452 / 750240,,000001          CONI  PMP,000001             ;;GET STATUS
012453 / 606040,,460000          TRNN  TAC,460000             ;;NEW STATUS OR UNUSUAL END?
012454 / 254000,,012476          JRST      012476             ;;NO.  PERHAPS CHDEMP
012455 / 430040,,012551           XOR  TAC,TSTXOR             ;
012456 / 616040,,012552          TDNN  TAC,012552             ;;SKIP IF LOSING.
012457 / 606040,,000600          TRNN  TAC,000600             ;;ONE OF THESE OUGHT TO BE ON IF NEW STATUS
012460 / 254000,,012472          JRST      012472             ;;SOMETHING EVIL THIS WAY COMES.
012461 / 430040,,012551           XOR  TAC,012551             ;;RESTORE ORIGINAL CONI BITS FOR COROUTINES
012462 / 750600,,000200          CONO  IBM,000200             ;;CLEAR NEW STATUS
012463 / 750340,,200000         CONSO  PMP,200000             ;;GOT DEV END, CMD HLD EMPTY?
012464 / 254000,,012467          JRST        D2X1             ;
012465 / 254020,,012466          JRST      @012466            ;;CMD HLD EMPTY.  CONTINUE IN COROUTINE
                       D2X:
012466 / 000000,,000000                                       ;
                       D2X1:
012467 / 750600,,000400          CONO  IBM,ACTCLR             ;
                       D2X2:
012470 / 250040,,012541          EXCH  TAC,  TSAV             ;
012471 / 254520,,012450          JRST   12,@ D2INT            ;
                       D2XE:
012472 / 430040,,012551           XOR  TAC,012551             ;;RESTORE CONI BITS
012473 / 750200,,460016          CONO  PMP,460016             ;;MAKE LOW PRIORITY CHANNEL HANDLE THIS
012474 / 250040,,012542          EXCH  TAC,012542             ;;STORE LOSING STATUS
012475 / 254000,,012470          JRST        D2X2             ;
                       ITEST:
012476 / 336000,,012432         SKIPN      012432             ;;SHOULD WE BE HERE AT ALL?
012477 / 254000,,012504          JRST      012504             ;;NO
012500 / 602040,,000020          TRNE  TAC,000020             ;;IS DISK INTERRUPTING AT ALL?
012501 / 602040,,000004          TRNE  TAC,000004             ;;IS HE IN LOWER CHANNEL?
012502 / 254000,,012504          JRST      D2BARF             ;
012503 / 254020,,012466          JRST      @012466            ;;ALL IS WELL?
                       D2BARF:
012504 / 250140,,023657          EXCH    P,023657             ;;SAVE P AND GET A PDL
012505 / 260140,,000316         PUSHJ    P,PUSHIT             ;
012506 / 260140,,044066         PUSHJ    P,DISMES             ;
012523 / 476000,,036035         SETOM      036035             ;
012524 / 260140,,043761         PUSHJ    P,043761             ;
012525 / 254200,,012526          HALT      012526             ;
012526 / 260140,,000341         PUSHJ    P, POPIT             ;
012527 / 250140,,023657          EXCH    P, ERRPD             ;
012530 / 254000,,012470          JRST        D2X2             ;
                       ;MORE DATA FOR D2CHN
                       SKDAT:
                       SCDAT:
                       XWCMA:
012535 / 000000,,000000                                       ;
                       LSTREC:
012536 / 000000,,000000                                       ;
                       ENDTST:
012537 / 000000,,000000                                       ;
                       XWRAP:
012540 / 000000,,000000                                       ;
                       TSAV:
012541 / 000000,,000000                                       ;
                       LSTAT:
012542 / 000000,,000000                                       ;
                       D2DONE:
012543 / 000000,,000000                                       ;
                       D2LUZ:
012544 / 000000,,000000                                       ;
                       LWCMA:
012545 / 000000,,000000                                       ;
                       LSTOP:
012546 / 000000,,000000                                       ;
                       XCMD:
012547 / 000000,,000000                                       ;
                       CHNEMP:
012550 / 000000,,000000                                       ;
                       TSTXOR:
012551 / 014000,,000020                                       ;;PACK NUMBER DPB'ED HERE
                       TSTBIT:
012552 / 037700,,453160                                       ;
                       SATID1:
012553 / 000000,,000000                                       ;;FIRST COPY OF SATID
                       SATID2:
012554 / 000000,,000000                                       ;;SECOND COPY OF SATID
012555 /                 ;::    BEND STANFO.DSKDAT.
012555 /                 ;::   BEGIN STANFO.DPYDAT.
                       ;; NOW SOME DISPLAY OPCODES AND MACROS FOR GENERATING DP INSTRS.
012555 / 012560,,000054           XWD .+3,DISRST+40           ;
                       ;PRGM. NORMALLY STARTED HERE. 
                       ;  RESTORE PRIOR STATE OF DP.
012560 / 000000,,000000                                       ;;PRGM IS STOPPED BY A JMS TO HERE.
012561 / 000000,,000000                                       ;
012562 / 000000,,000014                                       ;;CALL WHO LINE(IF ANY).
012563 / 000000,,000014                                       ;;HERE IS A JMP TO PAGE 0 OF PP.
012564 / 000000,,000014                                       ;
012565 / 012612,,000004           XWD ZZQ+LEB,DISJMS          ;
                       ;CALL THE LINE EDITOR.
012566 / 000000,,000014                                       ;;HERE A JMP TO PIECE OF GLASS CONT. BLK.
012567 / 000000,,000000                                       ;;HERE PRGM NORMALLY HALTS.
012570 / 400037,,770010                                       ;;;replace;;BYTE (12)1⊗(=11-0),¬(1⊗(=11-0)),DISSEL
012571 / 012562,,000020           XWD WHOCALL+ZZQ,DISJMP      ;
012572 / 000000,,000000                                       ;;NO. OF DPY THIS PRGM ATTACHED TO.
012573 / 777777,,777771                                       ;;NO. OF BLOCKS OF STORAGE HE CAN USE.
012574 / 000000,,000000                                       ;;PTR. TO CTRL. BLK. OF SELECTED P OF P.
012575 / 000000,,000000                                       ;
012576 / 000000,,400000                                       ;;BITS TELL STATE OF ACTIVATION OF P OF P'S.
012577 / 000000,,000000                                       ;;SAVED VERSION OF PRGACT.
012600 / 000000,,000000                                       ;;HIGHEST PG IN USE BY USER.
012601 / 000000,,000000                                       ;; FLAG THAT SAYS THIS BLOCK HAS A CLOCK REQUEST IN TO HAVE ITSELF KILLED, WHEN IT BECOMES FREE
                       ;FORGET THIS CELL ;Z(DPKTIM)	0	; WORD INDICATING TIME KEY WAS STRUCK
                       ;AND THIS ONE	  ;Z(DPGTIM)	0	; TIME GRAPHICS WENT OUT
012602 / 000000,,000000                                       ;; FLAG THAT SAYS THIS PROGRAM HEADER BELONGS TO A DETACHED JOB AND IS TO BE RELEASED
012603 / 000000,,000000                                       ;; COMMAND WORD FOR USER GRAPHICS TRANSFERS
012604 / 000000,,000000                                       ;; JUMP TO USER PROGRAM
012605 / 000000,,000000                                       ;; DUMMY COUNT WORD
012606 / 000000,,000000                                       ;; -1 IF HOLDING
012607 / 000000,,000000                                       ;; GARBAGE WORD. HOLDS EVERYTHING WHAT WON'T FIT ELSEWHERE
                       ; B0 1-PAGE PRINTER SIZE SET LAST BY CONSOLE COMMAND, 0-BY UUO
                       ; B1 SAME FOR PAGE PRINTER Y-POSITION.
                       ; B2 SAME FOR LINE HOLD COUNT
                       ; B3 SAME FOR GLITCH HOLD COUNT
                       ; B9-17 LINE HOLD COUNT
                       ; B18-26 GLITCH HOLD COUNT
                       ; B27-35 CHAR WHICH ACTIVATED LINED
012610 / 000000,,000000                                       ;; LINE HOLD COUNTDOWN
012611 / 000000,,000000                                       ;; GLITCH HOLD COUNTDOWN
012612 / 000000,,000000                                       ;;DP DOES A JMS TO HERE TO DISPLAY EDITOR BUFFER.
012613 / 000000,,000000                                       ;
012614 / 000000,,000000                                       ;;POINTER POSITION VECTOR FOR EDITOR POINTER.
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
012615 / 777777,,777773                                       ;
012615 / 777777,,777764                                       ;
                       ;DRAW THE POINTER.
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
012616 / 000000,,000012                                       ;
012616 / 000000,,000000                                       ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
012617 / 777777,,777773                                       ;
012617 / 000000,,000014                                       ;
012620 / 012613,,000054           XWD ZZQ+LEB+1,DISRST+40     ;
                       ;RESTORE BEAM POSTION.
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
012621 / 000000,,000000                                       ;
012621 / 000000,,000000                                       ;
                       ;LEFT MARGIN VECTOR... USED FOR SHIFTING LONG LINES.
012622 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012623 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012624 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012625 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012626 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012627 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012630 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012631 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012632 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012633 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012634 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012635 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012636 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012637 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012640 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012641 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012642 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012643 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012644 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012645 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012646 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012647 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012650 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012651 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012652 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012653 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012654 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012655 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012656 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012657 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012660 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
012661 / 012612,,000020           XWD ZZQ+LEB,DISJMP          ;
                       ;THE EDITOR BUFFER.
012662 / 000000,,000000                                       ;;HORIZONTAL POSITION OF POINTER (IN COLUMNS).
012663 / 000000,,000000                                       ;;LOGICAL POSITION OF POINTER, IN CHRS. FROM START OF LINE.
012664 / 000000,,000000                                       ;;NO. OF CHRS. IN LINE.
012665 / 000000,,000000                                       ;;POINTER TO LAST WORD OF BUFFER IN USE (ONE BEFORE THE RETURN JMP).
012666 / 000000,,000000                                       ;; SAVED HORIZONTAL POSITION
012667 / 000000,,000000                                       ;; NUMBER OF LINE EDITOR TASKS IN THE QUEUE
012670 / 000000,,000000                                       ;; NUMBER OF SCREEN REFRESH AND/OR HELP TASKS IN QUEUE.
012671 / 000000,,000000                                       ;; SAVED VALUE OF HORIZONTAL POSITION
012672 / 000000,,012656                                       ;
                       ;MAXIMUM ALLOWABLE VALUE OF LELWD (I.E., END OF BUFFER).
012673 / 000000,,000000                                       ;;REPEAT ARGUMENT.
012674 / 000000,,000000                                       ;; REPEAT ARGUEMENT SAVED FOR <ESC>G COMMAND AND ITS FRIENDS
012675 / 000000,,000000                                       ;;BYTE POINTER CORRESPNDING TO EDITOR POINTER.
012676 / 000000,,000000                                       ;;BYTE PTR. TO NEXT TAB IN LINE TO RIGHT OF CURRENT POS.
012677 / 000000,,000000                                       ;;NUMBER OF SPACES IN NEXT TAB.
012700 / 000000,,000000                                       ;; LINE EDITOR TELLS DPYKILL THAT A CHARACTER HAS BEEN TYPED HERE
012701 / 000000,,000000                                       ;; MEANS LINE EDITOR BUFFER IS NOW INVALID
012702 / 000000,,000000                                       ;; THIS IS SET BY A TRANSFER THAT IS ABORTED BECAUSE OF INVALID BUFFER
012703 / 000000,,000000                                       ;; NUMBER OF LONG-LINE CRLFS IN LINE
012704 / 000000,,000000                                       ;; VERTICAL POSITION OF LINE EDITOR LAST TIME IT WENT OUT
012705 / 000000,,000000                                       ;; HORIZONTAL POSITION OF LINE EDITOR
012706 / 000000,,000000                                       ;; NUMBER OF LINES IT TOOK LAST TIME IT WENT OUT.
012707 / 000000,,000000                                       ;; LAST CURSOR VERTICAL POSITION
012710 / 000000,,000000                                       ;; LAST CURSOR HORIZONTAL POSITION
012711 / 000000,,000000                                       ;; MEANS CLOCK REQUEST IS IN
012712 / 000000,,000000                                       ;; MEANS LINE EDITOR TEXT HAS CHANGED
012713 / 000000,,000000                                       ;; INDICATES A TRANSFER MISSED DUE TO BUFFER INVALID
012714 / 000000,,000000                                       ;; SAYS WHETHER AN <ESC>C HAS BEEN TYPED
012715 / 000000,,000000                                       ;; LINE NUMBER OF LINE EDITOR
012716 / 000000,,000000                                       ;; CURRENT CURSOR VERTICAL POSITION
012717 / 000000,,000000                                       ;; CURRENT CURSOR HORIZONTAL POSITION
012720 / 000000,,000000                                       ;; WHO LINE TIME,,JOB #
012721 / 000000,,000000                                       ;; TIME WHEN RUN TIME SHOULD BE UPDATED ON WHO LINE
012722 / 000000,,000000                                       ;;PTR. TO THE LETAB ENTRY FOR THIS DPY.
012723 / 000000,,000000                                       ;;
                       STRTBL:
                       ;GIVES NORMAL START POINT FOR ITS PROGRAM.
012563 / 000000,,000000                                       ;;STPTBL(-1) FOR HOLDING MESSAGE
                       STPTBL:
012572 / 000000,,000000                                       ;;STPTBL(DPYNUM)	FOR IDLE STATE
                       SELTBL:
                       RSTTBL:
                       LETAB:
                       DXFLAG:
012715 / 000000,,000000                                       ;;APAIR OF FLAGS FOR SYNCHRONIZING DP RESTARTING WITH
                       DRUNCT:
012716 / 000000,,000000                                       ;; NUMBER OF CURRENTLY RUNNING DISPLAY
                       SAVTAC:
012717 / 000000,,000000                                       ;; DPY NUMBER DURING ERROR TYPEOUT
                       DPCNI:
012720 / 000000,,000000                                       ;; DP CONI BITS
                       DPYPDL:
012721 / 777700,,012721          IOWD LCPDL,CLKPD             ;
                       ;SPECIAL CLOCK LEVEL PDL.
                       CLKPD:
013023 / 000000,,000000                                       ;
                       CLKQUE:
013024 / 000000,,000100                                       ;
                       CLKQ:
013624 / 000000,,013023                                       ;
013624 / 004400,,013023 POINT 36,00013023,35                  ;
                       ;MAIN PTR. TO CLK QUE.
                       WTFLG:
013625 / 000000,,000000                                       ;;IF -1, WE ARE SUSPENDING NORMAL CLK. SERVICE TO WAIT FOR FREE STG.
                       SVAC:
                       DPYMAP:
                       TBL:
                       ; PLACE TO BUILD BLOCK MAP FOR UPGMOVE
                       ERRP:
014113 / 000000,,000000                                       ;; ROUTINE THAT IS ENTERED WITH A JSA
014114 / 254000,,130173          JRST       ERRP2             ;
                       FREEHD:
014115 / 000000,,000000                                       ;
                       FSWTHD:
014116 / 000000,,000000                                       ;
                       FSWT2H:
014117 / 000000,,000000                                       ;
                       FREEC:
014120 / 000000,,000000                                       ;
                       FREETL:
014121 / 000000,,000000                                       ;
                       FRETOT:
014122 / 000000,,000000                                       ;
                       FSWC:
014123 / 000000,,000000                                       ;
                       CLKLVL:
014124 / 000000,,000000                                       ;; SAYS WE ARE AT CLOCK LEVEL
                       CLKQTM:
014125 / 000000,,000000                                       ;; TEMP CELL
                       FSW2C:
014126 / 000000,,000000                                       ;
                       ; DATA DISK DATA STORAGE
                       DDSTAR:
014127 / 000000,,000000                                       ;; UUO LEVEL SETS THIS TO START UP DD. SEEN BY APRINT.
                       DDCNT:
014130 / 300000,,000000                                       ;; NUMBER OF TIX THIS PROGRAM IS ALLOWED TO RUN BEFORE IT IS TIMED OUT.
                       DDDSP:
014131 / 000000,,000000                                       ;; THIS IS THE I-LEVEL DISPATCH ADDRESS.
                       DDRET:
014132 / 000000,,000000                                       ;; WE JUMP INDIRECT HERE TO RETURN FROM I-LEVEL
                       DDRTN:
014133 / 000000,,000000                                       ;; EVERYONE JSRS HERE TO RETURN
014134 / 254020,,014132          JRST      @ DDRET            ;
                       DDSAC1:
014135 / 000000,,000000                                       ;; ACCUMULATORS . . .
                       DDSAC2:
014136 / 000000,,000000                                       ;
                       DDSAC3:
014137 / 000000,,000000                                       ;
                       DDSTAC:
014140 / 000000,,000000                                       ;
                       DDSDAT:
014141 / 000000,,000000                                       ;
                       DDNXT:
014142 / 000000,,000000                                       ;; ADDRESS OF NEXT TASK TO BE DONE
                       DDCUR:
014143 / 000000,,000000                                       ;; DATA BLOCK ADDRESS CURRENTLY IN USE
                       DDCURT:
014144 / 000000,,000000                                       ;; TASK BLOCK ADDRESS CURRENTLY IN USE
                       DDCURQ:
014145 / 000000,,000000                                       ;; THIS IS WHERE I-LEVEL PUTS THE CONTROL BLOCK ADDRESS BEFORE DISMISSING
                       DDCOL:
014146 / 000000,,000000                                       ;; HERE WE KEEP COLUMN ADDRESSES
                       DDLST:
014147 / 000000,,000000                                       ;; ADDRESS OF LAST FRAME LOOKED AT
                       DDOFF:
014150 / 000000,,000000                                       ;; SET TO -1 TO INHIBIT DD TRANSFERS
                       DDQUE:
014151 / 000000,,000000                                       ;; HERE LIES THE DATA DISC QUEUE
                       DDSQ:
014152 / 000000,,000000                                       ;; WE SAVE THE ENTIRE TASK QUEUE HERE
                       DDLFD:
014153 / 000000,,000000                                       ;; WE SAVE THE FIELD WORD OF THE LAST FRAME HERE.
                       LEBFR:
014154 / 000000,,000046                                       ;
014154 / 000000,,000000                                       ;
014154 / 000000,,000002                                       ;
014154 / 000000,,000001                                       ;
014154 / 000000,,000002                                       ;
014154 / 000000,,000003                                       ;
014154 / 114000,,021234                                       ;
014155 / 000000,,000002                                       ;
014155 / 000000,,000000                                       ;
014155 / 000000,,000000                                       ;
014155 / 000000,,000003                                       ;
014155 / 000000,,000004                                       ;
014155 / 000000,,000005                                       ;
014155 / 004000,,003454                                       ;
014156 / 000000,,000000                                       ;
014157 / 000000,,000000                                       ;
                       DDCURS:
014160 / 000000,,000000                                       ;
014161 / 000000,,000001                                       ;
014161 / 000000,,000000                                       ;
014161 / 000000,,000000                                       ;
014161 / 000000,,000003                                       ;
014161 / 000000,,000004                                       ;
014161 / 000000,,000005                                       ;
014161 / 002000,,003454                                       ;
014162 / 000000,,000002                                       ;
014163 / 000000,,000002                                       ;
014164 / 000000,,000002                                       ;
014165 / 000000,,000002                                       ;
014166 / 000000,,000002                                       ;
014167 / 000000,,000002                                       ;
014170 / 000000,,000002                                       ;
014171 / 000000,,000002                                       ;
014172 / 000000,,000002                                       ;
014173 / 000000,,000002                                       ;
014174 / 000000,,000002                                       ;
014175 / 000000,,000002                                       ;
014176 / 000000,,000002                                       ;
014177 / 000000,,000002                                       ;
014200 / 000000,,000002                                       ;
014201 / 000000,,000002                                       ;
014202 / 000000,,000000                                       ;
014202 / 000000,,000001                                       ;
014202 / 000000,,000001                                       ;
014202 / 000000,,000000                                       ;
014202 / 000000,,000003                                       ;
014202 / 000000,,000003                                       ;
014202 / 000004,,010334                                       ;
014203 / 000000,,000000                                       ;
                       CZPNT:
014204 / 000000,,014204                                       ;
014204 / 004400,,014204 POINT 36,00014204,35                  ;
                       CURZWD:
                       DDCRLF:
014261 / 000000,,000000                                       ;
                       DDRUN:
014262 / 000000,,000000                                       ;; TELLS IF DD IS CURRENTLY RUNNING
                       DDERRS:
014263 / 000000,,000046                                       ;
014263 / 000000,,000000                                       ;
014263 / 000000,,000001                                       ;
014263 / 000000,,000001                                       ;
014263 / 000000,,000002                                       ;
014263 / 000000,,000003                                       ;
014263 / 114000,,011234                                       ;
014264 / 000000,,000002                                       ;
014264 / 000000,,000000                                       ;
014264 / 000000,,000000                                       ;
014264 / 000000,,000003                                       ;
014264 / 000000,,000004                                       ;
014264 / 000000,,000005                                       ;
014264 / 004000,,003454                                       ;
014265 / 014211,,000020           XWD DDCRLF,DISJMP           ;
                       WSERC:
014266 / 000000,,000017                                       ;
014266 / 000000,,000000                                       ;
014266 / 000000,,000002                                       ;
014266 / 000000,,000001                                       ;
014266 / 000000,,000002                                       ;
014266 / 000000,,000003                                       ;
014266 / 036000,,021234                                       ;
014267 / 000000,,000046                                       ;
014267 / 000000,,000000                                       ;
014267 / 000000,,000002                                       ;
014267 / 000000,,000001                                       ;
014267 / 000000,,000002                                       ;
014267 / 000000,,000003                                       ;
014267 / 114000,,021234                                       ;
014270 / 000000,,000000                                       ;
                       DPYARN:
014271 / 000000,,000000                                       ;; DENOTES THAT 'CONSOLE AVAILABLE' MESSAGE HAS BEEN RUN THIS TICK
                       DPYAVL:
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ;2 = 0 IF OMITTED.
                       ;SAME FOR 4.
014272 / 777777,,777200                                       ;
014272 / 000000,,000000                                       ;
014273 / 770000,,000010           XWD 770000,DISSEL           ;
014274 / 776000,,000012                                       ;
014275 / 017714,,000034           XWD TTYLOK,20!DISRST        ;
014276 / 756003,,670032                                       ;
014277 / 014303,,000020           XWD DPYAV2,DISJMP           ;
014300 / 000567,,000034           XWD MAINTMODE,20!DISRST     ;
014301 / 756003,,670012                                       ;
014302 / 014310,,000020           XWD DPYAV1,DISJMP           ;
                       DPYAV2:
014307 / 000000,,000000                                       ;
                       DPYAV1:
014314 / 000000,,000000                                       ;
                       ;*** RPH PATCH TO CATCH LOSING DP
014315 / 014316,,000024           XWD .+1,24                  ;
014316 / 000000,,000000                                       ;
014317 / 014315,,000020           XWD .-2,20                  ;
                       ;END PATCH
                       AVLWHO:
014320 / 000000,,000017                                       ;
014320 / 000000,,000000                                       ;
014320 / 000000,,000046                                       ;
014320 / 000000,,000001                                       ;
014320 / 000000,,000002                                       ;
014320 / 000000,,000001                                       ;
014320 / 036000,,461214                                       ;;WE SEND AN ERASE DURING FIRST FIELD ONLY
014321 / 000000,,000000                                       ;
014322 / 014341,,000020                                       ;
                       DDWMES:
014324 / 000000,,000001                                       ;;PATCH HERE TO DISPLAY OTHERS
014340 / 000000,,000000                                       ;
                       AVLWDD:
014353 / 014501,,000020                                       ;
                       DDUNMS:
014370 / 000000,,000000                                       ;
                       DDDMES:
014404 / 000000,,000000                                       ;
                       AVLLN:
014405 / 000000,,000000                                       ;;XWD FIRST,SECOND TEXT LINE FOR AVL MSG
                       AVLVP:
014406 / 000000,,000002                                       ;
014406 / 000000,,000002                                       ;
014406 / 000000,,000004                                       ;
014406 / 000000,,000003                                       ;
014406 / 000000,,000004                                       ;
014406 / 000000,,000005                                       ;
014406 / 004010,,043454                                       ;;GETS CLOBBERED BY PHANTOM STARTER
                       WHOKLU:
014407 / 000000,,000000                                       ;;COUNTS DOWN TO AVL MSG SHIFT OR -1 TO GOOSE WHOSER
                       DDSTRS:
014410 / 000000,,000046                                       ;
014410 / 000000,,000000                                       ;
014410 / 000000,,000002                                       ;
014410 / 000000,,000001                                       ;
014410 / 000000,,000002                                       ;
014410 / 000000,,000003                                       ;
014410 / 114000,,021234                                       ;
014411 / 000000,,000002                                       ;
014411 / 000000,,000001                                       ;
014411 / 000000,,000011                                       ;
014411 / 000000,,000003                                       ;
014411 / 000000,,000004                                       ;
014411 / 000000,,000005                                       ;
014411 / 004004,,113454                                       ;
014426 / 000000,,000000                                       ;
014426 / 000000,,000002                                       ;
014426 / 000000,,000002                                       ;
014426 / 000000,,000000                                       ;
014426 / 000000,,000003                                       ;
014426 / 000000,,000003                                       ;
014426 / 000010,,020334                                       ;
014427 / 000000,,000000                                       ;
                       DPYHOL:
014430 / 000000,,000000                                       ;
                       DPYHLD:
014431 / 000077,,000010           XWD 77,DISSEL               ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ;2 = 0 IF OMITTED.
                       ;SAME FOR 2.
014432 / 777777,,777200                                       ;
014432 / 000000,,000660                                       ;
014447 / 014477,,000020                                       ;;GO DISPLAY SYSTEM LINE OF WHO LINE
                       ;MODEL WHO LINE BLOCK (COPIED INTO FREE STORAGE)
                       TITLE:
014450 / 000000,,000000                                       ;;III JSRs to here.  FOR DD, COMMAND WORD GOES HERE
014451 / 777777,,777000                                       ;
                       ;III POSITION WORD.  DDs PUT CMD WORD HERE
014452 / 014501,,000020                                       ;;IIIs get a no-op deposited here.
                       WTTYS:
                       ;SPACE FOR FIRST PART OF USER WHO LINE
                       ;three nulls here (NOT TO MENTION 2 SPACES)
                       ;7 words of constants
014471 / 000000,,000012                                       ;
014472 / 000000,,000012                                       ;
014473 / 000000,,000012                                       ;
014474 / 000000,,000012                                       ;
                       ;SPACE FOR SEGMENT NAME AND ALIAS
                       ;CRLF TO FINISH USER LINE
014476 / 000000,,000000                                       ;;DD HALT.  FOR III, A JMP TO TITLE GETS PUT HERE
                       ;DISPLAY SUBROUTINE FOR SYSTEM DATA ON FIRST LINE OF WHO LINE
                       COMIII:
014477 / 777777,,777000                                       ;
                       ;III POSITION WORD.
                       WHOSEL:
014500 / 770000,,000010                                       ;;HERE WE SELECT WHICH III'S GET THE SYSTEM WHO LINE
                       COMDD:
                       COMWHO:
                       ;CONSTANTS IN SYSTEM LINE
014520 / 000000,,000032                                       ;;SKIP ALWAYS, IF III
014521 / 014523,,000020                                       ;;NO COMMENT!
014522 / 000000,,000000                                       ;;III HALTS HERE
014523 / 000000,,000002                                       ;
014523 / 000000,,000002                                       ;
014523 / 000000,,000002                                       ;
014523 / 000000,,000003                                       ;
014523 / 000000,,000003                                       ;
014523 / 000000,,000003                                       ;
014523 / 004010,,023334                                       ;;SELECT COL 2.  DISKPN ISN'T QUITE A NO-OP ON DDD!
                       DDDRET:
014524 / 000000,,000020                                       ;;DD JMP TO USER LINE OF WHO LINE.  ADR PLACED IN LH
                       DDTAB:
                       DDFLST:
014565 / 000000,,000000                                       ;;FREE LIST HEADER, MUST FOLLOW DDTAB
                       DDFCNT:
014566 / 000000,,000000                                       ;;# FREE CHANS
                       AVLCHN:
014567 / 000000,,000011                                       ;;CHAN FOR AVAIL MSG
                       AVLBIT:
014570 / 000000,,000000                                       ;;BIT   "    "    "
                       VDMAP:
014671 /                 ;::    BEND STANFO.DPYDAT.
014671 /                 ;::   BEGIN STANFO.DTCDDB.
                       ;DTA DEVICE DATA BLOCKS
                       ; THE FOLLOWING EXPANSION OF THE MANY DECTAPE DEVICE DATA BLOCKS
                       ; HAS BEEN XLIST'ED OUT FOR YOUR READING CONVENIENCE.
                       ; THEY ACTUALLY LOOK LIKE THIS:
                       ; REPEAT DTCNUM,<DTCDDX(UNIT)
                       ;         UNIT←UNIT-1>
                       ;SKEW-ZEROES
014671 / 040000,,000000                                       ;;DEVCMR
014673 / 000000,,000004                                       ;
014673 / 000012,,020200           XWD =10*HUNGST,200+<UNIT+1>⊗PUNITP	 ;
                       ;LONG HUNG COUNT IS INSERTED WHEN A DUMP
                       ;MODE OPERATION HAPPENS.
014674 / 000000,,000000                                       ;
                       ;;replaced;;	XWD	IFE UNIT-(DTCNUM-1),<MTCDDB,DTCDSP;>LINK,DTCDSP
014675 / 020133,,105211           XWD MTCDDB,DTCDSP           ;
                       ;;with;;
                       ;;with;;
014676 / 001107,,154403           XWD DVDIR+DVIN+DVOUT+DVDTA+DVLNG,154403 ;
014677 / 000000,,000000                                       ;
014700 / 000000,,000000                                       ;
014701 / 000007,,000000           XWD PROG,0                  ;
014702 / 000007,,000000           XWD PROG,0                  ;
                       ;RH NEXT INPUT BLOCK NO.
014703 / 000000,,000000                                       ;
014704 / 000000,,000000                                       ;
014705 / 000000,,000000                                       ;
014706 / 000000,,000000           XWD 0,0		                   ;
                       ;LH=BLKCNT WHILE TAPE INACTIVE, INIT AT BLD TIME
014707 / 000000,,014710                                       ;;ADDR DTA DIRECTORY
                       ;SKEW-ZEROES
015110 / 040000,,000000                                       ;;DEVCMR
015112 / 000000,,000003                                       ;
015112 / 000012,,014200           XWD =10*HUNGST,200+<UNIT+1>⊗PUNITP	 ;
                       ;LONG HUNG COUNT IS INSERTED WHEN A DUMP
                       ;MODE OPERATION HAPPENS.
015113 / 000000,,000000                                       ;
                       ;;replaced;;	XWD	IFE UNIT-(DTCNUM-1),<MTCDDB,DTCDSP;>LINK,DTCDSP
                       ;;with;;
015114 / 014672,,105211           XWD LINK,DTCDSP             ;
                       ;;with;;
015115 / 001107,,154403           XWD DVDIR+DVIN+DVOUT+DVDTA+DVLNG,154403 ;
015116 / 000000,,000000                                       ;
015117 / 000000,,000000                                       ;
015120 / 000007,,000000           XWD PROG,0                  ;
015121 / 000007,,000000           XWD PROG,0                  ;
                       ;RH NEXT INPUT BLOCK NO.
015122 / 000000,,000000                                       ;
015123 / 000000,,000000                                       ;
015124 / 000000,,000000                                       ;
015125 / 000000,,000000           XWD 0,0		                   ;
                       ;LH=BLKCNT WHILE TAPE INACTIVE, INIT AT BLD TIME
015126 / 000000,,015127                                       ;;ADDR DTA DIRECTORY
                       ;SKEW-ZEROES
015327 / 040000,,000000                                       ;;DEVCMR
015331 / 000000,,000002                                       ;
015331 / 000012,,010200           XWD =10*HUNGST,200+<UNIT+1>⊗PUNITP	 ;
                       ;LONG HUNG COUNT IS INSERTED WHEN A DUMP
                       ;MODE OPERATION HAPPENS.
015332 / 000000,,000000                                       ;
                       ;;replaced;;	XWD	IFE UNIT-(DTCNUM-1),<MTCDDB,DTCDSP;>LINK,DTCDSP
                       ;;with;;
015333 / 015111,,105211           XWD LINK,DTCDSP             ;
                       ;;with;;
015334 / 001107,,154403           XWD DVDIR+DVIN+DVOUT+DVDTA+DVLNG,154403 ;
015335 / 000000,,000000                                       ;
015336 / 000000,,000000                                       ;
015337 / 000007,,000000           XWD PROG,0                  ;
015340 / 000007,,000000           XWD PROG,0                  ;
                       ;RH NEXT INPUT BLOCK NO.
015341 / 000000,,000000                                       ;
015342 / 000000,,000000                                       ;
015343 / 000000,,000000                                       ;
015344 / 000000,,000000           XWD 0,0		                   ;
                       ;LH=BLKCNT WHILE TAPE INACTIVE, INIT AT BLD TIME
015345 / 000000,,015346                                       ;;ADDR DTA DIRECTORY
                       ;SKEW-ZEROES
015546 / 040000,,000000                                       ;;DEVCMR
015550 / 000000,,000001                                       ;
015550 / 000012,,004200           XWD =10*HUNGST,200+<UNIT+1>⊗PUNITP	 ;
                       ;LONG HUNG COUNT IS INSERTED WHEN A DUMP
                       ;MODE OPERATION HAPPENS.
015551 / 000000,,000000                                       ;
                       ;;replaced;;	XWD	IFE UNIT-(DTCNUM-1),<MTCDDB,DTCDSP;>LINK,DTCDSP
                       ;;with;;
015552 / 015330,,105211           XWD LINK,DTCDSP             ;
                       ;;with;;
015553 / 001107,,154403           XWD DVDIR+DVIN+DVOUT+DVDTA+DVLNG,154403 ;
015554 / 000000,,000000                                       ;
015555 / 000000,,000000                                       ;
015556 / 000007,,000000           XWD PROG,0                  ;
015557 / 000007,,000000           XWD PROG,0                  ;
                       ;RH NEXT INPUT BLOCK NO.
015560 / 000000,,000000                                       ;
015561 / 000000,,000000                                       ;
015562 / 000000,,000000                                       ;
015563 / 000000,,000000           XWD 0,0		                   ;
                       ;LH=BLKCNT WHILE TAPE INACTIVE, INIT AT BLD TIME
015564 / 000000,,015565                                       ;;ADDR DTA DIRECTORY
                       ;TEMPORARY STORAGE FOR DECTAPE SERVICE
                       BLKPTR:
015765 / 000000,,000000                                       ;;BLKI/BLKO POINTER.
                       DMPPTR:
015766 / 000000,,000000                                       ;;DUMP MODE BLKI/BLKO POINTER
                       ;MOVED TO BLKPTR AT INTERRUPT
                       DMPLST:
015767 / 000000,,000000                                       ;;RELATIVE POINTER TO CURRENT DUMP MODE
                       ;COMMAND LIST WORD
                       DTOTAL:
015770 / 000000,,000000                                       ;;TOTAL ERROR COUNT FOR SYSTEM SINCE IT WAS
                       ;LOADED(COUNT NOT CLEARED AT SYSTEM INITIALIZATION)
                       DFTOTA:
015771 / 000000,,000000                                       ;;TOTAL FATAL ERROR COUNT FOR SYSTEM SINCE LOADED
                       ;IE FAILED DTTRY (3 USUALLY) TIMES
                       DTTAC:
015772 / 000000,,000000                                       ;;PLACE TO SAVE TAC ON DT CHANNEL
                       DTUNIT:
015773 / 000000,,000000                                       ;;DT UNIT IN BITS 30-32,DT PI CHAN. BITS 33-35
                       ERRFLG:
015774 / 000000,,000000                                       ;;DATA MISSED BY DC IF NON-ZERO
                       RBNCNT:
015775 / 000000,,000000                                       ;;COUNT DOWN NUMBER OF REVERSALS SEEKING BLOCK
                       UBUF:
015776 / 000000,,000000                                       ;;ABS. ADR. OF SECOND WORD OF USER BUFFER
                       UERRCN:
015777 / 000000,,000000                                       ;;NO. OF ERROR SO FAR ON THIS OPERATION
                       UPROG:
016000 / 000000,,000000                                       ;;XWD PROTECTION,RELOCATION FOR JOB USING DECTAPES
                       UDPROG:
016001 / 000000,,000000                                       ;;XWD 0,RELOCATION(USED BY DUMP MODE ONLY)
                       USVDB:
016002 / 000000,,000000                                       ;;ADR. OF DEVICE DATA BLOCK FOR CURRENT UNIT
                       BLKCNT:
016003 / 000000,,000000                                       ;;COUNT OF NO. OF BLOCKS WHICH CURRENT JOB
                       ;USING DECTAPES CAN DO BEFORE HAVING TO GIVE
                       ;THEM TO ANOTHER JOB IF ONE IS WAITING
                       ;THIS IS SETUP AT UUO LEVEL AND DECREMENTED AT
                       ;JOB DONE TIME AT INTERRUPT LEVEL
                       ;IF TAPE MUST SEARCH FOR BLOCK, COUNT IS SET TO ZERO
                       ;MEANING THAT QUANTUM IS EXCEEDED IMMEDIATELY
                       UBKN:
016004 / 000000,,000000                                       ;
                       BNDISP:
016005 / 000000,,000000                                       ;
                       CONSZ1:
016006 / 000000,,000000                                       ;
                       RDBN:
016007 / 000000,,000000                                       ;
016010 / 254000,,105761          JRST       RDBN1             ;
                       WTRV:
016011 / 000000,,000000                                       ;
016012 / 254000,,106106          JRST       WTRV1             ;
                       RDRV:
016013 / 000000,,000000                                       ;
016014 / 254000,,106113          JRST       RDRV1             ;
                       ENPT:
016015 / 000000,,000000                                       ;
016016 / 254000,,106120          JRST       ENPT0             ;
                       ENPT1:
016017 / 000000,,000000                                       ;
016020 / 254000,,106122          JRST       ENPT2             ;
                       DMPADV:
016021 / 000000,,000000                                       ;
016022 / 254000,,106130          JRST       DMPA0             ;
                       DCLOC:
016023 / 000000,,000000                                       ;
                       DCLOC1:
016024 / 000000,,000000                                       ;
016025 /                 ;::    BEND STANFO.DTCDDB.
                       ;;TASK BLOCK DEFINITIONS . . .
                       ;;NUMBER OF BANDS THE THING HAS . . .
016025 /                 ;::   BEGIN STANFO.FBDAT.
                       IEARLY:
016025 / 000000,,000000                                       ;;ENABLE IOP EARLY RESPONSE PRINTOUT
                       FBQUE:
016026 / 000000,,000000                                       ;; TOP OF TASK LIST
                       SYSBAN:
016027 / 000001,,000000                                       ;
                       SYSBND:
016030 / 000000,,000100                                       ;; BAND WHERE SYSTEM LIVES
                       DDTBAN:
016031 / 000001,,010000                                       ;
                       FBBAND:
016032 / 777777,,777777                                       ;
016033 / 777777,,777777                                       ;
016034 / 777777,,777777                                       ;
016035 / 777777,,777777                                       ;
016036 / 777777,,777777                                       ;
016037 / 777777,,777777                                       ;
016040 / 777777,,777777                                       ;
016041 / 777777,,777777                                       ;
016042 / 777777,,777777                                       ;
016043 / 777777,,777777                                       ;
016044 / 777777,,777777                                       ;
016045 / 777777,,777777                                       ;
016046 / 777777,,777777                                       ;
016047 / 777777,,777777                                       ;
016050 / 777777,,777777                                       ;
016051 / 777777,,777777                                       ;
016052 / 777777,,777777                                       ;
016053 / 777777,,777777                                       ;
016054 / 777777,,777777                                       ;
016055 / 777777,,777777                                       ;
016056 / 777777,,777777                                       ;
016057 / 777777,,777777                                       ;
016060 / 777777,,777777                                       ;
016061 / 777777,,777777                                       ;
016062 / 777777,,777777                                       ;
016063 / 777777,,777777                                       ;
016064 / 777777,,777777                                       ;
016065 / 777777,,777777                                       ;
016066 / 777777,,777777                                       ;
016067 / 777777,,777777                                       ;
016070 / 777777,,777777                                       ;
016071 / 777777,,777777                                       ;
016072 / 777777,,777777                                       ;
016073 / 777777,,777777                                       ;
016074 / 777777,,777777                                       ;
016075 / 777777,,777777                                       ;
016076 / 777777,,777777                                       ;
016077 / 777777,,777777                                       ;
016100 / 777777,,777777                                       ;
016101 / 777777,,777777                                       ;
016102 / 777777,,777777                                       ;
016103 / 777777,,777777                                       ;
016104 / 777777,,777777                                       ;
016105 / 777777,,777777                                       ;
016106 / 777777,,777777                                       ;
016107 / 777777,,777777                                       ;
016110 / 777777,,777777                                       ;
016111 / 777777,,777777                                       ;
                       ;0-57	;NO DISK HERE ANY MORE
016112 / 000000,,000000                                       ;
016113 / 000000,,000000                                       ;
016114 / 000000,,000000                                       ;
016115 / 000000,,000000                                       ;
016116 / 000000,,000000                                       ;
016117 / 000000,,000000                                       ;
016120 / 000000,,000000                                       ;
016121 / 000000,,000000                                       ;
016122 / 000000,,000000                                       ;
                       ;60-70 OK
016123 / 777777,,777777                                       ;;71 EATS IT
016124 / 000000,,000000                                       ;;72 OK
016125 / 000000,,000000                                       ;
016126 / 000000,,000000                                       ;
016127 / 777777,,777777                                       ;;75 LOSES
016130 / 000000,,000000                                       ;
016131 / 000000,,000000                                       ;
016132 / 000000,,000000                                       ;
016133 / 000000,,000000                                       ;
                       ;76-101 OK
016134 / 777777,,777777                                       ;;102	PERMANENT READ ERROR
016135 / 777777,,777777                                       ;;103	PERMANENTLY BAD!
016136 / 777777,,777777                                       ;;104	PERMANENT READ ERROR
016137 / 777777,,777777                                       ;;105	PERMANENT READ ERROR
016140 / 000000,,000000                                       ;;106	OK
016141 / 777777,,777777                                       ;;107	BAD BAND 2-22-73
016142 / 000000,,000000                                       ;;110	OK
016143 / 000000,,000000                                       ;;111	OK
016144 / 777777,,777777                                       ;;112 BAD
016145 / 000000,,000000                                       ;
016146 / 000000,,000000                                       ;
016147 / 000000,,000000                                       ;
016150 / 000000,,000000                                       ;
016151 / 000000,,000000                                       ;
016152 / 000000,,000000                                       ;
016153 / 000000,,000000                                       ;
016154 / 000000,,000000                                       ;
016155 / 000000,,000000                                       ;
016156 / 000000,,000000                                       ;
016157 / 000000,,000000                                       ;
016160 / 000000,,000000                                       ;
016161 / 000000,,000000                                       ;
016162 / 000000,,000000                                       ;
016163 / 000000,,000000                                       ;
                       ;113-131 OK
016164 / 777777,,777777                                       ;;132 BAD
016165 / 000000,,000000                                       ;;133 OK
016166 / 000000,,000000                                       ;;134 OK
016167 / 000000,,000000                                       ;;135 OK
016170 / 777777,,777777                                       ;;136 BAD
016171 / 000000,,000000                                       ;
016172 / 000000,,000000                                       ;
016173 / 000000,,000000                                       ;
016174 / 000000,,000000                                       ;
016175 / 000000,,000000                                       ;
016176 / 000000,,000000                                       ;
016177 / 000000,,000000                                       ;
016200 / 000000,,000000                                       ;
016201 / 000000,,000000                                       ;
016202 / 000000,,000000                                       ;
016203 / 000000,,000000                                       ;
016204 / 000000,,000000                                       ;
016205 / 000000,,000000                                       ;
016206 / 000000,,000000                                       ;
016207 / 000000,,000000                                       ;
016210 / 000000,,000000                                       ;
016211 / 000000,,000000                                       ;
016212 / 000000,,000000                                       ;
016213 / 000000,,000000                                       ;
016214 / 000000,,000000                                       ;
016215 / 000000,,000000                                       ;
016216 / 000000,,000000                                       ;
016217 / 000000,,000000                                       ;
016220 / 000000,,000000                                       ;
016221 / 000000,,000000                                       ;
016222 / 000000,,000000                                       ;
                       ;REST OK
                       FBBUSY:
016223 / 777777,,777777                                       ;
                       FBTASK:
016224 / 000000,,000000                                       ;
                       FBACT:
016225 / 000000,,000000                                       ;
                       FBSPAR:
                       FBSBUS:
016236 / 000000,,000000                                       ;
                       LASTAD:
016237 / 000000,,000000                                       ;;LAST SECTOR, TRACK, AND BAND
                       LASTWC:
016240 / 000000,,000000                                       ;;LAST WCMA SENT
                       IOPWRD:
016241 / 000000,,000000                                       ;;WORD IOP GOT PAR ERR ON
                       IOPWCM:
016242 / 000000,,000000                                       ;;IOP WCMA FOR PARITY ERROR, DATA MISS.
016243 /                 ;::    BEND STANFO.FBDAT.
016243 /                 ;::   BEGIN STANFO.LPTDDB.
                       ;LPT  DEVICE DATA BLOCK
                       ; PUT IN PROPER NUMBER OF ZEROS FOR SKEW PURPOSES
016243 / 440000,,000000                                       ;;INTERNALLY BUFFERED DEVICE
                       LPTDDB:
016245 / 000012,,000032           XWD =10*HUNGST,LPTSIZ+2     ;
                       LPTIOS:
016246 / 000000,,000000                                       ;
016247 / 016564,,122537           XWD XGPDDB,LPTDSP           ;
016250 / 040001,,004403           XWD DVOUT!DVLPT,4403	       ;
                       ;MODES 13,10,1,0
016251 / 000000,,000000                                       ;
016252 / 000000,,000000                                       ;
016253 / 000000,,000000                                       ;
016254 / 000007,,000000           XWD PROG,0                  ;
                       LPTIBF:
                       LPTDCN:
016555 / 000000,,000000                                       ;; DANGLING CHARACTER COUNT
                       LPTBG1:
016556 / 000000,,000000                                       ;;SET TO EJECT FORMS BEFORE FIRST OPERATION
                       LPTUBP:
016557 / 000000,,016255                                       ;
016557 / 440700,,016255 POINT 7,00016255,                     ;
                       ; UUO LEVEL POINTER
                       LPTIBP:
016560 / 000000,,016255                                       ;; INTERRUPT LEVEL POINTER
                       LPTCC:
016561 / 000000,,001700                                       ;;  TOTAL CHARACTER COUNT
                       LPTLCC:
016562 / 000000,,000170                                       ;; CHARS PER LINE
016563 /                 ;::    BEND STANFO.LPTDDB.
016563 /                 ;::   BEGIN STANFO.XGPDDB.
                       ;REG JAN 11 1973.  REVISED THRU 8 JUNE 1973
016563 / 440000,,016600                                       ;;DEVICE HAS INTERNAL BUFFER.
                       ;(SOMETIMES)
                       XGPDDB:
016565 / 000005,,000401                                       ;;RH = BUFFER SIZE.
                       XGPIOS:
016566 / 000000,,000000                                       ;
016567 / 022613,,107341                                       ;
016570 / 041001,,104401                                       ;;MODES 0,10,17,13
016571 / 000000,,000000                                       ;;DEVLOG
016572 / 000000,,000000                                       ;;DEVBUF
016573 / 000007,,000000                                       ;;DEVADR
016574 / 000007,,000000                                       ;;DEVOAD
016575 / 000000,,000000                                       ;
016576 / 000000,,000000                                       ;
016577 / 000000,,000000                                       ;
                       XGPCSC:
                       XGPP1F:
016604 / 000000,,000000                                       ;;SET TO SIGNAL PDP-10
                       XGPP2F:
016605 / 000000,,000000                                       ;;SET TO SIGNAL PDP-6
                       XYNCNT:
016606 / 000000,,000000                                       ;;SYNC COUNT
                       XGPCNT:
016607 / 000000,,000000                                       ;;COUNTS VARIOUS THINGS
                       XGPCNY:
016610 / 000000,,000000                                       ;;COUNTS PAPER FEED AT END
                       XGPKIL:
016611 / 000000,,000000                                       ;;SET WHEN PDP-10 WANTS XGP TO DIE.
                       XGPIWD:
016612 / 000000,,000000                                       ;;IOWD FOR CURRENT DUMP COMMAND
                       XGPBIG:
016613 / 000000,,000000                                       ;;REMAINDER OF IOWD
                       XGPMDP:
016614 / 000000,,000000                                       ;;POINTER TO CURRENT DUMP COMMAND
                       XGPNXC:
016615 / 000000,,000000                                       ;;POINTER TO NEXT DUMP COMMAND
                       XGPROG:
016616 / 000000,,000000                                       ;;RELOC OF USER.
                       XGPGCW:
016617 / 000000,,000000                                       ;;GROUP CONTROL WORD.
                       XDISP1:
016620 / 000000,,000000                                       ;;DISPATCH LEVEL 1
016621 / 254520,,000725           JEN      @000725            ;;DISMISS INTERRUPT.
                       ;JSR XDISP1 TO CHANGE DISPATCH AND
                       ;DISMISS.
                       XDISP2:
016622 / 000000,,000000                                       ;;DISPATCH LEVEL 2
016623 / 263140,,000000          POPJ    P,                   ;
                       XGPAOK:
016624 / 000000,,000000                                       ;;PDP-6 SETS THIS ON EACH INTERRUPT.
                       XGPBIT:
016625 / 000000,,000000                                       ;;PDP-10 TELLS WHAT IT WANTS HERE
                       XGPGO:
016626 / 000000,,000000                                       ;;SET BY PDP-10 WHEN JOB LOCKED IN.
                       XGPTMP:
016627 / 000000,,000000                                       ;;1 CELL FOR I-LEVEL.
                       XPGOOD:
016630 / 000000,,000000                                       ;;CELL FOR 'GOOD CUTS'.
                       XTAKE:
016631 / 000000,,000000                                       ;;POINTER FOR PDP-6.
                       XPUT:
016632 / 000000,,000000                                       ;;POINTER FOR PDP-10
                       XIBUF:
016633 / 000000,,000000                                       ;;CONTAINS THE ADDRESS OF THE BUFFER.
                       XIBFND:
016634 / 000000,,000000                                       ;;ADDRESS OF END OF BUFFER.
                       XBFCNT:
016635 / 000000,,000000                                       ;;COUNT OF WORDS USED IN BUFFER.
                       XGPWSZ:
016636 / 000000,,000000                                       ;;SIZE NEEDED BEFORE REACTIVATION.
                       XGPBFL:
016637 / 000000,,000000                                       ;;FLAG SET FOR MODE 10, ZEROED FOR 17
                       XGPOST:
                       XGPNST:
                       XGPFC1:
016700 / 000000,,000000                                       ;;SET WHEN WE WAIT FOR FC
                       XGPFC2:
016701 / 000000,,000000                                       ;;SET WHEN FC WAITS FOR US
                       XCLKNM:
016702 / 000000,,000000                                       ;;CLOCK REQUEST IDENTIFIER
                       XFCJN:
016703 / 000000,,000000                                       ;;FC JOB NUMBER
                       FCRQER:
016704 / 000000,,000000                                       ;;FLAG FOR FC NOT RESPONDING.
                       XFCADR:
016705 / 000000,,000000                                       ;;RELATIVE ADDRESS OF THE FC
                       XFTADR:
                       XGPSLS:
016726 / 000000,,000000                                       ;;SPECIAL LINE SPACE COUNT. '177'1'42
                       XCFH:
016727 / 000000,,000000                                       ;;CURRENT FONT HEIGHT
                       XCFBL:
016730 / 000000,,000000                                       ;;CURRENT BASE LINE
                       XCFCPA:
016731 / 000000,,000000                                       ;;CURRENT COLUMN POSITION ADJUSTMENT.
                       XHMAX:
016732 / 000000,,000000                                       ;;MAXIMUM HEIGHT IN CURRENT LINE.
                       XLBL:
016733 / 000000,,000000                                       ;;XLBL CURRENT LINE'S BASE LINE.
                       XFTCAD:
016734 / 000000,,000000                                       ;;CURRENT FONT ADDRESS (RELOCATED)
                       XSCNLN:
016735 / 000000,,000000                                       ;;CURRENT SCAN LINE IN LINE
                       XGPERC:
                       XGPPG2:
016742 / 000000,,000000                                       ;;"PAPER PAGE" COUNT
                       XGPHIP:
016743 / 000000,,000000                                       ;;"HEADING IN PROGRESS"
                       XGPHDW:
016744 / 000000,,000000                                       ;;IOWD FOR HDB
                       XGPHDB:
                       XGPAT0:
016777 / 000000,,000000                                       ;;THREE TEMP CELLS FOR 
                       XGPAT1:
017000 / 000000,,000000                                       ;;PAPER PAGE MACRO EXPANSION.
                       XGPAT2:
017001 / 000000,,000000                                       ;
                       XSVCAD:
017002 / 000000,,000000                                       ;;SAVE OLD FONT WHILE IN HEADING.
                       XGPIGO:
017003 / 000000,,000000                                       ;;SET TO -1 BY PDP6 WHEN DATA XFER
                       XUSBEG:
017004 / 000000,,000000                                       ;;COLUMN OF BEGINNING UNDERSCORE.
                       XCHBGO:
017005 / 000000,,000000                                       ;;SET TO ADDRESS OF FIRST TEXT NODE.
                       XVNODE:
017006 / 000000,,000000                                       ;;SET TO ADDRESS OF VECTOR NODE.
                       ;LIST HEADERS FOR COMPILER/TEXT PROCESS
                       XVNFL:
017007 / 000000,,000000                                       ;;VECTOR NODE FREE LIST
                       XTNFL:
017010 / 000000,,000000                                       ;;TEXT NODE FREE LIST
                       XATLH:
017011 / 000000,,000000                                       ;;ACTIVE TEXT LIST
                       XASVLH:
017012 / 000000,,000000                                       ;;ACTIVE NARROW VECTOR LIST
                       XALVLH:
017013 / 000000,,000000                                       ;;ACTIVE WIDE VECTOR LIST
                       XPENDH:
017014 / 000000,,000000                                       ;;PENDING QUEUE HEAD
                       XPENDT:
017015 / 000000,,000000                                       ;;PENDING QUEUE TAIL
                       XGPPDX:
                       XGPPDL:
017036 / 777760,,017015          IOWD 20,XGPPDX		             ;
                       ;POINTER TO PDL
                       XACT4:
017037 / 000000,,000000                                       ;;FLAG CH4 NEEDS ACTIVATION.
                       XCYPOS:
017040 / 000000,,000000                                       ;;Y POSITION FOR CURRENT LINE.
                       XGPLYP:
017041 / 000000,,000000                                       ;;LAST Y POSITION QUEUED
                       XFREBA:
017042 / 000000,,000000                                       ;;POINTER TO BLOCK IN FC.
                       XNODUS:
017043 / 000000,,000000                                       ;;# OF TEXT NODES IN USE.
                       XTOFRM:
017044 / 000000,,000000                                       ;;SET TO -1 WHEN THERE IS TEXT Q'ED
                       XLFTKF:
017045 / 000000,,000000                                       ;;SET TO -1 WHEN WE DID KERN ADJUST
                       XGPSAC:
                       XFLAPA:
017066 / 000000,,000000                                       ;;MORE BITS FOR FLAPPER
                       XFLAPB:
017067 / 000000,,000000                                       ;;BITS TO DECIDE WHEN TO FLAP
                       XFLAPC:
017070 / 000000,,000000                                       ;;FLAPPER COUNT
                       XCUTQ:
                       XCUTBP:
017151 / 000000,,017070                                       ;
017151 / 004400,,017070 POINT 36,00017070,35                  ;
                       ;BYTE POINTER TO XCUTQ
                       ;THE REST OF THIS IS INITIALIZED BY RESET
                       XGPPS1:
017152 / 000000,,000310                                       ;;TOP TO FIRST LINE MARGIN
                       XGPPS2:
017153 / 000000,,003376                                       ;;TOP LINE TO LAST LINE SIZE.
                       XGPPS3:
017154 / 000000,,000310                                       ;;LAST LINE TO BOTTOM MARGIN
                       XGPLMR:
017155 / 000000,,000310                                       ;;LEFT MARGIN
                       XGPRMR:
017156 / 000000,,003162                                       ;;RIGHT MARGIN
                       XGPILS:
017157 / 000000,,000004                                       ;;INTER-LINE SPACING
                       XNTNOD:
017160 / 000000,,000020                                       ;;NUMBER OF TEXT NODES
                       XNVNOD:
017161 / 000000,,000144                                       ;;NUMBER OF VECTOR NODES
                       XGPBLN:
017162 / 000000,,004000                                       ;;SIZE OF SYSTEM BUFFER
                       XMSET:
017163 / 000000,,000310                                       ;;SET MARGINS (ETC) FROM THIS BLOCK
017164 / 000000,,003376                                       ;
017165 / 000000,,000310                                       ;
017166 / 000000,,000310                                       ;
017167 / 000000,,003162                                       ;
017170 / 000000,,000004                                       ;
017171 / 000000,,000020                                       ;
017172 / 000000,,000144                                       ;
017173 / 000000,,004000                                       ;
017174 /                 ;::    BEND STANFO.XGPDDB.
017174 /                 ;::   BEGIN STANFO.PTRDDB.
                       ; PUT IN ALL THE EXTRA WORDS
017174 / 040000,,017215                                       ;; PUT IN ADDRESS OF CONTROL CELLS
                       PTRDDB:
017176 / 000012,,000041           XWD =10*HUNGST,41           ;
017177 / 000000,,000000                                       ;
017200 / 017223,,124255           XWD PTPDDB,PTRDSP           ;
017201 / 000202,,014403           XWD DVPTR+DVIN,14403        ;
017202 / 000000,,000000                                       ;
017203 / 000000,,000000                                       ;
                       PTRADR:
017204 / 000007,,000000           XWD PROG,0                  ;
                       PTRPTR:
017205 / 000000,,000000                                       ;
017206 / 000000,,000000                                       ;;PTR COUNTER
                       PTRACT:
017207 / 000000,,000000                                       ;
                       PTRIN1:
017210 / 000000,,000000                                       ;
                       PTRADV:
017211 / 000000,,000000                                       ;
                       PTRSTR:
017212 / 000000,,000000                                       ;
                       PTRCHR:
017213 / 000000,,000000                                       ;
                       PTRDSC:
017214 / 000000,,000000                                       ;;SET TO -1 TO MAKE PTR DISCONNECT.
                       PTRCSC:
                       PTRCON:
017221 / 000000,,000000                                       ;;SET TO PTRCN1 OR PTRCN2.
017222 /                 ;::    BEND STANFO.PTRDDB.
017222 /                 ;::   BEGIN STANFO.PTPDDB.
                       ; PUT IN PROPER NUMBER OF SKEW WORDS
017222 / 440000,,017566                                       ;
                       ; TELL WORLD THAT THIS IS AN INTERNALLY BUFFERED DEVICE . . .
                       ; AND THAT IT HAS CONTROL CELLS
                       PTPDDB:
017224 / 000024,,000041           XWD =20*HUNGST,41           ;
                       PTPIOS:
017225 / 000000,,000000                                       ;
017226 / 036262,,123441           XWD DDBMDL,PTPDSP           ;
017227 / 000401,,014403           XWD DVPTP+DVOUT,14403       ;
017230 / 000000,,000000                                       ;
017231 / 000000,,000000                                       ;
                       PTPPTR:
017232 / 000000,,000000                                       ;
                       PTPADR:
017233 / 000007,,000000           XWD PROG,0                  ;
                       PTPIBP:
017234 / 000000,,000000                                       ;; INTERRUPT-LEVEL BYTE POINTER
                       PTPUBP:
017235 / 000000,,000000                                       ;; UUO-LEVEL POINTER
                       SYSPDL:
                       PTPBUF:
                       PTPFCN:
017556 / 000000,,000000                                       ;; PUNCH FEED COUNT
                       PTPBCN:
017557 / 000000,,000000                                       ;; BUFFER CHARACTER COUNT
                       PTPIDS:
017560 / 000000,,000000                                       ;; INTERRUPT-LEVEL DISPATCH LOCATION
                       PTPUDS:
017561 / 000000,,000000                                       ;; UUO-LEVEL DISPATCH LOCATION
                       PTPCPW:
017562 / 000000,,000000                                       ;; CHARACTERS PER WORD
                       PTPACT:
017563 / 000000,,000000                                       ;; FLAG ASKING TO TURN ON PTP
                       PTPMOD:
017564 / 000000,,000000                                       ;; MODE OF OPERATION
                       PTPSID:
017565 / 000000,,000000                                       ;; P2 ASKING P1 TO CALL SETIOD
                       PTPCSC:
                       PTPCON:
017572 / 000000,,000000                                       ;; SET TO PTPCN1 OR PTPCN2
017573 /                 ;::    BEND STANFO.PTPDDB.
017573 /                 ;::   BEGIN STANFO.SCNDDB.
                       ;DESCRIPTION OF DEVICE DATA BLOCK FOR TELETYPES
                       ;THE FUNCTIONS OF THE FIRST EIGHT WORDS ARE AS DESCRIBED IN THE
                       ;COMMENTS IN THE SYSTEM PARAMETER TAPE( FILE NAME S). LOCATIONS 11
                       ;THROUGH 27 (OCTAL) RELATIVE TO SCNDDB PERTAIN DIRECTLY TO THE
                       ;SCANNER SERVICE BUFFERING SCHEME. THE SUBSEQUENT 2*20(OCTAL) LOCATIONS
                       ;ARE CURRENTLY THE TWO TELETYPE BUFFERS. THEY NEED NOT BE IN THE DDB
                       ;AS LONG AS THEIR ADDRESSES ARE PLACED IN THE RIGHT HALF OF TTIBUF,
                       ;AND TTOBUF EITHER AT ASSEMBLY, BUILD OR RUN TIME. IF DYNAMIC
                       ;BUFFER CONSTRUCTION IS TO BE ADDED THESE BUFFERS MAY BE PLACED ANYWHERE IN
                       ;FRE CORE STORAGE, AND THE RIGHT HALF OF THE REQUIRED TTXBUF(WHERE "X"
                       ;MAY BE "I" OR "O")MAY BE LOADED ONLY WHEN THAT BUFFER IS REQUIRED.
                       ;THERE ARE TWO BUFFERS, EACH OF WHICH IS A "RING" UNTO ITSELF:
                       ;INPUT---POINTED TO BY TTIBUF
                       ;	ALL CHARACTERS TYPED GO INTO THIS BUFFER. IN ADDITION, ALL
                       ;OTHER COMMANDS TO BE READ BY THE COMMAND INTERPRETER IN COMCON
                       ;(APRSER) ARE STORED HERE.
                       ;OUTPUT BUFFER---POINTED TO BY TTOBUF
                       ;	ALL CHARACTERS THAT ARE OUTPUT ARE PLACED SEQUENTIALLY IN THIS
                       ;BUFFER; THIS INCLUDES ECHOED CHARACTERS AS WELL AS NORMAL OUTPUT OF
                       ;CHARACTER STRINGS.
                       ;THERE ARE NINE BUFFER PARAMETER WORDS ASSOCIATED WITH EACH BUFFER
                       ;(EXCEPT FOR THE OUTPUT BUFFER, WHICH ONLY NEEDS SIX). THE LAST
                       ;FOUR CHARACTERS IN THE MNEMONIC DESCRIBES THE FUNCTION OF THE WORD
                       ;WHILE THE FIRST TWO CHARACTERS IDENTIFY WHICH BUFFER THAT THE
                       ;FUNCTION APPLIES TO. THE FORMULA FOR THESE WORDS IS TX'FUNC, WHERE
                       ;THE RELATIVE POSITION OF ALL TX'FNC1 TO TTX'BUF IS THE SAME FOR
                       ;ALL BUFFERS.  IN THIS MANNER, THE ADDRESS OF TTX'BUF IS LOADED INTO
                       ;ACCUMULATOR DAT, AND THE RELATIVE POSITIONS FUNCT1-FUNCT9 ARE
                       ;DEFINED TO BE 0-10 (OCTAL); I.E., FUNCT(DAT) WILL IDENTIFY THE DESIRED
                       ;BUFFER PARAMETER WORD REGARDLES OF BUFFER.
                       ;FOLLOWING ARE DEFINITIONS OF THE RELATIVE BUFFER PARAMETER WORDS:
                       ;TTX'BUF OR BUF(DAT)---THE LEFT HALF CONTAINS NUMBER OF BYTES IN BUFFER AND THE RIGHT
                       ;	HALF THE ADDRESS OF THE FIRST WORD OF THE BUFFER. THIS WORD IS
                       ;	ONLY READ BY THE CURRENT CODE.  UPON THE ADDITION OF DYNAMIC
                       ;	BUFFER ALLOCATION, THIS WORD WOULD BE LOADED IN THE SAME FORMAT
                       ;	AT THE TIME THAT THE BUFFER WOULD BE BUILT.
                       ;SCNINI SETS BUFFERS TO LENGTH TTYCHR AT PRESENT. ALSO
                       ;PRESENT CODE OCCASIONALLY USES TTYCHR RATHER THAN READING LH
                       ;OF TTXBUF
                       ;TX'PUTR OR PUTR(DAT)---BYTE POINTER USED TO PLACE CHARACTERS INTO THE
                       ;	BUFFER. IT MUST ALWAYS BE AHEAD OF OR EQUAL TO THE TAKER POINTER.
                       ;TX'PCTR OR PCTR(DAT)---COUNT OF NUMBER OF TIMES THAT PUTR MAY BE INCREMENTED
                       ;	BEFORE REACHING THE LAST BYTE IN THE LAST WORD OF THE BUFFER
                       ;	(NOT THE AMMOUNT OF FREE SPACE LEFT)
                       ;TX'TAKR OR TAKR(DAT)---BYTE POINTER USED BY ALL ROUTINES TO PICK UP
                       ;	CHARACTERS FROM THE BUFFER. WHEN THE TAKR IS EQUAL TO THE PUTR,
                       ;	THE BUFFER IS "EMPTY".
                       ;TX'TCTR OR TCTR(DAT)---COUNT OF THE NUMBER OF TIMES THAT THE TAKR CAN
                       ;	BE INCREMENTED BEFORE REACHING THE PHYSICAL END OF THE BUFFER.
                       ;TX'FCTR OR FCTR(DAT)---FREE CHARACTER COUNT; I.E., HOW MANY TIMES MAY THE
                       ;	PUTR BE INCREMENTED BEFORE IT WOULD COME AROUND AND "STEP ON"
                       ;	THE TAKR. WHEN THE FREE CHAR. COUNT IS ZERO, NO MORE CHARACTERS
                       ;	MAY BE PLACED IN THE BUFFER (USUAL RESULT IS GOING INTO IO WAIT)
                       ;TX'SYNC OR TSYNC(DAT)---COUNT OF NUMBER OF "LINES" THAT HAVE BEEN TYPED
                       ;	INTO INPUT BUFFER.
                       ;SCANNER DEVICE DATA BLOCK.
                       ;REMAINING SCN DDB'S ARE GENERATED
                       ;OUT OF LINE AT BUILD TIME.
                       ;THIS DDB IS USED FOR THE CTY AND NEVER KILLED   BH 5/6/74
017573 / 200000,,000000           XWD DEVAOA,0                ;
                       ;IGNORE IOACT FOR OUTPUT UUO
                       SCNDDB:
                       TTYLST:
                       ;DEVNAM
017575 / 000000,,500031                                       ;;DEVCHR(NO HUNG TIME),,BUFFER SIZE+1
017576 / 000000,,000000                                       ;;DEVIOS
017577 / 000000,,142203           XWD LINK,SCNDSP		           ;
                       ;DEVSER
017600 / 000013,,015403           XWD DVTTY+DVIN+DVOUT,15403	 ;
                       ;DEVMOD (ALLOWS MODES 0,1,10,11,13,14)
017601 / 000000,,000000                                       ;;DEVLOG
017602 / 000000,,000000                                       ;;DEVBUF
017603 / 000007,,000000           XWD PROG,0			               ;
                       ;DEVIAD
017604 / 000007,,000000           XWD PROG,0			               ;
                       ;DEVOAD
017605 / 777777,,777777                                       ;
017606 / 777700,,037600                                       ;
017607 / 000000,,374000                                       ;
017610 / 000007,,600000                                       ;
017611 / 000000,,000000                                       ;
017612 / 000140,,017631           XWD TTICHR,TTYLST+TIBF-1    ;
017613 / 001100,,017632                                       ;
017614 / 000000,,000001                                       ;
017615 / 001100,,017632                                       ;
017616 / 000000,,000001                                       ;
017617 / 000000,,000140                                       ;
017620 / 000000,,000000                                       ;
017621 / 000170,,017661           XWD TTOCHR,TTYLST+TOBF-1    ;
017622 / 000700,,017662                                       ;
017623 / 000000,,000001                                       ;
017624 / 000700,,017662                                       ;
017625 / 000000,,000001                                       ;
017626 / 000000,,000170                                       ;
017627 / 000000,,000000                                       ;
017630 / 000000,,000000                                       ;
017631 / 000000,,000000                                       ;
                       ;NO. OF CHAR. IN MON. BUF.
                       LINSAV:
017712 / 000000,,000000                                       ;
                       LINSV1:
017713 / 000000,,000000                                       ;
                       TTYLOK:
017714 / 000000,,000000                                       ;
                       DKBCHR:
017715 / 000000,,000000                                       ;
017716 / 000000,,000000                                       ;;LINTAB(-1) FOR DDBSRC
                       LINTAB:
                       PTYJOB:
020110 /                 ;::    BEND STANFO.SCNDDB.
                       ;DIALER DATA AREA
020110 /                 ;::   BEGIN STANFO.DILDAT.
                       ;AC SAVE LOCS
                       DILLIN:
020110 / 000000,,000000                                       ;
                       DILTAC:
020111 / 000000,,000000                                       ;
                       DILJ:
020112 / 000000,,000000                                       ;
                       ;THIS PART ZEROED AT DILINI
                       DILJOB:
                       DILCNI:
                       DILIDS:
020116 /                 ;::    BEND STANFO.DILDAT.
020116 /                 ;::   BEGIN STANFO.MTCDDB.
                       ; THE FOLLOWING IS XLIST'ED OUT FOR YOUR READING CONVENIENCE
                       ; IT ACTUALLY LOOKS LIKE THIS:
                       ; REPEAT MTCNUM,<MTCDDX(UNIT)
                       ;       UNIT←UNIT-1>
                       ;SKEW-ZEROS
020116 / 040000,,000000                                       ;
020120 / 000000,,000001                                       ;
020120 / 000074,,004201           XWD =60*HUNGST,MTSIZ+1+<UNIT>⊗PUNITP ;
020121 / 000000,,000000                                       ;
020122 / 017574,,106352           XWD LINK,MTCDSP             ;
020123 / 001023,,154403           XWD DVMTA!DVIN!DVOUT!DVLNG,154403 ;
020124 / 000000,,000000                                       ;
020125 / 000000,,000000                                       ;
020126 / 000007,,000000           XWD PROG,0                  ;
020127 / 000007,,000000           XWD PROG,0                  ;
020130 / 000000,,000000                                       ;;ERROR COUNT FOR THIS UNIT:
                       ;0-8 = LOGN. P.E.
                       ;9-17 = LAT. P.E.
                       ;18-26 = ILL OP.
                       ;27-35 = DATA MISSED.
020131 / 000000,,000000                                       ;;RECORD COUNTER
                       ;SKEW-ZEROS
020132 / 040000,,000000                                       ;
020134 / 000000,,000000                                       ;
020134 / 000074,,000201           XWD =60*HUNGST,MTSIZ+1+<UNIT>⊗PUNITP ;
020135 / 000000,,000000                                       ;
020136 / 020117,,106352           XWD LINK,MTCDSP             ;
020137 / 001023,,154403           XWD DVMTA!DVIN!DVOUT!DVLNG,154403 ;
020140 / 000000,,000000                                       ;
020141 / 000000,,000000                                       ;
020142 / 000007,,000000           XWD PROG,0                  ;
020143 / 000007,,000000           XWD PROG,0                  ;
020144 / 000000,,000000                                       ;;ERROR COUNT FOR THIS UNIT:
                       ;0-8 = LOGN. P.E.
                       ;9-17 = LAT. P.E.
                       ;18-26 = ILL OP.
                       ;27-35 = DATA MISSED.
020145 / 000000,,000000                                       ;;RECORD COUNTER
                       ;TEMP CELLS AND CONTROL DATA
                       MTEOFF:
020146 / 000000,,000000                                       ;;EOF FLAG
                       MTDEV:
020147 / 000000,,000000                                       ;;XWD COMMAND,DDB ADDR
                       MTDCCN:
020150 / 000000,,000000                                       ;;BLKO/BLKI POINTER FOR REDO
                       DCWRD:
020151 / 000000,,000000                                       ;;BLKO/BLKI POINTER FOR DC
                       MTCSAV:
020152 / 000000,,000000                                       ;;DC COMMAND
                       MISSED:
020153 / 000000,,000000                                       ;;-1 IF DC HAS PARTIAL WORD
                       MTERCN:
020154 / 000000,,000000                                       ;;ERROR COUNTER
                       MTREWN:
020155 / 000000,,000000                                       ;;UNITS REWINDING AND IN IOW -1=NONE, 0=ONE
                       MTCMDP:
020156 / 000000,,000000                                       ;;DUMP COMMAND LIST POINTER
                       SVCNTR:
020157 / 000000,,000000                                       ;;DUMP COMMAND IOWD NEG. WORD COUNT
                       MDCSAV:
020160 / 000000,,000000                                       ;
                       MTIDSP:
020161 / 000000,,000000                                       ;;ADDRESS TO TRANSFER TO ON NEXT MAG TAPE INTERRUPT
                       MTDCND:
020162 / 000000,,000000                                       ;;JSR HERE WHEN BLKO/BLKI COUNTED OUT
020163 / 254000,,106661          JRST      MTDCN1             ;
020164 /                 ;::    BEND STANFO.MTCDDB.
020164 /                 ;::   BEGIN STANFO.SPWDAT.
                       SPWA:
                       SPWB:
                       SPWSAC:
                       SP2SAC:
020264 / 000000,,000000                                       ;; JOB NUMBER OF JOB WHICH HAS 
                       ; PDP-6 SPACEWAR ASSIGNED.
                       SPWBUT:
020265 / 000000,,000000                                       ;; SPACEWAR BUTTONS
                       SPWACT:
020266 / 000000,,000000                                       ;; FLAG MEANING A SPACEWAR JOB EXISTS
                       SPWCSC:
                       ;WARNING! DON'T CHANGE POSITION OF SPWGO,SP2GO,JBTST2 - SEE SPWINI - REG
                       SPWGO:
                       SP2GO:
                       JBTST2:
020573 /                 ;::    BEND STANFO.SPWDAT.
                       ;SCHEDULER DATA AREA . . .
020573 /                 ;::   BEGIN STANFO.SCHDAT.
                       ;SCHEDU DATA
                       SCHMQT:
020573 / 000000,,000010                                       ;
                       JOBQUE:
                       ; TABLES FOR JOB PRIORITY CALCULATIONS
                       SCHBEG:
                       JLCYET:
020674 / 000000,,000000                                       ;
                       JLFACT:
020675 / 000000,,000000                                       ;;JLFACTOR/JLTIME = USEFUL PROCESSOR LEVEL
                       RJLFAC:
020676 / 000000,,000000                                       ;;RECIPROCAL JLFACTOR
                       OINTIM:
020677 / 000000,,000000                                       ;;HERE WE SAVE INTIME+P1PID FROM LAST JLCAL CYCLE
                       OUTIME:
020700 / 000000,,000000                                       ;;HERE WE SAVE UPTIME+P1PID FROM LAST JLCAL CYCLE
                       JLRIT:
020701 / 000000,,000000                                       ;;RECENT INTERUPT FRACTION *1000
                       ORDYET:
020702 / 000000,,000000                                       ;
                       JBTPRI:
                       JBTNPR:
                       JBTJL:
                       JBTJLH:
                       GCBITS:
                       ; QUEUE TABLES . . .
                       JBTQ:
                       ; SWAPPER TABLES . . .
                       SWPJMX:
021423 / 000000,,000000                                       ;
                       SWPMXP:
021424 / 000000,,000000                                       ;
                       SWPLMX:
021425 / 000000,,000000                                       ;
                       SWPLMJ:
021426 / 000000,,000000                                       ;
                       JBTSWP:
                       JB2SWP:
                       ;30-35 DATA DISC CHANNEL LIST. 18-29 AVAILABLE.
                       ;LEAVE NEXT LOCS IN ORDER FOR WHO
                       BIGHOL:
021627 / 000000,,000000                                       ;;CURRENT BIGGEST HOLE IN CORE (1K BLOCKS)
                       FINISH:
021630 / 000000,,000000                                       ;;FINISH,FORCE,FIT AND XPANDF ARE FLAGS IN SWAP
                       FORCE:
021631 / 000000,,000000                                       ;; NUMBER OF THE JOB THAT WILL GO OUT NEXT
                       FIT:
021632 / 000000,,000000                                       ;; NUMBER OF THE JOB THAT WILL COME IN NEXT
                       XPANDF:
021633 / 000000,,000000                                       ;
                       FULCNT:
021634 / 000000,,000000                                       ;;PRINT DISK IS FULL EVERY 30 SECONDS
                       SEGWAI:
021635 / 000000,,000000                                       ;; NUMBER OF JOB WAITING FOR UPPER SEGMENT
                       MAXSIZ:
021636 / 000000,,000000                                       ;;SIZE OF LARGEST JOB WHICH MIGHT BE SWAPPED OUT
                       MAXJBN:
021637 / 000000,,000000                                       ;;NUMBER OF THAT JOB
                       MAXRSZ:
021640 / 000000,,000000                                       ;; SIZE OF LARGEST RUNNABLE JOB
                       MAXRJB:
021641 / 000000,,000000                                       ;; JOB NUMBER OF LARGEST RUNNABLE JOB.
                       MAXSSZ:
021642 / 000000,,000000                                       ;; SIZE OF LARGEST SEGMENT.
                       MAXSJB:
021643 / 000000,,000000                                       ;; JOB NUMBER OF LARGEST SEGMENT.
                       SUMCOR:
021644 / 000000,,000000                                       ;; THE SWAPPER TOTALS THE CORE SIZES OF THE JOBS
                       ; IT IS CONSIDERING FOR SWAPOUT AND PUTS THAT TOTAL HERE
                       NEEDED:
021645 / 000000,,000000                                       ;;THE AMOUNT NEEDED TO SWAP JOB IN FIT IN
                       ;SHARABLE DEVICE JUST BECOME AVAILABLE(EXTENDED TO OTHER QUEUES TOO)
                       ;APPROPRIATE ENTRY IS SET NON-ZERO WHEN SCHEDULER SHOULD LOOK
                       ;AT THAT QUEUE TO FIND A JOB TO RUN
                       ;WSAVAL CONTAINS THE NO. OF JOBS WITH IO WAIT SATISFIED(0=NONE)
                       AVALTB:
                       FUCKAV:
021646 / 000000,,000000                                       ;
                       STAVAL:
021647 / 000000,,000000                                       ;
                       DTAVAL:
021650 / 000000,,000000                                       ;
                       DCAVAL:
021651 / 000000,,000000                                       ;
                       MTAVAL:
021652 / 000000,,000000                                       ;
                       ;SHARABLE DEVICE REQUEST TABLE(GENERALIZED FOR OTHER QUEUES TOO)
                       ;CONTAINS THE NUMBER OF JOB WAITING TO USE SHARBLE DEVICE
                       ;WSREQ AND RNREQ ARE UNUSED
                       REQTAB:
                       FUCKRE:
021653 / 000000,,000000                                       ;
                       STREQ:
021654 / 000000,,000000                                       ;
                       DTREQ:
021655 / 000000,,000000                                       ;
                       DCREQ:
021656 / 000000,,000000                                       ;
                       MTREQ:
021657 / 000000,,000000                                       ;
                       ;WORDS USED TO "REMEMBER" JOB NUMBERS
                       ;BITS 35--9 CORRESPOND TO JOB NO'S 1--27
                       QJOB:
                       XJOB:
                       ;DATA AND STORAGE AREA USED FOR SWAPPING.  ON THE LIBRASCOPE
                       ;   DISK, BANDS 1-15 ARE USED FOR SWAPPING, EACH BAND
                       ;   CONTAINING 76K WORDS.
                       SQREQ:
022060 / 000000,,000000                                       ;;C(LH)=NEG. OF SIZE OF READ/WRITE
                       ;C(RH)=LOC. OF FIRST WORD TO READ/WRITE
                       SERA:
022061 / 000000,,000000                                       ;;SIGN IS 1 IF A READ
                       ;C(RH)=BLOCK NUMBER BEFORE READING,
                       ;    ERROR BITS AFTER READING.
                       SWPCNT:
022062 / 000000,,000000                                       ;;SWAPPER COUNTER.  WHEN LEQ 0, RESET TO
                       ;INITIAL VALUE AND RUN SWAPPER.
                       SERACT:
022063 / 000000,,000000                                       ;;COUNTER FOR ERRORS
                       CORMX:
022064 / 000000,,000000                                       ;; MAXIMUM CORE AVAILABLE TO LOSERS
                       ISONE:
022065 / 000000,,000000                                       ;; BOOLEAN SAYING THERE IS A JOB WHICH CAN FIT IN WITH THIS UPPER
                       ;CONVERSION FROM 1K CORE BLOCKS TO DISK BLOCKS
                       ;(SHIFT COUNT)
022066 /                 ;::    BEND STANFO.SCHDAT.
                       ;	 - JAM 8-24-69		- REG 2-24-72
                       RMEMSI:
022066 / 000000,,000000                                       ;;FIRST PHYSICAL NXM ADDRESS
                       MEMSIZ:
022067 / 000000,,000000                                       ;;LOGICAL NXM FOR SYSTEM = FREE STORAGE LOCATION
                       CORCSC:
                       FSBPT:
022074 / 000000,,000000                                       ;;BYTE POINTER TO 2ND BYTE IN CORTAB
                       CORTAB:
                       CORLST:
022176 / 000000,,000000                                       ;;BYTE POINTER TO 2 ND BIT OF NXM IN CORTAB
                       CORTAL:
022177 / 000000,,000000                                       ;;THE NUMBER OF 1K HOLES IN CORE
                       CORMAX:
022200 / 000000,,000000                                       ;;LARGEST POSSIBLE JOBREL
                       SHFWAT:
022201 / 000000,,000000                                       ;;# OF JOB WAITING TO BE SHUFFLED
                       HOLEF:
022202 / 000000,,000000                                       ;;ADDRESS OF 1ST HOLE IN CORE
                       CORE2P:
022203 / 000000,,000000                                       ;;POINTER TO LAST BYTE OF SYSTEM IN CORTAB
                       SWAPLI:
022204 / 000000,,610000                                       ;;CORE CELL WITH SWAPPING LIMIT SET.
                       ;SOME OF THE JOBPDL IS RESERVED FOR JOBDATA AREA
                       LOCKNO:
022205 / 000000,,000000                                       ;;JOB NUMBER OF USER OF THE LOCK UUO.
                       LOKPOS:
022206 / 000000,,000000                                       ;;PROT,,REL WE DESIRE FOR JOB IN LOCKNO.
                       LOKTOP:
022207 / 000000,,000000                                       ;;BOTTOM OF USER CORE.
                       ;;else;;FSNINIT←←5	;NUMBER OF K TO CLAIM INITIALY
                       FSCSC:
                       FSCNT:
022214 / 000000,,000000                                       ;;COUNT OF PEOPLE WAITING FOR F.S.
                       FSLIST:
                       JBTPDL:
                       FSCLKF:
022415 / 000000,,000000                                       ;;FLAG TO THE SWAPPER THAT FS IS EXPANDING
                       FSGVKF:
022416 / 000000,,000000                                       ;;FLAG TO SAY LOOK FOR A K TO GIVE BACK
                       FSRTL:
022417 / 000000,,000000                                       ;;LIST OF BLOCKS TO BE RETURNED
                       FSNEWK:
022420 / 000000,,000000                                       ;;SET TO -1 WHEN MERGING IN A NEW 1K CHUNK
                       FSCKCT:
022421 / 000000,,000000                                       ;;COUNT TICKS UNTIL COMPUTING CHECKERBOARDING
                       FSBUSY:
022422 / 000000,,000000                                       ;;AMOUNT OF FS THAT'S IN USE RIGHT NOW.
                       FSAVB:
                       FSRPQ:
                       FSBLUZ:
022503 / 000000,,000000                                       ;;COUNT NUMBER OF TIME FSBUSY IS FUCKED UP.
                       FSNCLK:
022504 / 000000,,000000                                       ;;SET WHEN YOU NEED FSCLK CALLED.
                       ;OR OF FSRTL,FSCLKF, AND FSGVKF
                       FSIPTR:
022505 / 000000,,022215                                       ;;POINTER TO ADD JOBS TO FSLIST
                       FSOPTR:
022506 / 000000,,022215                                       ;;POINTER TO TAKE JOBS FROM FSLIST
                       FSHUNG:
022507 / 000000,,000000                                       ;;SET TO -1 TO INDICATE A DISASTER.
                       FSGTUF:
022510 / 000000,,000000                                       ;;FLAG FOR SPECIAL FSGET
                       SPFSNT:
022511 / 000000,,000000                                       ;;TOTAL # SPARES NEEDED
                       ;SPARE LIST CONTROL BLOCKS
                       ;FORMAT OF SPARE LIST HEADER
                       ;WD0 LIST HEADER
                       SFHEAD:
022512 / 022544,,022513                                       ;;THE HEADER HEADER
                       DDFS:
022513 / 000000,,000000                                       ;;DD Q BLOCKS
022514 / 460000,,000010                                       ;
022515 / 000000,,022520                                       ;
022516 / 000000,,000000                                       ;
022517 / 153526,,000000                                       ;
                       TTYFS:
022520 / 000000,,000000                                       ;;TTY DDBS
022521 / 003000,,000120                                       ;
022522 / 022513,,022525                                       ;
022523 / 000000,,000000                                       ;
022524 / 000000,,000000                                       ;
                       DHFS:
022525 / 000000,,000000                                       ;;DPY HEADERS
022526 / 003000,,000147                                       ;
022527 / 022520,,022532                                       ;
022530 / 000000,,000000                                       ;
022531 / 000000,,000000                                       ;
                       LPFS:
022532 / 000000,,000000                                       ;;LINE PNTR TABLES
022533 / 003000,,000120                                       ;
022534 / 022525,,022537                                       ;
022535 / 000000,,000000                                       ;
022536 / 000000,,000000                                       ;
                       PPFS:
022537 / 000000,,000000                                       ;;PAGE PRINTER INITIAL BLOCKS
022540 / 006000,,000066                                       ;;2 OF THESE PER PP
022541 / 022532,,022544                                       ;
022542 / 000000,,000000                                       ;
022543 / 000000,,000000                                       ;
                       DPYFS:
022544 / 000000,,000000                                       ;;RANDOM DPYSER DATA
022545 / 000000,,000066                                       ;
022546 / 022537,,000000                                       ;
022547 / 000000,,000000                                       ;
022550 / 000000,,000000                                       ;
022551 /                 ;::   BEGIN STANFO.TVDDB.
                       ; EXTRA STANDARD DDB WORDS
022551 / 040000,,000000                                       ;
                       TVDDB:
022553 / 000002,,000000           XWD =2*HUNGST,0             ;
022554 / 000000,,000000                                       ;;TVIOS, NOT USED.
022555 / 022575,,150634           XWD ELFDDB,TVDSP            ;
022556 / 005002,,100000           XWD DVTV!DVIN!DVLNG,100000  ;
022557 / 000000,,000000                                       ;
022560 / 000000,,000000                                       ;
022561 / 000007,,000000           XWD PROG,0                  ;
022562 / 000007,,000000           XWD PROG,0                  ;
022563 / 000000,,000000                                       ;
022564 / 000000,,000000                                       ;
022565 / 000000,,000000                                       ;;DEVACC
022566 / 000000,,000000                                       ;;DEVCNT
022567 / 000000,,000000                                       ;;DEVBLK
022570 / 000000,,000000                                       ;;DEVBKO
022571 / 000000,,000000                                       ;;DSKBUF
022572 / 000000,,000000                                       ;;DSKCNT
022573 / 000000,,000000                                       ;;SETCNT
022574 /                 ;::    BEND STANFO.TVDDB.
022574 /                 ;::   BEGIN STANFO.ELFDDB.
022574 / 440000,,000000                                       ;;It sort of has an internal buffer
022576 / 000000,,000000                                       ;
022577 / 000000,,000000                                       ;
022600 / 015547,,125732           XWD DTCDDB,ELFDSP           ;
022601 / 001003,,140000           XWD DVOUT+DVIN+DVLNG,140000	 ;
                       ;Dump mode only for now.
022602 / 000000,,000000                                       ;
022603 / 000000,,000000                                       ;
022604 / 000007,,000000           XWD PROG,0                  ;
022605 / 000007,,000000           XWD PROG,0                  ;
022606 / 000000,,000000                                       ;;ELFSER defines its variables
022607 / 000000,,000000                                       ;;in terms of ELFLOC.
022610 / 000000,,000000                                       ;
022611 / 000000,,000000                                       ;
022612 /                 ;::    BEND STANFO.ELFDDB.
                       ;IFN ELFNUM
022612 /                 ;::   BEGIN STANFO.ADDDB.
                       ; EXTRA DDB WORDS
022612 / 040000,,000000                                       ;
                       ADDDB:
022614 / 000030,,000000           XWD =24*HUNGST,0            ;
022615 / 000000,,000000                                       ;;ADIOS
022616 / 022653,,150744           XWD ADCDDB,ADDSP            ;
022617 / 001003,,140000           XWD DVOUT+DVIN+DVLNG,140000	 ;
                       ;FLUSH MODE 15 8/7/73
022620 / 000000,,000000                                       ;
022621 / 000000,,000000                                       ;
022622 / 000007,,000000           XWD PROG,0                  ;
022623 / 000000,,000000                                       ;
                       ADLOC1:
022624 / 000000,,000000                                       ;
                       ADLOC2:
022625 / 000000,,000000                                       ;
                       ADLOC3:
022626 / 000000,,000000                                       ;
                       ADLOC4:
022627 / 000000,,000000                                       ;
                       ADBKO:
022630 / 000000,,000000                                       ;
                       ADERR:
022631 / 000000,,000000                                       ;
                       ADADV:
022632 / 000000,,000000                                       ;
                       ADBLK:
022633 / 000000,,000000                                       ;
                       ADACT:
022634 / 000000,,000000                                       ;
                       ADBKX:
022635 / 000000,,000000                                       ;
                       ADJSR:
022636 / 000000,,000000                                       ;
                       ADJSRL:
022637 / 000000,,000000                                       ;
                       AD2INT:
022640 / 000000,,000000                                       ;
022641 / 250040,,022630          EXCH  TAC, ADBKO             ;
022642 / 250040,,022632          EXCH  TAC, ADADV             ;
022643 / 321040,,022650         JUMPL  TAC,  CONT             ;
022644 / 200040,,022640          MOVE  TAC,022640             ;;MAKE IT LOOK LIKE THE INTERRUPT WENT OFF ON
022645 / 202060,,022636         MOVEM  TAC,@022636            ;;THE NORMAL CHANNELL.
022646 / 200040,,022630          MOVE  TAC, ADBKO             ;
022647 / 254000,,151130          JRST       ADINT             ;
                       CONT:
022650 / 250040,,022630          EXCH  TAC, ADBKO             ;
022651 / 254520,,022640          JRST   12,@AD2INT            ;
022652 /                 ;::    BEND STANFO.ADDDB.
022652 /                 ;::   BEGIN STANFO.ADCDDB.
022652 / 040000,,022664                                       ;
                       ADCDDB:
                       ; ANALOG-DIGITAL. INPUT ONLY.
022654 / 000077,,000000                                       ;
                       ADCIOS:
022655 / 000000,,000000                                       ;
022656 / 022707,,124545                                       ;
022657 / 001002,,140000                                       ;
022660 / 000000,,000000                                       ;
022661 / 000000,,000000                                       ;
022662 / 000000,,000000                                       ;
022663 / 000000,,000000                                       ;
                       ADCCSC:
                       ADCZB:
                       ADCBKI:
022670 / 000000,,000000                                       ;; CURRENT IOWD
                       ADCNBK:
022671 / 000000,,000000                                       ;; NEXT IOWD
                       ADCRCB:
022672 / 000000,,000000                                       ;; STARTUP IOWD FOR RECYCLE MODE
                       ADCTHR:
022673 / 000000,,000000                                       ;; THRESHHOLD FOR RECYCLE MODE
                       ADCCNO:
022674 / 000000,,000000                                       ;; CONO WORD TO START UP
                       ADCERA:
022675 / 000007,,000000                                       ;; ADDRESS OF PLACE IN USER CORE TO PUT ERROR CODES
                       ADCRUN:
022676 / 000007,,000000                                       ;; ADDRESS OF USER CORE WD TO 'SETOM' WHILE ADC RUNNING
                       ADCRCW:
022677 / 000007,,000000                                       ;; ADDRESS OF USER CORE WD TO PUT RECYCLE IOWD WHEN DONE
                       ADCP1L:
022700 / 000000,,000000                                       ;; P1'S SYNC LOCATION
                       ADCP2L:
022701 / 000000,,000000                                       ;; P2'S SYNC LOCATION
                       ADCSTI:
022702 / 000000,,000000                                       ;; STRAY ADC INTERRUPTS
                       ADCWPS:
022703 / 000000,,000000                                       ;; WORDS PER SECOND AT THIS CLOCK RATE AND PACKING
                       ADCZND:
                       ADCTAC:
022704 / 000000,,000000                                       ;; SAVED ACCUMULATOR FOR I-LEVEL (MUSN'T ZERO THIS!)
                       ADCNOH:
022705 / 000000,,000000                                       ;; WHEN ≠0, INHIBITS HUNG TIMEOUT
022706 / 040000,,022720                                       ;
                       DACDDB:
022710 / 000077,,000000                                       ;
                       DACIOS:
022711 / 000020,,000000                                       ;
022712 / 022552,,125302                                       ;
022713 / 001001,,140000                                       ;
022714 / 000000,,000000                                       ;
022715 / 000000,,000000                                       ;
022716 / 000000,,000000                                       ;
022717 / 000000,,000000                                       ;
                       DACCSC:
                       DACZB:
                       DACBKO:
022724 / 000000,,000000                                       ;; CURRENT IOWD
                       DACNBK:
022725 / 000000,,000000                                       ;; NEXT IOWD
                       DACCNO:
022726 / 000000,,000000                                       ;; CONO WORD TO START UP
                       DACERA:
022727 / 000007,,000000                                       ;; ADDRESS OF USER CORE WD TO PUT ERROR CODES
                       DACRUN:
022730 / 000007,,000000                                       ;; ADDRESS OF USER CORE WD TO `SETOM' WHILE DAC RUNNING
                       DACP1L:
022731 / 000000,,000000                                       ;; P1'S SYNC LOCATION
                       DACP2L:
022732 / 000000,,000000                                       ;; P2'S SYNC LOCATION
                       DACSTI:
022733 / 000000,,000000                                       ;; STRAY DAC INTERRUPTS
                       DACWPS:
022734 / 000000,,000000                                       ;; WORDS PER SECOND AT THIS CLOCK RATE AND PACKING
                       DACZND:
022735 /                 ;::    BEND STANFO.ADCDDB.
022735 /                 ;::   BEGIN STANFO.APRDAT.
                       BATYET:
022735 / 000000,,001130                                       ;;START AFTER 10 SECONDS
                       BATPNT:
022736 / 000000,,000000                                       ;;POINTER INTO BATMAN, ROBIN AND BATFLG
                       ;ZERO IN EITHER BATMAN OR ROBIN MEANS NO RUN!
                       BATMAN:
022737 / 735756,,434575                                       ;;SYSTEM STARTUP HELPER
022740 / 126360,,711200                                       ;;ACCOUNTING
022741 / 735451,,636475                                       ;;NEW SPOOLER
022742 / 737063,,605475                                       ;;XGP SPOOLER
022743 / 121563,,541512                                       ;;SERVICE LEVEL MONITOR
022744 / 731556,,631575                                       ;;NEWS SERVICE (AP)
022745 / 346255,,564436                                       ;;REMINDER FANTOM
022746 / 545747,,474562                                       ;; IMP MESSAGE SWITCHER  
022747 / 121550,,471512                                       ;;STATISTIC GATHERER	
022750 / 605756,,716371                                       ;;PRANCING PONY BILLING SYSTEM
022751 / 000000,,000000                                       ;;1 PATCH SPACE
                       ROBIN:
022752 / 000021,,000022                                       ;;SYSTEM STARTUP HELPER, (HEAVY)
022753 / 414364,,637163                                       ;;ADDRESS OF THIS GUY
022754 / 636054,,637163                                       ;;NEW SPOOLER
022755 / 636054,,637163                                       ;;XGP SPOOLER
022756 / 006354,,637163                                       ;;LOC OF SL MONITOR
022757 / 005663,,637163                                       ;;NEWS SERVICE (AP)
022760 / 625544,,637163                                       ;;REMINDER
022761 / 564564,,637163                                       ;
022762 / 005047,,637163                                       ;;STATISTICS PROPRIETOR	
022763 / 605671,,637163                                       ;;PRANCING PONY SYSTEM
022764 / 000000,,000000                                       ;;PATCH AREA
                       ;ALFRED, THE FAITHFUL BUTLER.
                       ALFRED:
                       ;POLICE COMMISSIONER GORDON MEMORIAL TABLE (PLEASE REMOVE YOUR FEET)
                       ;PRIVILEGES FOR PHANTOMS
                       GORDON:
023000 / 400401,,000000                                       ;;SYS STARTER CAN DO ANYTHING!
023001 / 002001,,000000                                       ;;SPY (NEEDS MES FOR AUTOLOGOUT)
023002 / 042001,,000000                                       ;;LPT SPOOLER
023003 / 042001,,000000                                       ;;XGP SPOOLER
023004 / 000101,,000000                                       ;;SERVICE LEVEL SYSTEM
023005 / 040001,,000000                                       ;;NEWS SERVICE (AP)
023006 / 000001,,000000                                       ;;REMINDER
023007 / 000000,,000000                                       ;;LOGGER		
023010 / 000041,,000000                                       ;;HE DIDDLES HGYET	
023011 / 000001,,000000                                       ;;PRANCING PONY SYSTEM
023012 / 000000,,000000                                       ;;PATCH AREA
                       ;END OF FTBAT
                       ONCEI:
023013 / 264000,,163647           JSR        ONCE             ;
                       SYSTHE:
023014 / 000000,,000000                                       ;;-1 => SYSTEM IS ON THE L'SCOPE DISK
                       DAMESS:
                       DISMON:
                       ;RPH FOR DISDATE
                       MONPTR:
023021 / 000000,,000000                                       ;
                       FIXBUF:
                       ERRYET:
023422 / 777777,,777777                                       ;
                       TIMDAT:
023423 / 000000,,000000                                       ;;<DATE>,,<TIME IN SECS>
                       INITIM:
023424 / 000000,,000000                                       ;;AS TIMDAT, TIME OF LAST RELOAD/RE-INITIALIZATION.
                       ; BEGINNING 2-PROCESSOR SPLIT DATA AREAS
                       P1DATA:
                       SPWUUF:
023425 / 000000,,000000                                       ;;SET WHEN SPACEWAR IS ACTIVE
                       SPWTMO:
023426 / 000000,,000000                                       ;;SPACEWAR TIMEOUT COUNT
                       SPWBLO:
023427 / 000000,,000000                                       ;;LOCATION OF BLOWN UP SPACEWAR JOB
                       SPWXCT:
023430 / 000000,,000000                                       ;;CONTAINS JRST 2,@UUO0 OR SOMETHING ELSE
                       INTACT:
023431 / 000000,,000000                                       ;
                       INTNF:
023432 / 000000,,000000                                       ;
                       INTACS:
                       INTSAC:
                       INTDIS:
023473 / 000000,,000000                                       ;
                       INTSP:
023474 / 000000,,000000                                       ;
                       INTREQ:
023475 / 000000,,000000                                       ;
                       INTQUA:
023476 / 000000,,000000                                       ;
                       CLKSV:
023477 / 000000,,036037                                       ;
                       CLKESV:
023500 / 000000,,036063                                       ;
                       ___TMP:
023501 / 000000,,000000                                       ;
                       APRTAC:
023502 / 000000,,000000                                       ;
                       APRAC1:
023503 / 000000,,000000                                       ;
                       APRAC2:
023504 / 000000,,000000                                       ;
                       APRJ:
023505 / 000000,,000000                                       ;
                       APRCN:
023506 / 000000,,000627                                       ;
                       APRIN1:
023507 / 000000,,000000                                       ;
                       APRIN2:
023510 / 000000,,000000                                       ;
                       APRIN3:
023511 / 000000,,000000                                       ;
                       APRID:
023512 / 000000,,000000                                       ;
                       APRCH:
023513 / 000000,,000616                                       ;
                       APRERR:
023514 / 000000,,000000                                       ;;APR ERROR BITS ON NON-EX MEM, ETC.
                       ;SET BY APRSER, CLEARED BY CLK ROUTINE(CLOCK)
                       APRPC:
023515 / 000000,,000000                                       ;;PC WHEN APR ERROR DETECTED
                       APRPDL:
023516 / 777640,,023516          IOWD APRPLN,APRPD            ;
                       APRPD:
                       ERRPD:
023657 / 777600,,023657          IOWD ERRPLN,ERRPDL           ;
                       ERRPDL:
                       DSFLAG:
024060 / 000000,,000000                                       ;
                       JOB:
024061 / 000000,,000000                                       ;
                       SJOB:
024062 / 000000,,000000                                       ;
                       JOBDAT:
                       JOBADR:
024063 / 000000,,000000                                       ;
                       LASTPR:
024064 / 000000,,000000                                       ;
                       USRREL:
024065 / 000000,,000000                                       ;
                       ;LOCATIONS COPIED FROM JOB DATA AREA INTO MONITOR WHEN A JOB RUNS
                       ;THIS PREVENTS THE USER FROM CLOBBERING THEM AND MAKES IT
                       ;EASIER FOR THE MONITOR TO LOCATE THESE QUANTITIES WHEN IT
                       ;NEEDS TO FOR THE CURRENT JOB
                       ;CONTENTS ARE COPIED BACK WHEN JOB BECOMES INACTIVE(SEE CLOCK)
                       ;COMPARE WITH JOB DATA AREA(SEE JOBDAT)
                       USRPRT:
                       USRHCU:
024066 / 000000,,000000                                       ;;HIGHEST USER IO CHANNEL IN USE
                       ;0 MEANS EITHER NONE OR CHAN. 0 IN USE
                       ;NEG, MEANS SAVE-GET HAS ACTIVE IO EVEN THOUGH USRJDA
                       ;TABLE IS OVERWRITTEN BY GET.
                       ;RH=ADR. OF SAVE-GET DEVICE(USED BY ANY ACT ROUT. IN
                       ;IN CORE SHUFFLER
                       ;ONLY CHAN. ASSIGNMENTS IN USE ARE COPIED INTO
                       ;MONITOR WHEN JOB RUNS
                       USRPC:
024067 / 000000,,000000                                       ;;JOB PC WHEN SCHEDULER IS CALLED
                       USRDDT:
024070 / 000000,,000000                                       ;;RH=STARTING ADR. OF USER DDT,LH UNUSED
                       USRJDA:
                       ;LH=UUOS DONE SO FAR FOR THIS CHANNEL(SEE SYSPAR)
                       ;0 MEANS NO DEVICE INITIALIZED ON THIS CHANNEL
                       ; FIRST LOC CLEARED BY SETUSR ROUTINE
                       ;ON A CALL [SIXBIT /RESET/]
                       ;ALSO CLEARS USRHCU
                       CHKYET:
024111 / 000000,,000000                                       ;
                       UUO0:
024112 / 000000,,000000                                       ;
024113 / 254000,,056672          JRST        UUO1             ;
                       UUO2:
024114 / 000000,,000000                                       ;;JSR HERE FOR OPCODES 100-127
024115 / 254000,,056730          JRST        UUO3             ;
                       UUOLOC:
024116 / 000000,,000000                                       ;
                       CLOCK:
024117 / 000000,,024262                                       ;
024117 / 004400,,024262 POINT 36,00024262,35                  ;
                       MONSUM:
024120 / 000000,,000000                                       ;
                       NULDAT:
                       PALIVE:
024261 / 000000,,000000                                       ;
                       NULBAD:
024262 / 000000,,000000                                       ;
                       CIPWT:
                       USRSAV:
024463 / 000000,,000000                                       ;;TEMPORARY FOR UUO HANDLER(IMPURE ROUTINE!)
                       CLKFLG:
024464 / 000000,,000000                                       ;;NON-ZERO WHEN CLK INTERRUPT FORCED FOR ANY REASON
                       CLKS17:
024465 / 000000,,000000                                       ;
                       USAVPC:
024466 / 000000,,000000                                       ;; SAVED PC ON ILM TRAPS
                       CLKPDL:
                       CLKCH:
024627 / 000000,,000710                                       ;
                       OTHERI:
024630 / 000000,,000000                                       ;; CONTAINS THE OTHER PROCESSOR'S IDENTIFICATION
                       TIMEFF:
024631 / 000000,,000000                                       ;
                       TIMEF:
024632 / 000000,,000000                                       ;;NON-ZERO FOR CLOCK INTERRUPT ON APR
                       ;SET BY APRSER, TESTED AND CLEARED BY CLK ROUTINE
                       TIME:
024633 / 000000,,000000                                       ;; TIME OF DAY IN TICKS SINCE MIDNIGHT
                       THSDAT:
024634 / 000000,,000000                                       ;;TODAY'S DATE((Y-1964)*12+M-1))*31+(D-1)
                       UPTIME:
024635 / 000000,,000000                                       ;
                       INTIME:
024636 / 000000,,000000                                       ;
                       SCHEDF:
024637 / 000000,,000000                                       ;;FORCED RESCHEDULING FLAG FOR CLK ROUTINE
                       ;USED TO FORCE RESCHEDULING WHEN JOB IS IN EXEC MODE
                       UUOXIT:
024640 / 254520,,024112           JEN      @024112            ;;UUO EXIT INST, SOMETIMES CONO PI,PIOFF (SEE USRXIT CODE)
                       UUOXI:
024641 / 254520,,024112           JEN      @024112            ;;BACKUP COPY FOR RESTORING ABOVE
                       INTHLD:
024642 / 000000,,000000                                       ;;FLAG TO DISABLE INTNOW (SEE USRXIT)
                       P2DATA:
                       ;	↑AFOOL:		0	;PART OF APRIL 1 HACK
                       UUO_SA:
                       ___TAC:
026101 / 000000,,000000                                       ;
                       LASTDI:
026102 / 000000,,000000                                       ;;LAST DISASTER TIME
                       LASTRE:
026103 / 000000,,000000                                       ;;LAST RESTART TIME
                       SHFWRD:
026104 / 000000,,000000                                       ;;TOTAL COUNT OF WORDS SHUFFLED BY SYSTEM
                       COMCNT:
026105 / 000000,,000000                                       ;;# OF COMMANDS TYPED-IN BUT NOT DECODED.
                       ;SET BY SCNSER, DECREMENTED BY COMCON
                       HNGTIM:
026106 / 000000,,000000                                       ;;HUNG DEVICE TIME COUNT CHECK FOR HUNG IO
                       ;DEVICES WHEN THIS GOES TO ZERO (ONCE A SECOND)
                       STUSER:
026107 / 000000,,000000                                       ;;JOB CURRENTLY USING THE SYSTEM TAPE
                       ;NEEDED SO CONTROL C WILL NOT TIE UP SYSTEM TAPE
                       ASSLGN:
026110 / 000000,,000000                                       ;;TEMP FOR ASSIGN COMMAND FOR LOGICAL NAME
                       ASSJBN:
026111 / 000000,,000000                                       ;;TEMP FOR ASSIGN COMMAND FOR JOB # OF PART MATCH DDB
                       APRLST:
026112 / 000000,,000000                                       ;; CLOCK INTERRUPT LIST
                       ESTINT:
026113 / 000000,,000000                                       ;; -1 → GOT INTO CH7 FROM ESTOP WITH INTACT SET
                       JBTSTS:
                       PDLCSC:
                       JBTDVW:
                       JBTGSL:
                       NJOBS:
                       CJOBS:
                       UUOPC:
                       UUOOPC:
                       JBTUPC:
                       JBTADR:
                       JBTDAT:
                       JBTPR2:
                       JBTLIN:
                       JBTPRV:
                       JB2PRV:
                       JBTTPV:
                       PRJPRG:
                       DSKPPN:
                       ;FTDSKPPN
                       SLCOST:
030120 / 000000,,000000                                       ;;=0,1,2 DEPENDS ON TIME OF DAY,TIME OF WEEK
                       SLNRES:
030121 / 000000,,000000                                       ;;NUMBER OF SL RESERVATIONS
                       SLRES:
                       JOBNAM:
                       JBTKCJ:
                       JBTBTM:
                       JOBPPN:
                       JOBCRD:
                       JBTUFD:
                       CUSLOC:
030742 / 000000,,000000                                       ;;SAME OF [1,3] UFD.
                       JOBDEV:
                       JOBLOG:
                       RTIME:
                       TTIME:
                       FTIME:
                       XTIME:
                       JBTWAT:
                       JB2WAT:
                       JBTRNB:
                       STIME:
                       TTCBCK:
                       ;TEMP FOR COMCNT BUG TRAP
                       ASTAB:
                       ASBTAB:
                       PAGNOW:
032346 / 000000,,000000                                       ;;-1 => PAGING NOW
                       TTYTAB:
                       TPYTAB:
                       PTYTAB:
                       CRKYET:
032564 / 000000,,000000                                       ;
                       JBTIOP:
                       JBTSIN:
                       SAVSAI:
                       JBTDTS:
                       JBTGLU:
                       JBTFS:
                       JBTMAI:
                       JBTTCR:
                       JBTMSK:
                       JBTIEN:
                       JBTIRQ:
                       JBTWKM:
                       JBTIIP:
                       INTDTM:
                       UUOPTR:
                       STATS:
                       STATNU:
035265 / 000000,,000000                                       ;; NUMBER OF TIMES WE'VE WRAPPED AROUND
                       JOBNM1:
035266 / 000000,,000000                                       ;; MAXIMUM JOB NUMBER
                       ; WHO LINE DATA STORAGE
                       LASTUP:
035267 / 000000,,000000                                       ;; NEGATIVE UPTIME WHEN SYSTEM WHO LINE LAST DONE
                       LASTNL:
035270 / 000000,,000000                                       ;; RECENT VALUE OF NEGATIVE RUN TIME FOR NULL JOB
                       JBSRUN:
                       WHONXT:
035273 / 000000,,000000                                       ;; NUMBER OF THE III WHOSE WHO LINE WAS DONE LAST
                       WHDDNX:
035274 / 000000,,000000                                       ;; NUMBER OF NEXT DATA DISK CHANNEL TO GET WHO LINE
                       WHOPTR:
035275 / 000000,,000000                                       ;; POINTER TO THE DD THAT WAS DONE LAST (SEE DPYSER&WHOQUE)
                       WHODAT:
035276 / 000000,,000000                                       ;; DATE ON CURRENT WHO LINE
                       FREWAT:
035277 / 000000,,000000                                       ;; FREE STORAGE RELEASE WAIT LIST
                       FRETAB:
                       T15CNT:
035400 / 000000,,000000                                       ;;COUNT FOR 1/4 TH SECOND CLOCK
                       DKBCNT:
035401 / 000000,,000000                                       ;;WHEN THIS GOES NEGATIVE, DKB HARDWARE
                       ;  IS CHECKED (CODE IS IN CLKSER).
                       NDDXOL:
035402 / 000000,,000000                                       ;;OLD VALUE OF NDDXCT
                       NDDLOL:
035403 / 000000,,000000                                       ;;OLD VALUE OF NDDLCT
                       NDSTAT:
035404 / 000000,,000000                                       ;;COUNTS DOWN TO RUN FROB IN 5 SECONDS.
                       STATPT:
035405 / 000000,,034465                                       ;
035405 / 442200,,034465 POINT 18,00034465,                    ;
                       ; BYTE POINTER TO STATISTICS TABLE
                       AUTOSY:
035406 / 000000,,000000                                       ;
                       SYSTOP:
035407 / 000000,,000000                                       ;;FIRST LOCATION USED BY USER PROGRAMS.
                       ;;ADDRESS BREAK CRAP . . .
                       BRKTAC:
035410 / 000000,,000000                                       ;
                       BRKAC1:
035411 / 000000,,000000                                       ;
                       BRKNUM:
035412 / 000000,,000000                                       ;; CURRENT NUMBER OF LEGAL PCS
                       BRKTAB:
                       ; DISASTER MESSAGE BUFFERS AND STUFF
                       DISBUF:
                       DISPTR:
036033 / 000000,,035433                                       ;
036033 / 440700,,035433 POINT 7,00035433,                     ;
                       DISOPT:
036034 / 000000,,035433                                       ;
036034 / 440700,,035433 POINT 7,00035433,                     ;
                       DISFLA:
036035 / 000000,,000000                                       ;
                       DISCTR:
036036 / 000000,,002400                                       ;
                       ; ACCUMULATOR SAVE ROUTINE FOR CLKING
                       CLKSAV:
036037 / 000000,,000000                                       ;
036040 / 336740,,024063         SKIPN   17,024063             ;; CURRENT JOB DATA AREA
036041 / 201740,,024121         MOVEI   17,024121             ;; NO, USE NULL JOB'S
036042 / 202717,,000036         MOVEM   16,JOBD16(17)         ;
036043 / 201717,,000020         MOVEI   16,JOBDAC(17)         ;
036044 / 251717,,000035           BLT   16,JOBD15(17)         ;
036045 / 200040,,024465          MOVE  TAC,CLKS17             ;
036046 / 202057,,000037         MOVEM  TAC,JOBD17(17)         ;
151675 / 000000,,000000                                       ;
036047 / 200540,,151675          MOVE  PID,151675             ;
036050 / 254020,,036037          JRST      @036037            ;
                       CL2SAV:
036051 / 000000,,000000                                       ;
036052 / 336740,,025301         SKIPN   17,025301             ;; CURRENT JOB DATA AREA
036053 / 201740,,025337         MOVEI   17,025337             ;; NO, USE NULL JOB'S
036054 / 202717,,000036         MOVEM   16,JOBD16(17)         ;
036055 / 201717,,000020         MOVEI   16,JOBDAC(17)         ;
036056 / 251717,,000035           BLT   16,JOBD15(17)         ;
036057 / 200040,,024465          MOVE  TAC,CLKS17             ;
036060 / 202057,,000037         MOVEM  TAC,JOBD17(17)         ;
151731 / 000000,,001216                                       ;
036061 / 200540,,151731          MOVE  PID,151731             ;
036062 / 254020,,036051          JRST      @036051            ;
                       CLKESA:
036063 / 000000,,000000                                       ;
036064 / 550740,,024063          HRRZ   17,024063             ;
036065 / 271740,,000020          ADDI   17,JOBDAC             ;
036066 / 202717,,000016         MOVEM   16,    16(17)         ;
036067 / 551717,,000015         HRRZI   16,    15(17)         ;
036070 / 251756,,000000           BLT   17,      (16)         ;
151675 / 000000,,000000                                       ;
036071 / 200540,,151675          MOVE  PID,151675             ;
036072 / 254000,,036102          JRST      CLKES1             ;
                       CL2ESA:
036073 / 000000,,000000                                       ;
036074 / 550740,,025301          HRRZ   17,025301             ;
036075 / 271740,,000020          ADDI   17,JOBDAC             ;
036076 / 202717,,000016         MOVEM   16,    16(17)         ;
036077 / 551717,,000015         HRRZI   16,    15(17)         ;
036100 / 251756,,000000           BLT   17,      (16)         ;
151731 / 000000,,001216                                       ;
036101 / 200540,,151731          MOVE  PID,151731             ;
                       CLKES1:
036102 / 200053,,024465          MOVE  TAC,CLKS17(PID)        ;
036103 / 200353,,024063          MOVE PROG,JOBDAT(PID)        ;
036104 / 202047,,000037         MOVEM  TAC,JOBD17(PROG)       ;
036105 / 200213,,024061          MOVE    J,   JOB(PID)        ;
036106 / 336053,,024466         SKIPN  TAC,USAVPC(PID)        ;
036107 / 200073,,024627          MOVE  TAC,@ CLKCH(PID)       ;
036110 / 402013,,024466         SETZM      USAVPC(PID)        ;
036111 / 607040,,010000          TLNN  TAC,010000             ;; IS PC IN EXEC?
036112 / 254000,,036116          JRST      036116             ;; YES, CAN'T SAVE HIS PC.
036113 / 202047,,000073         MOVEM  TAC, JOBPC(PROG)       ;
036114 / 316213,,024062          CAMN    J,  SJOB(PID)        ;
036115 / 202053,,024067         MOVEM  TAC, USRPC(PID)        ;
                       CLKES2:
036116 / 200140,,023474          MOVE    P, INTSP             ;
036117 / 200073,,023500          MOVE  TAC,@CLKESV(PID)       ;
036120 / 254020,,000001          JRST      @   TAC            ;
036121 /                 ;::    BEND STANFO.APRDAT.
                       ;	DATA AREA FOR PARITY SERVICE
                       PARBLK:
036121 / 000000,,000000                                       ;;SET BY CORE ROUTINES - OLD LOC OF SHUFFLED JOB
                       PARSJB:
036122 / 000000,,000000                                       ;;SAVE JOB NUMBER OF JOB BEING SHUFFLED.
                       PARSJN:
036123 / 000000,,000000                                       ;;FLAG WITH JOB NUMBER OF SHUFFLED JOB.
                       PARFLG:
036124 / 000000,,000000                                       ;;SET BY P2 WHEN IT HAS ERROR
                       P2RFLG:
036125 / 000000,,000000                                       ;;SET BY P1 WHEN IT SEES PARFLG
                       P2SA:
036126 / 000000,,000000                                       ;;PLACE FOR P2RINT TO SAVE AN AC
                       ERRLOC:
036127 / 777777,,777777                                       ;;IF > 0 THEN LAST LOC SEEN WITH BAD PARITY
                       RERLOC:
036130 / 000000,,000000                                       ;;RELATIVE ERROR LOCATION.
                       PARPSA:
036131 / 000000,,000000                                       ;;SAVE P HERE WHILE WE USE APRPDL
                       ERRPC:
036132 / 777777,,777777                                       ;;PC AT TIME OF ERROR
                       SYSERR:
036133 / 000000,,000000                                       ;;LEFT SIDE = -1 WHEN PARITY ERROR IS FOUND
                       ;IN THE SYSTEM (OR INDETERMINATE)
                       ;RIGHT SIDE = APR CONI BITS TO PRESERVE 
                       ;STATE OF SYS WR REF KLUGE.
                       LASLOS:
036134 / 000000,,000000                                       ;;SET TO JOB NUMBER OF LAST JOB THAT LOST
                       ERRJOB:
                       ;THIS PASS THROUGH CORE.
                       ; STATISTICS COUNTERS
                       ;  CAUTION:  THE RELATIVE ORDER OF THESE COUNTERS SHOULD NOT BE CHANGED,
                       ;    BECAUSE THE PROGRAM MONUSE THINKS IT KNOWS WHERE THINGS ARE
036137 / 000001,,000040           XWD HGXMAX,HGNMAX           ;
                       ;STBEG-2 CONTAINS # OF EACH KIND OF HG CNTR
036140 / 000000,,036210                                       ;;LOCATION STBEG-1 POINTS TO HISTOGRAM COUNTERS!  
                       NCORCA:
036141 / 000000,,000000                                       ;; NUMBER OF CALLS ON THE CORE ROUTINES
                       NFSGET:
036142 / 000000,,000000                                       ;; NUMBER OF TIMES FREE STORAGE IS GOTTEN
                       NFSGIV:
036143 / 000000,,000000                                       ;; NUMBER OF TIMES FREE STORAGE IS RELEASED
                       NCOMS:
036144 / 000000,,000000                                       ;; NUMBER OF COMMANDS THAT HAVE BEEN DISPATCHED TO
                       NDLYCM:
036145 / 000000,,000000                                       ;; NUMBER OF COMMANDS THAT HAVE BEEN DELAYED
                       NUUOS:
036146 / 000000,,000000                                       ;; NUMBER OF UUOS
                       NSCHED:
036147 / 000000,,000000                                       ;; NUMBER OF TIMES WE HAVE ENTERED THE JOB SCHEDULING LOOP
                       NQXFER:
036150 / 000000,,000000                                       ;; NUMBER OF QUEUE TRANSFERS
                       NOUTSW:
036151 / 000000,,000000                                       ;; NUMBER OF SWAPOUTS - 10
                       NINSWP:
036152 / 000000,,000000                                       ;; NUMBER OF SWAPINS
                       NDDQUE:
036153 / 000000,,000000                                       ;; NUMBER OF TASKS CREATED FOR THE DATA DISC QUEUE
                       NNUUOS:
036154 / 000000,,000000                                       ;; NUMBER OF NEW UUO DISPATCHES
                       NFSWAI:
036155 / 000000,,000000                                       ;; NUMBER OF TIMES WE HAD TO WAIT FOR FREE STORAGE
                       NFSLP1:
036156 / 000000,,000000                                       ;; NUMBER OF LOOPS (TYPE 1) IN FSGET
                       NNULLJ:
036157 / 000000,,000000                                       ;; NUMBER OF SCHEDULINGS THAT CHOSE THE NULL JOB
                       NJSWIT:
036160 / 000000,,000000                                       ;; NUMBER OF TIMES JOBS WERE SWITCHED
                       NWSCHE:
036161 / 000000,,000000                                       ;; NUMBER OF TIMES JOBS TURN THEMSELVES OFF - 20
                       NTMOS:
036162 / 000000,,000000                                       ;; NUMBER OF TIMES JOBS GET TIMED OUT
                       NJRNUL:
036163 / 000000,,000000                                       ;; NUMBER OF TIMES A JOB IS RUNNABLE WHILE THE NULL JOB IS RUNNING
                       NPWAIT:
036164 / 000000,,000000                                       ;; NUMBER OF FAILURES IN SYNCHRONIZATION
                       NLERRS:
036165 / 000000,,000000                                       ;; NUMBER OF TIMES THROUGH FININ1 WITH ERRORS
                       NSAERR:
036166 / 000000,,000000                                       ;; NUMBER OF TIMES THROUGH FININ1 WITH SUCCESS AFTER ERROR RETRIES
                       NLREQS:
036167 / 000000,,000000                                       ;; NUMBER OF TRANSFERS
                       NLRERS:
036170 / 000000,,000000                                       ;; NUMBER OF TRANSFERS PLUS NUMBER OF ERROR RETRIES
                       NFSGFA:
036171 / 000000,,000000                                       ;;NUMBER OF FAILURES FROM FSGET - 30
                       NABFE:
036172 / 000000,,000000                                       ;; NUMBER OF TIMES WE ADVANCED AN OUTPUT BUFFER
                       NABFF:
036173 / 000000,,000000                                       ;; NUMBER OF TIMES WE ADVANCED AN INPUT BUFFER
                       NFSLP2:
036174 / 000000,,000000                                       ;;NUMBER OF LOOPS (TYPE 2) IN FSGET
                       NPUSHD:
036175 / 000000,,000000                                       ;;MAXIMUM PUSH DOWN DEPTH USED IN A UUO PDL.
                       NDDFRM:
036176 / 000000,,000000                                       ;; NUMBER OF FRAMES CREATED FOR THE DATA DISC QUEUE
                       NDDLCT:
036177 / 000000,,000000                                       ;;-(NUMBER OF LINES SENT TO DD)
                       NDDLMX:
036200 / 000000,,000000                                       ;;MAX COUNT FOR 5 SECONDS
                       NDDXCT:
036201 / 000000,,000000                                       ;;NUMBER OF ENTRIES MADE TO DD QUEUE.-40
                       NDDXMX:
036202 / 000000,,000000                                       ;;MAX COUNT FOR 5 SECONDS
                       NDDL1C:
036203 / 000000,,000000                                       ;;COUNT OF 1 AND 2 LINE TRANSFERS TO DD.
                       NIOTS:
036204 / 000000,,000000                                       ;;HOW MANY NEW UUOS (700-777) HAVE BEEN CALLED
                       NSCALL:
036205 / 000000,,000000                                       ;;HOW MANY STANFORD CALLIS HAVE BEEN CALLED
                       HGSET:
036206 / 000000,,000000                                       ;;RESET VALUE FOR HGYET
                       HGYET:
036207 / 000000,,000000                                       ;
                       HGCNTS:
                       HGCH6:
036251 / 000000,,000000                                       ;;NUMBER OF TIMES CH5 ENTERED WITH CH6 ACTIVE
                       ;IF HGCH6 ISN'T INCREMENTED, THEN ONE OF NEXT 4 IS:
                       HGSYS:
036252 / 000000,,000000                                       ;;# OF OCCURRENCES OF ¬(USRMOD) ∧  (CH7 ACTIVE)
                       HGUSR:
036253 / 000000,,000000                                       ;;# OF OCCURRENCES OF  (USRMOD) ∧ ¬(CH7 ACTIVE)
                       HGUUO:
036254 / 000000,,000000                                       ;;# OF OCCURRENCES OF ¬(USRMOD) ∧ ¬(CH7 ACTIVE)
                       HGSPW:
036255 / 000000,,000000                                       ;;# OF OCCURRENCES OF  (USRMOD) ∧  (CH7 ACTIVE)
                       HGNULL:
036256 / 000000,,000000                                       ;;NUMBER OF TIMES NULL JOB RUNNING ∧ ∃ JOB WAITING
                       HGIDLE:
036257 / 000000,,000000                                       ;;NUMBER OF TIMES NULL JOB RUNNING W/ EMPTY RUNQ
                       HGCODE:
036260 / 000000,,000000                                       ;;VARIOUS CLKINT SUBROUTINES SET THIS VARIOUSLY
036261 /               ;: ALLDAT[J17,SYS] EOF.
036261 /               ;: IMPDDB[J17,SYS]
                       ; MODEL DEVICE DATA BLOCK FOR IMP CONNECTIONS
036261 / 100000,,000000                                       ;; DEVCMR
                       DDBMDL:
036263 / 000000,,000045                                       ;; DEVCHR, BUFFER SIZE
036264 / 000000,,000000                                       ;; DEVIOS
036265 / 016244,,116766                                       ;; DEVSER, UUO DISPATCH TABLE ADDRESS
036266 / 003003,,154403                                       ;
036267 / 000000,,000000                                       ;; DEVLOG
036270 / 000000,,000000                                       ;; DEVBUF
036271 / 000000,,000000                                       ;; DEVIAD
036272 / 000000,,000000                                       ;; DEVOAD
036273 / 000000,,000000                                       ;; DEVFIL
036274 / 000000,,000000                                       ;; DEVEXT
036275 / 000000,,000000                                       ;; INPUT LIST
036276 / 000000,,000000                                       ;; MESSAGE ALLOCATION
036277 / 000000,,000000                                       ;; BIT ALLOCATION
036300 / 000000,,000000                                       ;; NOMINAL MESSAGE ALLOCATION
036301 / 000000,,000000                                       ;; NOMINAL BIT ALLOCATION
036302 / 000000,,000000                                       ;; 1/2 OF THE NOMINAL MESSAGE ALLOCATION
036303 / 000000,,000000                                       ;; 1/2 OF THE NOMINAL BIT ALLOCATION
036304 / 000000,,000000                                       ;; HIS MESSAGE ALLOCATION
036305 / 000000,,000000                                       ;; HIS BIT ALLOCATION
036306 / 000000,,000000                                       ;; NUMBER OF MESSAGES IN INPUT LIST
036307 / 000000,,000000                                       ;; NUMBER OF BITS IN INPUT LIST
                       ; CLS, RFNM, ALL, RFC, INP WAIT TIMEOUTS
036311 / 777777,,777777                                       ;; TIMEOUT COUNT
                       IMPDIE:
036312 / 000000,,000000                                       ;; SET TO NON-ZERO TO KEEP IMP SYSTEM DOWN
                       ; OUTPUT ROUTINE STORAGE
                       IMPDEA:
036313 / 000000,,000000                                       ;; SET TO -1 IF IMP DECLARED DEAD
                       IMPOAC:
036314 / 000000,,000000                                       ;; SET TO -1 IF OUTPUT IS ACTIVE
                       IMPOBK:
036315 / 000000,,000000                                       ;; OUTPUT BLKO POINTER
                       IMPOCU:
036316 / 000000,,000000                                       ;; CURRENT BUFFER BEING OUTPUTTED
                       OLIST:
036317 / 000000,,000000                                       ;; OUTPUT LIST. XWD <LAST ELEMENT>,<FIRST ELEMENT>
                       IMPOFC:
036320 / 000000,,000000                                       ;; COUNT OF WDS TO GO IN 36B MODE
                       IMPOFM:
036321 / 000000,,000000                                       ;; SET TO -1 FOR FULL WORD (36B) MODE
                       IMPOCT:
036322 / 000000,,000000                                       ;; OUTPUT TIME-OUT COUNT
                       IMPOPD:
036323 / 000000,,000000                                       ;; OUTPUT SIDE PUSHDOWN LIST
                       IMPOPL:
                       ; INPUT ROUTINE STORAGE
                       IMPBKO:
036424 / 000000,,000000                                       ;; INPUT BLKI WORD
                       IMPICU:
036425 / 000000,,000000                                       ;; CURRENT INPUT BUFFER
                       IMPITO:
036426 / 000000,,000000                                       ;; TOP OF CURRENT INPUT LIST
                       ILIST:
036427 / 000000,,000000                                       ;; INPUT LIST, XWD <LAST ELEMENT>,<FIRST ELEMENT>
                       IMPIFM:
036430 / 000000,,000000                                       ;; -1 FOR 36B MODE, OTHERWISE, 32B MODE
                       IMPHEL:
036431 / 000000,,000000                                       ;; IF NO BUFFER AVAILABLE AT I-LEVEL, INPUT WORD IS PLACED HERE
                       IMPHLF:
036432 / 000000,,000000                                       ;; FLAG THAT SAYS WE ARE WAITING FOR AN INPUT BLOCK
                       IMPIHD:
036433 / 000000,,000000                                       ;; SET TO -1 IF WORD IN IMPHELP IS LAST WORD IN MESSAGE
                       IMPSPA:
036434 / 000000,,000000                                       ;; SPARE INPUT BUFFER
                       IMPCLN:
036435 / 000000,,000000                                       ;; SET TO -1 WHEN A CLOCK REQUEST FOR A NEW SPARE IS PLANTED
                       IMPINW:
036436 / 000000,,000000                                       ;; NUMBER OF WORDS OF REGULAR MESSAGE
                       IMPIMS:
036437 / 000000,,000000                                       ;; MASK FOR CLEANING OUT LAST WORD OF REGULAR MESSAGE
                       IMPIPD:
036440 / 000000,,000000                                       ;; INPUT SIDE PUSHDOWN LIST
                       IMPIPL:
                       ; I-LEVEL GENERAL STORAGE
                       ; IN IMPCHAN WE HAVE . . .
                       ;	CONSZ IMP,IDONE!IEND
                       ;	JRST IMPINT
                       ;	CONSZ IMP,ODONE
                       ;	JRST IMPOUT
                       ;	CONSZ IMP,IMPERR
                       ;	JRST IMPERB
                       IMPAC1:
036541 / 000000,,000000                                       ;; ACCUMULATOR STORAGE
                       IMPAC2:
036542 / 000000,,000000                                       ;
                       IMPAC3:
036543 / 000000,,000000                                       ;
                       IMPPID:
036544 / 000000,,000000                                       ;
                       IMPIDS:
036545 / 000000,,122042                                       ;
                       IMPODS:
036546 / 000000,,122317                                       ;
                       IMPECT:
036547 / 000000,,000000                                       ;; ERROR BIT COUNT DOWN
                       ; STORAGE FOR CLOCK LEVEL WAIT ROUTINE
                       IMPCLW:
036550 / 000000,,000000                                       ;; -1 MEANS WE ARE WAITING FOR FREE STORAGE
                       IMPPDP:
036551 / 000000,,000000                                       ;; WHERE PUSHDOWN POINTER IS STORED WHILE WAITING
                       IMPFP:
036552 / 000000,,000000                                       ;; THIS IS STACK AS IT LOOKS WHEN WE ENTER AT IMPCLK
                       IMPSAV:
                       ; WHERE CLOCK LEVEL PUSHDOWN LIST IS STORED WHILE WAITING
                       ; STORAGE FOR CLOCK COUNTING SYSTEM TIMEOUTS
                       TIMCNT:
036713 / 000000,,000000                                       ;; COUNT DOWN FOR CHECKING TIMED WAITS
                       TIMWAI:
036714 / 000000,,000000                                       ;; NUMBER OF PEOPLE WAITING FOR A TIMEOUT
                       ; STORAGE FOR FREE STORAGE MANAGER
                       IMPFSL:
036715 / 000000,,000000                                       ;; FREE STORAGE LIST
                       IMPSPN:
036716 / 000000,,000000                                       ;; COUNT OF NUMBER OF SPARE BLOCKS NEEDED
                       ; STORAGE FOR POLLING ROUTINE
                       POLCNT:
036717 / 000000,,002640                                       ;
                       ; FOR CLEANUP ROUTINE (ACTUALLY PART OF POLLING ROUTINE)
                       HCLSCT:
036720 / 000000,,000000                                       ;; COUNTER FOR CLEANUPS
                       ; OTHER STORAGE . . .
                       RECOVE:
036721 / 000000,,000000                                       ;; FLAG FOR ERROR RECOVERY SYSTEM
                       IMPPMS:
036722 / 000000,,000000                                       ;; SET ≠ 0 TO PRINT ALL ERROR MESSAGES
                       RSTHST:
036723 / 000000,,000377                                       ;; HOST TO BE RESET NEXT
                       NOPCNT:
036724 / 000000,,000004                                       ;;COUNT OF NOPS YET TO BE SENT TO IMP TO INITIALIZE
                       ; HOST AND LINK TABLES
                       ; STORAGE FOR ROUTINE THAT ASSIGNS NEW AND UNIQUE LINKS
                       LSTLNK:
036725 / 000000,,000000                                       ;; LAST LINK NUMBER ASSIGNED
                       ; HOST TABLES AND LINK TABLE
                       L0WAIT:
036726 / 000000,,000000                                       ;; COUNT OF NUMBER OF JOBS IN IO WAIT FOR LINK 0 TO BECOME UNBLOCKED
                       L0CWTL:
036727 / 000000,,000000                                       ;; LIST OF MESSAGES INITIATED AT CLOCK LEVEL FOR LINK 0
                       L0BLOK:
                       LNKMAX:
036740 / 000000,,000040                                       ;; FOR THE SYSTEM TABLE READERS
                       LNKTAB:
                       IMPDDB:
                       IMPLS:
                       IMPFS:
                       IMPBS:
                       IMPSTB:
                       IMPRFQ:
                       FFLNK:
037301 / 000000,,000000                                       ;; INDEX OF FIRST FREE LINK.
                       ; THE FOLLOWING ARE COUNTERS OF THE NUMBER OF TIMES VARIOUS EVENTS HAVE HAPPENED
                       FRMIMP:
037302 / 000000,,000000                                       ;; NUMBER OF MESSAGES FROM IMP
                       FLNOPS:
037303 / 000000,,000000                                       ;; NUMBER OF NO-OPS RECEIVED
                       TRACES:
037304 / 000000,,000000                                       ;; TRACE MESSAGES
                       ERWOMI:
037305 / 000000,,000000                                       ;; ERRORS WITHOUT MASSAGE IDENTIFICATION
                       NIMPDN:
037306 / 000000,,000000                                       ;; NUMBER OF IMP GOING DOWN MESSAGES
                       NBLNKS:
037307 / 000000,,000000                                       ;; BLOCKED LINK
                       LTFULL:
037310 / 000000,,000000                                       ;; LINK TABLE FULL
                       ERWMI:
037311 / 000000,,000000                                       ;; ERROR WITH MASSAGE IDENTIFICATION
                       INCMTR:
037312 / 000000,,000000                                       ;; INCOMPLETE TRANSMISSION
                       ILLMT:
037313 / 000000,,000000                                       ;; ILLEGAL MESSAGE TYPE
                       BDRFNM:
037314 / 000000,,000000                                       ;; RFNM RECEIVED ON AN UNBLOCKED LINK
                       NODDBS:
037315 / 000000,,000000                                       ;; NO DDB WHEN ONE WAS CALLED FOR
                       UNKLNK:
037316 / 000000,,000000                                       ;; NUMBER OF MESSAGES TO A NON-EX LINK
                       NRFNL:
037317 / 000000,,000000                                       ;; NUMBER OF RFNMS WITH NO LINK IN LINK TABLE
                       NILLOP:
037320 / 000000,,000000                                       ;; ILLEGAL SECOND LEVEL PROTOCAL OP CODE
                       BSILL:
037321 / 000000,,000000                                       ;; BYTE SIZE FOR SECOND LEVEL COMMAND ILLEGAL
                       BCMM:
037322 / 000000,,000000                                       ;; BYTE COUNT TOO SMALL FOR SECOND LEVEL COMMAND
                       RERRM:
037323 / 000000,,000000                                       ;; NUMBER OF ERROR MESSAGE WE HAVE RECEIVED
                       SPRRP:
037324 / 000000,,000000                                       ;; RESET REPLY WITH NO RESET GIVEN
                       N2RFCS:
037325 / 000000,,000000                                       ;; NUMBER OF TIMES TWO RFCS FROM THE SAME HOST WERE RECEIVED
                       NNOCLS:
037326 / 000000,,000000                                       ;; NUMBER OF TIMES NO CLOSE WAS SENT WHEN ONE WAS RECEIVED
                       NILLST:
037327 / 000000,,000000                                       ;; NUMBER OF TIMES THE TABLES WERE IN AN ILLEGAL STATE
                       NNCOR:
037330 / 000000,,000000                                       ;; NUMBER OF TIMES WE DIDN'T HAVE ANY FREE STORAGE AT UUO LEVEL
                       NNOCLW:
037331 / 000000,,000000                                       ;; NUMBER OF TIMES WE DIDN'T ACKNOWLEDGE A CLS
                       NOLKS:
037332 / 000000,,000000                                       ;; NUMBER OF TIMES WE COULDN'T ASSIGN A LINK NUMBER
                       NHOST0:
037333 / 000000,,000000                                       ;; NUMBER OF TIMES WE GOT A MESSAGE FOR HOST ZERO
                       SLNOPS:
037334 / 000000,,000000                                       ;; NUMBER OF SECOND LEVEL NO-OPS RECEIVED
                       NHANGS:
037335 / 000000,,000000                                       ;; INPUT STOPPED DUE TO LACK OF FREE STORAGE
                       NDPBLK:
037336 / 000000,,000000                                       ;; NUMBER OF TIMES WE TRIED TO STEAL F.S. FROM DPYSER
                       NSPSUS:
037337 / 000000,,000000                                       ;; SPARE F.S. BLOCKS WE USED
                       NRSETS:
037340 / 000000,,000000                                       ;; NUMBER OF RESETS WE HAVE RECEIVED
                       NMESIN:
037341 / 000000,,000000                                       ;; MESSAGES RECEIVED
                       NMESOU:
037342 / 000000,,000000                                       ;; MESSAGES SENT
                       NNOLNK:
037343 / 000000,,000000                                       ;; WE RAN OUT OF TABLE SPACE
                       NSCLSS:
037344 / 000000,,000000                                       ;; NUMBER OF UNSOLICITED CLSS WE RECEIVED
                       NOPADB:
037345 / 000000,,000000                                       ;; NO PADDING BIT FOUND
                       OPTMO:
037346 / 000000,,000000                                       ;; NUMBER OF TIMES THE INTERFACE TIMED OUT
                       IERBIT:
037347 / 000000,,000000                                       ;; NUMBER OF TIMES THE IMP ERROR BIT CAME UP
                       SLUNLK:
037350 / 000000,,000000                                       ;; SECOND-LEVEL UNKNOWN LINKS.
                       RWNOSS:
037351 / 000000,,000000                                       ;; REGULAR MESSAGE WITH NO SEND OR RECEIVE SOCKET
                       NIWCNO:
037352 / 000000,,000000                                       ;; NUMBER OF INPUTS (REGULAR MESSAGES) WITHOUT CONNECTION OPEN
                       NSSC:
037353 / 000000,,000000                                       ;; NUMBER OF REGULAR MESSAGES FOR CLOSED SOCKET
                       NALWNC:
037354 / 000000,,000000                                       ;; NUMBER OF ALLOCATES FOR UNCONNECTED LINK
037355 /               ;: IMPDDB[J17,SYS] EOF.
037355 /               ;: LOWCOR[J17,SYS]
                       SHDACS:
                       ; BEGINNING OF PROTECTED PART OF MONITOR . . .
                       ;; ON THIS PAGE LIE SOME VERY COMMON AND USEFUL ROUTINES . . .
                       TPOPJ1:
037375 / 350003,,777777           AOS      777777(P)          ;;RESTORE TAC THEN SKIP RETURN
                       TPOPJ:
037376 / 262140,,000001           POP    P,000001             ;;RESTORE TAC
037377 / 263140,,000000          POPJ    P,                   ;;AND RETURN
                       CPOPJ2:
037400 / 350003,,000000           AOS            (P)          ;;DOUBLE SKIP SUBROUTINE RETURN
                       CPOPJ1:
037401 / 354003,,000000          AOSA            (P)          ;;SKIP SUBROUTINE RETURN
                       PIONJ:
037402 / 700600,,000200          CONO   PI,  PION             ;
                       CPOPJ:
037403 / 263140,,000000          POPJ    P,                   ;
                       FMCHK:
037404 / 260140,,037412         PUSHJ    P, ZSHAD             ;
037405 / 254000,,037401          JRST      037401             ;;FM ENB OK
151375 / 440700,,154240                                       ;
037406 / 200040,,151375          MOVE  TAC,151375             ;
037407 / 264000,,000517           JSR      DDTTYP             ;
037410 / 262140,,000517           POP    P,DDTTYP             ;
037411 / 254220,,000517          JRST    4,@DDTTYP            ;
                       ZSHAD:
037412 / 700340,,000040         CONSO  APR,000040             ;;ARE WE THE PDP-10?
037413 / 263140,,000000          POPJ    P,                   ;;NO. DO NOTHING.
037414 / 261140,,000140          PUSH    P,000140             ;;SAVE THE UUO LOCATIONS
037415 / 261140,,000141          PUSH    P,   141             ;
037416 / 261140,,024064          PUSH    P,LASTPR             ;
037417 / 202740,,037374         MOVEM   17,037374             ;;SAVE THE REAL AC'S SO WE DON'T ZERO THEM
037420 / 201740,,037355         MOVEI   17,SHDACS             ;
037421 / 251740,,037373           BLT   17,037373             ;
152723 / 254000,,037432          JRST      ZSHAD1             ;
037422 / 200000,,152723          MOVE      152723             ;
037423 / 202000,,000141         MOVEM      000141             ;;SET TO TRAP OUR ILLEGAL INSTRUCTION
151613 / 776000,,002000                                       ;
037424 / 200740,,151613          MOVE   17,151613             ;
037425 / 202740,,024064         MOVEM   17,LASTPR             ;
037426 / 700140,,000017         DATAO  APR,    17             ;
037427 / 205740,,037444         MOVSI   17,USRSHD             ;
037430 / 251740,,000017           BLT   17,    17             ;
037431 / 254040,,000001          JRST    1,000001             ;;RUN USER MODE CODE IN ACS
                       ZSHAD1:
037432 / 250000,,037355          EXCH      037355             ;;SHDACS←0 IF NO FM ENB
152241 / 037356,,000001                                       ;
037433 / 200740,,152241          MOVE   17,152241             ;
037434 / 251740,,000017           BLT   17,    17             ;
037435 / 262140,,024064           POP    P,LASTPR             ;
037436 / 262140,,000141           POP    P,   141             ;
037437 / 262140,,000140           POP    P,   140             ;
037440 / 700140,,024064         DATAO      LASTPR             ;
037441 / 336000,,037355         SKIPN      SHDACS             ;
037442 / 350003,,000000           AOS            (P)          ;;SKIP RETURN IF FM ENB OFF
037443 / 263140,,000000          POPJ    P,                   ;
                       USRSHD:
037444 / 777777,,777777                                       ;;GETS LOADED INTO ACS (STARTING AT ZERO)
037445 / 402000,,776000         SETZM      776000             ;;CLEAR SHADOW ZERO
037446 / 251740,,776017           BLT   17,776017             ;;BLT ACS INTO SHADOW MEM
037447 / 254200,,000000          JRST    4,                   ;;GET BACK TO EXEC MODE
037463 / 000000,,776000                                       ;;17
037464 /                 ;::   BEGIN STANFO.PWAIT.
                       ;COMMENT ⊗
                       ;NEW, SIMPLE-MINDED PWAIT ... ALGORITHM (?) BY D.POOLE
                       ;REQUIRES SYNINI TO SETZM A (SETOM A FOR OLD PWAIT CODE)
                       ;0(TAC) > 0 => P1 WANTS/HAS IT
                       ;1(TAC) > 0 => P2 WANTS/HAS IT
                       PWAIT:
037464 / 261140,,000001          PUSH    P,   TAC             ;
037465 / 256023,,777777           XCT      @777777(P)         ;;PICK UP ARG AFTER CALL
037466 / 326540,,037474         JUMPN  PID,  P2L0             ;
                       P1L0:
037467 / 350001,,000000           AOS            (TAC)        ;
037470 / 337001,,000001         SKIPG           1(TAC)        ;;SKIP IF P2 ALSO WANTS/HAS IT
037471 / 254000,,037562          JRST      037562             ;;GOTCHA
037472 / 370001,,000000           SOS            (TAC)        ;;GIVE IT UP AND TRY AGAIN
037473 / 254000,,037467          JRST        P1L0             ;
                       P2L0:
037474 / 350001,,000001           AOS           1(TAC)        ;
037475 / 337001,,000000         SKIPG            (TAC)        ;
037476 / 254000,,037562          JRST      PWAITX             ;
037477 / 370001,,000001           SOS           1(TAC)        ;
037500 / 254000,,037474          JRST        P2L0             ;
                       XWAIT:
037501 / 261140,,000001          PUSH    P,   TAC             ;
037502 / 256023,,777777           XCT      @777777(P)         ;;PICK UP ARG AFTER CALL
037503 / 326540,,037560         JUMPN  PID,XWAIT1             ;
037504 / 371001,,000000          SOSL            (TAC)        ;
037505 / 254000,,037562          JRST      PWAITX             ;
                       XWAITE:
037506 / 260140,,000316         PUSHJ    P,PUSHIT             ;
037507 / 260140,,044066         PUSHJ    P,DISMES             ;
037520 / 550043,,777757          HRRZ  TAC,777757(P)          ;;-1 FOR PUSH P,TAC
037521 / 260140,,044170         PUSHJ    P,DISLOC             ;
037522 / 260140,,044076         PUSHJ    P,044076             ;
037523 / 260140,,044066         PUSHJ    P,DISMES             ;
037550 / 260140,,043761         PUSHJ    P,DISFLU             ;
037551 / 700340,,000040         CONSO  APR, MAOFF             ;
037552 / 254200,,037554          JRST    4,037554             ;
037553 / 260140,,000347         PUSHJ    P,DDTCAL             ;
037554 / 260140,,000341         PUSHJ    P, POPIT             ;
153212 / 402001,,000001         SETZM           1(TAC)        ;
153213 / 254000,,037562          JRST      PWAITX             ;
037555 / 326540,,153212         JUMPN  PID,153212             ;
037556 / 402001,,000000         SETZM            (TAC)        ;
037557 / 254000,,037562          JRST      PWAITX             ;
                       XWAIT1:
037560 / 375001,,000001         SOSGE           1(TAC)        ;
037561 / 254000,,037506          JRST      XWAITE             ;
                       PWAITX:
037562 / 262140,,000001           POP    P,   TAC             ;
037563 / 254000,,037401          JRST      CPOPJ1             ;
                       ;⊗
037564 /                 ;::    BEND STANFO.PWAIT.
                       DEVOPR:
                       ;OPERATORS CONSOLE DEVICE = CTY.
                       ;PUBLIC LOGICAL NAME "OPR" WILL BE THIS DEVICE
                       ;ALSO UNEXPLAINED MONITOR ERROR MESSAGE WILL BE TYPED
                       ;ON TTY OPR(FIRST TTY TYPED ON IF DEVOPR=0)
                       CONFIG:
                       SYSTAP:
                       ;BYTE POINTERS
                       PUUOAC:
037573 / 000000,,000014                                       ;
037573 / 270400,,000014 POINT 4,00000014,12                   ;
                       ;UUO AC FIELD
                       PIOMOD:
037574 / 000000,,000000                                       ;
037574 / 000400,,000000 POINT 4,00000000,35                   ;
                       ;MODE BITS
                       PJOBN:
037575 / 000006,,000001                                       ;
037575 / 360606,,000001 POINT 6,06000001,5                    ;
                       ;DEVICE JOB ASSIGNMENT
                       PDVBLN:
037576 / 000006,,000001                                       ;
037576 / 001306,,000001 POINT 11,06000001,35                  ;
                       ; DEVICE BUFFER LENGTH
                       PUNIT:
037577 / 000006,,000001                                       ;
037577 / 130706,,000001 POINT 7,06000001,35-PUNITP            ;
                       ;DEVICE UNIT NO.
                       PSEGN:
037600 / 000004,,026114                                       ;
037600 / 000604,,026114 POINT 6,04026114,35                   ;
                       ; NUMBER OF HIGH SEGMENT THIS JOB HAS
                       PDSEGN:
037601 / 000015,,000000                                       ;
037601 / 000615,,000000 POINT 6,15000000,35                   ;
                       ; NUMBER OF SEGMENT IN JBTDTS
                       PSINF0:
037602 / 000000,,032665                                       ;
037602 / 000600,,032665 POINT 6,00032665,35                   ;
                       ; HEAD OF LIST, FORWARD LINK
                       PSINFJ:
037603 / 000004,,032665                                       ;
037603 / 000604,,032665 POINT 6,04032665,35                   ;
                       ; FORWARD LINK (J)
                       PSINFT:
037604 / 000001,,032665                                       ;
037604 / 000601,,032665 POINT 6,01032665,35                   ;
                       ; FORWARD LINK (TAC)
                       PSINB0:
037605 / 000000,,032665                                       ;
037605 / 060600,,032665 POINT 6,00032665,29                   ;
                       ; HEAD OF LIST, BACKWARD LINK
                       PSINBJ:
037606 / 000004,,032665                                       ;
037606 / 060604,,032665 POINT 6,04032665,29                   ;
                       ; BACKWARD LINK (J)
                       PSINBT:
037607 / 000001,,032665                                       ;
037607 / 060601,,032665 POINT 6,01032665,29                   ;
                       ; BACKWARD LINK (TAC)
                       PDVTIM:
037610 / 000006,,000001                                       ;
037610 / 220606,,000001 POINT 6,06000001,17                   ;
                       ;TIME IN SECONDS BEFORE DEVICE
                       ;IS SAID TO BE HUNG
                       PDVCNT:
037611 / 000006,,000001                                       ;
037611 / 300606,,000001 POINT 6,06000001,11                   ;
                       ;COUNTER DOWN EACH SECOND,
                       ;1 TO 0 TRANSITION MEANS HUNG DEVICE
                       IMGIN:
037612 / 000004,,021427                                       ;
037612 / 001004,,021427 POINT 8,04021427,35                   ;
                       ;POINTER TO INCORE IMAGE (1K BLOCKS)
                       IMGOUT:
037613 / 000004,,021427                                       ;
037613 / 111004,,021427 POINT 8,04021427,26                   ;
                       ;POINTER TO OUTCORE IMAGE
                       IMGINT:
037614 / 000006,,021427                                       ;
037614 / 001006,,021427 POINT 8,06021427,35                   ;
                       ;POINTER TO INCORE IMAGE
                       SYSPPN:
                       ;1,1 IS SYSPPN ;JS
                       DUMPPN:
                       ;1,2 IS DUMPPP  ;JS
                       CUSPPN:
                       ;1,3 IS CUSP AREA
                       HELPPP:
                       ;100,100 IS HELPPP AND DEMOS ;JS
                       ;MONTH TABLE FOR DAYTIME PRINTING
                       MONTAB:
037621 / 360004,,520316                                       ;
037622 / 330004,,321302                                       ;
037623 / 360004,,660322                                       ;
037624 / 350004,,064122                                       ;
037625 / 360004,,660331                                       ;
037626 / 350004,,525316                                       ;
037627 / 360004,,525314                                       ;
037630 / 360004,,065307                                       ;
037631 / 350005,,161320                                       ;
037632 / 360004,,760724                                       ;
037633 / 350004,,723726                                       ;
037634 / 360004,,221303                                       ;
                       MIDNIT:
037635 / 000023,,615000                                       ;;NO OF JIFFIES TILL MIDNIGHT
                       ; THE FOLLOWING IS A LIST OF THE ASCII NAMES OF THE QUEUES
                       ; SO SYSTAT CAN READ THEM
                       QNAMS:
037636 / 432530,,345642                                       ;;THIS BECOMES QUEUE 0, WHICH IS ACTUALLY UNUSED
037637 / 516512,,120100                                       ;;SYSTEM TAPE WAIT
037640 / 422512,,120100                                       ;;DECTAPE CONTROL WAIT (UP TO 8 DRIVES)
037641 / 422072,,120100                                       ;;DATA CONTROL (DC) WAIT - MAGTAPE AND DECTAPE
037642 / 466512,,120100                                       ;;MAGTAPE CONTROL WAIT (UP TO 8 UNITS)
037643 / 446372,,750500                                       ;;IO WAIT
037644 / 422231,,753642                                       ;; DISK IO WAIT
037645 / 422572,,120100                                       ;; DEVICE WAIT
037646 / 472531,,450500                                       ;;JOB NUMBER NOT ASSIGNED
037647 / 516511,,750242                                       ;;STOP (CONTROL C)
037650 / 446352,,453642                                       ;; INTERRUPT WAIT
037651 / 516130,,750500                                       ;; UPPER SEGMENT WAIT
037652 / 512531,,650500                                       ;; GENERALIZED RUN QUEUE
037653 / 522424,,020100                                       ;; TELETYPE RUN QUEUE
                       ; DON'T FORGET COMMAND WAIT!!
                       ;  HISTOGRAM STATISTIC GATHERING ROUTINE.
                       ;	CALL:	PUSHJ	P,HG
                       ;		RETURN HERE ALWAYS
                       ;	CURRENTLY, THIS ROUTINE IS CALLED (ONLY) BY KDBINT.
                       ;	THUS, STATISTICS ARE GATHERED ON EVERY KEYSTROKE OF EVERY
                       ;MICROSWITCH KEYBOARD.
                       ;	THIS ROUTINE, ONCE EVERY HGSET TIMES IT IS CALLED, WILL
                       ;INCREMENT ONE & ONLY ONE OF THE 5 COUNTERS: HGCH6,HGUSR,HGSPW,HGUUO,
                       ;HGSYS.  IN ADDITION, IF HGSYS IS INCREMENTED, THEN ONE OF THE
                       ;COUNTERS HGCNTS WILL BE INCREMENTED, AND IF HGUSR IS INCREMENTED
                       ;AT A TIME WHEN THE NULL JOB IS RUNNING, THEN EITHER HGNULL OR HGIDLE
                       ;DEPENDING ON THE STATE OF <TQ+RUNQ>.
                       ;	THIS ROUTINE CLOBBERS ACCUMULATOR TAC, RETURNS WITH POPJ, P.
                       ;NO OTHER ACCUMULATORS ARE USED.
                       HG:
037655 / 372000,,036207          SOSE      036207             ;;TIME TO DO OUR THING YET?
037656 / 263140,,000000          POPJ    P,                   ;;NO.
037657 / 200040,,036206          MOVE  TAC, HGSET             ;
037660 / 202040,,036207         MOVEM  TAC,036207             ;;RESET TIMER
037661 / 700700,,000040         CONSZ   PI,000040             ;;CH2 ACTIVE?
037662 / 350000,,036250           AOS      036250             ;;YES. COUNT IT
037663 / 700700,,001000         CONSZ   PI,001000             ;;CHANNEL 6 IN PROGRESS?
037664 / 354000,,036251          AOSA      036251             ;;YES, INCREMENT OUR COUNTER AND RETURN
037665 / 334040,,000646         SKIPA  TAC,000646             ;;ELSE, GET PC WORD
037666 / 263140,,000000          POPJ    P,                   ;;RETURN FOR CH6 ACTIVE.
037667 / 332000,,023425         SKIPE      SPWUUF             ;
037670 / 254000,,037674          JRST      037674             ;;CATCH SPCWAR UUO'S ALSO
037671 / 607040,,010000          TLNN  TAC,010000             ;;WE INTERRUPTED A USER?
037672 / 254000,,037706          JRST      037706             ;;NO. WE'RE IN THE SYSTEM
037673 / 700700,,000400         CONSZ   PI,000400             ;;USER IN CHANNEL 7?
                       ISHGSP:
037674 / 354000,,036255          AOSA      036255             ;;YES - SPACEWAR USER
037675 / 354000,,036253          AOSA      036253             ;;NO. PLAIN USER CODE.
037676 / 263140,,000000          POPJ    P,                   ;
037677 / 332000,,024061         SKIPE      024061             ;;NULL JOB RUNNING?
037700 / 263140,,000000          POPJ    P,                   ;;NO
037701 / 335000,,021307        SKIPGE      021307             ;;IS THIS IDLE OR WASTED
037702 / 331000,,021306         SKIPL      021306             ;
037703 / 354000,,036256          AOSA      036256             ;;WASTED TIME (RUNQ OR TQ NOT EMPTY)
037704 / 350000,,036257           AOS      036257             ;;IDLE TIME.
037705 / 263140,,000000          POPJ    P,                   ;
                       HG4:
037706 / 700740,,000400         CONSO   PI,000400             ;;CHANNEL 7 IN PROGRESS?
037707 / 354000,,036254          AOSA      036254             ;;NO WE'RE IN A UUO.
037710 / 354000,,036252          AOSA      036252             ;;WE INTERRUPTED CHANNEL 7.
037711 / 263140,,000000          POPJ    P,                   ;
037712 / 550040,,036260          HRRZ  TAC,036260             ;;GET IDENTIFICATION CODE
037713 / 301040,,000040          CAIL  TAC,000040             ;;A LEGAL CODE?
037714 / 201040,,000000         MOVEI  TAC,                   ;;NO, MAKE IT THE DEFAULT CODE
037715 / 350001,,036210           AOS      HGCNTS(TAC)        ;;INCREMENT APPROPRIATE HISTOGRAM COUNTER
037716 / 263140,,000000          POPJ    P,                   ;
037717 /               ;: LOWCOR[J17,SYS] EOF.
037717 /               ;: PARSER[J17,SYS]
037717 /                 ;::   BEGIN STANFO.PARSER.
                       ;R. E. GORIN 7 AUG 72.  
                       PARCLK:
                       ;		PUSHJ	P,PARCLK
037717 / 700600,,001020          CONO   PI,001020             ;;TURN OFF APR TO AVOID TIMING ERRORS
037720 / 476000,,036125         SETOM      036125             ;;SET SECOND LEVEL FLAG
037721 / 402000,,036124         SETZM      036124             ;;CLEAR PRIMARY FLAG
037722 / 254000,,037724          JRST      037724             ;;JOIN PARITY ERROR INTERRUPT CODE
                       PARINT:
037723 / 700600,,001020          CONO   PI,001020             ;;TURN OFF APR SO WE CAN TEST FOR BAD PARITY.
                       PARIN0:
037724 / 202140,,036131         MOVEM    P,036131             ;;ASSUME WE HAVE NO AC'S.
037725 / 200140,,023516          MOVE    P,023516             ;;GET A STACK.
037726 / 260140,,000316         PUSHJ    P,PUSHIT             ;
037727 / 201540,,000000         MOVEI  PID,                   ;;SET PROCESSOR IDENTIFICATION
037730 / 260140,,044076         PUSHJ    P,044076             ;;START STUFFING THE TYPEOUT BUFFER
037731 / 260140,,044320         PUSHJ    P,044320             ;;ANNOUNCE THE DATE AND TIME
037732 / 336000,,036125         SKIPN      036125             ;;IS THE PDP-6 HALUCINATING AGAIN?
037733 / 254000,,037756          JRST      037756             ;;NO IT MUST BE P1
037734 / 260140,,044066         PUSHJ    P,044066             ;;BLAME ON THE STONES
037746 / 200040,,000731          MOVE  TAC,000731             ;;GET THE PC OF PDP-6'S ERROR.
037747 / 603040,,010000          TLNE  TAC,010000             ;;IS THIS IN USER MODE?
037750 / 606040,,777760          TRNN  TAC,777760             ;;YES. IS THIS ABOVE THE AC'S
037751 / 254000,,040017          JRST      040017             ;;EXEC MODE OR RUNNING IN THE AC'S
037752 / 550100,,025302          HRRZ TAC1,025302             ;;GET CURRENT RELOCATION DATA
037753 / 405100,,776000          ANDI TAC1,776000             ;;LOWER PART OF THE RELOCATION ONLY
037754 / 271042,,000000          ADDI  TAC,      (TAC1)       ;;ADD RELOCATION
037755 / 254000,,040017          JRST      040017             ;;SAVE ERROR PC AND PRINT IT.
                       PARIN1:
037756 / 260140,,044066         PUSHJ    P,044066             ;;HERE FOR P1 PARITY ERROR
037765 / 200040,,000616          MOVE  TAC,000616             ;;GET THE PC FROM 
037766 / 603040,,010000          TLNE  TAC,010000             ;;IS THIS IN USER MODE?
037767 / 606040,,777760          TRNN  TAC,777760             ;;YES. IS THIS ABOVE THE AC'S
037770 / 254000,,040017          JRST      040017             ;;EXEC MODE OR RUNNING IN THE AC'S
037771 / 606040,,400000          TRNN  TAC,400000             ;;POSSIBLE UPPER?
037772 / 254000,,040014          JRST      040014             ;;NO THIS HAS TO BE A LOWER.
037773 / 550100,,000616          HRRZ TAC1,000616             ;;GET THE USER MODE PC.
037774 / 554740,,024064          HLRZ  AC3,024064             ;;GET THE CURRENT PROTECTION
037775 / 660740,,001777           TRO  AC3,001777             ;;TURN ON LOW ORDER BITS.
037776 / 307117,,000000          CAIG TAC1,      (AC3)        ;;IS THIS PC IN THE LOWER?
037777 / 254000,,040014          JRST      040014             ;;YES
040000 / 305740,,400000         CAIGE  AC3,400000             ;;IS THE LOWER GREATER THAN 128K (HA HA)
040001 / 201740,,400000         MOVEI  AC3,400000             ;;NO. THIS IS THE NUMBER TO SUBTRACT FROM PC
040002 / 275057,,000000          SUBI  TAC,      (AC3)        ;;LEAVING RELATIVE PC IN UPPER
040003 / 550740,,024064          HRRZ  AC3,024064             ;;GET THE RELOCATION
040004 / 242740,,000011           LSH  AC3,000011             ;;SHIFT IT TO SELECT RELOC OF UPPER.
040005 / 405740,,776000          ANDI  AC3,776000             ;;MASK
040006 / 640740,,400000           TRC  AC3,400000             ;;UN-BUGGER IT -- RPH 2-7-73
040007 / 271057,,000000          ADDI  TAC,      (AC3)        ;;ADD IT TO THE PC.
040010 / 202040,,036132         MOVEM  TAC,036132             ;;SAVE ERROR PC.
040011 / 260140,,044066         PUSHJ    P,DISMES             ;
                       ;DENOTE BY THIS A PC IN THE UPPER
040013 / 254000,,040020          JRST      PARIN4             ;
                       PARIN2:
040014 / 550100,,024064          HRRZ TAC1,024064             ;;GET CURRENT RELOCATION DATA
040015 / 405100,,777000          ANDI TAC1,777000             ;;LOWER PART OF RELOCATION
040016 / 271042,,000000          ADDI  TAC,      (TAC1)       ;;ADD RELOCATION
                       PARIN3:
040017 / 202040,,036132         MOVEM  TAC,036132             ;;SAVE ERROR PC.
                       PARIN4:
040020 / 260140,,044200         PUSHJ    P,044200             ;;WRITE THE ERROR PC
040021 / 260140,,044076         PUSHJ    P,044076             ;;AND A CRLF
040022 / 700620,,000625          CONO   PI,@000625            ;;TURN OFF ERROR FLAG.
040023 / 476000,,036127         SETOM      036127             ;;SET TO SIGNIFY NONE FOUND YET.
040024 / 476000,,036134         SETOM      036134             ;;JOB NUMBER OF LAST LOSER FOUND.
040025 / 403100,,036123         SETZB TAC1,PARSJN             ;
040026 / 402000,,036133         SETZM      036133             ;;ASSUME NO ERRORS SYSTEM CORE.
040027 / 200040,,036132          MOVE  TAC,036132             ;;GET THE ERROR PC
040030 / 603040,,010000          TLNE  TAC,010000             ;;USER MODE?
040031 / 254000,,040040          JRST      040040             ;;YES.
040032 / 476000,,036133         SETOM      036133             ;;EXEC MODE. PROBABLE SYSTEM ERROR.
040033 / 405040,,777777          ANDI  TAC,777777             ;;PC ONLY
040034 / 302040,,072261          CAIE  TAC,072261             ;;IS THIS THE BLT IN THE SHUFFLER?
040035 / 306040,,072262          CAIN  TAC,072262             ;;OR POSSIBLY HERE.
040036 / 200100,,036122          MOVE TAC1,036122             ;;SHUFFLE OPERATION. GET THE JOB NUMBER
040037 / 202100,,036123         MOVEM TAC1,036123             ;;SET FLAG IF A SHUFFLER OPERATION.
                       PARIN5:
040040 / 402000,,036135         SETZM      036135             ;;ZERO OUR TABLE OF LOSING JOBS
040041 / 402000,,036136         SETZM      036136             ;;
040042 / 200100,,022066          MOVE TAC1,022066             ;;GET SIZE OF REAL MEMORY
040043 / 303100,,400000         CAILE TAC1,400000             ;;IS IT SMALL ENOUGH FOR ONE AOBJN?
040044 / 201100,,400000         MOVEI TAC1,400000             ;;NO. WE'LL DO THIS MUCH AT ONCE.
040045 / 211102,,777760         MOVNI TAC1,777760(TAC1)       ;;OFFSET TO SKIP ACS
040046 / 514100,,000002          HRLZ TAC1,000002             ;;SWAP COUNT
040047 / 541100,,000020          HRRI TAC1,000020             ;;OFFSET PAST ACS
040050 / 201760,,000625         MOVEI  AC3,@000625            ;;GET THE MASK FOR THE CONO
                       PARL0:
040051 / 200002,,000000          MOVE            (TAC1)       ;;LOOK AT MEMORY
040052 / 700757,,000000         CONSO   PI,      (AC3)        ;;SKIP IF ERROR
                       PARL1:
040053 / 253100,,040051         AOBJN TAC1,040051             ;;LOOP AND COUNT
040054 / 325100,,040064        JUMPGE TAC1,040064             ;;JUMP IF COUNT WAS EXHAUSTED.
040055 / 700617,,000000          CONO   PI,      (AC3)        ;;SHUT OFF ERROR INDICATOR.
040056 / 202002,,000000         MOVEM            (TAC1)       ;;STORE GOOD PARITY IN MEMORY
040057 / 261140,,000002          PUSH    P,000002             ;;HAVE TO SAVE THIS FOR LATER.
040060 / 260140,,040141         PUSHJ    P,040141             ;;PARITY ERROR FOUND
040061 / 262140,,000002           POP    P,000002             ;;RESTORE COUNTER
040062 / 201760,,000625         MOVEI  AC3,@000625            ;;RESTORE CONO MASK
040063 / 254000,,040053          JRST      040053             ;;RESTORE COUNT AND REJOIN THE LOOP.
                       PARL2:
040064 / 200100,,022066          MOVE TAC1,022066             ;;GET THE SIZE OF OUR MEMORY
040065 / 307100,,400000          CAIG TAC1,400000             ;;IS IT TOO BIG TO HAVE BEEN SEARCHED?
040066 / 254000,,040107          JRST      040107             ;;SMALL MEMORY HAS ALL BEEN SEARCHED.
040067 / 275100,,400000          SUBI TAC1,400000             ;;LEAVE US WITH COUNT OF HOW MUCH TO LOOK AT
040070 / 210100,,000002          MOVN TAC1,000002             ;;NEGATE
040071 / 514100,,000002          HRLZ TAC1,000002             ;;SWAP
040072 / 541100,,400000          HRRI TAC1,400000             ;;OFFSET TO UPPER REACHES OF MEMORY
040073 / 201760,,000625         MOVEI  AC3,@000625            ;;GET MASK FOR CONSO/CONO
                       PARL3:
040074 / 200002,,000000          MOVE            (TAC1)       ;
040075 / 700757,,000000         CONSO   PI,      (AC3)        ;;ANY ERROR?
                       PARL4:
040076 / 253100,,040074         AOBJN TAC1,040074             ;;LOOP
040077 / 325100,,040107        JUMPGE TAC1,040107             ;;JUMP IF ALL DONE
040100 / 700617,,000000          CONO   PI,      (AC3)        ;;SHUT OFF ERROR INDICATORS
040101 / 202002,,000000         MOVEM            (TAC1)       ;;STORE GOOD PARITY IN MEMORY.
040102 / 261140,,000002          PUSH    P,000002             ;;SAVE COUNTER
040103 / 260140,,040141         PUSHJ    P,040141             ;;SERVICE THIS ERROR
040104 / 262140,,000002           POP    P,  TAC1             ;
040105 / 201760,,000625         MOVEI  AC3,@000625            ;;RESTORE CONSO/CONO MASK
040106 / 254000,,040076          JRST      040076             ;;AND RETURN TO LOOP
                       PARL5:
040107 / 331000,,036127         SKIPL      036127             ;;HAS THIS BEEN SET UP?
040110 / 254000,,040122          JRST      040122             ;;YES. WE MUST HAVE PRINTED SOMETHING
040111 / 260140,,044066         PUSHJ    P,044066             ;;WE DIDN'T FIND ANY.
040117 / 260140,,037412         PUSHJ    P,037412             ;;ZERO SHADOW MEMORY IN CASE WE LOST THERE.
040120 / 255000,,000000          JFCL                         ;
040121 / 563000,,036133         HRROS      036133             ;;CHECK THE SYSTEM.   DEPT. OF REDUNDANCY DEPT.
                       PARL6:
040122 / 200040,,036133          MOVE  TAC,036133             ;;ERROR IN SYSTEM CORE?
040123 / 325040,,040127        JUMPGE  TAC,040127             ;;JUMP IF ERROR WAS NOT IN SYSTEM
040124 / 260140,,050113         PUSHJ    P,050113             ;;JUST IN CASE WE NEED THIS
040125 / 255000,,000000          JFCL                         ;
040126 / 255000,,000000          JFCL                         ;
                       ;ALL FIXED.
                       PARL7:
040127 / 260140,,044076         PUSHJ    P,044076             ;
040130 / 260140,,000341         PUSHJ    P, POPIT             ;
040131 / 200140,,036131          MOVE    P,036131             ;;GET STACK BACK (OR WHATEVER WAS IN IT).
040132 / 336000,,036125         SKIPN      036125             ;;WAS THIS THE PDP-6 HACKING?
040133 / 254000,,040137          JRST      040137             ;;NO. THIS WAS THE PDP-10
040134 / 402000,,036125         SETZM      036125             ;;CLEAR ERROR FLAG 
040135 / 700600,,002020          CONO   PI,002020             ;;RESTORE INTERRUPT SYSTEM
040136 / 263140,,000000          POPJ    P,                   ;;RETURN TO P1 CLOCK LEVEL
                       PARL9:
040137 / 700600,,002020          CONO   PI,002020             ;;TURN ON THE APR CHANNEL
040140 / 254520,,000616           JEN      @000616            ;;DISMISS THIS INTERRUPT
                       PARERF:
040141 / 200040,,036127          MOVE  TAC,036127             ;;REMEMBER OLD VALUE OF ERRLOC
040142 / 552100,,036127         HRRZM TAC1,036127             ;;SAVE PRESENT ERROR LOCATION
040143 / 325040,,040153        JUMPGE  TAC,040153             ;;JUMP IF THIS IS NOT THE FIRST TIME HERE.
040144 / 260140,,044066         PUSHJ    P,044066             ;;PUT OUT THE HEADING
                       PARER1:
040153 / 550040,,036127          HRRZ  TAC,036127             ;;GET LOCATION
040154 / 260140,,044170         PUSHJ    P,044170             ;;WRITE LOCATION
040155 / 260140,,044102         PUSHJ    P,044102             ;;WRITE A TAB
040156 / 550040,,036127          HRRZ  TAC,036127             ;;GET LOCATION
040157 / 200041,,000000          MOVE  TAC,      (TAC)        ;;GET DATA
040160 / 260140,,044213         PUSHJ    P,044213             ;;WRITE LOSING DATA AS OCTAL HALF WORDS
040161 / 260140,,044102         PUSHJ    P,044102             ;;PUT NEXT THING UNDER HEADING
040162 / 550440,,036127          HRRZ DSER,036127             ;;GET THE LOCATION AGAIN (LOC = DSER)
040163 / 260140,,072570         PUSHJ    P,072570             ;;MAKE A BYTE POINTER TO CORTAB
040164 / 134200,,000001          ILDB    J,000001             ;;LOAD JOB NUMBER INTO J
040165 / 305200,,000100         CAIGE    J,000100             ;;IS THIS A SPECIAL CODE?
040166 / 327200,,040223         JUMPG    J,040223             ;;JUMP IF CORE IS ASSIGNED TO NORMAL JOB
040167 / 332000,,036123         SKIPE      036123             ;;ARE WE IN A SHUFFLE?
040170 / 322200,,040213         JUMPE    J,040213             ;;YES.  JUMP IF ALLEGED UNASSIGNED CORE.
                       PARR1A:
040171 / 316200,,036134          CAMN    J,036134             ;;SAME AS LAST LOSER?
040172 / 254000,,044076          JRST      044076             ;;YES. JUST TYPE A CRLF AND RETURN
040173 / 202200,,036134         MOVEM    J,036134             ;;SAVE CODE FOR LAST LOSER
040174 / 327200,,040201         JUMPG    J,040201             ;;JUMP IF NOT UNASSIGNED CORE
040175 / 260140,,044066         PUSHJ    P,044066             ;;FOR UNASSIGNED CORE
040200 / 263140,,000000          POPJ    P,                   ;;RETURN LOOK FOR MORE.
                       PARER2:
040201 / 302200,,000101          CAIE    J,000101             ;;IS THIS THE SYSTEM?
040202 / 254000,,040210          JRST      040210             ;;NO. MUST BE FREE STORAGE.
040203 / 563000,,036133         HRROS      036133             ;;REMEMBER TO CHECKSUM THE SYSTEM
040204 / 260140,,044066         PUSHJ    P,DISMES             ;
040207 / 263140,,000000          POPJ    P,                   ;
                       PARER3:
040210 / 260140,,044066         PUSHJ    P,DISMES             ;
040212 / 263140,,000000          POPJ    P,                   ;
                       PARR4B:
040213 / 200200,,036123          MOVE    J,036123             ;;JOB NUMBER OF GUY BEING SHUFFLED.
040214 / 550040,,036121          HRRZ  TAC,036121             ;;GET LOC OF OLD CORE
040215 / 275441,,000000          SUBI DSER,      (TAC)        ;;MAKE RELATIVE LOCATION.
040216 / 321440,,040221         JUMPL DSER,040221             ;;THIS ISN'T PART OF THE OLD CORE.
040217 / 554040,,036121          HLRZ  TAC,036121             ;;GET SIZE OF OLD CORE
040220 / 303441,,000000         CAILE DSER,      (TAC)        ;;SKIP IF ERROR IS IN OLD SHUFFLED CORE.
                       PARR4C:
040221 / 201200,,000000         MOVEI    J,                   ;
040222 / 322200,,040171         JUMPE    J,040171             ;;TREAT THIS AS UNUSED CORE.
                       PARER4:
040223 / 261140,,000004          PUSH    P,000004             ;;SAVE JOB NUMBER
040224 / 550104,,027120          HRRZ TAC1,JBTADR(J)          ;;GET THE BASE ADDRESS OF THIS JOB
040225 / 316200,,036123          CAMN    J,036123             ;;THIS JOB SHUFFLE IN PROGRESS?
040226 / 550100,,036121          HRRZ TAC1,036121             ;;YES. GET THE OLD JOB LOCATION.
040227 / 550040,,036127          HRRZ  TAC,036127             ;;GET THE ERROR LOCATION
040230 / 275042,,000000          SUBI  TAC,      (TAC1)       ;;FORM THE USER RELATIVE ADDRESS
040231 / 202040,,036130         MOVEM  TAC,036130             ;;SAVE RELOCATED ERROR LOCATION.
040232 / 260140,,044170         PUSHJ    P,044170             ;;TYPE 6 CHARACTERS
040233 / 200203,,000000          MOVE    J,      (P)          ;;GET THE JOB NUMBER INTO J AGAIN
040234 / 316200,,036134          CAMN    J,036134             ;;SAME AS LAST TIME?
040235 / 254000,,040247          JRST      040247             ;;YES. DON'T TELL JOB NAME AGAIN
040236 / 202200,,036134         MOVEM    J,036134             ;;REMEMBER FOR NEXT TIME
040237 / 260140,,044102         PUSHJ    P,044102             ;;TYPE A TAB FOR SEPARATION
040240 / 200203,,000000          MOVE    J,      (P)          ;;MAKE SURE NO ONE CLOBBERS J.
040241 / 260140,,044104         PUSHJ    P,044104             ;;TYPE JOB NUMBER(JOB NAME)
040242 / 312200,,036123          CAME    J,036123             ;;IS THIS A SHUFFLE OPERATION?
040243 / 254000,,040247          JRST      PARR4A             ;
040244 / 260140,,044066         PUSHJ    P,DISMES             ;
                       PARR4A:
040247 / 260140,,044076         PUSHJ    P,044076             ;
040250 / 200203,,000000          MOVE    J,      (P)          ;;RESTORE J (AGAIN) 
040251 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;;GET THE JOB STATUS WORD
040252 / 607040,,001000          TLNN  TAC,001000             ;;IS THIS REALLY AN UPPER?
040253 / 254000,,040275          JRST      040275             ;;NO, JUST A SIMPLE LOWER.
040254 / 260140,,040357         PUSHJ    P,040357             ;;HAS THIS UPPER LOST BEFORE (OR IS IT FIXABLE)?
040255 / 254000,,037376          JRST      037376             ;;YES. DON'T TELL LOWERS AGAIN
040256 / 201040,,400000         MOVEI  TAC,400000             ;;IN CASE OF A SEGMENT
040257 / 272040,,036130          ADDM  TAC,036130             ;;ADD 400000 TO RELOCATED ERROR ADDRESS
040260 / 201200,,000077         MOVEI    J,000077             ;;FOR ALL THE JOBS IN THE WORLD....
                       PARER5:
040261 / 135040,,037600           LDB  TAC,037600             ;;GET THE JOB NUMBER OF THIS GUY'S UPPER
040262 / 312043,,000000          CAME  TAC,      (P)          ;;SAME AS THIS UPPER?
040263 / 367200,,040261          SOJG    J,040261             ;;NO.
040264 / 323200,,040271        JUMPLE    J,040271             ;;JUMP IF NO MORE USERS OF THIS UPPER
040265 / 261140,,000004          PUSH    P,000004             ;;SAVE THIS JOB ON THE STACK
040266 / 260140,,040277         PUSHJ    P,040277             ;;TELL A LOWER SEGMENT.
040267 / 262140,,000004           POP    P,     J             ;
040270 / 367200,,040261          SOJG    J,040261             ;;DECREMENT J AND LOOK FOR MORE.
                       PARER6:
040271 / 262140,,000004           POP    P,000004             ;;GET THE NUMBER OF THIS UPPER.
040272 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;;GET A RIDICULOUS NAME
040273 / 202044,,030142         MOVEM  TAC,JOBNAM(J)          ;;SAVE IT AS THE JOB NAME
040274 / 263140,,000000          POPJ    P,                   ;;NO ONE WILL ATTACH TO THIS AGAIN.
                       PARER8:
040275 / 260140,,040277         PUSHJ    P,040277             ;;TELL THE USER ABOUT WHAT BEFELL HIM
040276 / 254000,,037376          JRST      037376             ;;ADJUST STACK AND RETURN.
                       TELUSR:
040277 / 260140,,040357         PUSHJ    P,040357             ;;MARK THIS JOB HAS ERROR
040300 / 263140,,000000          POPJ    P,                   ;;HE'S BEEN TOLD BEFORE.
040301 / 205040,,000400         MOVSI  TAC,000400             ;;PICKUP PARITY ERROR ENABLE BIT
040302 / 616044,,033665          TDNN  TAC,JBTIEN(J)          ;;IS THIS USER ENABLED FOR THIS?
040303 / 254000,,040312          JRST      040312             ;;NO. TELL HIM AND STOP HIM
040304 / 436044,,033765          IORM  TAC,JBTIRQ(J)          ;;SET PARINT BIT FOR THIS USER
040305 / 476013,,023475         SETOM      INTREQ(PID)        ;;REQUEST A USER INTERRUPT
040306 / 200100,,036130          MOVE TAC1,036130             ;;GET THE RELOCATED ADDRESS OF ERROR
040307 / 202104,,034265         MOVEM TAC1,INTDTM(J)          ;;SAVE IT FOR THIS USER.
040310 / 700600,,004001          CONO   PI,004001(7-CLKCHN)   ;;REQUEST INTERRUPT ON CLOCK CHANNEL
040311 / 263140,,000000          POPJ    P,                   ;
                       TELUS1:
040312 / 260140,,137657         PUSHJ    P,137657             ;;GET THE USER'S TTY
040313 / 200040,,036130          MOVE  TAC,RERLOC             ;
040314 / 554744,,027120          HLRZ  AC3,JBTADR(J)          ;
040315 / 316200,,036123          CAMN    J,036123             ;;SHUFFLED JOB?
040316 / 554740,,036121          HLRZ  AC3,036121             ;;YES. USE THIS ADDRESS.
040317 / 303057,,000000         CAILE  TAC,      (AC3)        ;;IN LOWER?
040320 / 254000,,040333          JRST      040333             ;;NO. IT IS IN THE UPPER
040321 / 260140,,042676         PUSHJ    P,042676             ;;STUFF DATA INTO TTY
040332 / 254000,,040345          JRST      TELUS3             ;
                       TELUS2:
040333 / 260140,,042676         PUSHJ    P,INLMES             ;
                       TELUS3:
040345 / 200040,,036130          MOVE  TAC,036130             ;;GET THE RELOCATED ERROR
040346 / 260140,,043700         PUSHJ    P,043700             ;;TELL HIM THE LOCATION.
040347 / 260140,,042713         PUSHJ    P,PRCRCC             ;
040350 / 260140,,137707         PUSHJ    P,137707             ;;START THE USER'S TTY TYPING
040351 / 331004,,026114         SKIPL      JBTSTS(J)          ;;IS THIS GUY RUNNABLE?
040352 / 263140,,000000          POPJ    P,                   ;;NO.
                       TELSTP:
040353 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
040354 / 603040,,010000          TLNE  TAC,010000             ;;LOGGED IN?
040355 / 254000,,045672          JRST      045672             ;;YES. JUST STOP IT.
040356 / 254000,,045550          JRST      045550             ;;NO. KILL THE PHANTOM
                       ;CALL THIS ROUTINE TO SEE IF HE NEEDS TO BE TOLD
                       ;WILL TRY TO REPEAT SWAPIN IF POSSIBLE
                       MARKER:
                       ;PUSHJ HERE TO MARK JOB IN J AS HAVING ERROR.
040357 / 323200,,037403        JUMPLE    J,037403             ;;IMPOSSIBLE JOB NUMBER
040360 / 301200,,000100          CAIL    J,  JOBN             ;
040361 / 263140,,000000          POPJ    P,                   ;;IMPOSSIBLE JOB, UNNATURAL ACTS
040362 / 201044,,000000         MOVEI  TAC,      (J)          ;;GET JOB NUMBER
040363 / 400100,,000000          SETZ TAC1,                   ;
040364 / 246040,,777773          LSHC  TAC,777773             ;
040365 / 241100,,000005           ROT TAC1,     5             ;
040366 / 201740,,000001         MOVEI  AC3,     1             ;
040367 / 241742,,777760           ROT  AC3,777760(TAC1)       ;;ROTATE TO AN UNUSUAL POSITION
040370 / 612741,,036135          TDNE  AC3,ERRJOB(TAC)        ;;IS THIS BIT SET ALREADY?
040371 / 263140,,000000          POPJ    P,                   ;;YES.
040372 / 436741,,036135          IORM  AC3,ERRJOB(TAC)        ;;NO. SET IT
040373 / 200040,,036130          MOVE  TAC,RERLOC             ;
040374 / 554744,,027120          HLRZ  AC3,JBTADR(J)          ;
040375 / 307057,,000000          CAIG  TAC,      (AC3)        ;;CAN'T FIX HIS UPPER HERE
040376 / 332004,,032043         SKIPE       STIME(J)          ;;NOW SEE IF THE SWAPPER CAN FIX IT
040377 / 254000,,037401          JRST      037401             ;;MODIFIED SINCE SWAPIN
040400 / 554044,,021427          HLRZ  TAC,JBTSWP(J)          ;
040401 / 322040,,037401         JUMPE  TAC,037401             ;;NOT SWAPPED OUT YET
040402 / 336004,,021760         SKIPN        XJOB(J)          ;
040403 / 350000,,021760           AOS        XJOB             ;
040404 / 350004,,021760           AOS        XJOB(J)          ;;THIS SHOULD MAKE IT GET SWAPPED
040405 / 263140,,000000          POPJ    P,                   ;
                       P2RINT:
040406 / 700620,,000734          CONO   PI,@000734            ;;ZERO ERROR BIT
040407 / 202040,,036126         MOVEM  TAC,036126             ;;SAVE TAC
040410 / 201040,,000017         MOVEI  TAC,000017             ;;SCAN THE AC'S
040411 / 203001,,000000         MOVES            (TAC)        ;
040412 / 365040,,040411         SOJGE  TAC,040411             ;;LOOP
040413 / 700720,,000734         CONSZ   PI,@000734            ;;IS THAT WHERE IT IS?
040414 / 254000,,040423          JRST      040423             ;;YES
040415 / 476000,,036124         SETOM      036124             ;;NO, TELL THE TEN
040416 / 200040,,036124          MOVE  TAC,036124             ;;WAIT FOR THE PDP-10 TO SEE THE FLAG
040417 / 326040,,040416         JUMPN  TAC,040416             ;;WAIT UNTIL IT GOES ZERO
040420 / 200040,,036125          MOVE  TAC,036125             ;;WAIT FOR THE PDP-10 TO FINISH PARSER
040421 / 326040,,040420         JUMPN  TAC,040420             ;;
040422 / 254000,,040424          JRST      040424             ;;RESTORE TAC AND DISMISS
                       PARACS:
040423 / 700620,,000734          CONO   PI,@000734            ;;CLEAR PARITY ERROR
                       P2ROUT:
040424 / 200040,,036126          MOVE  TAC,036126             ;;RESTORE ACCUMULATOR
040425 / 254520,,000731           JEN      @000731            ;;DISMISS INTERRUPT
040426 /                 ;::    BEND STANFO.PARSER.
040426 /               ;: PARSER[J17,SYS] EOF.
040426 /               ;: SYSINI[J17,SYS]
040426 /                 ;::   BEGIN STANFO.SYSINI.
                       ;INITIALIZE SYSTEM DATA STORAGE
                       LIBPNT:
040426 / 000000,,040427                                       ;
040426 / 440700,,040427 POINT 7,00040427,                     ;
                       SYSINI:
040447 / 265040,,040450           JSP  TAC,040450             ;
040450 / 603040,,010000          TLNE  TAC,010000             ;;USER MODE?
040451 / 254000,,165142          JRST      165142             ;;YES. SOMEONE IS RUNNING THE DMP COPY.
040452 / 700200,,200000          CONO  APR,200000             ;;I/O RESET
040453 / 700600,,010400          CONO   PI,010400             ;;PI RESET
                       JSR2:
040454 / 256000,,023013           XCT      023013             ;;DO ONCE-ONLY OPERATORS DIALOGUE
040455 / 700200,,200000          CONO  APR,200000             ;;I/O RESET AGAIN (D.R.D)
040456 / 700600,,010400          CONO   PI,010400             ;;CLEAR PI'S
040457 / 744740,,000400         CONSO  DSK,000400             ;;LIBRASCOPE ON LINE?
040460 / 254000,,040464          JRST      040464             ;;YES!
040461 / 200040,,040426          MOVE  TAC,040426             ;;GET A POINTER TO THE MESSAGE
040462 / 264000,,000517           JSR      000517             ;;PRINT MESSAGE
040463 / 254200,,040464          HALT      040464             ;;AND WAIT FOR GO AHEAD
                       ONLINE:
040464 / 402000,,026061         SETZM      026061             ;;ZERO SYSTEM STORAGE
152220 / 026061,,026062           XWD SYSBEG,SYSBEG+1         ;
040465 / 200040,,152220          MOVE  TAC,152220             ;
040466 / 251040,,035405           BLT  TAC,035405             ;;CLEAR IT
040467 / 402000,,036141         SETZM       STBEG             ;
152236 / 036141,,036142           XWD STBEG,STBEG+1           ;
040470 / 200040,,152236          MOVE  TAC,152236             ;
040471 / 251040,,036260           BLT  TAC, STEND             ;
040472 / 402000,,024635         SETZM      UPTIME             ;
151617 / 777600,,023657          IOWD ERRPLN,ERRPDL           ;
040473 / 200140,,151617          MOVE    P,151617             ;
040474 / 700040,,000001         DATAI  APR,000001             ;;READ THE CONSOLE SWITCHES
040475 / 641040,,000777           TLC  TAC,000777             ;;COMPLEMENT 9 BITS ON THE LEFT
040476 / 336000,,156175         SKIPN      156175             ;; ANY DDT AT ALL?
040477 / 603040,,777777          TLNE  TAC,777777             ;;SKIP IF WE HAVE TO TAKE SWITCHES SERIOUSLY
040500 / 254000,,040515          JRST      040515             ;;IGNORE SWITCHES OR NO DDT
040501 / 606040,,010000          TRNN  TAC,010000             ;;DOES HE WANT NO DDT
040502 / 254000,,040512          JRST      040512             ;;HE WANTS DDT, CHECK ABOUT SWAPPING
040503 / 476000,,156175         SETOM      156175             ;;FLAG TO GET RID OF DDT
152735 / 254200,,000365          HALT      000365             ;
040504 / 200100,,152735          MOVE TAC1,152735             ;;MAKE A HALT 
040505 / 202100,,156717         MOVEM TAC1,156717             ;;AND PLANT IT ON TOP OF DDT
040506 / 201100,,156720         MOVEI TAC1,156720             ;;GET THE ADDRESS BEYOND DDT
040507 / 202100,,000573         MOVEM TAC1,000573             ;;SAVE AS SYSSIZ
040510 / 402000,,000036         SETZM      000036             ;;NO SYMBOL TABLE POINTER
040511 / 254000,,040515          JRST      040515             ;;CONTINUE
                       CKDSWP:
040512 / 476000,,156174         SETOM      156174             ;;ASSUME THAT HE WANT'S SWAPPING DDT
040513 / 602040,,020000          TRNE  TAC,020000             ;;CHECK FLAGS
040514 / 402000,,156174         SETZM      156174             ;;HE WANTS NO SWAPPING
                       INIDDT:
040515 / 336000,,156175         SKIPN      156175             ;;DOES HE WANT DDT?
040516 / 260140,,156206         PUSHJ    P,156206             ;;YES INITIALIZE IT.
                       ;;edit;;omit macro tail as ELSE CLAUSE abuse;;INIDDT:
                       ;FTDDT
040517 / 700040,,000001         DATAI  APR,000001             ;;READ THE DATA SWITCHES
040520 / 641040,,000777           TLC  TAC,000777             ;
040521 / 603040,,777777          TLNE  TAC,777777             ;;DO WE HAVE TO TAKE THESE SERIOUSLY?
040522 / 254000,,040536          JRST      040536             ;;NO
040523 / 602040,,000001          TRNE  TAC,000001             ;;DOES HE WANT DDT NOW?
040524 / 260140,,000347         PUSHJ    P,000347             ;;YES GET IT FOR HIM.
040525 / 205100,,777764         MOVSI TAC1,777764             ;
                       SYSIN1:
040526 / 335002,,041202        SKIPGE      MCELTB(TAC1)       ;;SKIP IF NORMAL SENSE
040527 / 640040,,400000           TRC  TAC,400000             ;;INVERSE SENSE. COMPLEMENT THE BIT
040530 / 606040,,400000          TRNN  TAC,400000             ;;SKIP IF WE'RE SETTING.
040531 / 402022,,041202         SETZM      @MCELTB(TAC1)      ;;¬ SETTING: CLEAR THE CELL
040532 / 602040,,400000          TRNE  TAC,400000             ;;SKIP IF ¬ SETTING
040533 / 476022,,041202         SETOM      @MCELTB(TAC1)      ;;SET THE CELL
040534 / 241040,,000001           ROT  TAC,000001             ;;SHIFT TO INSPECT MORE BITS
040535 / 253100,,040526         AOBJN TAC1,040526             ;;LOOP
                       SYSIN2:
040536 / 200040,,000573          MOVE  TAC,000573             ;;PICKUP REAL SYSTEM SIZE
040537 / 271040,,001777          ADDI  TAC,  1777             ;
040540 / 421040,,001777        ANDCMI  TAC,  1777             ;
040541 / 202040,,035407         MOVEM  TAC,035407             ;;AND SAVE IT
040542 / 260140,,071221         PUSHJ    P,071221             ;; INITIALIZE CORE TABLES
040543 / 201040,,153706         MOVEI  TAC,153706             ;
040544 / 336000,,000602         SKIPN      000602             ;;JUST LOADED?
040545 / 202040,,000602         MOVEM  TAC,000602             ;;NO. STORE MESSAGE.
151357 / 430000,,600000           XWD DVDIRIN+TTYATC+TTYUSE,ASSCON+ASSPRG ;
040546 / 200040,,151357          MOVE  TAC,151357             ;
040547 / 554300,,000610          HLRZ DEVDAT,000610             ;;SCAN ALL DEVICES
                       SYS1:
040550 / 412046,,000004        ANDCAM  TAC,DEVMOD(DEVDAT)     ;;CLEAR DEVICE BITS
                       ;DIRECTORY IN CORE, ASSIGNED BY CONSOLE, PROGRAM
040551 / 402006,,000005         SETZM      DEVLOG(DEVDAT)     ;;CLEAR LOGICAL NAME
040552 / 554306,,000003          HLRZ DEVDAT,DEVSER(DEVDAT)     ;;LINK ONWARDS
040553 / 326300,,040550         JUMPN DEVDAT,  SYS1             ;
040554 / 201040,,040577         MOVEI  TAC,040577             ;;GET ADDRESS FOR 200 RESTART
040555 / 542040,,000200          HRRM  TAC,000200             ;;STUFF IT IN SYSDSP (200)
040556 / 201040,,041074         MOVEI  TAC,041074             ;; CRANK UP P2. IT IS WAITING FOR US
040557 / 542040,,000575          HRRM  TAC,000575             ;; ALLOW P2 TO CONTINUE
                       ; HERE WE MUST DETACH AD AND XGP FROM THE SYSTEM IF THE PDP-6
                       ; IS NOT ON LINE. THE ONCE ONLY CODE SETS THE FLAG 'DETFLG'
040560 / 336000,,000556         SKIPN      000556             ;; DO WE HAVE TO DETACH?
040561 / 254000,,040577          JRST      040577             ;; NO, PROCEED WITH SYSINI
040562 / 201040,,400000         MOVEI  TAC,400000             ;; YES, GET THE 'ASSIGN' BIT
040563 / 436040,,022617          IORM  TAC,022617             ;; OR INTO DEVICE DATA BLOCK
040564 / 201300,,022613         MOVEI DEVDAT,022613             ;; GET ADDRESS OF DDB FOR PJOBN'S SAKE
040565 / 137040,,037575           DPB  TAC,037575             ;; MAKE SURE THEY ARE ASSIGNED TO JOB 0
040566 / 436040,,016570          IORM  TAC,016570             ;
040567 / 201300,,016564         MOVEI  DDB,XGPDDB             ;
040570 / 137040,,037575           DPB  TAC, PJOBN             ;
040571 / 436040,,022657          IORM  TAC,022657             ;
040572 / 201300,,022653         MOVEI  DDB,ADCDDB             ;
040573 / 137040,,037575           DPB  TAC, PJOBN             ;
040574 / 436040,,022713          IORM  TAC,022713             ;
040575 / 201300,,022707         MOVEI  DDB,DACDDB             ;
040576 / 137040,,037575           DPB  TAC, PJOBN             ;
                       ;INITIALIZE ALL IODEVICES
                       IOGO:
040577 / 700200,,733553          CONO  APR,733553             ;;APR RESET (IO RESET)
040600 / 700600,,011577          CONO   PI,011577             ;;CLEAR PI SYSTEM
151617 / 777600,,023657          IOWD ERRPLN,ERRPDL           ;
040601 / 200140,,151617          MOVE    P,151617             ;
040602 / 260140,,037404         PUSHJ    P,037404             ;;ARE WE USING FAST MEMORY?
040603 / 254000,,040577          JRST      040577             ;;NO. LET'S TRY THAT ALL AGAIN
                       IOGO1:
040604 / 200640,,024633          MOVE  AC1,024633             ;;GET THE CURRENT TIME
040605 / 200700,,024634          MOVE  AC2,024634             ;;AND THE DATE
152214 / 023425,,023426           XWD P1DATA,P1DATA+1         ;
040606 / 200040,,152214          MOVE  TAC,152214             ;
040607 / 402000,,023425         SETZM      023425             ;;ZERO DATA AREA FOR P1
040610 / 251040,,024642           BLT  TAC,024642             ;;
040611 / 402000,,031143         SETZM      031143             ;
040612 / 402000,,031243         SETZM      031243             ;;CLEAR NULL TIME TOO.
040613 / 402000,,026102         SETZM      026102             ;;AND LAST DISASTER TIME
040614 / 202640,,024633         MOVEM  AC1,024633             ;;RESTORE THE TIME
040615 / 202640,,026051         MOVEM  AC1,026051             ;;SAVE FOR BOTH PROCESSORS
040616 / 202700,,024634         MOVEM  AC2,024634             ;;SAVE THE DATE TOO
040617 / 202700,,026052         MOVEM  AC2,026052             ;;
040620 / 231640,,000074         IDIVI  AC1,000074             ;;CONVERT TIME TO SECONDS
040621 / 504640,,024634           HRL  AC1,024634             ;;PUT DATE IN LEFT HALF OF AC1
040622 / 202640,,023423         MOVEM  AC1,023423             ;;AND SAVE <DATE>,,<TIME IN SECS>
040623 / 332000,,000602         SKIPE      000602             ;;SKIP IF THIS IS A RESTART
040624 / 202640,,023424         MOVEM  AC1,023424             ;;SAVE TIME OF (RELOAD OR 203 RESTART).
040625 / 201040,,001130         MOVEI  TAC,001130             ;;WAIT 10 SECONDS 
040626 / 202040,,022735         MOVEM  TAC,022735             ;;BEFORE STARTING THE PHANTOM JOBS
040627 / 402000,,022765         SETZM      022765             ;;ZERO WAKEUP TIME FOR ALL PHANTOMS
152213 / 022765,,022766           XWD ALFRED,ALFRED+1         ;
040630 / 200040,,152213          MOVE  TAC,152213             ;
040631 / 251040,,022777           BLT  TAC,022777             ;
152724 / 254000,,056672          JRST        UUO1             ;
040632 / 200040,,152724          MOVE  TAC,152724             ;; SET UP PROCESSOR DATA STORAGE
040633 / 202040,,024113         MOVEM  TAC,024113             ;
152725 / 254000,,056730          JRST        UUO3             ;
040634 / 200040,,152725          MOVE  TAC,152725             ;
040635 / 202040,,024115         MOVEM  TAC,024115             ;
040636 / 201040,,000040         MOVEI  TAC,    40             ;
040637 / 200100,,000561          MOVE TAC1, P1NUM             ;
040640 / 603100,,000040          TLNE TAC1,000040             ;
040641 / 201040,,000140         MOVEI  TAC,   140             ;
040642 / 202040,,024116         MOVEM  TAC,024116             ;
152141 / 000000,,024262                                       ;
152141 / 004400,,024262 POINT 36,00024262,35                  ;
040643 / 200040,,152141          MOVE  TAC,152141             ;
040644 / 202040,,024117         MOVEM  TAC, CLOCK             ;
040645 / 201040,,000616         MOVEI  TAC,   CH3             ;;CAT(CH,\APRCHN)
040646 / 202040,,023513         MOVEM  TAC,023513             ;
040647 / 201040,,000710         MOVEI  TAC,   CH7             ;;CAT(CH,\CLKCHN)
040650 / 202040,,024627         MOVEM  TAC,024627             ;
151732 / 000000,,001216                                       ;
040651 / 200040,,151732          MOVE  TAC,151732             ;
040652 / 202040,,024630         MOVEM  TAC,024630             ;
040653 / 201040,,000627         MOVEI  TAC,APRCON             ;
040654 / 202040,,023506         MOVEM  TAC,023506             ;
040655 / 201040,,036037         MOVEI  TAC,036037             ;
040656 / 202040,,023477         MOVEM  TAC,023477             ;
040657 / 201040,,036063         MOVEI  TAC,036063             ;
040660 / 202040,,023500         MOVEM  TAC,023500             ;
152737 / 254520,,024112           JEN      @  UUO0            ;
040661 / 200040,,152737          MOVE  TAC,152737             ;
040662 / 202040,,024640         MOVEM  TAC,UUOXIT             ;
040663 / 202040,,024641         MOVEM  TAC, UUOXI             ;
151676 / 000000,,000000                                       ;
040664 / 200540,,151676          MOVE  PID,151676             ;
040665 / 202540,,023512         MOVEM  PID,023512             ;
151617 / 777600,,023657          IOWD ERRPLN,ERRPDL           ;
040666 / 200140,,151617          MOVE    P,151617             ;
040667 / 202153,,023657         MOVEM    P, ERRPD(PID)        ;
151622 / 777640,,023516          IOWD APRPLN,APRPD            ;
040670 / 200040,,151622          MOVE  TAC,151622             ;
040671 / 202053,,023516         MOVEM  TAC,APRPDL(PID)        ;
040672 / 476000,,033565         SETOM      JBTMSK             ;
152232 / 033565,,033566                                       ;
040673 / 200040,,152232          MOVE  TAC,152232             ;
040674 / 251040,,033664           BLT  TAC,033664             ;
040675 / 476000,,034065         SETOM      JBTWKM             ;
152235 / 034065,,034066           XWD JBTWKM,JBTWKM+1         ;
040676 / 200040,,152235          MOVE  TAC,152235             ;
040677 / 251040,,034164           BLT  TAC,034164             ;
040700 / 260140,,065653         PUSHJ    P,065653             ;;ALWAYS INITILIZE SCHEDULER FIST
                       ;SO DEVICES MAY RESET QUEUES IF DESIRED
040701 / 260140,,150054         PUSHJ    P,150054             ;;INITIALIZE SPACEWAR SERVICE
040702 / 260140,,066443         PUSHJ    P,066443             ;; INITIALIZE QUEUE STRUCTURE
040703 / 260140,,073237         PUSHJ    P,073237             ;; AND FREE STORAGE SYSTEM
040704 / 260140,,044256         PUSHJ    P,044256             ;; INITIALIZE DISASTER TYPEOUT SYSTEM.
                       ;HERE WE INITIALIZE ALL THE DEVICES IN THE DEVICE LIST
                       ;NOTE THAT FREE STORAGE MUST BE SET UP
                       ;ALSO NOTE THAT EACH DEVICE MUST CORRECTLY LINK TO
                       ;THE NEXT BEFORE RETURNING
040705 / 554300,,000610          HLRZ  DDB,000610             ;;GO UP THE DEVICE LIST, DOING GOOD THINGS
040706 / 402000,,000607         SETZM      000607             ;;DSP OF LAST DEVICE
                       IOG0:
040707 / 550046,,000003          HRRZ  TAC,DEVSER(DDB)        ;;GET THE DEVICE SERVICE DISPATCH
040710 / 316040,,000607          CAMN  TAC,000607             ;;SAME AS LAST MEANS INITIALIZED ALREADY.
040711 / 254000,,040716          JRST      040716             ;;YES
040712 / 202040,,000607         MOVEM  TAC,000607             ;;SAVE THE DEVICE DISPATCH
040713 / 261140,,000006          PUSH    P,   DDB             ;
040714 / 260141,,777776         PUSHJ    P,  DINI(TAC)        ;;INITIALIZE THE DEVICE
040715 / 262140,,000006           POP    P,   DDB             ;
                       IOG01:
040716 / 201040,,200000         MOVEI  TAC,ASSPRG             ;
040717 / 413046,,000004        ANDCAB  TAC,DEVMOD(DDB)        ;;TURN OF ASSIGNED BY PROG BIT
040720 / 525100,,000077         HRLOI TAC1,000077             ;;MAKE MASK FOR MODE BITS AND HUNG COUNT
152177 / 020000,,400000                                       ;
040721 / 612040,,152177          TDNE  TAC,152177             ;;IF ASSIGNED BY CONSOLE THEN OR ATTACHED
040722 / 661100,,770000           TLO TAC1,770000             ;;SAVE JOB NUMBER ALSO
040723 / 406106,,000001          ANDM TAC1,DEVCHR(DDB)        ;;GLONK!
040724 / 607040,,040010          TLNN  TAC,040010             ;;THESE GUYS ARE RIGHT(?)
040725 / 402006,,000002         SETZM      DEVIOS(DDB)        ;
040726 / 402006,,000006         SETZM      DEVBUF(DDB)        ;
040727 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;;LINK ON MACDUFF
040730 / 326300,,040707         JUMPN  DDB,  IOG0             ;
152231 / 032565,,032566                                       ;
040731 / 200040,,152231          MOVE  TAC,152231             ;
040732 / 251040,,034464           BLT  TAC,034464             ;
                       ; HERE WE SETUP ALL JOB STATUS BITS
                       ; STOP ALL LOGGED IN JOBS
                       ; AND FLUSH ALL UN-LOGGED-IN JOBS
040733 / 201200,,000077         MOVEI    J,000077             ;
040734 / 402000,,024061         SETZM         JOB             ;
                       IOG2:
152265 / 053001,,000077           XWD JNA!JLOG!SWP!JSEG!JWP,77 ;
040735 / 200100,,152265          MOVE TAC1,152265             ;;KEEP THESE
040736 / 404104,,026114           AND TAC1,JBTSTS(J)          ;
040737 / 661100,,020000           TLO TAC1,020000             ;;DON'T LET HIM CONTINUE
040740 / 202104,,026114         MOVEM TAC1,JBTSTS(J)          ;
040741 / 607100,,040000          TLNN TAC1,040000             ;;JOB HERE AT ALL?
040742 / 254000,,041006          JRST      041006             ;;NO, LOOP AROUND FOR NEXT
040743 / 607100,,010000          TLNN TAC1,010000             ;;JOB LOGGED IN?
040744 / 254000,,040762          JRST      040762             ;;NO, FLUSH HIM
040745 / 603100,,001000          TLNE TAC1,001000             ;;SEGMENT?
040746 / 254000,,041003          JRST      041003             ;;YES. ONLY REQUE TO STOPQ
040747 / 260140,,060534         PUSHJ    P,060534             ;;SETUP JOB PRIORITY TABLE
040750 / 260140,,051153         PUSHJ    P,051153             ;;MAKE A PDL FOR THIS JOB.
040751 / 201640,,000000         MOVEI  AC1,                   ;;NO FREE STORAGE AVAIALABLE.
040752 / 202644,,022315         MOVEM  AC1,JBTPDL(J)          ;;SAVE PDL FOR USER.
040753 / 607100,,002000          TLNN TAC1,002000             ;;SWAPPED IN?
040754 / 254000,,040776          JRST      040776             ;;YES FLUSH DATA AREA
040755 / 135040,,037612           LDB  TAC,037612             ;;IS THERE ANY CORE?
040756 / 322040,,041006         JUMPE  TAC,041006             ;;JUMP IF NO CORE: LEAVE IN NULQ
040757 / 660100,,200000           TRO TAC1,200000             ;;MAKE SURE JOB DATA AREA GETS WIPED
040760 / 202104,,026114         MOVEM TAC1,JBTSTS(J)          ;;NEXT TIME THIS IS SWAPPED IN.
040761 / 254000,,041003          JRST      041003             ;;NO, JUST STOPQ
                       IOGKIL:
040762 / 602100,,000077          TRNE TAC1,000077             ;;RH WAS ANDED WITH 77
040763 / 370002,,026420           SOS       NJOBS(TAC1)       ;;NO LONGER USING SEGMENT
040764 / 260140,,040767         PUSHJ    P,040767             ;;FLUSH HIS CORE IMAGE
040765 / 260140,,045503         PUSHJ    P,045503             ;;REMOVE THE CRETIN
040766 / 254000,,041006          JRST        IOG4             ;
                       IOGZ:
040767 / 260140,,113206         PUSHJ    P,113206             ;;RELEASE SWAP SPACE
040770 / 403044,,021427         SETZB  TAC,JBTSWP(J)          ;;KILLING A PHANTOM.
040771 / 402004,,021527         SETZM      JB2SWP(J)          ;
040772 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;
040773 / 263140,,000000          POPJ    P,                   ;
040774 / 370003,,000000           SOS            (P)          ;
040775 / 254000,,072110          JRST      072110             ;;RELEASE CORE
                       IOG5:
040776 / 336344,,027120         SKIPN JDAT,JBTDAT(J)          ;;JOB DATA AREA?
040777 / 254000,,041006          JRST      041006             ;;NO, LEAVE IN NULQ
041000 / 261147,,000074          PUSH    P,JOBDDT(JDAT)       ;
041001 / 260140,,072576         PUSHJ    P,CLRJB1             ;
041002 / 262147,,000074           POP    P,JOBDDT(JDAT)       ;
                       IOG6:
041003 / 211040,,000011         MOVNI  TAC,000011             ;;TO STOPQ
041004 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
041005 / 260140,,046027         PUSHJ    P, REQUE             ;
                       IOG4:
041006 / 367200,,040735          SOJG    J,  IOG2             ;
041007 / 201200,,000077         MOVEI    J,000077             ;;FLUSH UNUSED SEGMENTS ON NEXT PASS
                       IOGS1:
041010 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
041011 / 603040,,001000          TLNE  TAC,  JSEG             ;
041012 / 332004,,026420         SKIPE       NJOBS(J)          ;;ANYONE USING THIS SEGMENT?
041013 / 254000,,041023          JRST       IOGS2             ;
041014 / 402004,,026114         SETZM      JBTSTS(J)          ;;NO USERS: BLAST THIS SEGMENT
041015 / 402004,,030142         SETZM      JOBNAM(J)          ;
041016 / 402004,,027720         SETZM      PRJPRG(J)          ;
041017 / 260140,,040767         PUSHJ    P,  IOGZ             ;
041020 / 211040,,000010         MOVNI  TAC,000010             ;;QUEUE TO NULL Q
041021 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
041022 / 260140,,046027         PUSHJ    P, REQUE             ;
                       IOGS2:
041023 / 367200,,041010          SOJG    J,041010             ;;LOOP
041024 / 402000,,024061         SETZM      024061             ;;AGAIN?
                       ;FORM INITIAL CHECKSUM.
151744 / 662427,,037375           XWD CHKBEG-CHKEND,CHKBEG    ;
041025 / 200040,,151744          MOVE  TAC,151744             ;;AOBJN POINTER
041026 / 202040,,023021         MOVEM  TAC,MONPTR             ;
041027 / 260140,,050100         PUSHJ    P, CHECK             ;
041030 / 202100,,024120         MOVEM TAC1,MONSUM             ;
151412 / 000000,,034465                                       ;
151412 / 442200,,034465 POINT 18,00034465,                    ;
041031 / 200040,,151412          MOVE  TAC,151412             ;
041032 / 202040,,035405         MOVEM  TAC,035405             ;; INITIALIZE STATISTICS POINTER
041033 / 256000,,000600           XCT      000600             ;;PION, CH 3,5,6,7, AND PARITY ERROR ENABLE
041034 / 201040,,153536         MOVEI  TAC,153536             ;
041035 / 336000,,000602         SKIPN      000602             ;;LOAD OR INITIALIZE?
041036 / 202040,,000602         MOVEM  TAC,000602             ;;NO, IT MUST BE A START
041037 / 205200,,777657         MOVSI    J,777657             ;;NO. OF TTY LINES(REAL ONES).
                       IOG3:
041040 / 336304,,032347         SKIPN DEVDAT,TTYTAB(J)          ;;GET DDB FOR NEXT TTY.
041041 / 254000,,041060          JRST      041060             ;;OOPS, NO DDB.
041042 / 260140,,042667         PUSHJ    P,042667             ;;TYPE A CRLF
041043 / 200106,,000000          MOVE TAC1,      (DEVDAT)     ;
041044 / 260140,,043730         PUSHJ    P,043730             ;;PRINT NAME OF CONSOLE
041045 / 201400,,000011         MOVEI  TEM,    11             ;
041046 / 256000,,042674           XCT      042674             ;;TAB
041047 / 201040,,153322         MOVEI  TAC,153322             ;
041050 / 336000,,000567         SKIPN      000567             ;
041051 / 332000,,017714         SKIPE      TTYLOK             ;
041052 / 260140,,042670         PUSHJ    P,042670             ;;TELL THEM THAT WE'RE DOWN
041053 / 200040,,000602          MOVE  TAC,000602             ;;GET THE ADDRESS OF MESSAGE
041054 / 260140,,042670         PUSHJ    P,042670             ;;SEND IT
041055 / 260140,,055345         PUSHJ    P,055345             ;;TIME OF DAY
041056 / 260140,,042714         PUSHJ    P,PRCNTC             ;
041057 / 260140,,137707         PUSHJ    P,137707             ;;START THE TTY TYPING
                       IOG3A:
041060 / 253200,,041040         AOBJN    J,041040             ;;SEND MESSAGE TO ALL TTY'S.
041061 / 260140,,044066         PUSHJ    P,044066             ;;INCASE LOWCOR GETS CLOBBERED.
041065 / 550040,,000201          HRRZ  TAC,000201             ;
041066 / 260140,,044170         PUSHJ    P,DISLOC             ;
041067 / 260140,,044076         PUSHJ    P,044076             ;
                       ;	MOVE	TAC,THSDAT	;APRIL 1 HACK.
                       ;	IDIVI	TAC,=12*=31	;DIVIDE TO GET YEARS IN TAC, DAY OF YEAR IN TAC1
                       ;	CAIN	TAC1,=31*3	;APRIL 1?
                       ;	SETOM	AFOOL		;YES.
041070 / 402000,,000602         SETZM      000602             ;;CLEAR FOR NEXT TIME
041071 / 403200,,024061         SETZB    J,024061             ;;INDICATE JOB ZERO
151676 / 000000,,000000                                       ;
041072 / 200540,,151676          MOVE  PID,151676             ;;INDICATE P1
041073 / 254000,,047711          JRST      047711             ;;START THE NULL JOB.
                       ; P2 INITIALIZE ROUTINE
                       P2INI:
152217 / 024643,,024644           XWD P2DATA,P2DATA+1         ;
041074 / 200040,,152217          MOVE  TAC,152217             ;
041075 / 700600,,010400          CONO   PI,010400             ;; CLEAR PI SYSTEM
041076 / 403200,,024643         SETZB    J,P2DATA             ;
041077 / 251040,,026060           BLT  TAC,026060             ;
041100 / 700200,,733553          CONO  APR,733553             ;; CLEAR EVERYTHING, ENABLE EVERYTHING
151620 / 777600,,025075          IOWD ERRPLN,ERRPDL+P2PID     ;
041101 / 200140,,151620          MOVE    P,151620             ;
152726 / 254000,,056735          JRST      P2UUO1             ;
041102 / 200040,,152726          MOVE  TAC,152726             ;
041103 / 202040,,025331         MOVEM  TAC,025331             ;
152727 / 254000,,056767          JRST      P2UUO3             ;
041104 / 200040,,152727          MOVE  TAC,152727             ;
041105 / 202040,,025333         MOVEM  TAC,025333             ;
041106 / 201040,,000040         MOVEI  TAC,    40             ;
041107 / 200100,,000562          MOVE TAC1, P2NUM             ;
041110 / 603100,,000040          TLNE TAC1, MAOFF             ;
041111 / 201040,,000140         MOVEI  TAC,   140             ;
041112 / 202040,,025334         MOVEM  TAC,025334             ;
152142 / 000000,,025500                                       ;
152142 / 004400,,025500 POINT 36,00025500,35                  ;
041113 / 200040,,152142          MOVE  TAC,152142             ;
041114 / 202040,,025335         MOVEM  TAC,025335             ;
041115 / 201040,,000731         MOVEI  TAC, P2CH3             ;;CAT(P2CH,\APRCHN)
041116 / 202040,,024731         MOVEM  TAC,024731             ;
041117 / 201040,,000771         MOVEI  TAC, P2CH7             ;;CAT(P2CH,\CLKCHN)
041120 / 202040,,026045         MOVEM  TAC,026045             ;
151676 / 000000,,000000                                       ;
041121 / 200040,,151676          MOVE  TAC,151676             ;
041122 / 202040,,026046         MOVEM  TAC,026046             ;
041123 / 201040,,000736         MOVEI  TAC,AP2CON             ;
041124 / 202040,,024724         MOVEM  TAC,024724             ;
041125 / 201040,,036051         MOVEI  TAC,036051             ;
041126 / 202040,,024715         MOVEM  TAC,024715             ;
041127 / 201040,,036073         MOVEI  TAC,036073             ;
041130 / 202040,,024716         MOVEM  TAC,024716             ;
152740 / 254520,,025330           JEN      @025330            ;
041131 / 200040,,152740          MOVE  TAC,152740             ;
041132 / 202040,,026056         MOVEM  TAC,026056             ;
041133 / 202040,,026057         MOVEM  TAC,026057             ;
041134 / 402000,,025277         SETZM      025277             ;
041135 / 402000,,025301         SETZM      025301             ;
041136 / 402000,,025303         SETZM      025303             ;
151732 / 000000,,001216                                       ;
041137 / 200540,,151732          MOVE  PID,151732             ;
041140 / 202553,,023512         MOVEM  PID, APRID(PID)        ;
151620 / 777600,,025075          IOWD ERRPLN,ERRPDL+P2PID     ;
041141 / 200040,,151620          MOVE  TAC,151620             ;
041142 / 202053,,023657         MOVEM  TAC, ERRPD(PID)        ;
151623 / 777640,,024734          IOWD APRPLN,APRPD+P2PID      ;
041143 / 200040,,151623          MOVE  TAC,151623             ;
041144 / 202053,,023516         MOVEM  TAC,APRPDL(PID)        ;
041145 / 200040,,000616          MOVE  TAC,   CH3             ;
041146 / 316040,,000616          CAMN  TAC,000616             ;; WAIT FOR P1 TO START TAKING CLOCK BREAKS
041147 / 254000,,041146          JRST      041146             ;
041150 / 256000,,000601           XCT      000601             ;; ENABLE PI, PARITY, ETC.
041151 / 260140,,107571         PUSHJ    P,107571             ;;INITIALIZE XGP FROM P2
041152 / 260140,,124374         PUSHJ    P,124374             ;;INITIALIZE PTR FROM P2
041153 / 260140,,044066         PUSHJ    P,DISMES             ;
041160 / 260140,,044320         PUSHJ    P,044320             ;
041161 / 254000,,047711          JRST      NULJOB             ;
                       ; POWER DOWN ROUTINES
                       PWROFF:
041162 / 700600,,000400          CONO   PI,000400             ;; NO MORE INTERRUPTS NOW
041163 / 250740,,000563          EXCH   17,000563             ;; AND COUNT DOWN
041164 / 367740,,041164          SOJG   17,041164             ;;LOOP
041165 / 201740,,777777         MOVEI   17,777777             ;; COUNT DONE, NO POWER DOWN AFTER ALL
041166 / 250740,,000563          EXCH   17,000563             ;;RESTORE 17
041167 / 350000,,007344           AOS      007344             ;;COUNT FAILURES
041170 / 700600,,000200          CONO   PI,000200             ;;ENABLE INTERRUPTS
041171 / 254520,,000616           JEN      @000616            ;
                       P2ROFF:
041172 / 700600,,000400          CONO   PI, PIOFF             ;
041173 / 250740,,000564          EXCH   17,P2RCNT             ;
041174 / 367740,,041174          SOJG   17,041174             ;
041175 / 201740,,777777         MOVEI   17,777777             ;
041176 / 250740,,000564          EXCH   17,P2RCNT             ;
041177 / 350000,,007345           AOS      007345             ;;COUNT FAILURES ON SIX ALSO
041200 / 700600,,000200          CONO   PI,  PION             ;
041201 / 254520,,000731           JEN      @ P2CH3            ;
                       MCELTB:
041202 / 000000,,017714                                       ;
041203 / 000000,,000567                                       ;
041204 / 000000,,014150                                       ;
041205 / 000000,,000500                                       ;
041206 / 400000,,156174           XWD 400000,DDTSWP		         ;
                       ;COMPLEMENT SENSE OF SWITCH
041207 / 000000,,000000                                       ;;R. HELLIWELL MEMORIAL CELL
041210 / 000000,,000571                                       ;;SET TO MAKE LOGIN TYPE X.TXT[2,2]
041211 / 000000,,000570                                       ;;SET TO PREVENT LOGIN
041212 / 000000,,036312                                       ;;
                       ;;else;;0			;NO IMP TODAY
041213 / 000000,,036722                                       ;;
                       ;;else;;0			;SET TO ALLOW IMP TO COMPLAIN ON CTY
041214 / 000000,,000572                                       ;;SET FOR BLT AFTER SWAPIN.
041215 / 000000,,016025                                       ;;PRINTOUT EACH IOP EARLY RESPONSE
041216 /                 ;::    BEND STANFO.SYSINI.
041216 /               ;: SYSINI[J17,SYS] EOF.
041216 /               ;: COMCSS[J17,SYS]
041216 /                 ;::   BEGIN STANFO.APRSER.
                       ;SPECIAL LOCATION IN USER JOB DATA AREA FOR STORING ARGUMENTS
                       ;USED IN UUO CALLS TO THE MONITOR
                       ;FOR LOOKUP UUO
                       ;PROJECT PROGRAMMER ON LOOKUP
                       ;FOR OPEN UUO
                       ;ARGUMENT TO PREVIOUS SAVE.
                       ;ROUTINE TO SCAN COMMAND STRING ARGUMENTS FOR SAVE,GET,RUN AND R
                       ;COMMANDS AND STORE THEM IN JOB DATA AREA WHICH MUST BE IN CORE
                       ;WHEN SGSET IS CALLED FROM COMMAND DECODER
                       ;CALL:	MOVE TAC,INPUT BYTE POINTER
                       ;	MOVE TAC1,SIXBIT DEVICE NAME
                       ;	MOVE DAT,OUTPUT BYTE POINTER
                       ;	MOVE IOS,ADR. OF MONITOR JOB(SAVJOB,GETJOB,RUNJOB)
                       ;	MOVE PROG, ADR. OF JOB AREA
                       ;	PUSHJ P,SGSET
                       ;SET AC2 TO EXPLICIT PPN OF FILE AND ENTER BY:  PUSHJ P,SGSET0
                       SGDVOK:
041216 / 261140,,000001          PUSH    P,000001             ;;CHECK TO SEE IF ARG IS LEGAL SAVEGET DEV
041217 / 261140,,000000          PUSH    P,                   ;
041220 / 261140,,000005          PUSH    P,   DAT             ;
041221 / 261140,,000006          PUSH    P,   DDB             ;
041222 / 200040,,000002          MOVE  TAC,  TAC1             ;
041223 / 260140,,044663         PUSHJ    P,044663             ;;IS THERE SUCH A DEVICE
041224 / 254000,,041230          JRST      041230             ;;NOT A LEGAL DEVICE. ASSUME IT WAS FILENAME
041225 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
041226 / 603040,,200120          TLNE  TAC,200120             ;;ONLY LEGAL DEVICES FOR SAVE GET
041227 / 350003,,777774           AOS      777774(P)          ;
                       SGSETB:
041230 / 262140,,000006           POP    P,   DDB             ;
041231 / 262140,,000005           POP    P,   DAT             ;
041232 / 262140,,000000           POP    P,                   ;
041233 / 254000,,037376          JRST       TPOPJ             ;
                       SGSET:
041234 / 201700,,000000         MOVEI  AC2,                   ;;NORMAL ENTRY - DISABLE PPN KLUDGE
                       SGSET0:
                       ;THIS IS THE RUN FROM ANOTHER AREA KLUDGE
041235 / 202704,,030442         MOVEM  AC2,JOBPPN(J)          ;
041236 / 202107,,000006         MOVEM TAC1,DEVWRD(PROG)       ;;STORE FIRST ARG. MAY BE DEVICE, OR FILE
041237 / 322100,,041252         JUMPE TAC1,041252             ;;ASSUME DSK IF NO ARG
041240 / 260140,,041216         PUSHJ    P,041216             ;;SEE IF IT'S A VALID DEVICE NAME
041241 / 254000,,041252          JRST      041252             ;;WASN'T A DEVICE NAME
041242 / 336104,,030142         SKIPN TAC1,JOBNAM(J)          ;;WAS DEVICE.   AUTOMATIC FILENAME?
041243 / 254000,,041260          JRST      041260             ;;NO. READ ONE FROM THE COMMAND STRING
                       SGSETA:
041244 / 202107,,000000         MOVEM TAC1,      (PROG)       ;;OK. SET FILE NAME
041245 / 205100,,445560         MOVSI TAC1,445560             ;
041246 / 202107,,000001         MOVEM TAC1,FILEXT(PROG)       ;;DEFAULT EXTENSION
041247 / 402007,,000003         SETZM      FILLEN(PROG)       ;
041250 / 256000,,041273           XCT      041273             ;
                       ;LOAD AC1 WITH DEFAULT PPN
041251 / 254000,,041301          JRST      SGSET1             ;
                       SGSETC:
041252 / 205100,,446353         MOVSI TAC1,446353             ;;NO TRY TO ASSUME DISK
041253 / 250107,,000006          EXCH TAC1,DEVWRD(PROG)       ;;USE THIS FOR FILENAME
041254 / 326100,,041262         JUMPN TAC1,SGSETD             ;
041255 / 336104,,030142         SKIPN TAC1,JOBNAM(J)          ;
041256 / 254000,,042706          JRST      NOTENF             ;
041257 / 254000,,041244          JRST      SGSETA             ;
                       SGSET3:
041260 / 260140,,042552         PUSHJ    P,042552             ;;GET FILE NAME FROM COMMAND STRING
041261 / 322100,,042706         JUMPE TAC1,042706             ;;THERE MUST BE A FILE NAME
                       SGSETD:
041262 / 202107,,000000         MOVEM TAC1,      (PROG)       ;;STORE FILE NAME
041263 / 202104,,030142         MOVEM TAC1,JOBNAM(J)          ;;STORE ALSO FOR SYSTAT
041264 / 260140,,072454         PUSHJ    P,NAMSTT             ;
041265 / 205100,,445560         MOVSI TAC1,445560             ;;ASSUME EXTENSION
041266 / 306400,,000056          CAIN  TEM,000056             ;;EXTENSION EXPECTED?
041267 / 260140,,042552         PUSHJ    P,042552             ;;YES. GET EXTENSION, OTHERWISE USE DEFAULT
041270 / 512107,,000001         HLLZM TAC1,FILEXT(PROG)       ;;STORE IT FOR LOOKUP
041271 / 402007,,000003         SETZM      FILLEN(PROG)       ;
041272 / 260140,,042777         PUSHJ    P,042777             ;;GET PROJ. PROG. NO.
                       SGPPN:
                       ;THIS IS A SUBROUTINE CALLED BY XCT SGPPN
153512 / 336704,,030020         SKIPN  AC2,DSKPPN(J)          ;
153513 / 200704,,027720          MOVE  AC2,PRJPRG(J)          ;
153514 / 254015,,000000          JRST            (AC1)        ;
041273 / 265640,,153512           JSP  AC1,153512             ;
                       ;FTDSKPPN
                       ;FTLOGIN
041274 / 260140,,042747         PUSHJ    P,042747             ;;AMOUNT OF CORE (OPTIONAL THIRD ARG.)
041275 / 254000,,041301          JRST      041301             ;;DOES NOT RETURN IF ERROR, RETURN HERE IF NO ARG.
041276 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
041277 / 242100,,000012           LSH TAC1,000012             ;;CONVERT TO HIGHEST REL. LOC.
041300 / 275100,,000001          SUBI TAC1,     1             ;
                       SGSET1:
041301 / 552107,,000133         HRRZM TAC1,JOBCOR(PROG)       ;;STORE FOR RUN COMMAND AND SAVE
041302 / 336004,,030442         SKIPN      JOBPPN(J)          ;;SKIP IF EXPLICIT PPN KLUDGE.
041303 / 202704,,030442         MOVEM  AC2,JOBPPN(J)          ;
                       ;SAVE PPN
041304 / 200100,,000000          MOVE TAC1,                   ;;SCHEDULE MONITOR JOB
041305 / 254000,,045773          JRST      045773             ;;START JOB WITH PC IN MONITOR MODE
                       ;THIS JOB SAVES A JOB AREA ON RETRIEVABLE STORAGE
                       ;THIS JOB RUNS IN EXEC. MODE AND CALLS IO ROUTINES DIRECTLY
                       ;NO ATTEMPT IS MADE TO SAVE STATUS OF IO DEVICES, JOBPDP, OR AC'S
                       ;IN FACT THE ONLY USEFUL THING WHICH MAY BE DONE WITH A JOB AREA
                       ;AFTER IT HAS BEEN SAVED IS TO START EXECUTION OVER AT THE STARTING
                       ;ADDRESS
                       SSAVJB:
041306 / 265100,,041447           JSP TAC1,041447             ;;SET UP FOR SAVE
041307 / 255000,,000000          JFCL                         ;
041310 / 260140,,042037         PUSHJ    P,042037             ;;NON-FLUSH SEGMENT ENTRANCE
041311 / 254000,,041315          JRST      SAVJB1             ;
                       SAVJOB:
041312 / 265100,,041447           JSP TAC1,041447             ;; SET UP ACS AND ASSIGN DEVICE AND LOOKUP
041313 / 255000,,000000          JFCL                         ;
041314 / 260140,,042035         PUSHJ  PDP,042035             ;; THIS ROUTINE ACTUALLY DOES THE WORK
                       SAVJB1:
041315 / 260140,,042676         PUSHJ    P,INLMES             ;
041321 / 564047,,000003          HLRO  TAC,FILLEN(PROG)       ;
041322 / 213000,,000001         MOVNS         TAC             ;
041323 / 271040,,000073          ADDI  TAC,JOBSAV             ;
041324 / 242040,,777766           LSH  TAC,777766             ;
041325 / 271040,,000001          ADDI  TAC,     1             ;
041326 / 260140,,043720         PUSHJ    P,043720             ;;TELL HIM HOW MUCH WE SAVED IT IN
041327 / 332007,,000012         SKIPE      NEWCOR(JDAT)       ;
041330 / 254000,,041341          JRST      041341             ;;AND UPPER
041331 / 135040,,037600           LDB  TAC, PSEGN             ;
041332 / 322040,,041353         JUMPE  TAC,041353             ;;ANY UPPER AT ALL?
041333 / 265040,,045545           JSP  TAC,045545             ;;YES, TELL HIM NOT SAVED
                       SAVEUP:
041341 / 260140,,042676         PUSHJ    P,INLMES             ;
041346 / 564047,,000012          HLRO  TAC,NEWCOR(JDAT)       ;
041347 / 213000,,000001         MOVNS         TAC             ;
041350 / 271040,,001777          ADDI  TAC,  1777             ;
041351 / 242040,,777766           LSH  TAC,777766             ;
041352 / 260140,,043720         PUSHJ    P,RADX10             ;
                       SAVNUP:
041353 / 265040,,045545           JSP  TAC, PHOLD             ;
                       ;THIS JOB GETS A JOB AREA FROM A RETRIEVABLE DEVICE
                       ;THIS JOB RUNS IN EXEC. MODE AND CALLS IO ROUTINES DIRECTLY
                       ;NO ATTEMPT IS MADE TO RESTORE STATUS OF IO DEVICES, PC, OR AC'S
                       ;JOBPC IS SET TO STARTING ADDRESS OF JOB
                       ;CORE MUST ALREADY HAVE BEEN ASSIGNED AND THE FOLLOWING LOC. SETUP IN
                       ;JOB DATA AREA:
                       ;JOBPDP, JOBREL
                       GETJOB:
041355 / 265100,,041447           JSP TAC1,041447             ;; SET UP ACS AND ASSIGN DEVICE AND DO LOOKUP
041356 / 254000,,041407          JRST      041407             ;;FILE NOT FOUND RETURN
041357 / 260140,,041635         PUSHJ  PDP,041635             ;;GET THE JOB
                       GETJ1:
041360 / 260140,,042676         PUSHJ    P,042676             ;;RETURN ONLY IF EVERYTING OK
041364 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;
041365 / 242040,,777766           LSH  TAC,777766             ;
041366 / 271040,,000001          ADDI  TAC,     1             ;
041367 / 260140,,043720         PUSHJ    P,RADX10             ;
041370 / 135740,,037600           LDB  AC3, PSEGN             ;
041371 / 322740,,041405         JUMPE  AC3,GETNUP             ;
041372 / 261140,,000017          PUSH    P,   AC3             ;
041373 / 260140,,042676         PUSHJ    P,INLMES             ;
041400 / 262140,,000017           POP    P,   AC3             ;
041401 / 554057,,027120          HLRZ  TAC,JBTADR(AC3)        ;
041402 / 271040,,001777          ADDI  TAC,  1777             ;
041403 / 242040,,777766           LSH  TAC,777766             ;
041404 / 260140,,043720         PUSHJ    P,RADX10             ;
                       GETNUP:
041405 / 265040,,045545           JSP  TAC, PHOLD             ;
                       NOFILE:
041407 / 260140,,053531         PUSHJ    P,053531             ;;NOT FOUND--CLEAR TEMPORARY PRIVILEGES
041410 / 260140,,041622         PUSHJ  PDP,041622             ;;RELEASE DEVICE, FIND TTY
041411 / 260140,,042701         PUSHJ  PDP,  PRQM             ;
041412 / 260140,,042667         PUSHJ  PDP,  CRLF             ;
041413 / 200107,,000000          MOVE TAC1,      (PROG)       ;;PRINT FILE NAME
041414 / 260140,,043730         PUSHJ  PDP,PRNAME             ;
041415 / 260140,,042716         PUSHJ  PDP,042716             ;;PRINT PERIOD
041416 / 510107,,000001          HLLZ TAC1,FILEXT(PROG)       ;
041417 / 260140,,043730         PUSHJ  PDP,043730             ;;PRINT EXTENSION
041420 / 265040,,045545           JSP  TAC,045545             ;;PRINT MESS. AND STOP JOB
                       ;JOB HAS JUST A JOB DATA AREA ASSIGNED WHEN CONTROL GETS HERE
                       ;THIS MONITOR JOB GETS A JOB AREA FROM A RETRIEVABLE DEVICE
                       ;ASSIGNS CORE AND START
                       RUNJOB:
041424 / 265100,,041447           JSP TAC1,041447             ;; SETUP ACS, ASSIGN DEVICE, AND DO LOOKUP
041425 / 254000,,041407          JRST      041407             ;;NO FILE FOUND RETURN
041426 / 260140,,041635         PUSHJ    P,041635             ;;GET THE FILE
041427 / 550047,,000120          HRRZ  TAC, JOBSA(JDAT)       ;;GET STARTING ADDRESS
041430 / 606040,,777777          TRNN  TAC,777777             ;
041431 / 254000,,041440          JRST      NOSTRT             ;
041432 / 270044,,032765           ADD  TAC,SAVSAI(J)          ;;ADD STARTING ADDRESS INCREMENT
041433 / 505040,,010000          HRLI  TAC,010000             ;;SET USER MODE BIT
041434 / 202044,,026620         MOVEM  TAC, UUOPC(J)          ;;MAKE IT LOOK LIKE UUO RETURN
041435 / 200044,,030442          MOVE  TAC,JOBPPN(J)          ;;GET PRJPRG OF FILE
041436 / 202047,,000004         MOVEM  TAC,DMPEND(PROG)       ;;GIVE IT TO THE USER
041437 / 254000,,057144          JRST      057144             ;;AND GO START USER
                       NOSTRT:
041440 / 260140,,042676         PUSHJ    P,INLMES             ;
041446 / 254000,,041360          JRST       GETJ1             ;
                       ;ROUTINE TO SETUP ACS,RESET IO,ASSIGN DEVICE, AND DO LOOKUP
                       ;CALL:	JSP TAC1,SG1
                       ;	FILE NOT FOUND RETURN
                       ;	FILE FOUND RETURN
                       ;	IOWD FOR THIS SIZE CORE RETURNED IN AC TAC
                       ;	DEVMOD IN TAC1
                       SG1:
041447 / 265040,,045741           JSP  TAC,045741             ;;SETUP PROG,PDP,RESET DEVICES
                       ;PUT TAC1 ON END OF PD LIST
041450 / 260140,,060030         PUSHJ  PDP,060030             ;;RELEASE ALL DEVICES
041451 / 201040,,000002         MOVEI  TAC,000002             ;;SAVE MODE
041452 / 202047,,000005         MOVEM  TAC,MODWRD(PROG)       ;;STORE FOR OPEN UUO
041453 / 402007,,000007         SETZM      HEDWRD(PROG)       ;;CLEAR BUFFER HEADER ARG.
041454 / 336047,,000133         SKIPN  TAC,JOBCOR(PROG)       ;;WAS CORE SIZE SPECIFIED
041455 / 254000,,041464          JRST      041464             ;;NO
041456 / 317053,,024065          CAMG  TAC,USRREL(PID)        ;;YES, MUST WE GET SOME MORE
041457 / 254000,,041462          JRST      041462             ;;NO
041460 / 260140,,071361         PUSHJ    P,071361             ;;TRY FOR ENOUGH
041461 / 254000,,041472          JRST      041472             ;;CAN'T GET IT, GIVE HIM UP TO USRREL
                       SGCOR1:
041462 / 210047,,000133          MOVN  TAC,JOBCOR(PROG)       ;
041463 / 254000,,041473          JRST      SGCOR2             ;
                       SGCOR:
041464 / 550047,,000121          HRRZ  TAC, JOBFF(JDAT)       ;; PICK UP FIRST FREE LOCATION
041465 / 313053,,024065         CAMLE  TAC,USRREL(PID)        ;; IS IT IN BOUNDS?
041466 / 254000,,041472          JRST      041472             ;; NO, USE HIGHEST RELOCATABLE ADDRESS
041467 / 322040,,041472         JUMPE  TAC,041472             ;; ZERO IS PRETTY SILLY TOO
041470 / 213000,,000001         MOVNS      000001             ;; NEGATE TO FORM HALF OF IOWD
041471 / 332013,,024070         SKIPE      USRDDT(PID)        ;; IF DDT IS IN, SAVE UP TO JOBREL
                       SG2:
041472 / 210053,,024065          MOVN  TAC,USRREL(PID)        ;;YES, DUMP ALL OF CORE INSTEAD
                       SGCOR2:
041473 / 271040,,000073          ADDI  TAC,000073             ;;LOWER CORE NOT DUMPED
041474 / 505040,,000073          HRLI  TAC,JOBSAV             ;
041475 / 206047,,000011         MOVSM  TAC,DMPWRD(PROG)       ;;STORE IOWD WORD OF THIS SIZE CORE
                       ; COMMON SAVEGET ROUTINE, OPEN FILE, DO LOOKUP (ENTER?)
041476 / 050000,,000005          OPEN      000005             ;;TRY TO ASSIGN DEVICE
041477 / 254000,,041533          JRST      041533             ;;NOT AVAILABLE
041500 / 200106,,000000          MOVE TAC1,      (DEVDAT)     ;
041501 / 202104,,030743         MOVEM TAC1,JOBDEV(ITEM)       ;
041502 / 200106,,000005          MOVE TAC1,DEVLOG(DEVDAT)     ;
041503 / 202104,,031043         MOVEM TAC1,JOBLOG(ITEM)       ;
041504 / 200106,,000004          MOVE TAC1,DEVMOD(DEVDAT)     ;
041505 / 554047,,000001          HLRZ  TAC,FILEXT(PROG)       ;;CHECK FOR DMP
041506 / 306040,,445560          CAIN  TAC,445560             ;
041507 / 607100,,000100          TLNN TAC1,000100             ;;IS IT ON DTA?
041510 / 254000,,041512          JRST      041512             ;
041511 / 201040,,445560         MOVEI  TAC,445560             ;;YES. CHANGE TO "SAV" IF WE HAVE
041512 / 506047,,000001          HRLM  TAC,FILEXT(PROG)       ;;"RECLAIMING FORMAT" DECTAPES
041513 / 200644,,030442          MOVE  AC1,JOBPPN(ITEM)       ;; GET PROJECT-PROGRAMMER NUMBER
041514 / 202647,,000003         MOVEM  AC1,FILLEN(PROG)       ;; SET IT INTO PLACE
041515 / 607100,,200000          TLNN TAC1,200000             ;; IS THIS A DISK?
041516 / 202047,,000003         MOVEM  TAC,FILLEN(PROG)       ;; NO, STORE WORD COUNT
041517 / 076000,,000000        LOOKUP                         ;;LOOKUP FILE NAME
041520 / 370003,,000000           SOS            (PDP)        ;;NOT FOUND
041521 / 200047,,000011          MOVE  TAC,DMPWRD(PROG)       ;;FOUND, RETURN IOWD FOR THIS SIZE CORE
041522 / 200106,,000004          MOVE TAC1,DEVMOD(DEVDAT)     ;
041523 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;; RESTORE JOB NUMBER FOR THOSE WHO NEED IT
041524 / 603100,,200000          TLNE TAC1, DVDSK             ;
041525 / 254000,,041530          JRST         SG3             ;
041526 / 402004,,030442         SETZM      JOBPPN(ITEM)       ;
041527 / 254000,,037401          JRST      CPOPJ1             ;
                       SG3:
041530 / 200646,,000014          MOVE  AC1,FILPPN(DEVDAT)     ;
041531 / 250644,,030442          EXCH  AC1,JOBPPN(ITEM)       ;
041532 / 254000,,037401          JRST      037401             ;;SKIP RETURN, UNLESS FILE NOT FOUND
                       ; COME HERE ON SAVE DEVICE NOT AVAILABLE
                       ; PRINT ERROR MESSAGE AND STOP JOB
                       SGERRA:
041533 / 322300,,041545         JUMPE DEVDAT,SGERR1             ;
041534 / 202303,,000000         MOVEM DEVDAT,      (PDP)        ;; PRINT DEVICE XXX
041535 / 260140,,137612         PUSHJ  PDP,137612             ;; FIND TTY
041536 / 260140,,042701         PUSHJ  PDP,  PRQM             ;
041537 / 260140,,042667         PUSHJ  PDP,  CRLF             ;
041540 / 260140,,043723         PUSHJ  PDP,043723             ;
041541 / 265040,,045545           JSP  TAC,045545             ;;PRINT AND STOP JOB
                       SGERR1:
041545 / 260140,,137612         PUSHJ  PDP,TTYFNU             ;
041546 / 265040,,045545           JSP  TAC, PHOLD             ;
                       ;ROUTINE TO SET DUMP MODE COMMAND LIST IN USER AREA
                       ;AND CHECK TO SEE IF ROOM IN CORE
                       ;THEN EXECUTE INPUT OR OUTPUT UUO,RELEASE DEVICE AND CHECK FOR
                       ;ERRORS
                       ;CALL:	PUSHJ PDP,SGDO
                       ;	INPUT 0,FILLEN OR OUTPUT 0,FILLEN
                       ;	OK RETURN(NO ERRORS)
                       SGDO:
041553 / 402007,,000004         SETZM      DMPEND(PROG)       ;;SET 2ND WORD OF DUMP LIST TO 0
041554 / 564047,,000003          HLRO  TAC,FILLEN(PROG)       ;;GET - NO. WORDS TO READ OR WRITE
041555 / 275040,,000073          SUBI  TAC,000073             ;;NO. OF LOWER CORE LOC. NOT DUMPED
041556 / 270053,,024065           ADD  TAC,USRREL(PID)        ;;HIGHEST LOC. IN USER AREA
041557 / 321040,,041601         JUMPL  TAC,041601             ;;WILL IT FIT?
041560 / 202313,,024066         MOVEM DEVDAT,USRHCU(PID)        ;;SET HIGHEST IO CHAN IN USE NEGATIVE
                       ;ALSO ADDRESS OF SAVE GET DEVICE.
041561 / 256023,,000000           XCT      @      (PDP)       ;;EXECUTE INPUT OR OUTPUT UUO
                       ;READ INTO PROTECTED PART OF JOB DATA AREA
041562 / 260140,,045215         PUSHJ  PDP,045215             ;;CLEAR OUT POSSIBLE GARBAGE
                       ;AND SET USRHCU BACK TO 0
041563 / 202313,,024071         MOVEM DEVDAT,USRJDA(PID)        ;;RESTORE CHANNEL 0 ASSIGNMENT
041564 / 261140,,000000          PUSH    P,                   ;;SAVE POSSIBLE ERROR BITS
041565 / 260140,,041622         PUSHJ  PDP,041622             ;;RELEASE DEVICE,FIND TTY
041566 / 200047,,000122          MOVE  TAC,JOBS41(JDAT)       ;;RESTORE USER UUO JSR LOC.
041567 / 202047,,000041         MOVEM  TAC, JOB41(JDAT)       ;;IN CASE THIS IS GET OR RUN
041570 / 262140,,000001           POP    P,000001             ;;GET BACK BITS
041571 / 606040,,740000          TRNN  TAC,740000             ;;ANY ERRORS ON SAVE-GET DEVICE?
041572 / 254000,,037401          JRST      037401             ;;NO, GIVE OK RETURN
                       SGTERR:
041573 / 265040,,045545           JSP  TAC,045545             ;;YES, PRINT MESS. AND STOP JOB
                       NOROOM:
041601 / 260140,,041622         PUSHJ  PDP,041622             ;;RELEASE DEVICE, FIND TTY
041602 / 260140,,042701         PUSHJ  PDP,  PRQM             ;
041603 / 260140,,042667         PUSHJ  PDP,  CRLF             ;
041604 / 333047,,000133        SKIPLE  TAC,JOBCOR(JDAT)       ;;GET MIN. HIGHEST REL.LOC. FOR JOB TO RUN
041605 / 254000,,041612          JRST      041612             ;;USE IT IF SPECIFIED.
041606 / 564107,,000003          HLRO TAC1,FILLEN(PROG)       ;;-LENGTH OF FILE
041607 / 213000,,000002         MOVNS      000002             ;;+LENGTH
041610 / 550047,,000003          HRRZ  TAC,FILLEN(PROG)       ;;FIRST LOC-1 DUMPED
041611 / 270040,,000002           ADD  TAC,000002             ;;LAST LOC DUMPED
                       NOROM1:
041612 / 242040,,777766           LSH  TAC,777766             ;;CONVERT TO NO. OF 1K BLOCKS-1
041613 / 271040,,000001          ADDI  TAC,     1             ;
041614 / 260140,,043720         PUSHJ  PDP,RADX10             ;
041615 / 265040,,045545           JSP  TAC,045545             ;;GO START TTY, AND STOP JOB
                       ;ROUTINE TO RELEASE DEVICE AND FIND TTY
                       SGREL:
041622 / 336013,,024071         SKIPN      USRJDA(PID)        ;;HAS CHANNEL BEEN RELEASED ALREADY?
041623 / 254000,,137616          JRST      137616             ;;YES. FIND TTY AND WAIT FOR OUTPUT TO FINSIH
041624 / 200046,,000004          MOVE  TAC,DEVMOD(DEVDAT)     ;
041625 / 603040,,000020          TLNE  TAC,000020             ;;MAGTAPE?
041626 / 607300,,010000          TLNN DEVDAT,010000             ;;YES. WAS AN INPUT DONE?
041627 / 254000,,041633          JRST      041633             ;;NO
041630 / 070000,,000001         CLOSE      000001             ;;YES. CLOSE INPUT.
041631 / 061000,,002000         STATO      002000             ;;AT END OF TAPE?
041632 / 072000,,000006         MTAPE      000006             ;;NO. SKIPTO EOF
                       SGREL1:
041633 / 071000,,000000        RELEAS                         ;;NO, RELEASE DEVICE
041634 / 254000,,137616          JRST      137616             ;;FIND TTY AND WAIT FOR OUTPUT TO FINISH
                       ;ROUTINE TO GET FILE FROM DEVICE
                       GETJB:
041635 / 260140,,060104         PUSHJ    P,060104             ;; FLUSH HIS UPPER SEGMENT IF ANY
041636 / 402007,,000071         SETZM      JOBINT(JDAT)       ;; THIS WON'T GET CLEARED BY DMP FILE--RPH 1-6-74
041637 / 200047,,000002          MOVE  TAC,FILDAT(PROG)       ;
041640 / 202044,,030542         MOVEM  TAC,JOBCRD(J)          ;;COPY CREATION DATE FOR SEGMENT ACCESS
041641 / 200047,,000011          MOVE  TAC,DMPWRD(PROG)       ;
041642 / 603100,,200000          TLNE TAC1,200000             ;;DISK?
041643 / 542047,,000003          HRRM  TAC,FILLEN(PROG)       ;;YES.
041644 / 550047,,000133          HRRZ  TAC,JOBCOR(PROG)       ;;HIGHEST REL.LOC. REQUESTED
041645 / 202047,,000012         MOVEM  TAC,NEWCOR(PROG)       ;;SAVE IT
041646 / 402007,,000133         SETZM      JOBCOR(PROG)       ;;CLEAR JOBCOR SO NOROOM MESSAGE ALWAYS WORKS
041647 / 327040,,041657         JUMPG  TAC,041657             ;;WAS CORE SPECIFIED IN COMMAND STRING?
041650 / 603100,,000020          TLNE TAC1,000020             ;;MAGTAPE?
041651 / 254000,,041665          JRST      GETJB3             ;
041652 / 564107,,000003          HLRO TAC1,FILLEN(PROG)       ;;NO, USE AMOUNT SPECIFIED IN DIRECTORY
041653 / 325100,,041777        JUMPGE TAC1,041777             ;;DUMP FILE?
041654 / 550047,,000003          HRRZ  TAC,FILLEN(PROG)       ;;FIRST LOC.-1
041655 / 274040,,000002           SUB  TAC,000002             ;;TOTAL NO. OF WORDS NEEDED - 1=
                       ;HIGHEST LOCATION DUMPED.
041656 / 435040,,001777          IORI  TAC,001777             ;;HIGHEST LOC. IN 1K BLOCKS
                       GETJB1:
041657 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;;SETUP JOB NUMBER
041660 / 260140,,071361         PUSHJ  PDP,071361             ;;TRY TO ASSIGN CORE
041661 / 254000,,041601          JRST      041601             ;;PRINT NO. OF BLOCKS NEEDED
041662 / 200106,,000004          MOVE TAC1,DEVMOD(DEVDAT)     ;
041663 / 607100,,000020          TLNN TAC1,000020             ;;MAGTAPE?
041664 / 254000,,041672          JRST      041672             ;;YES
                       GETJB3:
041665 / 554100,,000007          HLRZ TAC1,000007             ;;NO. SET FILLEN TO CURRENT CORE SIZE.
041666 / 275100,,000073          SUBI TAC1,JOBSAV             ;
041667 / 213000,,000002         MOVNS        TAC1             ;
041670 / 505100,,000073          HRLI TAC1,JOBSAV             ;
041671 / 206107,,000003         MOVSM TAC1,FILLEN(PROG)       ;
                       GETJB2:
041672 / 260140,,041553         PUSHJ  PDP,041553             ;;DO INPUT, RELEASE, FIND TTY
041673 / 066000,,000003         INPUT      000003             ;;EXECUTED FROM SGDO
041674 / 200044,,030442          MOVE  TAC,JOBPPN(J)          ;
041675 / 202047,,000003         MOVEM  TAC,FILLEN(PROG)       ;;RESTORE PPN FOR PROG TO SEE
041676 / 554047,,000135          HLRZ  TAC, HILOC(JDAT)       ;;SEGMENT PROTECTION SAVED HERE
                       ;IF NO SEGMENT WAS SAVED, PROT WILL BE 0.
041677 / 405040,,000377          ANDI  TAC,000377             ;;FLUSH UNUSED BITS
153054 / 000004,,030542                                       ;
153054 / 331104,,030542 POINT 9,04030542,8                    ;
041700 / 137040,,153054           DPB  TAC,153054             ;
                       ;HERE WE DISCOVER IF WE HAVE A HIGH SEGMENT TO SET-UP
                       ;FIRST TRY TO ATTACH TO THE SAVED NAME (IF ANY)
                       ;MAKE SURE IT IS WRITE PROTECTED, AND THAT IS WHAT WE WANT
                       ;IF ALL THIS FAILS, TRY A REMAP ON OUR SEGMENT.
041701 / 336047,,000135         SKIPN  TAC, HILOC(JDAT)       ;; DOES THIS JOB HAVE A HIGH SEGMENT?
041702 / 254000,,042022          JRST      042022             ;; NO, FIX UP CORE SIZE AND LEAVE
041703 / 621040,,777777           TLZ  TAC,777777             ;;ONLY INTERESTED IN RIGHT HALF
041704 / 435040,,001777          IORI  TAC,001777             ;;WHERE IT WILL BE MOVED TO
041705 / 311053,,024065          CAML  TAC,USRREL(PID)        ;;ADDRESS ABOVE TOP
041706 / 254000,,042000          JRST      042000             ;;YES, EVIL EVIL(NOT A DUMP FILE)
041707 / 261140,,000006          PUSH    P,000006             ;;DDB CLOBBERED BY SEGMENT UUOS
041710 / 336047,,000134         SKIPN  TAC,HINAME(JDAT)       ;;GET SAVED HIGH SEGMENT NAME!
041711 / 254000,,041727          JRST       GETJ5             ;
041712 / 202047,,000003         MOVEM  TAC,FILLEN(PROG)       ;
041713 / 047140,,400016        ATTSEG FILLEN,                   ;;ATTACH TO IT?
041714 / 254000,,041727          JRST       GETJ5             ;
041715 / 135040,,037600           LDB  TAC,037600             ;;GET ITS JOB NUMBER
041716 / 200041,,026114          MOVE  TAC,JBTSTS(TAC)        ;
041717 / 331007,,000135         SKIPL       HILOC(JDAT)       ;;DO WE WANT WRITE PROT?
041720 / 254000,,041724          JRST       GETJ7             ;
041721 / 603040,,000001          TLNE  TAC,000001             ;;YES, IS HE WRITE PROTECTED
041722 / 254000,,042020          JRST      042020             ;;PROT MATCHES
041723 / 254000,,041726          JRST       GETJ8             ;
                       GETJ7:
041724 / 607040,,000001          TLNN  TAC,000001             ;;IS HE UNPROTECTED?
041725 / 254000,,042020          JRST      042020             ;;THAT'S IT!
                       GETJ8:
041726 / 047000,,400017        DETSEG                         ;
                       GETJ5:
041727 / 550047,,000135          HRRZ  TAC, HILOC(JDAT)       ;;CURRENT BOTTEM OF SEGMENT
041730 / 275040,,000001          SUBI  TAC,     1             ;
041731 / 260140,,061657         PUSHJ    P,061657             ;;MOVE UPPER TO NEXT 1K BOUNDARY
041732 / 200047,,000135          MOVE  TAC, HILOC(PROG)       ;
041733 / 275040,,000001          SUBI  TAC,     1             ;
041734 / 435040,,001777          IORI  TAC,  1777             ;
041735 / 202047,,000003         MOVEM  TAC,FILLEN(PROG)       ;
041736 / 047140,,000037         REMAP FILLEN,                   ;; REMAP US
041737 / 304000,,000000          CAIA                         ;
041740 / 254000,,042005          JRST      GETDN2             ;
                       ;END OF GET, REMAP ERROR, SETPR2 KLUDGE
041741 / 262140,,000006           POP    P,000006             ;;GET BACK TTY DDB
041742 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;;AND SET UP THIS GUY
041743 / 260140,,042676         PUSHJ    P,INLMES             ;
041762 / 554040,,000007          HLRZ  TAC,  PROG             ;
041763 / 202047,,000133         MOVEM  TAC,JOBCOR(PROG)       ;;DON'T LET HIM CORE DOWN BELOW UPPER
041764 / 271040,,000001          ADDI  TAC,     1             ;
041765 / 202047,,000121         MOVEM  TAC, JOBFF(PROG)       ;;AND TELL HIM NOT TO WRITE OVER IT
041766 / 506047,,000120          HRLM  TAC, JOBSA(PROG)       ;;IN BOTH WAYS
041767 / 274047,,000003           SUB  TAC,FILLEN(PROG)       ;;LENGTH OF UPPER+1
041770 / 205041,,777776         MOVSI  TAC,777776(TAC)        ;
041771 / 331007,,000135         SKIPL       HILOC(PROG)       ;
041772 / 621040,,000001           TLZ  TAC,000001             ;;SET UP W.P. BIT
041773 / 540047,,000003           HRR  TAC,FILLEN(PROG)       ;
041774 / 271040,,000004          ADDI  TAC,000004             ;;REMOVE OFFSET AND SET "RELATIVE" & "PSEUDO-UPPER" BITS
041775 / 260140,,061473         PUSHJ    P, STPR2             ;
041776 / 254000,,042022          JRST      GETDN1             ;
                       GETERR:
041777 / 260140,,041622         PUSHJ  PDP,041622             ;;RELEASE DEVICE AND FIND TTY
                       GETERA:
042000 / 265040,,045545           JSP  TAC, PHOLD             ;
                       GETDN2:
042005 / 336047,,000134         SKIPN  TAC,HINAME(JDAT)       ;
042006 / 254000,,042020          JRST      GETDON             ;
042007 / 135100,,037600           LDB TAC1, PSEGN             ;
042010 / 200302,,026420          MOVE  DDB, NJOBS(TAC1)       ;
                       ;IFE FTSTAT
042011 / 303300,,000001         CAILE  DDB,     1             ;
042012 / 254000,,042020          JRST      GETDON             ;
042013 / 202042,,030142         MOVEM  TAC,JOBNAM(TAC1)       ;
042014 / 261140,,000004          PUSH    P,     J             ;
042015 / 200200,,000002          MOVE    J,  TAC1             ;
042016 / 260140,,072454         PUSHJ    P,NAMSTT             ;
042017 / 262140,,000004           POP    P,     J             ;
                       ;FTSTAT
                       GETDON:
042020 / 262140,,000006           POP    P,000006             ;;GET BACK TTY DDB
042021 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
                       GETDN1:
042022 / 332047,,000012         SKIPE  TAC,NEWCOR(PROG)       ;;DID USER TYPE 3RD ARGUMENT?
042023 / 317047,,000133          CAMG  TAC,JOBCOR(JDAT)       ;;YES, IS 3RD ARG GREATER THAN
                       ;MIN SIZE SPECIFIED BY THIRD
                       ;ARG TO SAVE (IF ANY)?
042024 / 200047,,000133          MOVE  TAC,JOBCOR(JDAT)       ;;NO, ASSIGN NEW BIGGER AMOUNT OF CORE
042025 / 323040,,037403        JUMPLE  TAC,037403             ;; IF 0 OR NEG, DOESN'T MAKE SENSE.
042026 / 435040,,001777          IORI  TAC,  1777             ;
042027 / 554100,,000007          HLRZ TAC1,000007             ;; HOW MUCH DOES HE HAVE NOW
042030 / 316100,,000001          CAMN TAC1,000001             ;; DIFFERENT?
042031 / 263140,,000000          POPJ    P,                   ;;NO
042032 / 260140,,071361         PUSHJ  PDP,RUNCOR             ;
042033 / 255000,,000000          JFCL                         ;
042034 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO STUFF A FILE ON A DEVICE
                       SAVJB:
042035 / 402007,,000012         SETZM      NEWCOR(PROG)       ;;SIGNAL NO SAVE OF UPPER SEGMENT
042036 / 304000,,000000          CAIA                         ;
                       ; RESTORE PROJECT-PROGRAMMER NUMBER
                       SSAVJA:
042037 / 476007,,000012         SETOM      NEWCOR(PROG)       ;;FLAG TO SAVE UPPER(IF ANY)
042040 / 202647,,000003         MOVEM  AC1,FILLEN(PROG)       ;; TO THE LAST WORD OF THE LOOKUP BLOCK
                       ; PLEASE NOTE THAT THIS MEANS THAT YOU CAN'T CLOBBER TAC OR AC1 BETWEEN CALLS ON SG1 AND SAVJB
042041 / 607100,,200000          TLNN TAC1,200000             ;;DISK?
042042 / 202047,,000003         MOVEM  TAC,FILLEN(PROG)       ;;NO. SET FILE LENGTH IN DIRECT. HEADER
042043 / 402007,,000002         SETZM      FILDAT(PROG)       ;;MAKE SURE WE GET TODAY'S DATE
042044 / 603100,,200000          TLNE TAC1,200000             ;;DISC?
042045 / 070000,,000001         CLOSE      000001             ;;YES, CLOSE INPUT
042046 / 077000,,000000         ENTER                         ;;ENTER FILE NAME IN DIRECTORY
042047 / 254000,,042147          JRST      042147             ;;DIRECTORY FULL
042050 / 200047,,000011          MOVE  TAC,DMPWRD(PROG)       ;;RESTORE FILLEN AFTER DISC ENTER
042051 / 202047,,000003         MOVEM  TAC,FILLEN(PROG)       ;
042052 / 200047,,000041          MOVE  TAC, JOB41(JDAT)       ;;SAVE USER UUO HANDLING JSR
042053 / 202047,,000122         MOVEM  TAC,JOBS41(JDAT)       ;;IN UPPER PART OF JOB DATA AREA
042054 / 336007,,000012         SKIPN      NEWCOR(PROG)       ;;SHALL WE SAVE UPPER?
042055 / 254000,,042111          JRST      042111             ;;NO
042056 / 135040,,037600           LDB  TAC, PSEGN             ;
042057 / 322040,,042111         JUMPE  TAC, SAVJ1             ;
042060 / 554101,,027120          HLRZ TAC1,JBTADR(TAC)        ;
042061 / 271100,,000001          ADDI TAC1,     1             ;
042062 / 213000,,000002         MOVNS        TAC1             ;
042063 / 207000,,000002         MOVSS        TAC1             ;
042064 / 541100,,377777          HRRI TAC1,377777             ;
042065 / 202107,,000012         MOVEM TAC1,NEWCOR(PROG)       ;
042066 / 564107,,000003          HLRO TAC1,FILLEN(PROG)       ;
042067 / 460100,,000002         SETCM TAC1,000002             ;;COMPUTE +(LENGTH OF FIRST PART)-1
042070 / 435100,,000177          IORI TAC1,000177             ;;MAKE IT A DISK BLOCK BOUNDARY-1
042071 / 271100,,000075          ADDI TAC1,000075             ;;ROUNDING UP AND MAKING INTO CORE LOC
042072 / 135040,,037600           LDB  TAC, PSEGN             ;
153053 / 000001,,030542                                       ;
153053 / 331101,,030542 POINT 9,01030542,8                    ;
042073 / 135040,,153053           LDB  TAC,153053             ;
042074 / 504100,,000001           HRL TAC1,000001             ;;SET SEGMENT PROT BITS IN LEFT HALF OF JOBRL2 TO GET SAVED
042075 / 135040,,037600           LDB  TAC,037600             ;;GET THIS BACK
042076 / 200041,,026114          MOVE  TAC,JBTSTS(TAC)        ;
042077 / 603040,,000001          TLNE  TAC,   JWP             ;
042100 / 661100,,400000           TLO TAC1,      (1B0)        ;
042101 / 202107,,000115         MOVEM TAC1,JOBRL2(PROG)       ;;MAKE COMPATIBLE
042102 / 202107,,000135         MOVEM TAC1, HILOC(PROG)       ;
                       ; SAVE ROUTINE
042103 / 135040,,037600           LDB  TAC,037600             ;;AND AGAIN
042104 / 200041,,030142          MOVE  TAC,JOBNAM(TAC)        ;
042105 / 316044,,030142          CAMN  TAC,JOBNAM(J)          ;;SAME NAMED UPPER AS LOWER
042106 / 400040,,000000          SETZ  TAC,                   ;;YES, FLAG AS SUCH
042107 / 202047,,000134         MOVEM  TAC,HINAME(JDAT)       ;;SAVE IN THIS NEW PLACE!
042110 / 254000,,042115          JRST       SAVJ3             ;
                       SAVJ1:
042111 / 402007,,000135         SETZM       HILOC(JDAT)       ;
042112 / 402007,,000115         SETZM      JOBRL2(PROG)       ;
042113 / 402007,,000134         SETZM      HINAME(JDAT)       ;
042114 / 402007,,000012         SETZM      NEWCOR(JDAT)       ;;MAKE SURE NO SAVE HAPPENS!
                       SAVJ3:
042115 / 402007,,000004         SETZM      DMPEND(PROG)       ;
042116 / 564047,,000003          HLRO  TAC,FILLEN(PROG)       ;
042117 / 275040,,000073          SUBI  TAC,JOBSAV             ;
042120 / 270053,,024065           ADD  TAC,USRREL(PID)        ;
042121 / 321040,,041601         JUMPL  TAC,NOROOM             ;
042122 / 564047,,000003          HLRO  TAC,FILLEN(PROG)       ;
042123 / 213000,,000001         MOVNS         TAC             ;
042124 / 271040,,000073          ADDI  TAC,JOBSAV             ;
042125 / 202047,,000133         MOVEM  TAC,JOBCOR(PROG)       ;;MAKE SURE HE GETS TO BE RIGHT SIZE WHEN HE COMES BACK IN
042126 / 067000,,000003        OUTPUT      FILLEN             ;
042127 / 602000,,740000          TRNE      740000             ;
042130 / 254000,,042145          JRST      SGTERA             ;
042131 / 336007,,000012         SKIPN      NEWCOR(PROG)       ;
042132 / 254000,,041622          JRST       SGREL             ;
042133 / 402007,,000013         SETZM      000013(PROG)       ;
042134 / 067000,,000012        OUTPUT      NEWCOR             ;
042135 / 135040,,037600           LDB  TAC, PSEGN             ;
042136 / 322040,,042143         JUMPE  TAC, SAVJ2             ;
042137 / 554101,,027120          HLRZ TAC1,JBTADR(TAC)        ;
042140 / 660100,,400000           TRO TAC1,400000             ;
042141 / 202107,,000135         MOVEM TAC1, HILOC(PROG)       ;
042142 / 202107,,000115         MOVEM TAC1,JOBRL2(PROG)       ;
                       SAVJ2:
042143 / 606000,,740000          TRNN      740000             ;
042144 / 254000,,041622          JRST       SGREL             ;
                       SGTERA:
042145 / 260140,,041622         PUSHJ    P, SGREL             ;
042146 / 254000,,041573          JRST      SGTERR             ;
                       SAV4:
042147 / 260140,,041622         PUSHJ  PDP,041622             ;;RELEASE,DEVICE, FIND TTY
042150 / 265040,,045545           JSP  TAC,045545             ;;PRINT MESSAGE AND STOP JOB
042155 /                 ;::   BEGIN STANFO.APRSER.SEGCSS.
                       ; SEGMENT ACCESS CONTROL
                       ; PUT JOB NUMBER OF MASTER ON STACK AND NUMBER OF SEGMENT IN J
                       ; CALLING . . .
                       ;	PUSH PDP,ITEM
                       ;	MOVE ITEM,<SEGMENT NUMBER>
                       ;	PUSHJ PDP,ACCESS
                       ;	<NO ACCESS POSSIBLE>
                       ;	<READ ACCESS ONLY>
                       ;	<ALL ACCESS LEGAL>
                       ACCESS:
042155 / 200043,,777777          MOVE  TAC,777777(P)          ;; PICK UP MASTER JOB NUMBER
042156 / 200101,,027420          MOVE TAC1,JBTPRV(TAC)        ;; GET PRIV BITS OF MASTER
042157 / 603100,,000200          TLNE TAC1,000200             ;; DO WE HAVE THE PRIVILEGE?
042160 / 254000,,037400          JRST      037400             ;; YES, AUTOMATIC SUCCESS
042161 / 200101,,027720          MOVE TAC1,PRJPRG(TAC)        ;
153054 / 000004,,030542                                       ;
153054 / 331104,,030542 POINT 9,04030542,8                    ;
042162 / 135040,,153054           LDB  TAC,153054             ;
042163 / 622040,,000400          TRZE  TAC,000400             ;;UNPURIFIED?
042164 / 254000,,042200          JRST      042200             ;;YES - DIFFERENT TEST (TAC IS NOW JOB # OF DEFILER)
042165 / 316104,,030442          CAMN TAC1,JOBPPN(J)          ;; IS THIS THE SAME JOB?
042166 / 254000,,042173          JRST      042173             ;; YES, USE OWNER'S PROTECTION
042167 / 430104,,030442           XOR TAC1,JOBPPN(J)          ;
042170 / 602100,,777777          TRNE TAC1,777777             ;;SAME PROGRAMMER?
042171 / 242040,,000003           LSH  TAC,000003             ;; NO, MOVE OVER TO GENERAL PROTECTION
042172 / 242040,,000003           LSH  TAC,000003             ;; MOVE OVER TO PROGRAMMER PROTECTION
                       ACCES1:
042173 / 606040,,000300          TRNN  TAC,000300             ;; NOW, IS THERE ANY PROTECTION?
042174 / 254000,,037400          JRST      037400             ;; NO, EVERYTHING GOES
042175 / 606040,,000200          TRNN  TAC,000200             ;; IS IT READ PROTECTED?
042176 / 350003,,000000           AOS            (P)          ;; NO, IT CAN BE READ
042177 / 263140,,000000          POPJ    P,                   ;; OTHERWISE INACCESSABLE
                       ACCES2:
042200 / 316043,,777777          CAMN  TAC,777777(P)          ;;ONLY ORIGINAL OWNER WINS HERE
042201 / 254000,,037400          JRST      CPOPJ2             ;
042202 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO INVENT AN UPPER SEGMENT
                       ; SKIP RETURNS WITH JOB NUMBER OF SEGMENT IN J; NON SKIP IF JOB CAPACITY EXCEEDED
                       ; SETS CORE SIZE TO ZERO, SETS PPN TO *SEG*, SETS AS DETATCHED
                       ESTSEG:
042203 / 201200,,000001         MOVEI    J,     1             ;
042204 / 205040,,350000         MOVSI  TAC,350000             ;;JNA IS PROBABLY ENOUGH
                       ESTSE1:
042205 / 616044,,026114          TDNN  TAC,JBTSTS(J)          ;;SKIP IF JOB SLOT IN USE.
042206 / 254000,,042213          JRST      042213             ;;WE HAVE A SLOT TO USE.
042207 / 315200,,035266         CAMGE    J,035266             ;;HAVE WE SEEN ALL SLOTS?
042210 / 344200,,042205          AOJA    J,042205             ;;NOT YET.
042211 / 201200,,000000         MOVEI    J,                   ;;RETURN A ZERO
042212 / 263140,,000000          POPJ    P,                   ;;FAILURE.
                       ESTSE2:
042213 / 332004,,027120         SKIPE      JBTADR(J)          ;;BUG TRAP
042214 / 260140,,051164         PUSHJ    P,051164             ;;MAKE LOSE MESSAGE
042215 / 402004,,027120         SETZM      JBTADR(J)          ;;NO CORE ANYWHERE.
042216 / 205040,,051000         MOVSI  TAC,051000             ;;SET SEGMENT, SLOT USED, LOGGED IN
042217 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;IN JOB STATUS FOR SEGMENT
042220 / 402004,,026420         SETZM       NJOBS(J)          ;;NO ONE USING THIS UPPER YET
042221 / 476004,,027320         SETOM      JBTLIN(J)          ;;DETACHED
042222 / 402004,,031243         SETZM       TTIME(J)          ;;NO RUN TIME FOR THIS UPPER
042223 / 402004,,031443         SETZM       XTIME(J)          ;;NO XTIME
042224 / 402004,,012230         SETZM      DSKOPS(J)          ;;NO DISK OPS
042225 / 200040,,023423          MOVE  TAC,TIMDAT             ;
042226 / 202044,,031343         MOVEM  TAC, FTIME(J)          ;;SET UP JOB LAST RUN TIME.
042227 / 200040,,152343          MOVE  TAC,152343             ;;PPN = *SEG*
042230 / 202044,,027720         MOVEM  TAC,PRJPRG(J)          ;
042231 / 201040,,000011         MOVEI  TAC,000011             ;;QUEUE US INTO THE STOPQ
042232 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;
042233 / 350003,,000000           AOS            (P)          ;;SETUP SKIP RETURN
042234 / 254000,,046027          JRST       REQUE             ;
                       ; THIS ROUTINE DEFINES A SEGMENT. IT SEARCHES FOR AN EXISTING
                       ; SEGMENT FIRST WITH THE PROPER CREDENTIALS AND GIVES YOU ITS NUMBER FIRST.
                       ; OTHERWISE, IT MAKES ONE UP AND PUTS YOUR ID IN ITS CREDENTIALS. RETURNS
                       ; THE NUMBER OF THE SEGMENT IN JBTSTS, 0 FOR FAILURE.
                       LINKSE:
042235 / 260140,,042334         PUSHJ    P,042334             ;;GET RID OF EXISTING UPPER.
042236 / 261140,,000004          PUSH    P,     J             ;
042237 / 200640,,000004          MOVE  AC1,000004             ;; SAVE NUMBER OF MASTER JOB
042240 / 200200,,035266          MOVE    J,JOBNM1             ;
                       DEFSE1:
042241 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;;LOOK FOR AN UPPER.
042242 / 607040,,001000          TLNN  TAC,  JSEG             ;
042243 / 254000,,042300          JRST      042300             ;;NOT AN UPPER. SKIP IT.
042244 / 200044,,030142          MOVE  TAC,JOBNAM(J)          ;
042245 / 200104,,030442          MOVE TAC1,JOBPPN(J)          ;
042246 / 316055,,030142          CAMN  TAC,JOBNAM(AC1)        ;;DOES THE JOB NAME MATCH?
042247 / 312115,,030442          CAME TAC1,JOBPPN(AC1)        ;;AND DOES THE PROJ-PROG NAME MATCH?
042250 / 254000,,042300          JRST      042300             ;; NO
042251 / 200044,,030542          MOVE  TAC,JOBCRD(J)          ;
042252 / 200104,,030743          MOVE TAC1,JOBDEV(J)          ;
042253 / 316055,,030542          CAMN  TAC,JOBCRD(AC1)        ;;DOES THE CREATION DATE AND PROTECTION MATCH?
042254 / 312115,,030743          CAME TAC1,JOBDEV(AC1)        ;;AND DOES THE DEVICE MATCH?
042255 / 254000,,042300          JRST      042300             ;;NO
042256 / 200044,,031043          MOVE  TAC,JOBLOG(J)          ;;CHECK LOGICAL NAME TOO
042257 / 316055,,031043          CAMN  TAC,JOBLOG(AC1)        ;
042260 / 260140,,042155         PUSHJ    P,042155             ;;NOW, CAN WE LEGALLY ACCESS THIS SEGMENT?
042261 / 254000,,042300          JRST      042300             ;;NO
042262 / 255000,,000000          JFCL                         ;
                       DEFSE3:
042263 / 200040,,000004          MOVE  TAC,     J             ;
042264 / 262140,,000004           POP    P,     J             ;
042265 / 137040,,037600           DPB  TAC, PSEGN             ;
042266 / 260140,,072465         PUSHJ    P,SEGSTT             ;
042267 / 135040,,037600           LDB  TAC, PSEGN             ;
042270 / 350001,,026420           AOS       NJOBS(TAC)        ;;BUMP COUNT OF NUMBER OF PEOPLE POINTING TO HIM
042271 / 332000,,000001         SKIPE         TAC             ;
042272 / 350003,,000000           AOS            (P)          ;
                       SEGXIT:
042273 / 312213,,024061          CAME    J,   JOB(PID)        ;
042274 / 254000,,042277          JRST      SEGXT1             ;
042275 / 260140,,072621         PUSHJ    P, GETPR             ;
042276 / 700140,,000001         DATAO  APR,   TAC             ;
                       SEGXT1:
042277 / 263140,,000000          POPJ    P,                   ;
                       DEFSE2:
042300 / 367200,,042241          SOJG    J,DEFSE1             ;
042301 / 262140,,000004           POP    P,     J             ;
042302 / 263140,,000000          POPJ    P,                   ;
                       MAKESE:
042303 / 260140,,042334         PUSHJ    P,KILSEG             ;
042304 / 261140,,000004          PUSH    P,     J             ;
042305 / 260140,,042203         PUSHJ    P,042203             ;; IF NO EXISTING ONE, MAKE ONE UP
042306 / 254000,,042263          JRST      042263             ;; IF NOT AVAILABLE, JUST LEAVE
042307 / 200040,,000004          MOVE  TAC,000004             ;;SAVE SEGMENT NUMBER
042310 / 262140,,000004           POP    P,     J             ;
042311 / 137040,,037600           DPB  TAC, PSEGN             ;
042312 / 260140,,072465         PUSHJ    P,SEGSTT             ;
042313 / 135040,,037600           LDB  TAC, PSEGN             ;
                       ;FTSTAT
                       MAKSE2:
042314 / 350001,,026420           AOS       NJOBS(TAC)        ;; BUMP COUNT OF PEOPLE POINTING TO HIM
042315 / 200104,,030142          MOVE TAC1,JOBNAM(J)          ;; NOW ESTABLISH ITS CREDENTIALS
042316 / 202101,,030142         MOVEM TAC1,JOBNAM(TAC)        ;
042317 / 261140,,000004          PUSH    P,     J             ;
042320 / 200200,,000001          MOVE    J,   TAC             ;
042321 / 260140,,072454         PUSHJ    P,NAMSTT             ;
042322 / 262140,,000004           POP    P,     J             ;
                       ;FTSTAT
042323 / 200104,,030442          MOVE TAC1,JOBPPN(J)          ;
042324 / 202101,,030442         MOVEM TAC1,JOBPPN(TAC)        ;
042325 / 200104,,030542          MOVE TAC1,JOBCRD(J)          ;
042326 / 202101,,030542         MOVEM TAC1,JOBCRD(TAC)        ;
042327 / 200104,,030743          MOVE TAC1,JOBDEV(J)          ;
042330 / 202101,,030743         MOVEM TAC1,JOBDEV(TAC)        ;
042331 / 200104,,031043          MOVE TAC1,JOBLOG(J)          ;
042332 / 202101,,031043         MOVEM TAC1,JOBLOG(TAC)        ;
042333 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO KILL A HIGH SEGMENT
                       ; ENTER WITH JOB NUMBER OF OWNER IN J
                       ; IF OTHER PEOPLE POINT TO IT, IT WILL REMAIN
                       ; IF NO-ONE ELSE POINTS TO IT, IT WILL GO AWAY
                       KILSEG:
042334 / 332004,,027220         SKIPE      JBTPR2(J)          ;;IS HE DOING PEEK-POKE?
153214 / 402004,,027220         SETZM      JBTPR2(J)          ;;YES, MUST KILL IT HERE
153215 / 254000,,042273          JRST      SEGXIT             ;
042335 / 254000,,153214          JRST      153214             ;
042336 / 261140,,000004          PUSH    P,000004             ;;SAVE JOB NUMBER.
042337 / 135200,,037600           LDB    J,037600             ;;GET OUR SEGMENT NUMBER
042340 / 326200,,042343         JUMPN    J,042343             ;;JUMP IF THERE IS A SEGMENT
042341 / 262140,,000004           POP    P,000004             ;;THERE'S NO SEGMENT. FORGET IT
042342 / 263140,,000000          POPJ    P,                   ;
                       KILSE6:
042343 / 261140,,000004          PUSH    P,000004             ;;SAVE SEGMENT NUMBER.
042344 / 334200,,035266         SKIPA    J,035266             ;;SEARCH FOR ANY OTHERS POINTING HERE
                       KILSE3:
042345 / 363200,,042372         SOJLE    J,042372             ;;DECREMENT J. JUMP IF JOB LIST EXHAUSTED
042346 / 316203,,777777          CAMN    J,777777(P)          ;;IS THIS THE CURRENT JOB?
042347 / 254000,,042345          JRST      042345             ;;YES. WE KNOW ABOUT HIM, SO SKIP IT.
042350 / 135040,,037600           LDB  TAC, PSEGN             ;
042351 / 316043,,000000          CAMN  TAC,      (P)          ;;DOES HE POINT TO OUR SEGMENT?
042352 / 254000,,042361          JRST      042361             ;;YES. - DON'T KILL SEGMENT.
                       KILSE7:
042353 / 336644,,033065         SKIPN  AC1,JBTDTS(J)          ;;DOES THIS GUY HAVE A DETACHED SEGMENT LIST?
042354 / 254000,,042345          JRST      042345             ;;NO.
                       KILSE5:
042355 / 135040,,037601           LDB  TAC,037601             ;;LOOK THRU DET SEG LIST
042356 / 322040,,042345         JUMPE  TAC,042345             ;;JUMP WHEN DET SEG LIST IS EMPTY
042357 / 312043,,000000          CAME  TAC,      (P)          ;;SAME AS THIS SEGMENT?
042360 / 344640,,042355          AOJA  AC1,042355             ;;NO. KEEP LOOKING.
                       KILSE4:
042361 / 262140,,000004           POP    P,000004             ;;SOMEONE ELSE POINTS TO THIS SEGMENT
                       KILSE2:
042362 / 375004,,026420         SOSGE       NJOBS(J)          ;
154673 / 260140,,000316         PUSHJ    P,PUSHIT             ;
154674 / 260140,,044066         PUSHJ    P,DISMES             ;
154704 / 260140,,000341         PUSHJ    P, POPIT             ;
154705 / 402004,,026420         SETZM       NJOBS(J)          ;
154706 / 263140,,000000          POPJ    P,                   ;
042363 / 260140,,154673         PUSHJ    P,154673             ;
042364 / 262140,,000004           POP    P,000004             ;;POP CURRENT JOB NUMBER
042365 / 201040,,000000         MOVEI  TAC,                   ;
042366 / 137040,,037600           DPB  TAC,037600             ;;ZERO SEGMENT FIELD
042367 / 260140,,072465         PUSHJ    P,SEGSTT             ;
042370 / 135040,,037600           LDB  TAC, PSEGN             ;
                       ;FTSTAT
042371 / 254000,,042273          JRST      SEGXIT             ;
                       ;HERE  IF THERE ARE NO FURTHER REFERENCES TO THIS SEGMENT.
                       KILSE1:
042372 / 262140,,000004           POP    P,000004             ;;GET THE SEGMENT NUMBER
042373 / 260140,,042412         PUSHJ    P,042412             ;;EXPUNGE SEGMENT
042374 / 200044,,026420          MOVE  TAC, NJOBS(J)          ;
042375 / 302040,,000001          CAIE  TAC,000001             ;;THERE SHOULD BE ONLY 1 POINTER TO THIS
042376 / 260140,,042400         PUSHJ    P, NZERR             ;
042377 / 254000,,042362          JRST      KILSE2             ;
                       NZERR:
042400 / 260140,,000316         PUSHJ    P,PUSHIT             ;
042401 / 260140,,044066         PUSHJ    P,DISMES             ;
042410 / 260140,,000341         PUSHJ    P, POPIT             ;
042411 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO ERASE A SEGMENT ENTIRELY
                       ZEROSE:
042412 / 261140,,000007          PUSH    P,  JDAT             ;
                       ZERO1:
042413 / 200344,,027120          MOVE JDAT,JBTADR(J)          ;
042414 / 402000,,000001         SETZM         TAC             ;
042415 / 260140,,072047         PUSHJ    P,072047             ;;GIVE BACK THIS SEGMENT'S CORE
042416 / 254000,,042447          JRST       ZERO5             ;
042417 / 200040,,035266          MOVE  TAC,035266             ;;LOOK FOR FATHER JOB.
                       ZERO3:
152054 / 000001,,026114                                       ;
152054 / 000601,,026114 POINT 6,01026114,35                   ;
042420 / 135100,,152054           LDB TAC1,152054             ;
042421 / 312100,,000004          CAME TAC1,     J             ;
                       ZERO4:
042422 / 367040,,042420          SOJG  TAC, ZERO3             ;
042423 / 322040,,042435         JUMPE  TAC, ZERO2             ;
042424 / 336001,,020473         SKIPN      JBTST2(TAC)        ;; WAS THERE A SPW MODULE HERE
042425 / 254000,,042422          JRST      042422             ;; NO.
042426 / 205100,,044000         MOVSI TAC1,044000             ;; YES, CLEAR THE SPACEWAR STOPPED BITS
042427 / 260140,,037464         PUSHJ    P, PWAIT             ;
042430 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
042431 / 412101,,020473        ANDCAM TAC1,JBTST2(TAC)        ;
042432 / 260140,,037501         PUSHJ    P, XWAIT             ;
042433 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
042434 / 254000,,042422          JRST      042422             ;;THERE AREN'T SUPPOSED TO BE ANY MORE ...
                       ZERO2:
042435 / 205040,,551001         MOVSI  TAC,551001             ;
042436 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
042437 / 402004,,030142         SETZM      JOBNAM(J)          ;
042440 / 402004,,027720         SETZM      PRJPRG(J)          ;
042441 / 201040,,000010         MOVEI  TAC,  NULQ             ;
042442 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;
042443 / 260140,,046027         PUSHJ    P, REQUE             ;
042444 / 260140,,113206         PUSHJ    P,113206             ;
042445 / 262140,,000007           POP    P,  JDAT             ;
042446 / 263140,,000000          POPJ    P,                   ;
                       ZERO5:
042447 / 260140,,046124         PUSHJ    P,046124             ;; WAIT FOR SPW TO STOP.
042450 / 254000,,042413          JRST       ZERO1             ;
                       ; ROUTINE TO FLUSH A JOB'S HIGH SEGMENT AND ALL THE SEGMENTS HE MAY HAVE
                       ; PREVIOUSLY DETACHED, IF AND ONLY IF NO ONE ELSE IS POINTING AT THEM.
                       ; CALL FROM UUO OR CLOCK LEVEL ONLY!!!!!!
                       FLUSHS:
042451 / 260140,,042334         PUSHJ    P,042334             ;;KILL HIS IMMEDIATE UPPER
042452 / 336644,,033065         SKIPN  AC1,JBTDTS(J)          ;;IS THERE A DET SEG LIST?
042453 / 263140,,000000          POPJ    P,                   ;;NO. THIS IS EASY.
042454 / 261140,,000004          PUSH    P,000004             ;;SAVE CALLING JOB'S NUMBER
                       FLUSH1:
042455 / 200215,,000000          MOVE    J,      (AC1)        ;;GET THE NUMBER OF THE DETACHED SEGMENT
042456 / 322200,,042507         JUMPE    J,042507             ;;JUMP IF THERE ARE NO MORE.
042457 / 321200,,042464         JUMPL    J,042464             ;;JUMP IF THIS IS SPECIAL DETACHED.
042460 / 200100,,035266          MOVE TAC1,JOBNM1             ;
042461 / 405200,,000077          ANDI    J,000077             ;;SEGMENT NUMBER ONLY.
                       FLUSH3:
152055 / 000002,,026114                                       ;
152055 / 000602,,026114 POINT 6,02026114,35                   ;
042462 / 135400,,152055           LDB  TEM,152055             ;;DO OTHERS POINT HERE?
042463 / 316400,,000004          CAMN  TEM,000004             ;;DIRECT MATCH?
                       FLUSH6:
042464 / 344640,,042455          AOJA  AC1,042455             ;;YES. CAN'T BE FLUSHED.
042465 / 312103,,000000          CAME TAC1,      (P)          ;;DON'T MATCH AGAINST OUR OWN JOB
042466 / 336242,,033065         SKIPN  DAT,JBTDTS(TAC1)       ;;DOES THIS JOB HAVE A DETACH LIST?
042467 / 254000,,042475          JRST      042475             ;;NO, GO TO NEXT JOB
                       FLUSH4:
152057 / 000005,,000000                                       ;
152057 / 000605,,000000 POINT 6,05000000,35                   ;
042470 / 135400,,152057           LDB  TEM,152057             ;;YES, PICK UP ITS SEGMENT NUMBER
042471 / 322400,,042475         JUMPE  TEM,042475             ;;JUMP IF END OF LIST
042472 / 316400,,000004          CAMN  TEM,000004             ;;DOES HE POINT TO US?
042473 / 344640,,042455          AOJA  AC1,042455             ;;YES, CAN'T ZERO THIS SEGMENT
042474 / 344240,,042470          AOJA  DAT,042470             ;;NO, TRY NEXT DETACHED SEGMENT
                       FLUSH5:
042475 / 367100,,042462          SOJG TAC1,042462             ;;LOOP AROUND FOR NEXT JOB
042476 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;;NOW, DOES THIS SEGMENT STILL EXIST?
042477 / 607040,,040000          TLNN  TAC,   JNA             ;
042500 / 344640,,042455          AOJA  AC1,042455             ;;NO, DON'T BOTHER
042501 / 261140,,000015          PUSH    P,   AC1             ;
042502 / 260140,,042412         PUSHJ    P,042412             ;;WIPE OUT THAT SEGMENT, NO OTHER REFERENCES TO IT
042503 / 332004,,026420         SKIPE       NJOBS(J)          ;
042504 / 260140,,042400         PUSHJ    P, NZERR             ;
042505 / 262140,,000015           POP    P,   AC1             ;
042506 / 344640,,042455          AOJA  AC1,FLUSH1             ;
                       FLUSH2:
042507 / 262140,,000004           POP    P,     J             ;
042510 / 200644,,033065          MOVE  AC1,JBTDTS(J)          ;;SEARCH FOR SPECIAL DET SEG.
042511 / 201715,,000000         MOVEI  AC2,      (AC1)        ;;AC1 POINTS AT HOLE. AC2 POINTS AT DATUM
                       FLUSH7:
042512 / 333056,,000000        SKIPLE  TAC,      (AC2)        ;;SKIP IF SPECIAL OR EMPTY
                       FLUSH8:
042513 / 344700,,042512          AOJA  AC2,042512             ;;NORMAL DET SEG. GET NEW DATUM
042514 / 202055,,000000         MOVEM  TAC,      (AC1)        ;;DATUM IS BUBBLED DOWN.
042515 / 322040,,042517         JUMPE  TAC,042517             ;;JUMP IF DONE.
042516 / 344640,,042513          AOJA  AC1,042513             ;;ADVANCE HOLE, ADVANCE DATUM.
                       FLUSH9:
042517 / 312644,,033065          CAME  AC1,JBTDTS(J)          ;;IS HOLE IS STILL IN THE SAME PLACE?
042520 / 263140,,000000          POPJ    P,                   ;;NO. WE STILL HAVE A DET SEG LIST.
042521 / 260140,,074163         PUSHJ    P,FSGIVE             ;
042522 / 402004,,033065         SETZM      JBTDTS(J)          ;
042523 / 263140,,000000          POPJ    P,                   ;
                       DSFLUS:
042524 / 336644,,033065         SKIPN  AC1,JBTDTS(J)          ;
042525 / 263140,,000000          POPJ    P,                   ;
                       DSFL1:
042526 / 205040,,400000         MOVSI  TAC,400000             ;
042527 / 413055,,000000        ANDCAB  TAC,      (AC1)        ;
042530 / 322040,,037403         JUMPE  TAC, CPOPJ             ;
042531 / 344640,,042526          AOJA  AC1, DSFL1             ;
                       ; UAPPLY - APPLY A ROUTINE TO ALL LOWERS OF AN UPPER.
                       ;CALL:
                       ;	MOVE	J,<UPPER'S NUMBER>
                       ;	PUSHJ	P,UAPPLY
                       ;	<INSTRUCTION TO XCT>	;J HAS LOWER'S NUMBER, DDB HAS UPPER'S NUMBER
                       ;	RETURN HERE
                       ;THE SUBJECT INSTRUCTION SHOULD NOT SKIP.  NO AC'S ARE CLOBBERED EXCEPT BY
                       ;THE XCT'ED INSTRUCTION.  DDB AND J SHOULD NOT BE USED TO RETURN ARGUMENTS, ETC.
                       UAPPLY:
042532 / 261140,,000006          PUSH    P,   DDB             ;
042533 / 261140,,000004          PUSH    P,     J             ;
042534 / 201200,,000077         MOVEI    J,000077             ;
                       UAPP1:
042535 / 135300,,037575           LDB  DDB,037575             ;;GET NUMBER OF THIS LOWER'S UPPER
042536 / 316303,,000000          CAMN  DDB,      (P)          ;
042537 / 254000,,042544          JRST      042544             ;;MATCHES.
                       UAPP2:
042540 / 367200,,042535          SOJG    J, UAPP1             ;
042541 / 262140,,000004           POP    P,     J             ;
042542 / 262140,,000006           POP    P,   DDB             ;
042543 / 254000,,037401          JRST      CPOPJ1             ;
                       UAPP3:
042544 / 261140,,000004          PUSH    P,     J             ;
042545 / 256023,,777775           XCT      @777775(P)         ;;J = JOB NUMBER OF LOWER, DDB = JOB NUMBER OF UPPER.
042546 / 262140,,000004           POP    P,     J             ;
042547 / 254000,,042540          JRST       UAPP2             ;
042550 /                 ;::    BEND STANFO.APRSER.SEGCSS.
                       ;ROUTINE TO RETURN NEXT ALPHANUMERIC STRING
                       ; IN COMMAND LINE (SIXBIT)
                       ;CALL:	MOVE TAC,BYTE POINTER TO PREVIOUS CHAR.
                       ;	PUSHJ PDP, CTEXT
                       ; SIXBIT STRING RETURN LEFT JUSTIFIED IN AC TAC1
                       CTEXT:
042550 / 260140,,042617         PUSHJ  PDP,042617             ;; SKIP LEADING SPACES, TABS, NULLS, AND CLEAR TAC1
042551 / 304000,,000000          CAIA                         ;
                       CTEXT1:
042552 / 260140,,042620         PUSHJ  PDP,SKIPS1             ;
                       ;DO NOT RETURN IF CR WAS PREVIOUS BREAK
151365 / 000000,,000002                                       ;
151365 / 440600,,000002 POINT 6,00000002,                     ;
042553 / 200500,,151365          MOVE UCHN,151365             ;
042554 / 135405,,000003           LDB  TEM,  TAKR(DAT)        ;
042555 / 405400,,000177          ANDI  TEM,   177             ;
042556 / 307400,,000172          CAIG  TEM,000172             ;
042557 / 305400,,000141         CAIGE  TEM,000141             ;
042560 / 254000,,042564          JRST       CTEX1             ;
042561 / 275400,,000040          SUBI  TEM,    40             ;
042562 / 254000,,042564          JRST       CTEX1             ;
                       CTEX0:
042563 / 260140,,042607         PUSHJ  PDP,042607             ;
                       CTEX1:
042564 / 260140,,042571         PUSHJ  PDP,042571             ;;IS IT ALPHANUMERIC
042565 / 640400,,000040           TRC  TEM,000040             ;;CONVERT TO SIXBIT
042566 / 603500,,770000          TLNE UCHN,770000             ;; HAVE WE ACCUMULATED 6 CHARS?
042567 / 136400,,000012          IDPB  TEM,000012             ;;NO, STORE AWAY
042570 / 254000,,042563          JRST      042563             ;; YES
                       ;SCAN FOR ALPHANUMERIC CHAR IN TEM
                       CTEX:
042571 / 301400,,000060          CAIL  TEM,000060             ;
042572 / 303400,,000132         CAILE  TEM,000132             ;;LETTERS ARE LARGER THAN NOS.
042573 / 254000,,042577          JRST      042577             ;;NEITHER
042574 / 303400,,000071         CAILE  TEM,000071             ;
042575 / 301400,,000101          CAIL  TEM,000101             ;
042576 / 263140,,000000          POPJ  PDP,                   ;;LETTER OR NUMBER RETURN
                       CTEXA:
042577 / 306400,,000072          CAIN  TEM,000072             ;; DEVICE NAME?
042600 / 260140,,042607         PUSHJ  PDP,042607             ;; YES, SKIP COLON
042601 / 302400,,000000          CAIE  TEM,                   ;; ↑C?
042602 / 254000,,037376          JRST      037376             ;; NO, RETURN UP ONE LEVEL
                       CTXCNC:
042603 / 205100,,504154         MOVSI TAC1,504154             ;; CUE UP A PHONY 'HALT'
042604 / 201400,,000012         MOVEI  TEM,000012             ;; TERMINATE WITH LINE FEED
042605 / 137405,,000003           DPB  TEM,  TAKR(DAT)        ;; STORE IN INPUT BUFFER DO ↑C NOT SEEN
042606 / 254000,,037376          JRST      037376             ;; AND RETURN UP A LEVEL
                       GETLCC:
042607 / 260140,,140710         PUSHJ    P,GETCHR             ;
042610 / 307400,,000172          CAIG  TEM,000172             ;
042611 / 305400,,000141         CAIGE  TEM,000141             ;
042612 / 263140,,000000          POPJ    P,                   ;
042613 / 275400,,000040          SUBI  TEM,    40             ;
042614 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO IGNORE LEADING SPACES, TABS, AND NULLS
                       ;ALSO CLEARS TAC1
                       ;DOES NOT RETURN IF PREVIOUS CHAR. OR NEXT NON-SPACING
                       ;CHAR. IS CR(IE POPS SUBROUTINE LEVEL UP 1 ON RETURN)
                       ;CALL:	MOVE TAC,BYTE POINTER TO PREVIOUS BREAK CHAR.
                       ;	PUSHJ PDP, SKIPS1
                       SKIPSJ:
042615 / 260140,,042620         PUSHJ    P,SKIPS1             ;
042616 / 263140,,000000          POPJ    P,                   ;
                       SKIPS:
042617 / 260140,,042607         PUSHJ  PDP,042607             ;; GET FIRST CHAR ON LINE
                       SKIPS1:
042620 / 201100,,000000         MOVEI TAC1,                   ;; FOR CTEXT AND DECIN
042621 / 135405,,000003           LDB  TEM,  TAKR(DAT)        ;; IN CASE TEM IS CLOBBERED
042622 / 405400,,000177          ANDI  TEM,   177             ;
042623 / 302400,,000056          CAIE  TEM,000056             ;; IF A PERIOD, GET NEXT CHARACTER
042624 / 306400,,000015          CAIN  TEM,000015             ;; SKIP TO L.F. IF C.R.
                       SKIPSA:
042625 / 260140,,042607         PUSHJ  PDP,042607             ;; GET NEXT CHARACTER
                       SKIPSB:
042626 / 322400,,042640         JUMPE  TEM,042640             ;; LEAVE IF NO MORE CHARS
042627 / 306400,,000073          CAIN  TEM,   073             ;;;replaced;;CAIN TEM,";"		; STOP HIM AT SEMI-COLON
042630 / 254000,,042640          JRST      042640             ;; MAKE IT LOOK LIKE END OF LINE
042631 / 260140,,141026         PUSHJ  PDP,141026             ;; IS THIS A SPECIAL CHAR?
042632 / 254000,,042635          JRST      042635             ;; NO
042633 / 603040,,020000          TLNE  TAC,020000             ;; BREAK? END OF LINE?
042634 / 254000,,042640          JRST      042640             ;; YES, LEAVE
                       SKIPS2:
042635 / 307400,,000040          CAIG  TEM,000040             ;; SPACE OR CONTROL CHAR?
042636 / 254000,,042625          JRST      042625             ;; YES
042637 / 263140,,000000          POPJ  PDP,                   ;; NO, RETURN
                       SKIPS3:
042640 / 322400,,042603         JUMPE  TEM,042603             ;; ↑C?
042641 / 201400,,000012         MOVEI  TEM,000012             ;; WE USE LINE FEEDS FOR BREAK CHARS
042642 / 254000,,037376          JRST      037376             ;; RETURN UP ONE LEVEL
                       ;ROUTINE TO APPEND A "?" TO INPUT STRING AND SET AS OUTPUT
                       ;CALLED FROM OCTIN, RETURNS TO SECOND LEVEL ON PDL
                       ;CALL:	MOVE TAC, BYTE POINTER TO LAST CHAR. IN INPUT STRING
                       ;	PUSHJ PDP, COMERA
                       COMEND:
042643 / 260140,,042620         PUSHJ    P,042620             ;; IF ANYTHING LEFT IN INPUT LINE, FALL INTO COMERA
                       COMERP:
042644 / 262140,,000012           POP  PDP,000012             ;; REMOVE SUBROUTINE RETURN BEFORE CALLING COMERA
                       COMERA:
042645 / 260140,,140710         PUSHJ  PDP,GETCHR             ;
                       ;ROUTINE TO REPLACE LAST CHARACTER IN INPUT STRING BY "?"
                       ;AND SET AS OUTPUT
                       ;CALL:	MOVE TAC, BYTE POINTER TO LAST CHAR. IN INPUT STRING
                       ;	PUSHJ PDP, COMERR
                       COMERR:
042646 / 200506,,000022          MOVE UCHN,TITCTR(DEVDAT)     ;; SAVE POSITION IN SCAN
042647 / 260140,,137546         PUSHJ  PDP,137546             ;; BACK UP TO START OF COMMAND
                       COMERL:
042650 / 260140,,140710         PUSHJ  PDP,140710             ;; GET A CHARACTER FROM COMMAND LINE
042651 / 322400,,042656         JUMPE  TEM,042656             ;;QUIT ON NULL HERE!
042652 / 316506,,000022          CAMN UCHN,TITCTR(DEVDAT)     ;; HAVE WE PASSED A BAD CHAR YET?
042653 / 254000,,042656          JRST      042656             ;; YES
042654 / 260140,,140454         PUSHJ  PDP,140454             ;; NO, TYPE CHARACTER
042655 / 254000,,042650          JRST      042650             ;; AND LOOP FOR ANOTHER
                       COMER1:
042656 / 260140,,140775         PUSHJ  PDP,140775             ;; CLEAR ANY MORE TYPE IN
042657 / 201400,,000077         MOVEI  TEM,000077             ;; APPEND ? TO ERRONEOUS WORD
042660 / 260140,,140454         PUSHJ  PDP,140454             ;; AND PRINT IT
042661 / 205200,,200400         MOVSI    J,200400             ;;NOW WE PAINSTAKINGLY FAKE OUT COMRET
042662 / 436203,,777777          IORM    J,777777(P)          ;;*** IF YOU CALL COMERR FROM ANYPLACE THAT
042663 / 205200,,000300         MOVSI    J,000300             ;;*** DOESN'T HAVE COMRET NEXT ON THE PDL
042664 / 412203,,777777        ANDCAM    J,777777(P)          ;;*** BOY ARE YOU IN BAD TROUBLE!
042665 / 634200,,000004          TDZA ITEM,000004             ;; CLEAR JOB NUMBER AND SKIP INTO CRLF ROUTINE
                       ;ROUTINE TO PRINT A COMMAND ERROR MESSAGE
                       ;SAME CALL AS CONMES
                       ;COMERR SKIPS THIS ROUT.(SEE ABOVE)
                       ERRMES:
042666 / 634200,,000004          TDZA ITEM,000004             ;; CLEAR JOB NUMBER TO INDICATE ERROR
                       ;SKIP INTO CONMES ROUTINE
                       ;ROUTINE TO PRINT CARRIAGE RETURN-LINE-FEED
                       ;CALL:	MOVE DAT,BYTE POINTER TO OUTPUT
                       ;	PUSHJ PDP,CRLF
                       ;COMERR SKIPS TO HERE(SEE ABOVE)
                       CRLF:
042667 / 201040,,152275         MOVEI  TAC,152275             ;
                       ;ROUTINE TO MOVE ASCII CHAR. STRING TO CONSOLE OUTPUT BUFFER
                       ; CALL:	MOVE DAT, BYTE POINTER TO LAST OUTPUT CHARACTER
                       ;	MOVEI TAC,  ADDRESS OF ASCII MESSAGE
                       ;	PUSHJ PDP, CONMES
                       ; STRING TERMINATED BY NULL
                       ; CONMES DOES NOT START TTY
                       ;ERRMES SKIPS TO HERE
                       CONMES:
042670 / 505040,,440700          HRLI  TAC,440700             ;; FORM ASCIZ BYTE POINTER
042671 / 261140,,000001          PUSH  PDP,000001             ;;SAVE BYTE POINTER
                       CON0:
042672 / 134403,,000000          ILDB  TEM,      (PDP)        ;;GET NEXT CHAR.
042673 / 322400,,037376         JUMPE  TEM,037376             ;;IS IT NULL?(IF YES, DO POP P,TAC, POPJ)
                       TYO:
                       CONTYO:
042674 / 260140,,140454         PUSHJ  PDP,OUTCHS             ;
042675 / 254000,,042672          JRST      042672             ;;KEEP GOING
                       ;ROUTINE TO PRINT INLINE ASCIZ MESSAGE - INLMES, PRCRCC, PRCNCC
                       ;CALL:	PUSHJ PDP,INLMES
                       ;	ASCIZ /THE MESSAGE/
                       ;RETURN TO NEXT LOC AFTER MESSAGE
                       INLMES:
042676 / 262140,,000001           POP  PDP,000001             ;; SETUP PRINT ADRESS FOR CONMES
042677 / 260140,,042670         PUSHJ  PDP,CONMES             ;
042700 / 254001,,000001          JRST           1(TAC)        ;;RETURN TO NEXT LOC AFTER MESSAGE
                       ;ROUTINE TO APPEND ? TO ERROR MESSAGE
                       ;CALL	PUSHJ PDP,PRQM
                       ;	RETURN
                       PRQM:
042701 / 201400,,000077         MOVEI  TEM,000077             ;
042702 / 256000,,042674           XCT         TYO             ;
042703 / 263140,,000000          POPJ    P,                   ;
                       PRSPC:
042704 / 201040,,152535         MOVEI  TAC,152535             ;;DEC 3.16
042705 / 254000,,042670          JRST      042670             ;;DEC 3.16
                       ;ROUTINE TO PRINT "TOO FEW ARGUMENTS"
                       ;CALL:	MOVE DAT,BYTE POINTER
                       ;	PUSHJ PDP,NOTENF
                       NOTENF:
042706 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ;ROUTINE TO PRINT A PERIOD
                       ;CALL:	PUSHJ PDP,PRPER
                       PRCRCC:
042713 / 260140,,042667         PUSHJ    P,  CRLF             ;
                       PRCNTC:
042714 / 260140,,042676         PUSHJ    P,INLMES             ;
                       PRPER:
042716 / 201400,,000056         MOVEI  TEM,000056             ;
042717 / 254000,,140454          JRST      OUTCHS             ;
                       ;ROUTINE TO DEASSIGN A DEVICE
                       ;CALL:	MOVE DEVDAT, DEVICE DATA BLOCK
                       ;	MOVE ITEM, JOB NUMBER
                       ;	PUSHJ PDP, DEASG
                       ;	ERROR NOT PREVIOUSLY ASSIGNED
                       ;	OK RETURN WITH DEVICE DEASSIGNED
                       DEASG:
042720 / 135500,,037575           LDB UCHN,037575             ;;WAS DEVICE ASSIGNED TO THIS JOB?
042721 / 312500,,000004          CAME UCHN,  ITEM             ;
042722 / 263140,,000000          POPJ  PDP,                   ;;NO, RETURN
042723 / 261140,,000004          PUSH  PDP,000004             ;;SAVE JOB NUMBER
042724 / 205500,,400000         MOVSI UCHN,400000             ;;CLEAR DIRECTORY IN CORE BIT
042725 / 412506,,000004        ANDCAM UCHN,DEVMOD(DEVDAT)     ;
042726 / 402006,,000005         SETZM      DEVLOG(DEVDAT)     ;;CLEAR LOGICAL NAME
042727 / 201100,,400000         MOVEI TAC1,400000             ;;IS DEVICE ASSIGNED BY CONSOLE?
042730 / 612106,,000004          TDNE TAC1,DEVMOD(DEVDAT)     ;
042731 / 350003,,777777           AOS      777777(PDP)        ;;YES, DO OK RETURN
042732 / 260140,,065556         PUSHJ  PDP,065556             ;;CLEAR JOB NO. IN DDB IF DDB NOT NEEDED
042733 / 262140,,000004           POP  PDP,000004             ;;BY THIS JOB ANY MORE
042734 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO DEASSIGN ALL DEVICES EXCEPT LOGICAL TTY
                       ;CALL:	MOVE ITEM, JOB NUMBER
                       ;	MOVE DEVDAT,ADR. OF DEVICE NOT TO BE DEASSIGNED
                       ;	PUSHJ PDP, DEASTY
                       DEASTY:
042735 / 553000,,000006         HRRZS      000006             ;; CLEAN OUT THE LH SHIT
042736 / 261140,,000006          PUSH  PDP,000006             ;; SAVE TTY DDB ADDRESS
042737 / 554300,,000610          HLRZ DEVDAT,000610             ;;SEARCH ALL DDB'S
                       DEA1:
042740 / 302323,,000000          CAIE DEVDAT,@      (PDP)       ;;IS THIS DEVICE NOT TO BE DEASSIGNED?
042741 / 260140,,042720         PUSHJ  PDP,042720             ;;NO, TRY TO DEASSIGN IT
042742 / 255000,,000000          JFCL                         ;
042743 / 554306,,000003          HLRZ DEVDAT,DEVSER(DEVDAT)     ;
042744 / 326300,,042740         JUMPN DEVDAT,  DEA1             ;
042745 / 262140,,000006           POP  PDP,000006             ;;RESTORE TTY DDB ADDRESS
042746 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO READ CONSOLE AND CONVERT ANY RADIX NUMBER
                       ; CALL:	MOVE R,  DESIRED RADIX
                       ;	PUSHJ PDP, ANYRIN
                       ;	NO ARG. TYPED RETURN, TAC1=0
                       ;	ILLEGAL CHARACTER RETURN
                       ;	NORMAL EXIT	;AC TAC1 CONTAINS NUMBER
                       ;SCAN STOPS ON FIRST CR,DASH,SPACE,OR TAB OR ILLEGAL CHAR.
                       ;IF IT IS ILLEGAL CHAR.,SUBROUT. LEVEL IS POPED AND COMERA IS CALLED
                       ;WHICH PRINTS MONITOR COMMAND ERROR. THUS CALLER NEVER SEES RETURN
                       ;SKIPS LEADING SPACES AND TABS
                       DECIN1:
                       DECIN:
042747 / 201440,,000012         MOVEI    R,000012             ;;DECIMAL INPUT
042750 / 254000,,042753          JRST      ANYRIN             ;
                       OCTINS:
042751 / 260140,,042607         PUSHJ    P,042607             ;;SKIP PRECEEDING + OR -
                       OCTIN:
042752 / 201440,,000010         MOVEI    R,000010             ;;OCTAL INPUT
                       ANYRIN:
042753 / 260140,,042620         PUSHJ  PDP,042620             ;;SKIP LEADING SPACES, TABS, NULLS
                       ;DO NOT RETURN IF CR WAS PREVIOUS BREAK
                       ;OR THIS BREAK
                       OCT0:
042754 / 301400,,000175          CAIL  TEM,000175             ;; ALT MODE?
042755 / 254000,,037400          JRST      CPOPJ2             ;
042756 / 302400,,000073          CAIE  TEM,   073             ;;;replaced;;	CAIE TEM,";"		;SEMICOLON?
042757 / 306400,,000040          CAIN  TEM,000040             ;;SPACE?
042760 / 254000,,037400          JRST      037400             ;;YES, SKIP RETURN
042761 / 302400,,000055          CAIE  TEM,000055             ;;NO, DASH?
042762 / 306400,,000015          CAIN  TEM,000015             ;;CR?
042763 / 254000,,037400          JRST      037400             ;;YES, ONLY LEGAL TERMINATORS
042764 / 302400,,000054          CAIE  TEM,000054             ;;COMMA?
042765 / 306400,,000133          CAIN  TEM,000133             ;;LEFT BRACKET?
042766 / 254000,,037400          JRST      037400             ;;YES.
042767 / 275400,,000060          SUBI  TEM,    60             ;
042770 / 321400,,037401         JUMPL  TEM,037401             ;;ERROR IF NEG.,REMOVE SUB. RETURN AND PRINT
042771 / 311400,,000011          CAML  TEM,000011             ;;OR .GE. RADIX
042772 / 254000,,037401          JRST      037401             ;;ERROR, GREATER OR EQUAL TO RADIX
042773 / 220100,,000011          IMUL TAC1,     R             ;
042774 / 270100,,000010           ADD TAC1,   TEM             ;
                       CONTYI:
                       XXTYI:
042775 / 260140,,140710         PUSHJ  PDP,GETCHR             ;
042776 / 254000,,042754          JRST        OCT0             ;
                       ;GET PROJECT-PROGRAMMER NUMBERS
                       ;CALL:	MOVE TAC,INPUT BYTE POINTER
                       ;	PUSHJ PDP,PJPGNO
                       ;	ERROR RETURN
                       ;	OK RETURN
                       ;(AC2)LH ← PROJECT NUMBER
                       ;(AC2)RH ← PROGRAMMER NUMBER
                       PJPGNO:
042777 / 260140,,042620         PUSHJ  PDP,042620             ;;SKIP LEADING BLANKS.
043000 / 302400,,000133          CAIE  TEM,000133             ;;IS THERE A [?
043001 / 263140,,000000          POPJ  PDP,                   ;;NO. NO PPN.
043002 / 260140,,043013         PUSHJ  PDP,043013             ;;READ PROJ. "NUMBER".
043003 / 500700,,000002           HLL  AC2,  TAC1             ;
043004 / 302400,,000054          CAIE  TEM,000054             ;;SHOULD BE FOLLOWED BY A COMMA.
043005 / 254000,,043023          JRST       PJPG2             ;
043006 / 260140,,043013         PUSHJ  PDP,043013             ;;NOW PROG. NO.
043007 / 544700,,000002           HLR  AC2,  TAC1             ;
043010 / 306400,,000135          CAIN  TEM,000135             ;; ] IS OPTIONAL.
043011 / 260140,,042607         PUSHJ  PDP,042607             ;;THROW IT AWAY IF PRESENT.
043012 / 254000,,037401          JRST      CPOPJ1             ;
                       PJPG1:
043013 / 260140,,042550         PUSHJ  PDP,042550             ;;SCAN NEXT THING.
043014 / 322100,,037376         JUMPE TAC1,037376             ;;RETURN UPLEVEL IF NOTHING.
043015 / 607100,,007777          TLNN TAC1,  7777             ;
043016 / 242100,,777764           LSH TAC1,777764             ;;JUSTIFY NOW IN CASE SKIPSB DOESN'T COME BACK
043017 / 607100,,000077          TLNN TAC1,    77             ;
043020 / 242100,,777772           LSH TAC1,777772             ;
043021 / 260140,,042626         PUSHJ  PDP,042626             ;;MAKE SURE WE SEE TERMINATOR.
043022 / 263140,,000000          POPJ    P,                   ;;PROGRAM BUMMERS BEWARE OF UPLEVEL RETURN!
                       PJPG2:
043023 / 302400,,000012          CAIE  TEM,    12             ;
043024 / 263140,,000000          POPJ    P,                   ;
043025 / 336104,,030020         SKIPN TAC1,DSKPPN(J)          ;;COPY PRG FROM APPROPRIATE PLACE
043026 / 200104,,027720          MOVE TAC1,PRJPRG(J)          ;
043027 / 540700,,000002           HRR  AC2,  TAC1             ;
043030 / 254000,,037401          JRST      CPOPJ1             ;
                       ;ROUTINE TO PRINT TIME AS HOURS,MINUTES,SECONDS, AND HUNDRETHS
                       ;FORMAT IS HHMM:SS.HH
                       ;CALL:	MOVE TAC,TIME IN JIFFIES(60THS,50THS OR MILLISECONDS)
                       ;	MOVE DAT,OUTPUT TEXT BYTE POINTER
                       ;	PUSHJ PDP,PRTIME
                       ;END REPEAT 0
                       ;THESE ERROR ROUTINE PRINT "ERROR IN JOB N"
                       ;FOLLOWED BY AN APPROPRIATE ERROR MESSAGE
                       ;THEN THE JOB IS STOPPED AND CONSOLE IS RETURNED TO
                       ;MONITOR COMMAND MODE
                       ;APR DETECTED ERRORS
                       ;PUSHDOWN OVERFLOW,ILLEGAL MEMORY, NONEXISTENT MEMORY
                       ;FOR WHICH THE USER IS NOT ENABLED.
                       ;SEE APRSER TO SEE HOW APR INTERRUPTS ARE HANDLED
                       ;CALL:	SKIPE TAC,APRERR	;RESULT OF CONI APR,APRERR
                       ;	PUSHJ PDP,APRILM	;FROM CLK SERVICE ROUT.(LOWEST PRIOTITY PI)
                       ;	RETURN TO RESCHEDULE NEW USER
                       APRILM:
043031 / 402013,,023514         SETZM      APRERR(PID)        ;; ZERO ERROR FLAG
043032 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;; BLAME CURRENT JOB, WHOMEVER IT MAY BE
043033 / 606040,,020000          TRNN  TAC,020000             ;; ILLEGAL MEMORY REFERENCE?
043034 / 254000,,043070          JRST      043070             ;;NO
043035 / 200053,,023515          MOVE  TAC, APRPC(PID)        ;
043036 / 603040,,010000          TLNE  TAC,USRMOD             ;
043037 / 254000,,043042          JRST      APRIL2             ;
043040 / 260140,,150072         PUSHJ    P,150072             ;; KILL HIS SPW JOB SO IT WON'T HAPPEN AGAIN
043041 / 254000,,043054          JRST      APRIL1             ;
                       APRIL2:
043042 / 553000,,000001         HRRZS         TAC             ;
043043 / 317053,,024065          CAMG  TAC,USRREL(PID)        ;;IS IT IN BOUNDS?
043044 / 254000,,043054          JRST      APRIL1             ;
043045 / 606040,,400000          TRNN  TAC,400000             ;
043046 / 254000,,043061          JRST      APRJRS             ;
043047 / 135100,,037600           LDB TAC1, PSEGN             ;
043050 / 322100,,043061         JUMPE TAC1,APRJRS             ;
043051 / 554102,,027120          HLRZ TAC1,JBTADR(TAC1)       ;
043052 / 303042,,400000         CAILE  TAC,400000(TAC1)       ;
043053 / 254000,,043061          JRST      APRJRS             ;
                       APRIL1:
043054 / 265040,,043573           JSP  TAC,043573             ;;YES
043060 / 254000,,043104          JRST      043104             ;;PRINT LOC, THEN STOP JOB
                       APRJRS:
043061 / 265040,,043573           JSP  TAC,ERRPNT             ;
043067 / 254000,,043104          JRST      043104             ;;PRINT LOC, THEN STOP JOB
                       APRNXM:
043070 / 606040,,010000          TRNN  TAC,010000             ;;NON-EX MEM?
043071 / 254000,,043077          JRST      043077             ;;NO
043072 / 265040,,043573           JSP  TAC,043573             ;;YES
043076 / 254000,,043104          JRST      043104             ;;PRINT LOC, THEN STOP JOB
                       PDLAPR:
043077 / 606040,,200000          TRNN  TAC,200000             ;;PUSHDOWN OVERFLOW?
043100 / 254000,,043106          JRST      043106             ;;NO	;JS
043101 / 265040,,043573           JSP  TAC,043573             ;;YES
                       APRSCD:
043104 / 200113,,023515          MOVE TAC1, APRPC(PID)        ;;PRINT APR PC 
043105 / 254000,,043653          JRST      043653             ;;AS:
                       ;1)"AT USER LOC XXX" OR
                       ;2)"AT EXEC LOC XXX; EXEC CALLED FROM
                       ;   EXEC/USER LOC YYY
                       APRCNS:
043106 / 606040,,400000          TRNN  TAC,400000             ;;JS, REST OF PAGE.  CONS TRAP?
043107 / 265240,,043257           JSP  DAT,043257             ;;NO. HARDWARE PROBLEM.
043110 / 265040,,043573           JSP  TAC,ERRPNT             ;
043113 / 254000,,043104          JRST      APRSCD             ;
                       ;JS REST OF PAGE			;REG
                       ; ROUTINE TO PRINT ERROR MESSAGE FOR SPW MODULES
                       SPWMES:
043114 / 265040,,043573           JSP  TAC,ERRPNT             ;
043121 / 200044,,020473          MOVE  TAC,JBTST2(J)          ;;GET GOOD BITS
043122 / 607040,,000010          TLNN  TAC,000010             ;;ILL MEM REF?
043123 / 254000,,043154          JRST      043154             ;;NO
043124 / 553000,,000001         HRRZS         TAC             ;
043125 / 554104,,027120          HLRZ TAC1,JBTADR(J)          ;
043126 / 317040,,000002          CAMG  TAC,  TAC1             ;
043127 / 254000,,043140          JRST      SPWILM             ;
043130 / 606040,,400000          TRNN  TAC,400000             ;
043131 / 254000,,043145          JRST      SPWIPC             ;
043132 / 135100,,037600           LDB TAC1, PSEGN             ;
043133 / 322100,,043145         JUMPE TAC1,SPWIPC             ;
043134 / 554102,,027120          HLRZ TAC1,JBTADR(TAC1)       ;
043135 / 660100,,400000           TRO TAC1,400000             ;
043136 / 313040,,000002         CAMLE  TAC,  TAC1             ;
043137 / 254000,,043145          JRST      SPWIPC             ;
                       SPWILM:
043140 / 260140,,042676         PUSHJ    P,INLMES             ;
043144 / 254000,,043205          JRST      SPWMS1             ;
                       SPWIPC:
043145 / 260140,,042676         PUSHJ    P,INLMES             ;
043153 / 254000,,043205          JRST      SPWMS1             ;
                       SPWNXM:
043154 / 607040,,000004          TLNN  TAC,NXMSPW             ;
043155 / 254000,,043163          JRST      SPWPDL             ;
043156 / 260140,,042676         PUSHJ    P,INLMES             ;
043162 / 254000,,043205          JRST      SPWMS1             ;
                       SPWPDL:
043163 / 607040,,000002          TLNN  TAC,POVSPW             ;
043164 / 254000,,043171          JRST      SPWCNS             ;
043165 / 260140,,042676         PUSHJ    P,INLMES             ;
043170 / 254000,,043205          JRST      SPWMS1             ;
                       SPWCNS:
043171 / 607040,,000001          TLNN  TAC,CNSSPW             ;
043172 / 254000,,043177          JRST      SPWTMX             ;
043173 / 260140,,042676         PUSHJ    P,INLMES             ;
                       SPWTMX:
043177 / 607040,,000020          TLNN  TAC,ILLTMO             ;
043200 / 254000,,043205          JRST      SPWMS1             ;
043201 / 260140,,042676         PUSHJ    P,INLMES             ;
                       SPWMS1:
043205 / 550104,,020473          HRRZ TAC1,JBTST2(ITEM)       ;
043206 / 505100,,010000          HRLI TAC1,USRMOD             ;
043207 / 260140,,150072         PUSHJ  PDP,KILSPW             ;
043210 / 254000,,043653          JRST       PCPNT             ;
                       ;ADDRESS CHECK ERROR AT ANY LEVEL
                       ;DEVDAT MUST BE SET UP TO POINT TO OFFENDING DEVICE
                       ADRERR:
043211 / 265040,,043572           JSP  TAC,043572             ;; GET JOB NO. FROM DEVICE DATA BLOCK
                       UADER1:
043216 / 254000,,043512          JRST      043512             ;;PRINT "DEVICE XXX; EXEC CALLED FROM
                       ;   EXEC/USER LOC YYY"
                       ;THEN STOP JOB
                       UADRER:
043217 / 201040,,043212         MOVEI  TAC,043212             ;;ADDRESS CHECK AT UUO LEVEL.
043220 / 254000,,043571          JRST      043571             ;;WE WILL RETURN TO UADER1.
                       ; ROUTINE TO PRINT OUT MESSAGE FOR NON-IO UUOS
                       ; CALL BY <JRST UADERR>, DOES NOT RETURN
                       UADERR:
043221 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ;CALL:	JSP DAT,ERROR
                       ;TYPES "ERROR IN MONITOR" FOLLOWED BY CONTENTS OF DAT
                       ;THEN GOES TO AUTOLOAD
                       ERROR:
043230 / 202153,,023660         MOVEM    P,ERRPDL(PID)        ;;SAVE IT WHERE WE CAN FIND IT
043231 / 200153,,023657          MOVE    P, ERRPD(PID)        ;
043232 / 253140,,043233         AOBJN    P,043233             ;
043233 / 260140,,000316         PUSHJ    P,PUSHIT             ;
043234 / 261140,,000005          PUSH    P,000005             ;;SAVE CALLING ADDR
043235 / 260140,,044320         PUSHJ    P,044320             ;
043236 / 260140,,044066         PUSHJ    P,DISMES             ;
043244 / 262140,,000001           POP    P,   TAC             ;
043245 / 275040,,000001          SUBI  TAC,     1             ;
043246 / 260140,,044200         PUSHJ    P,DISOCT             ;
043247 / 260140,,044066         PUSHJ    P,DISMES             ;
043251 / 476000,,036035         SETOM      036035             ;
043252 / 260140,,043761         PUSHJ    P,043761             ;
043253 / 260140,,000341         PUSHJ    P, POPIT             ;
043254 / 332000,,000500         SKIPE      000500             ;
043255 / 260140,,000347         PUSHJ    P,000347             ;
043256 / 254000,,000365          JRST      000365             ;;THIS IS A LOSE ALWAYS NOW
                       ; UERROR IS FOR UUO LEVEL, BLAMES CURRENT JOB
                       ; CERROR IS FOR CLOCK LEVEL AND LOSES
                       UERROR:
043257 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;; PRINT FOR CURRENT JOB NUMBER
                       CERROR:
043260 / 265040,,043573           JSP  TAC,043573             ;; ITEM ALREADY SET UP
043265 / 200103,,777777          MOVE TAC1,777777(PDP)        ;;GET LOC OF JSP DAT,ERROR
043266 / 254000,,043653          JRST      043653             ;;PRINT "AT EXEC LOC XXX;
                       ;  EXEC CALLED FROM EXEC/USER YYY"
                       ;THEN STOP JOB
                       ;INPUT UUO FOR OUTPUT DEVICE
                       ;CALLED AT UUO LEVEL ONLY
                       ILLINP:
043267 / 265040,,043571           JSP  TAC,ERRPTU             ;
043272 / 260140,,043723         PUSHJ  PDP,043723             ;;PRINT "DEVICE XXX"
043273 / 265040,,043640           JSP  TAC,043640             ;;PRINT MESSAGE,UUOPC,STOP JOB
                       ; USER TRIED TO GIVE LPT OR PTP A BUFFER LARGER THAN
                       ; THE INTERNAL SYSTEM BUFFER
                       ; CALLED FROM UUO LEVEL ONLY
                       BTLERR:
043300 / 265040,,043571           JSP  TAC,043571             ;; SET UP TTY DEVDAT
043302 / 260140,,043723         PUSHJ  PDP,043723             ;; "DEVICE XXX"
043303 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ;OUTPUT UUO FOR INPUT DEVICE
                       ;CALLED AT UUO LEVEL ONLY
                       ILLOUT:
043311 / 265040,,043571           JSP  TAC,ERRPTU             ;
043314 / 260140,,043723         PUSHJ  PDP,043723             ;;PRINT "DEVICE XXX"
043315 / 265040,,043640           JSP  TAC,043640             ;;PRINT MESSAGE,UUOPC,STOP JOB
                       ;ILLEGAL DEVICE DATA MODE (INIT, OPEN, OR SETSTS UUOS)
                       ;CALLED AT UUO LEVEL ONLY
                       ILLMOD:
043322 / 265040,,043571           JSP  TAC,ERRPTU             ;
043330 / 254000,,043512          JRST      043512             ;;PRINT "DEVICE XXX",UUO PC
                       ;IO UUO TO USER CHANNEL WITH NO PREVIOUS INIT OR OPEN
                       ;CALLED AT UUO LEVEL ONLY
                       IOIERR:
043331 / 265040,,043571           JSP  TAC,ERRPTU             ;
043337 / 254000,,043651          JRST      043651             ;;PRINT UUO PC
                       ;UUOERR: ILLEGAL UUO 
                       ;CALLED AT UUO LEVEL ONLY - liar!
                       UUOERR:
043340 / 332013,,023425         SKIPE      SPWUUF(PID)        ;;DON'T GIVE MESSAGE IN SPACEWAR MODE
043341 / 700700,,077000         CONSZ   PI,077000             ;;YES, CH7?
043342 / 304000,,000000          CAIA                         ;
043343 / 254000,,150447          JRST      150447             ;;WE MIGHT BE ON THE PDP-6
043344 / 202200,,154754         MOVEM    J,154754             ;;I HATE VARIABLES, BUT SAVE J
043345 / 200213,,024061          MOVE    J,   JOB(PID)        ;;SOMETIMES NOT SET UP BY DPYSER
043346 / 200104,,026620          MOVE TAC1, UUOPC(J)          ;
043347 / 322200,,043352         JUMPE    J,UUOER3             ;
043350 / 603100,,010000          TLNE TAC1,USRMOD             ;
043351 / 254000,,043355          JRST      043355             ;;USER MODE CALL
                       UUOER3:
043352 / 202140,,023660         MOVEM    P,023660             ;;UUO CALLED FROM EXEC STORE LOSER'S P.
043353 / 200153,,023657          MOVE    P, ERRPD(PID)        ;
151763 / 000001,,000001                                       ;
043354 / 270140,,151763           ADD    P,151763             ;
                       UUOER1:
043355 / 265040,,043571           JSP  TAC,043571             ;;RETURNS WITH DAT AND DDB PUSHED
043361 / 200104,,026620          MOVE TAC1, UUOPC(J)          ;;GET LAST UUO PC
043362 / 603100,,010000          TLNE TAC1,010000             ;;USER ERROR?
043363 / 364100,,043653          SOJA TAC1, PCPNT             ;
043364 / 260140,,000316         PUSHJ    P,PUSHIT             ;
043365 / 260140,,044320         PUSHJ    P,044320             ;
043366 / 260140,,044066         PUSHJ    P,DISMES             ;
043401 / 200044,,026620          MOVE  TAC, UUOPC(J)          ;
043402 / 201041,,777777         MOVEI  TAC,777777(TAC)        ;
043403 / 260140,,044200         PUSHJ    P,DISOCT             ;
043404 / 260140,,044102         PUSHJ    P,DISTAB             ;
043405 / 260140,,044104         PUSHJ    P,DISJOB             ;
043406 / 260140,,044066         PUSHJ    P,DISMES             ;
043412 / 200044,,026720          MOVE  TAC,UUOOPC(J)          ;
043413 / 260140,,044200         PUSHJ    P,DISOCT             ;
043414 / 260140,,044066         PUSHJ    P,DISMES             ;
043417 / 200040,,023660          MOVE  TAC,ERRPDL             ;
043420 / 260140,,044200         PUSHJ    P,DISOCT             ;
043421 / 316200,,154754          CAMN    J, TSAVJ             ;
043422 / 254000,,043430          JRST      UUOER2             ;
043423 / 260140,,044066         PUSHJ    P,DISMES             ;
043426 / 200040,,154754          MOVE  TAC, TSAVJ             ;
043427 / 260140,,044200         PUSHJ    P,044200             ;;ONLY MAKES SENSE IN DECIMAL IF A JOB NUMBR
                       UUOER2:
043430 / 260140,,044066         PUSHJ    P,DISMES             ;
043441 / 260140,,050113         PUSHJ    P,SYSFIX             ;
043442 / 255000,,000000          JFCL                         ;
043443 / 255000,,000000          JFCL                         ;
043444 / 260140,,043761         PUSHJ    P,043761             ;;TELL THE WORLD
043445 / 260140,,000341         PUSHJ    P, POPIT             ;
043446 / 260140,,000347         PUSHJ    P,000347             ;
043447 / 200104,,026620          MOVE TAC1, UUOPC(J)          ;
043450 / 364100,,043653          SOJA TAC1,043653             ;;ALWAYS TRY JUST FLUSHING LOSER
                       ;ILLEGAL INSTRUCTION  -  ILLINS, HALT
                       ;HALT INSTRUCTION IS A SPECIAL CASE WHICH STOPS JOB BUT
                       ;THE USER MAY CONTINUE FROM IT(EFFECTIVE ADR.)
                       ;CALLED AT UUO LEVEL WITH A JRST
                       ILLINS:
043451 / 554040,,000014          HLRZ  TAC,000014             ;; ILLEGAL OPCODE
043452 / 405040,,777600          ANDI  TAC,777600             ;;LOOK AT OPCODE AND HIGH 2 AC BITS
043453 / 254200,,000000          JRST    4,                   ;
043453 / 306040,,254200          CAIN  TAC,      (<JRST 4,>)  ;;IS IT A HALT?
043454 / 254000,,043461          JRST      043461             ;;YES, PRINT DIFFERENT MESSAGE
043455 / 265040,,043571           JSP  TAC,ERRPTU             ;
043460 / 254000,,043651          JRST      043651             ;;PRINT UUO PC AND STOP JOB
                       HALT:
043461 / 200213,,024061          MOVE    J,   JOB(PID)        ;; PICK UP JOB NUMBER
043462 / 260140,,137655         PUSHJ    P,137655             ;; SET TTY IN MONITOR MODE
043463 / 260140,,042676         PUSHJ    P,INLMES             ;
043465 / 370104,,026620           SOS TAC1, UUOPC(J)          ;;UUOPC = LOCATION OF HALT PLUS ONE
043466 / 260140,,043673         PUSHJ    P,043673             ;;PRINT "USER LOC XXX"
043467 / 260140,,042713         PUSHJ    P,042713             ;;PRINT MONITOR MODE RESPONSE
043470 / 542604,,026620          HRRM  UUO, UUOPC(J)          ;; SAVE EFFECTIVE ADDRESS OF HALT
043471 / 260140,,137704         PUSHJ    P,137704             ;;START TTY TYPING
043472 / 260140,,045700         PUSHJ    P,045700             ;;STOP JOB, BUT FINISH THIS UUO
043473 / 336013,,023431         SKIPN      INTACT(PID)        ;
043474 / 254000,,057144          JRST      057144             ;;"RETURN" TO ADDRESS OF HALT (WILL NEVER GET THERE)
043475 / 254000,,045550          JRST       ESTOP             ;
                       ;ROUTINE FOR HUNG IO DEVICE
                       ;CALL	MOVE DEVDAT,ADDRESS OF DEVICE DATA BLOCK
                       ;	PUSHJ PDP,DEVHNG
                       DEVHNG:
043476 / 201040,,010000         MOVEI  TAC,010000             ;; TURN OFF IO DEVICE ACTIVE BIT IN
043477 / 412046,,000002        ANDCAM  TAC,DEVIOS(DEVDAT)     ;;MEMORY AND IOS
043500 / 620000,,010000           TRZ       IOACT             ;
043501 / 265040,,043572           JSP  TAC,ERRDEV             ;
043504 / 254000,,043512          JRST      DEVEXC             ;
                       ;BAD DECTAPE DIRECTORY
                       ;CALLED AT INTERRUPT AND UUO LEVELS WITH DEVDAT AND ITEM SETUP
                       BADDIR:
043505 / 265040,,043573           JSP  TAC,ERRPNT             ;
                       ;ROUTINE TO PRINT "DEVICE XXX; EXEC CALLED FOR EXEC/USER YYY"
                       ;THEN STOP JOB
                       ;TO BE USED BY DEVICE DEPENDENT ERROR MESSAGES AFTER JSP TAC,DEVERR
                       DEVEXC:
043512 / 260140,,043723         PUSHJ  PDP,043723             ;; PRINT "DEVICE XXX"
043513 / 200043,,000000          MOVE  TAC,      (P)          ;; GET DEVICE DDB
043514 / 200101,,000004          MOVE TAC1,DEVMOD(TAC)        ;;RPH PATCH TO CLEAR GOBIT ON DISK ERRORS
043515 / 607100,,200000          TLNN TAC1, DVDSK             ;
043516 / 254000,,043656          JRST      EXCALP             ;
043517 / 205000,,400000         MOVSI       GOBIT             ;
043520 / 413001,,000002        ANDCAB      DEVIOS(TAC)        ;;CLEAR GO BIT IF STOPPING DISK
043521 / 254000,,043656          JRST      043656             ;;PRINT "EXEC CALLED FROM EXEC/USER LOC YYY"
                       ;ROUTINE TO HALT A JOB WHEN A DEVICE IS NOT READY FOR I/O
                       ;CALLED FROM XXXSER AT UUO LEVEL
                       ;CALL	MOVE DEVDAT,ADDR OF DEVICE DDB
                       ;	MOVE ITEM,JOB NUMBER
                       ;	PUSHJ PDP,HNGSTP
                       HNGSTP:
043522 / 261140,,000000          PUSH  PDP,                   ;; SAVE STUFF FOR DEVICE
043523 / 261140,,000006          PUSH  PDP,DEVDAT             ;
043524 / 260140,,137616         PUSHJ  PDP,TTYFUW             ;
043525 / 260140,,042701         PUSHJ  PDP,  PRQM             ;
043526 / 260140,,043723         PUSHJ  PDP,043723             ;;PRINT "DEVICE XXX"
043527 / 260140,,042676         PUSHJ  PDP,042676             ;;AND MESSAGE
043532 / 260140,,042713         PUSHJ    P,PRCRCC             ;
043533 / 260140,,137704         PUSHJ  PDP,137704             ;;START TTY IN COMMAND MODE
043534 / 262140,,000006           POP  PDP,DEVDAT             ;
043535 / 262140,,000000           POP  PDP,                   ;
043536 / 260140,,045672         PUSHJ  PDP,045672             ;;STOP JOB
043537 / 254000,,046124          JRST      046124             ;;AND RESCHEDULE
                       ; ROUTINE TO PRINT A MESSAGE AND STOP A JOB IN A WAY
                       ; THAT CAN BE CONTINUED FROM.
                       ; CALLING . . .
                       ;	MOVEI TAC,[ASCIZ /MESSAGE HERE/]
                       ;	PUSHJ P,HNGMES
                       HNGMES:
043540 / 261140,,000000          PUSH    P,                   ;
043541 / 261140,,000006          PUSH    P,DEVDAT             ;
043542 / 261140,,000015          PUSH    P,   AC1             ;
043543 / 261140,,000016          PUSH    P,   AC2             ;
043544 / 261140,,000017          PUSH    P,   AC3             ;
043545 / 261140,,000005          PUSH    P,   DAT             ;
043546 / 261140,,000010          PUSH    P,   TEM             ;
043547 / 261140,,000002          PUSH    P,  TAC1             ;
043550 / 261140,,000001          PUSH    P,   TAC             ;
043551 / 200213,,024061          MOVE    J,   JOB(PID)        ;
043552 / 260140,,137616         PUSHJ    P,TTYFUW             ;
043553 / 262140,,000001           POP    P,   TAC             ;
043554 / 260140,,042670         PUSHJ    P,CONMES             ;
043555 / 260140,,042713         PUSHJ    P,PRCRCC             ;
043556 / 260140,,137704         PUSHJ    P,TTYSTC             ;
043557 / 260140,,045672         PUSHJ    P, STOP1             ;
043560 / 262140,,000002           POP    P,  TAC1             ;
043561 / 262140,,000010           POP    P,   TEM             ;
043562 / 262140,,000005           POP    P,   DAT             ;
043563 / 262140,,000017           POP    P,   AC3             ;
043564 / 262140,,000016           POP    P,   AC2             ;
043565 / 262140,,000015           POP    P,   AC1             ;
043566 / 262140,,000006           POP    P,DEVDAT             ;
043567 / 262140,,000000           POP    P,                   ;
043570 / 254000,,046124          JRST      WSCHED             ;
                       ;COMMON ERROR MESSAGE SETUP ROUTINES - ERRPTU
                       ;CALL:	JSP TAC,ERRPTU, ERRDEV, OR ERRPNT
                       ;	ASCIZ /MESSAGE/
                       ;	RETURNS HERE WITH DEVDAT SAVED 0(PDP)
                       ;	C(DEVDAT)=TTYDDB, DAT TO TTY OUTPUT BUFFER POINTER
                       ;	ITEM=JOB NUMBER
                       ;USE ERRPTU IF AT UUO LEVEL FOR SURE
                       ;ERRDEV IF ERROR FOR AN ASSIGNED DEVICE AT ANY LEVEL
                       ;ERRPNT WITH ITEM ALREADY SET TO OFFENDING JOB NUMBER
                       ;THE JSP CALL IS USED IN CASE PUSHDOWN SPACE BECOMES CRITICAL
                       ;AGAIN AND ERRPNT HAS TO WIPE EXISTING LIST OUT
                       ERRPTU:
043571 / 336213,,024061         SKIPN    J,   JOB(PID)        ;; BLAME CURRENT JOB IF NOT 0
                       ERRDEV:
043572 / 135200,,037575           LDB    J,037575             ;; JOB NUMBER FROM DEVICE DATA BLOCK
                       ERRPNT:
043573 / 326200,,043575         JUMPN    J,043575             ;
043574 / 476013,,024262         SETOM      NULBAD(PID)        ;
043575 / 261140,,000005          PUSH    P,000005             ;; SAVE CALL TO ERROR
043576 / 331000,,000004         SKIPL           J             ;
043577 / 301200,,000100          CAIL    J,000100             ;;REASONABLE JOB NUMBER?
043600 / 304000,,000000          CAIA                         ;
043601 / 254000,,043625          JRST      ERRZZ2             ;
043602 / 260140,,000316         PUSHJ    P,PUSHIT             ;
043603 / 260140,,044320         PUSHJ    P,044320             ;
043604 / 260140,,044066         PUSHJ    P,DISMES             ;
043616 / 260140,,000341         PUSHJ    P, POPIT             ;
043617 / 332000,,000500         SKIPE      000500             ;
043620 / 260140,,000347         PUSHJ    P,000347             ;
043621 / 336000,,036035         SKIPN      036035             ;
043622 / 254000,,043625          JRST      ERRZZ2             ;
043623 / 260140,,043761         PUSHJ    P,043761             ;
043624 / 254000,,000365          JRST      000365             ;
                       ERRZZ2:
043625 / 261140,,000006          PUSH    P,000006             ;;SAVE ADR. OF DEV. DATA BLOCK
043626 / 261140,,000001          PUSH    P,000001             ;;SAVE RETURN FROM ERRPNT
043627 / 200344,,027120          MOVE JDAT,JBTDAT(J)          ;;EVEN NULL JOB HAS JOB DATA AREA
043630 / 260140,,137655         PUSHJ    P,137655             ;;FIND JOB'S TTY AND SET UP DDB.
043631 / 260140,,042676         PUSHJ    P,INLMES             ;
043636 / 260140,,052165         PUSHJ    P,052165             ;;PRINT JOB NO.
043637 / 254000,,042676          JRST      042676             ;;PRINT MESSAGE SPECIFIED BY CALLER
                       ;ROUTINE TO PRINT UUO PC AND STOP JOB - UUOMES, UUOPCP, PCPNT
                       ;IF IN USER MODE PC WILL PRINT AS "AT USER LOC XXX"
                       ;IF IN EXEC MODE "AT EXEC LOC XXX; EXEC CALLED FORM EXEC/USER/ LOC YYY
                       UUOMES:
043640 / 200213,,024061          MOVE    J,   JOB(PID)        ;;MAKE SURE J IS SET UP
043641 / 332013,,023425         SKIPE      SPWUUF(PID)        ;
043642 / 700700,,077000         CONSZ   PI, 77000             ;
043643 / 304000,,000000          CAIA                         ;
043644 / 254000,,150447          JRST      150447             ;;MIGHT BE ON PDP-6
043645 / 261140,,000001          PUSH    P,   TAC             ;
043646 / 260140,,137655         PUSHJ    P,TTYERP             ;
043647 / 262140,,000001           POP    P,   TAC             ;
043650 / 260140,,042670         PUSHJ    P,042670             ;; PRINT MESSAGE POINTED TO BY TAC
                       UUOPCP:
043651 / 200104,,026620          MOVE TAC1, UUOPC(J)          ;; UUO PC STORED AT BOTTOM OF PDL
                       ;FIRST LOC ON PD LIST
043652 / 364100,,043653          SOJA TAC1,043653             ;;DECREMENT TO POINT TO UUO IN USER AREA
                       ;ROUTINE TO PRINT ONE OF THREE MESSAGES AND STOP JOB
                       ;1) "AT EXEC LOC XXX; EXEC CALLED FROM EXEC LOC YYY"
                       ;2) "AT EXEC LOC XXX; EXEC CALLED FORM USER LOC YYY"
                       ;3) "AT USER LOC YYY"
                       ;CALL:	MOVE TAC1, XXX		;WITH PC FLAGS IN LH
                       ;	PUSHJ PDP,PCPNT
                       ;	NEVER RETURN IF AT UUO LEVEL
                       PCPNT:
043653 / 260140,,043673         PUSHJ    P,043673             ;;PRINT " AT EXEC XXX" OR " AT USER "
043654 / 603100,,010000          TLNE TAC1,010000             ;;WAS PC IN USER MODE?
043655 / 254000,,043664          JRST      043664             ;;YES, ENOUGH INFO.
                       ;ROUTINE TO PRINT EITHER: - PCSTOP, PCP
                       ;1) "; EXEC CALLED FROM EXEC LOC YYY"
                       ;2) "; EXEC CALLED FROM USER LOC YYY"
                       ;AND STOP JOB
                       ;CALL:	PUSHJ PDP,EXCALP
                       ;	NEVER RETURNS IF AT UUO LEVEL
                       EXCALP:
043656 / 260140,,042676         PUSHJ    P,INLMES             ;
043661 / 200104,,026620          MOVE TAC1, UUOPC(J)          ;; UUO PC ON PDL
043662 / 275100,,000001          SUBI TAC1,000001             ;;BACK IT UP TO POINT TO UUO
043663 / 260140,,043673         PUSHJ    P,043673             ;;PRINT "EXEC LOC " OR USER LOC
                       PCSTOP:
043664 / 260140,,045546         PUSHJ    P,045546             ;; STOP JOB, START TTY AND SET JOB ERROR BIT
043665 / 262140,,000006           POP    P,000006             ;;RETURN ONLY IF AT INTERRUPT LEVEL
043666 / 254000,,037376          JRST      037376             ;;REMOVE ERROR CALL AND RETURN
                       ;ROUTINE TO PRINT PC AS:
                       ;1) "EXEC LOC XXX" OR "USER LOC XXX"
                       ;CALL:	MOVE TAC1,PC TO PRINT(LH=PC FLAGS)
                       ;	PUSHJ PDP,PCP
                       XMODE:
                       UMODE:
                       PCP:
043673 / 201040,,043667         MOVEI  TAC,043667             ;;ASSUME PC IN EXEC MODE
043674 / 603100,,010000          TLNE TAC1,010000             ;;IS IT?
043675 / 201040,,043671         MOVEI  TAC,043671             ;;NO, USER MODE
043676 / 260140,,042670         PUSHJ  PDP,042670             ;;PRINT ONE OR OTHER
043677 / 550040,,000002          HRRZ  TAC,000002             ;;PRINT RIGHT HALF IN OCTAL
                       ;FALL INTO OCTPNT
                       ;ROUTINE TO PRINT 36 BIT OCTAL NO
                       ;CALL:	MOVE DAT, TTY OUTPUT BYTE POINTER
                       ;	MOVE TAC,OCTAL NO
                       ;	PUSHJ PDP,OCTPNT
                       OCTPNT:
043700 / 261140,,000002          PUSH    P,000002             ;; SAVE TAC1
043701 / 201100,,000010         MOVEI TAC1,000010             ;;OCTAL BASE
                       ANYRDX:
043702 / 261140,,000004          PUSH    P,  ITEM             ;
043703 / 201202,,000000         MOVEI ITEM,      (TAC1)       ;
043704 / 260140,,043710         PUSHJ    P, OCTP1             ;
043705 / 262140,,000004           POP    P,  ITEM             ;
043706 / 262140,,000002           POP    P,  TAC1             ;
043707 / 263140,,000000          POPJ    P,                   ;
                       OCTP1:
043710 / 230040,,000004          IDIV  TAC,  ITEM             ;
043711 / 506103,,000000          HRLM TAC1,      (P)          ;
043712 / 322040,,043714         JUMPE  TAC,043714             ;
043713 / 260140,,043710         PUSHJ    P, OCTP1             ;
043714 / 554403,,000000          HLRZ  TEM,      (P)          ;
043715 / 201410,,000060         MOVEI  TEM,000060(TEM)        ;
043716 / 256000,,042674           XCT         TYO             ;
043717 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO PRINT DECIMAL NO.
                       ;CALL:	SAME AS OCTPNT
                       ;TAC1 IS PRESERVED
                       RADX10:
043720 / 261140,,000002          PUSH    P,000002             ;; OUTPUT DECIMAL
043721 / 201100,,000012         MOVEI TAC1,    12             ;
043722 / 254000,,043702          JRST      ANYRDX             ;
                       ;ROUTINE TO PRINT "DEVICE XXX"
                       ;CALL	MOVE DAT,ASCII OUTPUT BYTE POINTER
                       ;	PUSH PDP,DEVDAT
                       ;	PUSHJ PDP,ERNAM
                       ERNAM:
043723 / 260140,,042676         PUSHJ    P,INLMES             ;
043726 / 332103,,777777         SKIPE TAC1,777777(P)          ;;IS DEVDAT = 0?
043727 / 200102,,000000          MOVE TAC1,      (TAC1)       ;;NO, GET DEVICE NAME
                       ;ROUTINE TO PRINT SIXBIT NAME
                       ;CALL	MOVE DAT,ASCII OUTPUT BYTE POINTER
                       ;	MOVE TAC1,NAME
                       ;	PUSHJ PDP,PRNAME
                       PRNAME:
043730 / 322100,,037403         JUMPE TAC1,037403             ;;DONE IF NULL
043731 / 201040,,000000         MOVEI  TAC,                   ;
043732 / 246040,,000006          LSHC  TAC,000006             ;;SHIFT IN NEXT CHAR.
043733 / 201401,,000040         MOVEI  TEM,    40(TAC)        ;
043734 / 256000,,042674           XCT      042674             ;;TYPE OUT IN ASCII.
043735 / 254000,,043730          JRST      PRNAME             ;
                       ; ROUTINE TO TYPE OUT DISASTER BUFFER ON CTY AT CLOCK LEVEL
                       ; RECCOMMENDED CALLING . . .
                       ;	MOVE TAC,DISPTR
                       ;	CAME TAC,DISOPT
                       ;	PUSHJ P,DISOUT
                       ; PUTS AS MUCH TEXT AS IT CAN INTO THE CTY OUTPUT BUFFER AND INITIATES
                       ; CTYTYO.
                       DISOUT:
043736 / 400200,,000000          SETZ    J,                   ;
043737 / 260140,,137613         PUSHJ    P,137613             ;; SET UP DDB AND DAT TO THE CTY
                       DISOU1:
043740 / 200045,,000005          MOVE  TAC,  FCTR(DAT)        ;; HOW FULL IS THE BUFFER?
043741 / 307040,,000001          CAIG  TAC,     1             ;
043742 / 254000,,143040          JRST      143040             ;; FULL TO THE GILLS. INITIATE TYPEOUT
043743 / 134400,,036034          ILDB  TEM,036034             ;; THERE IS ROOM. PICK UP A CHARACTER.
043744 / 350000,,036036           AOS      DISCTR             ;
043745 / 256000,,042674           XCT         TYO             ;
043746 / 200040,,036034          MOVE  TAC,DISOPT             ;
043747 / 200640,,000001          MOVE  AC1,   TAC             ;
043750 / 133000,,000015           IBP         AC1             ;
043751 / 553000,,000015         HRRZS         AC1             ;
043752 / 305640,,036033         CAIGE  AC1,036033             ;
043753 / 254000,,043756          JRST      DISOU2             ;
043754 / 201640,,035432         MOVEI  AC1,035432             ;; WRAP POINTER AROUND
043755 / 542640,,036034          HRRM  AC1,DISOPT             ;
                       DISOU2:
043756 / 312040,,036033          CAME  TAC,DISPTR             ;
043757 / 254000,,043740          JRST      043740             ;; BUFFER NOT EMPTY. TRY TO STUFF ANOTHER CHARACTER IN.
043760 / 254000,,143040          JRST      143040             ;; EMPTY. INITIATE TYPEOUT.
                       ; ROUTINE TO CALL WITH PIS OFF TO FINISH FLUSHING
                       ; DISASTER BUFFER. SERVOS CTY ALL BY ITSELF
                       ; CALLING . . .
                       ;	PUSHJ P,DISFLUSH
                       DISFLU:
043761 / 700340,,000040         CONSO  APR,000040             ;;ARE WE THE PDP-6
043762 / 263140,,000000          POPJ    P,                   ;;YES, NOTHING TO FLUSH.
043763 / 712240,,000015          CONI  CTY,   AC1             ;
043764 / 506643,,000000          HRLM  AC1,      (P)          ;;SAVE PI CHANNEL
043765 / 712200,,000000          CONO  CTY,                   ;;AND SET TO 0 SO WE WON'T INT
043766 / 201640,,100000         MOVEI  AC1,100000             ;; WAIT FOR THE CTY TO COOL OFF
043767 / 367640,,043767          SOJG  AC1,043767             ;
043770 / 336240,,032467         SKIPN  DAT,032467             ;;IS THE CTY THERE AT ALL?
043771 / 254000,,044001          JRST      044001             ;;NO, SKIP ALL THIS CRAP
043772 / 271240,,000025          ADDI  DAT,000025             ;;POINT TO OUTPUT BUFFER
                       DISFL3:
043773 / 200045,,000003          MOVE  TAC,  TAKR(DAT)        ;
043774 / 316045,,000001          CAMN  TAC,  PUTR(DAT)        ;
043775 / 254000,,044001          JRST      044001             ;; OUTPUT BUFFER EMPTY, EXIT
043776 / 260140,,140755         PUSHJ    P,140755             ;; PICK UP A CHARACTER FROM THE OUTPUT BUFFER
043777 / 260140,,044265         PUSHJ    P,044265             ;; AND TYPE IT OUT
044000 / 254000,,043773          JRST      DISFL3             ;
                       DISFL1:
044001 / 200400,,036034          MOVE  TEM,DISOPT             ;
044002 / 333000,,036036        SKIPLE      036036             ;; MAY BE FULL
                       ; (BYTE POINTERS THE SAME WHEN FULL TOO)
044003 / 312400,,036033          CAME  TEM,036033             ;; NOW IF THE SAME, THEN EMPTY
044004 / 304000,,000000          CAIA                         ;
044005 / 254000,,044020          JRST      044020             ;;SO LEAVE
044006 / 133000,,000010           IBP         TEM             ;
044007 / 553000,,000010         HRRZS         TEM             ;
044010 / 305400,,036033         CAIGE  TEM,036033             ;
044011 / 254000,,044014          JRST      DISFL4             ;
044012 / 201400,,035432         MOVEI  TEM,035432             ;
044013 / 542400,,036034          HRRM  TEM,DISOPT             ;
                       DISFL4:
044014 / 134400,,036034          ILDB  TEM,036034             ;; PICK UP A CHARACTER
044015 / 350000,,036036           AOS      DISCTR             ;
044016 / 260140,,044265         PUSHJ    P,044265             ;; TYPE OUT ON CTY
044017 / 254000,,044001          JRST      DISFL1             ;
                       DISFLX:
044020 / 554643,,000000          HLRZ  AC1,      (P)          ;
044021 / 405640,,000007          ANDI  AC1,000007             ;;GET BACK OLD PI CHAN
044022 / 712215,,000000          CONO  CTY,      (AC1)        ;
044023 / 263140,,000000          POPJ    P,                   ;
                       ; THIS ROUTINE TYPES ONE CHARACTER IN TEM THROUGH
                       ; THE DISASTER BUFFER.
                       ; CALLING . . .
                       ;	MOVE TEM,<CHARACTER>
                       ;	PUSHJ P,DISTYO
                       DISTYO:
044024 / 700340,,000040         CONSO  APR,000040             ;;ARE WE THE PDP-10
044025 / 254000,,044265          JRST      044265             ;;NO, JRST HANG THINGS UP WHILE WE TYPE
044026 / 333000,,036036        SKIPLE      036036             ;; ANY ROOM IN BUFFER?
044027 / 254000,,044040          JRST      044040             ;; YES, JUST PLUNK THE CHARACTER IN
044030 / 336000,,036035         SKIPN      036035             ;; ARE PIS OFF YET?
044031 / 700600,,000400          CONO   PI,000400             ;; NO, TURN THEM OFF
044032 / 261140,,000010          PUSH    P,   TEM             ;
044033 / 260140,,043761         PUSHJ    P,043761             ;; EMPTY THE DISASTER BUFFER
044034 / 262140,,000010           POP    P,   TEM             ;
044035 / 336000,,036035         SKIPN      036035             ;
044036 / 700600,,000200          CONO   PI,  PION             ;
044037 / 254000,,044024          JRST      DISTYO             ;
                       DISTY1:
044040 / 371000,,036036          SOSL      DISCTR             ;
044041 / 254000,,044044          JRST      DISTY2             ;
044042 / 350000,,036036           AOS      DISCTR             ;
044043 / 254000,,044024          JRST      DISTYO             ;
                       DISTY2:
044044 / 700600,,000400          CONO   PI, PIOFF             ;
044045 / 136400,,036033          IDPB  TEM,DISPTR             ;
044046 / 700600,,000200          CONO   PI,  PION             ;
044047 / 200640,,036033          MOVE  AC1,DISPTR             ;
044050 / 133000,,000015           IBP         AC1             ;
044051 / 553000,,000015         HRRZS         AC1             ;
044052 / 305640,,036033         CAIGE  AC1,036033             ;
044053 / 263140,,000000          POPJ    P,                   ;
044054 / 700600,,000400          CONO   PI, PIOFF             ;
044055 / 200640,,036033          MOVE  AC1,DISPTR             ;
044056 / 133000,,000015           IBP         AC1             ;
044057 / 553000,,000015         HRRZS         AC1             ;
044060 / 305640,,036033         CAIGE  AC1,036033             ;
044061 / 254000,,044064          JRST      DISTY3             ;
044062 / 201640,,035432         MOVEI  AC1,035432             ;
044063 / 542640,,036033          HRRM  AC1,DISPTR             ;
                       DISTY3:
044064 / 700600,,000200          CONO   PI,  PION             ;
044065 / 263140,,000000          POPJ    P,                   ;
                       ;DISMES, DISCRLF, DISTAB, DISJOB
                       ; ROUTINE TO DO A DISASTER OUTPUT OF A STRING
                       ; CALL BY:
                       ;	PUSHJ P,DISMES
                       ;	ASCIZ /<STRING>/
                       DISMES:
044066 / 262140,,000015           POP    P,000015             ;;GET RETURN ADDRESS
044067 / 440700,,000000 POINT 7,00000000,                     ;
044067 / 505640,,440700          HRLI  AC1,      (<POINT 7,0>)  ;
                       DISME1:
044070 / 134400,,000015          ILDB  TEM,   AC1             ;
044071 / 322415,,000001         JUMPE  TEM,     1(AC1)        ;; END OF STRING. RETURN
044072 / 261140,,000015          PUSH    P,000015             ;;KEEP THIS SAFE FROM TIGERS
044073 / 260140,,044024         PUSHJ    P,DISTYO             ;
044074 / 262140,,000015           POP    P,   AC1             ;
044075 / 254000,,044070          JRST      DISME1             ;
                       DISCRL:
044076 / 201400,,000015         MOVEI  TEM,    15             ;
044077 / 260140,,044024         PUSHJ    P,DISTYO             ;
044100 / 201400,,000012         MOVEI  TEM,    12             ;
044101 / 254000,,044024          JRST      DISTYO             ;
                       DISTAB:
044102 / 201400,,000011         MOVEI  TEM,000011             ;;LOAD TAB
044103 / 254000,,044024          JRST      DISTYO             ;
                       DISJOB:
                       ;J IS PRESERVED.
044104 / 261140,,000004          PUSH    P,000004             ;;SAVE JOB NUMBER
044105 / 200104,,030142          MOVE TAC1,JOBNAM(J)          ;;GET THE JOBNAME
044106 / 260140,,044246         PUSHJ    P,DISSIX             ;
044107 / 201400,,000050         MOVEI  TEM,   050             ;;;"("
044110 / 260140,,044024         PUSHJ    P,DISTYO             ;
044111 / 200043,,000000          MOVE  TAC,      (P)          ;
044112 / 260140,,044230         PUSHJ    P,044230             ;;TYPE JOB NUMBER IN DECIMAL WITH DECIMAL POINT
044113 / 201400,,000051         MOVEI  TEM,   051             ;;;")"
044114 / 260140,,044024         PUSHJ    P,DISTYO             ;
044115 / 262140,,000004           POP    P,     J             ;
044116 / 263140,,000000          POPJ    P,                   ;
                       ;CALLING SEQUENCE
                       ;	PUSHJ P,DISERR
                       ;	XWD CODE,ADDR
                       ;	XWD CODE,ADDR
                       ;	      .
                       ;	      .
                       ;	      .
                       ;	      .
                       ;	     -1
                       DISER1:
044117 / 350003,,000000           AOS            (P)          ;;NEXT ARG
                       DISERR:
044120 / 335063,,000000        SKIPGE  TAC,@      (P)         ;
044121 / 254000,,037401          JRST      037401             ;;SKIP RETURN
044122 / 240040,,777751           ASH  TAC,777751             ;;ONLY CODE BITS PLEASE
044123 / 201663,,000000         MOVEI  AC1,@      (P)         ;;GET EFFECTIVE ADDRESS
044124 / 201675,,000000         MOVEI  AC1,@      (AC1)       ;;NOW GET IT'S EFFECTIVE ADDRESS
044125 / 303040,,000006         CAILE  TAC,000006             ;
044126 / 254000,,044117          JRST      DISER1             ;
044127 / 254021,,044130          JRST      @ERRTAB(TAC)       ;;DISPATCH
                       ERRTAB:
044130 / 000000,,044137                                       ;
044131 / 000000,,044146                                       ;
044132 / 000000,,044151                                       ;
044133 / 000000,,044154                                       ;
044134 / 000000,,044157                                       ;
044135 / 000000,,044162                                       ;
044136 / 000000,,044165                                       ;
                       ; HERE ARE THE VARIOUS PRINTOUT ROUTINES FOR DISERR
                       ERRSTR:
044137 / 440700,,000000 POINT 7,00000000,                     ;
044137 / 505640,,440700          HRLI  AC1,      (<POINT 7,0>)  ;
                       ERRST1:
044140 / 134400,,000015          ILDB  TEM,   AC1             ;
044141 / 322400,,044117         JUMPE  TEM,044117             ;;QUIT ON ZERO
044142 / 261140,,000015          PUSH    P,   AC1             ;
044143 / 260140,,044024         PUSHJ    P,DISTYO             ;
044144 / 262140,,000015           POP    P,   AC1             ;
044145 / 254000,,044140          JRST      ERRST1             ;
                       ERRCHR:
044146 / 550400,,000015          HRRZ  TEM,   AC1             ;
044147 / 260140,,044024         PUSHJ    P,DISTYO             ;
044150 / 254000,,044117          JRST      DISER1             ;
                       ERROCT:
044151 / 200055,,000000          MOVE  TAC,      (AC1)        ;
044152 / 260140,,044200         PUSHJ    P,DISOCT             ;
044153 / 254000,,044117          JRST      DISER1             ;
                       ERRLOC:
044154 / 200055,,000000          MOVE  TAC,      (AC1)        ;
044155 / 260140,,044170         PUSHJ    P,DISLOC             ;
044156 / 254000,,044117          JRST      DISER1             ;
                       ERRDEC:
044157 / 200055,,000000          MOVE  TAC,      (AC1)        ;
044160 / 260140,,044233         PUSHJ    P,DISDEC             ;
044161 / 254000,,044117          JRST      DISER1             ;
                       ERRSIX:
044162 / 200115,,000000          MOVE TAC1,      (AC1)        ;
044163 / 260140,,044246         PUSHJ    P,DISSIX             ;
044164 / 254000,,044117          JRST      DISER1             ;
                       ERRDCP:
044165 / 200055,,000000          MOVE  TAC,      (AC1)        ;
044166 / 260140,,044230         PUSHJ    P,044230             ;;DECIMAL WITH PERIOD
044167 / 254000,,044117          JRST      DISER1             ;
                       ;DISLOC PRINTS OUT 6 DIGIT OCTAL LOCATION WITHOUT LEADING ZEROES
                       ;CALL	MOVE TAC,<LOCATION>
                       ;	PUSHJ P,DISLOC
                       DISLOC:
151704 / 000000,,000006                                       ;
044170 / 261140,,151704          PUSH    P,151704             ;
044171 / 514100,,000001          HRLZ TAC1,   TAC             ;
                       DISLC1:
044172 / 603100,,700000          TLNE TAC1,700000             ;;DO WE HAVE A DIGIT YET?
044173 / 254000,,044202          JRST      044202             ;;YES, PRINT ADDRESS
044174 / 242100,,000003           LSH TAC1,000003             ;;SHIFT LEFT 3 BITS
044175 / 373003,,000000         SOSLE            (P)          ;
044176 / 254000,,044172          JRST      DISLC1             ;
044177 / 254000,,044202          JRST      044202             ;;PRINT ONE ZERO.
                       ; OCTAL PRINT ROUTINE FOR DISASTER MESSAGES
                       ; CALLING . . .
                       ;	MOVE TAC,<NUMBER>
                       ;	PUSHJ P,DISOCT
                       DISOCT:
151707 / 000000,,000014                                       ;
044200 / 261140,,151707          PUSH    P,151707             ;
044201 / 200100,,000001          MOVE TAC1,   TAC             ;
                       DSOCT2:
044202 / 400040,,000000          SETZ  TAC,                   ;
044203 / 246040,,000003          LSHC  TAC,     3             ;
044204 / 201401,,000060         MOVEI  TEM,000060(TAC)        ;
044205 / 261140,,000002          PUSH    P,  TAC1             ;
044206 / 260140,,044024         PUSHJ    P,DISTYO             ;
044207 / 262140,,000002           POP    P,  TAC1             ;
044210 / 373003,,000000         SOSLE            (P)          ;
044211 / 254000,,044202          JRST      DSOCT2             ;
044212 / 254000,,037376          JRST       TPOPJ             ;
                       ;ANOTHER OCTAL PRINT ROUTINE. PRINTS  HALFWORD COMMA COMMA HALFWORD
                       DISOCH:
044213 / 261140,,000001          PUSH    P,000001             ;;SAVE THE ARGUMENT
044214 / 510100,,000001          HLLZ TAC1,000001             ;;GET LEFT SIDE IN LEFT SIDE
151745 / 000000,,044220                                       ;
044215 / 261140,,151745          PUSH    P,151745             ;;"RETURN" ADDRESS
151704 / 000000,,000006                                       ;
044216 / 261140,,151704          PUSH    P,151704             ;;6 CHARACTERS PLEASE
044217 / 254000,,044202          JRST      044202             ;;DO IT
                       DSOCH1:
044220 / 201400,,000054         MOVEI  TEM,000054             ;
044221 / 260140,,044024         PUSHJ    P,DISTYO             ;
044222 / 201400,,000054         MOVEI  TEM,000054             ;
044223 / 260140,,044024         PUSHJ    P,DISTYO             ;
044224 / 262140,,000002           POP    P,  TAC1             ;
044225 / 514100,,000002          HRLZ TAC1,  TAC1             ;
151704 / 000000,,000006                                       ;
044226 / 261140,,151704          PUSH    P,151704             ;
044227 / 254000,,044202          JRST      044202             ;;WRITE IT AND RETURN
                       DISDCP:
044230 / 260140,,044233         PUSHJ    P,DISDEC             ;
044231 / 201400,,000056         MOVEI  TEM,000056             ;
044232 / 254000,,044024          JRST      044024             ;;APPEND . TO DECIMAL NUMBER
                       DISDEC:
044233 / 325040,,044236        JUMPGE  TAC,DISDC1             ;
044234 / 201400,,000055         MOVEI  TEM,000055             ;
044235 / 260140,,044024         PUSHJ    P,DISTYO             ;
                       DISDC1:
044236 / 214040,,000001          MOVM  TAC,   TAC             ;
                       DISNUM:
044237 / 231040,,000012         IDIVI  TAC,000012             ;
044240 / 506103,,000000          HRLM TAC1,      (P)          ;
044241 / 322040,,044243         JUMPE  TAC,044243             ;
044242 / 260140,,044237         PUSHJ    P,DISNUM             ;
044243 / 554043,,000000          HLRZ  TAC,      (P)          ;
044244 / 201401,,000060         MOVEI  TEM,000060(TAC)        ;
044245 / 254000,,044024          JRST      DISTYO             ;
                       ; SIXBIT PRINT ROUTINE FOR DISASTER MESSAGES
                       ; CALLING . . .
                       ;	MOVE TAC1,<WORD>
                       ;	PUSHJ P,DISSIX
                       DISSIX:
044246 / 322100,,037403         JUMPE TAC1, CPOPJ             ;
044247 / 402000,,000001         SETZM         TAC             ;
044250 / 245040,,000006          ROTC  TAC,     6             ;
044251 / 201401,,000040         MOVEI  TEM,000040(TAC)        ;
044252 / 261140,,000002          PUSH    P,  TAC1             ;
044253 / 260140,,044024         PUSHJ    P,DISTYO             ;
044254 / 262140,,000002           POP    P,  TAC1             ;
044255 / 254000,,044246          JRST      DISSIX             ;
                       ; INITIALIZE ROUTINE FOR DISASTER MESSAGES . . .
                       DISINI:
151405 / 000000,,035433                                       ;
151405 / 440700,,035433 POINT 7,00035433,                     ;
044256 / 200040,,151405          MOVE  TAC,151405             ;
044257 / 202040,,036033         MOVEM  TAC,DISPTR             ;
044260 / 202040,,036034         MOVEM  TAC,DISOPT             ;
044261 / 402000,,036035         SETZM      036035             ;
044262 / 201040,,002400         MOVEI  TAC,002400             ;
044263 / 202040,,036036         MOVEM  TAC,DISCTR             ;
044264 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO TYPE ON THE CTY WITH PIS OFF
                       ; CALLING . . .
                       ;	MOVE TEM,<CHARACTER>
                       ;	PUSHJ P,CTYTYO
                       ; CLOBBERS TAC AND SOME OTHERS
                       CTYTYO:
044265 / 712300,,000040         CONSZ  CTY,000040             ;;HAS SOMEONE TYPED SOMETHING?
044266 / 254000,,044304          JRST      CTYTY2             ;
                       CTYTY3:
044267 / 201040,,777777         MOVEI  TAC,777777             ;
044270 / 712300,,000020         CONSZ  CTY,    20             ;
044271 / 367040,,044270          SOJG  TAC,044270             ;
044272 / 712140,,000010         DATAO  CTY,   TEM             ;
044273 / 302400,,000011          CAIE  TEM,000011             ;;WAS THAT A TAB?
044274 / 263140,,000000          POPJ    P,                   ;
044275 / 201400,,000004         MOVEI  TEM,000004             ;;YES, SEND 3 IDLE CHARS.
                       TABWAT:
044276 / 201040,,777777         MOVEI  TAC,777777             ;
044277 / 712300,,000020         CONSZ  CTY,    20             ;
044300 / 367040,,044277          SOJG  TAC,044277             ;
151677 / 000000,,000001                                       ;
044301 / 712140,,151677         DATAO  CTY,151677             ;
044302 / 367400,,044276          SOJG  TEM,TABWAT             ;
044303 / 263140,,000000          POPJ    P,                   ;
                       CTYTY2:
044304 / 712040,,000001         DATAI  CTY,000001             ;;YES, GET IT
044305 / 302040,,000017          CAIE  TAC,000017             ;;IS IT ↑O?
044306 / 254000,,044267          JRST      044267             ;;NO, GO ON
044307 / 700340,,000040         CONSO  APR,000040             ;;YES, ARE WE THE SIX?
044310 / 263140,,000000          POPJ    P,                   ;;YES, IGNORE THIS CHAR.
044311 / 261140,,000005          PUSH    P,000005             ;;SAVE THIS
044312 / 336240,,032467         SKIPN  DAT,032467             ;;IS THERE A CTY DDB
044313 / 254000,,044316          JRST      044316             ;
044314 / 271240,,000025          ADDI  DAT,TTOBUF             ;
044315 / 260140,,141014         PUSHJ    P,141014             ;;CLEAR OUTPUT BUFFER
044316 / 262140,,000005           POP    P,   DAT             ;
044317 / 254000,,044256          JRST      044256             ;;CLEAR DISASTER BUFFER AND POPJ
                       ; ROUTINE TO SHOVE THE TIME AND DATE INTO THE BUFFER
                       DISDAT:
044320 / 201400,,000001         MOVEI  TEM,     1             ;
044321 / 260140,,044024         PUSHJ    P,044024             ;;WARM UP THE CTY
044322 / 200040,,024634          MOVE  TAC,THSDAT             ;
044323 / 231040,,000037         IDIVI  TAC,000037             ;
044324 / 250040,,000002          EXCH  TAC,  TAC1             ;
044325 / 271040,,000001          ADDI  TAC,     1             ;
044326 / 261140,,000002          PUSH    P,  TAC1             ;
044327 / 260140,,044233         PUSHJ    P,DISDEC             ;
044330 / 262140,,000002           POP    P,  TAC1             ;
044331 / 400040,,000000          SETZ  TAC,                   ;
044332 / 235040,,000014          DIVI  TAC,000014             ;
044333 / 250040,,000002          EXCH  TAC,  TAC1             ;
044334 / 261140,,000002          PUSH    P,  TAC1             ;
044335 / 200041,,037621          MOVE  TAC,MONTAB(TAC)        ;
152323 / 000000,,023017                                       ;
152323 / 102500,,023017 POINT 21,00023017,27                  ;
044336 / 137040,,152323           DPB  TAC,152323             ;;WHEW!
151404 / 000000,,023017                                       ;
151404 / 440700,,023017 POINT 7,00023017,                     ;
044337 / 200640,,151404          MOVE  AC1,151404             ;
044340 / 201700,,000005         MOVEI  AC2,     5             ;
                       DISDA1:
044341 / 134400,,000015          ILDB  TEM,   AC1             ;
044342 / 261140,,000015          PUSH    P,   AC1             ;
044343 / 261140,,000016          PUSH    P,   AC2             ;
044344 / 260140,,044024         PUSHJ    P,DISTYO             ;
044345 / 262140,,000016           POP    P,   AC2             ;
044346 / 262140,,000015           POP    P,   AC1             ;
044347 / 367700,,044341          SOJG  AC2,DISDA1             ;
044350 / 262140,,000002           POP    P,  TAC1             ;
044351 / 201042,,000100         MOVEI  TAC,000100(TAC1)       ;
044352 / 260140,,044233         PUSHJ    P,DISDEC             ;
044353 / 201400,,000040         MOVEI  TEM,000040             ;
044354 / 260140,,044024         PUSHJ    P,DISTYO             ;
044355 / 200040,,024633          MOVE  TAC,  TIME             ;
044356 / 231040,,007020         IDIVI  TAC,JIFMIN             ;
044357 / 231040,,000074         IDIVI  TAC,000074             ;
044360 / 221040,,000144         IMULI  TAC,000144             ;
044361 / 270040,,000002           ADD  TAC,  TAC1             ;
044362 / 260140,,044233         PUSHJ    P,DISDEC             ;
044363 / 260140,,044066         PUSHJ    P,DISMES             ;
044365 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO ADVANCE OUTPUT BUFFER AT INTERRUPT LEVEL
                       ;CALL:	PUSHJ PDP,ADVBFE
                       ;	EXIT1		RETURN IF NEXT BUFFER IS EMPTY
                       ;	EXIT2		RETURN IF NEXT BUFFER IS FULL
                       ;CLEARS THE USE BIT (IOUSE:=0) OF THE BUFFER POINTED TO BY THE
                       ;OUTPUT BUFFER ADDRESS (DEVOAD) OF THE CURRENT DEVICE DATA BLOCK
                       ;AND ADVANCES THE BUFFER ADDRESS TO THE NEXT BUFFER IN THE RING.
                       ;UPON RETURN, SKIPS IF THE NEXT BUFFER IS FULL.
                       ;SECOND WORD OF NEXT BUFFER IS ADDRESS CHECKED TO
                       ;MAKE SURE IT IS NOT IN JOB DATA AREA OR ABOVE USER AREA
                       ;THE SECOND WORD OF CURRENT BUFFER WAS CHECKED AT UUO LEVEL
                       ;OR PREVIOUS CALL TO ADVBFE
                       ADVBFE:
044366 / 350000,,036172           AOS      036172             ;;COUNT BUFFER ADVANCE
044367 / 261140,,000017          PUSH    P,   AC3             ;
044370 / 265740,,044414           JSP  AC3,044414             ;;SET UP PROT-RELOC REGISTERS
044371 / 336106,,000010         SKIPN TAC1,DEVOAD(DDB)        ;;PICK UP BUFFER ADDRESS
044372 / 254000,,044444          JRST      044444             ;;NONE THERE, EXIT
044373 / 265740,,044434           JSP  AC3,044434             ;;MAKE SURE THIS IS A LEGAL ADDRESS
152542 / 202002,,777777         MOVEM      777777(TAC1)       ;
044374 / 256040,,152542          XCTR   XW,152542             ;
044375 / 205040,,400000         MOVSI  TAC, IOUSE             ;
151351 / 413042,,000000        ANDCAB  TAC,      (TAC1)       ;
044376 / 256240,,151351          XCTR  XRW,151351             ;
044377 / 602000,,740000          TRNE      740000             ;;ANY ERRORS?
044400 / 254000,,044444          JRST      044444             ;;YES, DO NOT FILL NEXT BUFFER
044401 / 200100,,000001          MOVE TAC1,   TAC             ;
044402 / 265740,,044434           JSP  AC3,044434             ;;ADDRESS CHECK NEXT BUFFER IN RING
044403 / 542106,,000010          HRRM TAC1,DEVOAD(DDB)        ;;OK. PUT IN LATEST FREE BUFFER ADDRESS
044404 / 254000,,044407          JRST      ADVBE2             ;
                       ;ENTER HERE FROM SCNSER TO CHECK IF NEXT BUFFER FULL OF DATA YET
                       ADVBE1:
044405 / 261140,,000017          PUSH    P,   AC3             ;
044406 / 265740,,044414           JSP  AC3, PRSET             ;
                       ADVBE2:
044407 / 336106,,000010         SKIPN TAC1,DEVOAD(DDB)        ;
044410 / 254000,,044444          JRST      ADVXIT             ;
153041 / 331002,,000000         SKIPL            (TAC1)       ;
044411 / 256200,,153041          XCTR   XR,153041             ;
044412 / 254000,,044444          JRST      ADVXIT             ;
044413 / 254000,,044475          JRST      ADVBF1             ;
                       ; ROUTINE TO PUSH CURRENT PR ON STACK AND SET UP NEW PR
                       ; CALLING . . .
                       ;	JSP AC3,PRSET
                       ; RETURNS WITH PR ON STACK.
                       PRSET:
                       ; MAKE XCTR SIMULATION RECURSIVE
044414 / 261140,,000016          PUSH    P,   AC2             ;
044415 / 261140,,000015          PUSH    P,   AC1             ;
044416 / 261140,,000004          PUSH    P,     J             ;
044417 / 261140,,000010          PUSH    P,   TEM             ;
044420 / 261153,,024064          PUSH    P,LASTPR(PID)        ;
044421 / 135200,,037575           LDB    J, PJOBN             ;
044422 / 260140,,072621         PUSHJ    P, GETPR             ;
044423 / 202053,,024064         MOVEM  TAC,LASTPR(PID)        ;
044424 / 700140,,000001         DATAO  APR,   TAC             ;
044425 / 201400,,000114         MOVEI  TEM,000114             ;; SET UP ADDRESS OF JOB DATA AREA
044426 / 554640,,000007          HLRZ  AC1,000007             ;; SET UP BOUNDS OF JOB FOR ADDRESS CHECKING
044427 / 135700,,037600           LDB  AC2, PSEGN             ;
044430 / 322717,,000000         JUMPE  AC2,      (AC3)        ;; NO UPPER SEGMENT, LEAVE
044431 / 554716,,027120          HLRZ  AC2,JBTADR(AC2)        ;; PICK UP ITS SIZE
044432 / 271700,,400000          ADDI  AC2,400000             ;
044433 / 254017,,000000          JRST            (AC3)        ;
                       ; ROUTINE TO ADDRESS CHECK SOMETHING
                       ; CALLING . . .
                       ;	MOVE TAC1,<ADDRESS TO BE CHECKED>
                       ;	MOVE AC1,<LOWER SEGMENT LENGTH>
                       ;	MOVE AC2,<UPPER SEGMENT LENGTH>
                       ;	JSP AC3,ADRCK
                       ; GOES TO ADVXIT IF ERROR
                       ADRCK:
044434 / 303402,,000000         CAILE  TEM,      (TAC1)       ;; ABOVE JOB DATA AREA?
044435 / 254000,,044444          JRST      044444             ;; NO, ERROR
044436 / 301642,,000000          CAIL  AC1,      (TAC1)       ;; INSIDE LOWER?
044437 / 254017,,000000          JRST            (AC3)        ;; YES
044440 / 602100,,400000          TRNE TAC1,400000             ;; IS IT UPPER SEGMENT ADDRESS?
044441 / 305642,,000000         CAIGE  AC1,      (TAC1)       ;; YES, IS IT THEN IN THE UPPER SEGMENT?
044442 / 254000,,044444          JRST      044444             ;; NO, ERROR
044443 / 254017,,000000          JRST            (AC3)        ;; YES, WIN
                       ADVXIT:
044444 / 262153,,024064           POP    P,LASTPR(PID)        ;; POP PR OFF STACK
044445 / 700153,,024064         DATAO  APR,LASTPR(PID)        ;; RESTORE PR
044446 / 262140,,000010           POP    P,   TEM             ;
044447 / 262140,,000004           POP    P,     J             ;
044450 / 262140,,000015           POP    P,   AC1             ;
044451 / 262140,,000016           POP    P,   AC2             ;
                       ;XCTR SIMULATION
044452 / 262140,,000017           POP    P,   AC3             ;
044453 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO ADVANCE INPUT BUFFER AT INTERRUPT LEVEL
                       ;CALL:	PUSHJ PDP,DEVBFF
                       ;	EXIT1		RETURN IF NEXT BUFFER IS FULL
                       ;	EXIT2		RETURN IF NEXT BUFFER IS EMPTY
                       ;SETS THE USE BIT (IOUSE:=1) OF THE BUFFER POINTED TO BY THE
                       ;INPUT BUFFER ADDRESS (DEVIAD) OF THE CURRENT DEVICE DATA BLOCK
                       ;AND ADVANCES THE BUFFER ADDRESS TO THE NEXT BUFFER IN THE RING.
                       ;UPON RETURN, SKIPS IF THE NEXT BUFFER IS EMPTY.
                       ;SECOND WORD OF NEXT BUFFER IS ADDRESS CHECKED TO MAKE SURE
                       ;IT IS NOT IN IO PROTECTED PART OF JOB DATA AREA OR ABOVE
                       ;USER AREA
                       ;ALSO END OF BUFFER IS CHECKED TO MAKE SURE NOT ABOVE JOB AREA
                       ADVBFF:
044454 / 350000,,036173           AOS       NABFF             ;
044455 / 261140,,000017          PUSH    P,   AC3             ;
044456 / 265740,,044414           JSP  AC3, PRSET             ;
044457 / 336106,,000007         SKIPN TAC1,DEVIAD(DDB)        ;;IS THERE A BUFFER ADDRESS THERE?
044460 / 254000,,044444          JRST      044444             ;;NO, ERROR EXIT
044461 / 265740,,044434           JSP  AC3,044434             ;;YES, IS IT LEGAL
152542 / 202002,,777777         MOVEM      777777(TAC1)       ;
044462 / 256040,,152542          XCTR   XW,152542             ;
044463 / 205040,,400000         MOVSI  TAC, IOUSE             ;
151363 / 437042,,000000          IORB  TAC,      (TAC1)       ;
044464 / 256240,,151363          XCTR  XRW,151363             ;
044465 / 200100,,000001          MOVE TAC1,   TAC             ;
044466 / 265740,,044434           JSP  AC3, ADRCK             ;
044467 / 542106,,000007          HRRM TAC1,DEVIAD(DDB)        ;
153074 / 335102,,000000        SKIPGE TAC1,      (TAC1)       ;
044470 / 256200,,153074          XCTR   XR,153074             ;
044471 / 254000,,044444          JRST      ADVXIT             ;
044472 / 557000,,000002         HLRZS        TAC1             ;
044473 / 270100,,000001           ADD TAC1,000001             ;;ADDRESS CHECK END OF BUFFER TOO
044474 / 265740,,044434           JSP  AC3, ADRCK             ;
                       ADVBF1:
044475 / 335044,,026114        SKIPGE  TAC,JBTSTS(J)          ;;IF JOB IS NOT RUNNING . . .
044476 / 603040,,206000          TLNE  TAC,206000             ;;OR SWUFFLING OR SCHWAPPING . . .
044477 / 254000,,044444          JRST      044444             ;;DO NOT ALLOW THE DEVICE TO GO ON.
044500 / 606000,,740040          TRNN      740040             ;
044501 / 350003,,777772           AOS      777772(P)          ;
                       ;NO ERRORS, GIVE SUCCESS RETURN 
                       ;2 MORE FOR 160 AND @161
044502 / 254000,,044444          JRST      044444             ;;LASTPR, TEM, J, AC1, AC2, AND AC3 ARE ON STACK
                       ;ROUTINE TO ADDRESS CHECK AT UUO LEVEL ONLY
                       ;CALL	HRRZ AC1,REL ADR.
                       ;	PUSHJ PDP,UADCK1
                       ;	NEVER RETURNS IF ERROR,STOPS JOB AND PRINTS ERROR
                       ;BAD ADR. IF IN LOC 20-JOBPFI IN JOB DATA AREA
                       ;OR IF ABOVE PROTECTION(USRREL) FOR CURRENT JOB
                       UUOACK:
044503 / 550640,,000014          HRRZ  AC1,000014             ;;CHECK UUO.
                       UADCK1:
044504 / 606640,,777760          TRNN  AC1,777760             ;; IN USER ACS?
044505 / 263140,,000000          POPJ  PDP,                   ;;YES, ADDRESS IS OK
                       ;ROUTINE TO ADDRESS CHECK AT UUO LEVEL ONLY
                       ;USER ACS ARE ALSO ILLEGAL(ADR IS FOR IO USE LATER AT
                       ;INTERRUPT LEVEL)
                       ;CALL:	HRRZ AC1,REL.ADR.
                       ;	PUSHJ PDP,UADRCK
                       ;	NEVER RETURN IF ERROR
                       UADRCK:
044506 / 200213,,024061          MOVE    J,   JOB(PID)        ;
044507 / 303640,,000114         CAILE  AC1,000114             ;;IS ADR. IN IO PROT. PART OF JOB DATA AREA?
044510 / 254000,,044517          JRST      044517             ;;NO
044511 / 261140,,000015          PUSH    P,000015             ;; SAVE OUR ACCUMULATOR
044512 / 200644,,026620          MOVE  AC1, UUOPC(ITEM)       ;
044513 / 603640,,010000          TLNE  AC1,USRMOD             ;
044514 / 254000,,043217          JRST      043217             ;; EXEC MODE IS GOD.
044515 / 262140,,000015           POP    P,   AC1             ;
044516 / 263140,,000000          POPJ    P,                   ;
                       UADCK2:
044517 / 317653,,024065          CAMG  AC1,USRREL(PID)        ;;NO, IS IT ABOVE PROTECT.?
044520 / 263140,,000000          POPJ  PDP,                   ;;NO
044521 / 606640,,400000          TRNN  AC1,400000             ;; IS IT IN UPPER SEGMENT?
044522 / 254000,,043217          JRST      043217             ;; NO, MUST BE ERROR
044523 / 261140,,000016          PUSH    P,000016             ;; GET US AN ACCUMULATOR
044524 / 135700,,037600           LDB  AC2,037600             ;; PICK UP SEGMENT NUMBER
044525 / 322700,,043217         JUMPE  AC2,043217             ;; NONE IS ERROR
044526 / 554716,,027120          HLRZ  AC2,JBTADR(AC2)        ;; PICK UP REL. ADR.
044527 / 303656,,400000         CAILE  AC1,400000(AC2)        ;
044530 / 254000,,043217          JRST      UADRER             ;
044531 / 262140,,000016           POP    P,   AC2             ;
044532 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO ADDRESS CHECK AT ANY LEVEL
                       ;CALL:	MOVE PROG,[XWD PROT.,RELOC,]
                       ;	HRRZ TAC,REL. ADR.
                       ;	PUSHJ PDP,IADRCK
                       ;	ERROR RETURN(ERROR MESSAGE NOT PRINTED,JOB NOT STOPPED)
                       ;	OK RETURN
                       IADRCK:
044533 / 204100,,000007          MOVS TAC1,000007             ;; GET PROTECTION TO RH
044534 / 303040,,000114         CAILE  TAC,000114             ;;ADR. ABOVE PROT. PART OF JOB DATA AREA?
044535 / 303042,,000000         CAILE  TAC,      (TAC1)       ;;YES, BELOW OR EQUAL TO PROTECT.?
044536 / 263140,,000000          POPJ  PDP,                   ;;NO
044537 / 254000,,037401          JRST      037401             ;;YES, SKIP RETURN
                       ;ROUTINE TO CHECK VALIDITY OF A DUMP MODE COMMAND LIST
                       ;WHICH IS:
                       ;A LIST OF 0 OR MORE IOWD FORMAT WORDS
                       ;   TERMINATED BY A GOTO WORD(LH=0)
                       ;  WHICH POINTS TO ANOTHER LIST OF 0 OR MORE IOWD FORMAT WORDS ETC.
                       ;   UNTIL A GOTO WORD IS ENTIRELY ZERO
                       ;SINCE MONITOR DOES NOT RESCHEDULE WHEN IN EXEC MODE
                       ;A MAXIMUM LIST OF 100 IS IMPOSED
                       ;CALL:	MOVE UUO,[XWD PROG,REL. ADR. OF FIRST COMMAND]
                       ;	PUSHJ PDP,COMCHK
                       ;	ADDRESS CHECK RETURN(ERROR ROUTINE IS NOT CALLED)
                       ;	OK RETURN, SUM OF LH OF IOWDS IN DAT
                       ;		ADDRESS OF FIRST IOWD (LH NOT 0) IN UUO
                       COMCHK:
044540 / 261140,,000014          PUSH  PDP,000014             ;;SAVE POINTER TO LIST
044541 / 261140,,000016          PUSH  PDP,   AC2             ;
044542 / 261140,,000017          PUSH  PDP,000017             ;;JS
044543 / 201640,,000114         MOVEI  AC1,000114             ;;HIGHEST IO PROTECTED LOC. IN JOB DATA AREA
044544 / 200704,,026620          MOVE  AC2, UUOPC(ITEM)       ;
044545 / 607700,,010000          TLNN  AC2,010000             ;; IS THIS A MONITOR CALL
044546 / 201640,,000073         MOVEI  AC1,000073             ;;YES, HIGHEST LOC. NOT WRITTEN BY SAVE
044547 / 403240,,000016         SETZB  DAT,000016             ;;CLEAR WORD COUNT AND ADDRESS OF FIRST IOWD
044550 / 201200,,000100         MOVEI ITEM,000100             ;;ONLY 100 LISTS
044551 / 254000,,044560          JRST      COMCK1             ;
                       COMCK0:
044552 / 540600,,000002           HRR  UUO,000002             ;;CHANGE COMMAND LIST POINTER ON GO TO WORD
044553 / 302640,,000114          CAIE  AC1,JOBPFI             ;
044554 / 254000,,044560          JRST      044560             ;;JS
044555 / 550040,,000014          HRRZ  TAC,000014             ;;CHECK JUMP ADDRESS
044556 / 260140,,044533         PUSHJ  PDP,IADRCK             ;
044557 / 254000,,044605          JRST      044605             ;;ERROR.
                       COMCK1:
044560 / 363200,,044605         SOJLE ITEM,044605             ;;EXCEEDED 100 YET?
044561 / 336120,,000014         SKIPN TAC1,@000014            ;;NO. GET NEXT IOWD. END OF LIST?
044562 / 254000,,044600          JRST      044600             ;;YES
044563 / 607100,,777777          TLNN TAC1,777777             ;;IS IT A GO TO WORD?
044564 / 254000,,044552          JRST      044552             ;;YES
044565 / 564740,,000002          HLRO  AC3,000002             ;;NO. SAVE NEGATIVE WORD COUNT ;JS
044566 / 553000,,000002         HRRZS      000002             ;;GET LOWEST ADDRESS-1
044567 / 315100,,000015         CAMGE TAC1,000015             ;;IS IT GREATER THAN LOC. PROTECTED
                       ;FROM IO IN JOB DATA AREA?
044570 / 254000,,044605          JRST      044605             ;;NO. ERROR RETURN
044571 / 274100,,000017           SUB TAC1,000017             ;;YES. COMPUTE LAST LOC.	;JS
044572 / 313113,,024065         CAMLE TAC1,USRREL(PID)        ;;IS LAST LOC. IN BOUNDS?
044573 / 254000,,044605          JRST      044605             ;;NO. ERROR RETURN
044574 / 274240,,000017           SUB  DAT,000017             ;;YES. ACCUMULATE NEG. WORD COUNT ;JS
044575 / 336000,,000016         SKIPN      000016             ;;IS THIS THE FIRST IOWD?
044576 / 200700,,000014          MOVE  AC2,000014             ;;YES. SAVE ADDRESS IN AC2
044577 / 344600,,044560          AOJA  UUO,044560             ;;GO GET NEXT IOWD
                       COMCK2:
044600 / 332000,,000016         SKIPE      000016             ;;ARE THERE ANY IOWDS WITH LH NOT 0?
044601 / 200600,,000016          MOVE  UUO,000016             ;;YES, POINT UUO TO FIRST SUCH IOWD.
                       ;OTHERWISE, UUO POINTS TO A ZERO.
044602 / 262140,,000017           POP  PDP,000017             ;;JS
044603 / 262140,,000016           POP  PDP,   AC2             ;
044604 / 254000,,037375          JRST      037375             ;;REMOVE SAVED UUO AND SKIP RETURN
                       COMCKE:
044605 / 262140,,000017           POP  PDP,000017             ;;JS
044606 / 262140,,000016           POP  PDP,   AC2             ;
044607 / 262140,,000014           POP  PDP,000014             ;;RESTORE ORIGINAL UUO
044610 / 263140,,000000          POPJ  PDP,                   ;;ERROR RETURN
                       ;ASSASG	ASSIGN DEVICE IF UNASSIGNED
                       ;CALL:	MOVE	J, JOB NUMBER
                       ;	MOVE	DDB, ADDRESS OF DDB
                       ;	MOVEI	TAC1, EITHER ASSPRG OR ASSCON
                       ;	PUSHJ	P, ASSASG
                       ;	CAN'T	ASSIGN RETURN
                       ;	DEVICE ASSIGNED RETURN
                       ASSASG:
044611 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
044612 / 603040,,000001          TLNE  TAC,000001             ;;LOCAL USER?
044613 / 254000,,044617          JRST      044617             ;;YES. BYPASS TEST
044614 / 200046,,777777          MOVE  TAC,DEVCMR(DDB)        ;
044615 / 603040,,040000          TLNE  TAC,040000             ;;REQUIRES LOCAL USER STATUS?
044616 / 263140,,000000          POPJ    P,                   ;;YES.  FAIL.
                       ASSAS3:
044617 / 200046,,777777          MOVE  TAC,DEVCMR(DDB)        ;
044620 / 607040,,100000          TLNN  TAC,100000             ;;SHARABLE DEV?
044621 / 254000,,044625          JRST      044625             ;;NO
044622 / 550046,,000003          HRRZ  TAC,DEVSER(DDB)        ;
044623 / 260141,,777775         PUSHJ    P,DGETDD(TAC)        ;;YES - MAKE A NEW DDB
044624 / 254000,,044636          JRST      ASSAS0             ;
                       ASSAS2:
044625 / 135040,,037575           LDB  TAC, PJOBN             ;
044626 / 302044,,000000          CAIE  TAC,      (J)          ;;IS THIS DDB OURS?
044627 / 254000,,044632          JRST      ASSAS1             ;
                       ;	MOVE TAC,TAC1
                       ;	ANDI TAC,ASSPRG
                       ;	TDNN TAC,DEVMOD(DDB)		;ARE WE INITING AN ALREADY INITED DEVICE?
044630 / 254000,,044636          JRST      044636             ;;NO
044631 / 263140,,000000          POPJ    P,                   ;;YES, LOSE
                       ASSAS1:
152200 / 020000,,600000                                       ;
044632 / 200040,,152200          MOVE  TAC,152200             ;
044633 / 700600,,001004          CONO   PI,001004             ;;TURN SCANNER OFF
044634 / 612046,,000004          TDNE  TAC,DEVMOD(DDB)        ;;ONE LAST CHECK
044635 / 254000,,135214          JRST      135214             ;;OOPS - EATEN AWAY FROM UNDER US
                       ASSAS0:
044636 / 137200,,037575           DPB    J,037575             ;;NO, STORE JOB NUMBER
044637 / 436106,,000004          IORM TAC1,DEVMOD(DDB)        ;;SET ONE OF ASSIGN BITS
044640 / 205040,,000010         MOVSI  TAC, DVTTY             ;
044641 / 612046,,000004          TDNE  TAC,DEVMOD(DDB)        ;
044642 / 254000,,044645          JRST      044645             ;;JUMP IF ASSIGNING A TTY
                       ASSASZ:
044643 / 700600,,002004          CONO   PI,002004             ;;TURN SCANNER CHAN. BACK ON
044644 / 254000,,037401          JRST      CPOPJ1             ;
                       ASSAST:
044645 / 261140,,000015          PUSH    P,   AC1             ;
044646 / 135040,,037577           LDB  TAC, PUNIT             ;
044647 / 335001,,032347        SKIPGE      TTYTAB(TAC)        ;;SKIP IF COMBIT IS NOT SET
044650 / 370000,,026105           SOS      COMCNT             ;
044651 / 205640,,600000         MOVSI  AC1,600000             ;
044652 / 412641,,032347        ANDCAM  AC1,TTYTAB(TAC)        ;
044653 / 262140,,000015           POP    P,   AC1             ;
044654 / 254000,,044643          JRST      ASSASZ             ;
                       ;ROUTINE TO SEARCH FOR A DEVICE
                       ;CALL:	HRR ITEM,JOB NUMBER
                       ;	MOVE TAC,[SIXBIT .DEVICE NAME.]
                       ;	PUSHJ PDP, DEVSRC
                       ;	NOT FOUND
                       ;	FOUND
                       FNDDDB:
044655 / 603040,,770000          TLNE  TAC,770000             ;;IS IT NAME OR #?
044656 / 254000,,044663          JRST      DEVSRC             ;
044657 / 317053,,024066          CAMG  TAC,USRHCU(PID)        ;;LEGAL CHANNEL?
044660 / 336301,,024071         SKIPN  DDB,USRJDA(TAC)        ;;GET DDB POINTER
044661 / 263140,,000000          POPJ    P,                   ;;LOSE
044662 / 254000,,037401          JRST      CPOPJ1             ;
                       DEVSRC:
044663 / 205300,,010000         MOVSI DEVDAT,010000             ;;IS JOB LOGGED IN?
044664 / 612304,,026114          TDNE DEVDAT,JBTSTS(J)          ;
                       ;DO NOT SEARCH LOGICAL NAMES IF
                       ;FETCHING "LOGOUT" FROM "SYS".
044665 / 260140,,044670         PUSHJ  PDP,044670             ;;SEARCH LOGICAL NAMES FIRST
044666 / 254000,,044701          JRST      044701             ;;NOT FOUND, SEARCH PHYSICAL NAMES
044667 / 254000,,037401          JRST      037401             ;;FOUND
                       ;SEARCH LOGICAL NAMES
                       DEVLG:
044670 / 554300,,000610          HLRZ DEVDAT,000610             ;;BEGINNING OF DDB CHAIN
                       DEVLP0:
044671 / 312046,,000005          CAME  TAC,DEVLOG(DEVDAT)     ;;COMAPRE WITH LOGICAL NAME
044672 / 254000,,044676          JRST      044676             ;;NO MATCH
044673 / 135100,,037575           LDB TAC1,037575             ;;DOES THE LOGICAL NAME BELONG TO THIS JOB?
044674 / 316100,,000004          CAMN TAC1,  ITEM             ;
044675 / 326040,,037401         JUMPN  TAC,037401             ;;YES, GIVE SUCCESSFUL RET. IF NAME NOT 0
                       DEV0:
044676 / 554306,,000003          HLRZ DEVDAT,DEVSER(DEVDAT)     ;
                       ;NO, KEEP LOOKING
044677 / 326300,,044671         JUMPN DEVDAT,DEVLP0             ;
044700 / 263140,,000000          POPJ  PDP,                   ;;FINISHED AND NOT FOUND
                       ;SEARCH PHYSICAL NAMES
                       DEVPHY:
044701 / 316040,,151540          CAMN  TAC,151540             ;; IS IT "OPR"?
044702 / 200040,,037564          MOVE  TAC,037564             ;;YES, CHANGE TO OPERATOR'S TTY
044703 / 316040,,151556          CAMN  TAC,151556             ;;IS IT "SYS"?
044704 / 334040,,037572         SKIPA  TAC,037572             ;;YES, CHANGE TO SYSTEM TAPE DEVICE NAME
044705 / 634100,,000002          TDZA TAC1,000002             ;;NO, CLEAR SYSTEM TAPE FLAG
044706 / 201100,,000100         MOVEI TAC1,000100             ;;YES, SET SYSTEM TAPE FLAG
044707 / 554300,,000610          HLRZ DEVDAT,000610             ;;SEARCH DEVICE DATA BLOCKS
                       DEVLP1:
044710 / 661302,,000000           TLO DEVDAT,      (TAC1)       ;;SET SYSTEM TAPE BIT IF SEARCHING FOR SYS
044711 / 316046,,000000          CAMN  TAC,      (DEVDAT)     ;;MATCH OF PHYSICAL NAME?
044712 / 326040,,037401         JUMPN  TAC,037401             ;;YES, GIVE OK RET. IF NAME IS NOT 0
                       DEVLP2:
044713 / 554306,,000003          HLRZ DEVDAT,DEVSER(DEVDAT)     ;
044714 / 326300,,044710         JUMPN DEVDAT,DEVLP1             ;
044715 / 312040,,151561          CAME  TAC,151561             ;;IS THIS PUBLIC LOGICAL NAME TTY?
044716 / 254000,,044723          JRST      044723             ;;SEE IF IT'S A TTY.
044717 / 261140,,000005          PUSH  PDP,000005             ;;SAVE OUTPUT BYTE POINTER(TTY) OR INIT. ARG. ADR.
044720 / 260140,,137613         PUSHJ  PDP,137613             ;;YES, FIND TTY JOB IS ATTACHED TO
044721 / 262140,,000005           POP  PDP,000005             ;;RESTORE
044722 / 254000,,037401          JRST      037401             ;;AND GIVE SUCCESSFUL RETURN
                       DEVLP3:
044723 / 261140,,000001          PUSH    P,000001             ;;SAVE DEVICE NAME IN CASE NOT FOUND
044724 / 261140,,000005          PUSH    P,000005             ;;AND THIS IN CASE IT IS
044725 / 260140,,140062         PUSHJ    P,140062             ;;SEE IF TTY DDB
044726 / 304000,,000000          CAIA                         ;
044727 / 350003,,777776           AOS      777776(P)          ;;SKIP ON SUCCESS
044730 / 262140,,000005           POP    P,   DAT             ;
044731 / 262140,,000001           POP    P,   TAC             ;
044732 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO SETUP N-RING IO BUFFER IN USER AREA
                       ;CALL:	PUSHJ PDP,BUFCLC
                       ;	EXIT		RETURNS HERE IF MEMORY NOT EXCEEDED
                       ; SETS UP AN N BUFFER RING FOLLOWING THE USER'S PROGRAM, WHERE N
                       ; IS IN THE ADDRESS FIELD OF AC UUO.
                       ; THE BUFFER RING FORMAT IS AS FOLLOWS:
                       ;	LOCATION		LH   CONTENTS   RH
                       ; C(JOBFF) + 1              BUFFER         C(JOBFF) +1
                       ;    + 0(BUFFER SIZE+2)      SIZE               + 1(BUFFER SIZE+2)
                       ; C(JOBFF) +1               BUFFER         C(JOBFF) +1
                       ;     +1(BUFFER SIZE+2)      SIZE                + 2(BUFFER SIZE+2)
                       ;         .		.		     .
                       ;	.		.		     .
                       ;	.		.		     .
                       ; C(JOBFF) + 1	        BUFFER	   C(JOBFF) + 1
                       ;    + (N-2)(BUFFER SIZE+2)  SIZE               +(N-1)(BUFFER SIZE+2)
                       ; C(JOBFF) + 1	        BUFFER	   C(JOBFF) + 1
                       ;    + (N-1)(BUFFER SIZE+2)  SIZE		   
                       ;THEN SET 	BUFPNT:=IOUSE,C(JOBFF) + 1
                       ; AND		JOBFF:=C(JOBFF) + N(BUFFER SIZE + 2)
                       ; BUFWRD IS RESTORED.
                       BUFCLC:
044733 / 135040,,037576           LDB  TAC,PDVBLN             ;
                       ; GET BUFFER SIZE IN TAC
                       BUFCLM:
044734 / 261140,,000017          PUSH  PDP,000017             ;; SAVE BUFWRD ON STACK
044735 / 550507,,000121          HRRZ BUFPNT, JOBFF(PROG)       ;; BUFPNT:= FIRST FREE USER LOC+1
044736 / 271500,,000001          ADDI BUFPNT,     1             ;
044737 / 550740,,000012          HRRZ BUFWRD,BUFPNT             ;
044740 / 504740,,000001           HRL BUFWRD,000001             ;; PUT XWD BUFSIZ,JOBFF IN BUFWRD
044741 / 271040,,000002          ADDI  TAC,000002             ;; ADD 2 TO BUFFER SIZE
044742 / 550100,,000014          HRRZ TAC1,000014             ;; GET NUMBER OF BUFFERS
044743 / 327100,,044745         JUMPG TAC1,044745             ;;SKIP UNLESS NONE WERE REQUESTED. (ME 12-11-72)
044744 / 201100,,000002         MOVEI TAC1,000002             ;;GIVE HIM TWO.
044745 / 550640,,000001          HRRZ  AC1,   TAC             ;
044746 / 220640,,000002          IMUL  AC1,  TAC1             ;
044747 / 270640,,000017           ADD  AC1,BUFWRD             ;
044750 / 550640,,000015          HRRZ  AC1,   AC1             ;
044751 / 317653,,024065          CAMG  AC1,USRREL(PID)        ;; WILL THIS SPACE FIT IN USER CORE?
044752 / 254000,,044776          JRST      044776             ;; YES, DO INBUF CODE
                       ; HERE, WE WANT TO EXPAND CORE TO FIT IN A RING OF BUFFERS
044753 / 261140,,000001          PUSH  PDP,000001             ;; NO.
044754 / 261140,,000014          PUSH  PDP,000014             ;;  SO
044755 / 261140,,000002          PUSH  PDP,000002             ;;   WE
044756 / 261140,,000012          PUSH  PDP,000012             ;;    SAVE
044757 / 261140,,000017          PUSH  PDP,000017             ;;     A
044760 / 261140,,000006          PUSH  PDP,000006             ;;      FEW
044761 / 261140,,000011          PUSH  PDP,000011             ;;       AC'S
044762 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;;       AND DO A CORE UUO TO MAKE ROOM
044763 / 200040,,000015          MOVE  TAC,000015             ;;       HOW HIGH TO TRY FOR
044764 / 201600,,000014         MOVEI  UUO,000014             ;;       ..
044765 / 260140,,071300         PUSHJ  PDP,071300             ;;       TRY FOR ANOTHER K OF USER CORE
044766 / 255000,,000000          JFCL                         ;
044767 / 262140,,000011           POP  PDP,000011             ;;       AND
044770 / 262140,,000006           POP  PDP,000006             ;;      WE
044771 / 262140,,000017           POP  PDP,000017             ;;     RESTORE
044772 / 262140,,000012           POP  PDP,000012             ;;    THE
044773 / 262140,,000002           POP  PDP,000002             ;;   FEW
044774 / 262140,,000014           POP  PDP,000014             ;;  AC'S
044775 / 262140,,000001           POP  PDP,000001             ;; DUE TO IOWAIT
                       ; FALL INTO BUFC1
                       ; END OF LOOP FOR SETTING UP AN N-RING BUFFER
                       BUFC1:
044776 / 270740,,000001           ADD BUFWRD,000001             ;;ADD IN LENGTH OF BUFFER, ADDR OF NEXT BUFFER
044777 / 550640,,000012          HRRZ  AC1,000012             ;;IS THIS ADDR IN BOUNDS?
045000 / 260140,,044506         PUSHJ    P,UADRCK             ;
152616 / 202752,,000000         MOVEM BUFWRD,      (BUFPNT)     ;
045001 / 256040,,152616          XCTR   XW,152616             ;;PUT THIS ADDRESS IN BUFFER HEADER
045002 / 540500,,000017           HRR BUFPNT,BUFWRD             ;
045003 / 367100,,044776          SOJG TAC1,044776             ;;LOOP AROUND AND MAKE N-1 MORE BUFFERS
045004 / 540747,,000121           HRR BUFWRD, JOBFF(PROG)       ;;UPDATE THE USER'S JOBFF
045005 / 271740,,000001          ADDI BUFWRD,     1             ;
045006 / 201652,,777776         MOVEI  AC1,777776(BUFPNT)     ;;CHECK LAST ADDRESS OF HEADER
045007 / 260140,,044506         PUSHJ    P,UADRCK             ;
045010 / 274500,,000001           SUB BUFPNT,   TAC             ;
152616 / 202752,,000000         MOVEM BUFWRD,      (BUFPNT)     ;
045011 / 256040,,152616          XCTR   XW,152616             ;;LINK LAST BUFFER TO FIRST BUFFER
045012 / 271501,,777777          ADDI BUFPNT,777777(TAC)        ;
045013 / 542507,,000121          HRRM BUFPNT, JOBFF(PROG)       ;;UPDATE USER'S JOBFF
045014 / 540500,,000017           HRR BUFPNT,000017             ;;LOAD IN USE BIT AND ADDRESS OF FIRST BUFFER
045015 / 505500,,400000          HRLI BUFPNT, IOUSE             ;
045016 / 262140,,000017           POP    P,000017             ;;RESTORE BUFWRD FROM STACK
045017 / 263140,,000000          POPJ    P,                   ;;EXIT
                       ;ROUTINE TO CLEAR IO BUFFER IN USER AREA
                       ;CALLED AT INTERRUPT AND UUO LEVEL
                       ;CALL:	HRRZ TAC,REL. ADR. OF 2ND WORD OF USER BUFFER
                       ;	PUSHJ PDP,BUFCLR
                       ;	ERROR RETURN MEMORY EXCEEDED
                       ;	EXIT		RETURNS HERE IF MEMORY NOT EXCEEDED
                       ; CLEARS THE WORD COUNT AND DATA AREA OF THE BUFFER WHOSE ADDRESS
                       ; IS IN TAC 18-35.
                       BUFCLR:
045020 / 260140,,044533         PUSHJ  PDP,044533             ;; ADDRESS IN BOUNDS?
045021 / 263140,,000000          POPJ  PDP,                   ;;NO. ERROR RETURN
045022 / 505040,,000007          HRLI  TAC,000007             ;; SET TO RELOCATE BY PROG
045023 / 261140,,000001          PUSH  PDP,000001             ;;SAVE FIRST BUFFER ADR.
045024 / 554120,,000001          HLRZ TAC1,@000001            ;;TAC1 18-35=SIZE
045025 / 620100,,400000           TRZ TAC1,400000             ;
045026 / 270040,,000002           ADD  TAC,000002             ;;LAST ADR=2ND ADR+SIZE
045027 / 621040,,777777           TLZ  TAC,777777             ;;CLEAR LEFT HALF
045030 / 260140,,044533         PUSHJ  PDP,044533             ;;LAST ADDRESS IN BOUNDS?
045031 / 254000,,037376          JRST      037376             ;;NO. ERROR RETURN
045032 / 505040,,000007          HRLI  TAC,000007             ;; SET LAST ADR. FOR RELOCATION
045033 / 262140,,000002           POP  PDP,000002             ;;RESTORE FIRST ADR.
045034 / 201120,,000002         MOVEI TAC1,@000002            ;; GET ABS. ADDR OF 2ND WD. OF BUFFER
045035 / 504100,,000002           HRL TAC1,  TAC1             ;
045036 / 253100,,045037         AOBJN TAC1,045037             ;;THIRD WORD IN BUFFER
045037 / 402002,,000000         SETZM            (TAC1)       ;;CLEAR THIRD WORD
045040 / 350000,,000002           AOS      000002             ;;SET DEST. ADR. TO 4TH WORD
045041 / 251120,,000001           BLT TAC1,@000001            ;;CLEAR BUFFER
045042 / 254000,,037401          JRST      037401             ;;SUCESSFUL RETURN
                       ;ROUTINE TO COMPUTE 12 BIT FOLDED CHECKSUM
                       ;CALL:	PUSHJ PDP,CKS12
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;CALCULATES FOLDED 12 BIT CHECKSUMS OF THE DATA WORDS IN THE
                       ;BUFFER WHOSE ADDRESS IS IN AC TAC1.  TWO ALGORITHMS ARE USED.
                       ;ON RETURN, THE LEFT HALF OF AC TAC CONTAINS A CHECKSUM OBTAINED
                       ;BY ACCUMULATING, IN ONE'S COMPLEMENT, THE DATA WORDS AND FOLDING IT.
                       ;THE LEFT HALF OF AC DAT CONTAINS A CHECKSUM OBTAINED BY ACCUMULATING,
                       ;IN TWO'S COMPLEMENT, THE DATA WORDS AND FOLDING IT.  AC TAC1
                       ;CONTAINS A 1.
                       CKS12:
045043 / 270100,,000007           ADD TAC1,000007             ;;TAC1:=-WORD COUNT,ADDRESS OF FIRST DATA WORD
045044 / 350000,,000002           AOS        TAC1             ;
045045 / 550042,,000000          HRRZ  TAC,      (TAC1)       ;
045046 / 213000,,000001         MOVNS         TAC             ;
045047 / 350000,,000002           AOS        TAC1             ;
045050 / 504100,,000001           HRL TAC1,   TAC             ;
045051 / 402000,,000001         SETZM      000001             ;;INITIALIZE TWO'S COMPLEMENT SUM
                       CKS12A:
045052 / 270042,,000000           ADD  TAC,      (TAC1)       ;;TWO'S COMPLEMENT ADD
045053 / 253100,,045052         AOBJN TAC1,045052             ;;DONE?
045054 / 246040,,777750          LSHC  TAC,777750             ;
045055 / 242100,,777764           LSH TAC1,777764             ;
045056 / 270040,,000002           ADD  TAC,  TAC1             ;
045057 / 246040,,777764          LSHC  TAC,777764             ;
045060 / 242100,,777750           LSH TAC1,777750             ;
045061 / 270040,,000002           ADD  TAC,  TAC1             ;
045062 / 622040,,770000          TRZE  TAC,770000             ;
045063 / 350000,,000001           AOS         TAC             ;
045064 / 517000,,000001         HRLZS         TAC             ;
045065 / 201100,,000001         MOVEI TAC1,000001             ;;TAC1:=1
045066 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO CLEAR RESIDUE OF WORD POINTED TO BY A BYTE POINTER
                       ;CALL:	PUSHJ PDP,CLRBYT
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;CALLED WITH A BYTE POINTER IN AC TAC, IT CLEARS THE REST OF THE
                       ;WORD POINTED TO BY THE BYTE POINTER.
                       CLRBYT:
153152 / 000000,,000001                                       ;
153152 / 360600,,000001 POINT 6,00000001,5                    ;
045067 / 135100,,153152           LDB TAC1,153152             ;; SET UP POINTER
153017 / 000000,,000001                                       ;
153017 / 301400,,000001 POINT 12,00000001,11                  ;
045070 / 137100,,153017           DPB TAC1,153017             ;;TAC 0-5:=0,TAC 6-12:=P
045071 / 402000,,000002         SETZM        TAC1             ;
045072 / 137100,,000001           DPB TAC1,000001             ;;CLEAR BITS 36-P THROUGH 35
045073 / 263140,,000000          POPJ  PDP,                   ;;RETURN
                       ;IOALL, IOALLR, IORELS,IOWAIT
                       IOWAIT:
151746 / 000000,,046160                                       ;
045074 / 334040,,151746         SKIPA  TAC,151746             ;;WAIT FOR ALL DEVICES TO BE INACTIVE
                       IORELS:
045075 / 201040,,065470         MOVEI  TAC,065470             ;;RELEASE ALL IO DEVICES. FALL INTO IOALL
                       ;ROUTINE TO DO IO FOR ALL DEVICES ASSIGNED TO JOB
                       ;CALL	MOVEI TAC,ADR. OF IO SUB.
                       ;	PUSHJ PDP,IOALL
                       IOALL:
045076 / 261140,,000001          PUSH  PDP,000001             ;; SAVE SUBROUTINE CALL
045077 / 403500,,000014         SETZB UCHN,000014             ;;START WITH USER CHANNEL 0
045100 / 331313,,024066         SKIPL DEVDAT,USRHCU(PID)        ;; IS THIS NEGATIVE?
045101 / 254000,,045104          JRST      IOALL1             ;
045102 / 402013,,024066         SETZM      USRHCU(PID)        ;;SAVE-GET HAS BEEN HERE, RELEASE DEVICE ANYWAY!!!
045103 / 254000,,045110          JRST      IOALL2             ;
                       IOALL1:
045104 / 313513,,024066         CAMLE UCHN,USRHCU(PID)        ;;IS IT GREATER THAN HIGHEST CHAN. USED?
045105 / 254000,,045120          JRST      045120             ;;YES, POP PDP,TAC; POPJ PDP,
045106 / 336312,,024071         SKIPN DEVDAT,USRJDA(UCHN)       ;;GET NEXT DDB ADR., IS IT IN USE?
045107 / 344500,,045104          AOJA UCHN,045104             ;;NO, KEEP GOING
                       IOALL2:
045110 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;
045111 / 137500,,037573           DPB UCHN,PUUOAC             ;
045112 / 200446,,000003          MOVE DSER,DEVSER(DEVDAT)     ;;SETUP ADR. OF DEV. DISP. TABLE
045113 / 135200,,037575           LDB    J,037575             ;;DOES THIS DDB BELONG
045114 / 316213,,024061          CAMN    J,   JOB(PID)        ;;TO THIS JOB?
045115 / 260163,,000000         PUSHJ  PDP,@      (PDP)       ;;YES, CALL THE SUB.
045116 / 200213,,024061          MOVE    J,   JOB(PID)        ;;KEEP THIS HONEST
045117 / 344500,,045104          AOJA UCHN,045104             ;;INCREMENT USER CHAN. NO.
                       IOALLP:
045120 / 331504,,032565         SKIPL UCHN,JBTIOP(J)          ;;GET IO PDL POINTER
045121 / 254000,,037376          JRST      037376             ;;NONE THERE. RETURN
151674 / 777777,,777777                                       ;
045122 / 261140,,151674          PUSH    P,151674             ;
                       IOALP1:
045123 / 336312,,000000         SKIPN  DDB,      (UCHN)       ;;SKIP FLUSHED CHANNELS
045124 / 254000,,045147          JRST      IOALP2             ;
045125 / 250300,,024071          EXCH  DDB,USRJDA             ;
045126 / 202312,,000000         MOVEM  DDB,      (UCHN)       ;;EVERYONE MUST LIVE SOMEWHERE
045127 / 200300,,024071          MOVE  DDB,USRJDA             ;
045130 / 261140,,000012          PUSH    P,  UCHN             ;
045131 / 400500,,000000          SETZ UCHN,                   ;
045132 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
045133 / 137500,,037573           DPB UCHN,PUUOAC             ;
045134 / 200446,,000003          MOVE DSER,DEVSER(DDB)        ;;SETUP ADR. OF DEV. DISP. TABLE
045135 / 135200,,037575           LDB    J,037575             ;;DOES THIS DDB BELONG
045136 / 316213,,024061          CAMN    J,   JOB(PID)        ;;TO THIS JOB?
045137 / 260163,,777776         PUSHJ    P,@777776(P)         ;;YES, CALL THE SUB.
045140 / 200213,,024061          MOVE    J,   JOB(PID)        ;;KEEP THIS HONEST
045141 / 262140,,000012           POP    P,  UCHN             ;
045142 / 200312,,000000          MOVE  DDB,      (UCHN)       ;
045143 / 250300,,024071          EXCH  DDB,USRJDA             ;
045144 / 202312,,000000         MOVEM  DDB,      (UCHN)       ;
045145 / 322300,,045147         JUMPE  DDB,IOALP2             ;
045146 / 402003,,000000         SETZM            (P)          ;;FLAG TO NOT RETURN JBTIOP
                       IOALP2:
151763 / 000001,,000001                                       ;
045147 / 270500,,151763           ADD UCHN,151763             ;
045150 / 253500,,045123         AOBJN UCHN,IOALP1             ;
045151 / 262140,,000001           POP    P,   TAC             ;
045152 / 322040,,037376         JUMPE  TAC, TPOPJ             ;
045153 / 261140,,000015          PUSH    P,   AC1             ;
045154 / 550644,,032565          HRRZ  AC1,JBTIOP(J)          ;;FLUSH IO STACK
045155 / 402004,,032565         SETZM      JBTIOP(J)          ;
045156 / 260140,,074163         PUSHJ    P,FSGIVE             ;
045157 / 262140,,000015           POP    P,   AC1             ;
045160 / 254000,,037376          JRST       TPOPJ             ;
                       ;HERE TO CHASE THROUGH THE DDB LIST AND CALL RELEA5 FOR ANY DDB OF OURS
                       ;CALLED FROM IOKILL
                       ;THIS IS A KLUDGE TO RECTIFY THE PROBLEM OF DDBS GETTING LOST FROM JOBJDA
                       IOALLR:
045161 / 261140,,024071          PUSH    P,USRJDA             ;
045162 / 201300,,000605         MOVEI  DDB,000605             ;
                       IOALR1:
045163 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;
045164 / 322300,,045205         JUMPE  DDB,IOALR3             ;
                       IOALR2:
045165 / 135200,,037575           LDB    J, PJOBN             ;
045166 / 312213,,024061          CAME    J,   JOB(PID)        ;
045167 / 254000,,045163          JRST      IOALR1             ;
045170 / 200506,,000004          MOVE UCHN,DEVMOD(DDB)        ;
045171 / 606500,,200000          TRNN UCHN,200000             ;;ASSIGNED BY PROGRAM?
045172 / 254000,,045163          JRST      045163             ;;NO
045173 / 202300,,024071         MOVEM  DDB,USRJDA             ;
045174 / 201500,,000000         MOVEI UCHN,                   ;
045175 / 137500,,037573           DPB UCHN,PUUOAC             ;
045176 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
045177 / 200446,,000003          MOVE DSER,DEVSER(DDB)        ;;SETUP ADR. OF DEV. DISP. TABLE
045200 / 261140,,000011          PUSH    P,000011             ;;SAVE DSER
045201 / 260140,,065522         PUSHJ    P,065522             ;;RELEASE THIS DDB
045202 / 262140,,000006           POP    P,   DDB             ;
045203 / 554300,,000006          HLRZ  DDB,000006             ;;ADDRESS OF NEXT DDB
045204 / 326300,,045165         JUMPN  DDB,045165             ;;CONTINUE THROUGH THE DDB CHAIN.
                       IOALR3:
045205 / 262140,,024071           POP    P,USRJDA             ;
045206 / 200213,,024061          MOVE    J,   JOB(PID)        ;;KEEP THIS HONEST
045207 / 263140,,000000          POPJ    P,                   ;
                       ;IOKILL, CLRUSR
                       ;KILL ALL DEVICES(RELEASE WITHOUT WAITING FOR DEVICE INACTIVE)
                       IOKILL:
045210 / 201040,,065522         MOVEI  TAC,RELEA5             ;
045211 / 260140,,045076         PUSHJ    P,045076             ;;RELEASE ALL DEVICES WITHOUT WAITING
045212 / 260140,,045161         PUSHJ    P,045161             ;;CHASE THRU DDB LIST AND RELEASE ANY OTHERS
                       ;ROUTINE TO CLEAR PROTECTED JOB DATA AREA IN MONITOR
                       ;AND RECLAIM FREE AREA ABOVE USER PROGRAM FOR IO BUFFERS
045213 / 554047,,000120          HLRZ  TAC, JOBSA(JDAT)       ;;RESET FIRST FREE LOC. FOR THIS JOB
045214 / 202047,,000121         MOVEM  TAC, JOBFF(JDAT)       ;
                       CLRUSR:
045215 / 402007,,000043         SETZM      JOBENB(JDAT)       ;;INITIALIZE USER FOR NO TRAPS ENABLED
045216 / 201053,,024072         MOVEI  TAC,USRLO1(PID)        ;;FIRST LOC+1 TO CLEAR
045217 / 505053,,024071          HRLI  TAC, USRLO(PID)        ;;FIRST LOC.
045220 / 402013,,024071         SETZM       USRLO(PID)        ;
045221 / 251053,,024110           BLT  TAC, USRHI(PID)        ;
045222 / 402013,,024066         SETZM      USRHCU(PID)        ;;CLEAR HIGHEST USER IO CHAN. IN USE
045223 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO FLAG DEVICE ACTIVE  - ORACT, SETACT, CLRACT, STOIOS
                       ;CALL	MOVE IOS,IO STATUS BITS
                       ;	MOVE DEVDAT,ADDRESS OF DEVICE DATA BLOCK
                       ;	PUSHJ PDP,SETACT
                       ;CALLED BY ALL IO SERVICE ROUTINES AT UUO AND INTERRUPT LEVELS
                       ORACT:
045224 / 332013,,023425         SKIPE      SPWUUF(PID)        ;
045225 / 700700,,077000         CONSZ   PI, 77000             ;
045226 / 304000,,000000          CAIA                         ;
045227 / 254000,,150447          JRST      SPWERR             ;
045230 / 660000,,010000           TRO       IOACT             ;
045231 / 437006,,000002          IORB      DEVIOS(DDB)        ;
045232 / 254000,,045244          JRST      ORACT1             ;
                       SETACT:
045233 / 332013,,023425         SKIPE      SPWUUF(PID)        ;
045234 / 700700,,077000         CONSZ   PI, 77000             ;
045235 / 304000,,000000          CAIA                         ;
045236 / 254000,,150447          JRST      SPWERR             ;
045237 / 662000,,010000          TROE       IOACT             ;
045240 / 254000,,045243          JRST      STOIOS             ;
045241 / 625000,,000001          TLZA         IOW             ;
                       CLRACT:
045242 / 620000,,010000           TRZ       IOACT             ;
                       STOIOS:
045243 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
                       ORACT1:
045244 / 135040,,037610           LDB  TAC,037610             ;;GET NO. OF SECONDS
045245 / 137040,,037611           DPB  TAC,037611             ;;TO WAIT BEFORE
045246 / 263140,,000000          POPJ    P,                   ;;DEVICE IS CONSIDERED HUNG
                       ; THIS ROUTINE UPDATES EACH DEVICE'S HUNG COUNT AND DISPATCHES
                       ; IF THE COUNT IS EXHAUSTED
                       DEVCHK:
045247 / 201040,,000074         MOVEI  TAC,000074             ;; RESET HUNG DEVICE CHECK TIME
045250 / 202040,,026106         MOVEM  TAC,026106             ;;TO CHECK ONCE A SECOND
                       ;	HLRZ DEVDAT,DEVLST
045251 / 376000,,012225          SOSN      012225             ;;SEE IF DISK IS HUNG THIS WAY!
045252 / 260140,,074755         PUSHJ    P,074755             ;;CALL DISK HUNG ROUTINE
045253 / 201300,,017175         MOVEI  DDB,017175             ;;SKIP DSK AND UDP
                       DEVCK0:
045254 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;;IS DEVICE ACTIVE?
045255 / 606000,,010000          TRNN       IOACT             ;
045256 / 254000,,045274          JRST      045274             ;;NO
                       DEVCK3:
045257 / 135040,,037611           LDB  TAC,037611             ;; YES, DECREMENT HUNG COUNT
045260 / 361040,,045270          SOJL  TAC,045270             ;;0 MEANS IGNORE DEVICE
045261 / 137040,,037611           DPB  TAC,037611             ;; NOW REPLACE IT IN THE DDB
045262 / 326040,,045270         JUMPN  TAC,045270             ;;HAS COUNT GONE TO 0?
045263 / 200446,,000003          MOVE DSER,DEVSER(DEVDAT)     ;;YES, GET DISPATCH TABLE ENTRY
045264 / 261140,,000006          PUSH  PDP,DEVDAT             ;
045265 / 260151,,777777         PUSHJ  PDP,  DHNG(DSER)       ;;DISPATCH TO SERVICE ROUTINES TO 
                       ;UNHANG DEVICE
045266 / 260140,,043476         PUSHJ  PDP,043476             ;;PRINT ERROR MESSAGE AND STOP JOB
045267 / 262140,,000006           POP  PDP,000006             ;;DO NOT PRINT MESS. AND STOP JOB RETURN
                       DEVCK1:
045270 / 554306,,000003          HLRZ DEVDAT,DEVSER(DEVDAT)     ;
045271 / 302300,,017574          CAIE DEVDAT,017574             ;;DON'T DO TTY'S
045272 / 326300,,045254         JUMPN DEVDAT,DEVCK0             ;
045273 / 263140,,000000          POPJ  PDP,                   ;
                       DEVCK2:
045274 / 200246,,777777          MOVE  DAT,DEVCMR(DEVDAT)     ;; PULL IN EXTRA DEVCHR BITS
045275 / 603240,,400000          TLNE  DAT,400000             ;; DOES THIS DEVICE HAVE AN INTERNAL BUFFER?
045276 / 607000,,001000          TLNN      001000             ;; IF IT DOES, IS IT BUSY?
045277 / 254000,,045270          JRST      045270             ;; NOT BUSY, IGNORE DEVICE
045300 / 254000,,045257          JRST      045257             ;; BUSY, INCREMENT HUNG COUNT
                       ; OTHER USEFUL ROUTINES FOR SETING UP USER BUFFER POINTERS
                       ; CHECK RING USE BIT AND SEE IF USER HAS ANOTHER BUFFER TO FILL
                       ; SET UP DEVDAT AND PROG
                       ; DOES SCRATCH WORK IN TAC
                       ; SKIPS IF HE HAS BUFFERS HE CAN BE FILLING
                       DEVCR:
045301 / 544046,,000006           HLR  TAC,DEVBUF(DEVDAT)     ;; PICK UP RELATIVE ADDRESS OF HIS BUFFER HEADER
045302 / 505040,,000007          HRLI  TAC,000007             ;; SET TO INDEX BY HIS RELOCATION CONSTANT
045303 / 540060,,000001           HRR  TAC,@000001            ;; WE NOW HAVE THE ABSOLUTE ADDRESS OF THE FIRST BUFFER
045304 / 331020,,000001         SKIPL      @000001            ;; CHECK THE RING USE BIT, AGAIN INDEXED BY PROG
045305 / 350003,,000000           AOS            (PDP)        ;; BUFFER IS FREE, LET HIM FILL IT
045306 / 263140,,000000          POPJ  PDP,                   ;
                       ; SET UP WORD COUNT IN AC2
                       ; SET UP 7-BIT BYTE POINTER TO ACTUAL DATA IN AC3
                       ; DEVDAT AND PROG MUST BE SET UP
                       ; ROUTINE SKIPS ON SUCCESS, DOESN'T SKIP IF BUFFER IS EMPTY
                       DEVSTU:
045307 / 331026,,000010         SKIPL      @DEVOAD(DEVDAT)    ;; FIRST, SEE IF THIS BUFFER HAS ALREADY BEEN EMPTIED
045310 / 263140,,000000          POPJ  PDP,                   ;; YES IT HAS, EXIT NOW
045311 / 201766,,000010         MOVEI  AC3,@DEVOAD(DEVDAT)    ;
045312 / 550717,,000001          HRRZ  AC2,     1(AC3)        ;; WORD COUNT IS LOCATED 1 LOC AFTER HEADER ADDRESS
151376 / 000000,,000002                                       ;
151376 / 440700,,000002 POINT 7,00000002,                     ;
045313 / 270740,,151376           ADD  AC3,151376             ;; MAKE ABSOLUTE ADDRESS INTO A BYTE POINTER TO THE WORD AFTER THE WORD COUNT
045314 / 350003,,000000           AOS            (PDP)        ;; SKIP UPON SUCCESS
045315 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO SETUP PROG AND ITEM FOR INTERRUPT SERVICE ROUTINE
                       ;CALL	PUSHJ PDP,IOSET
                       ;	EXIT	ALWAYS RETURNS HERE
                       ;THIS PROGRAM IS CALLED FROM AN INTERRUPT SERVICE ROUTINE.
                       ;IT PUTS THE ADDRESS OF THE DATA AREA OF THE JOB (C(JBTADR18-35))
                       ;CONNECTED TO THE DEVICE SPECIFIED BY AC DEVDAT IN AC PROG AND
                       ;PUTS THE ITEM POINTER (C(DEVCTR)) IN AC ITEM.
                       IOSET:
045316 / 135340,,037575           LDB PROG, PJOBN             ;
045317 / 200206,,000011          MOVE ITEM,DEVCTR(DEVDAT)     ;;ITEM:=ITEM POINTER=C(DEVCTR)
045320 / 200347,,027120          MOVE PROG,JBTADR(PROG)       ;;PROG:=C(JBTADR 18-35)
045321 / 263140,,000000          POPJ  PDP,                   ;;RETURN
                       ;CALLING SEQUENCE
                       ;	PUSHJ PDP,IOSETC
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;SETS JBFPTR18-35:=C(TAC1 18-35)
                       ;	JBFCTR:=C(ITEM)*[WORD LENGTH/BYTE SIZE]
                       ;WHERE	WORD LENGTH:=36 DECIMAL
                       ;	BYTE SIZE:=C(JBFPTR6-11)
                       ;	[X]:= INTEGER PART OF X
                       IOSETC:
045322 / 271240,,000001          ADDI JBUF,000001             ;;JBFPTR12-18 SET TO 0
045323 / 205040,,007777         MOVSI  TAC,007777             ;;JBFPTR18-35:=C(TAC1 18-35)+1
151345 / 406045,,000000          ANDM  TAC,      (JBUF)       ;
045324 / 256240,,151345          XCTR  XRW,151345             ;
151456 / 542105,,000000          HRRM TAC1,      (JBUF)       ;
045325 / 256240,,151456          XCTR  XRW,151456             ;
153136 / 350005,,000000           AOS            (JBUF)       ;
045326 / 256240,,153136          XCTR  XRW,153136             ;
                       ;NEXT 3 INST'S ADDED BY RPH TO AVOID INVALID WORD COUNTS 10-11-72
152664 / 000002,,000000                                       ;
152664 / 222102,,000000 POINT 17,02000000,17                  ;
152360 / 135100,,152664           LDB TAC1,152664             ;
045327 / 256040,,152360          XCTR  XLB,152360             ;;GET BUFFER SIZE
045330 / 303202,,777777         CAILE ITEM,777777(TAC1)       ;;MORE DATA INDICATED THAN CAN BE IN BUFFER?
045331 / 201202,,777777         MOVEI ITEM,777777(TAC1)       ;; YES, SET TO MAX
153014 / 000005,,000000                                       ;
153014 / 300605,,000000 POINT 6,05000000,11                   ;
152357 / 135100,,153014           LDB TAC1,153014             ;
045332 / 256040,,152357          XCTR  XLB,152357             ;;TAC1:=BYTE SIZE
045333 / 260140,,045342         PUSHJ    P,045342             ;;JBFCTR:=C(ITEM)*[36/BYTE SIZE]
045334 / 271240,,000001          ADDI JBUF,     1             ;
152570 / 202205,,000000         MOVEM ITEM,      (JBUF)       ;
045335 / 256040,,152570          XCTR   XW,152570             ;
045336 / 263140,,000000          POPJ    P,                   ;;EXIT
                       ;ROUTINE TO RETURN NO. OF ITEMS IN BUFFER
                       ;CALL:	PUSHJ PDP,ITMSET
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;SETS AC ITEM:=(BUFFER SIZE-1)*[WORD LENGTH/BYTE SIZE]
                       ;WHERE BUFFER SIZE:=BITS 1-17 OF THE BUFFER HEADER WORD POINTED TO
                       ;		BY C(DEVADR)
                       ;	WORD LENGTH:=36 DECIMAL
                       ;	BYTE SIZE:=INTEGER PART OF X.
                       ;CALLING SEQUENCE
                       ;	PUSHJ PDP,ITMCNT
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;SETS AC ITEM:=C(ITEM)*[WORD LENGHT/BYTE SIZE]
                       ITMSET:
152665 / 000026,,000007                                       ;
152665 / 222126,,000007 POINT 17,26000007,17                  ;
045337 / 135200,,152665           LDB ITEM,152665             ;
045340 / 275200,,000001          SUBI ITEM,     1             ;
153015 / 000006,,000010                                       ;
153015 / 300606,,000010 POINT 6,06000010,11                   ;
045341 / 135100,,153015           LDB TAC1,153015             ;
                       ITMCT1:
045342 / 201040,,000044         MOVEI  TAC,000044             ;; GET C(ITEM):=C(ITEM)*[WORD LENGTH/C(TAC1)]
045343 / 230040,,000002          IDIV  TAC,  TAC1             ;
045344 / 220200,,000001          IMUL ITEM,   TAC             ;
045345 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO SET DEVICE STATUS WORD FROM UUO
                       ;AND SETUP IOS
                       SETIOS:
045346 / 260140,,046160         PUSHJ  PDP, WAIT1             ;
045347 / 260140,,045352         PUSHJ    P,SETMOD             ;
045350 / 254000,,043322          JRST      ILLMOD             ;
045351 / 263140,,000000          POPJ    P,                   ;
                       SETMOD:
152045 / 000000,,000014                                       ;
152045 / 000400,,000014 POINT 4,00000014,35                   ;
045352 / 135100,,152045           LDB TAC1,152045             ;;GET DEVICE DATA MODE
                       SETIO2:
045353 / 201040,,000001         MOVEI  TAC,000001             ;;AND CHECK FOR LEGALITY
045354 / 242042,,000000           LSH  TAC,      (TAC1)       ;
045355 / 616046,,000004          TDNN  TAC,DEVMOD(DEVDAT)     ;
045356 / 254000,,045362          JRST      SETIO1             ;
045357 / 620600,,010000           TRZ  UUO,010000             ;;LET USER SET ALL BITS EXCEPT IOACT
045360 / 542606,,000002          HRRM  UUO,DEVIOS(DEVDAT)     ;
045361 / 254000,,037401          JRST      CPOPJ1             ;
                       SETIO1:
045362 / 302100,,000002          CAIE TAC1,000002             ;;MODE 2?
045363 / 263140,,000000          POPJ    P,                   ;;NO. ILL MODE
045364 / 201100,,000017         MOVEI TAC1,000017             ;;YES. TRY MODE 17 INSTEND.
045365 / 271600,,000015          ADDI  UUO,000015             ;
045366 / 254000,,045353          JRST      SETIO2             ;
                       ;SETUP BYTE POINTER AND ITEM COUNT
                       ;CALLED BY STODAT ONLY (AT INTERRUPT LEVEL)
                       ;CALL	PUSHJ PDP,NEWBUF
                       ;	ADDRESS CHECK WHEN SETTING UP BUFFER
                       ;	OK RETURN
                       NEWBUF:
045367 / 550046,,000007          HRRZ  TAC,DEVADR(DEVDAT)     ;;TAC:=INPUT BUFFER HEADER ADDRESS
045370 / 260140,,045020         PUSHJ  PDP,045020             ;;CLEAR INPUT BUFFER.
045371 / 263140,,000000          POPJ  PDP,                   ;;ADDRESS CHECK
045372 / 540046,,000007           HRR  TAC,DEVADR(DEVDAT)     ;
045373 / 515040,,007737         HRLZI  TAC,  7737             ;
045374 / 404046,,000010           AND  TAC,DEVPTR(DEVDAT)     ;;DEVPTR 0-5:=0, DEVPTR 12:=0
045375 / 540046,,000007           HRR  TAC,DEVADR(DEVDAT)     ;;DEVPTR 18-35:=C(DEVADR 18-35) + 1
045376 / 350000,,000001           AOS         TAC             ;
045377 / 202046,,000010         MOVEM  TAC,DEVPTR(DEVDAT)     ;
045400 / 260140,,045337         PUSHJ  PDP,045337             ;;ITEM:=(BUFFER SIZE-1)*[36/BYTE SIZE]
045401 / 202206,,000011         MOVEM ITEM,DEVCTR(DEVDAT)     ;;DEVCTR:=ITEM COUNT
045402 / 254000,,037401          JRST      037401             ;;RETURN
                       ;ROUTINE TO SETUP BYTE POINTER ACCORDING TO DATA MODE
                       ;CALL:	PUSHJ PDP,SETBYT
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;SETS	TAC 0-5:=0
                       ;	TAC 6-11:=S
                       ;	TAC 12-13:=0
                       ;	TAC 14-17:=PROG
                       ;WHERE S=36 IF DATA MODE (IOS 32-25) IS BINARY (B)
                       ;	IMAGE (I), IMAGE BINARY (IB), OR DUMP (SD,D,DR)
                       ;      S=7  IF DATA MODE IS 	ASCII PACKED (A)
                       ;			ASCII LINE (AL)
                       ;			ASCII SEQUENCED (AS)
                       ;			ASCII SEQUENCED LINE (ASL)
                       ;		OR	ALTERNATE MODE BREAK (AM)
                       SETBYT:
045403 / 606000,,000014          TRNN      000014             ;; IS MODE LESS THAN 10?
045404 / 505040,,000707          HRLI  TAC,000707             ;;YES,ASCII OR ASCII LINE
045405 / 602000,,000014          TRNE      000014             ;;10 OR GREATER?
045406 / 505040,,004407          HRLI  TAC,004407             ;;YES, IMAGE,IMAGE BIN. OR BIN.
045407 / 263140,,000000          POPJ  PDP,                   ;
                       ; ROUTINE TO STORE DATA IN IOBUFFER FOR INPUT DEVICES THAT
                       ; OPERATE CHARACTER AT A TIME.
                       ; CALLING SEQUENCE . . .
                       ;       PUSHJ PDP,STODAT
                       ;       EXIT1        CHECKSUM ERROR
                       ;       EXIT2        BLOCK FULL OR BLOCK BOMPLETE
                       ;       EXIT3        DATA STORED CORRECTLY
                       ; CALLED FROM AN INPUT SERVICE ROUTINE WITH A DATA ITEM IN AC DAT.
                       ; STORES THE DATA ITEM IN THE BUFFER, CHECKING TO SEE IF IT WERE
                       ; THE FIRST ITEM ON THE BUFFER AND SETTING UP THE POINTER AND
                       ; WORD COUNT APPROPRIATELY CHECKING THE MODE TO SEE IF ANY SPECIAL
                       ; PROCESSING NEED BE DONE. FOR EXAMPLE, THE TERMINATION
                       ; OF A BUFFER ON CERTAIN CHARACTERS IN OTHER MODES, OR IF THE BUFFER
                       ; IS FULL. THERE ARE THREE RETURNS FROM THIS ROUTINE: THE FIRST
                       ;RETURN OCCURS ON AN ERROR CONDITION, THE SECOND RETURN OCCURS
                       ;ON A BLOCK FULL CONDITION OR BLOCK COMPLETE CONDITION, THE THIRD
                       ;RETURN OCCURS ON THE DATA STORED CORRECTLY CONDITION.  THIS
                       ;ROUTINE ALSO DOES SOME CHECKING ON INPUT OF BINARY RECORD,
                       ;PAPER TAPE OR CARDS.
                       ;CALLING SEQUENCE
                       ;	PUSHJ PDP,STOSQD
                       ;	XXXX		ALWAYS SKIPS 
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;STORES THE WORD COUNT:=C(DEVPTR 18-35) -C(DEVIAD 18-35) - 1
                       ;IN THE BUFFER.
                       STODAT:
045410 / 607000,,000004          TLNN      000004             ;; IS THIS FIRST ITEM OF BUFFER?
045411 / 254000,,045414          JRST      045414             ;;NO
045412 / 260140,,045367         PUSHJ  PDP,045367             ;;SET UP A NEW BUFFER. ITEM:=(BUFFER 
                       ;SIZE - 1)*[36/BYTE SIZE]
045413 / 263140,,000000          POPJ  PDP,                   ;
                       STO0:
045414 / 135100,,037574           LDB TAC1,037574             ;;DATA MODE
045415 / 306100,,000014          CAIN TAC1,000014             ;;MODE=BINARY?
045416 / 254000,,045463          JRST      STOBIN             ;
045417 / 621000,,000004           TLZ       IOFST             ;
                       STO1:
045420 / 136246,,000010          IDPB  DAT,DEVPTR(DEVDAT)     ;;STORE DATA IN BUFFER.
045421 / 302100,,000000          CAIE TAC1,                   ;;MODE=ASCII, IMAGE, OR BINARY?
045422 / 306100,,000010          CAIN TAC1,     I             ;
045423 / 254000,,045437          JRST      STOAIB             ;
045424 / 302100,,000013          CAIE TAC1,000013             ;;IMAGE BINARY?
045425 / 306100,,000014          CAIN TAC1,000014             ;;CHECKSUM BINARY?
045426 / 254000,,045437          JRST      045437             ;;YES
045427 / 405240,,000177          ANDI  DAT,000177             ;;NO, MUST BE ASCII LINE MODE.
045430 / 307240,,000014          CAIG  DAT,000014             ;;LINE FEED,FORM FEED, OR VERTICAL TAB?
045431 / 305240,,000012         CAIGE  DAT,    12             ;
045432 / 254000,,045434          JRST      045434             ;;NO
045433 / 254000,,045455          JRST      045455             ;;YES
045434 / 365200,,037400         SOJGE ITEM,037400             ;;ITEM:=C(ITEM)-1. IS C(ITEM)>OR=0?
                       STOE1:
045435 / 660000,,040000           TRO      040000             ;;IOBKTL:=1
045436 / 263140,,000000          POPJ  PDP,                   ;
                       STOAIB:
045437 / 367200,,037400          SOJG ITEM,CPOPJ2             ;;	ITEM:=C(ITEM)-1. IS C(ITEM)>0?
045440 / 306100,,000000          CAIN TAC1,                   ;;MODE=ASCII?
045441 / 254000,,045455          JRST      045455             ;;YES
045442 / 306100,,000014          CAIN TAC1,000014             ;;MODE=BINARY?
045443 / 254000,,045473          JRST      045473             ;;YES, COMPUTE CHECKSUM AND CHECK.
045444 / 260140,,045337         PUSHJ  PDP,045337             ;;ITEM:=(BUFFER SIZE-1)*[36/BYTE SIZE]
                       ; - C(DEVCTR)
045445 / 274206,,000011           SUB ITEM,DEVCTR(DEVDAT)     ;
045446 / 200106,,000007          MOVE TAC1,DEVIAD(DEVDAT)     ;;STORE ITEM COUNT
045447 / 271200,,000001          ADDI ITEM,000001             ;;IN FIRST WORD OF BUFFER
045450 / 344100,,045461          AOJA TAC1,STOSQE             ;
                       STOSQD:
045451 / 627000,,000004          TLZN      000004             ;; FIRST CALL?
045452 / 254000,,045455          JRST      045455             ;;NO
045453 / 260140,,045367         PUSHJ  PDP,045367             ;;YES, CLEAR BUFFER,SET ITEM COUNT
045454 / 263140,,000000          POPJ  PDP,                   ;;ADDRESS CHECK
                       STOSQF:
045455 / 200106,,000007          MOVE TAC1,DEVIAD(DEVDAT)     ;;REL. ADR. OF BUFFER
045456 / 350000,,000002           AOS        TAC1             ;
045457 / 550206,,000010          HRRZ ITEM,DEVPTR(DEVDAT)     ;;ITEM:=C(DEVPTR 18-35) -
                       ;C(DEVIAD 18-35) -1
045460 / 275202,,000000          SUBI ITEM,      (TAC1)       ;
                       STOSQE:
045461 / 542220,,000002          HRRM ITEM,@000002            ;;WORD COUNT TO FIRST WORD IN BUFFER
045462 / 254000,,037401          JRST      037401             ;;EXIT2. BLOCK COMPLETE
                       STOBIN:
045463 / 627000,,000004          TLZN      000004             ;;WILL THE NEXT ITEM BE THE FIRST ITEM
045464 / 254000,,045420          JRST      045420             ;;OF A BUFFER?  IOFST:=0
045465 / 550040,,000005          HRRZ  TAC,000005             ;;YES.
045466 / 313040,,000004         CAMLE  TAC,000004             ;;IS WORD COUNT <OR= (BUFFER SIZE-1)*
045467 / 254000,,045435          JRST      045435             ;;   [36/BYTE SIZE]?
045470 / 200200,,000001          MOVE ITEM,000001             ;;ITEM:=WORD COUNT
045471 / 202266,,000010         MOVEM  DAT,@DEVPTR(DEVDAT)    ;;STORE WORD COUNT IN BUFFER
045472 / 254000,,037400          JRST      037400             ;;EXIT3.  DATA STORED CORRECTLY.
                       STOBND:
045473 / 550106,,000007          HRRZ TAC1,DEVIAD(DEVDAT)     ;
045474 / 260140,,045043         PUSHJ  PDP,045043             ;;COMPUTE CHECKSUM
045475 / 270106,,000007           ADD TAC1,DEVIAD(DEVDAT)     ;
045476 / 510120,,000002          HLLZ TAC1,@000002            ;;DATA CHECKSUM=COMPUTED CHECKSUM?
045477 / 316040,,000002          CAMN  TAC,  TAC1             ;
045500 / 254000,,037401          JRST      037401             ;;EXIT2. BLOCK COMPLETE
045501 / 660000,,100000           TRO      100000             ;;IODTER:=1
045502 / 254000,,037403          JRST      037403             ;;EXIT1.  CHECKSUM ERROR
                       ;RUN CONTROL IS A COLLECTION OF ROUTINES WHICH
                       ;SET AND CLEAR BITS IN THE JOB STATUS WORDS OF
                       ;ALL JOBS SO THAT THE SCHEDULER WILL START AND STOP
                       ;THEM ACCORDINGLY
                       ;COMMON ERROR STOPPING ROUTINES
                       ;CALLED AT ANY LEVEL(UUO,CLK, OR INTERRUPT)
                       ;CALL:	MOVE ITEM,JOB CAUSING ERROR OR BEING STOPPED
                       ;	MOVE DEVDAT,ADRRESS OF THAT JOB TTY DEVICE DATA BLOCK
                       ;	MOVE DAT,BYTE POINTER TO LAST CHAR. ALREADY MOVED
                       ;			;TO TTY OUTPUT BUFFER
                       ;	PUSHJ PDP,KSTOP,PHOLD,HOLD,OR ESTOP
                       ;	NEVER RETURN IF CALLED AT UUO LEVEL
                       ;ROUTINE TO STOP JOB AFTER KJOB COMMAND
                       ;CALLED AT UUO LEVEL IF JOB HAD CORE,CLK LEVEL IF NOT
                       KSTOP:
045503 / 205040,,150000         MOVSI  TAC,150000             ;;CLEAR BITS 
045504 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
045505 / 336004,,027120         SKIPN      JBTADR(J)          ;
045506 / 254000,,045532          JRST      KSTOP1             ;
045507 / 260140,,000316         PUSHJ    P,PUSHIT             ;
045510 / 260140,,044066         PUSHJ    P,DISMES             ;
045525 / 260140,,044104         PUSHJ    P,DISJOB             ;
045526 / 260140,,044076         PUSHJ    P,044076             ;
045527 / 260140,,043761         PUSHJ    P,DISFLU             ;
045530 / 260140,,000347         PUSHJ    P,000347             ;
045531 / 260140,,000341         PUSHJ    P, POPIT             ;
                       KSTOP1:
045532 / 211040,,000010         MOVNI  TAC,000010             ;;PUT HIM IN NULL QUEUE
045533 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;;SO SWAPPER WILL FORGET ABOUT HIM
045534 / 260140,,046027         PUSHJ    P, REQUE             ;
045535 / 260140,,067037         PUSHJ    P,067037             ;;FLUSH FROM SWAP IN LIST
045536 / 402004,,027720         SETZM      PRJPRG(J)          ;;KEEP TABLE ACCURATE
045537 / 402004,,030142         SETZM      JOBNAM(J)          ;
045540 / 402004,,031243         SETZM       TTIME(J)          ;;CLEAR RUN TIME FOR R. GORIN
045541 / 402004,,030342         SETZM      JBTBTM(J)          ;;CLEAR LOGIN TIME FOR ACCOUNTING
045542 / 402004,,026320         SETZM      JBTGSL(J)          ;;CLEAR GUARANTEED SERVICE WORDS
045543 / 476004,,034065         SETOM      JBTWKM(J)          ;;WAKE ON ALL INTERRUPTS
045544 / 254000,,045621          JRST      ESTOP2             ;
                       ;ROUTINE TO STOP JOB, SET ERROR BIT AND PRINT MESSAGE - HOLD, PHOLD
                       ;THEN ADD ↑C<CRLF><CRLF><PERIOD>
                       ;CALL:	MOVEI TAC,ADR. OF MESSAGE
                       PHOLD:
045545 / 260140,,042670         PUSHJ    P,042670             ;;MOVE MESSAGE TO TTY OUTPUT BUFFER
                       ;FALL INTO HOLD
                       ;ROUTINE TO STOP JOB, SET ERROR BIT,
                       ;AND ADD "↑C<CRLF><CRLF><PERIOD>
                       HOLD:
045546 / 260140,,042713         PUSHJ    P,PRCRCC             ;
045547 / 260140,,137704         PUSHJ    P,137704             ;;MAKE SURE TTY STAYS IN MONITOR MODE
                       ;AND START TTY TYPING OUT MESSAGE
                       ;FALL INTO ESTOP
                       ;ROUTINE TO STOP USER AND FLAG AS ERROR STOP - ESTOP, MSTOP
                       MSTOP:
                       ESTOP:
045550 / 322200,,037403         JUMPE    J, CPOPJ             ;
045551 / 332013,,023425         SKIPE      SPWUUF(PID)        ;;SPACEWAR LEVEL?
045552 / 700700,,077000         CONSZ   PI,077000             ;;YES. ABOVE CH 7?
045553 / 304000,,000000          CAIA                         ;
045554 / 254000,,150447          JRST      150447             ;;ERROR AT SPACEWAR LEVEL
045555 / 205040,,100000         MOVSI  TAC, JACCT             ;
045556 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;NO LONGER AN ACCOUNTING PROGRAM
045557 / 205040,,010000         MOVSI  TAC,  JLOG             ;
045560 / 612044,,026114          TDNE  TAC,JBTSTS(J)          ;;IS THIS JOB REALLY LOGGED IN?
045561 / 254000,,045630          JRST      045630             ;;YES, PROCEED NORMALLY
045562 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;
045563 / 254000,,045630          JRST      045630             ;;NOT LOGGED IN AND NO CORE.
045564 / 700700,,077400         CONSZ   PI,077400             ;;NOT LOGGED IN.  ARE WE AT UUO LEVEL
045565 / 254000,,045573          JRST      045573             ;;NO, MUST START MONITOR JOB TO KILL JOB
045566 / 336013,,023431         SKIPN      INTACT(PID)        ;
045567 / 254000,,045577          JRST      045577             ;;AT UUO LEVEL BUT NOT USER INT LEVEL
                       ESTP3C:
045570 / 260140,,045613         PUSHJ    P,045613             ;;SET JLOG, SETUP MONJOB,
045571 / 476000,,026113         SETOM      026113             ;;TELL CH7 WE'RE COMING FROM ESTOP
045572 / 254000,,046152          JRST      046152             ;;GET INTO CHANNEL 7
                       ESTP3B:
045573 / 316213,,024061          CAMN    J,   JOB(PID)        ;;PI IN PROGRESS.  JLOG OFF
045574 / 336013,,023431         SKIPN      INTACT(PID)        ;
045575 / 254000,,045613          JRST      ESTOP3             ;
045576 / 254000,,045570          JRST      045570             ;;CURRENT JOB IS AT USER-INT LEVEL
                       ESTP3A:
045577 / 260140,,052611         PUSHJ    P,052611             ;;AT UUO LEVEL, CAN KILL JOB FROM HERE
045600 / 260140,,000316         PUSHJ    P,PUSHIT             ;
045601 / 260140,,044066         PUSHJ    P,DISMES             ;
045611 / 260140,,000341         PUSHJ    P, POPIT             ;
045612 / 254000,,045630          JRST      045630             ;;SET ERROR BIT
                       ESTOP3:
045613 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;; FINISH LOGGING IN JOB SO WE WON'T GET HERE AGAIN
152421 / 154451,,450115                                       ;
045614 / 200040,,152421          MOVE  TAC,152421             ;
045615 / 202044,,030142         MOVEM  TAC,JOBNAM(J)          ;; (EVEN IF WE FAIL TO KILL THIS, WE GET NEW PHANTOM)
045616 / 260140,,051042         PUSHJ    P,051042             ;; MAKE SURE THE LOSER CAN'T GET ANY MORE ERRORS - RPH
045617 / 265100,,045737           JSP TAC1,045737             ;; SET MONITOR JOB TO RUN AND KILL JOB
045620 / 254000,,052607          JRST      052607             ;; HERE AT UUO LEVEL
                       ;GET HERE FROM KSTOP
                       ESTOP2:
045621 / 322200,,037403         JUMPE    J,037403             ;;IS THIS ERROR IN JOB 0?
045622 / 332013,,023425         SKIPE      SPWUUF(PID)        ;;JOB IN SPACEWAR MODE ?
045623 / 700700,,077000         CONSZ   PI, 77000             ;
045624 / 304000,,000000          CAIA                         ;
045625 / 254000,,150447          JRST      150447             ;;YES. GO TO SPWSER.
045626 / 205040,,100000         MOVSI  TAC,100000             ;; ZERO OUT ACCT BIT
045627 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;; SO IF LOGIN BLOWS, WE CAN KILL IT!!
                       ESTOP4:
045630 / 205040,,020000         MOVSI  TAC,020000             ;; SET ERROR BIT
045631 / 437044,,026114          IORB  TAC,JBTSTS(J)          ;;SO JOB CAN NOT CONTINUE(CONT COM.)
045632 / 602040,,100000          TRNE  TAC, JLOCK             ;
154115 / 205040,,072774         MOVSI  TAC,UNLOKC             ;
154116 / 540040,,000004           HRR  TAC,     J             ;
154117 / 700600,,000400          CONO   PI, PIOFF             ;
154120 / 136040,,013624          IDPB  TAC,013624             ;;USE DPYSLUR CLOCK QUEUE.
154121 / 700600,,000200          CONO   PI,  PION             ;
154122 / 254000,,154123          JRST      154123             ;
045633 / 254000,,154115          JRST      154115             ;
045634 / 260140,,051042         PUSHJ    P,051042             ;; CLEAR THE USER INTERRUPT SYSTEM
045635 / 312200,,026107          CAME    J,026107             ;;SYSTEM TAPE USER?
045636 / 254000,,045656          JRST      045656             ;;NO
045637 / 205040,,637163         MOVSI  TAC,637163             ;;FIND SYS DDB
045640 / 260140,,044663         PUSHJ    P,044663             ;;SYSTEM ERROR IF NOT FOUND
045641 / 254000,,045644          JRST      045644             ;;BARF!
045642 / 260140,,065541         PUSHJ    P,065541             ;;YES, RELEASE SYSTEM TAPE WITHOUT WAITING
045643 / 254000,,045656          JRST      ESTOP6             ;
                       ESTOP5:
045644 / 260140,,000316         PUSHJ    P,PUSHIT             ;
045645 / 260140,,044320         PUSHJ    P,044320             ;
045646 / 260140,,044066         PUSHJ    P,DISMES             ;
045655 / 260140,,000341         PUSHJ    P, POPIT             ;
                       ESTOP6:
045656 / 316213,,024061          CAMN    J,   JOB(PID)        ;;IF NOT CURRENT JOB
045657 / 700700,,077400         CONSZ   PI,077400             ;;OR AT INTERRUPT LEVEL
045660 / 254000,,045672          JRST      045672             ;;JUST GO TO STOP1 AS ALWAYS
045661 / 332013,,023431         SKIPE      INTACT(PID)        ;
045662 / 254000,,045672          JRST      045672             ;;ALSO IF FROM USER INT
045663 / 260140,,045700         PUSHJ    P,045700             ;;OTHERWISE PUT HIM IN STOPQ, ETC.
045664 / 200044,,026620          MOVE  TAC, UUOPC(J)          ;
045665 / 607040,,010000          TLNN  TAC,USRMOD             ;
045666 / 634040,,000001          TDZA  TAC,000001             ;;GIVE HIM 0 IF PC WAS EXEC
045667 / 541041,,777777          HRRI  TAC,777777(TAC)        ;;ELSE BACK IT UP TO LOSING UUO
045670 / 202044,,026620         MOVEM  TAC, UUOPC(J)          ;
045671 / 254000,,057176          JRST      057176             ;;NOW CATCH HIM ON HIS WAY "BACK"
                       ;ROUTINE TO STOP ANY JOB FROM BEING SCHEDULED - STOP1, SETSTP
                       ;CALL:
                       ;	MOVE	J, JOB NUMBER
                       ;	PUSHJ	P, STOP1
                       ;	EXIT	;RETURN HERE IMMEDIATELY, IF CALLED FROM HIGHER
                       ;PRIORITY PI CHANNEL THAN CLK(LOWEST), OTHERWISE WHEN JOB IS RUNABLE
                       ;CALLED FROM COMMAND DECODER WHEN <CONTROL>C TYPED IN BY USER
                       STOP1:
045672 / 260140,,045700         PUSHJ    P,045700             ;;SET IT TO STOPQ, ETC
045673 / 312213,,024061          CAME    J,   JOB(PID)        ;;IS THIS JOB CURRENT USER
045674 / 254000,,046027          JRST      046027             ;;NO, SET REQUE JOB FLAG
045675 / 332013,,023431         SKIPE      INTACT(PID)        ;
045676 / 476000,,026113         SETOM      026113             ;;TELL CH7 WE'RE COMING FROM ESTOP
045677 / 254000,,046152          JRST      046152             ;;YES, CALL WSCHED TO WAKE CH7
                       ;THIS ROUTINE DOES ALL THE WORK OF STOPPING THE GUY WITHOUT ACTIVATING CH7
                       SETSTP:
045700 / 205040,,400000         MOVSI  TAC,   RUN             ;
045701 / 700600,,000400          CONO   PI,000400             ;;DONE AT INTERUPT LEVEL HIGHER THAN DT LEVEL
045702 / 312200,,026107          CAME    J,026107             ;;IS THIS JOB CURRENTLY USING THE SYSTEM TAPE?
045703 / 616044,,026114          TDNN  TAC,JBTSTS(J)          ;;NO, IS RUN BIT OFF IN JOB STATUS WORD
045704 / 254000,,045715          JRST      045715             ;;YES
045705 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;NO, SO CLEAR IT
045706 / 700600,,000200          CONO   PI,  PION             ;
045707 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;;GET JOB WAIT QUEUE CODE(IF ANY)
045710 / 307040,,000004          CAIG  TAC,000004             ;;DOES STATE HAVE Q ?
045711 / 371001,,021653          SOSL      REQTAB(TAC)        ;;YES. REDUCE IT.
045712 / 254000,,045715          JRST      045715             ;;NO
045713 / 375001,,021646         SOSGE      AVALTB(TAC)        ;;YES REDUCE  COUNT
045714 / 402001,,021646         SETZM      AVALTB(TAC)        ;;CLEAR AVAL FLAG IF NO ONE WAITING
                       STOP1A:
045715 / 700600,,000200          CONO   PI,000200             ;;MAKE SURE PI ON
045716 / 211040,,000011         MOVNI  TAC,000011             ;; REQUE JOB TO STOP QUEUE
045717 / 214104,,020574          MOVM TAC1,JOBQUE(J)          ;
045720 / 302100,,000010          CAIE TAC1,000010             ;; UNLESS HE IS IN THE NULL QUEUE
045721 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
045722 / 316200,,022205          CAMN    J,022205             ;;WERE WE WAITING TO BE LOCKED IN?
045723 / 402000,,022205         SETZM      022205             ;;YES. WELL, THERE'S NO ONE THERE ANYMORE.
045724 / 263140,,000000          POPJ    P,                   ;;↑C, CONTINUE WILL NOT UNLOCK A JOB!
                       ;DLYCOM     ROUTINE TO REQUE JOB WHICH HAS HAD A COMMAND TYPED
                       ;WHICH NEEDS CORE AND THE CORE IMAGE IS ON THE DISK.
                       ;OR IS IN CORE AND HAS ACTIVE DEVICES.
                       ;CALLED FROM COMMAND DECODER
                       ;CALL:	MOVE ITEM,JOB NO.
                       ;	PUSHJ PDP,DLYCOM
                       DLYCOM:
045725 / 205040,,200000         MOVSI  TAC,200000             ;; SET COMMAND WAIT BIT
045726 / 437044,,026114          IORB  TAC,JBTSTS(J)          ;;IN JOB STATUS WORD
045727 / 607040,,002000          TLNN  TAC,002000             ;;DO WE NEED HIM IN??
045730 / 263140,,000000          POPJ    P,                   ;;IN ALREADY
045731 / 205040,,100000         MOVSI  TAC,COMSNB             ;
045732 / 254000,,066763          JRST      SETSIN             ;
                       ;ROUTINE TO PUT JOB IN NO CORE QUEUE
                       NOCORQ:
045733 / 260140,,067037         PUSHJ    P,067037             ;; FLUSH FROM SWAP IN LIST
045734 / 201040,,000010         MOVEI  TAC,000010             ;; NO JOB NUMBER OR NO CORE QUEUE
045735 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;
045736 / 254000,,046027          JRST       REQUE             ;
                       ;ROUTINE TO SETUP MONITOR JOB TO RUN LATER AT UUO LEVEL - MONJOB
                       ;CALLED BY COMMANDS WHICH MAY OR MAY NOT NEED TO
                       ;RUN MONITOR JOB DEPENDING ON WHETHER JOB HAS CORE(KJOB,IJOB)
                       ;TTY WILL REMAIN IN MONITOR MODE
                       ;JOB MUST HAVE CORE ASSIGNED
                       ;CALL:	MOVE ITEM, JOB NUMBER
                       ;	MOVEI TAC1,ADDR. OF MONITOR JOB TO BE RUN
                       ;	PUSHJ PDP,MONJOB
                       ;WHEN SCHEDULED TO RUN, MONITOR JOB MUST SET UP ITS OWN ACS
                       MONJOB:
045737 / 260140,,045773         PUSHJ    P,045773             ;; START WITH PC IN MONITOR
045740 / 254000,,046021          JRST      046021             ;;MCF(JBS);SET TTY TO START JOB WHEN COMMAND RESPONSE
                       ;IS FINISHED AND KEEP TTY IN MONITOR MODE
                       ;MONSTR ROUTINE TO SETUP ACS FOR MONITOR JOB STARTING AT UUO LEVEL
                       ;SETS UP J, WITH JOB NO.; PROG WITH RELOCATION, AND P
                       ;WITH PUSH DOWN LIST ADR. IN JOB DATA AREA
                       ;USED BY KJOB,CORE 0,SAVE,GET,RUN,R AND FINISH COMMANDS
                       ;CALL:	MOVEI TAC1,MONITOR JOB STOP ADDRESS
                       ;	JSP TAC,MONSTR
                       ;	RETURN WITH ACS P, PROG AND J SETUP
                       MONSTR:
045741 / 201540,,000000         MOVEI  PID,                   ;
045742 / 700340,,000040         CONSO  APR, MAOFF             ;
045743 / 201540,,001216         MOVEI  PID, P2PID             ;
045744 / 200213,,024061          MOVE    J,   JOB(PID)        ;; GET CURRENT JOB NUMBER
045745 / 200344,,027120          MOVE JDAT,JBTDAT(J)          ;;ADR. OF JOB DATA AREA
045746 / 250640,,000001          EXCH  AC1,   TAC             ;
045747 / 265040,,074422           JSP  TAC,074422             ;; GET A PUSHDOWN LIST FOR US
045750 / 250640,,000001          EXCH  AC1,000001             ;; GET OUR RETURN ADDRESS BACK
045751 / 261140,,000002          PUSH    P,000002             ;;SAVE STOP ADRRESS
045752 / 254001,,000000          JRST            (TAC)        ;;RETURN AND DO MONITOR JOB
                       ;ROUTINE TO SET JOB STATE TO BE SCHEDULED TO RUN - USTART, MSTART
                       ;WITH SPECIFIED STARTING ADDRESS INCLUDING PC FLAGS
                       ;CALLED ONLY WHEN JOB IN CORE AND AFTER JOB HAS BEEN
                       ;SAFELY STOPPED IN ONE OF 2 STATES:
                       ;1) PC IN USER MODE
                       ;2) JOB IN A WAIT FOR SHARABLE DEVICE, OR IO WAIT
                       ;CALL:	MOVE TAC1,STARTING PC
                       ;	MOVE ITEM, JOB NUMBER
                       ;	MOVE JDAT,ADR. OF JOB DATA AREA WHICH MUST BE IN CORE
                       ;	PUSHJ PDP,USTART(PC TO USER MODE),MSTART(PC TO MONITOR MODE)
                       ;	RETURN HERE IMMEDIATELY
                       USTART:
045753 / 200047,,000073          MOVE  TAC, JOBPC(JDAT)       ;; GET OLD PC
045754 / 603040,,010000          TLNE  TAC,010000             ;;IS IT IN USER MODE TOO?
045755 / 254000,,045767          JRST      045767             ;;YES, DUMP ACS AND PC FLAGS ARE ALREADY HIS
045756 / 201047,,000020         MOVEI  TAC,JOBDAC(JDAT)       ;;NO, MOVE USERS(UUO) ACS TO DUMP ACS
045757 / 504040,,000007           HRL  TAC,000007             ;;SOURCE=REL. 0,DEST.=JOBDAC IN JOB DATA AREA
045760 / 251047,,000037           BLT  TAC,JOBD17(JDAT)       ;;MOVE ALL ACS
045761 / 200044,,026620          MOVE  TAC, UUOPC(J)          ;; UUO PC HAS LAST KNOWN PC
045762 / 607040,,010000          TLNN  TAC,010000             ;;IF NOT USEER MODE
045763 / 200044,,026720          MOVE  TAC,UUOOPC(J)          ;;TRY THIS
045764 / 607040,,010000          TLNN  TAC,010000             ;;IS IT?
045765 / 621040,,777777           TLZ  TAC,777777             ;;NO, CLEAR ALL PC FLAGS
045766 / 541041,,777777          HRRI  TAC,777777(TAC)        ;;SUBTRACT 1 FROM RIGHT HALF AND
                       ;PRESERVE LH PC FLAGS.
                       ;(RH=0 ON HALT 0 OR FIRST START)
                       USTRT1:
045767 / 500100,,000001           HLL TAC1,000001             ;;PRESERVE USER APR FLAGS
045770 / 661100,,010000           TLO TAC1,010000             ;;MAKE SURE NEW PC IN USER MODE
045771 / 621100,,000037           TLZ TAC1,000037             ;;MAKE SURE NO INDIRECT BITS OR INDEX FIELD
045772 / 254000,,046000          JRST      MSTAR1             ;
                       MSTART:
045773 / 200047,,000073          MOVE  TAC, JOBPC(JDAT)       ;; PICK UP USER'S PC
045774 / 603040,,010000          TLNE  TAC,010000             ;;IN USER MODE?
045775 / 254000,,046000          JRST      046000             ;;YES, THIS IS CORRECT JOBOPC
045776 / 200044,,026620          MOVE  TAC, UUOPC(J)          ;;HERE IS LAST USER PC (MAYBE)
045777 / 541041,,777777          HRRI  TAC,777777(TAC)        ;;JUST LIKE USTART
                       MSTAR1:
046000 / 603040,,010000          TLNE  TAC,010000             ;;IF IT STILL ISN'T USER PC LEAVE HIS OLD ONE
046001 / 202047,,000130         MOVEM  TAC,JOBOPC(JDAT)       ;; STORE IT FOR LATER USE
046002 / 202107,,000073         MOVEM TAC1, JOBPC(JDAT)       ;; STORE NEW PC
046003 / 316213,,024061          CAMN    J,   JOB(PID)        ;;IS THIS CURRENT JOB?
046004 / 202113,,024067         MOVEM TAC1, USRPC(PID)        ;;YES.  STORE IN SYSTEM CORE AS WELL.
046005 / 332013,,023431         SKIPE      INTACT(PID)        ;
046006 / 312200,,024062          CAME    J,024062             ;;MAKE SURE THAT USRPC IN THE INTERRUPT STACK
046007 / 254000,,046012          JRST      046012             ;;GETS UPDATED
046010 / 200040,,023474          MOVE  TAC, INTSP             ;
046011 / 202101,,777756         MOVEM TAC1,777756(TAC)        ;
                       MSTAR2:
046012 / 260140,,143067         PUSHJ    P,143067             ;;UPDATE INTERACTION RUN TIME FOR THIS JOB
046013 / 205040,,020370         MOVSI  TAC,020370             ;
046014 / 412044,,026114        ANDCAM  TAC,JBTSTS(ITEM)       ;;CLEAR ERROR AND WAIT STATUS BITS
046015 / 211040,,000014         MOVNI  TAC,000014             ;; REQUE JOB TO RUN QUEUE
046016 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
046017 / 476004,,032043         SETOM       STIME(ITEM)       ;; TELL SWAPPER THIS CORE IMAGE HAS BEEN MODIFIED
046020 / 254000,,137701          JRST      137701             ;;SET TTY STATE TO INITIAL COND.
                       ;TTYUSR OR TTYURC SHOULD BE CALLED
                       ;TO INDICATE WHETHER TTY TO USER OR EXEC MODE
                       ;AND THAT JOB IS TO RUN(RUN BIT =1) WHEN
                       ;MONITOR COMMAND RESPONSE FINISHES.
                       ;SET MONITOR MODE
                       ;ROUTINE TO SET JOB STATUS RUN BIT(RUN)
                       ;CALLED BY SCANNER SERVICE WHEN TTY MONITOR COMMAND
                       ;RESPONSE FINISHES.  THIS ACTION IS ENABLED BY CALLING
                       ;TTYUSR, OR TTYURC IN SCNSER
                       ;CALL:	MOVE ITEM,JOB NUMBER
                       ;	PUSHJ PDP,SETRUN
                       SETRUN:
152714 / 000004,,026114                                       ;
152714 / 250504,,026114 POINT 5,04026114,JWPOS                ;
046021 / 135040,,152714           LDB  TAC,152714             ;;GET OLD WAIT QUEUE CODE
046022 / 322040,,046025         JUMPE  TAC,046025             ;;NONE
046023 / 352001,,021653          AOSE      REQTAB(TAC)        ;;DEVICE AVAILABLE?
046024 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;;NO - PUT US BACK INTO WAIT Q
                       SETR1:
046025 / 205040,,400000         MOVSI  TAC,400000             ;;SET RUN BIT IN JOB STATUS WORD
046026 / 436044,,026114          IORM  TAC,JBTSTS(ITEM)       ;
                       REQUE:
046027 / 261140,,000001          PUSH    P,   TAC             ;
046030 / 201044,,021660         MOVEI  TAC,  QJOB(ITEM)       ;
046031 / 700600,,000400          CONO   PI, PIOFF             ;
046032 / 332001,,000000         SKIPE            (TAC)        ;
046033 / 254000,,046036          JRST      046036             ;
046034 / 250040,,021660          EXCH  TAC,  QJOB             ;
046035 / 562060,,021660         HRROM  TAC,@  QJOB            ;
046036 / 700600,,000200          CONO   PI,  PION             ;
046037 / 254000,,037376          JRST       TPOPJ             ;
                       ;ROUTINE TO PUT A JOB TO SLEEP AND WAKE UP AGAIN LATER
                       ;CALLED AFTER CLOCK QUEUE REQUEST PUT IN BY UUO ROUTINE
                       SETSLP:
046040 / 205040,,000400         MOVSI  TAC,000400             ;; FLAG THAT A CLOCK REQUEST
                       ;HAS BEEN PUT IN.
046041 / 436044,,026114          IORM  TAC,JBTSTS(ITEM)       ;;SO ONLY ONE PER JOB
046042 / 201640,,000005         MOVEI  AC1,000005             ;;SLEEP STATE CODE
046043 / 254000,,046101          JRST      046101             ;;SET STATUS AND RESCHEDULE
                       ;HERE AT CLOCK LEVEL WHEN CLOCK REQUEST TIMES OUT FOR SLEEP
                       ;JOB NO. IN AC TAC
                       WAKE:
046044 / 211100,,000014         MOVNI TAC1,000014             ;;RUN QUEUE CODE
046045 / 200200,,000001          MOVE ITEM,000001             ;;JOB NO.
046046 / 205040,,000400         MOVSI  TAC,000400             ;;CLEAR CLOCK REQUEST BIT FOR THIS JOB
046047 / 412044,,026114        ANDCAM  TAC,JBTSTS(ITEM)       ;;SO IT CAN PUT ANOTHER ONE IN
046050 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;;GET QUEUE CODE
046051 / 302040,,000005          CAIE  TAC,000005             ;;IS JOB STILL SLEEPING?
046052 / 263140,,000000          POPJ    P,                   ;;NO
046053 / 202104,,020574         MOVEM TAC1,JOBQUE(J)          ;;YES, STORE RUN QUEUE CODE
                       ;(CONTROL C, START CAN GET JOB OUT OF SLEEP)
046054 / 254000,,046027          JRST       REQUE             ;
                       ;ROUTINE TO GET DATA CONTROL AND ANOTHER SHARABLE DEVICE
                       ;JOB NEVER GETS ONE DEVICE AND WAITS FOR SECOND, SINCE TYPING
                       ;CONTROL C WOULD NEVER FINISH WITH FIRST DEVICE
                       ;CALL	PUSHJ PDP,GETDCXX
                       ;	AOSE XXREQ	;REQUEST COUNT FOR OTHER DEVICE
                       ;	RETURN WHEN BOTH AVAILABLE
                       GETDCD:
                       GETDCM:
046055 / 256023,,000000           XCT      @      (PDP)       ;;INCREASE SHARABLE DEVICE REQ. COUNT
                       GETWT:
046056 / 260140,,046077         PUSHJ  PDP,046077             ;;NOT AVAIL., GO WAIT FOR IT
046057 / 356000,,021656          AOSN      021656             ;;IS DATA CONTROL AVAILABLE?
046060 / 254000,,037401          JRST      037401             ;;YES, RETURN BOTH AVAILABLE
046061 / 200663,,000000          MOVE  AC1,@      (PDP)       ;;DATA CONTROL NOT AVAILABLE
046062 / 275640,,021653          SUBI  AC1,REQTAB             ;
046063 / 371015,,021653          SOSL      REQTAB(AC1)        ;;REDUCE REQ. COUNT FOR OTHER
                       ;SHARABLE DEVICE.
046064 / 476015,,021646         SETOM      AVALTB(AC1)        ;;SET AVAILABLE IF OTHER JOBS WAITING
046065 / 255000,,021656          JFCL      021656             ;;ARGUMENT FOR DCWAIT
046066 / 260140,,046075         PUSHJ  PDP,046075             ;;WAIT FOR DATA CONTROL FREE
046067 / 200663,,000000          MOVE  AC1,@      (PDP)       ;;INCREMENT REQ. COUNT
046070 / 356020,,000015          AOSN      @000015            ;;NOW IS SHARABLE DEVICE FREE?
046071 / 254000,,037401          JRST      037401             ;;YES
046072 / 371000,,021656          SOSL      021656             ;;NO, REDUCE DATA CONTROL REQUEST
046073 / 476000,,021651         SETOM      021651             ;;SET AVAIL., SOME OTHER JOB WAITING FOR IT
046074 / 254000,,046056          JRST      046056             ;;TRY AGAIN
                       ;ROUTINE TO WAIT FOR A SHARABLE DEVICE
                       ;CALLED AT UUO LEVEL ONLY BY DEVICE SERVICE ROUTINES
                       ;CALL:	AOSLE XXREQ		;ADD 1 TO SHARABLE DEVICE REQUEST COUNT
                       ;				;IS DEVICE AVAILABLE?
                       ;	PUSHJ PDP,XXWAIT	;NO, PUT JOB IN WAIT QUEUE
                       ;	RETURN WHEN DEVICE AVAILABLE
                       ;INITIALLY THE REQUEST COUNT IS -N, WHERE N IS THE
                       ;NUMBER OF JOBS WHICH CAN USE THE SHARABLE DEVICE AT THE SAME TIME
                       ;A REQUEST COUNT OF 0 MEANS THE MAXIMUM NO. OF JOBS ARE
                       ;USING THE DEVICE, A POSITIVE NUMBER IS THE
                       ;NUMBER OF JOBS WAITING IN THE SHARABLE DEVICE WAIT QUEUE
                       MTWAIT:
                       DTWAIT:
                       DCWAIT:
                       STWAIT:
                       DVWAIT:
046075 / 200643,,000000          MOVE  AC1,      (PDP)        ;; GET ADDRESS OF CALLER
046076 / 334655,,777776         SKIPA  AC1,777776(AC1)        ;;GET AOSLE XXREQ INSTRUCTION
                       DVWAT1:
046077 / 200663,,777777          MOVE  AC1,@777777(PDP)       ;;GET ADR. OF CALLER OF THIS ROUTINE
046100 / 275640,,021653          SUBI  AC1,021653             ;;COMPUTE WAIT-STATE QUEUE CODE
                       SETSTT:
046101 / 200753,,024061          MOVE  AC3,   JOB(PID)        ;;CURRENT JOB NO.
046102 / 553000,,000015         HRRZS      000015             ;; CLEAN UP JOB QUEUE CODE
046103 / 212657,,020574         MOVNM  AC1,JOBQUE(AC3)        ;;STORE IN JOB STATUS WORD
046104 / 254000,,046124          JRST      046124             ;;GO SCHEDULE ANOTHER AND RETURN TO CALLER
                       ;WHEN SHARABLE DEVICE BECOMES AVAILABLE
                       ;SEE CLOCK AND CLKCSS
                       ;WORD WAIT QUEUE CODE
                       ;SETIOD - ROUTINE TO SET JOB TO RUN AFTER IT HAS BEEN STOPPED
                       ;BECAUSE IT HAD TO WAIT FOR IO TO COMPLETE FOR SOME DEVICE
                       ;EACH SERVICE ROUTINE AT INTERRUPT LEVEL
                       ;CHECK EACH TIME IT FINISHED A TASK(BUFFERFUL)
                       ;TO SEE IF THE JOB USING THE DEVICE HAS
                       ;PREVIOUSLY CAUGHT UP WITH DEVICE AND HAS BEEN STOPPED
                       ;CALL:	MOVE DEVDAT,ADR. OF DEVICE DATA BLOCK
                       ;	MOVE IOS,DEVIOS(DEVDAT)	;GET DEVICE IO STATUS WORD FROM DDB
                       ;	TLZE IOS,IOW	;IS JOB IN AN IO WAIT FOR THIS DEVICE?
                       ;	PUSHJ PDP,SETIOD	;YES, GO FLAG JOB TO START UP AGAIN
                       ;	RETURN
                       ; REQUEUES JOB TO A RUN QUEUE
                       ;THE SCHEDULER THEN SEES THAT THIS JOB HAS ITS
                       ;IO WAIT SATISFIED AND IS WAITING TO BE RUN AGAIN
                       ;!! No longer clobbers ac's !  	DWP.
                       STTIOD:
151670 / 777777,,777763                                       ;
046105 / 261140,,151670          PUSH    P,151670             ;;HE'S A TTY.  PUT HIM IN SPECIAL HIGH-PRIORITY QUEUE
046106 / 304000,,000000          CAIA                         ;
                       SETIOD:
151671 / 777777,,777764                                       ;
046107 / 261140,,151671          PUSH    P,151671             ;; REQUE TO WAIT SATISFIED QUEUE
046110 / 250203,,000000          EXCH    J,      (P)          ;
046111 / 261140,,000004          PUSH    P,     J             ;
046112 / 135200,,037575           LDB    J,037575             ;;Get job no.
046113 / 331004,,026114         SKIPL      JBTSTS(J)          ;; IS JOB STILL RUNNING?
153473 / 262140,,000004           POP    P,000004             ;;No.
153474 / 262140,,000004           POP    P,     J             ;
153475 / 263140,,000000          POPJ    P,                   ;
046114 / 254000,,153473          JRST      153473             ;
046115 / 262144,,020574           POP    P,JOBQUE(J)          ;
046116 / 260140,,046027         PUSHJ  PDP,046027             ;;ARRANGE TO REQUE THIS JOB.
046117 / 262140,,000004           POP    P,     J             ;
                       NULTST:
046120 / 332013,,024061         SKIPE         JOB(PID)        ;;IS NULL JOB RUNNING?
046121 / 263140,,000000          POPJ  PDP,                   ;;NO LET OTHER JOB RUN
046122 / 700600,,000400          CONO   PI, PIOFF             ;
046123 / 254000,,046155          JRST       STOP2             ;
                       ;ROUTINE TO CAUSE CLK ROUTINE TO RESCHEDULE - WSCHED
                       ;CALLED AT ANY LEVEL
                       ;CALL:	PUSHJ PDP,STOP2	
                       ;	RETURN IMMEDIATELY EXCEPT IF AT UUO LEVEL
                       ;	IF AT UUO LEVEL, RETURN WHEN JOB IS RUNABLE AGAIN
                       WSCHED:
046124 / 322540,,046150         JUMPE  PID,WSCHD1             ;
046125 / 260140,,000316         PUSHJ    P,PUSHIT             ;
046126 / 700300,,000040         CONSZ  APR, MAOFF             ;
046127 / 254000,,046140          JRST      WSCHDA             ;
046130 / 260140,,044066         PUSHJ    P,DISMES             ;
046135 / 260140,,000341         PUSHJ    P, POPIT             ;
046136 / 260140,,043761         PUSHJ    P,043761             ;
046137 / 254000,,000365          JRST      000365             ;
                       WSCHDA:
046140 / 260140,,044066         PUSHJ    P,DISMES             ;
046147 / 260140,,000341         PUSHJ    P, POPIT             ;
                       WSCHD1:
046150 / 332013,,023425         SKIPE      SPWUUF(PID)        ;;MAKE SURE WE'RE NOT IN A SPACEWAR JOB
046151 / 254000,,150447          JRST      SPWERR             ;
                       WSCHD2:
046152 / 350000,,036161           AOS      036161             ;; MARK ANOTHER ONE GONE
046153 / 700600,,000400          CONO   PI,000400             ;;AVOID PREMATURE CLK INT
046154 / 476013,,024637         SETOM      SCHEDF(PID)        ;;THIS IS A SCHEDULING INTERRUPT
                       STOP2:
046155 / 523013,,024464         HLLOS      CLKFLG(PID)        ;;SET FLAG TO INDICATE CLK INTERRUPT
                       ;EVEN THOUGH CLK INTERRUPT IS NOT A TIME INTERRUPT
046156 / 700600,,004201          CONO   PI,004201(7-CLKCHN)   ;
                       ;TURN PI BACK ON AND REQUEST INTERRUPT TO
                       ;CLK PI CHANNEL(LOWEST PRIORITY CHANNEL)
046157 / 263140,,000000          POPJ    P,                   ;;INTERRUPT IMMEDIATELY IF AT UUO LEVEL
                       ;ROUTINE TO WAIT TILL DEVICE CATCHES UP WITH USER AND BECOMES INACTIVE
                       ;CALLING SEQUENCE
                       ;     PUSHJ PDP, WAIT1
                       ;     EXIT	  ALWAYS RETURNS HERE
                       ;IF THE DEVICE IS INACTIVE (IOACT=0), RETURNS TO EXIT. OTHERWISE, SETS
                       ;IOW:=1 AND ENTERS WAIT UNLESS IOACT BECOMES ZERO BEFORE THE
                       ;JUMP IS MADE, IN WHICH CASE IT SETS IOW:=0 AND RETURNS TO EXIT.
                       ;ON LEAVING THE WAIT STATE, RETURNS TO EXIT.
                       ;THIS ROUTINE PREVENTS THE STATE IOACT=0 AND IOW=1 FROM OCCURING
                       ;CALLING SEQUENCE
                       ;     PUSHJ PDP, WSYNC
                       ;     EXIT             ALWAYS RETURNS HERE
                       ;SETS IOW:=1 AND ENTERS WAIT ROUTINE. RETURNS TO EXIT WHEN IOACT=0.
                       WAIT1:
046160 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;
046161 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;
046162 / 603640,,000010          TLNE  AC1,000010             ;;TTY MAY ALWAYS PROCEED FROM HERE!!!!! RPH
046163 / 263140,,000000          POPJ    P,                   ;
046164 / 606000,,010000          TRNN      010000             ;;IS DEVICE ACTIVE? (IOACT=1?)
046165 / 254000,,046170          JRST       WAIT2             ;
046166 / 260140,,046176         PUSHJ  PDP,046176             ;;WAIT
046167 / 254000,,046160          JRST       WAIT1             ;
                       WAIT2:
046170 / 205640,,400000         MOVSI  AC1,400000             ;; SET TO CHECK IF THIS DEVICE IS INTERNALLY BUFFERD
046171 / 612646,,777777          TDNE  AC1,DEVCMR(DEVDAT)     ;; TEST THE BIT
046172 / 607000,,001000          TLNN      001000             ;; IT HAS A BUFFER, IS IT BUSY?
046173 / 263140,,000000          POPJ  PDP,                   ;; NO, LEAVE
046174 / 260140,,046176         PUSHJ  PDP,046176             ;; YES, WAIT FOR IT
046175 / 254000,,046160          JRST      046160             ;; THEN MAKE SURE
                       ;WSYNC IS CALLED TO WAIT UNTIL 
                       ;SETIOD IS CALLED BY INTERRUPT SERVICE ROUTINE
                       ;IE  UNTIL CURRENT BUFFER ACTIVITY IS COMPLETED
                       ;CALLED ONLY FROM UUO LEVEL
                       ;CALL:	MOVE DEVDAT,ADR. OF DEVICE DATA BLOCK
                       ;	PUSHJ PDP,WSYNC
                       ;	RETURN IMMEDIATELY IF DEVICE IS INACTIVE
                       ;	RETURN WHEN DEVICE FINISHES NEXT BUFFER IF IT IS ACTIVE
                       WSYNC:
046176 / 205000,,000001         MOVSI      000001             ;;SETUP DEVICE IO WAIT BIT
046177 / 201640,,000006         MOVEI  AC1,000006             ;; DISK IO WAIT QUEUE
046200 / 200746,,000002          MOVE  AC3,DEVIOS(DEVDAT)     ;; SEE IF JOB IS LOCKED IN CORE
046201 / 200706,,000004          MOVE  AC2,DEVMOD(DEVDAT)     ;; WHICH FOR DEVICES OTHER THAN THE TTY MEANS IOACT IS ON
046202 / 607700,,000010          TLNN  AC2, DVTTY             ;
046203 / 606740,,010000          TRNN  AC3,010000             ;; LOCKED IN?
046204 / 201640,,000005         MOVEI  AC1,000005             ;; NO, STRAIGHT IO WAIT QUEUE CODE
046205 / 200753,,024061          MOVE  AC3,   JOB(PID)        ;;CURRENT JOB NO.
046206 / 550706,,777777          HRRZ  AC2,DEVCMR(DEVDAT)     ;; FIRST, DOES HE HAVE CONTROL CELLS?
046207 / 332000,,000562         SKIPE      000562             ;; IF P2 IS ACTIVE . . .
046210 / 326700,,046231         JUMPN  AC2,046231             ;; WE CHECK. IF YES, THIS IS A SPECIAL CASE
046211 / 205700,,400000         MOVSI  AC2,400000             ;; ALSO, IS THIS A SCREWEY DEVICE?
046212 / 612706,,777777          TDNE  AC2,DEVCMR(DEVDAT)     ;; LIKE LPT WITH THE INTERNAL BUFFER
152070 / 001000,,000000           XWD DEVSBB,0                ;
046213 / 334700,,152070         SKIPA  AC2,152070             ;
046214 / 201700,,010000         MOVEI  AC2, IOACT             ;
046215 / 700600,,000400          CONO   PI, PIOFF             ;
046216 / 616706,,000002          TDNN  AC2,DEVIOS(DEVDAT)     ;
046217 / 254000,,046226          JRST      WSYNC3             ;
046220 / 436006,,000002          IORM      DEVIOS(DEVDAT)     ;
046221 / 212657,,020574         MOVNM  AC1,JOBQUE(AC3)        ;
046222 / 700600,,000200          CONO   PI,  PION             ;
046223 / 260140,,046124         PUSHJ  PDP,WSCHED             ;
046224 / 413006,,000002        ANDCAB      DEVIOS(DEVDAT)     ;
046225 / 263140,,000000          POPJ  PDP,                   ;
                       WSYNC3:
046226 / 700600,,000200          CONO   PI,  PION             ;
046227 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;
046230 / 263140,,000000          POPJ  PDP,                   ;
                       ; WE GET HERE IF THIS DEVICE HAS CONTROL CELLS
                       ; WE MUST BOTH GET CONTROL OF THE CELLS AND SHUT OFF THE PI
                       ; BECAUSE EVEN IF P2 IS ACTIVE, THE DEVICE MIGHT NOT BE RUNNING ON P2
                       WSYNC1:
046231 / 205700,,400000         MOVSI  AC2,400000             ;; NOW SEE IF THIS IS A SCREWEY DEVICE
046232 / 612706,,777777          TDNE  AC2,DEVCMR(DEVDAT)     ;
152070 / 001000,,000000           XWD DEVSBB,0                ;
046233 / 334700,,152070         SKIPA  AC2,152070             ;
046234 / 201700,,010000         MOVEI  AC2, IOACT             ;
046235 / 260140,,037464         PUSHJ    P, PWAIT             ;
046236 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
046237 / 616706,,000002          TDNN  AC2,DEVIOS(DEVDAT)     ;; IS THE DEVICE ACTIVE?
046240 / 254000,,046256          JRST      046256             ;; NO, FORGET IT
046241 / 700600,,000400          CONO   PI,000400             ;; INTERLOCK OUR FOOLING AROUND
046242 / 436006,,000002          IORM      DEVIOS(DEVDAT)     ;
046243 / 212657,,020574         MOVNM  AC1,JOBQUE(AC3)        ;
046244 / 700600,,000200          CONO   PI,  PION             ;
046245 / 260140,,037501         PUSHJ    P, XWAIT             ;
046246 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
046247 / 260140,,046124         PUSHJ  PDP,046124             ;; DO THE IO WAITING
046250 / 260140,,037464         PUSHJ    P, PWAIT             ;
046251 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
046252 / 413006,,000002        ANDCAB      DEVIOS(DEVDAT)     ;
                       WSYNC4:
046253 / 260140,,037501         PUSHJ    P, XWAIT             ;
046254 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
046255 / 263140,,000000          POPJ    P,                   ;
                       WSYNC2:
046256 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;; RESTORE IOS
046257 / 254000,,046253          JRST      046253             ;; RELEASE CELLS, RESTORE ACS
046260 /               ;: COMCSS[J17,SYS] EOF.
046260 /               ;: CLKSER[J17,SYS]
                       ;THIS SERVICE ROUTINE RUNS ON A HIGH PRIORITY CHANNEL
                       ;AND REQUESTS INTERRUPTS ON LOWER CLK CHANNEL
                       ;FOR SCHEDULING JOBS AND ERROR HANDLING THAT THE USER
                       ;IS NOT ENABLED TO HANDLE HIMSELF
                       AP2INT:
046260 / 250540,,024730          EXCH  PID,024730             ;
046261 / 254000,,046265          JRST      BREAKX             ;
                       APRINT:
046262 / 250540,,023512          EXCH  PID,023512             ;
                       ;APR IS ALWAYS ENABLED FOR CLOCK,ILM,NXM,PDLOV, AND CONS.
                       ;ALSO AROV AND PC CHNG IF THE USER REQUESTS.
046263 / 700300,,040000         CONSZ  APR,040000             ;;ADDRESS BREAK?
046264 / 254000,,046443          JRST      046443             ;;YES, GO PROCESS
                       BREAKX:
046265 / 700340,,001000         CONSO  APR,001000             ;;YES, IS IT CLOCK?
046266 / 254000,,046523          JRST      046523             ;;NO, GO CHECK ERROR FLAGS
                       ;CLOCK HAS TICKED.  DO TIME ACCOUNTING
046267 / 350013,,024633           AOS        TIME(PID)        ;;YES, INCREMENT TIME OF DAY
046270 / 350013,,024635           AOS      UPTIME(PID)        ;;DEC 3.16 INCREMENT UP TIME.
046271 / 476013,,024631         SETOM      TIMEFF(PID)        ;;FLAG THAT APR CLOCK HAS TICKED
046272 / 523013,,024464         HLLOS      CLKFLG(PID)        ;;SET FLAG FOR CLK FORCED INTERRUPT
046273 / 202053,,023502         MOVEM  TAC,APRTAC(PID)        ;;GET AN ACCUMULATOR
046274 / 700740,,007400         CONSO   PI,007400             ;;ARE WE AT INTERRUPT LEVEL (CH4-7)?
046275 / 254000,,046300          JRST      046300             ;;NO
046276 / 350013,,024636           AOS      INTIME(PID)        ;;BUMP INTERRUPT TIME
046277 / 254000,,046313          JRST      046313             ;;YES, SKIP TIME ACCOUNTING
                       BREAK3:
046300 / 336053,,024061         SKIPN  TAC,   JOB(PID)        ;;INCREMENT RUNNING TIME
046301 / 326540,,046313         JUMPN  PID,046313             ;;IF P2, DON'T BUMP NULL TIME
046302 / 350001,,031243           AOS       TTIME(TAC)        ;;TIME ACCOUNTING (RTIME IS NO LONGER COUNTED)
046303 / 350001,,031743           AOS      JBTRNB(TAC)        ;;INCREMENT HIS JOB LOADING TOO.
046304 / 322040,,046313         JUMPE  TAC,046313             ;;ESCHEW OBFUSCATION
046305 / 202653,,023503         MOVEM  AC1,APRAC1(PID)        ;;GET AN AC
046306 / 554641,,027120          HLRZ  AC1,JBTADR(TAC)        ;;GET CURRENT JOB'S PROTECTION
046307 / 242640,,777766           LSH  AC1,777766             ;
046310 / 271640,,000001          ADDI  AC1,     1             ;
046311 / 272641,,030242          ADDM  AC1,JBTKCJ(TAC)        ;;KILO-CORE*JIFFIES
046312 / 200653,,023503          MOVE  AC1,APRAC1(PID)        ;;GET BACK OUR AC
                       APRI1:
046313 / 326540,,046320         JUMPN  PID,APRADD             ;
046314 / 375000,,014130         SOSGE      014130             ;;HAS DATA DISK TIMED OUT??
046315 / 254000,,134767          JRST      134767             ;;YES, GO FLUSH IT
046316 / 332000,,014127         SKIPE      014127             ;;DO WE NEED TO START IT UP?
046317 / 254000,,134120          JRST      134120             ;;YES, DO SO.
                       ;HERE, WE GENERATE ANY USER CLOCK-INTERRUPTS NEEDED.
                       ; APRLST POINTS TO A LIST, 2-WORDS PER ENTRY
                       ; LH OF FIRST WORD IS TIME BETWEEN INTERRUPTS
                       ; RH OF FIRST WORD IS JOB NUMBER
                       ; SECOND WORD IS NEGATIVE COUNT OF TIME BETWEEN INTERRUPTS
                       APRADD:
046320 / 326540,,046377         JUMPN  PID,046377             ;;NO CLOCK INTERRUPTS ON P2
046321 / 336040,,026112         SKIPN  TAC,026112             ;;ANY INTERRUPTS TO GIVE?
046322 / 254000,,046377          JRST      046377             ;;NO, EXIT NOW
046323 / 202653,,023503         MOVEM  AC1,APRAC1(PID)        ;;SAVE SOME AC'S AND PICK UP A PDL
046324 / 202213,,023505         MOVEM    J,  APRJ(PID)        ;
046325 / 202713,,023504         MOVEM  AC2,APRAC2(PID)        ;
046326 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
                       APRCI2:
046327 / 336201,,000000         SKIPN    J,      (TAC)        ;;END OF LIST?
046330 / 254000,,046371          JRST      046371             ;;YES, RESTORE ACS AND LEAVE
046331 / 355001,,000001         AOSGE           1(TAC)        ;;TIME EXPIRED YET?
046332 / 254000,,046342          JRST      046342             ;;NO, LOOP AROUND
046333 / 205700,,000200         MOVSI  AC2,000200             ;;MAKE SURE HE IS STILL ENABLED
046334 / 616704,,033665          TDNN  AC2,JBTIEN(J)          ;
046335 / 254000,,046366          JRST      046366             ;;NOT ENABLED, ALLOWABLE TIMING ERROR, JUST DELETE
046336 / 554640,,000004          HLRZ  AC1,000004             ;;RESET TIME
046337 / 212641,,000001         MOVNM  AC1,     1(TAC)        ;
046340 / 436704,,033765          IORM  AC2,JBTIRQ(J)          ;
046341 / 476013,,023475         SETOM      INTREQ(PID)        ;
                       APRCI4:
046342 / 271040,,000002          ADDI  TAC,000002             ;;LOOP AROUND FOR NEXT ENTRY
046343 / 254000,,046327          JRST      APRCI2             ;
                       ;APRDEL DELETE CLOCK INT ENTRY POINTED TO BY TAC
                       ;DELETES FS BLOCK AND SKIP RETURNS IF LAST ENTRY IS DELETED
                       ;CALL ONLY AFTER DOING CONO PI,APROFF
                       APRDEL:
046344 / 326540,,037403         JUMPN  PID, CPOPJ             ;
046345 / 201641,,000002         MOVEI  AC1,     2(TAC)        ;
                       APRCI6:
046346 / 336015,,000000         SKIPN            (AC1)        ;
046347 / 254000,,046352          JRST      APRCI7             ;
046350 / 271640,,000002          ADDI  AC1,000002             ;;FIND END OF LIST AND MOVE LAST ENTRY INTO ENTRY
046351 / 254000,,046346          JRST      046346             ;;BEING DELETED
                       APRCI7:
046352 / 200715,,777776          MOVE  AC2,777776(AC1)        ;;PICK UP LAST ENTRY
046353 / 202701,,000000         MOVEM  AC2,      (TAC)        ;
046354 / 200715,,777777          MOVE  AC2,777777(AC1)        ;
046355 / 202701,,000001         MOVEM  AC2,     1(TAC)        ;
046356 / 402015,,777776         SETZM      777776(AC1)        ;
046357 / 201655,,777776         MOVEI  AC1,777776(AC1)        ;
046360 / 312640,,026112          CAME  AC1,APRLST             ;
046361 / 263140,,000000          POPJ    P,                   ;
                       APRCI8:
046362 / 350003,,000000           AOS            (P)          ;
                       APRDRL:
046363 / 201640,,000000         MOVEI  AC1,                   ;
046364 / 250640,,026112          EXCH  AC1,APRLST             ;
046365 / 254000,,074163          JRST      FSGIVE             ;
                       APRCI5:
046366 / 260140,,046344         PUSHJ    P,046344             ;;DELETE THE ENTRY, SKIP IF THAT WAS THE LAST ONE
046367 / 254000,,046327          JRST      APRCI2             ;
046370 / 254000,,046373          JRST      046373             ;;LIST EXHAUSTED
                       APRCI9:
046371 / 316040,,026112          CAMN  TAC,026112             ;;IS LIST EMPTY?
046372 / 260140,,046363         PUSHJ    P,APRDRL             ;
                       APRCI3:
046373 / 250153,,023516          EXCH    P,APRPDL(PID)        ;;RESTORE THE ACS WE SAVED
046374 / 200653,,023503          MOVE  AC1,APRAC1(PID)        ;
046375 / 200713,,023504          MOVE  AC2,APRAC2(PID)        ;
046376 / 200213,,023505          MOVE    J,  APRJ(PID)        ;;FALL INTO APRI2
                       ; HERE WE REQUEST CH7 INTERRUPT AND DISMISS
                       APRI2:
046377 / 332013,,023425         SKIPE      SPWUUF(PID)        ;;SPACEWAR ACTIVE?
046400 / 372013,,023426          SOSE      SPWTMO(PID)        ;;YES. DECREMENT SPACEWAR TIMEOUT
046401 / 254000,,046430          JRST      046430             ;;ALL IS OK.
                       ;THIS IS HOW WE BLOW UP THE SPACEWARRIOR.
046402 / 201040,,000046         MOVEI  TAC,000046             ;;ASSUME PI CHANNEL 3 INTERRUPTED CH 7
046403 / 700700,,001000         CONSZ   PI,001000             ;;CH6 IN PROGRESS?
046404 / 254000,,046412          JRST      046412             ;;YES
046405 / 700700,,002000         CONSZ   PI,002000             ;;CH5 IN PROGRESS?
046406 / 254000,,046413          JRST      046413             ;;YES
046407 / 700740,,004000         CONSO   PI,004000             ;;CH4 IN PROGRESS?
046410 / 254000,,046415          JRST      046415             ;;NO. IT WAS CH3
046411 / 254000,,046414          JRST      APRI2C             ;
                       APRI2A:
046412 / 271040,,000002          ADDI  TAC,000002             ;;CHANNEL 6
                       APRI2B:
046413 / 271040,,000002          ADDI  TAC,000002             ;;CHANNEL 5
                       APRI2C:
046414 / 271040,,000002          ADDI  TAC,000002             ;;CHANNEL 4
                       APRI2D:
046415 / 326540,,046417         JUMPN  PID,046417             ;
046416 / 435040,,000100          IORI  TAC,000100             ;;MAOFF
046417 / 202113,,023427         MOVEM TAC1,SPWBLO(PID)        ;;SAVE TAC1 A WHILE
152732 / 254000,,150530          JRST      SPTMOE             ;
046420 / 200100,,152732          MOVE TAC1,152732             ;
046421 / 202113,,023430         MOVEM TAC1,SPWXCT(PID)        ;;MAKE SURE WE CATCH UUOCON EXITING
046422 / 250121,,000000          EXCH TAC1,@      (TAC)       ;;WHEE!
046423 / 603100,,010000          TLNE TAC1,010000             ;;USER MODE?
046424 / 254000,,046427          JRST      046427             ;;YES. THIS IS EASY
046425 / 250121,,000000          EXCH TAC1,@      (TAC)       ;;PUT BACK THE INTERRUPTED PC
046426 / 200113,,024112          MOVE TAC1,  UUO0(PID)        ;;GET UUO0
                       APRI2Y:
046427 / 250113,,023427          EXCH TAC1,SPWBLO(PID)        ;;STORE INTERRUPTED ADDRESS.
                       APRI2Z:
046430 / 200053,,023502          MOVE  TAC,APRTAC(PID)        ;;RESTORE TAC
046431 / 700600,,004001          CONO   PI,004001(7-CLKCHN)   ;;REQUEST INTERRUPT ON CLOCK CHANNEL.
046432 / 476013,,024060         SETOM      DSFLAG(PID)        ;;TELL DPYSER CLOCK HAS TICKED.
046433 / 700333,,023507         CONSZ  APR,@APRIN1(PID)       ;;IS THE USER ENABLED FOR ANY FLAGS?
                       ;(APRIN1 SET EACH TIME A USER RUNS)
046434 / 254000,,046523          JRST      046523             ;;YES, GO PROCESS TRAP.
046435 / 700200,,001003          CONO  APR,001003             ;;NO, CLEAR THE CLOCK FLAG
                       PBRET:
046436 / 326540,,046441         JUMPN  PID, P2RET             ;
                       P1RET:
046437 / 250540,,023512          EXCH  PID,023512             ;
046440 / 254520,,000616           JEN      @000616            ;;DISMISS INTERRUPT
                       P2RET:
046441 / 250540,,024730          EXCH  PID,024730             ;
046442 / 254520,,000731           JEN      @AP2CHL            ;
                       ;ADDRESS BREAK SYSTEM.
                       ;PUT THE EXCEPTED PCS (THE ONES YOU WANT TO IGNORE BREAKS FROM) IN BRKTAB,
                       ; AND THE NUMBER OF EXCEPTED PCS IN BRKNUM.
                       ;WHEN A BREAK OCCURS FROM SOME UNEXCEPTED PC, IT EXECUTES THE CODE AT
                       ;BRKHIT, WHICH MAY BE PATCHED TO WHATEVER YOU WANT.
                       ;NOTE THAT IF BRKNUM≤0 ALL BREAKS ARE EXCEPTED AND AN ERROR MESSAGE RESULTS
                       BREAK:
046443 / 202040,,035410         MOVEM  TAC,035410             ;;SAVE A COUPLE OF ACCUMULATORS
046444 / 202640,,035411         MOVEM  AC1,BRKAC1             ;
046445 / 550040,,000616          HRRZ  TAC,000616             ;;PICK UP BREAK PC+1
046446 / 275040,,000001          SUBI  TAC,000001             ;;MAKE IT HONEST
046447 / 333640,,035412        SKIPLE  AC1,035412             ;;ARE WE READY FOR A BREAK?
046450 / 303640,,000020         CAILE  AC1,000020             ;;YES.  REASONABLE NUMBER OF EXCEPTED PCS?
046451 / 254000,,046471          JRST      046471             ;;NO. NOT READY
046452 / 312055,,035412          CAME  TAC,035412(AC1)        ;;IS THIS PC EXCEPTED?
046453 / 367640,,046452          SOJG  AC1,046452             ;;NO. TRY NEXT ONE
046454 / 325640,,046465        JUMPGE  AC1,046465             ;;JUMP IF WE MATCHED SOME EXCEPTED PC.
                       BRKHIT:
046455 / 255000,,000000          JFCL                         ;
046456 / 255000,,000000          JFCL                         ;
046457 / 255000,,000000          JFCL                         ;
046460 / 255000,,000000          JFCL                         ;
046461 / 255000,,000000          JFCL                         ;
046462 / 255000,,000000          JFCL                         ;
046463 / 255000,,000000          JFCL                         ;
046464 / 255000,,000000          JFCL                         ;
                       BRKXIT:
046465 / 200040,,035410          MOVE  TAC,035410             ;;RESTORE ACCUMULATORS
046466 / 200640,,035411          MOVE  AC1,BRKAC1             ;
046467 / 700200,,040000          CONO  APR,040000             ;;CLEAR BREAK BIT
046470 / 254000,,046265          JRST      046265             ;;RETURN TO CH3 CODE
                       BRKERR:
046471 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
046472 / 260140,,000316         PUSHJ    P,PUSHIT             ;
046473 / 307640,,000020          CAIG  AC1,000020             ;;SKIP IF ILLEGAL VALUE OF BRKNUM
046474 / 325640,,046510        JUMPGE  AC1,046510             ;;JUMPE IF LEGAL VALUE OF BRKNUM
046475 / 260140,,044066         PUSHJ    P,DISMES             ;
046504 / 550040,,035412          HRRZ  TAC,BRKNUM             ;
046505 / 260140,,044170         PUSHJ    P,DISLOC             ;
046506 / 260140,,044076         PUSHJ    P,044076             ;
046507 / 402000,,035412         SETZM      BRKNUM             ;
                       BRKER1:
046510 / 260140,,044066         PUSHJ    P,DISMES             ;
046515 / 200040,,000616          MOVE  TAC,APRCHL             ;
046516 / 260140,,044170         PUSHJ    P,DISLOC             ;
046517 / 260140,,044076         PUSHJ    P,044076             ;
046520 / 260140,,000341         PUSHJ    P, POPIT             ;
046521 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
046522 / 254000,,046465          JRST      BRKXIT             ;
                       ;APRER	OTHER APR INTERRUPTS BESIDES CLOCK
                       APRER:
                       ;HERE TOO IF USER MIGHT BE ENABLED FOR CLKINTS
046523 / 250073,,023513          EXCH  TAC,@ APRCH(PID)       ;;SAVE TAC, GET PC WORD
046524 / 700300,,020000         CONSZ  APR,   ILM             ;
046525 / 254000,,046620          JRST      046620             ;;CLEAN UP AFTER CPU ON MPV
046526 / 607040,,010000          TLNN  TAC,010000             ;;IS IT IN USER MODE?
046527 / 254000,,046635          JRST      046635             ;;NO, PRINT MESSAGE AND STOP JOB
                       APRER1:
046530 / 700740,,007000         CONSO   PI,007000             ;;SPACEWAR LOSSAGE?
046531 / 336013,,023425         SKIPN      SPWUUF(PID)        ;;IN CH7. SPACEWAR ACTIVE?
046532 / 254000,,046541          JRST      046541             ;;NOT SPACEWAR
046533 / 250073,,023513          EXCH  TAC,@ APRCH(PID)       ;
046534 / 322540,,046537         JUMPE  PID,APRSWP             ;
046535 / 250540,,024730          EXCH  PID,024730             ;
046536 / 254000,,150463          JRST      SP2INT             ;
                       APRSWP:
046537 / 250540,,023512          EXCH  PID,023512             ;
046540 / 254000,,150433          JRST      SPWINT             ;
                       APRER6:
046541 / 336013,,023431         SKIPN      INTACT(PID)        ;;KILL IF ALREADY AT INT. LEVEL
046542 / 700373,,023507         CONSO  APR,@APRIN1(PID)       ;;IS USER ENABLED FOR THIS INTERRUPT?
046543 / 254000,,046635          JRST      046635             ;;NO, STOP JOB AND PRINT MESSAGE
046544 / 250353,,024063          EXCH JDAT,JOBDAT(PID)        ;;SAVE JDAT, GET CURRENT JOB DATA AREA ADR.
                       ;WHEN THE KA-10 IS FIXED, DELETE ALL OF THIS DOWN TO APRE6A (BUT NOT CONSO)
                       ;ALSO PUT HRRI INTO APRMPV
046545 / 700300,,020000         CONSZ  APR,020000             ;;ILL MEM REF?
046546 / 603040,,020000          TLNE  TAC,020000             ;;YES. SKIP IF NOT ILDB/IDPB
046547 / 254000,,046551          JRST      046551             ;;NOT ILM OR ILM AND BIS FLAG IS SET
046550 / 541041,,777777          HRRI  TAC,777777(TAC)        ;;ASSUME HE WAS DOING A WRITE OF SOME KIND
                       APRE6A:
046551 / 700373,,023510         CONSO  APR,@APRIN2(PID)       ;;ENABLED VIA NEW USER INTERRUPT SYSTEM?
046552 / 254000,,046573          JRST      046573             ;;NO. OLD STYLE.
                       ; THIS ROUTINE REQUESTS USER INTERRUPT FOR VARIOUS APR-TYPE TRAP CONDITIONS
046553 / 202053,,023511         MOVEM  TAC,APRIN3(PID)        ;; SAVE PC FOR CLKINT
046554 / 250213,,024061          EXCH    J,   JOB(PID)        ;
046555 / 700240,,000001          CONI  APR,   TAC             ;
046556 / 404053,,023510           AND  TAC,APRIN2(PID)        ;
046557 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
046560 / 436044,,033765          IORM  TAC,JBTIRQ(J)          ;
046561 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
046562 / 476013,,023475         SETOM      INTREQ(PID)        ;; NOW REQUEST AN INTERRUPT
046563 / 250213,,024061          EXCH    J,   JOB(PID)        ;
                       ;	CONSZ APR,ILM
                       ;	AOS APRIN3(PID)		;LET'S LEAVE IT ALONE - FW
152716 / 254000,,000051          JRST      JOBTM5             ;
046564 / 200040,,152716          MOVE  TAC,152716             ;
046565 / 202047,,000051         MOVEM  TAC,JOBTM5(JDAT)       ;
152150 / 010000,,000051           XWD USRMOD,JOBTM5           ;
046566 / 200040,,152150          MOVE  TAC,152150             ;
046567 / 250353,,024063          EXCH JDAT,JOBDAT(PID)        ;
046570 / 523013,,024464         HLLOS      CLKFLG(PID)        ;
046571 / 700600,,004001          CONO   PI,004001(7-CLKCHN)   ;
046572 / 254000,,046613          JRST      APRER3             ;
                       ;ENABLED VIA OLD-STYLE INTERRUPTS.
                       APRER7:
046573 / 202047,,000127         MOVEM  TAC,JOBTPC(JDAT)       ;;STORE LOSER PC IN JOB DATA AREA
046574 / 550047,,000125          HRRZ  TAC,JOBAPR(JDAT)       ;;GET TRAP ROUTINE ADDRESS
046575 / 305040,,000114         CAIGE  TAC,000114             ;;LEGAL TRAP ADDRESS? (NO TRAPS TO ACS)
046576 / 254000,,046632          JRST      046632             ;;NO.
046577 / 202053,,023502         MOVEM  TAC,APRTAC(PID)        ;;
046600 / 550047,,000127          HRRZ  TAC,JOBTPC(JDAT)       ;;DID FIRST INSTRUCTION OF TRAP ROUTINE
046601 / 316053,,023502          CAMN  TAC,APRTAC(PID)        ;;GENERATE A BAD ADDRESS?
046602 / 254000,,046632          JRST      046632             ;;YES IT WAS, TRAP IT
046603 / 271040,,000001          ADDI  TAC,     1             ;
046604 / 316053,,023502          CAMN  TAC,APRTAC(PID)        ;;REMEMBER THAT WE BUGGERED ADDRESS
046605 / 254000,,046632          JRST      APRER5             ;
046606 / 700247,,000126          CONI  APR,JOBCNI(JDAT)       ;;STORE APR IN JOB DATA AREA
046607 / 500047,,000127           HLL  TAC,JOBTPC(JDAT)       ;;NOW PUT THE ENTIRE PC TOGETHER AGAIN
046610 / 661040,,010000           TLO  TAC,010000             ;;MPV COMES FROM EXEC MODE TOO,
                       ;MAKE SURE WE GET TO USER MODE
046611 / 540047,,000125           HRR  TAC,JOBAPR(JDAT)       ;
046612 / 250353,,024063          EXCH JDAT,JOBDAT(PID)        ;;RESTORE JDAT,JOBDAT
                       APRER3:
046613 / 621040,,440000           TLZ  TAC,440000             ;;CLEAR PC CHANGE AND AR OVF FLAGS
                       ;SO INTERRUPT MAY BE DISMISSED
046614 / 250073,,023513          EXCH  TAC,@ APRCH(PID)       ;;RESTORE TAC & @APRCH(PID)
046615 / 700200,,530113          CONO  APR,530113             ;;CLEAR ERROR FLAGS WHICH CAN CAUSE
                       ;INTERRUPT (EXCEPT CLOCK).
046616 / 326540,,046441         JUMPN  PID, P2RET             ;
046617 / 254000,,046437          JRST       P1RET             ;
                       APRMPV:
                       ;CLEANUP AFTER CPU ON ILM
                       ;	HRRI	TAC,-1(TAC)		;BACK UP PC TO POINT AT LOSER
046620 / 700200,,400003          CONO  APR,400003             ;;DON'T MENTION PDLOV YET IF BOMBED ON MPV
046621 / 603040,,010000          TLNE  TAC,010000             ;;MAY HAVE TO WORRY IF EXEC LOST
046622 / 254000,,046530          JRST      046530             ;;NO, JUST LOSER
046623 / 700740,,067400         CONSO   PI,067400             ;;PI IN PROGRESS?
046624 / 254000,,046630          JRST      046630             ;;NO. MPV FROM UUO LEVEL: GO TO UADERR
046625 / 700700,,000400         CONSZ   PI,000400             ;;IN PROGRESS ON CH7?
046626 / 336013,,023425         SKIPN      SPWUUF(PID)        ;;IN CH7. AT SPACEWAR LEVEL?
046627 / 254000,,046541          JRST      046541             ;;NOT SPACEWAR.  MPV FROM EXEC. (HOW??)
                       APRMP1:
046630 / 541040,,043221          HRRI  TAC,043221             ;;SEND HIM TO ADDRESS CHECK
046631 / 254000,,046613          JRST      APRER3             ;
                       ;HERE WE'VE DECIDED THAT THIS LOSER DOESN'T HAVE A VALID TRAP ADDRESS.
                       ;SO WE CLEAR APRIN1(PID) TO PREVENT FURTHER DISTRACTION.
                       APRER5:
046632 / 200047,,000127          MOVE  TAC,JOBTPC(JDAT)       ;;RESTORE PC AND FLAGS
046633 / 250353,,024063          EXCH JDAT,JOBDAT(PID)        ;;RESTORE JOB DATA AREA ADDRESS
046634 / 402013,,023507         SETZM      APRIN1(PID)        ;
                       APRER2:
046635 / 700340,,000040         CONSO  APR, MAOFF             ;
046636 / 700340,,000200         CONSO  APR,000200             ;;DID 6 GET ENABLED FOR PC CHANGE INTERUPT?
046637 / 254000,,046662          JRST      046662             ;;NO
046640 / 700200,,000503          CONO  APR,000503             ;;CLEAR IT.
046641 / 250140,,024734          EXCH    P,024734             ;
046642 / 260140,,000316         PUSHJ    P,PUSHIT             ;
046643 / 261140,,000001          PUSH    P,   TAC             ;
046644 / 260140,,044066         PUSHJ    P,DISMES             ;
046654 / 262140,,000001           POP    P,   TAC             ;
046655 / 260140,,044200         PUSHJ    P,DISOCT             ;
046656 / 260140,,044076         PUSHJ    P,044076             ;
046657 / 260140,,000341         PUSHJ    P, POPIT             ;
046660 / 513000,,024725         HLLZS      024725             ;;MAKE SURE IT DOESN'T HAPPEN AGAIN
046661 / 250140,,024734          EXCH    P,024734             ;
                       APRERA:
046662 / 700300,,630000         CONSZ  APR,630000             ;;DOES EXEC CARE?	;JS  CONS,PDLOV,NXM,MPV
046663 / 254000,,046705          JRST      046705             ;;YES!
046664 / 700340,,001000         CONSO  APR,  1B26             ;
046665 / 254000,,046673          JRST      APRER9             ;
046666 / 202053,,023502         MOVEM  TAC,APRTAC(PID)        ;
046667 / 200053,,023507          MOVE  TAC,APRIN1(PID)        ;
046670 / 602040,,001000          TRNE  TAC,  1B26             ;
046671 / 700200,,001003          CONO  APR,001003             ;
046672 / 200053,,023502          MOVE  TAC,APRTAC(PID)        ;
                       APRER9:
046673 / 700340,,000110         CONSO  APR,000110             ;;ARITHMETIC OVERFLOW?
046674 / 254000,,046613          JRST      APRER3             ;
046675 / 202053,,023502         MOVEM  TAC,APRTAC(PID)        ;
046676 / 200053,,023507          MOVE  TAC,APRIN1(PID)        ;
046677 / 606040,,000010          TRNN  TAC,000010             ;;USER ENABLED FOR AROV?
046700 / 700200,,000043          CONO  APR,000043             ;
046701 / 606040,,000100          TRNN  TAC,000100             ;;OR FOV (PC CHANGE ON 6)
046702 / 700200,,000403          CONO  APR,000403             ;
046703 / 200053,,023502          MOVE  TAC,APRTAC(PID)        ;
046704 / 254000,,046613          JRST      APRER3             ;
                       ; HERE WE HAVE A NON-TRIVIAL ERROR
                       APRERB:
046705 / 202053,,023515         MOVEM  TAC, APRPC(PID)        ;;STORE ERROR PC FOR CLK CHANNEL
046706 / 700253,,023514          CONI  APR,APRERR(PID)        ;;STORE ERROR FLAGS
                       ;(ALSO USED AS ERROR FLAG)
046707 / 523013,,024464         HLLOS      CLKFLG(PID)        ;;SET FLAG FOR CLK INTERRUPT
046710 / 476013,,024637         SETOM      SCHEDF(PID)        ;;FLAG THAT RESCHEDULING IS NEEDED
                       ;(EVEN THOUGH PC MAY BE IN EXEC MODE)
046711 / 700600,,004001          CONO   PI,004001(7-CLKCHN)   ;;REQUEST INTERRUPT ON CLOCK CHANNEL.
046712 / 700340,,020000         CONSO  APR,020000             ;;ILL MEM REF?
046713 / 254000,,046717          JRST      APRERC             ;
046714 / 202053,,024466         MOVEM  TAC,USAVPC(PID)        ;;SAVE ERROR PC FOR CLKINT
046715 / 541040,,000000          HRRI  TAC,                   ;;YES. FORCE LEGAL ADDRESS SO
046716 / 254000,,046723          JRST      046723             ;;PDP-10 WILL NOT HANG (CROCK!) ON WILD PC.
                       APRERC:
046717 / 607040,,010000          TLNN  TAC,010000             ;;PC IN USER MODE?
046720 / 700740,,067400         CONSO   PI, 67400             ;;;replaced;;	CONSO	PI,177B27≠(1B27⊗(7-APRCHN))	;ARE WE SOME OTHER PI CHANEL?
046721 / 304000,,000000          CAIA                         ;
046722 / 254000,,046732          JRST      046732             ;;SYSTEM SCREW-UP!!
                       APRER4:
046723 / 700340,,010000         CONSO  APR,010000             ;;NON-EXISTANT MEMORY?
046724 / 254000,,046613          JRST      046613             ;;NO. RESTORE ACS AND DISMISS
046725 / 201041,,000000         MOVEI  TAC,      (TAC)        ;;YES. IS IT PC?
046726 / 311040,,022066          CAML  TAC,022066             ;
151567 / 700600,,004001          CONO   PI,004001(7-CLKCHN)   ;
046727 / 201040,,151567         MOVEI  TAC,151567             ;
                       ;YES. DISMISS TO CLKINT
046730 / 500053,,023515           HLL  TAC, APRPC(PID)        ;
046731 / 254000,,046613          JRST      046613             ;;RESTORE ACS AND DISMISS
                       ; WE GET HERE ON AN ERROR IN THE EXEC
                       APRMES:
046732 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
046733 / 260140,,000316         PUSHJ    P,PUSHIT             ;
046734 / 261140,,000001          PUSH    P,   TAC             ;
046735 / 260140,,044320         PUSHJ    P,044320             ;
046736 / 260140,,044066         PUSHJ    P,DISMES             ;
046745 / 262140,,000001           POP    P,   TAC             ;
046746 / 260140,,044200         PUSHJ    P,DISOCT             ;
046747 / 260140,,044066         PUSHJ    P,DISMES             ;
046753 / 200053,,023514          MOVE  TAC,APRERR(PID)        ;
046754 / 260140,,044200         PUSHJ    P,DISOCT             ;
046755 / 260140,,044076         PUSHJ    P,044076             ;
046756 / 260140,,050113         PUSHJ    P,SYSFIX             ;
046757 / 255000,,000000          JFCL                         ;
046760 / 304000,,000000          CAIA                         ;
046761 / 254000,,046767          JRST      046767             ;;FOUND ERROR AND FIXED(I HOPE!)
046762 / 260140,,000544         PUSHJ    P,ALTNOW             ;
046763 / 255000,,000000          JFCL                         ;
046764 / 260140,,043761         PUSHJ    P,043761             ;;FLUSH MESSAGES TO CTY
046765 / 260140,,000347         PUSHJ    P,000347             ;;THIS DOES REQUIRE INTERVENTION
046766 / 254000,,046771          JRST      MONOK1             ;
                       MONOK:
046767 / 332000,,000500         SKIPE      000500             ;
046770 / 260140,,000347         PUSHJ    P,000347             ;
                       MONOK1:
046771 / 332000,,036035         SKIPE      036035             ;
046772 / 254000,,046776          JRST      APREM1             ;
046773 / 260140,,000341         PUSHJ    P, POPIT             ;
046774 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
046775 / 254000,,046723          JRST      APRER4             ;
                       APREM1:
046776 / 260140,,044066         PUSHJ    P,DISMES             ;
047005 / 260140,,043761         PUSHJ    P,043761             ;
047006 / 260140,,000341         PUSHJ    P, POPIT             ;
047007 / 254200,,000365          HALT      000365             ;
                       ;SYSTEM CLOBBERED     DETECTED BY SYS WR REF KLUDGE
                       ;THIS ROUTINE RUNS ON THE LOWEST PRIORITY PI CHANNEL AND AT UUO LEVEL
                       ;TO CAUSE AN INTERRUPT ON CLK CHANNEL:
                       ;	SETOM CLKFLG	;FLAG THAT INTERRUPT HAS BEEN REQUESTED
                       ;	CONO PI,CLKREQ	;REQUEST PI INTERUPT ON LOWEST PI CHANNEL
                       ;THE FOLLOWING OTHER FLAGS MUST ALSO BE SET
                       ;APRERR-APR DETECTED ERROR IN CURRENT JOB
                       ;SCHEDF-RESCHEDULING MUST TAKE PLACE(EVEN THOUGH PC IN EXEC MODE)
                       ;TIMEF-APR CLOCK HAS TICKED ON HIGH PRIORITY CHANNEL
                       ;SEE APRSER AND RUNCSS TO SEE HOW THIS ROUTINE IS CALLED
                       ;CLK SERVICE PERFORMS THE FOLLOWING ON A REGULAR BASIS:
                       ;PROCESSES CLOCK QUEUE REQUESTS
                       ;CALLS CONSOLE MONITOR COMMAND DECODER
                       ;CALLS CORE SHUFFLER
                       ;THEN CALLS SCHEDULER
                       ;IF THE CURRENT JOB IS IN EXEC MODE THE ABOVE 4 TASKS ARE
                       ;DELAYED UNTIL THE CURRENT JOB ENTERS A STOPPABLE STATE: I.E., UNTIL
                       ;	1. JOB STARTS TO WAIT FOR A BUSY SHARABLE DEVICE
                       ;	2. JOB STARTS TO WAIT FOR IO TO COMPLETE
                       ;	3. CONTROL ABOUT TO RETURN TO USER MODE
                       ;THEN CLK SERVICE IS ENTERED AT THE UUO LEVEL
                       ;HERE AT CLK INTERRUPT LEVEL  -  CLKINT
                       CLKIN0:
047010 / 250740,,024112          EXCH   17,024112             ;;GET HERE WHEN CLKFLG < 0
047011 / 202740,,000710         MOVEM   17,000710             ;;SIMULATE INT FROM LOSER
047012 / 250740,,024112          EXCH   17,024112             ;
                       CLKINT:
047013 / 402000,,024464         SETZM      024464             ;
047014 / 202740,,024465         MOVEM   17,024465             ;;SAVE AC 17
047015 / 201740,,000007         MOVEI   17,     7             ;
047016 / 202740,,036260         MOVEM   17,036260             ;
047017 / 201740,,000000         MOVEI   17,                   ;
047020 / 333017,,023473        SKIPLE      023473(17)         ;; DO WE HAVE SOMEONE TRYING TO SNEAK INTO CH7
047021 / 254037,,023473          JRST      @023473(17)        ;; YES, GO SERVICE HIM
047022 / 402000,,036260         SETZM      036260             ;
047023 / 336740,,024466         SKIPN   17,USAVPC             ;
047024 / 200740,,000710          MOVE   17,000710             ;;IS CURRENT JOB IN USER MODE?
047025 / 607740,,010000          TLNN   17,USRMOD             ;
047026 / 332000,,024637         SKIPE      024637             ;;NO, IS THIS A FORCED RESCHEDULING INTERRUPT?
047027 / 254000,,047037          JRST      CLKIN1             ;
047030 / 201740,,000000         MOVEI   17,                   ;
047031 / 332017,,023475         SKIPE      INTREQ(17)         ;
047032 / 254000,,047074          JRST      INTNOW             ;
                       CLKINX:
151566 / 700600,,000400          CONO   PI, PIOFF             ;
047033 / 200740,,151566          MOVE   17,151566             ;
047034 / 202740,,024640         MOVEM   17,024640             ;;DIVERT TO CLKIN0 ON WAY BACK TO LOSER
047035 / 200740,,024465          MOVE   17,024465             ;;LEAVE TIMEF SET AND DISMISS INT.
047036 / 254520,,000710           JEN      @CLKCHL            ;
                       CLKIN1:
151675 / 000000,,000000                                       ;
047037 / 700540,,151675         DATAO   PI,151675             ;;WE ARE NOW OFFICIALLY IN CHANNEL 7
047040 / 202740,,024067         MOVEM   17,024067             ;
047041 / 402000,,024466         SETZM      024466             ;
047042 / 201740,,000000         MOVEI   17,                   ;
047043 / 254000,,047076          JRST      CLKERR             ;
                       ;P2 CLK INTS COME HERE
                       CL2IN0:
047044 / 250740,,025330          EXCH   17,025330             ;
047045 / 202740,,000771         MOVEM   17,CL2CHL             ;
047046 / 250740,,025330          EXCH   17,025330             ;
                       CL2INT:
047047 / 402000,,025702         SETZM      025702             ;
047050 / 202740,,025703         MOVEM   17,025703             ;
151732 / 000000,,001216                                       ;
047051 / 200740,,151732          MOVE   17,151732             ;
047052 / 333017,,023473        SKIPLE      023473(17)         ;
047053 / 254037,,023473          JRST      @023473(17)        ;
047054 / 336740,,025704         SKIPN   17,025704             ;
047055 / 200740,,000771          MOVE   17,CL2CHL             ;
047056 / 607740,,010000          TLNN   17,USRMOD             ;
047057 / 332000,,026055         SKIPE      026055             ;
047060 / 254000,,047070          JRST      CL2IN1             ;
151732 / 000000,,001216                                       ;
047061 / 200740,,151732          MOVE   17,151732             ;
047062 / 332017,,023475         SKIPE      INTREQ(17)         ;
047063 / 254000,,047074          JRST      INTNOW             ;
                       CL2INX:
151566 / 700600,,000400          CONO   PI, PIOFF             ;
047064 / 200740,,151566          MOVE   17,151566             ;
047065 / 202740,,026056         MOVEM   17,026056             ;
047066 / 200740,,025703          MOVE   17,025703             ;
047067 / 254520,,000771           JEN      @CL2CHL            ;
                       CL2IN1:
047070 / 202740,,025305         MOVEM   17,025305             ;
047071 / 402000,,025704         SETZM      025704             ;
151732 / 000000,,001216                                       ;
047072 / 200740,,151732          MOVE   17,151732             ;
047073 / 254000,,047076          JRST      CLKERR             ;
                       ; HERE IT IS NOT TIME TO TAKE A REAL CLOCK INTERRUPT
                       ; HOWEVER WE WILL GIVE A USER INTERRUPT NOW
                       INTNOW:
047074 / 322740,,047033         JUMPE   17,047033             ;;CLOBBER UUOXIT & DISMISS
047075 / 254000,,047064          JRST      CL2INX             ;
                       ;STORAGE FOR CURRENT JOB
                       CLKERR:
047076 / 264037,,023477           JSR      @ CLKSV(17)        ;; SAVE ACCUMULATORS
047077 / 505140,,777640          HRLI    P,777640             ;
047100 / 541153,,024466          HRRI    P,024466(PID)        ;
047101 / 200053,,024641          MOVE  TAC, UUOXI(PID)        ;
047102 / 202053,,024640         MOVEM  TAC,UUOXIT(PID)        ;;RESTORE EXIT, NOW THAT WE MADE IT
                       CIP9:
047103 / 332053,,023514         SKIPE  TAC,APRERR(PID)        ;;IT THIS AN ERROR INTERRUPT?
047104 / 260140,,043031         PUSHJ  PDP,043031             ;;YES, GO PROCESS ERROR 
047105 / 332013,,023475         SKIPE      INTREQ(PID)        ;; ANY INTERRUPTS PENDING?
047106 / 260140,,050276         PUSHJ    P,INTRUN             ;
047107 / 326540,,047126         JUMPN  PID,RSCHED             ;
047110 / 332000,,020273         SKIPE       SPWGO             ;
047111 / 260140,,047115         PUSHJ    P,SPWCHK             ;
047112 / 332000,,020373         SKIPE       SP2GO             ;
047113 / 260140,,047116         PUSHJ    P,SP2CHK             ;
047114 / 254000,,047126          JRST      RSCHED             ;
                       SPWCHK:
152003 / 000004,,020273                                       ;
047115 / 334100,,152003         SKIPA TAC1,152003             ;
                       SP2CHK:
152004 / 000004,,020373                                       ;
047116 / 200100,,152004          MOVE TAC1,152004             ;
047117 / 400200,,000000          SETZ    J,                   ;
047120 / 205040,,020000         MOVSI  TAC,020000             ;;LOOK FOR ANY SPACEWAR MODE ERRORS
153171 / 000020,,000002                                       ;
153171 / 360620,,000002 POINT 6,20000002,5                    ;
047121 / 135200,,153171           LDB    J,153171             ;
047122 / 616044,,020473          TDNN  TAC,JBTST2(J)          ;
047123 / 326200,,047121         JUMPN    J,047121             ;
047124 / 322200,,037403         JUMPE    J, CPOPJ             ;
047125 / 254000,,043114          JRST      SPWMES             ;
                       ;SET TIME FLAGS, UPDATE SYSTEM TIME, COUNT DOWN PROCESSOR ALIVE FLAGS
                       RSCHED:
047126 / 700600,,001020          CONO   PI,001020             ;;SHUT OFF THE REAL-TIME CLOCK
047127 / 336013,,024631         SKIPN      TIMEFF(PID)        ;;ARE WE BEHIND IN TIME ACCOUNTING?
047130 / 254000,,047645          JRST      047645             ;;NO, JUST RESCHEDULE
047131 / 402013,,024631         SETZM      TIMEFF(PID)        ;;DECREMENT "BEHIND" COUNT
047132 / 700600,,002020          CONO   PI,002020             ;;ENABLE CHANNEL 3 AGAIN
047133 / 476013,,024632         SETOM       TIMEF(PID)        ;;SET "TIME" FLAG
047134 / 200053,,024630          MOVE  TAC,024630(PID)        ;
047135 / 370001,,024261           SOS      PALIVE(TAC)        ;
047136 / 201040,,000030         MOVEI  TAC,    30             ;
047137 / 202053,,024261         MOVEM  TAC,PALIVE(PID)        ;
047140 / 326540,,047216         JUMPN  PID,047216             ;;FLUSH PDP6
047141 / 373000,,035400         SOSLE      035400             ;;TIME TO CHECK FOR AUDIO SWITCH?
047142 / 254000,,047146          JRST      SECCHK             ;
                       ;HERE EVERY 1/4 TH SECOND
047143 / 201100,,000017         MOVEI TAC1,000017             ;
047144 / 202100,,035400         MOVEM TAC1,T15CNT             ;
047145 / 260140,,143442         PUSHJ    P,143442             ;;SEE IF ANY AUDIO SWITCH WORK TO BE DONE(TTYSER)
                       SECCHK:
047146 / 373000,,035401         SOSLE      035401             ;;TIME TO RUN THE 1 SECOND CLOCK?
047147 / 254000,,047216          JRST      047216             ;;NO
                       ;HERE ONCE PER SECOND. 
047150 / 201100,,000074         MOVEI TAC1,000074             ;;CHECK EVERY SECOND
047151 / 202100,,035401         MOVEM TAC1,035401             ;;RESTORE COUNT WORD (IN APRDAT)
047152 / 200040,,024633          MOVE  TAC,024633             ;;GET CURRENT TIME
047153 / 231040,,000074         IDIVI  TAC,000074             ;; AND CONVERT IT TO SECONDS
047154 / 504040,,024634           HRL  TAC,024634             ;; PUT DATE IN LEFT HALF
047155 / 202040,,023423         MOVEM  TAC,023423             ;;SAVE <DATE>,,<TIME IN SECS>
                       ;HERE WE MAKE SURE THAT KEY NXM STOP IS ON.  PROCESSOR REALLY LOSES
                       ;WHEN IT GETS A NXM, SO ... REG 8-14-73
047156 / 710300,,000200         CONSZ  PTP,000200             ;;SKIP IF KEY NXM STOP IS OFF.
047157 / 254000,,047176          JRST      047176             ;;IS OK.
047160 / 260140,,000316         PUSHJ    P,PUSHIT             ;
047161 / 260140,,044320         PUSHJ    P,044320             ;
047162 / 260140,,044066         PUSHJ    P,DISMES             ;
047170 / 700600,,000400          CONO   PI,000400             ;;NOW SO WE REALLY MAKE OURSELVES NASTY
047171 / 260140,,043761         PUSHJ    P,043761             ;
047172 / 710340,,000200         CONSO  PTP,   200             ;
047173 / 254000,,047172          JRST      047172             ;;WAIT UNTIL SOMEONE NOTICES.
047174 / 700600,,000200          CONO   PI,  PION             ;
047175 / 260140,,000341         PUSHJ    P, POPIT             ;
                       DDSTAT:
                       ;END FTDDSTAT
                       ;SCANNER PI CHN CHECK - TEMP. FIX TO HARDWARE PROBLEM - 12 JUNE 72 - JHS
                       SCNPIC:
047176 / 731240,,000002          CONI  DKB,  TAC1             ;
047177 / 405100,,000007          ANDI TAC1,     7             ;
047200 / 306100,,000005          CAIN TAC1,000005             ;;DOES DKB STILL THINK IT'S ON CHANNEL 5?
047201 / 254000,,047216          JRST      047216             ;;  YES
047202 / 731200,,000015          CONO  DKB,000015             ;;  SET PI'S AND RESET FOR GOOD MEASURE
047203 / 260140,,000316         PUSHJ    P,PUSHIT             ;
047204 / 260140,,044320         PUSHJ    P,044320             ;
047205 / 260140,,044066         PUSHJ    P,DISMES             ;
047215 / 260140,,000341         PUSHJ    P, POPIT             ;
                       MIDCHK:
                       ;MIDNITE CHECK
047216 / 700600,,001020          CONO   PI,001020             ;;HOLD UP CHANNEL 3
047217 / 200113,,024633          MOVE TAC1,  TIME(PID)        ;
047220 / 315100,,037635         CAMGE TAC1,037635             ;;GONE PAST MIDNITE?
047221 / 254000,,047234          JRST      047234             ;;NO
047222 / 274100,,037635           SUB TAC1,037635             ;;KEEP COUNT ACCURATE
047223 / 202113,,024633         MOVEM TAC1,  TIME(PID)        ;;REPLACE COUNT
047224 / 700600,,002020          CONO   PI,002020             ;;ENABLE CHANNEL 3 AGAIN
                       CIP3:
047225 / 201000,,000000         MOVEI                         ;;RESET IOS ALSO.
047226 / 350053,,024634           AOS  TAC,THSDAT(PID)        ;;UPDATE DAY.
047227 / 231040,,000037         IDIVI  TAC,000037             ;
047230 / 235000,,000014          DIVI      000014             ;;NO.
047231 / 135000,,050036           LDB      PMONTB             ;
047232 / 315000,,000002         CAMGE      000002             ;;END OF MONTH?
047233 / 254000,,047225          JRST      047225             ;;YES.
                       ;	SETZM	AFOOL			;THESE 4 INSTR. FOR APRIL 1 HACK.
                       ;	JUMPN	TAC1,CIP2		
                       ;	CAIN	TAC,3
                       ;	SETOM	AFOOL
                       CIP2:
047234 / 700600,,002020          CONO   PI,002020             ;;ENABLE CLOCK TRAPS AGAIN
047235 / 326540,,047271         JUMPN  PID,047271             ;;SKIP THIS STUFF ON THE PDP-6
047236 / 326540,,047241         JUMPN  PID,047241             ;
151713 / 000000,,000021                                       ;
047237 / 261140,,151713          PUSH    P,151713             ;
047240 / 262140,,036260           POP    P,036260             ;
047241 / 373000,,022421         SOSLE      FSCKCT             ;
047242 / 332000,,022504         SKIPE      FSNCLK             ;
047243 / 260140,,073755         PUSHJ    P,073755             ;;THINK ABOUT FREE STORAGE.
047244 / 333000,,022511        SKIPLE      SPFSNT             ;
047245 / 260140,,074532         PUSHJ    P,074532             ;;REPLENISH SPARE LISTS IF NECESSARY
                       ;MAINTAIN DISPLAYS
047246 / 260140,,130606         PUSHJ  PDP,DPYCLK             ;
047247 / 326540,,047252         JUMPN  PID,047252             ;
151715 / 000000,,000023                                       ;
047250 / 261140,,151715          PUSH    P,151715             ;
047251 / 262140,,036260           POP    P,036260             ;
047252 / 260140,,114172         PUSHJ    P,IMPCLK             ;
047253 / 326540,,047256         JUMPN  PID,047256             ;
151707 / 000000,,000014                                       ;
047254 / 261140,,151707          PUSH    P,151707             ;
047255 / 262140,,036260           POP    P,036260             ;
047256 / 322540,,047271         JUMPE  PID,CIPZZ1             ;
047257 / 260140,,044066         PUSHJ    P,DISMES             ;
047270 / 201540,,000000         MOVEI  PID,                   ;;WHICH IS KNOWN TO BE ZERO
                       CIPZZ1:
047271 / 326540,,047274         JUMPN  PID,047274             ;
151675 / 000000,,000000                                       ;
047272 / 261140,,151675          PUSH    P,151675             ;
047273 / 262140,,036260           POP    P,036260             ;
                       ; KEEP INFORMATION FLOWING BETWEEN THE PROCESSORS
                       ; MODIFIED CLOCK ROUTINES FOR 2-PROCESSOR SYSTEM
047274 / 322540,,047323         JUMPE  PID,JLCALC             ;
047275 / 260140,,066242         PUSHJ    P,066242             ;;CALCULATE JOB LOADING
047276 / 260140,,150256         PUSHJ    P,150256             ;;DO SPACEWAR
047277 / 260140,,135635         PUSHJ    P,135635             ;;CALCULATE WHO LINES
047300 / 260140,,124303         PUSHJ    P,124303             ;;KEEP PAPERTAPE READER ALIVE
047301 / 260140,,123623         PUSHJ    P,123623             ;;KEEP TAPE PUNCH/PLOTTER GOING
047302 / 260140,,151073         PUSHJ    P,151073             ;;AND THE AD
047303 / 377000,,016605          SOSG      016605             ;;COUNT DOWN TO RUN XGP CLOCK LEVEL.
047304 / 260140,,110467         PUSHJ    P,110467             ;;AND THE XGP
047305 / 332000,,022701         SKIPE      022701             ;; ADC?
047306 / 260140,,124725         PUSHJ    P, ADCP2             ;
047307 / 332000,,022732         SKIPE      DACP2L             ;
047310 / 260140,,125423         PUSHJ    P, DACP2             ;
                       ;END IFN 0,
                       NULOK:
047311 / 371000,,032564          SOSL      032564             ;; TIME TO READ THE CROK AGAIN?
047312 / 254000,,047562          JRST      047562             ;; NO, SKIP IT
047313 / 201040,,043120         MOVEI  TAC,043120             ;; SET FOR 5 MINS
047314 / 202040,,032564         MOVEM  TAC,CRKYET             ;
047315 / 201100,,000005         MOVEI TAC1,000005             ;; WE WILL TRY FIVE TIMES
047316 / 260140,,060400         PUSHJ  PDP,060400             ;; READ PETIT CROCK
047317 / 254000,,047562          JRST      047562             ;; NO, CRK SICK
047320 / 202200,,000557         MOVEM ITEM,000557             ;; UPDATE TIME OF DAY
047321 / 202240,,000560         MOVEM  DAT,000560             ;; UPDATE DATE
047322 / 254000,,047562          JRST       CRKT4             ;
                       JLCALC:
047323 / 326540,,047326         JUMPN  PID,047326             ;
151711 / 000000,,000016                                       ;
047324 / 261140,,151711          PUSH    P,151711             ;
047325 / 262140,,036260           POP    P,036260             ;
047326 / 200053,,024630          MOVE  TAC,024630(PID)        ;
047327 / 332000,,000562         SKIPE       P2NUM             ;
047330 / 335001,,024261        SKIPGE      PALIVE(TAC)        ;
047331 / 260140,,066242         PUSHJ    P,066242             ;; RECOMPUTE PRIORITIES
                       JORD:
047332 / 332000,,020702         SKIPE      ORDYET             ;
047333 / 260140,,066167         PUSHJ    P,066167             ;; SORT THE JOBS IN THE RUN QUEUE INTO PRIORITY ORDER
                       ; HERE IS THE GUY THAT CALLS UP PHANTOM PROCESSES LIKE BATCH MONITORS
047334 / 373000,,022735         SOSLE      022735             ;;RUN OUR BATCH JOB YET?
047335 / 254000,,047411          JRST      047411             ;;NO. NOT YET
047336 / 326540,,047341         JUMPN  PID,047341             ;
151675 / 000000,,000000                                       ;
047337 / 261140,,151675          PUSH    P,151675             ;
047340 / 262140,,036260           POP    P,036260             ;
047341 / 201040,,007020         MOVEI  TAC,007020             ;;RESET TO LOOK AGAIN IN 1 MINUTE
047342 / 202040,,022735         MOVEM  TAC,022735             ;;SET RETRY TIME
047343 / 332000,,000567         SKIPE      000567             ;;MAINTMODE?
047344 / 254000,,047411          JRST      047411             ;;FLUSH THIS CODE WHILE MAINTM SET
047345 / 205040,,777765         MOVSI  TAC,777765             ;;LENGTH OF BATMAN
                       BATLOP:
047346 / 202040,,022736         MOVEM  TAC,022736             ;;SAVE IT
047347 / 332641,,022737         SKIPE  AC1,BATMAN(TAC)        ;;JOBNAM
047350 / 336741,,022752         SKIPN  AC3, ROBIN(TAC)        ;;PPN
047351 / 254000,,047404          JRST      047404             ;;AVOID EMBARASSING CONFUSION!
047352 / 335201,,022765        SKIPGE    J,ALFRED(TAC)        ;;GET CIRCUMSTANTIAL CODE
047353 / 254000,,047404          JRST      047404             ;;NEGATIVE MEANS DON'T START ME
047354 / 322200,,047364         JUMPE    J,047364             ;;IF ZERO THEN START ME!
047355 / 200040,,024633          MOVE  TAC,024633             ;;GET JIFFIE TIME
047356 / 231040,,007020         IDIVI  TAC,007020             ;;MAKE IT MINUTES
047357 / 504040,,024634           HRL  TAC,024634             ;;GET THE DATE
047360 / 315040,,000004         CAMGE  TAC,000004             ;;COMPARE WITH HIS REQUEST
047361 / 254000,,047404          JRST      047404             ;;NOT YET.
047362 / 550040,,022736          HRRZ  TAC,022736             ;;GET CURRENT POINTER BACK
047363 / 402001,,022765         SETZM      ALFRED(TAC)        ;;SO WE DON'T GET HERE AGAIN
                       BAT0:
047364 / 201200,,000077         MOVEI    J,000077             ;;SCAN JOBS LOOKING FOR ONE LIKE THIS.
047365 / 205040,,040000         MOVSI  TAC,   JNA             ;
                       BAT1:
047366 / 616044,,026114          TDNN  TAC,JBTSTS(J)          ;;IS THERE A JOB HERE?
047367 / 254000,,047377          JRST      047377             ;;NO.
047370 / 316644,,030142          CAMN  AC1,JOBNAM(J)          ;;WITH A NAME LIKE MINE?
047371 / 312744,,027720          CAME  AC3,PRJPRG(J)          ;;AND A PPN LIKE MINE TOO?
047372 / 254000,,047377          JRST      047377             ;;NO MATCH.
047373 / 331704,,026114         SKIPL  AC2,JBTSTS(J)          ;;IS THIS JOB RUNNABLE?
047374 / 603700,,010000          TLNE  AC2,010000             ;;NOT RUNNABLE. IS IT LOGGED IN?
047375 / 254000,,047404          JRST      047404             ;;RUNNABLE OR LOGGED IN.
                       ;HERE WE HAVE A DEAD PHANTOM.  KILL IT AND START A NEW ONE.
                       ;TO BE CONTINUED....
047376 / 254000,,047404          JRST      047404             ;;TO BE CONTINUED. IN THE MEANTIME, DO NOTHING.
                       BAT2:
047377 / 367200,,047366          SOJG    J,047366             ;;LOOP LOOKING THRU ALL JOBS.
047400 / 260140,,051066         PUSHJ    P,051066             ;;ATTEMPT TO MAKE A NEW JOB
047401 / 254000,,047411          JRST      047411             ;;NONE AVAILABLE. MAYBE SOON...
047402 / 254000,,047407          JRST      047407             ;;AVAILABLE LATER...
                       BAT4:
047403 / 260140,,047453         PUSHJ    P,047453             ;;START A PHANTOM JOB.
                       BAT3:
047404 / 200040,,022736          MOVE  TAC,022736             ;;GET BACK BAT POINTER
047405 / 253040,,047346         AOBJN  TAC,BATLOP             ;
047406 / 254000,,047411          JRST      047411             ;;DONE
                       BAT3B:
047407 / 201040,,000074         MOVEI  TAC,000074             ;;WAIT FOR ONE SECOND
047410 / 202040,,022735         MOVEM  TAC,BATYET             ;
                       BAT3A:
                       ;DONE WITH PHANTOM CHECKS FOR THIS MINUTE.
                       ;END OF FTBAT
                       ; MAINTAIN P1'S 2-PROCESSOR COMMUNICATION
047411 / 326540,,047414         JUMPN  PID,047414             ;
151675 / 000000,,000000                                       ;
047412 / 261140,,151675          PUSH    P,151675             ;
047413 / 262140,,036260           POP    P,036260             ;
047414 / 740640,,020265          CONI   TV,020265             ;;READ THE SPACEWAR BUTTONS
047415 / 332000,,020273         SKIPE      020273             ;;ONLY RUN SPACEWAR IF SOMEONE WANTS IT
047416 / 260140,,150261         PUSHJ    P,150261             ;;RUN SPACEWAR OFF THE CLOCK
047417 / 200053,,024630          MOVE  TAC,024630(PID)        ;; PICK UP ADDRESS OF PDP-6'S DATA AREA
047420 / 335001,,024261        SKIPGE      PALIVE(TAC)        ;; IS SIX RUNNING?
047421 / 260140,,135635         PUSHJ    P,135635             ;; APPARANTLY NOT. REFRESH WHO LINE.
047422 / 336000,,000562         SKIPN      000562             ;; DOES P2 EXIST?
047423 / 254000,,047554          JRST      047554             ;; NO, FORGET IT
047424 / 332000,,036124         SKIPE      036124             ;; PARITY ERROR ON P2?
047425 / 260140,,037717         PUSHJ    P,037717             ;;YES. CALL PARITY ERROR SERVICE
                       CRKT3:
047426 / 200200,,000557          MOVE ITEM,000557             ;; PICK UP TIME OF DAY
047427 / 336240,,000560         SKIPN  DAT,000560             ;; IS THE CRK RUNNING? DATES AREN'T = 0
047430 / 254000,,047434          JRST      047434             ;; CRK DEAD, FORGET IT.
047431 / 202213,,024633         MOVEM ITEM,  TIME(PID)        ;; UPDATE TIME OF DAY
047432 / 202253,,024634         MOVEM  DAT,THSDAT(PID)        ;; UPDATE DATE
047433 / 402000,,000560         SETZM      000560             ;; CLEAR DATE FLAG
                       CRKT1:
047434 / 332000,,017211         SKIPE      017211             ;;RUN CLOCKS FOR PTR,PTP,AD AND XGP
047435 / 260140,,124516         PUSHJ    P, PTRP1             ;
047436 / 332000,,017565         SKIPE      PTPSID             ;
047437 / 260140,,123620         PUSHJ    P, PTPP1             ;
047440 / 333000,,022632        SKIPLE       ADADV             ;
047441 / 260140,,151137         PUSHJ    P,  ADP1             ;
047442 / 332000,,016604         SKIPE      016604             ;;DO WE HAVE TO LOOK AT XGP STATUS?
047443 / 260140,,110457         PUSHJ    P,110457             ;;YES.
047444 / 332000,,022700         SKIPE      022700             ;; ADC CALLING?
047445 / 260140,,125023         PUSHJ    P,125023             ;; YES
047446 / 332000,,022731         SKIPE      022731             ;; DAC MAYBE?
047447 / 260140,,125507         PUSHJ    P, DACP1             ;
047450 / 254000,,047554          JRST       CRKT2             ;
                       ; HERE IS SUBROUTINE FOR PHANTOM ROUTINES
                       GETBT0:
047451 / 200200,,000001          MOVE    J,000001             ;;JNA FOR THIS JOB IS TURNED ON ALREADY.
047452 / 254000,,047467          JRST      GETBTX             ;
                       GETBAT:
047453 / 332000,,000567         SKIPE      000567             ;
047454 / 263140,,000000          POPJ    P,                   ;
047455 / 200040,,022736          MOVE  TAC,022736             ;;GET THE POINTER TO BAT TABLES
047456 / 200041,,023000          MOVE  TAC,GORDON(TAC)        ;;GET THIS PHANTOM'S PRIVILEGE BITS
047457 / 202044,,027420         MOVEM  TAC,JBTPRV(J)          ;;SAVE
047460 / 202044,,027520         MOVEM  TAC,JB2PRV(J)          ;;ALSO IN PASSIVE BITS
047461 / 202744,,027720         MOVEM  AC3,PRJPRG(J)          ;
047462 / 202744,,030442         MOVEM  AC3,JOBPPN(J)          ;
047463 / 202644,,030142         MOVEM  AC1,JOBNAM(J)          ;;SETUP THIS GUY'S NAME
047464 / 260140,,072454         PUSHJ    P,NAMSTT             ;
047465 / 205040,,040000         MOVSI  TAC,040000             ;;MAKE SURE NO ONE GETS THIS NUMBER
047466 / 436044,,026114           ORM  TAC,JBTSTS(J)          ;
                       GETBTX:
047467 / 205040,,446353         MOVSI  TAC,446353             ;;DEVICE DISK. 
047470 / 202044,,030743         MOVEM  TAC,JOBDEV(J)          ;
047471 / 205040,,445560         MOVSI  TAC,445560             ;;AND DUMP
047472 / 202044,,031043         MOVEM  TAC,JOBLOG(J)          ;
047473 / 402004,,030542         SETZM      JOBCRD(J)          ;;NO CORE SIZE OR STARTING INCREMENT
047474 / 402004,,030642         SETZM      JBTUFD(J)          ;
047475 / 402004,,030020         SETZM      DSKPPN(J)          ;;INITIALIZE DISK ALIAS PPN
047476 / 402004,,030242         SETZM      JBTKCJ(J)          ;
047477 / 205040,,010000         MOVSI  TAC,  JLOG             ;
047500 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
047501 / 513004,,032765         HLLZS      SAVSAI(J)          ;;JUST IN CASE
                       GETBT1:
047502 / 476000,,000002         SETOM        TAC1             ;
047503 / 260140,,140123         PUSHJ    P,DDBSRC             ;
047504 / 254000,,047545          JRST      047545             ;; NO DDB, DELAY
                       GETBT2:
047505 / 400340,,000000          SETZ PROG,                   ;
047506 / 201040,,000140         MOVEI  TAC, JOBDA             ;
047507 / 260140,,072047         PUSHJ    P,072047             ;; GET IT SOME CORE
047510 / 254000,,047535          JRST      047535             ;; NOT AVAILABLE, WAIT FOR IT
                       GETBT3:
047511 / 205040,,006000         MOVSI  TAC,006000             ;
047512 / 336004,,021760         SKIPN        XJOB(J)          ;; IF STILL GETTING CORE, DELAY A WHILE
047513 / 612044,,026114          TDNE  TAC,JBTSTS(J)          ;; DID JOB GO AWAY DURING ALL THIS?
047514 / 254000,,047552          JRST      047552             ;; YES, GET IT BACK IN
                       BATSW:
047515 / 260140,,060515         PUSHJ    P,060515             ;; SET-UP LOGIN STUFF
047516 / 200044,,030142          MOVE  TAC,JOBNAM(J)          ;
047517 / 202047,,000000         MOVEM  TAC,      (PROG)       ;
047520 / 200044,,030743          MOVE  TAC,JOBDEV(J)          ;; DEVICE
047521 / 202047,,000006         MOVEM  TAC,DEVWRD(PROG)       ;
047522 / 510044,,031043          HLLZ  TAC,JOBLOG(J)          ;; EXTENSION
047523 / 202047,,000001         MOVEM  TAC,FILEXT(PROG)       ;
047524 / 336044,,030542         SKIPN  TAC,JOBCRD(J)          ;; CORE SIZE
047525 / 254000,,047530          JRST      047530             ;; DON'T FUTZ WITH ZERO
047526 / 242040,,000012           LSH  TAC,000012             ;; TO WORDS
047527 / 275040,,000001          SUBI  TAC,000001             ;;TO PROT
047530 / 202047,,000133         MOVEM  TAC,JOBCOR(PROG)       ;
047531 / 550044,,031043          HRRZ  TAC,JOBLOG(J)          ;
047532 / 202047,,000013         MOVEM  TAC,INCWRD(JDAT)       ;;SAVE IN PLACE WE CAN FIND IT LATER
047533 / 201100,,060763         MOVEI TAC1,060763             ;; THIS GUY KNOWS ABOUT INCREMENTAL START-UP
047534 / 254000,,045737          JRST      MONJOB             ;
                       ; MORE PHANTOM CLOCK LEVEL ROUTINES, WAITING FOR RESOURCES
                       DELBAT:
047535 / 242200,,000014           LSH    J,000014             ;; HERE WE WAIT FOR CORE TO BECOME AVAILABLE
152261 / 047543,,000001           XWD BATRS,1                 ;
047536 / 270200,,152261           ADD    J,152261             ;
                       DELB1:
047537 / 700600,,000400          CONO   PI, PIOFF             ;
047540 / 136213,,024117          IDPB    J, CLOCK(PID)        ;
047541 / 700600,,000200          CONO   PI,  PION             ;
047542 / 263140,,000000          POPJ    P,                   ;
                       BATRS:
047543 / 200200,,000001          MOVE    J,   TAC             ;
047544 / 254000,,047505          JRST      GETBT2             ;
                       DELBTT:
047545 / 242200,,000014           LSH    J,000014             ;
152262 / 047550,,000001           XWD BATTT,1                 ;
047546 / 270200,,152262           ADD    J,152262             ;
047547 / 254000,,047537          JRST       DELB1             ;
                       BATTT:
047550 / 200200,,000001          MOVE    J,   TAC             ;
047551 / 254000,,047502          JRST      GETBT1             ;
                       BATSWP:
047552 / 205040,,200000         MOVSI  TAC,200000             ;; SET THIS FLAG AND PUT IN SWAPIN LIST
047553 / 254000,,066763          JRST      066763             ;; WILL CALL BATSW WHEN SWAPPED IN
                       ;THERE ARE 3 TABLES IN APRDAT OF EQUAL LENGTH WHICH CONTAIN THE NAMES OF
                       ;ALL THE PHANTOM JOBS AND A FLAG TO TELL IF THIS JOB SHOULD BE
                       ;STARTED AT ALL THE JOBS ARE STARTED WHEN THE SYSTEM STARTS UP AND
                       ;CHECKED FOR RESTART EVERY MINUTE.
                       ;END OF FTBAT
                       ; HERE WE FLUSH THE DISASTER TYPEOUT BUFFER THEN PROCESS CLOCK REQUESTS
                       CRKT2:
047554 / 326540,,047557         JUMPN  PID,047557             ;
151675 / 000000,,000000                                       ;
047555 / 261140,,151675          PUSH    P,151675             ;
047556 / 262140,,036260           POP    P,036260             ;
047557 / 200040,,036033          MOVE  TAC,DISPTR             ;
047560 / 312040,,036034          CAME  TAC,036034             ;; ANYTHING IN THE DISASTER BUFFER?
047561 / 260140,,043736         PUSHJ    P,043736             ;; YES, GO EMPTY IT
                       ;PROCESS TIMING REQUESTS STORED IN QUEUE
                       CRKT4:
047562 / 326540,,047565         JUMPN  PID,047565             ;
151712 / 000000,,000017                                       ;
047563 / 261140,,151712          PUSH    P,151712             ;
047564 / 262140,,036260           POP    P,036260             ;
047565 / 550253,,024117          HRRZ  DAT, CLOCK(PID)        ;;GET END OF LIST
                       CIP4:
047566 / 307253,,024262          CAIG  DAT,024262(PID)        ;;END YET?
047567 / 254000,,047637          JRST      047637             ;;YES
047570 / 370105,,000000           SOS TAC1,      (DAT)        ;;DECREMENT TIMING REQUEST
047571 / 602100,,007777          TRNE TAC1,007777             ;;TIME EXPIRED YET
047572 / 364240,,047566          SOJA  DAT,047566             ;;NO, CONTINUE SCAN
047573 / 700600,,000400          CONO   PI,000400             ;;YES, MOVE LAST ITEM IN LIST TO THIS
047574 / 200073,,024117          MOVE  TAC,@ CLOCK(PID)       ;
047575 / 370013,,024117           SOS       CLOCK(PID)        ;
047576 / 202045,,000000         MOVEM  TAC,      (DAT)        ;
047577 / 700600,,000200          CONO   PI,  PION             ;
152402 / 000000,,000002                                       ;
152402 / 440600,,000002 POINT 6,00000002,                     ;
152403 / 000000,,000023                                       ;
047600 / 135040,,152402           LDB  TAC,152402             ;
                       ;GET 6 BIT DATA ITEM
047601 / 557000,,000002         HLRZS      000002             ;; SETUP DISPATCH ADDRESS
047602 / 317100,,035407          CAMG TAC1,035407             ;; IS THIS A REASONABLE ADDRESS?
047603 / 254000,,047626          JRST      CIP5AA             ;
047604 / 261140,,000005          PUSH    P,   DAT             ;
047605 / 260140,,000544         PUSHJ    P,ALTNOW             ;
047606 / 255000,,000000          JFCL                         ;
047607 / 260140,,044320         PUSHJ    P,044320             ;
047610 / 260140,,044066         PUSHJ    P,DISMES             ;
047621 / 262140,,000005           POP    P,   DAT             ;
047622 / 336000,,036035         SKIPN      036035             ;
047623 / 254000,,047636          JRST       CIP5A             ;
047624 / 260140,,043761         PUSHJ    P,043761             ;
047625 / 254000,,000365          JRST      000365             ;
                       CIP5AA:
047626 / 261140,,000005          PUSH  PDP,000005             ;;SAVE ONLY VALUABLE AC
047627 / 261140,,036260          PUSH    P,036260             ;
047630 / 326540,,047633         JUMPN  PID,047633             ;
151714 / 000000,,000022                                       ;
047631 / 261140,,151714          PUSH    P,151714             ;
047632 / 262140,,036260           POP    P,036260             ;
047633 / 260142,,000000         PUSHJ  PDP,      (TAC1)       ;;AND DISPATCH TO TIMING REQUEST ROUTINE
047634 / 262140,,036260           POP    P,036260             ;
047635 / 262140,,000005           POP  PDP,   DAT             ;
                       CIP5A:
047636 / 364240,,047566          SOJA  DAT,047566             ;;GO BACK FOR MORE REQUESTS
                       ; IF WE ARE SHUFFLING 1K AT A TIME, DO ANOTHER K HERE, THEN CALL SCHEDULER
                       CIP5:
047637 / 326540,,047656         JUMPN  PID,047656             ;;P2 JUMPS TO CIP6A -AVOID RUNNING COMMAND
                       ;END OF IFN FTSHF1K
                       CIP11:
047640 / 326540,,047643         JUMPN  PID,047643             ;
151706 / 000000,,000011                                       ;
047641 / 261140,,151706          PUSH    P,151706             ;
047642 / 262140,,036260           POP    P,036260             ;
047643 / 377000,,026106          SOSG      026106             ;;DECREMENT HUNG IO DEVICE 
047644 / 260140,,045247         PUSHJ  PDP,045247             ;;GO CHECK FOR HUNG IO DEVICES
                       CIP6:
047645 / 700600,,002020          CONO   PI,002020             ;; ENABLE CLOCK TRAPS IF THEY WERE OFF
047646 / 326540,,047651         JUMPN  PID,047651             ;
151677 / 000000,,000001                                       ;
047647 / 261140,,151677          PUSH    P,151677             ;
047650 / 262140,,036260           POP    P,036260             ;
047651 / 332000,,026105         SKIPE      026105             ;;ANY COMMANDS TO PROCESS?
047652 / 260140,,051212         PUSHJ  PDP,051212             ;;YES, CALL COMMAND DECODER.
047653 / 326540,,047656         JUMPN  PID,047656             ;
151704 / 000000,,000006                                       ;
047654 / 261140,,151704          PUSH    P,151704             ;
047655 / 262140,,036260           POP    P,036260             ;
                       CIP6A:
047656 / 260140,,065671         PUSHJ  PDP,065671             ;;CALL SCHEDULER
047657 / 326540,,047662         JUMPN  PID,047662             ;
151710 / 000000,,000015                                       ;
047660 / 261140,,151710          PUSH    P,151710             ;
047661 / 262140,,036260           POP    P,036260             ;
047662 / 402013,,024637         SETZM      SCHEDF(PID)        ;;CLEAR FORCED SCHEDULING FLAG
047663 / 402013,,024632         SETZM       TIMEF(PID)        ;;CLEAR "CLOCK FIRED" FLAG
047664 / 326200,,047673         JUMPN    J,047673             ;; IF NULL JOB RUNNING, DO FOLLOWING TEST
047665 / 326540,,047673         JUMPN  PID,CLKSRJ             ;
151645 / 777764,,777764           XWD -RUNQ,-RUNQ             ;
047666 / 200640,,151645          MOVE  AC1,151645             ;
151644 / 777763,,777763           XWD -TQ,-TQ                 ;
047667 / 200700,,151644          MOVE  AC2,151644             ;
047670 / 316640,,021307          CAMN  AC1,021307             ;
047671 / 312700,,021306          CAME  AC2,021306             ;; IF ANYBODY RUNNABLE, BUMP COUNT
047672 / 350000,,036163           AOS      036163             ;
                       CLKSRJ:
047673 / 201100,,000001         MOVEI TAC1,000001             ;;THIS BIT WILL REPRESENT THE NEW JOB
047674 / 400040,,000000          SETZ  TAC,                   ;; SOMEWHERE IN TAC OR TAC1
047675 / 246044,,000000          LSHC  TAC,      (J)          ;;MOVE BIT TO APPROPRIATE POSITION
047676 / 436040,,035271           ORM  TAC,035271             ;; AND NOTE THIS JOB HAS BEEN RUN LATELY
047677 / 436100,,035272           ORM TAC1,035272             ;
047700 / 316213,,024061          CAMN ITEM,   JOB(PID)        ;;IS NEXT JOB SAME AS LAST ONE?
047701 / 254000,,047760          JRST      047760             ;;YES, JUST RESTORE ACS AND DISMISS
047702 / 332000,,000004         SKIPE      000004             ;; ARE WE SWITCHING TO THE NULL JOB?
047703 / 350000,,036160           AOS      036160             ;; NO, MARK ANOTHER SWITCHING
                       ;DIFFERENT JOB, SAVE SOFTWARE STATE(HARDWARE ALREADY SAVED)
047704 / 200353,,024061          MOVE JDAT,   JOB(PID)        ;;GET OLD JOB NUMBER
047705 / 200040,,023423          MOVE  TAC,023423             ;;GET <DATE>,,<TIME IN SECS>
047706 / 202047,,031343         MOVEM  TAC, FTIME(JDAT)       ;;AND SAVE FOR JOB THAT JUST RAN
047707 / 332353,,024063         SKIPE JDAT,JOBDAT(PID)        ;;NULL JOB OR CORE 0 ON OLD JOB?
047710 / 260140,,047736         PUSHJ    P,047736             ;; MOVE CHANNEL ASSIGNMENTS INTO USER CORE
                       NULJOB:
                       CIP7:
047711 / 202213,,024061         MOVEM ITEM,   JOB(PID)        ;;STORE NEW CURRENT JOB NUMBER
047712 / 200344,,027120          MOVE PROG,JBTADR(ITEM)       ;;RELOCATION FOR CURRETN JOB
047713 / 202353,,024063         MOVEM PROG,JOBADR(PID)        ;;XWD PROTEC,RELOC
047714 / 700200,,000553          CONO  APR,000553             ;; CLEAR APR ENABLED FLAGS
047715 / 513013,,023507         HLLZS      APRIN1(PID)        ;;DISABLE USER APR INTERRUPTS
047716 / 402013,,023511         SETZM      APRIN3(PID)        ;
047717 / 322200,,050037         JUMPE ITEM,050037             ;;IS NEW JOB NULL JOB?
047720 / 556353,,024065         HLRZM PROG,USRREL(PID)        ;;PROTECTION FOR CURRENT JOB
047721 / 556347,,000044         HLRZM PROG,JOBREL(JDAT)       ;;SET PROT. IN JOB DATA AREA FOR USER TO LOOK AT
047722 / 260140,,047751         PUSHJ    P,047751             ;; MOVE USER TABLE INTO SYSTEM
047723 / 200044,,033665          MOVE  TAC,JBTIEN(J)          ;; PICK UP USER INTERRUPT ENABLINGS
047724 / 405040,,630110          ANDI  TAC,CPUMSK             ;
047725 / 202053,,023510         MOVEM  TAC,APRIN2(PID)        ;; SET SO CH3 CAN TEST FOR THEM
047726 / 434047,,000043           IOR  TAC,JOBENB(JDAT)       ;;NOW INCLUDE OLD-STYLE INTS
047727 / 405040,,631110          ANDI  TAC,631110             ;; SYSTEM ENABLED FOR PDL OV, ILM, NXM, CLK
047730 / 542053,,023507          HRRM  TAC,APRIN1(PID)        ;; PUT IN USER ENABLED LOC
047731 / 431040,,000110          XORI  TAC,000110             ;; COMPLEMENT FOV, AROV, SO 0 MEANS ENABLE
                       ; AND 1 MEANS DISABLE
047732 / 271040,,000330          ADDI  TAC,000330             ;; SET BITS 27 AND 30 IF DISABLE
                       ; SET BITS 28 AND 31 IF ENABLE
047733 / 405040,,000660          ANDI  TAC,000660             ;;MASK OUT ALL BUT PC CHNG+AROVF ENABLE-DISABLE
047734 / 700201,,000003          CONO  APR,APRCHN(TAC)        ;;ENABLE OR DISABLE PC CHNG AND AR OVF
047735 / 254000,,047760          JRST      047760             ;; JUMP TO PAGE AFTER NEXT
                       ;S2U AND U2S
                       S2U:
047736 / 201047,,000072         MOVEI  TAC,JOBPRT(JDAT)       ;;DEST.=FIRST LOC PROTECTED FROM USER
047737 / 505053,,024066          HRLI  TAC,USRPRT(PID)        ;;SOUR.=SYSTEM DATA STORAGE FOR CURRETN JOB
047740 / 331113,,024066         SKIPL TAC1,USRHCU(PID)        ;
047741 / 254000,,047744          JRST       CIP14             ;
047742 / 275340,,000002          SUBI JDAT,     2             ;
047743 / 254000,,047747          JRST       CIP13             ;
                       CIP14:
047744 / 303100,,000017         CAILE TAC1,000017             ;;MUST BE 17 OR LESS(IO MIGHT
                       ;CLOBBER IF ADDRESS CHECKING MISSES)
047745 / 201100,,000017         MOVEI TAC1,000017             ;;MOVE ALL 20 CHANNELS IF NEG.
                       ;OR LESS THAN 0.
047746 / 270340,,000002           ADD JDAT,000002             ;;RELOCATE TO USER AREA
                       CIP13:
047747 / 251047,,000075           BLT  TAC,JOBJDA(JDAT)       ;;MOVE TO USER JOB DATA AREA
                       ;STOP WITH USER CHANNEL 0-1+C(USRHCU)
047750 / 263140,,000000          POPJ    P,                   ;
                       U2S:
047751 / 201053,,024066         MOVEI  TAC,USRPRT(PID)        ;;DEST.=PROTECTED AREA IN MONITOR
047752 / 505047,,000072          HRLI  TAC,JOBPRT(JDAT)       ;;SOURCE=FIRST PROTECTED LOC. IN JB  DATA AREA
047753 / 331107,,000072         SKIPL TAC1,JOBHCU(JDAT)       ;;MOVE NO. OF USER IO CHAN. IN USE
047754 / 303100,,000017         CAILE TAC1,000017             ;;MUST BE 17 OR LESS(IO MIGHT CLOBBER
                       ;IF ADRRESS CHECKING MISSES
047755 / 201100,,000017         MOVEI TAC1,000017             ;;MOVE ALL 20 CHAN. IF NEG. OR GREATER THAN 17
047756 / 251042,,024071           BLT  TAC,USRJDA(TAC1)       ;;AND MOVE INTO MONITOR
047757 / 263140,,000000          POPJ    P,                   ;
                       ;RESTORE HARDWARE STATE OF CURRENT JOB
                       CIP8:
047760 / 322540,,047776         JUMPE  PID, CIP8A             ;
047761 / 322200,,047776         JUMPE ITEM, CIP8A             ;
047762 / 260140,,000316         PUSHJ    P,PUSHIT             ;
047763 / 260140,,044066         PUSHJ    P,DISMES             ;
047773 / 260140,,000341         PUSHJ    P, POPIT             ;
047774 / 403213,,024061         SETZB ITEM,   JOB(PID)        ;;MAKE SURE IT IS THE NULL JOB!!!!!!!!
047775 / 254000,,050037          JRST       NULJB             ;
                       CIP8A:
047776 / 260140,,072621         PUSHJ    P, GETPR             ;
047777 / 700140,,000001         DATAO  APR,   TAC             ;
050000 / 476004,,032043         SETOM       STIME(ITEM)       ;; MARK THAT THIS JOB HAS BEEN RUN
050001 / 135040,,037600           LDB  TAC,037600             ;; AND MARK HIGH SEGMENT TOO
050002 / 200101,,026114          MOVE TAC1,JBTSTS(TAC)        ;; IF IT IS NOT WRITE-PROTECTED
050003 / 607100,,000001          TLNN TAC1,   JWP             ;
050004 / 476001,,032043         SETOM       STIME(TAC)        ;; IF WRITE-ENABLED, MARK USED.
050005 / 332344,,027120         SKIPE JDAT,JBTDAT(ITEM)       ;;JOB DATA AREA(IS THERE ONE?)
050006 / 254000,,050012          JRST       CIP8B             ;
050007 / 332013,,024262         SKIPE      NULBAD(PID)        ;; IS THE NULL JOB SICK?
050010 / 254000,,050037          JRST      050037             ;; YES, GO FIX IT
050011 / 201353,,024121         MOVEI JDAT,NULDAT(PID)        ;;NO, MUST BE NULL JOB
                       CIP8B:
050012 / 200047,,000037          MOVE  TAC,JOBD17(JDAT)       ;
050013 / 202053,,024465         MOVEM  TAC,CLKS17(PID)        ;
050014 / 205747,,000020         MOVSI   17,JOBDAC(JDAT)       ;;RESTORE DUMP ACS
050015 / 322540,,050024         JUMPE  PID, CIP8C             ;
050016 / 251740,,000016           BLT   17,    16             ;
151732 / 000000,,001216                                       ;
050017 / 200740,,151732          MOVE   17,151732             ;
050020 / 332017,,023514         SKIPE      APRERR(17)         ;
050021 / 254000,,047076          JRST      CLKERR             ;
050022 / 200757,,024465          MOVE   17,CLKS17(17)         ;
050023 / 254520,,025305           JEN      @025305            ;
                       CIP8C:
050024 / 210200,,000004          MOVN    J,     J             ;
050025 / 205040,,400000         MOVSI  TAC,400000             ;
050026 / 242044,,000000           LSH  TAC,      (J)          ;
050027 / 700540,,000001         DATAO   PI,   TAC             ;
050030 / 251740,,000016           BLT   17,    16             ;
151676 / 000000,,000000                                       ;
050031 / 200740,,151676          MOVE   17,151676             ;
050032 / 332017,,023514         SKIPE      APRERR(17)         ;;ERROR IN THE EXEC?
050033 / 254000,,047076          JRST      047076             ;;YES. GO PROCESS.
050034 / 200757,,024465          MOVE   17,CLKS17(17)         ;
050035 / 254520,,024067           JEN      @024067            ;; RETURN TO USER.
                       PMONTB:
050036 / 000001,,037621                                       ;
050036 / 360601,,037621 POINT 6,01037621,5                    ;
                       ;POINTER TO NO. DAYS IN MONTH
                       ;THE NULL JOB
                       ;RUNS IN USER MODE WITH PC=1 AND COUNTS IN AC 0
                       NULJB:
050037 / 371013,,024111          SOSL      CHKYET(PID)        ;
050040 / 254000,,050051          JRST      NULJB1             ;
050041 / 201100,,001750         MOVEI TAC1,001750             ;; ONLY CHECKSUM EVERY THOUSAND TIMES
050042 / 202113,,024111         MOVEM TAC1,CHKYET(PID)        ;
050043 / 260140,,050113         PUSHJ    P,050113             ;;CHECK FOR ERROR AND FIX
050044 / 254000,,050051          JRST      050051             ;;NO ERRORS
050045 / 255000,,000000          JFCL                         ;
050046 / 200040,,023021          MOVE  TAC,023021             ;;RECOMPUTE CHECKSUM, ERROR FIXED!
050047 / 260140,,050100         PUSHJ    P, CHECK             ;
050050 / 202100,,024120         MOVEM TAC1,MONSUM             ;
                       NULJB1:
050051 / 402013,,024262         SETZM      NULBAD(PID)        ;
050052 / 326540,,050056         JUMPN  PID,NULSIX             ;
050053 / 205740,,050061         MOVSI   17,050061             ;; SET UP BLT TO ACCUMULATORS
050054 / 251740,,000007           BLT   17,000007             ;; BLT IN ZINGHEIM'S NULL JOB
050055 / 254440,,000001          JRST   11,000001             ;;DISMISS IF INTERRUPT IN PROGRESS
                       NULSIX:
050056 / 205740,,050070         MOVSI   17, NULJ6             ;
050057 / 251740,,000010           BLT   17, NULL6             ;
050060 / 254440,,000001          JRST   11,     1             ;
                       NULJ10:
050061 / 000000,,000000                                       ;
050062 / 241000,,777777           ROT      777777             ;; RING AROUND THE ACCUMULATOR
050063 / 607000,,200000          TLNN      200000             ;
050064 / 641000,,400000           TLC      400000             ;
050065 / 201400,,070000         MOVEI   10, 70000             ;
050066 / 365400,,000005         SOJGE   10,     5             ;
050067 / 254000,,000001          JRST           1             ;
                       NULJ6:
050070 / 000000,,000000                                       ;
050071 / 241000,,000001           ROT      000001             ;; RING AROUND THE ACCUMULATOR
050072 / 606000,,000002          TRNN           2             ;
050073 / 640000,,000001           TRC           1             ;
050074 / 201400,,034000         MOVEI   10, 34000             ;
050075 / 365400,,000005         SOJGE   10,     5             ;
050076 / 256000,,000315           XCT      000315             ;;TRAP IF CORE GETS CLEARED
050077 / 254000,,000001          JRST           1             ;
                       ; CHECKSUM ROUTINE. CALL WITH IOWD IN TAC, RETURNS CHECKSUM IN TAC1.
                       CHECK:
050100 / 201100,,000000         MOVEI TAC1,                   ;
050101 / 255200,,050102         JCRY0      050102             ;
050102 / 270101,,000000           ADD TAC1,      (TAC)        ;
153135 / 344100,,050104          AOJA TAC1,050104             ;
050103 / 255200,,153135         JCRY0      153135             ;
050104 / 253040,,050102         AOBJN  TAC,050102             ;
050105 / 554040,,000002          HLRZ  TAC,  TAC1             ;
050106 / 553000,,000002         HRRZS        TAC1             ;
050107 / 270100,,000001           ADD TAC1,   TAC             ;
050110 / 623100,,000001          TLZE TAC1,     1             ;
050111 / 271100,,000001          ADDI TAC1,     1             ;
050112 / 263140,,000000          POPJ  PDP,                   ;
050113 /                 ;::   BEGIN STANFO.APRSER.SYSFIX.
                       ; ROUTINE TO RE-READ THE PROTECTED PART OF THE MONITOR FROM LIBRASCOPE
                       ; CALLED BY:
                       ;	PUSHJ P,SYSFIX
                       ;	<NO ERRORS>
                       ;	<ERROR, BUT COULDN'T FIX>
                       ;	<ERRORS FIXED>
                       SYSFIX:
050113 / 261140,,000001          PUSH    P,   TAC             ;
050114 / 261140,,000002          PUSH    P,  TAC1             ;
050115 / 200040,,023021          MOVE  TAC,MONPTR             ;
050116 / 260140,,050100         PUSHJ    P,050100             ;;CHECKSUM MONITOR
050117 / 312100,,024120          CAME TAC1,024120             ;;IS IT OK?
050120 / 254000,,050124          JRST       NOTOK             ;
050121 / 262140,,000002           POP    P,  TAC1             ;
050122 / 262140,,000001           POP    P,   TAC             ;
050123 / 263140,,000000          POPJ    P,                   ;;ALL IS WELL
                       NOTOK:
050124 / 262140,,000002           POP    P,  TAC1             ;
050125 / 262140,,000001           POP    P,   TAC             ;
                       SYSCHK:
050126 / 260140,,000316         PUSHJ    P,PUSHIT             ;
050127 / 260140,,044066         PUSHJ    P,DISMES             ;
050137 / 326540,,050144         JUMPN  PID,050144             ;;THE PDP-6 CANT FIX ANYTHING
050140 / 744740,,000400         CONSO  DSK,000400             ;;IS THERE ANY DISK TODAY?
050141 / 336000,,023014         SKIPN      023014             ;;IS THIS SYSTEM OUT THERE?
050142 / 254000,,050145          JRST       NOFIX             ;
050143 / 254000,,050147          JRST      050147             ;;ATTEMPT TO FIX ERRORS
                       SIXFIX:
050144 / 402000,,024111         SETZM      024111             ;;TELL THE PDP-10 TO LOOK SOON
                       NOFIX:
050145 / 260140,,000341         PUSHJ    P, POPIT             ;
050146 / 254000,,037401          JRST      037401             ;;TELL THEM NOTHING FIXED!
                       GOFIX:
050147 / 476000,,023422         SETOM      023422             ;
050150 / 701340,,777770         CONSO  IOP,777770             ;;IF NO BITS ON, IS IDLE.
050151 / 254000,,050155          JRST       IOPOK             ;
050152 / 205600,,000001         MOVSI  UUO,     1             ;
050153 / 701340,,300070         CONSO  IOP,300070             ;;IF JOB DONE, OR ANY ERROR IS UP, IS OK
050154 / 367600,,050153          SOJG  UUO,050153             ;;IF OTHER BITS ON BUT NOT JOB DONE, OR ERROR WAIT FOR IT
                       IOPOK:
050155 / 701240,,154753          CONI  IOP,154753             ;;SAVE THE STATUS OF THE IOP
050156 / 336600,,023021         SKIPN  UUO,023021             ;;IOWD FOR THE PROTECTED PART OF THE MONITOR
050157 / 254000,,050231          JRST      050231             ;;IF NOT SET UP YET, FORGET IT! (WHEREDAFUCKAREWE)
050160 / 550640,,000014          HRRZ  AC1,   UUO             ;
050161 / 242640,,777773           LSH  AC1,777773             ;;THIS SHOULD BE THE STARTING SECTOR COUNT
050162 / 201700,,000037         MOVEI  AC2,    37             ;
050163 / 404700,,000014           AND  AC2,000014             ;;GET OFFSET FOR FIRST 40 WORDS
050164 / 275700,,000400          SUBI  AC2,000400             ;;AND THAT LEAVES....
                       ;READ FIXLEN WORDS AT A TIME AND COMPARE WITH MEMORY
                       DONXT:
050165 / 201740,,000040         MOVEI  AC3,000040             ;;WE WILL TRY THIS MENY TIMES
                       DOAGIN:
050166 / 701200,,000000          CONO  IOP,                   ;
050167 / 744600,,014000          CONO  DSK, 14000             ;
151616 / 777400,,023022           XWD -FIXLEN,FIXBUF          ;
050170 / 701140,,151616         DATAO  IOP,151616             ;
050171 / 261140,,000015          PUSH    P,000015             ;;SAVE SECTOR #
050172 / 301640,,002300          CAIL  AC1,002300             ;;WRAP TO NEXT TRACK?
050173 / 271640,,001500          ADDI  AC1,001500             ;;YES, ADJUST
050174 / 270640,,016027           ADD  AC1,016027             ;
050175 / 744540,,000015         DATAO  DSK,   AC1             ;
050176 / 262140,,000015           POP    P,000015             ;;RESTORE SECTOR #
050177 / 701340,,300070         CONSO  IOP,300070             ;;WAIT FOR IOP TO FINISH
050200 / 254000,,050177          JRST      050177             ;
050201 / 701340,,300060         CONSO  IOP,300060             ;;ANY ERRORS?
050202 / 744700,,003370         CONSZ  DSK,  3370             ;
050203 / 367740,,050166          SOJG  AC3,DOAGIN             ;
050204 / 323740,,050231        JUMPLE  AC3,FIXXIT             ;
                       CHKWRD:
050205 / 347700,,050273          AOJG  AC2,NXTCHK             ;
050206 / 200756,,023421          MOVE  AC3,023421(AC2)        ;
050207 / 312754,,000000          CAME  AC3,      (UUO)        ;
050210 / 254000,,050237          JRST      050237             ;;TELL THE WORLD!
                       STRDON:
050211 / 253600,,050205         AOBJN  UUO,CHKWRD             ;
050212 / 353040,,023422         AOSLE  TAC,023422             ;;DONE WITH CHECK.
050213 / 254000,,050222          JRST      050222             ;;THERE WERE ERRORS.
050214 / 260140,,044066         PUSHJ    P,DISMES             ;
050221 / 254000,,050231          JRST      FIXXIT             ;
                       FIXXTB:
050222 / 260140,,044230         PUSHJ    P,DISDCP             ;
050223 / 260140,,044066         PUSHJ    P,DISMES             ;
                       FIXXIT:
050231 / 200600,,154753          MOVE  UUO,154753             ;;SUCCESS. NOW TRY TO PUT THE WORLD BACK.
050232 / 602600,,000010          TRNE  UUO,000010             ;;IF JOB DONE IS ON, PUT UP DATA MISSED ALSO
050233 / 660600,,000040           TRO  UUO,000040             ;;TO DO PREVIOUS TRANSFER OVER FOR GOOD MEASURE
050234 / 701214,,000000          CONO  IOP,      (UUO)        ;;SINCE WE FORGET THAT THERE WAS AN ERROR
050235 / 260140,,000341         PUSHJ    P, POPIT             ;
050236 / 254000,,037400          JRST      CPOPJ2             ;
                       PRNDIF:
050237 / 260140,,000316         PUSHJ    P,PUSHIT             ;
050240 / 353040,,023422         AOSLE  TAC,ERRYET             ;
050241 / 254000,,050253          JRST      PRNDF1             ;
050242 / 260140,,044066         PUSHJ    P,DISMES             ;
050252 / 201040,,000000         MOVEI  TAC,                   ;
                       PRNDF1:
050253 / 301040,,000010          CAIL  TAC,000010             ;;ONLY PRINT THE FIRST 8 ERRORS
050254 / 254000,,050270          JRST      PRNDF2             ;
050255 / 201054,,000000         MOVEI  TAC,      (UUO)        ;
050256 / 260140,,044170         PUSHJ    P,DISLOC             ;
050257 / 260140,,044066         PUSHJ    P,DISMES             ;
050261 / 200054,,000000          MOVE  TAC,      (UUO)        ;
050262 / 260140,,044200         PUSHJ    P,DISOCT             ;
050263 / 260140,,044066         PUSHJ    P,DISMES             ;
050265 / 200040,,000017          MOVE  TAC,   AC3             ;
050266 / 260140,,044200         PUSHJ    P,DISOCT             ;
050267 / 260140,,044076         PUSHJ    P,044076             ;
                       PRNDF2:
050270 / 260140,,000341         PUSHJ    P, POPIT             ;
050271 / 202754,,000000         MOVEM  AC3,      (UUO)        ;;FIX THE SYSTEM!
050272 / 254000,,050211          JRST      050211             ;;AND CONTINUE LOOKING.
                       NXTCHK:
050273 / 271640,,000010          ADDI  AC1,FIXNUM             ;
050274 / 211700,,000400         MOVNI  AC2,000400             ;;THIS MANY WORDS FROM NOW ON!
050275 / 254000,,050165          JRST       DONXT             ;
050276 /                 ;::    BEND STANFO.APRSER.SYSFIX.
                       ; THIS IS WHERE THE USER INTERRUPT HANDLER RESIDES . . .
                       INTRUN:
050276 / 402013,,023475         SETZM      INTREQ(PID)        ;
050277 / 402000,,000015         SETZM         AC1             ;
050300 / 250653,,023511          EXCH  AC1,APRIN3(PID)        ;
050301 / 322640,,050303         JUMPE  AC1, INTR6             ;
050302 / 202653,,024067         MOVEM  AC1, USRPC(PID)        ;; GET RIGHT USRPC (INSTEAD OF JOBTM5)
                       INTR6:
050303 / 261153,,024064          PUSH    P,LASTPR(PID)        ;; WE WILL RESET PR FROM THIS
050304 / 261153,,024463          PUSH    P,USRSAV(PID)        ;; WE MIGHT HAVE INTERRUPTED UUOCON BEFORE IT IS REENTRANT, SO SAVE ALL THIS STUFF . . .
050305 / 261153,,024112          PUSH    P,  UUO0(PID)        ;; THE UUO LOCATION
050306 / 261173,,024116          PUSH    P,@UUOLOC(PID)       ;; THE UUO ITSELF
                       ; FOR XCTR SIMULATOR
050307 / 200653,,024061          MOVE  AC1,   JOB(PID)        ;
050310 / 202653,,024062         MOVEM  AC1,  SJOB(PID)        ;; NOW SAVE AWAY THE JOB NUMBER WHERE WE CAN FIND IT AGAIN REDILY
050311 / 261173,,024627          PUSH    P,@ CLKCH(PID)       ;; WE MUST ALSO SAVE AWAY CLKINT'S DATA BECAUSE IT IS NOT REENTRANT
050312 / 261153,,024465          PUSH    P,CLKS17(PID)        ;; IT DEPENDS ON THIS STAYING CONSTANT TOO!
050313 / 261153,,024063          PUSH    P,JOBDAT(PID)        ;; THESE ARE FOR THE REENTRANT PART OF UUOCON. FIRST THE JOB ADDRESS
050314 / 261153,,024065          PUSH    P,USRREL(PID)        ;; NEXT THE HIGHEST LOCATION IN THE LOSER'S CORE
050315 / 261153,,024637          PUSH    P,SCHEDF(PID)        ;; WE MUST SAVE THIS BECAUSE WE MIGHT HAVE INTERRUPTED WSCHED
050316 / 261153,,023515          PUSH    P, APRPC(PID)        ;; SAVE ANY APR ERRORS THAT MAY BE, BECAUSE THE I-LEVEL PROCESS MAY MAKE ITS OWN
050317 / 261153,,023514          PUSH    P,APRERR(PID)        ;
050320 / 261153,,023507          PUSH    P,APRIN1(PID)        ;
050321 / 201643,,000001         MOVEI  AC1,     1(P)          ;; SAVE USER CHANNEL TABLE TOO
050322 / 505653,,024066          HRLI  AC1,USRPRT(PID)        ;
050323 / 201715,,000000         MOVEI  AC2,      (AC1)        ;
050324 / 271700,,000022          ADDI  AC2,000022             ;
050325 / 251656,,000000           BLT  AC1,      (AC2)        ;
152020 / 000023,,000023           XWD USRJDA+20-USRPRT,USRJDA+20-USRPRT ;
050326 / 270140,,152020           ADD    P,152020             ;
050327 / 476013,,023431         SETOM      INTACT(PID)        ;; WE ARE NOW AT INTERRUPT LEVEL
050330 / 201200,,000077         MOVEI    J,000077             ;
                       INTR2:
050331 / 336644,,033765         SKIPN  AC1,JBTIRQ(J)          ;; INTERRUPT WAITING HERE?
                       INTR1:
050332 / 367200,,050331          SOJG    J,050331             ;; NO
050333 / 322200,,050622         JUMPE    J,050622             ;; IF NONE AT ALL, GO AWAY
050334 / 260140,,050360         PUSHJ    P,050360             ;; GET THE BIT CORRESPONDING TO THE INTERRUPT
050335 / 254000,,050332          JRST      050332             ;; ALL MASKED OUT, LOOP BACK FOR NEXT GUY
050336 / 200704,,026114          MOVE  AC2,JBTSTS(J)          ;
050337 / 607640,,500000          TLNN  AC1,500000             ;; IF THIS IS A SHUFFLE OR A SWAP INTERRUPT, THE JOB IS REALLY THERE!
050340 / 607700,,006000          TLNN  AC2,006000             ;
050341 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;; IS THIS JOB REALLY HERE?
050342 / 254000,,050651          JRST      050651             ;; I GUESS NOT. HAVE HIM SWAPPED IN IF HE IS SWAPPED OUT.
050343 / 135740,,037600           LDB  AC3,037600             ;; DOES HE HAVE AN UPPER?
050344 / 322740,,050352         JUMPE  AC3,INTR11             ;
050345 / 200717,,026114          MOVE  AC2,JBTSTS(AC3)        ;; SEE IF IT IS IN CORE
050346 / 607640,,500000          TLNN  AC1,500000             ;
050347 / 607700,,006000          TLNN  AC2,006000             ;
050350 / 336017,,027120         SKIPN      JBTADR(AC3)        ;
050351 / 254000,,050664          JRST      050664             ;; SWAP SEGMENT IN
                       INTR11:
050352 / 332004,,034165         SKIPE      JBTIIP(J)          ;; IS THIS JOB ALREADY AT I-LEVEL?
153234 / 476013,,023475         SETOM      INTREQ(PID)        ;
153235 / 254000,,050332          JRST       INTR1             ;
050353 / 254000,,153234          JRST      153234             ;
                       INTR9:
050354 / 200644,,033765          MOVE  AC1,JBTIRQ(J)          ;; PICK UP INTERRUPT BITS AGAIN
050355 / 260140,,050360         PUSHJ    P,050360             ;; GET BIT CORRESPONDING TO INTERRUPT
050356 / 254000,,050332          JRST      050332             ;; ALL MASKED OUT
050357 / 254000,,050402          JRST      050402             ;; GOT IT. GO SERVICE INTERRUPT
                       ; ROUTINE TO GET FIRST SERVICABLE INTERRUPT BIT FROM WORD OF BITS
                       ; ENTER WITH COPY OF JBTIRQ IN AC1
                       ; WILL RETURN SINGLE SERVICABLE BIT IN AC1
                       GETINT:
050360 / 205700,,002000         MOVSI  AC2,002000             ;
050361 / 612704,,033665          TDNE  AC2,JBTIEN(J)          ;
050362 / 254000,,050376          JRST      050376             ;; HERE IF TRYING TO FINISH UUO (VIA UWAIT)
050363 / 201740,,000000         MOVEI  AC3,                   ;
                       INTR8:
050364 / 243640,,050365          JFFO  AC1,050365             ;; PICK OFF FIRST BIT. SERVE INTERRUPTS ONLY ONE AT A TIME.
050365 / 213000,,000016         MOVNS         AC2             ;
050366 / 205640,,400000         MOVSI  AC1,      (1B0)        ;
050367 / 242656,,000000           LSH  AC1,      (AC2)        ;; AC1 NOW CONTAINS ONLY ONE BIT AND IT IS IN THE POSITION OF THE FIRST BIT IN JBTIRQ(J)
050370 / 612644,,033565          TDNE  AC1,JBTMSK(J)          ;; SEE IF THIS PROCESSOR IS ENABLED FOR THIS INTERRUPT
050371 / 254000,,037401          JRST      CPOPJ1             ;
050372 / 437640,,000017          IORB  AC1,   AC3             ;
050373 / 410644,,033765         ANDCA  AC1,JBTIRQ(J)          ;; ARE THERE ANY MORE INTERRUPTS PENDING?
050374 / 322640,,037403         JUMPE  AC1,037403             ;; NO, GO ON TO NEXT GUY
050375 / 254000,,050364          JRST      050364             ;; YES
                       GTINT1:
050376 / 616700,,000015          TDNN  AC2,000015             ;; SKIP IF INTWAIT ENABLED AND REQUESTED
050377 / 263140,,000000          POPJ    P,                   ;; ENABLED BUT NOT REQUESTED YET
050400 / 200640,,000016          MOVE  AC1,   AC2             ;
050401 / 254000,,037401          JRST      037401             ;; DO INTWAIT INT FIRST
                       ; HERE WE CLEAR THE INTERRUPT BIT IN JBTIRQ AND ACTUALLY
                       ; START UP THE INTERRUPT PROCESS
                       INTR7:
050402 / 616644,,033765          TDNN  AC1,JBTIRQ(J)          ;
050403 / 254000,,050354          JRST      050354             ;; SOMEONE ATE THE INTERRUPT FROM UNDER US
050404 / 412644,,033765        ANDCAM  AC1,JBTIRQ(J)          ;; WE HAVE SERVICED THIS INTERRUPT SO FORGET IT.
050405 / 616644,,033665          TDNN  AC1,JBTIEN(J)          ;; IS THIS GUY ENABLED FOR THIS INTERRUPT?
050406 / 254000,,050331          JRST      050331             ;; NO, FORGET IT.
050407 / 336004,,034165         SKIPN      JBTIIP(J)          ;
050410 / 254000,,050414          JRST      INTR14             ;
050411 / 436644,,033765          IORM  AC1,JBTIRQ(J)          ;
050412 / 476013,,023475         SETOM      INTREQ(PID)        ;
050413 / 254000,,050331          JRST      050331             ;; TRY TO GET BACK NEXT TICK
                       INTR14:
050414 / 436644,,034165          IORM  AC1,JBTIIP(J)          ;; YES, HE NOW HAS THIS INTERRUPT IN PROGRESS
050415 / 554040,,000007          HLRZ  TAC,  PROG             ;
050416 / 336747,,000071         SKIPN  AC3,JOBINT(PROG)       ;;DOES HE WANT INTS SOMEWHERE ELSE?
050417 / 254000,,050426          JRST      050426             ;;NO
050420 / 271740,,000002          ADDI  AC3,000002             ;;THIS MUST BE LEGAL, TOO
050421 / 301740,,000116          CAIL  AC3,000116             ;
050422 / 303741,,000000         CAILE  AC3,      (TAC)        ;
050423 / 254000,,050606          JRST      050606             ;;SHIT ON HIM (MUST BE IN LOWER)
050424 / 271747,,000000          ADDI  AC3,      (PROG)       ;
050425 / 334700,,000017         SKIPA  AC2,000017             ;;THE BITS GO HERE-2
                       INT14A:
050426 / 201707,,000130         MOVEI  AC2,000130(PROG)       ;;OR HERE
050427 / 202656,,777776         MOVEM  AC1,777776(AC2)        ;; PUT HIS INTERRUPT BITS WHERE HE CAN FIND THEM
050430 / 336700,,000017         SKIPN  AC2,   AC3             ;
050431 / 201707,,000125         MOVEI  AC2,JOBAPR(PROG)       ;
050432 / 550716,,000000          HRRZ  AC2,      (AC2)        ;; PICK UP HIS TRAP ROUTINE ADDRESS
050433 / 301700,,000114          CAIL  AC2,JOBPFI             ;
050434 / 303701,,000000         CAILE  AC2,      (TAC)        ;
050435 / 304000,,000000          CAIA                         ;
050436 / 254000,,050446          JRST      INTR10             ;
050437 / 135640,,037600           LDB  AC1,037600             ;; SEE IF PC IS IN UPPER
050440 / 322640,,050606         JUMPE  AC1,050606             ;; NO UPPER, ERROR
050441 / 554655,,027120          HLRZ  AC1,JBTADR(AC1)        ;
050442 / 271640,,400000          ADDI  AC1,400000             ;
050443 / 301700,,400000          CAIL  AC2,400000             ;
050444 / 313700,,000015         CAMLE  AC2,   AC1             ;
050445 / 254000,,050606          JRST      050606             ;; OUT OF UPPER, ADDRESS CHECK
                       ; HERE WE INITIALIZE ALL THE SYSTEM VARIABLES IN PREPARATION FOR RUNNING THE USER INTERRUPT PROCESS
                       INTR10:
050446 / 261144,,026620          PUSH    P, UUOPC(J)          ;; SAVE HIS UUO LEVEL PC TOO
050447 / 202353,,024063         MOVEM PROG,JOBDAT(PID)        ;; SET UP ADDRESS OF USER AREA FOR UUOCON.
050450 / 556353,,024065         HLRZM PROG,USRREL(PID)        ;; UUOCON NEEDS JOBDAT, USRREL, AND JOB, AND THAT'S ALL
050451 / 202213,,024061         MOVEM    J,   JOB(PID)        ;; THIS IS OUR TEMPORARY JOB NUMBER
050452 / 312213,,024062          CAME    J,  SJOB(PID)        ;;MIGHT ALREADY BE THERE
050453 / 260140,,047751         PUSHJ    P,047751             ;; PICK UP JOBJDA
050454 / 402013,,023514         SETZM      APRERR(PID)        ;; CLEAR OUT THIS BECAUSE PREVIOUS JOB MAY HAVE HAD AN ERROR
050455 / 402013,,023515         SETZM       APRPC(PID)        ;
050456 / 402013,,023507         SETZM      APRIN1(PID)        ;
050457 / 402013,,024637         SETZM      SCHEDF(PID)        ;
050460 / 476004,,032043         SETOM       STIME(J)          ;; MARK CORE IMAGE AS ALTERED NOW.
050461 / 135640,,037600           LDB  AC1,037600             ;; SEE IF WE MUST MARK UPPER
050462 / 322640,,050466         JUMPE  AC1,050466             ;; NONE THERE.
050463 / 200715,,026114          MOVE  AC2,JBTSTS(AC1)        ;; DON'T MARK CORE IMAGE DIRTY IF WRITE PROTECTED
050464 / 607700,,000001          TLNN  AC2,   JWP             ;
050465 / 476015,,032043         SETOM       STIME(AC1)        ;
                       INTR5:
050466 / 211640,,000010         MOVNI  AC1,    10             ;
050467 / 202653,,023476         MOVEM  AC1,023476(PID)        ;; HE GETS 8 TICKS BEFORE DOOM STRIKES
050470 / 201640,,050707         MOVEI  AC1,INTCH7             ;
050471 / 202653,,023473         MOVEM  AC1,023473(PID)        ;; COUNT DOWN HIS QUANTUM TIME EVERY CLOCK BREAK
050472 / 214644,,020574          MOVM  AC1,JOBQUE(J)          ;; SEE IF HE IS WAITING FOR AN INTERRUPT
050473 / 302640,,000012          CAIE  AC1, INTWQ             ;
050474 / 254000,,050503          JRST      INTWRJ             ;
050475 / 200644,,034165          MOVE  AC1,JBTIIP(J)          ;; DO WE WAKE HIM UP?
050476 / 616644,,034065          TDNN  AC1,JBTWKM(J)          ;
050477 / 254000,,050503          JRST      050503             ;; NO
050500 / 211640,,000015         MOVNI  AC1,000015             ;; YES, WAKE HIM UP WITH HIGH PRIORITY
050501 / 202644,,020574         MOVEM  AC1,JOBQUE(J)          ;
050502 / 260140,,046027         PUSHJ    P, REQUE             ;
                       INTWRJ:
050503 / 260140,,072621         PUSHJ    P,072621             ;; SET UP PROTECTION-RELOCATION
050504 / 700140,,000001         DATAO  APR,   TAC             ;
050505 / 202153,,023474         MOVEM    P, INTSP(PID)        ;; ALL WE NEED TO SAVE IS THE STACK POINTERS.
                       ; CLKINT DOESN'T DEPEND ON ACCUMULATORS.
050506 / 200704,,034165          MOVE  AC2,JBTIIP(J)          ;
050507 / 607700,,002000          TLNN  AC2,002000             ;; IF WE ARE TRYING TO DEBREAK,
                       ; MUST GIVE HIM HIS UUO-LEVEL ACCUMULATORS
050510 / 254000,,050526          JRST       INTR4             ;
050511 / 412704,,033665        ANDCAM  AC2,JBTIEN(J)          ;; HE IS NO LONGER ENABLED FOR INTERRUPT-WAIT
050512 / 336700,,000017         SKIPN  AC2,   AC3             ;
050513 / 201707,,000130         MOVEI  AC2,000130(PROG)       ;
050514 / 200653,,024067          MOVE  AC1, USRPC(PID)        ;; GIVE HIM HIS MOST ACCURATE PC
050515 / 202656,,777777         MOVEM  AC1,777777(AC2)        ;
050516 / 205747,,000020         MOVSI   17,JOBDAC(PROG)       ;; GIVE HIM HIS UUO-LEVEL ACCUMULATORS TO SAVE AWAY
050517 / 200644,,027020          MOVE  AC1,JBTUPC(J)          ;; AND RESTART HIM JUST AFTER THE UWAIT UUO
050520 / 202653,,024112         MOVEM  AC1,  UUO0(PID)        ;
050521 / 322540,,050524         JUMPE  PID,INTR15             ;
050522 / 251740,,000017           BLT   17,    17             ;
050523 / 254560,,025330          JRST   13,@025330            ;
                       INTR15:
050524 / 251740,,000017           BLT   17,    17             ;
050525 / 254560,,024112          JRST   13,@024112            ;
                       ; HERE, HE IS NOT CONTINUING AFTER A UWAIT, BUT IS BEING RUN REGULARLY
                       INTR4:
050526 / 205647,,000000         MOVSI  AC1,      (PROG)       ;
050527 / 541653,,023433          HRRI  AC1,INTACS(PID)        ;; SAVE HIS UUO-LEVEL ACCUMULATORS, FOR HE WILL DO UUO'S
050530 / 251653,,023452           BLT  AC1,023452(PID)        ;
050531 / 200653,,024067          MOVE  AC1, USRPC(PID)        ;;SHOULD BE HERE BY NOW
050532 / 603640,,010000          TLNE  AC1,USRMOD             ;
050533 / 254000,,050542          JRST      INTR4A             ;
050534 / 200644,,026620          MOVE  AC1, UUOPC(J)          ;; IF IN EXEC, GIVE HIM HIS LAST UUO-LEVEL PC.
050535 / 306640,,057235          CAIN  AC1,USRXT5             ;
050536 / 200653,,024112          MOVE  AC1,  UUO0(PID)        ;;WHICH MAY BE HERE IF WE INTERRUPTED UUOCON EARLY
050537 / 627640,,010000          TLZN  AC1,010000             ;;FLAG IT AS COMING FROM EXEC
050540 / 634640,,000015          TDZA  AC1,000015             ;;OR RET ZERO IF WE DON'T KNOW IT (RECURSION CONFUSION)
050541 / 275640,,000001          SUBI  AC1,000001             ;;ADJUST IT TO POINT AT HIS UUO
                       INTR4A:
050542 / 332700,,000017         SKIPE  AC2,   AC3             ;
050543 / 254000,,050546          JRST      050546             ;
050544 / 201707,,000130         MOVEI  AC2,000130(PROG)       ;
050545 / 201747,,000125         MOVEI  AC3,JOBAPR(PROG)       ;
050546 / 200757,,000000          MOVE  AC3,      (AC3)        ;
050547 / 202656,,777777         MOVEM  AC1,777777(AC2)        ;
050550 / 200704,,027420          MOVE  AC2,JBTPRV(J)          ;
050551 / 607700,,000001          TLNN  AC2,LUPPRV             ;
050552 / 621740,,004000           TLZ  AC3,004000             ;;DON'T SET IOT USER UNLESS LOCAL
050553 / 200700,,000004          MOVE   16,000004             ;; NOW SET UP HIS ACCUMULATORS
050554 / 200100,,000007          MOVE    2,  PROG             ;
050555 / 200040,,020265          MOVE    1,SPWBUT             ;
050556 / 402000,,000003         SETZM           3             ;
050557 / 200656,,034165          MOVE   15,JBTIIP(16)         ;
050560 / 603640,,500000          TLNE   15,500000             ;
050561 / 476000,,000003         SETOM      000003             ;; IF HE IS ABOUT TO GET SHUFFLED OR SWAPPED, TELL HIM
050562 / 201200,,000001         MOVEI    4,     1             ;
050563 / 332000,,000013         SKIPE         PID             ;
050564 / 201200,,000002         MOVEI    4,000002             ;; PROCESSOR NUMBER IN 4
050565 / 402000,,000005         SETZM      000005             ;; 5 TELLS WHETHER THE OTHER PROCESSOR IS ALIVE
050566 / 200316,,026114          MOVE    6,JBTSTS(16)         ;; HE WANTS HIS STATUS WORD IN 6 TOO
152063 / 000016,,026114                                       ;
152063 / 000616,,026114 POINT 6,16026114,35                   ;
050567 / 135340,,152063           LDB    7,152063             ;
050570 / 554347,,027120          HLRZ    7,JBTADR(7)          ;
050571 / 200416,,034265          MOVE   10,INTDTM(16)         ;
050572 / 214616,,020574          MOVM   14,JOBQUE(16)         ;;TELL HIM HIS CURRENT Q
050573 / 336000,,000562         SKIPN       P2NUM             ;
050574 / 254000,,050603          JRST      SIXDED             ;
050575 / 302200,,000001          CAIE    4,     1             ;
050576 / 254000,,050602          JRST      SIXTST             ;
050577 / 335000,,025477        SKIPGE      025477             ;
050600 / 476000,,000005         SETOM           5             ;
050601 / 254557,,000000          JRST   13,      (AC3)        ;;AC3 HAD BETTER THE HELL NOT BE CLOBBERED BY SHIT ABOVE
                       SIXTST:
050602 / 335000,,024261        SKIPGE      024261             ;
                       SIXDED:
050603 / 476000,,000005         SETOM           5             ;
050604 / 621740,,000037           TLZ  AC3,000037             ;;AVOID @ LOOPS
050605 / 254560,,000017          JRST   13,@000017            ;;SINCE JRST 2,() DOESN'T WORK ON 6
                       ; ROUTINE TO TYPE OUT ERROR MESSAGE FOR ILL. STARTING ADDRESS
                       INTADC:
050606 / 402004,,034165         SETZM      JBTIIP(J)          ;; IF ADDRESS CHECK, GET HIM OUT OF INTERRUPT LEVEL
050607 / 260140,,137655         PUSHJ    P,137655             ;; NOW GIVE HIM A NASTY MESSAGE
050610 / 260140,,042676         PUSHJ    P,INLMES             ;
050620 / 260140,,045546         PUSHJ    P,045546             ;;PRINT ↑C CRLF . CRLF.  CALL TTYSTC AND ESTOP
050621 / 254000,,050332          JRST       INTR1             ;
                       INTXIT:
151747 / 000000,,050623                                       ;
050622 / 254120,,151747          JRST    2,@151747            ;
050623 / 402013,,023431         SETZM      INTACT(PID)        ;; ALL DONE. RESTORE ALL THE STUFF WE SAVED UP FRONT.
050624 / 402013,,023473         SETZM      023473(PID)        ;
050625 / 505643,,777756          HRLI  AC1,777756(P)          ;
050626 / 541653,,024066          HRRI  AC1,USRPRT(PID)        ;
050627 / 251653,,024110           BLT  AC1,024110(PID)        ;
152020 / 000023,,000023           XWD USRJDA+20-USRPRT,USRJDA+20-USRPRT ;
050630 / 274140,,152020           SUB    P,152020             ;
050631 / 262153,,023507           POP    P,APRIN1(PID)        ;
050632 / 262153,,023514           POP    P,APRERR(PID)        ;
050633 / 262153,,023515           POP    P, APRPC(PID)        ;
050634 / 262153,,024637           POP    P,SCHEDF(PID)        ;
050635 / 262153,,024065           POP    P,USRREL(PID)        ;
050636 / 262153,,024063           POP    P,JOBDAT(PID)        ;
050637 / 262153,,024465           POP    P,CLKS17(PID)        ;
050640 / 262173,,024627           POP    P,@ CLKCH(PID)       ;
                       ; FOR XCTR SIMULATION
050641 / 262173,,024116           POP    P,@UUOLOC(PID)       ;
050642 / 262153,,024112           POP    P,  UUO0(PID)        ;
050643 / 262153,,024463           POP    P,USRSAV(PID)        ;
050644 / 262153,,024064           POP    P,LASTPR(PID)        ;; RESTORE PR
050645 / 200213,,024062          MOVE    J,  SJOB(PID)        ;
050646 / 202213,,024061         MOVEM    J,   JOB(PID)        ;
050647 / 700153,,024064         DATAO  APR,LASTPR(PID)        ;; RESTORE JOB'S PROTECTION-RELOCATION
050650 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SWAP A GUY IN SO HE MAY BE INTERRUPTED
                       INTSWA:
050651 / 200740,,000004          MOVE  AC3,000004             ;; AC3 IS JOB TO TEST FOR BEING IN
050652 / 260140,,050674         PUSHJ    P,050674             ;; SWAPIN TEST SUBR
050653 / 254000,,050332          JRST      050332             ;; NO CAN DO
050654 / 135740,,037600           LDB  AC3,037600             ;; GET SEGMENT #
050655 / 322740,,050332         JUMPE  AC3, INTR1             ;
050656 / 200057,,026114          MOVE  TAC,JBTSTS(AC3)        ;
050657 / 603040,,002000          TLNE  TAC,002000             ;; IF SWAPPED OUT,
050660 / 254000,,050332          JRST      050332             ;; NORMAL THING WILL HAPPEN
050661 / 205040,,000002         MOVSI  TAC,000002             ;; ELSE HOLD IT IN
050662 / 436057,,026114          IORM  TAC,JBTSTS(AC3)        ;; FOR LOWER
050663 / 254000,,050332          JRST       INTR1             ;
                       INTSWS:
050664 / 260140,,050674         PUSHJ    P,050674             ;; AC3 JOB TO BRING IN, J LOWER
050665 / 254000,,050332          JRST       INTR1             ;
050666 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
050667 / 603040,,002000          TLNE  TAC,002000             ;; IF LOWER IS SWAPPED OUT,
050670 / 254000,,050332          JRST      050332             ;; LET NORMAL THING HAPPEN
050671 / 205040,,000002         MOVSI  TAC,JHLDIN             ;
050672 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;; ELSE HOLD HIM IN FOR UPPER
050673 / 254000,,050332          JRST       INTR1             ;
                       INTSWT:
                       ; SEE IF HE IS MASKED OUT
050674 / 616644,,033565          TDNN  AC1,JBTMSK(J)          ;; ARE ANY OF THOSE BITS ON?
050675 / 263140,,000000          POPJ    P,                   ;; APPARANTLY NOT, DON'T BOTHER TO CALL HIM IN
050676 / 476013,,023475         SETOM      INTREQ(PID)        ;; COME BACK NEXT TIME AROUND TOO
050677 / 200717,,026114          MOVE  AC2,JBTSTS(AC3)        ;
050700 / 607700,,002000          TLNN  AC2,002000             ;; NEED TO GET HIM IN CORE?
050701 / 263140,,000000          POPJ    P,                   ;; NO, MUST BE SHUFFLE, JUST WAIT
050702 / 250740,,000004          EXCH  AC3,000004             ;; GET US IN J
050703 / 205040,,400000         MOVSI  TAC,INTSNB             ;
050704 / 260140,,066763         PUSHJ    P,066763             ;; PUT INTO SWAP IN LIST
050705 / 250740,,000004          EXCH  AC3,     J             ;
050706 / 254000,,037401          JRST      CPOPJ1             ;
                       ; WE COME BACK TO HERE AFTER AN INTERRUPT - INTCH7,INTDSM,INTOUT,INTERR
                       ; NOW WE HAVE TO FIGURE OUT HOW WE GOT HERE AND WHAT TO DO ABOUT IT
                       INTCH7:
050707 / 332017,,023514         SKIPE      APRERR(17)         ;; THIS IS THE PLACE WE COME UPON CH7 BREAKS WHILE AN I-LEVEL PROCESS IS RUNNING. FIRST CHECK FOR APR ERRORS
050710 / 254000,,051020          JRST      INTAPR             ;
050711 / 332017,,024637         SKIPE      SCHEDF(17)         ;; SEE IF THE BOOB HAS GOT HIMSELF IN IO WAIT
050712 / 254000,,051000          JRST      051000             ;;MAY HAVE BEEN FROM ESTOP, SO CHECK JERR
050713 / 351017,,023476          AOSL      023476(17)         ;; OR MAYBE HIS TIME HAS EXPIRED
050714 / 254000,,050722          JRST      050722             ;; YES
050715 / 322740,,050720         JUMPE   17, INTOK             ;
050716 / 200740,,025703          MOVE   17,025703             ;
050717 / 254520,,000771           JEN      @CL2CHL            ;
                       INTOK:
050720 / 200740,,024465          MOVE   17,024465             ;
050721 / 254520,,000710           JEN      @CLKCHL            ;
                       INTOUT:
050722 / 264037,,023500           JSR      @CLKESV(17)        ;;SETS UP J, PROG, P, DOES S2U SOMETIMES, ETC.
050723 / 260140,,137655         PUSHJ    P,TTYERP             ;
050724 / 260140,,042676         PUSHJ    P,INLMES             ;
050731 / 200133,,024627          MOVE TAC1,@ CLKCH(PID)       ;
                       INTERR:
050732 / 260140,,043673         PUSHJ    P,   PCP             ;
050733 / 260140,,042713         PUSHJ    P,PRCRCC             ;
050734 / 260140,,137704         PUSHJ    P,TTYSTC             ;
050735 / 260140,,045550         PUSHJ    P, ESTOP             ;
                       INTDSM:
050736 / 402000,,026113         SETZM      ESTINT             ;
050737 / 200153,,023474          MOVE    P, INTSP(PID)        ;; HERE WE ARE AT THE DISMIS UUO
050740 / 200213,,024061          MOVE    J,   JOB(PID)        ;; PICK UP ALL THE ACCUMULATORS
050741 / 200353,,024063          MOVE PROG,JOBDAT(PID)        ;
050742 / 262144,,026620           POP    P, UUOPC(J)          ;
050743 / 201647,,000000         MOVEI  AC1,      (PROG)       ;
050744 / 505653,,023433          HRLI  AC1,INTACS(PID)        ;; PUT BACK EVERYTHING
050745 / 251647,,000017           BLT  AC1,000017(PROG)       ;
050746 / 312213,,024062          CAME    J,  SJOB(PID)        ;;DON'T BOTHER IF ALREADY OK
050747 / 260140,,047736         PUSHJ    P,047736             ;; MOVE JOBJDA BACK
050750 / 402004,,034165         SETZM      JBTIIP(J)          ;; GET HIM OUT OF INTERRUPT LEVEL
050751 / 254000,,050331          JRST       INTR2             ;
                       ; WE GET HERE FROM A DEBREAK UUO - INTDEB, INTERP, INTAPR
                       INTDEB:
050752 / 200153,,023474          MOVE    P, INTSP(PID)        ;
050753 / 200213,,024061          MOVE    J,   JOB(PID)        ;
050754 / 200353,,024063          MOVE PROG,JOBDAT(PID)        ;
050755 / 200644,,026620          MOVE  AC1, UUOPC(J)          ;;ADDRESS OF WHERE WE WANT TO BE AT MAIN LEVEL
050756 / 202653,,024067         MOVEM  AC1, USRPC(PID)        ;
050757 / 316213,,024062          CAMN    J,  SJOB(PID)        ;
050760 / 202643,,777756         MOVEM  AC1,777756(P)          ;;THIS IS WHAT WILL BE PUT INTO USRPC!!
050761 / 505647,,000000          HRLI  AC1,      (PROG)       ;
050762 / 541647,,000020          HRRI  AC1,JOBDAC(PROG)       ;
050763 / 541715,,000017          HRRI  AC2,    17(AC1)        ;
050764 / 251656,,000000           BLT  AC1,      (AC2)        ;;REAL ACS WILL BE UUO ACS AT TIME OF DEBREAK UUO
050765 / 214644,,020574          MOVM  AC1,JOBQUE(J)          ;
050766 / 302640,,000005          CAIE  AC1,  IOWQ             ;
050767 / 254000,,050773          JRST      INTDB1             ;
050770 / 211700,,000014         MOVNI  AC2,000014             ;;IN CASE WE ARE FAILING TO GO BACK TO A UUO IN IOWQ
050771 / 202704,,020574         MOVEM  AC2,JOBQUE(J)          ;
050772 / 260140,,046027         PUSHJ    P,046027             ;;(THIS USED TO BE INLINE CODE - REG)
                       INTDB1:
050773 / 312213,,024062          CAME    J,  SJOB(PID)        ;;NOT NECESSARY IF CURRENT JOB
050774 / 260140,,047736         PUSHJ    P,   S2U             ;
050775 / 262144,,026620           POP    P, UUOPC(J)          ;
050776 / 402004,,034165         SETZM      JBTIIP(J)          ;
050777 / 254000,,050331          JRST       INTR2             ;
                       INTERP:
051000 / 264037,,023500           JSR      @CLKESV(17)        ;
051001 / 332000,,026113         SKIPE      ESTINT             ;
051002 / 254000,,050736          JRST      050736             ;;GOT HERE FROM ESTOP
051003 / 260140,,137655         PUSHJ    P,TTYERP             ;
051004 / 260140,,042676         PUSHJ    P,INLMES             ;
051016 / 200104,,026620          MOVE TAC1, UUOPC(J)          ;
051017 / 364100,,050732          SOJA TAC1,INTERR             ;
                       INTAPR:
051020 / 264037,,023500           JSR      @CLKESV(17)        ;
051021 / 260140,,137655         PUSHJ    P,TTYERP             ;
051022 / 260140,,042676         PUSHJ    P,INLMES             ;
051027 / 201040,,153224         MOVEI  TAC,153224             ;
051030 / 200653,,023514          MOVE  AC1,APRERR(PID)        ;
051031 / 602640,,020000          TRNE  AC1,   ILM             ;
051032 / 201040,,153377         MOVEI  TAC,153377             ;
051033 / 602640,,010000          TRNE  AC1,   NXM             ;
051034 / 201040,,153402         MOVEI  TAC,153402             ;
051035 / 602640,,200000          TRNE  AC1,   POV             ;
051036 / 201040,,153236         MOVEI  TAC,153236             ;
051037 / 260140,,042670         PUSHJ    P,CONMES             ;
051040 / 200113,,023515          MOVE TAC1, APRPC(PID)        ;
051041 / 254000,,050732          JRST      INTERR             ;
                       ;INTKILL  ROUTINE TO CLEAR A JOB'S INTERRUPT ENABLINGS AND RESET HIS MASKS
                       INTKIL:
051042 / 261140,,000015          PUSH    P,   AC1             ;
051043 / 261140,,000016          PUSH    P,   AC2             ;
051044 / 402004,,033665         SETZM      JBTIEN(J)          ;; CLEAR THE ENABLE BITS FIRST
051045 / 402004,,033765         SETZM      JBTIRQ(J)          ;; NOW CLEAR ANY PENDING INTERRUPTS
051046 / 402004,,034165         SETZM      JBTIIP(J)          ;
051047 / 476004,,034065         SETOM      JBTWKM(J)          ;; INITIALIZE THE WAKE UP MASK
051050 / 476004,,033565         SETOM      JBTMSK(J)          ;; NOW CLEAR THE PROCESSOR MASK
051051 / 260140,,060122         PUSHJ    P,060122             ;;FLUSH CLOCK REQUESTS
051052 / 262140,,000016           POP    P,   AC2             ;
051053 / 262140,,000015           POP    P,   AC1             ;
051054 / 402004,,034365         SETZM      UUOPTR(J)          ;;ALSO DISABLE UUO INTERPRETER
051055 / 263140,,000000          POPJ    P,                   ;
                       ;INIJOB		ROUTINE TO INITIALIZE A JOB SLOT
                       ;CALL AT CLOCK LEVEL OR UUO LEVEL
                       ;	PUSHJ	P,INIJOB
                       ;	<JOB CAPACITY EXCEEDED>
                       ;	<CANNOT GET FREE STORAGE - TRY AGAIN LATER>
                       ;	<SUCCESS. J IS SET UP; PROG IS ZERO, JDAT IS ZERO>
                       ;	IF YOU WANT TO MAKE THIS A REAL JOB, YOU MUST CLAIM JOB
                       ;	SLOT BY MARKING JNA OR CMWB IN JBTSTS.
                       ;CLOBBERS TAC
                       ;SETS UP: JBTADR,JBTPRV,JBTBTM,JBTSTS,TTIME,RTIME,JBTUFD,DSKPPN,JBTRNB,JBTPR2,
                       ;	  JBTKCJ,J
                       INIJB0:
051056 / 205040,,240000         MOVSI  TAC,240000             ;
                       INIJB1:
051057 / 201200,,000001         MOVEI    J,000001             ;;SEEK JOB SLOT
                       INIJB2:
051060 / 616044,,026114          TDNN  TAC,JBTSTS(J)          ;
051061 / 254000,,037401          JRST      037401             ;;THIS ONE IS FREE.
051062 / 315200,,035266         CAMGE    J,035266             ;;HAVE WE REACHED MAXIMUM SLOT NUMBER?
051063 / 344200,,051060          AOJA    J,051060             ;;NOT YET.
051064 / 201200,,000000         MOVEI    J,                   ;;RETURN A ZERO
051065 / 263140,,000000          POPJ    P,                   ;;AND LOSE.
                       INIJOB:
051066 / 326540,,037403         JUMPN  PID,037403             ;;GOD FORBID THE PDP-6 SHOULD TRY THIS
051067 / 260140,,051056         PUSHJ    P,051056             ;;SEEK A JOB SLOT
051070 / 263140,,000000          POPJ    P,                   ;;NONE AVAILABLE
051071 / 332004,,027120         SKIPE      JBTADR(J)          ;;MAKE SURE THERE'S NO CORE  FOR THIS JOB
051072 / 260140,,051164         PUSHJ    P,051164             ;;COMPLAIN
051073 / 332004,,022315         SKIPE      JBTPDL(J)          ;;DO WE HAVE A PDL YET?
051074 / 254000,,051111          JRST      INIJB4             ;
051075 / 261140,,000017          PUSH    P,   AC3             ;
051076 / 261140,,000015          PUSH    P,   AC1             ;
051077 / 260140,,051153         PUSHJ    P,MAKPDL             ;
051100 / 254000,,051140          JRST      051140             ;;HERE IF NO FREE STORAGE.
051101 / 205040,,240000         MOVSI  TAC,240000             ;;IS THIS JOB SLOT STILL THERE?
051102 / 616044,,026114          TDNN  TAC,JBTSTS(J)          ;
051103 / 254000,,051106          JRST      051106             ;;YES. THIS SLOT IS STILL THERE.
051104 / 260140,,051057         PUSHJ    P,051057             ;;SEEK A NEW SLOT.
051105 / 254000,,051135          JRST      051135             ;;NO SLOTS
                       INIJB3:
051106 / 202644,,022315         MOVEM  AC1,JBTPDL(J)          ;;SET JOB PDL.
051107 / 262140,,000015           POP    P,   AC1             ;
051110 / 262140,,000017           POP    P,   AC3             ;
                       INIJB4:
051111 / 403344,,031243         SETZB PROG, TTIME(J)          ;;NO CORE ANYWHERE.
051112 / 403344,,031143         SETZB JDAT, RTIME(J)          ;
051113 / 402004,,012230         SETZM      DSKOPS(J)          ;;NO DISK USAGE YET
051114 / 402004,,031543         SETZM      JBTWAT(J)          ;;HAVEN'T WAITED FOR SYSTEM YET
051115 / 402004,,031643         SETZM      JB2WAT(J)          ;;DITTO
051116 / 402004,,031443         SETZM       XTIME(J)          ;;MAKE SURE NO-UPDATE BIT IS CLEAR IN XTIME
051117 / 205040,,020000         MOVSI  TAC,  JERR             ;
051120 / 202044,,026114         MOVEM  TAC,JBTSTS(J)          ;;AN NICE WAY TO START: JERR.
051121 / 402004,,027120         SETZM      JBTADR(J)          ;;NO CORE.
051122 / 402004,,027420         SETZM      JBTPRV(J)          ;;NO ACTIVE PRIVILEGES
051123 / 402004,,027520         SETZM      JB2PRV(J)          ;;OR PASSIVE ONES
051124 / 402004,,031743         SETZM      JBTRNB(J)          ;
051125 / 402004,,027220         SETZM      JBTPR2(J)          ;;NO PEEK-POKE
051126 / 402004,,030642         SETZM      JBTUFD(J)          ;;NO UFD ADDRESS
051127 / 402004,,030020         SETZM      DSKPPN(J)          ;;NO DSKPPN
051130 / 402004,,030242         SETZM      JBTKCJ(J)          ;;NO KILO-CORE JIFFIES
051131 / 200040,,023423          MOVE  TAC,023423             ;;GET <DATE>,,<TIME IN SECS>
051132 / 202044,,030342         MOVEM  TAC,JBTBTM(J)          ;;SAVE JOB BEGINING TIME.
051133 / 202044,,031343         MOVEM  TAC, FTIME(J)          ;;SET TIME LAST RUN.
051134 / 254000,,037400          JRST      037400             ;;GIVES THE (DOUBLE) SKIP RETURN.
                       INIJB6:
051135 / 201655,,000001         MOVEI  AC1,     1(AC1)        ;;SET UP RIGHT ADDRESS FOR FSGIVE.
051136 / 260140,,074163         PUSHJ    P,FSGIVE             ;
051137 / 370003,,000000           SOS            (P)          ;;NO JOBS RETURN # 0
                       INIJB5:
051140 / 262140,,000015           POP    P,000015             ;;NO FREE STORAGE
051141 / 262140,,000017           POP    P,   AC3             ;
051142 / 254000,,037401          JRST      037401             ;;NO F.S.  RETURN # 1
                       ;HERE TO RELEASE AN ILL-GOTTEN JOB.
                       RELJOB:
051143 / 326540,,037403         JUMPN  PID,037403             ;;GOD FORBID THE PDP-6 SHOULD EVER TRY
051144 / 201640,,000000         MOVEI  AC1,                   ;
051145 / 250644,,022315          EXCH  AC1,JBTPDL(J)          ;
051146 / 205040,,040000         MOVSI  TAC,040000             ;
051147 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
051150 / 322640,,037403         JUMPE  AC1, CPOPJ             ;
051151 / 201655,,000001         MOVEI  AC1,     1(AC1)        ;
051152 / 254000,,074163          JRST      FSGIVE             ;
                       MAKPDL:
051153 / 201740,,000136         MOVEI  AC3,000136             ;;GET A PDL FOR THIS JOB.
051154 / 260140,,073353         PUSHJ    P,073353             ;;FROM FREE STORAGE.
051155 / 263140,,000000          POPJ    P,                   ;;NO FREE STORAGE.
051156 / 000000,,000114                                       ;
051156 / 505640,,777665          HRLI  AC1,777665             ;;SET LEFT SIDE TO COUNT.
051157 / 402015,,000000         SETZM            (AC1)        ;;ZERO FIRST LOCATION OF PDL
051160 / 205755,,000000         MOVSI  AC3,      (AC1)        ;;SOURCE OF BLT
051161 / 541755,,000001          HRRI  AC3,     1(AC1)        ;;DESTINATION
051162 / 251755,,000135           BLT  AC3,000135(AC1)        ;;ZERO THE ENTIRE PDL.
051163 / 364640,,037401          SOJA  AC1,037401             ;;AC1 SET AS PDL POINTER. SKIP RETURN.
                       INIJXX:
051164 / 260140,,000316         PUSHJ    P,PUSHIT             ;
051165 / 260140,,044066         PUSHJ    P,DISMES             ;
051176 / 260140,,044104         PUSHJ    P,DISJOB             ;
051177 / 260140,,044102         PUSHJ    P,DISTAB             ;
051200 / 200044,,027120          MOVE  TAC,JBTADR(J)          ;
051201 / 260140,,044200         PUSHJ    P,DISOCT             ;
051202 / 260140,,044076         PUSHJ    P,044076             ;
051203 / 260140,,000341         PUSHJ    P, POPIT             ;
051204 / 332000,,000500         SKIPE      000500             ;
051205 / 260140,,000347         PUSHJ    P,000347             ;
051206 / 263140,,000000          POPJ    P,                   ;
                       ;CALLED FROM CLOCK ROUTINE WHEN 'COMCNT' IS GREATER THAN 0
                       ;AS SET BY TTY SERVICE ROUTINE
                       ;ALL AC'S HAVE BEEN SAVED BY CLOCK CHANNEL
                       ;THE COMMAND DECODER CALLS TTYCOM WHICH SCANS FOR TTY WHICH TYPED
                       ;THE COMMAND AND THEN DISPATCHES(PUSHJ) TO APPROPRIATE
                       ;COMMAND SETUP ROUTINE OF THE SAME NAME WITH AC'S SET AS:
                       ;ITEM = JOB NUMBER
                       ;TAC = BYTE POINTER TO COMMAND STRING(SPACE OR CR AFTER COMMAND NAME)
                       ;DAT = BYTE POINTER TO LAST OUTPUT CHARACTER
                       ;DEVDAT = ADDRESS OF DEVICE DATA BLOCK TYPING COMMAND
                       ;JDAT = ADDRESS OF JOB AREA, = 0 IF NO JOB AREA
                       ;PROG = ADDRESS OF PROGRAM AREA, 0 MEANS NOT IN CORE OR NO CORE
                       ;IOS IS SET TO 0, USED FOR ADDRESS OF SUBSEQUENT CALLS
                       ;DEVDAT IS ALSO PUSHED ON END OF PD LIST SO IT MAY BE DESTROYED.
                       ;UPON RETURN FROM COMMAND SETUP ROUTINE, A CR-LF IS ADDED TO
                       ;MESSAGE AND TTY IS STARTED ON TTY SPECIFIED BY -1(PDP)
                       ;SEVERAL COMMAND FLAGS ARE CHECKED BEFORE DISPATCHING TO
                       ;COMMAND SETUP ROUTINES TO SEE IF COMMAND IS LEGAL AT THIS TIME
                       ;SEVERAL MORE FLAGS ARE CHECKED UPON RETURN FROM COMMAND SETUP
                       ;ROUTINES(UNLESS AN ERROR HAS OCCURRED) FOR STANDARD
                       ;COMMAND RESPONSE
                       ;IF AN ERROR OCCURS, THE JOB NO.(ITEM) SHOULD BE 0 ON RETURN
                       ;SO THAT JOB WILL NOT BE INITIALIZED IF FIRST COMMAND.
                       ;ERRMES ROUTINE WILL SET ITEM TO 0
                       ;SINCE THE COMMAND DECODER IS CALLED FROM THE CLOCK ROUTINE
                       ;COMMAND SETUP ROUTINE MUST RUN TO COMPLETION QUICKLY
                       ;IF A COMMAND FUNCTION CANNOT DO THIS, IT MUST JUST SET
                       ;THE JOB TO RUNABLE STATUS AND RETURN IMMEDIATELY
                       ;OR DELAY THE COMMAND FOR LATER EXECUTION
                       ;COMMAND
                       ;	HERE IF TTYCOM DIDN'T FIND ANYONE
                       NOCOMS:
051207 / 357000,,017713          AOSG      017713             ;;SKIP IF WE FAILED TO FIND A COMMAND TWICE
051210 / 263140,,000000          POPJ    P,                   ;;NO THIS IS OUR FIRST LOST COMMAND
051211 / 254000,,137063          JRST      CNTCOM             ;
                       ;;else;;	POPJ	P,		;THIS IS A NO-OP IF THERE ARE NO COMMANDS
                       COMMAN:
051212 / 260140,,136765         PUSHJ    P,136765             ;;SETUP DEVDAT,DAT,TAC,AND ITEM
                       ;FOR ANY TTY WHICH HAS TYPED A COMMAND
051213 / 254000,,051207          JRST      051207             ;;THERE WERE NO TTY'S WITH COMMANDS
051214 / 476000,,017713         SETOM      017713             ;;MARK THAT WE SAW A COMMAND
                       COM0:
051215 / 261140,,000006          PUSH    P,000006             ;;SAVE TTY DEVICE DATA BLOCK ADDRESS
051216 / 260140,,042550         PUSHJ    P,042550             ;;SCAN COMMAND NAME, RETURN IT IN TAC1
151435 / 504154,,000000                                       ;
051217 / 316100,,151435          CAMN TAC1,151435             ;;LET ↑C THROUGH
051220 / 254000,,051227          JRST      NOSCRU             ;
051221 / 322200,,051227         JUMPE    J,NOSCRU             ;
051222 / 200644,,026114          MOVE  AC1,JBTSTS(J)          ;
051223 / 607640,,010000          TLNN  AC1,  JLOG             ;
051224 / 607640,,040000          TLNN  AC1,   JNA             ;
051225 / 254000,,051227          JRST      NOSCRU             ;
051226 / 205100,,530000         MOVSI TAC1,530000             ;;ANY COMMAND BUT ↑C FORCES LOGOUT IF NOT LOGGED IN
                       NOSCRU:
051227 / 200640,,000002          MOVE  AC1,000002             ;;COPY COMMAND.
051230 / 211700,,000001         MOVNI  AC2,000001             ;;SET MASK ALL ONES
051231 / 242700,,777772           LSH  AC2,777772             ;;CLEAR OUT ONE MORE CHAR.
051232 / 242640,,000006           LSH  AC1,000006             ;;SHIFT 1 COMMAND CHAR OFF
051233 / 326640,,051231         JUMPN  AC1,051231             ;;IF NOT END OF COMMAND, GO AROUND
051234 / 201440,,000000         MOVEI DSER,                   ;;CLEAR FLAG REGISTER
051235 / 205640,,777602         MOVSI  AC1,777602             ;;SEARCH COMMAND TABLE FOR MATCH
                       COMLP:
051236 / 316115,,051466          CAMN TAC1,COMTAB(AC1)        ;;EXACT MATCH?
051237 / 254000,,051252          JRST      051252             ;;YES, THIS IS IT. (AC1 SET WITH INDEX)
051240 / 200615,,051466          MOVE  UUO,COMTAB(AC1)        ;;GET FULL ENTRY NAME FROM COMMAND TABLE
051241 / 630600,,000016           TDZ  UUO,000016             ;;MASK OFF UNSPECIFIED CHARACTERS
051242 / 312100,,000014          CAME TAC1,000014             ;;MATCH UNDER MASK?
051243 / 254000,,051247          JRST      051247             ;;NO. NOT EVEN GOOD MATCH
051244 / 322440,,051246         JUMPE DSER,051246             ;
051245 / 665440,,400000          TLOA DSER,400000             ;;SET SIGN BIT TO DENOTE AMBIGUOUS MATCH
051246 / 201455,,000001         MOVEI DSER,     1(AC1)        ;;COPY INDEX TO DSER - FIRST MATCH UNDER MASK
                       COMNEQ:
051247 / 253640,,051236         AOBJN  AC1,051236             ;;NO, KEEP LOOKING
051250 / 323440,,051252        JUMPLE DSER,051252             ;;DID ONE AND ONLY ONE COMMAND MATCH?
051251 / 201651,,777777         MOVEI  AC1,777777(DSER)       ;;YES. GET COMMAND INDEX THAT WE SAVED.
                       ;FALL INTO COMFND.
                       ;IF NOTHING MATCHES, WE HAVE ILLEGAL COMMAND
                       COMFND:
051252 / 200615,,051466          MOVE  UUO,COMTAB(AC1)        ;;SAVE FULL COMMAND NAME
051253 / 200115,,051665          MOVE TAC1,  DISP(AC1)        ;;GET DISPATCH TABLE ENTRY.
051254 / 261140,,000002          PUSH    P,000002             ;;SAVE RH(DISPATCH ADR.+BITS)
051255 / 200644,,026114          MOVE  AC1,JBTSTS(J)          ;;JOB STATUS WORD FOR THIS JOB
051256 / 607640,,010000          TLNN  AC1,010000             ;;IS JOB LOGGED IN?
051257 / 603100,,100000          TLNE TAC1,100000             ;;NO, CAN COMMAND PROCEED WITH NO LOGIN?
051260 / 254000,,051271          JRST      051271             ;;YES
051261 / 603100,,000004          TLNE TAC1,000004             ;;THE REG KLUGE?
051262 / 254000,,051267          JRST      051267             ;;YES.  ALLOW THIS USER TO LOGIN NOW.
051263 / 265040,,051355           JSP  TAC,051355             ;;NO, TYPE "LOGIN PLEASE"
                       CHKNOX:
051267 / 200100,,051664          MOVE TAC1,051664             ;;INDEX FOR THE REG KLUDGE
051270 / 202103,,000000         MOVEM TAC1,      (P)          ;;STORE THE BITS ON THE STACK AGAIN
                       CHKNO:
051271 / 326200,,051302         JUMPN    J,051302             ;;JUMP IF JOB NUMBER ALREADY ASSIGNED.
051272 / 603100,,200000          TLNE TAC1,200000             ;;NO, DOES THIS COMMAND NEED A JOB NUMBER?
051273 / 254000,,051360          JRST      051360             ;;NO
051274 / 260140,,051066         PUSHJ    P,051066             ;;INITIALIZE A JOB
051275 / 254000,,051321          JRST      051321             ;;NO JOBS AVAILABLE.
153320 / 201100,,056362         MOVEI TAC1,056362             ;;WE NEED TO WAIT FOR FREE STORAGE.
153321 / 254000,,051364          JRST      COMDIS             ;
051276 / 254000,,153320          JRST      153320             ;;SO WE DELAY THIS COMMAND FOR A TICK.
051277 / 200103,,000000          MOVE TAC1,      (P)          ;;RESTORE TAC1 - CLOBBERED BY INIJOB
051300 / 402006,,000005         SETZM      DEVLOG(DDB)        ;;CLEAR LOGICAL NAME OF TTY
051301 / 254000,,051345          JRST      CHKCO1             ;
                       CHKRUN:
051302 / 603640,,400000          TLNE  AC1,400000             ;;DEC 3.16
051303 / 607100,,010000          TLNN TAC1,010000             ;;DEC 3.16
051304 / 254000,,051327          JRST      051327             ;;DEC 3.16
051305 / 214744,,020574          MOVM  AC3,JOBQUE(J)          ;
051306 / 302740,,000011          CAIE  AC3, STOPQ             ;
051307 / 254000,,051313          JRST      CNCMES             ;
051310 / 205740,,400000         MOVSI  AC3,   RUN             ;
051311 / 412744,,026114        ANDCAM  AC3,JBTSTS(J)          ;;NOTE!!!! THIS IS A FIX TO A BUG!!!!!!
051312 / 254000,,051327          JRST      CHKACT             ;
                       CNCMES:
051313 / 265040,,051355           JSP  TAC,051355             ;;DEC 3.16
                       JBCPEX:
051321 / 265040,,051355           JSP  TAC, COMER             ;
                       CHKACT:
051327 / 200344,,027120          MOVE PROG,JBTADR(ITEM)       ;;XWD PROTECTION,RELOCATION
051330 / 603640,,002000          TLNE  AC1,002000             ;;ARE WE SWAPPED OUT?
051331 / 403340,,000007         SETZB PROG,000007             ;;YES. PRETEND NO CORE.
051332 / 603640,,002000          TLNE  AC1,002000             ;;IS JOB ON DISK OR ON ITS WAY?
051333 / 607100,,020000          TLNN TAC1,020000             ;;MUST JOB BE IN CORE?
051334 / 254000,,051343          JRST      051343             ;;NO
051335 / 607100,,004000          TLNN TAC1,004000             ;;SHALL WE SHRINK HIM BEFORE BRINGING HIM IN
051336 / 254000,,051341          JRST      051341             ;;NO.
051337 / 260140,,051042         PUSHJ    P,051042             ;;REG 11-11-72 KILL INTERRUPTS BEFORE SHRINK
051340 / 260140,,052306         PUSHJ    P,052306             ;;SHRINK BEFORE SWAP IN. RPH 8-15-71
                       CHKCO3:
051341 / 201100,,056360         MOVEI TAC1,056360             ;;YES, DELAY COMMAND.
051342 / 254000,,051364          JRST      COMDIS             ;
                       CHKCO2:
051343 / 603100,,040000          TLNE TAC1,040000             ;;CAN COMMAND BE PERFORMED WITH ACTIVE DEVICES?
051344 / 260140,,056331         PUSHJ  PDP,056331             ;;NO, RETURN IF JOB STOPPED AND NO ACTIVE DEVICES
                       CHKCO1:
051345 / 603100,,400000          TLNE TAC1,400000             ;;DOES THIS COMMAND NEED CORE?
051346 / 254000,,051360          JRST      051360             ;;NO. GO DISPATCH
051347 / 326340,,051360         JUMPN PROG,051360             ;;NO, IS CORE IN MEMORY?
051350 / 265040,,051355           JSP  TAC,051355             ;;NO, PRINT "NO CORE ASSIGNED"
                       COMER:
051355 / 205100,,000400         MOVSI TAC1,NOINCK             ;
051356 / 202103,,000000         MOVEM TAC1,      (PDP)        ;
051357 / 201100,,052674         MOVEI TAC1,052674             ;;CALL ERROR MESSAGE ROUTINE
                       COMGO:
051360 / 205000,,004000         MOVSI      NOSKPB             ;
051361 / 412003,,000000        ANDCAM            (PDP)        ;;NO. CLEAR REQUE FLAG ON STAT	;DEC 3.16
051362 / 621640,,200000           TLZ  AC1,200000             ;;WAS JOB IN CMW?	;DEC 3.16
051363 / 202644,,026114         MOVEM  AC1,JBTSTS(ITEM)       ;;DEC 3.16
                       COMDIS:
051364 / 603100,,002000          TLNE TAC1,002000             ;;NEED TO CLEAR TEMPORARY PRIVILEGES?
051365 / 260140,,053531         PUSHJ    P,053531             ;;YES, DO IT
051366 / 201000,,000000         MOVEI                         ;;CLEAR IOS FOR SETTING DISPATCH ADDRESSES
051367 / 350000,,036144           AOS       NCOMS             ;
051370 / 260142,,000000         PUSHJ  PDP,      (TAC1)       ;;DISPATCH TO COMMAND SETUP ROUTINE.
                       ;RETURN FROM COMMAND SETUP ROUTINE
                       COMRET:
051371 / 262140,,000016           POP    P,000016             ;;RESTORE COMMAND FLAGS
051372 / 262140,,000006           POP    P,000006             ;;RESTORE TTY DDB ADDRESS.
051373 / 607700,,004000          TLNN  AC2,NOSKPB             ;
051374 / 260140,,051440         PUSHJ    P,051440             ;;SKIP TO BREAK CHAR UNLESS REQUESTED NOT TO
051375 / 260140,,051454         PUSHJ    P,051454             ;;DECREMENT COMCNT
051376 / 607700,,040000          TLNN  AC2,040000             ;;DID WE STOP SPACEWAR?
051377 / 254000,,051406          JRST      051406             ;;NO.
051400 / 205640,,144000         MOVSI  AC1,144000             ;;PREPARE TO RESTART IT
051401 / 260140,,037464         PUSHJ    P, PWAIT             ;
051402 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
051403 / 412644,,020473        ANDCAM  AC1,JBTST2(J)          ;;ZERO OUT THE SUSPENSION BIT
051404 / 260140,,037501         PUSHJ    P, XWAIT             ;
051405 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
                       COMRE1:
051406 / 326200,,051411         JUMPN    J,051411             ;;DID AN ERROR OCCUR?
051407 / 607700,,200000          TLNN  AC2,200000             ;;I.E., J=0 AND NOJOBN=0?
051410 / 205700,,000401         MOVSI  AC2,000401             ;;YES, PRINT ERROR MESSAGE ONLY.
                       COMRT1:
051411 / 200644,,026114          MOVE  AC1,JBTSTS(J)          ;;JOB STATUS WORD
051412 / 607700,,000400          TLNN  AC2,000400             ;;SUPPRESS JOB INIT. CHECK?
051413 / 663640,,040000          TLOE  AC1,040000             ;;NO, IS JOB INIT BIT ALREADY SET?
051414 / 254000,,051422          JRST      051422             ;;YES.
051415 / 205640,,040000         MOVSI  AC1,040000             ;;NO, SET IT THIS COMMAND
051416 / 436644,,026114          IORM  AC1,JBTSTS(J)          ;
051417 / 260140,,137231         PUSHJ    P,137231             ;;ATTACH TTY TO JOB
051420 / 255000,,000000          JFCL                         ;
051421 / 260140,,053444         PUSHJ    P,053444             ;;TYPE JOB # & CONFIG LINE
                       ;FALL INTO PCRLF
                       PCRLF:
051422 / 603700,,000001          TLNE  AC2,000001             ;;DID AN ERROR OCCUR?
051423 / 260140,,042701         PUSHJ  PDP,042701             ;;YES. APPEND ?
051424 / 607700,,000200          TLNN  AC2,000200             ;;SUPRESS CRLF?
051425 / 260140,,042667         PUSHJ  PDP,042667             ;;NO
051426 / 607700,,000100          TLNN  AC2,000100             ;;SUPRESS PRINTING PERIOD?
051427 / 260140,,042716         PUSHJ  PDP,042716             ;;NO
051430 / 322200,,051435         JUMPE ITEM,051435             ;;JOB DOES NOT RUN IF ERROR 
                       ;OR NO JOB NUMBER ASSIGNED.
051431 / 603700,,000040          TLNE  AC2,000040             ;;JOB TO RUN WHEN TTY FINISHED TYPING?
                       ;COMMAND RESPONSE (TTY TO USER MODE)?
051432 / 260140,,137727         PUSHJ  PDP,137727             ;;YES, CALL SCANNER ROUTINE
051433 / 603700,,000020          TLNE  AC2,000020             ;;NO, JOB TO RUN AND REMAIN IN MONITOR MODE?
051434 / 260140,,046021         PUSHJ  PDP,046021             ;;YES, CALL SCANNER ROUTINE	;MCF(JS)
                       PCRLF1:
051435 / 607700,,000010          TLNN  AC2,000010             ;;IS THERE A MESSAGE?
051436 / 254000,,137707          JRST      137707             ;;YES, START TTY TYPING IT OUT
051437 / 263140,,000000          POPJ  PDP,                   ;
                       COMR2A:
051440 / 135406,,000021           LDB  TEM,TITAKR(DDB)        ;;GET BREAK CHARACTER
051441 / 405400,,000177          ANDI  TEM,   177             ;
051442 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;IN CASE SOMEONE CLOBBERED IT.
                       SKPBRK:
051443 / 261140,,000001          PUSH  PDP,   TAC             ;
                       SKPBR2:
051444 / 260140,,141026         PUSHJ  PDP,SPCHEK             ;
051445 / 254000,,051450          JRST      SKPBR1             ;
051446 / 603040,,020000          TLNE  TAC,020000             ;; IS THIS CHAR THE BREAK?
051447 / 254000,,037376          JRST      037376             ;; YES, RESTORE TAC AND RETURN
                       SKPBR1:
051450 / 260140,,042607         PUSHJ  PDP,042607             ;; GET A CHARACTER FROM COMMAND LINE
051451 / 326400,,051444         JUMPN  TEM,051444             ;; LOOK FURTHER FOR BREAK CHAR
051452 / 254000,,037376          JRST      037376             ;; UNLESS NO MORE CHARS
                       ;CALLED FROM COMMAND RETURN AND FROM DETACH (CDET,FORK,CFORK) COMMAND
                       COMRT2:
051453 / 260140,,051440         PUSHJ  PDP,051440             ;;SKIP TO BREAK CHAR
                       COMR2B:
051454 / 205640,,400000         MOVSI  AC1,COMBIT             ;
051455 / 135040,,037577           LDB  TAC, PUNIT             ;
051456 / 700600,,001004          CONO   PI,SCNOFF             ;
051457 / 335001,,032347        SKIPGE      TTYTAB(TAC)        ;
051460 / 370000,,026105           SOS      COMCNT             ;
051461 / 412641,,032347        ANDCAM  AC1,TTYTAB(TAC)        ;
051462 / 260140,,137150         PUSHJ    P,COMBCK             ;
051463 / 260140,,137063         PUSHJ    P,CNTCOM             ;
051464 / 700600,,002004          CONO   PI, SCNON             ;
051465 / 263140,,000000          POPJ    P,                   ;
                       ;TABLE OF CONSOLE COMMANDS
                       ;BITS CHECKED BEFORE DISPATCHING TO COMMAND SETUP ROUTINE
                       ;AND IS NOT IN CORE.
                       ;EXECUTED.
                       ;THIS SHOULD SAVE A LOT OF TIME
                       ;BITS CHECKED AFTER RETURN FROM COMMAND SETUP ROUTINE
                       ;NODATE←←1000	;DONT PRINT DATE AFTER JOB INITIALIZATION
                       ;WHEN COMMAND RESPONSE STOPS TYPING
                       ;WHEN COMMAND RESPONSE STOPS TYPING
                       ;BITS FOR THE RPG COMMANDS
051466 /                 ;::   BEGIN STANFO.APRSER.COMTBL.
                       COMTAB:
051466 / 535257,,420000                                       ;
051467 / 545747,,576564                                       ;
051470 / 530000,,000000                                       ;
051471 / 534164,,644143                                       ;
051472 / 535457,,470000                                       ;
051473 / 636441,,626400                                       ;
051474 / 630000,,000000                                       ;;JS
051475 / 504154,,640000                                       ;
051476 / 535154,,540000                                       ;
051477 / 465465,,635000                                       ;
051500 / 434254,,415653                                       ;
051501 / 620000,,000000                                       ;
051502 / 626556,,000000                                       ;
051503 / 435762,,450000                                       ;
051504 / 430000,,000000                                       ;
051505 / 634564,,656760                                       ;;RPH SET SEGMENT WRITE PROT
051506 / 435462,,656760                                       ;;RPH CLEAR SEGMENT WRITE PROT
051507 / 455641,,425445                                       ;
051510 / 445163,,414254                                       ;
051511 / 474564,,000000                                       ;
051512 / 470000,,000000                                       ;
051513 / 634166,,450000                                       ;
051514 / 636341,,664500                                       ;
051515 / 435756,,645156                                       ;
051516 / 444500,,000000                                       ;
051517 / 450000,,000000                                       ;
051520 / 605257,,420000                                       ;
051521 / 606464,,710000                                       ;
051522 / 415451,,416300                                       ;;RPH
051523 / 635445,,664554                                       ;
051524 / 416363,,514756                                       ;
051525 / 410000,,000000                                       ;;JS
051526 / 444541,,636351                                       ;
051527 / 440000,,000000                                       ;
051530 / 444464,,000000                                       ;
051531 / 646471,,000000                                       ;;RPH
051532 / 465156,,516350                                       ;
051533 / 460000,,000000                                       ;
051534 / 624545,,566445                                       ;
051535 / 436364,,416264                                       ;
051536 / 434357,,566451                                       ;
051537 / 444564,,414350                                       ;
051540 / 434445,,644143                                       ;
051541 / 416464,,414350                                       ;
051542 / 444171,,645155                                       ;
051543 / 454444,,640000                                       ;
051544 / 645155,,450000                                       ;
051545 / 624563,,576562                                       ;
051546 / 465154,,456300                                       ;
051547 / 624541,,636351                                       ;
051550 / 644154,,530000                                       ;
051551 / 504554,,545700                                       ;;JS
051552 / 545747,,515600                                       ;
051553 / 540000,,000000                                       ;
051554 / 606060,,560000                                       ;
051555 / 465762,,530000                                       ;
051556 / 434657,,625300                                       ;
                       ; MORE COMMANDS . . .
051557 / 504554,,600000                                       ;
051560 / 675045,,624500                                       ;
051561 / 637163,,644164                                       ;
051562 / 675057,,000000                                       ;
051563 / 670000,,000000                                       ;
051564 / 465156,,474562                                       ;
051565 / 465156,,440000                                       ;
051566 / 465170,,515554                                       ;
051567 / 545163,,600000                                       ;
051570 / 626354,,000000                                       ;
051571 / 435755,,605154                                       ;;RPG COMMANDS
051572 / 444542,,654700                                       ;
051573 / 606245,,604162                                       ;
051574 / 545741,,440000                                       ;
051575 / 457045,,436564                                       ;
051576 / 436245,,460000                                       ;
051577 / 646600,,000000                                       ;
051600 / 436466,,000000                                       ;
051601 / 454451,,640000                                       ;
051602 / 454400,,000000                                       ;
051603 / 436245,,416445                                       ;
051604 / 644543,,570000                                       ;
051605 / 554153,,450000                                       ;
051606 / 646271,,000000                                       ;
051607 / 606542,,000000                                       ;
051610 / 624541,,440000                                       ;
051611 / 456466,,000000                                       ;
051612 / 434564,,660000                                       ;
051613 / 545163,,640000                                       ;;COPY COMMANDS
051614 / 445162,,454364                                       ;
051615 / 445100,,000000                                       ;
051616 / 444554,,456445                                       ;
051617 / 624556,,415545                                       ;
051620 / 647160,,450000                                       ;
051621 / 435760,,710000                                       ;
051622 / 606251,,566400                                       ;
051623 / 646241,,566346                                       ;
051624 / 704760,,545163                                       ;
051625 / 634556,,440000                                       ;;MAIL AND REMINDERS
051626 / 554151,,540000                                       ;
051627 / 476251,,604500                                       ;
051630 / 624555,,515644                                       ;
051631 / 434156,,434554                                       ;;DELETE REMINDERS
051632 / 544164,,456200                                       ;
051633 / 624366,,000000                                       ;
051634 / 605441,,560000                                       ;
051635 / 636057,,575400                                       ;;SPOOLER
051636 / 616360,,575754                                       ;
051637 / 655663,,605757                                       ;
051640 / 706360,,575754                                       ;
051641 / 724562,,570000                                       ;
051642 / 704562,,577000                                       ;
051643 / 445700,,000000                                       ;
051644 / 644563,,640000                                       ;
051645 / 624567,,515644                                       ;;DUMP COMMAND RUN DART NOW.
051646 / 446555,,600000                                       ;;IDUMP COMMAND IS FLUSHED.
051647 / 624563,,645762                                       ;
051650 / 414466,,415643                                       ;
051651 / 424143,,536360                                       ;
051652 / 645451,,636400                                       ;
051653 / 455764,,000000                                       ;
051654 / 545743,,416445                                       ;
051655 / 645600,,000000                                       ;
051656 / 644554,,564564                                       ;
051657 / 466460,,000000                                       ;
051660 / 445141,,540000                                       ;
051661 / 566300,,000000                                       ;;NEWS SERVICE--USES TEMPORARY PRIVILEGES
051662 / 505764,,000000                                       ;;NEWS SERVICE HOT LINE WITH TEMP PRIV
051663 / 654460,,654644                                       ;;UDP UFD MUNGER LOTSA PRIVS
                       ;GENERATE THE DISPATCH TABLE AND SPECIAL BITS
                       ;SPECIAL HACK TO FORCE LOGIN FROM "ANY" COMMAND.
051664 / 570140,,053551           XWD NOCORE!NOLOGIN!NOPER!TTYRNU!INCORE!NOACT!NORUN,CXLOGI ;
                       DISP:
051665 / 774710,,052302           XWD NOCORE!NOJOBN!NOINCK!NOLOGIN!NOACT!NORUN!NOCRLF!NOPER!NOMESS!INCORE!SHRINK,KJOB ;
051665 / 774710,,052302                                       ;
051666 / 774710,,052302           XWD NOCORE!NOJOBN!NOINCK!NOLOGIN!NOACT!NORUN!NOCRLF!NOPER!NOMESS!INCORE!SHRINK,KJOB ;
051666 / 774710,,052302                                       ;
051667 / 774710,,052302           XWD NOCORE!NOJOBN!NOINCK!NOLOGIN!NOACT!NORUN!NOCRLF!NOPER!NOMESS!INCORE!SHRINK,KJOB ;
051667 / 774710,,052302                                       ;
051670 / 774710,,052302           XWD NOCORE!NOJOBN!NOINCK!NOLOGIN!NOACT!NORUN!NOCRLF!NOPER!NOMESS!INCORE!SHRINK,KJOB ;
051670 / 774710,,052302                                       ;
051671 / 774710,,052302           XWD NOCORE!NOJOBN!NOINCK!NOLOGIN!NOACT!NORUN!NOCRLF!NOPER!NOMESS!INCORE!SHRINK,KJOB ;
051671 / 774710,,052302                                       ;
051672 / 070140,,052677           XWD NOPER!TTYRNU!INCORE!NOACT!NORUN,START ;
051672 / 070140,,052677                                       ;
051673 / 070140,,052677           XWD NOPER!TTYRNU!INCORE!NOACT!NORUN,START ;
051673 / 070140,,052677                                       ;;JS
051674 / 700400,,052764           XWD NOCORE!NOJOBN!NOLOGIN!NOINCK,STOP ;
051674 / 700400,,052764                                       ;
051675 / 400000,,052457           XWD NOCORE,KILCOM           ;
051675 / 400000,,052457                                       ;
051676 / 700400,,055035           XWD NOINCK!NOLOGIN!NOJOBN!NOCORE,FLUSH ;
051676 / 700400,,055035                                       ;
051677 / 000000,,700600           XWD  ,NOCORE!NOJOBN!NOLOGIN!NOINCK!NOCRLF ;
051677 / 000000,,700600                                       ;
051700 / 476344,,053703           XWD NOCORE!NOPER!TTYRNU!NOCRLF!INCORE!NOACT!NORUN!SHRINK!DOLOG!NOPRIV,RCOM ;
051700 / 476344,,053703                                       ;
051701 / 476344,,053706           XWD NOCORE!NOPER!TTYRNU!NOCRLF!INCORE!NOACT!NORUN!SHRINK!DOLOG!NOPRIV,RUNCOM ;
051701 / 476344,,053706                                       ;
051702 / 750400,,053306           XWD NOCORE!NOACT!NOLOGIN!NORUN!NOINCK!NOJOBN,CORE ;
051702 / 750400,,053306                                       ;
051703 / 750400,,053306           XWD NOCORE!NOACT!NOLOGIN!NORUN!NOJOBN!NOINCK,CORE ;
051703 / 750400,,053306                                       ;
051704 / 442000,,053076           XWD NOACT!NOCORE!NOPRIV,SETWPS ;
051704 / 442000,,053076                                       ;;RPH SET SEGMENT WRITE PROT
051705 / 442000,,053100           XWD NOACT!NOCORE!NOPRIV,CLRWPS ;
051705 / 442000,,053100                                       ;;RPH CLEAR SEGMENT WRITE PROT
051706 / 400000,,053213           XWD NOCORE,ENABLE           ;
051706 / 400000,,053213                                       ;
051707 / 400000,,053205           XWD NOCORE,DISABLE          ;
051707 / 400000,,053205                                       ;
051710 / 476344,,053734           XWD NOCRLF!NOPER!TTYRNU!INCORE!NOCORE!NOACT!NORUN!SHRINK!DOLOG!NOPRIV,GET ;
051710 / 476344,,053734                                       ;
051711 / 476344,,053734           XWD NOCRLF!NOPER!TTYRNU!INCORE!NOCORE!NOACT!NORUN!SHRINK!DOLOG!NOPRIV,GET ;
051711 / 476344,,053734                                       ;
051712 / 072340,,053743           XWD NOCRLF!NOPER!TTYRNU!INCORE!NOACT!NORUN!NOPRIV,SAVE ;
051712 / 072340,,053743                                       ;
051713 / 072340,,053742           XWD NOCRLF!NOPER!TTYRNU!INCORE!NOACT!NORUN!NOPRIV,SSAVE ;
051713 / 072340,,053742                                       ;
051714 / 030140,,053012           XWD NOPER!TTYRNU!INCORE!NORUN,CONT ;
051714 / 030140,,053012                                       ;
051715 / 022000,,055765           XWD INCORE!NOPRIV,DCOM      ;
051715 / 022000,,055765                                       ;
051716 / 020200,,055665           XWD NOCRLF!INCORE,ECOM      ;
051716 / 020200,,055665                                       ;
051717 / 700400,,052162           XWD NOCORE!NOLOGIN!NOJOBN!NOINCK,PJOBDV ;
051717 / 700400,,052162                                       ;
051720 / 700400,,052112           XWD NOCORE!NOJOBN!NOINCK!NOLOGIN,PTTY ;
051720 / 700400,,052112                                       ;
051721 / 402000,,052400           XWD NOCORE!NOPRIV,SDSKPPN   ;
051721 / 402000,,052400                                       ;;RPH
051722 / 400000,,000020           XWD NOCORE,SLEVEL           ;
051722 / 400000,,000020                                       ;
051723 / 402004,,053750           XWD NOCORE!DOLOG!NOPRIV,ASSIGN ;
051723 / 402004,,053750                                       ;
051724 / 402004,,053750           XWD NOCORE!DOLOG!NOPRIV,ASSIGN ;
051724 / 402004,,053750                                       ;;JS
051725 / 400000,,054404           XWD NOCORE,DEASSIGN         ;
051725 / 400000,,054404                                       ;
051726 / 400000,,054404           XWD NOCORE,DEASSIGN         ;
051726 / 400000,,054404                                       ;
051727 / 032140,,053025           XWD NOPER!TTYRNU!INCORE!NORUN!NOPRIV,DDTGO ;
051727 / 032140,,053025                                       ;
051730 / 700400,,137241           XWD NOLOGIN!NOCORE!NOJOBN!NOINCK,TTYSUB ;
051730 / 700400,,137241                                       ;;RPH
051731 / 072100,,056035           XWD NOPER!NOACT!INCORE!NORUN!NOPRIV,FINIS ;
051731 / 072100,,056035                                       ;
051732 / 072100,,056035           XWD NOPER!NOACT!INCORE!NORUN!NOPRIV,FINIS ;
051732 / 072100,,056035                                       ;
051733 / 030140,,052735           XWD TTYRNU!NOPER!INCORE!NORUN,REENTER ;
051733 / 030140,,052735                                       ;
051734 / 030020,,052677           XWD TTYRNC!INCORE!NORUN,STARTC ;
051734 / 030020,,052677                                       ;
051735 / 030020,,053012           XWD TTYRNC!INCORE!NORUN,CONTC ;
051735 / 030020,,053012                                       ;
051736 / 400710,,055210           XWD NOCORE!NOINCK!NOPER!NOCRLF!NOMESS,DETACH ;
051736 / 400710,,055210                                       ;
051737 / 400400,,055174           XWD NOCORE!NOINCK,CDETACH   ;
051737 / 400400,,055174                                       ;
051740 / 700400,,054652           XWD NOCORE!NOJOBN!NOLOGIN!NOINCK,ATTACH ;
051740 / 700400,,054652                                       ;
051741 / 700400,,055276           XWD NOCORE!NOJOBN!NOLOGIN!NOINCK,DAYTIM ;
051741 / 700400,,055276                                       ;
051742 / 700400,,052064           XWD NOCORE!NOJOBN!NOLOGIN!NOINCK,CEDDT ;
051742 / 700400,,052064                                       ;
051743 / 700400,,055451           XWD NOCORE!NOLOGIN!NOINCK!NOJOBN,RUNTIM ;
051743 / 700400,,055451                                       ;
051744 / 700400,,056215           XWD NOCORE!NOJOBN!NOLOGIN!NOINCK,FREDEV ;
051744 / 700400,,056215                                       ;
051745 / 700400,,056412           XWD NOCORE!NOJOBN!NOLOGIN!NOINCK,FILCOM ;
051745 / 700400,,056412                                       ;
051746 / 470000,,054506           XWD NOCORE!NOACT!INCORE!NORUN,REASS ;
051746 / 470000,,054506                                       ;
051747 / 700710,,055645           XWD NOCORE!NOJOBN!NOLOGIN!NOMESS!NOINCK!NOCRLF!NOPER,TALK ;
051747 / 700710,,055645                                       ;
051750 / 700400,,053453           XWD NOCORE!NOLOGIN!NOJOBN!NOINCK,HELLO ;
051750 / 700400,,053453                                       ;;JS
051751 / 570140,,053544           XWD NOCORE!NOLOGIN!NOPER!TTYRNU!INCORE!NOACT!NORUN,CLOGIN ;
051751 / 570140,,053544                                       ;
051752 / 570140,,053544           XWD NOCORE!NOLOGIN!NOPER!TTYRNU!INCORE!NOACT!NORUN,CLOGIN ;
051752 / 570140,,053544                                       ;
051753 / 700400,,052325           XWD NOLOGIN!NOCORE!NOJOBN!NOINCK,PPPN ;
051753 / 700400,,052325                                       ;
051754 / 402710,,055116           XWD NOINCK!NOMESS!NOPER!NOCRLF!NOCORE!NOPRIV,FORK ;
051754 / 402710,,055116                                       ;
051755 / 402710,,055101           XWD NOINCK!NOMESS!NOPER!NOCRLF!NOCORE!NOPRIV,CFORK ;
051755 / 402710,,055101                                       ;
                       ; MORE COMMANDS . . .
051756 / 576344,,053475           XWD RPGBIT!NOLOGIN,HELP     ;
051756 / 576344,,053475                                       ;
051757 / 576344,,053500           XWD RPGBIT!NOLOGIN,WHECOM   ;
051757 / 576344,,053500                                       ;
051760 / 576344,,053503           XWD RPGBIT!NOLOGIN,WHOCOM   ;
051760 / 576344,,053503                                       ;
051761 / 576344,,053503           XWD RPGBIT!NOLOGIN,WHOCOM   ;
051761 / 576344,,053503                                       ;
051762 / 576344,,053503           XWD RPGBIT!NOLOGIN,WHOCOM   ;
051762 / 576344,,053503                                       ;
051763 / 576344,,053633           XWD RPGBIT!NOLOGIN,FINGER   ;
051763 / 576344,,053633                                       ;
051764 / 576344,,053511           XWD RPGBIT!NOLOGIN,FNDCOM   ;
051764 / 576344,,053511                                       ;
051765 / 576344,,053506           XWD RPGBIT!NOLOGIN,FIXIML   ;
051765 / 576344,,053506                                       ;
051766 / 476344,,053636           XWD RPGBIT,LSPCOM           ;
051766 / 476344,,053636                                       ;
051767 / 476344,,053650           XWD RPGBIT,RSLCOM           ;
051767 / 476344,,053650                                       ;
051770 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051770 / 476344,,053565                                       ;;RPG COMMANDS
051771 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051771 / 476344,,053565                                       ;
051772 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051772 / 476344,,053565                                       ;
051773 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051773 / 476344,,053565                                       ;
051774 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051774 / 476344,,053565                                       ;
051775 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051775 / 476344,,053565                                       ;
051776 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051776 / 476344,,053565                                       ;
051777 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
051777 / 476344,,053565                                       ;
052000 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052000 / 476344,,053565                                       ;
052001 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052001 / 476344,,053565                                       ;
052002 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052002 / 476344,,053565                                       ;
052003 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052003 / 476344,,053565                                       ;
052004 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052004 / 476344,,053565                                       ;
052005 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052005 / 476344,,053565                                       ;
052006 / 476344,,053565           XWD RPGBIT,RPGCOM           ;
052006 / 476344,,053565                                       ;
052007 / 476344,,053567           XWD RPGBIT,ETCOM            ;
052007 / 476344,,053567                                       ;
052010 / 476344,,053567           XWD RPGBIT,ETCOM            ;
052010 / 476344,,053567                                       ;
052011 / 476344,,053567           XWD RPGBIT,ETCOM            ;
052011 / 476344,,053567                                       ;
052012 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052012 / 476344,,053573                                       ;;COPY COMMANDS
052013 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052013 / 476344,,053573                                       ;
052014 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052014 / 476344,,053573                                       ;
052015 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052015 / 476344,,053573                                       ;
052016 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052016 / 476344,,053573                                       ;
052017 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052017 / 476344,,053573                                       ;
052020 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052020 / 476344,,053573                                       ;
052021 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052021 / 476344,,053573                                       ;
052022 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052022 / 476344,,053573                                       ;
052023 / 476344,,053573           XWD RPGBIT,CPYCOM           ;
052023 / 476344,,053573                                       ;
052024 / 476344,,053575           XWD RPGBIT,MAICOM           ;
052024 / 476344,,053575                                       ;;MAIL AND REMINDERS
052025 / 476344,,053575           XWD RPGBIT,MAICOM           ;
052025 / 476344,,053575                                       ;
052026 / 476344,,053575           XWD RPGBIT,MAICOM           ;
052026 / 476344,,053575                                       ;
052027 / 476344,,053575           XWD RPGBIT,MAICOM           ;
052027 / 476344,,053575                                       ;
052030 / 476344,,053577           XWD RPGBIT,OBLCOM           ;
052030 / 476344,,053577                                       ;;DELETE REMINDERS
052031 / 476344,,053575           XWD RPGBIT,MAICOM           ;
052031 / 476344,,053575                                       ;
052032 / 576344,,053601           XWD RPGBIT!NOLOGIN,RCVCOM   ;
052032 / 576344,,053601                                       ;
052033 / 476344,,053575           XWD RPGBIT,MAICOM           ;
052033 / 476344,,053575                                       ;
052034 / 476344,,053630           XWD RPGBIT,SPLCOM           ;
052034 / 476344,,053630                                       ;;SPOOLER
052035 / 576344,,053630           XWD RPGBIT!NOLOGIN,SPLCOM   ;
052035 / 576344,,053630                                       ;
052036 / 476344,,053630           XWD RPGBIT,SPLCOM           ;
052036 / 476344,,053630                                       ;
052037 / 476344,,053630           XWD RPGBIT,SPLCOM           ;
052037 / 476344,,053630                                       ;
052040 / 476344,,053642           XWD RPGBIT,ZERCOM           ;
052040 / 476344,,053642                                       ;
052041 / 476344,,053644           XWD RPGBIT,XERCOM           ;
052041 / 476344,,053644                                       ;
052042 / 476344,,053640           XWD RPGBIT,DOCOM            ;
052042 / 476344,,053640                                       ;
052043 / 476344,,053646           XWD RPGBIT,TSTCOM           ;
052043 / 476344,,053646                                       ;
052044 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052044 / 476344,,053571                                       ;;DUMP COMMAND RUN DART NOW.
052045 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052045 / 476344,,053571                                       ;;IDUMP COMMAND IS FLUSHED.
052046 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052046 / 476344,,053571                                       ;
052047 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052047 / 476344,,053571                                       ;
052050 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052050 / 476344,,053571                                       ;
052051 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052051 / 476344,,053571                                       ;
052052 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052052 / 476344,,053571                                       ;
052053 / 476344,,053571           XWD RPGBIT,DSCCOM           ;
052053 / 476344,,053571                                       ;
052054 / 476344,,053652           XWD RPGBIT,TNCOM            ;
052054 / 476344,,053652                                       ;
052055 / 476344,,053652           XWD RPGBIT,TNCOM            ;
052055 / 476344,,053652                                       ;
052056 / 476344,,053654           XWD RPGBIT,FTPCOM           ;
052056 / 476344,,053654                                       ;
052057 / 476344,,053656           XWD RPGBIT,DILCOM           ;
052057 / 476344,,053656                                       ;
052060 / 476344,,053604           XWD RPGBIT,NSCOM            ;
052060 / 476344,,053604                                       ;;NEWS SERVICE--USES TEMPORARY PRIVILEGES
052061 / 476344,,053626           XWD RPGBIT,HOTCOM           ;
052061 / 476344,,053626                                       ;;NEWS SERVICE HOT LINE WITH TEMP PRIV
052062 / 476344,,053616           XWD RPGBIT,UDPCOM           ;
052062 / 476344,,053616                                       ;;UDP UFD MUNGER LOTSA PRIVS
052063 / 700400,,056034           XWD NOCORE+NOJOBN+NOLOGIN+NOINCK,NOCOM	 ;
                       ;CATCH ANYTHING THAT'S NOT A COMMAND
052064 /                 ;::    BEND STANFO.APRSER.COMTBL.
                       ;CALLED FROM COMMAND DECODER WHICH IS CALLED FROM CLOCK ROUTINE
                       ;WITH FOLLOWING AC'S SET:
                       ;TAC= BYTE POINTER TO COMMAND STRING(SPACE OR CR AFTER COMMAND NAME)
                       ;ITEM = JOB NUMBER
                       ;DAT = BYTE POINTER TO LAST OUTPUT CHARACTER
                       ;DEVDAT= ADDRESS OF DEVICE DATA BLOCK INITIATING COMMAND
                       ;JDAT = ADDRESS OF JOB DATA AREA, = 0 IF NO JOB AREA
                       ;PROG=XWD PROTECTION,RELOCATION; 0 IF NO CORE
                       ;IOS=0
                       ;UPON RETURN FROM COMMAND SETUP ROUTINE, A CR-LF IS ADDED IF
                       ;NEEDED AND TTY IS STARTED
                       ;SINCE THE COMMAND DECODER IS CALLED FROM THE CLOCK ROUTINE
                       ;COMMAND SETUP ROUTINES MUST RUN TO COMPLETION QUICKLY
                       ;IF A COMMAND FUNCTION CANNOT DO THIS, IT MUST JUST SET
                       ;THE JOB TO A RUNABLE STATUS AND RETURN IMMEDIATELY
                       CEDDT:
052064 / 260140,,140030         PUSHJ    P,140030             ;;SET UP LINE(TAC1)
052065 / 607100,,200000          TLNN TAC1,200000             ;;IS HE ON THE CTY?
052066 / 254000,,042646          JRST      042646             ;;NO, FLUSH HIM
052067 / 254000,,000347          JRST      000347             ;;YES, GET EXEC DDT
                       COR0:
                       ;CALLED FROM CORE COMMAND TO ZERO CORE
052070 / 322340,,037403         JUMPE PROG,037403             ;;RETURN IF JOB DOES NOT HAVE CORE
052071 / 205040,,000340         MOVSI  TAC,000340             ;
052072 / 436043,,777777          IORM  TAC,777777(P)          ;;TELL COMRET TO PUT TTY IN USER MODE
052073 / 265100,,045737           JSP TAC1,045737             ;;SET TO RUN MONITOR JOB(PC IN EXEC MODE)
                       ;RETURN HERE AT UUO LEVEL(NO ACS SET UP)
052074 / 201100,,045546         MOVEI TAC1,045546             ;;PUT ERROR STOP ON END OF PDL
052075 / 265040,,045741           JSP  TAC,045741             ;;START MONITOR JOB BY SETTING UP ACS AND
                       JOB1:
052076 / 260140,,060027         PUSHJ    P,060027             ;;RELEASE ALL IO DEVICES ASSIGNED TO THIS JOB
052077 / 260140,,137612         PUSHJ    P,137612             ;;FIND TTY FOR THIS JOB(SETUP ITEM WITH JOB NO.)
052100 / 260140,,045733         PUSHJ    P,045733             ;;PUT JOB IN NO CORE Q
052101 / 201040,,000000         MOVEI  TAC,                   ;;FLUSH ALL CORE
052102 / 370003,,000000           SOS            (P)          ;;CORE1 WILL SKIP RETURN
052103 / 402004,,021427         SETZM      JBTSWP(J)          ;;CLEAR IMGIN AND IMGOUT
052104 / 476004,,032043         SETOM       STIME(J)          ;;MARK CORE IMAGE ALTERED
052105 / 135240,,037600           LDB  DAT, PSEGN             ;
052106 / 200405,,026114          MOVE  TEM,JBTSTS(DAT)        ;
052107 / 607400,,000001          TLNN  TEM,   JWP             ;
052110 / 476005,,032043         SETOM       STIME(DAT)        ;
052111 / 254000,,072110          JRST       CORE1             ;
                       ;PTTY PJOB KJOB
                       ; "PTTY" GIVES THE LOGICAL NAME OF THE TTY THE LOSER IS ON.
                       ; "PTTY N" GIVES THE LOGICAL NAME OF THE TTY FOR JOB N.
                       PTTY:
052112 / 260140,,042747         PUSHJ    P,042747             ;;JOB NUMBER MAYBE?
052113 / 254000,,052142          JRST       PTTY1             ;
052114 / 254000,,042645          JRST      COMERA             ;
052115 / 322100,,052440         JUMPE TAC1,NOTLOG             ;
052116 / 301100,,000100          CAIL TAC1,000100             ;;LEGAL?
052117 / 254000,,052440          JRST      052440             ;;NONE SUCH JOB
052120 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;
052121 / 607040,,040000          TLNN  TAC,040000             ;;DOES HE HAVE A JOB NUMBER?
052122 / 254000,,052440          JRST      052440             ;;NO, LOSE
052123 / 200642,,027320          MOVE  AC1,JBTLIN(TAC1)       ;;LINE NUMBER
151674 / 777777,,777777                                       ;
052124 / 316640,,151674          CAMN  AC1,151674             ;;DETACHED?
052125 / 254000,,052156          JRST      052156             ;;YES
052126 / 607640,,200000          TLNN  AC1,200000             ;;CTY?
052127 / 254000,,052133          JRST      NOTCTY             ;
052130 / 265040,,042670           JSP  TAC,CONMES             ;
                       NOTCTY:
052133 / 261140,,000015          PUSH    P,   AC1             ;
052134 / 260140,,042676         PUSHJ    P,INLMES             ;
052136 / 262140,,000001           POP    P,   TAC             ;
052137 / 553000,,000001         HRRZS         TAC             ;
052140 / 260140,,043700         PUSHJ    P,OCTPNT             ;
052141 / 254000,,052146          JRST       PTTY2             ;
                       PTTY1:
052142 / 200106,,000000          MOVE TAC1,      (DDB)        ;
052143 / 260140,,043730         PUSHJ    P,PRNAME             ;
052144 / 135640,,037577           LDB  AC1, PUNIT             ;
052145 / 500655,,017717           HLL  AC1,LINTAB(AC1)        ;
                       PTTY2:
052146 / 607640,,020000          TLNN  AC1,DDDLIN             ;
052147 / 254000,,042667          JRST        CRLF             ;
052150 / 260140,,042676         PUSHJ    P,INLMES             ;
052152 / 200655,,012567          MOVE  AC1,012567(AC1)        ;;NONZERO IT SAYS HERE
052153 / 554055,,000015          HLRZ  TAC,PRGNUM(AC1)        ;
052154 / 260140,,043700         PUSHJ    P,OCTPNT             ;
052155 / 254000,,042667          JRST        CRLF             ;
                       PTTYDT:
052156 / 265040,,042670           JSP  TAC,CONMES             ;
                       ; "PJOB" PRINT JOB NUMBER OF JOB TTY IS ATTACHED TO
                       ; "PJOB TTYN" PRINT JOB NUMBER OF JOB USING TTYN.
                       PJOBDV:
052162 / 260140,,042552         PUSHJ    P,042552             ;;ARG
052163 / 326100,,052170         JUMPN TAC1, PJOBX             ;
052164 / 322200,,053440         JUMPE ITEM,LOGPLS             ;
                       PJOB:
052165 / 200040,,000004          MOVE  TAC,000004             ;;JOB NO.
                       DECLF:
052166 / 260140,,043720         PUSHJ  PDP,043720             ;;PRINT TAC AS DEC. THEN CRLF
052167 / 254000,,042667          JRST        CRLF             ;
                       PJOBX:
052170 / 200040,,000002          MOVE  TAC,  TAC1             ;
052171 / 261140,,000001          PUSH    P,   TAC             ;
052172 / 260140,,044701         PUSHJ    P,DEVPHY             ;
052173 / 334303,,777775         SKIPA  DDB,777775(P)          ;;(SO I DON'T CARE IF DEVPHY MUNGS IT)
052174 / 254000,,052214          JRST      FNDDEV             ;
052175 / 260140,,054757         PUSHJ    P,054757             ;;NOT DEVICE, PERHAPS DD CHAN
052176 / 254000,,052251          JRST      052251             ;;NOPE, NO SUCH FROBULE
152654 / 221001,,014525                                       ;
052177 / 135100,,152654           LDB TAC1,152654             ;;;replace;;LDB TAC1,[DDUSR+<(TAC)>]	;YES, GET USE CODE
052200 / 322100,,052266         JUMPE TAC1,052266             ;;0, NOT IN USE
052201 / 305100,,000100         CAIGE TAC1,000100             ;;IF LESS THAN 100,
052202 / 254000,,052220          JRST      052220             ;;  IT'S ASSIGNED TO THAT JOB
052203 / 301100,,000200          CAIL TAC1,000200             ;;ABOVE 200,
052204 / 254000,,052260          JRST      052260             ;;  DETACHED FROM SYS (OR AVLCHN)
052205 / 275100,,000052          SUBI TAC1,000052             ;;ELSE MAKE IT A TTY LINE NUMBER
052206 / 261140,,000002          PUSH    P,  TAC1             ;
052207 / 201642,,000000         MOVEI  AC1,      (TAC1)       ;
052210 / 260140,,052133         PUSHJ    P,052133             ;;THIS WILL TYPE THE TTY NUMBER
052211 / 262140,,000002           POP    P,  TAC1             ;
                       FNDDV0:
052212 / 336302,,032347         SKIPN  DDB,TTYTAB(TAC1)       ;;DOES IT HAVE A DDB
052213 / 254000,,052266          JRST      052266             ;;NO ONE HAS IT
                       FNDDEV:
052214 / 200106,,000004          MOVE TAC1,DEVMOD(DDB)        ;;SPECIAL HAIR FOR UDP AS USUAL
052215 / 603100,,100000          TLNE TAC1, DVUDP             ;
052216 / 254000,,052233          JRST      PJBUDP             ;
052217 / 135100,,037575           LDB TAC1, PJOBN             ;
                       FNDDV1:
052220 / 322100,,052255         JUMPE TAC1,DEVFR1             ;
052221 / 261140,,000001          PUSH    P,000001             ;;SORRY ABOUT THIS
052222 / 260140,,052276         PUSHJ    P,PJPRNM             ;
052223 / 262140,,000001           POP    P,   TAC             ;
052224 / 260140,,042676         PUSHJ    P,INLMES             ;
052231 / 262140,,000001           POP    P,   TAC             ;
052232 / 254000,,052166          JRST       DECLF             ;
                       PJBUDP:
052233 / 135040,,037577           LDB  TAC,037577             ;;UDP: GET INDEX TO TABLES
052234 / 331101,,011750         SKIPL TAC1,011750(TAC)        ;
052235 / 254000,,052220          JRST      052220             ;;PRIVATELY OWNED, DO THE USUAL THING
052236 / 336001,,011751         SKIPN      011751(TAC)        ;
052237 / 254000,,052266          JRST      052266             ;;NO DDBS, NOT IN USE
052240 / 261140,,000001          PUSH    P,   TAC             ;
052241 / 260140,,052276         PUSHJ    P,PJPRNM             ;
052242 / 262140,,000001           POP    P,   TAC             ;
052243 / 332041,,011733         SKIPE  TAC,SATADR(TAC)        ;
052244 / 260140,,056320         PUSHJ    P,056320             ;;PRINT SATID IF ANY
052245 / 262143,,000000           POP    P,      (P)          ;
052246 / 265040,,042670           JSP  TAC,CONMES             ;
                       PJDVLZ:
052251 / 262143,,000000           POP    P,      (P)          ;
052252 / 200303,,777776          MOVE  DDB,777776(P)          ;
052253 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
052254 / 254000,,054454          JRST      NOTDEV             ;
                       DEVFR1:
052255 / 200106,,000004          MOVE TAC1,DEVMOD(DDB)        ;
052256 / 606100,,400000          TRNN TAC1,400000             ;;DETACHED MAYBE?
052257 / 254000,,052266          JRST      DEVFRE             ;
                       DEVFR2:
052260 / 265040,,052272           JSP  TAC,PJBMSG             ;
                       DEVFRE:
052266 / 265040,,052272           JSP  TAC,PJBMSG             ;
                       PJBMSG:
052272 / 262143,,000000           POP    P,      (P)          ;
052273 / 200303,,777776          MOVE  DDB,777776(P)          ;
052274 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
052275 / 254000,,042670          JRST      CONMES             ;
                       PJPRNM:
052276 / 200303,,777773          MOVE  DDB,777773(P)          ;
052277 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
052300 / 250103,,777776          EXCH TAC1,777776(P)          ;
052301 / 254000,,043730          JRST      PRNAME             ;
                       ;  "KJOB" KILL ATTACHED JOB
                       KJOB:
052302 / 322200,,052675         JUMPE ITEM,052675             ;;WAS JOB INITIALIZED?	;DEC 3.16
052303 / 607640,,002000          TLNN  AC1,002000             ;;DEC 3.16
052304 / 254000,,052311          JRST      052311             ;;DEC 3.16
052305 / 326340,,056356         JUMPN PROG,056356             ;;DEC 3.16
                       CORX:
052306 / 201040,,000001         MOVEI  TAC,000001             ;;DEC 3.16
052307 / 261140,,053347          PUSH  PDP,053347             ;;DEC 3.16
052310 / 254000,,072062          JRST      072062             ;;DEC 3.16
                       KJOB1:
052311 / 260140,,140030         PUSHJ    P,140030             ;;GET TTY BITS
052312 / 607100,,001000          TLNN TAC1,001000             ;;IMP'S GET LOGGED OUT ANYWAY
052313 / 607100,,004000          TLNN TAC1,004000             ;;FLUSH PTY JOBS INSTANTLY!
052314 / 627640,,110000          TLZN  AC1,110000             ;;SHALL WE RUN LOGOUT?
052315 / 254000,,052605          JRST      052605             ;;NO.
052316 / 661640,,100000           TLO  AC1,100000             ;;SET "ACCOUNTING PGM RUNNING"
052317 / 502644,,026114          HLLM  AC1,JBTSTS(ITEM)       ;
052320 / 260140,,053522         PUSHJ  PDP,ALOGN1             ;
052321 / 205040,,000050         MOVSI  TAC,000050             ;
052322 / 432043,,777777          XORM  TAC,777777(PDP)        ;
151465 / 545747,,576564                                       ;
052323 / 261140,,151465          PUSH  PDP,151465             ;
052324 / 254000,,053660          JRST      053660             ;;RUN LOGOUT
                       ; PRINT OUT A JOB'S PROJECT PROGRAMMER NUMBER
                       PPPN:
052325 / 260140,,042747         PUSHJ    P,042747             ;;GET ARGUMENT, IF ANY
052326 / 254000,,052364          JRST      052364             ;;NO ARGUMENT. PPN FOR CURRENT JOB.
052327 / 254000,,042645          JRST      042645             ;;ILL. ARGUEMENT
052330 / 205040,,000400         MOVSI  TAC,000400             ;;DON'T INITIALIZE A JOB JUST FOR ME!
052331 / 436043,,777777          IORM  TAC,777777(P)          ;
052332 / 305100,,000100         CAIGE TAC1,000100             ;; OUT OF BOUNDS?
052333 / 307100,,000000          CAIG TAC1,                   ;
052334 / 254000,,055760          JRST      055760             ;; PRINT "OUT OF BOUNDS"
052335 / 200640,,000002          MOVE  AC1,000002             ;; USE THAT JOB NUMBER
                       PPPN5:
052336 / 200055,,026114          MOVE  TAC,JBTSTS(AC1)        ;
052337 / 332015,,027720         SKIPE      PRJPRG(AC1)        ;
052340 / 607040,,040000          TLNN  TAC,   JNA             ;
052341 / 254000,,052440          JRST      NOTLOG             ;
151370 / 000015,,027720                                       ;
151370 / 440615,,027720 POINT 6,15027720,                     ;
052342 / 200040,,151370          MOVE  TAC,151370             ;
052343 / 260140,,052371         PUSHJ    P,052371             ;;WRITE 3 SIXBIT CHARACTERS
052344 / 201400,,000054         MOVEI  TEM,000054             ;
052345 / 256000,,042674           XCT         TYO             ;
052346 / 260140,,052371         PUSHJ    P,052371             ;;TYPE THE REST
052347 / 336015,,030020         SKIPN      DSKPPN(AC1)        ;;ANY ALIAS PPN?
052350 / 254000,,052361          JRST      052361             ;
052351 / 260140,,042676         PUSHJ    P,INLMES             ;
151371 / 047015,,400071        DSKPPN            (AC1)        ;
151371 / 440615,,400071 POINT 6,47015400071,                  ;
052354 / 200040,,151371          MOVE  TAC,151371             ;
052355 / 260140,,052371         PUSHJ    P, PPPN7             ;
052356 / 201400,,000054         MOVEI  TEM,000054             ;
052357 / 256000,,042674           XCT         TYO             ;
052360 / 260140,,052371         PUSHJ    P, PPPN7             ;
                       NOALIA:
                       ;FTDSKPPN
052361 / 260140,,042676         PUSHJ  PDP,INLMES             ;
052363 / 263140,,000000          POPJ  PDP,                   ;
                       PPPN6:
052364 / 201644,,000000         MOVEI  AC1,      (J)          ;; NO ARGUMENT USE PPN OF CURRENT JOB
052365 / 200704,,026114          MOVE  AC2,JBTSTS(J)          ;
052366 / 607700,,010000          TLNN  AC2,  JLOG             ;
052367 / 254000,,053440          JRST      LOGPLS             ;
052370 / 254000,,052336          JRST       PPPN5             ;
                       PPPN7:
052371 / 201100,,000003         MOVEI TAC1,000003             ;;3 CHARACTERS
                       PPPN8:
052372 / 134400,,000001          ILDB  TEM,000001             ;;LOAD THE NEXT BYTE
052373 / 322400,,052376         JUMPE  TEM,052376             ;;FLUSH NULL BYTES
052374 / 271400,,000040          ADDI  TEM,000040             ;;MAKE SIXBIT INTO ASCII
052375 / 256000,,042674           XCT      042674             ;;TYPE ONE CHARACTER
                       PPPN9:
052376 / 367100,,052372          SOJG TAC1,052372             ;;LOOP
052377 / 263140,,000000          POPJ    P,                   ;
                       ;COMMAND	"ALIAS P,PN"  OR  "ALIAS P"  OR  "ALIAS"
                       ;THE FIRST SETS DSKPPN(J) AND THE SECOND RESETS IT
                       SDSKPP:
052400 / 302400,,000073          CAIE  TEM,   073             ;;;replaced;;	CAIE	TEM,";"
052401 / 306400,,000012          CAIN  TEM,000012             ;;TERMINATOR SEEN ALREADY?
052402 / 254000,,052423          JRST      052423             ;;YES. RESET ALIAS.
052403 / 260140,,052430         PUSHJ    P,052430             ;;LOOK FOR ARG
153632 / 302400,,000012          CAIE  TEM,000012             ;;NO ARG AT ALL?
153633 / 306400,,000073          CAIN  TEM,   073             ;;;replaced;;			CAIN TEM,73
153634 / 254000,,052423          JRST      052423             ;;NO ARG IS OK
153635 / 254000,,042645          JRST      COMERA             ;
052404 / 322100,,153632         JUMPE TAC1,153632             ;;BAD ARG, ERROR
052405 / 510700,,000002          HLLZ  AC2,000002             ;;SAVE P
052406 / 602100,,777777          TRNE TAC1,777777             ;;CHECK SYNTAX, RPH YOU LAZY ...
052407 / 254000,,042645          JRST      COMERA             ;
052410 / 302400,,000073          CAIE  TEM,   073             ;;;replaced;;	CAIE	TEM,";"
052411 / 306400,,000012          CAIN  TEM,000012             ;;ONE ARG?
153242 / 540704,,027720           HRR  AC2,PRJPRG(J)          ;;COPY PRG
153243 / 254000,,052420          JRST      CNGPRJ             ;
052412 / 254000,,153242          JRST      153242             ;
                       ;	CAIE	TEM,","		;COMMA FOR SEPERATOR?
                       ;	CAIN	TEM,"/"		;OR SLASH?
                       ;	CAIA			;YES
                       ;	JRST	COMERA		;NO
052413 / 260140,,052430         PUSHJ    P,052430             ;;TRY TO GET PN
052414 / 322100,,042645         JUMPE TAC1,042645             ;;MUST BE ONE
052415 / 544700,,000002           HLR  AC2,000002             ;;DON'T CARE ABOUT TERMINATOR HERE
052416 / 602100,,777777          TRNE TAC1,777777             ;
052417 / 254000,,042645          JRST      COMERA             ;
                       CNGPRJ:
052420 / 316700,,074743          CAMN  AC2,074743             ;;SAME AS 1,1?
052421 / 254000,,042645          JRST      042645             ;;SOME THINGS NOT ALLOWED.
052422 / 316704,,027720          CAMN  AC2,PRJPRG(J)          ;;RESETING EXPLICITLY
                       CDSKPP:
052423 / 400700,,000000          SETZ  AC2,                   ;
052424 / 312704,,030020          CAME  AC2,DSKPPN(J)          ;;CHANGING?
052425 / 402004,,030642         SETZM      JBTUFD(J)          ;;YES, CLEAR JBTUFD
052426 / 202704,,030020         MOVEM  AC2,DSKPPN(J)          ;
052427 / 263140,,000000          POPJ    P,                   ;
                       GETWRB:
052430 / 260140,,042550         PUSHJ    P, CTEXT             ;
052431 / 322100,,052436         JUMPE TAC1,NOJUST             ;
052432 / 607100,,007777          TLNN TAC1,  7777             ;
052433 / 242100,,777764           LSH TAC1,777764             ;
052434 / 607100,,000077          TLNN TAC1,    77             ;
052435 / 242100,,777772           LSH TAC1,777772             ;
                       NOJUST:
052436 / 260140,,042626         PUSHJ    P,042626             ;;CAREFUL, THIS GUY CAN CALL TPOPJ
052437 / 263140,,000000          POPJ    P,                   ;
                       ;FTDSKPPN
                       NOTLOG:
052440 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ; SERVICE LEVEL COMMAND
                       ; SLEVEL
                       ; YOUR CURRENT SERVICE LEVEL IS PRINTED.
                       SLEVEL:
                       TYPSL:
052444 / 260140,,060617         PUSHJ    P,060617             ;;MAKE SURE CURRENT SERVICE LEVEL IS SPREAD
                       ;SPRSSL IS IN UUOCON
052445 / 550044,,026320          HRRZ  TAC,JBTGSL(J)          ;
052446 / 221040,,000144         IMULI  TAC,000144             ;
052447 / 271040,,400000          ADDI  TAC,400000             ;; TRY TO CORRECT FOR ROUNDOFF ERROR
052450 / 557000,,000001         HLRZS         TAC             ;
052451 / 260140,,043720         PUSHJ    P,RADX10             ;
052452 / 265040,,042670           JSP  TAC,CONMES             ;
                       ;KILL N ---- KILL JOB N IMMEDIATELY! -- OR MAYBE LATER
                       KILCOM:
052457 / 260140,,042747         PUSHJ    P,042747             ;;GET ARGUMENT
052460 / 254000,,042706          JRST      042706             ;;NONE
052461 / 254000,,042645          JRST      042645             ;;ILLEGAL
052462 / 316200,,000002          CAMN    J,000002             ;;NO SUICIDE!
052463 / 254000,,052563          JRST      ILLKIL             ;
052464 / 301100,,000100          CAIL TAC1,000100             ;;LEGAL?
052465 / 254000,,052440          JRST      052440             ;;TOO BIG
052466 / 323100,,052440        JUMPLE TAC1,052440             ;;TOO SMALL
052467 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;
052470 / 607040,,040000          TLNN  TAC,040000             ;;LEAVE US NOT FLUSH NON-EX JOBS
052471 / 254000,,052440          JRST      NOTLOG             ;
052472 / 603040,,001000          TLNE  TAC,001000             ;;IS IT SEG2.
052473 / 254000,,052546          JRST      052546             ;;JUST CHANGE NAME OF UPPER SEGMENT.
052474 / 205640,,001000         MOVSI  AC1,001000             ;;LOOK FOR KILL PRIVILEGE
052475 / 612644,,027420          TDNE  AC1,JBTPRV(J)          ;;...
052476 / 254000,,052503          JRST      052503             ;;HE HAS THE POWER
052477 / 550644,,027720          HRRZ  AC1,PRJPRG(ITEM)       ;;GET PROGRAMMER NAME
052500 / 550042,,027720          HRRZ  TAC,PRJPRG(TAC1)       ;;GET PRG OF GUY WE'RE KILLING
052501 / 312040,,000015          CAME  TAC,000015             ;;SAME
052502 / 254000,,052555          JRST      052555             ;;LOSE!
                       KILOK:
052503 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;
052504 / 603040,,004000          TLNE  TAC,   SHF             ;
052505 / 254000,,056361          JRST      056361             ;;WAIT A WHILE
052506 / 261140,,000004          PUSH    P,000004             ;;SAVE ME
052507 / 261140,,000007          PUSH    P,000007             ;;AND MY JOB
052510 / 200200,,000002          MOVE    J,000002             ;;MAKE BELIEVE I'M HIM
052511 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;AND HIS JOB
052512 / 603040,,002000          TLNE  TAC,002000             ;;SWAPPED OUT?
                       ;NEXT INSTRUCTION MAY BE HAZZARDOUS TO YOUR HEALTH IF TWIDDLED.
052513 / 254000,,052542          JRST      052542             ;;GET HIM IN
052514 / 322340,,052524         JUMPE PROG,052524             ;;ANY CORE?
052515 / 200043,,000000          MOVE  TAC,      (P)          ;
052516 / 200041,,027420          MOVE  TAC,JBTPRV(TAC)        ;;GET PRIVILEGES OF GUY WHO TYPED COMMAND
052517 / 603040,,001000          TLNE  TAC,001000             ;;IF HE HAS THE PRIV
052520 / 254000,,052530          JRST      052530             ;;HE CAN KILL WITH ACTIVE IO
052521 / 260140,,071623         PUSHJ  PDP,071623             ;;YES, ARE DEVICES ACTIVE?
052522 / 254000,,052542          JRST      052542             ;;YES, DELAY
052523 / 254000,,052530          JRST      052530             ;;WE HAVE CORE AND NO ACTIVE DEVICES
                       KILCM7:
052524 / 201040,,000140         MOVEI  TAC,000140             ;;NO, JUST GET A JOB DATA AREA
052525 / 260140,,072047         PUSHJ    P,072047             ;;MAKE SURE HE HAS CORE
052526 / 255000,,000000          JFCL                         ;
052527 / 322340,,052543         JUMPE PROG,052543             ;;IF WE DON'T HAVE CORE HERE WE LOSE.
                       KILCM6:
052530 / 205100,,200000         MOVSI TAC1,200000             ;;CLEAR COMMAND WAIT BIT
052531 / 412104,,026114        ANDCAM TAC1,JBTSTS(J)          ;;SO HE WILL RUN
052532 / 201100,,052573         MOVEI TAC1,052573             ;;THIS IS THE PLACE TO START HIM
052533 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;;GET PRIV AGAIN
052534 / 607040,,001000          TLNN  TAC,001000             ;;SKIP IF HE HAS IT
052535 / 201100,,052607         MOVEI TAC1,052607             ;;ELSE NORMAL KJOB ROUTINE
052536 / 260140,,045737         PUSHJ    P,045737             ;;MAKE HIM A MONITOR JOB
                       KILCM2:
052537 / 262140,,000007           POP    P,000007             ;;SUPRISE
052540 / 262140,,000004           POP    P,000004             ;;IT'S ME AGAIN
052541 / 263140,,000000          POPJ    P,                   ;;DIDN'T SEE A THING
                       KILCM3:
052542 / 260140,,045725         PUSHJ    P,045725             ;;SET CMWB AND GET IN CORE IF NECESSARY
                       KILCM4:
052543 / 262140,,000007           POP    P,000007             ;;NOW LETS BE OURSELVES AGAIN
052544 / 262140,,000004           POP    P,     J             ;
052545 / 254000,,056361          JRST      056361             ;;NOW DELAY US.
                       KILCM5:
052546 / 200042,,027720          MOVE  TAC,PRJPRG(TAC1)       ;
052547 / 202042,,030142         MOVEM  TAC,JOBNAM(TAC1)       ;;NO ONE WILL BELIEVE THIS NAME.
052550 / 261140,,000004          PUSH    P,     J             ;
052551 / 200200,,000002          MOVE    J,  TAC1             ;
052552 / 260140,,072454         PUSHJ    P,NAMSTT             ;
052553 / 262140,,000004           POP    P,     J             ;
052554 / 263140,,000000          POPJ    P,                   ;
                       NOTYRS:
052555 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ILLKIL:
052563 / 265040,,042670           JSP  TAC,CONMES             ;
                       ;PRIVILEGED KILL ROUTINE, FLUSHES THINGS WITHOUT WAITING
                       KILCM1:
052573 / 201100,,045550         MOVEI TAC1, ESTOP             ;
052574 / 265040,,045741           JSP  TAC,045741             ;;MAKE ME SOME PDL
052575 / 260140,,060104         PUSHJ    P,060104             ;;FLUSH HIS SEGMENT
052576 / 260140,,045210         PUSHJ    P,045210             ;;KILL ALL IO WITHOUT WAITING
052577 / 260140,,137613         PUSHJ    P,137613             ;;FIND TTY
052600 / 260140,,140774         PUSHJ    P,140774             ;;CLEAR IO
052601 / 205000,,010000         MOVSI        TOIP             ;
052602 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;CLEAR TOIP SO ESTOP WON'T HANG
052603 / 260140,,150072         PUSHJ    P,150072             ;;KILL SPACEWAR
052604 / 254000,,052611          JRST      052611             ;;LET KJOB ROUTINE DO THE REST
                       KJOB2:
052605 / 322340,,052647         JUMPE PROG,052647             ;;DOES JOB HAVE CORE?
052606 / 265100,,045737           JSP TAC1,045737             ;;YES, SCHEDULE MONITOR JOB.
                       JOBKL:
052607 / 201100,,045621         MOVEI TAC1,045621             ;;ESTOP AT END OF PDL
052610 / 265040,,045741           JSP  TAC,045741             ;;SET UP ACS AND PDL LIST
                       JOBKL1:
052611 / 260140,,042524         PUSHJ    P,042524             ;;SET UP TO FLUSH SPECIAL DETACHED SEGMENTS
052612 / 316344,,027120          CAMN PROG,JBTADR(J)          ;;THE FOLLOWING IS BROUGHT TO YOU BY THE DRD.
052613 / 254000,,052627          JRST      JOBKL2             ;
052614 / 260140,,000316         PUSHJ    P,PUSHIT             ;
052615 / 260140,,044066         PUSHJ    P,DISMES             ;
052624 / 260140,,044104         PUSHJ    P,DISJOB             ;
052625 / 260140,,044076         PUSHJ    P,044076             ;
052626 / 260140,,000341         PUSHJ    P, POPIT             ;
                       JOBKL2:
052627 / 260140,,060027         PUSHJ    P,060027             ;;FINISH IO BEFORE DEASSIGNING
052630 / 260140,,042735         PUSHJ    P,042735             ;;WHILE WE STILL HAVE CORE, DEASSIGN DEVICES XCPT TTY
052631 / 260140,,052076         PUSHJ    P,052076             ;;CALL RESET(AGAIN!), RELEASE CORE.
052632 / 336004,,027120         SKIPN      JBTADR(J)          ;;THE FOLLOWING IS MORE DRD CODE
052633 / 254000,,052647          JRST       JOBKA             ;
052634 / 260140,,000316         PUSHJ    P,PUSHIT             ;
052635 / 260140,,044066         PUSHJ    P,DISMES             ;
052644 / 260140,,044104         PUSHJ    P,DISJOB             ;
052645 / 260140,,044076         PUSHJ    P,044076             ;
052646 / 260140,,000341         PUSHJ    P, POPIT             ;
                       JOBKA:
                       JOBKK:
052647 / 260140,,042735         PUSHJ    P,042735             ;;DEASSIGN ALL BUT TTY
052650 / 260140,,137657         PUSHJ    P,137657             ;;GET TTY FOR OUTPUT
052651 / 260140,,042676         PUSHJ    P,INLMES             ;
052654 / 260140,,042716         PUSHJ    P, PRPER             ;
052655 / 260140,,137707         PUSHJ    P,TTYSTR             ;
052656 / 260140,,140274         PUSHJ    P,140274             ;;RETURN TTY TO VIRGIN STATE
052657 / 332644,,021103         SKIPE  AC1, JBTJL(J)          ;;AND JOB PRIORITY HISTORY
052660 / 260140,,074163         PUSHJ    P,FSGIVE             ;
052661 / 402004,,021103         SETZM       JBTJL(J)          ;
052662 / 332644,,033265         SKIPE  AC1, JBTFS(J)          ;; ANY SPARE FREE STORAGE?
052663 / 260140,,074163         PUSHJ    P,FSGIVE             ;
052664 / 402004,,033265         SETZM       JBTFS(J)          ;
052665 / 260140,,064010         PUSHJ    P,064010             ;;FLUSH ALL HIS TMPCOR FILES (IGNORING ALIAS)
052666 / 260140,,074473         PUSHJ    P,074473             ;;RELEASE THE PDL, IF ANY.
                       ;RETAIN USE OF PDL AS LONG AS WE'RE AT
                       ;UUO LEVEL OR CHANNEL 7
052667 / 554644,,032765          HLRZ  AC1,SAVSAI(J)          ;
052670 / 322640,,052672         JUMPE  AC1,052672             ;
052671 / 260140,,074163         PUSHJ    P,074163             ;;RETURN SWAP UUO AC SAVE BLK
052672 / 402004,,032765         SETZM      SAVSAI(J)          ;
052673 / 254000,,045503          JRST      045503             ;;CLEAR JOB STATUS WORD AND STOP JOB
                       ;ERROR IN COMMAND
                       CERR:
052674 / 254000,,042666          JRST      ERRMES             ;
                       JOBKB:
052675 / 402003,,777777         SETZM      777777(PDP)        ;;CLEAR NOJOBN SO COMRET WILL PRINT MESSAGE
052676 / 254000,,053440          JRST      053440             ;;"LOGIN PLEASE"
                       ; "START L" OR "START" - START AT LOC. L OR STARTING ADDRESS
                       ; "CSTART L" OR  "CSTART" - START AT LOC. L(TTY IN COMMAND MODE)
                       START:
                       ;SAME AS STARTC
                       STARTC:
052677 / 260140,,042615         PUSHJ    P,SKIPSJ             ;
052700 / 302400,,000053          CAIE  TEM,000053             ;
052701 / 306400,,000055          CAIN  TEM,000055             ;;REQUESTING INCREMENT?
052702 / 254000,,052722          JRST      052722             ;;YES, SCAN
052703 / 260140,,042752         PUSHJ    P,042752             ;;CONVERT POSSIBLE OCTAL NO ARG.
052704 / 334107,,000120         SKIPA TAC1, JOBSA(JDAT)       ;;NO START ADR. SPECIFIED RETURN
052705 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
052706 / 312107,,000120          CAME TAC1, JOBSA(JDAT)       ;;STARTUP ADDRESS TYPED?
052707 / 260140,,053531         PUSHJ    P,053531             ;;YES, CLEAR TEMP PRIVILEGES
052710 / 550040,,000002          HRRZ  TAC,000002             ;;GET STARTUP ADDR
052711 / 634100,,000002          TDZA TAC1,  TAC1             ;
                       STARTB:
052712 / 550047,,000120          HRRZ  TAC, JOBSA(JDAT)       ;
052713 / 326040,,052760         JUMPN  TAC,052760             ;;ADD INCREMENT AND START
052714 / 265040,,042666           JSP  TAC,ERRMES             ;
                       STARTA:
052722 / 302400,,000053          CAIE  TEM,000053             ;;+?
052723 / 254000,,052730          JRST      052730             ;;NO, MUST BE -
052724 / 260140,,042751         PUSHJ    P,042751             ;;YES, READ INC
151677 / 000000,,000001                                       ;
052725 / 334100,,151677         SKIPA TAC1,151677             ;;INVENT 1 FOR NO ARG
052726 / 254000,,042645          JRST      COMERA             ;
052727 / 254000,,052712          JRST      STARTB             ;
                       STARTE:
052730 / 260140,,042751         PUSHJ    P,042751             ;;GET - INC
151677 / 000000,,000001                                       ;
052731 / 334100,,151677         SKIPA TAC1,151677             ;;INVENT 1 FOR NO ARG
052732 / 254000,,042645          JRST      COMERA             ;
052733 / 210100,,000002          MOVN TAC1,000002             ;;NOW NEGATE
052734 / 254000,,052712          JRST      STARTB             ;
                       ;"REENTER" - REENTER USER PROGRAM
                       REENTE:
052735 / 260140,,042615         PUSHJ    P,SKIPSJ             ;
052736 / 306400,,000055          CAIN  TEM,000055             ;
052737 / 254000,,052753          JRST      052753             ;;GET - INC
052740 / 260140,,042752         PUSHJ    P, OCTIN             ;
052741 / 634100,,000002          TDZA TAC1,000002             ;;0 FOR NO ARG
052742 / 254000,,042645          JRST      042645             ;;ILL CHAR
                       REENTN:
052743 / 550047,,000124          HRRZ  TAC,JOBREN(JDAT)       ;
052744 / 326040,,052760         JUMPN  TAC,052760             ;;ADD INCREMENT AND START
052745 / 265040,,042666           JSP  TAC,ERRMES             ;
                       REENTM:
052753 / 260140,,042751         PUSHJ    P,OCTINS             ;
151677 / 000000,,000001                                       ;
052754 / 334100,,151677         SKIPA TAC1,151677             ;
052755 / 254000,,042645          JRST      COMERA             ;
052756 / 210100,,000002          MOVN TAC1,  TAC1             ;
052757 / 254000,,052743          JRST      REENTN             ;
                       STRTCK:
052760 / 322100,,052762         JUMPE TAC1,052762             ;;ANY INCREMENT?
052761 / 260140,,053531         PUSHJ    P,053531             ;;YES, CLEAR TEMP PRIVILEGES
052762 / 270100,,000001           ADD TAC1,000001             ;;ADD INCREMENT
052763 / 254000,,045753          JRST      045753             ;;NOW START IT UP
                       ; "HALT" OR "<CONTROL>C"
                       ;SCANNER ROUTINES DUMMY UP STOP WHEN CONTROL C TYPED IN
                       ;STOP MUST BE DELAYED IF THIS JOB IS SYSTEM TAPE USER
                       ;AND SYSTEM TAPE IS ACTIVE. OTHERWISE, THE JOB WILL NOT BE
                       ;STOPPED WHEN DONE USING THE SYSTEM TAPE.
                       STOP:
052764 / 322200,,052772         JUMPE ITEM,STOPB1             ;
052765 / 316200,,026107          CAMN ITEM,026107             ;;IS THIS SYSTEM TAPE USER?
052766 / 254000,,052777          JRST      052777             ;;YES
052767 / 260140,,056371         PUSHJ    P,056371             ;;CAN THE JOB STOP?
052770 / 254000,,053005          JRST      053005             ;;PUT BACK CONTROL C.
052771 / 260140,,045672         PUSHJ    P,045672             ;;STOP JOB
                       STOPB:
                       ;END REPEAT 0.
                       STOPB1:
052772 / 205040,,100000         MOVSI  TAC, JACCT             ;
052773 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;GOODBYE LOSER!
052774 / 265040,,042670           JSP  TAC,042670             ;;PRINT "↑C CRLF CRLF PERIOD"
052776 / 263140,,000000          POPJ    P,                   ;
                       STOPA:
052777 / 262140,,000002           POP    P,000002             ;;DOES THE JOB HAVE ACTIVE DEVICES?
053000 / 260140,,056333         PUSHJ    P,ACTCHK             ;
053001 / 260140,,045550         PUSHJ    P,045550             ;;NO, STOP THE JOB AND LET GO OF SYSTEM TAPE
053002 / 201100,,051371         MOVEI TAC1,COMRET             ;
053003 / 261140,,000002          PUSH    P,  TAC1             ;
053004 / 254000,,052772          JRST       STOPB             ;
                       MAKCNC:
053005 / 200100,,017712          MOVE TAC1,LINSAV             ;
053006 / 200102,,032347          MOVE TAC1,TTYTAB(TAC1)       ;
053007 / 201040,,000600         MOVEI  TAC,   600             ;
053010 / 137042,,000021           DPB  TAC,TITAKR(TAC1)       ;
053011 / 254000,,056356          JRST      056356             ;;DON'T REQUE, OR HE WON'T GET OUT OF THIS STATE!!!
                       ;CCONTINUE, CONTINUE, DDT
                       ; "CCONT" - CONTINUE EXECUTION(TTY REMAINS IN COMMAND MODE)
                       ; "CONT" - CONTINUE EXECUTION FROM WHERE LEFT OFF
                       CONTC:
                       ;SAME AS CONT
                       CONT:
053012 / 205100,,020000         MOVSI TAC1,  JERR             ;
053013 / 612104,,026114          TDNE TAC1,JBTSTS(J)          ;;IS JOB ERROR BIT SET?
053014 / 254000,,053020          JRST      053020             ;;YES, LOSE
053015 / 211100,,000014         MOVNI TAC1,000014             ;;NO, REQUE TO RUN QUEUE
053016 / 202104,,020574         MOVEM TAC1,JOBQUE(J)          ;
053017 / 254000,,046027          JRST       REQUE             ;
                       NOCONT:
053020 / 265040,,042666           JSP  TAC,042666             ;;YES, PRINT CANT CONTINUE
                       ; "DDT" - START EXECUTION AT DDT IN USER AREA
                       DDTGO:
053025 / 550107,,000074          HRRZ TAC1,JOBDDT(JDAT)       ;;DDT STARTING ADR. IN JOB DATA AREA
053026 / 326100,,053032         JUMPN TAC1,053032             ;;IS IT NON-ZERO? IF YES, STORE
                       ;OLD PC IN JOBOPC IN JOB DATA AREA
                       ;THEN START WITH PC IN USER MODE
053027 / 265040,,042666           JSP  TAC,042666             ;;ZERO PRINT "NO DDT"
                       ;KLUDGE TO MAKE SURE DDT MEMORY IS WRITEABLE
                       DDTG1:
053032 / 554040,,000007          HLRZ  TAC,  PROG             ;
053033 / 307101,,000000          CAIG TAC1,      (TAC)        ;
053034 / 254000,,045753          JRST      045753             ;;ADR IN LOWER - GO AHEAD
053035 / 200107,,000073          MOVE TAC1, JOBPC(PROG)       ;
053036 / 607100,,010000          TLNN TAC1,USRMOD             ;
053037 / 254000,,053043          JRST       DDTG2             ;
053040 / 205047,,000020         MOVSI  TAC,JOBDAC(PROG)       ;;MAKE SURE ACS ARE IN RIGHT PLACE
053041 / 541047,,000000          HRRI  TAC,      (PROG)       ;
053042 / 251047,,000017           BLT  TAC,    17(PROG)       ;
                       DDTG2:
053043 / 265100,,045737           JSP TAC1,045737             ;;GET TO UUO LEVEL
053044 / 265040,,045741           JSP  TAC,MONSTR             ;
053045 / 260140,,061771         PUSHJ    P,061771             ;;TRY TO UNPURIFY UPPER
053046 / 254000,,053055          JRST      DDTPUR             ;
                       DDTG3:
053047 / 550047,,000074          HRRZ  TAC,JOBDDT(PROG)       ;;WHERE TO GO
053050 / 500047,,000130           HLL  TAC,JOBOPC(PROG)       ;;WITH HIS OLD FLAGS
053051 / 661040,,010000           TLO  TAC,010000             ;;DEFINITELY IN USER MODE
053052 / 621040,,004037           TLZ  TAC,004037             ;;CLEAR IOT-USER AND @() BITS
053053 / 202044,,026620         MOVEM  TAC, UUOPC(J)          ;
053054 / 254000,,057144          JRST      057144             ;;"RETURN" FROM THIS "UUO"
                       DDTPUR:
053055 / 200213,,024061          MOVE    J,   JOB(PID)        ;;J WAS CLOBBERED BY UNPURE.
053056 / 260140,,137655         PUSHJ    P,TTYERP             ;
053057 / 260140,,042676         PUSHJ    P,INLMES             ;
053072 / 260140,,042713         PUSHJ    P,PRCRCC             ;
053073 / 260140,,137704         PUSHJ    P,137704             ;;NOW, FORCE TTY TO TYPE STUFF.
053074 / 260140,,045700         PUSHJ    P,045700             ;;MAKE US STOP SOON
053075 / 254000,,053047          JRST       DDTG3             ;
                       ;SETUWP, CLRUWP, ENABLE, DISABLE
                       SETWPS:
151656 / 777777,,000000                                       ;
053076 / 261140,,151656          PUSH    P,151656             ;;NO PRO BITS YET
053077 / 304000,,000000          CAIA                         ;
                       CLRWPS:
151675 / 000000,,000000                                       ;
053100 / 261140,,151675          PUSH    P,151675             ;;NO PRO BITS YET
053101 / 260140,,042752         PUSHJ    P, OCTIN             ;
053102 / 254000,,053110          JRST      053110             ;;NO SET PRO
153364 / 262143,,000000           POP    P,      (P)          ;
153365 / 254000,,042645          JRST      COMERA             ;
053103 / 254000,,153364          JRST      153364             ;
053104 / 303100,,000777         CAILE TAC1,000777             ;;LEGAL?
053105 / 254000,,053175          JRST      ILLPRO             ;
053106 / 660100,,400000           TRO TAC1,400000             ;
053107 / 542103,,000000          HRRM TAC1,      (P)          ;
                       NOSPRO:
053110 / 261140,,000004          PUSH    P,     J             ;
053111 / 135200,,037600           LDB    J, PSEGN             ;
053112 / 322200,,053155         JUMPE    J, NXSEG             ;
053113 / 260140,,042155         PUSHJ    P,ACCESS             ;
053114 / 254000,,053164          JRST       WPSEG             ;
053115 / 254000,,053164          JRST       WPSEG             ;
053116 / 550103,,777777          HRRZ TAC1,777777(P)          ;;GET PRO BITS
053117 / 606100,,400000          TRNN TAC1,400000             ;;IS HE REQUESTING BIT SETTINGS?
053120 / 254000,,053132          JRST      053132             ;;NO
053121 / 200103,,000000          MOVE TAC1,      (P)          ;;JOB #
053122 / 200102,,027420          MOVE TAC1,JBTPRV(TAC1)       ;
053123 / 607100,,000200          TLNN TAC1,000200             ;;DOES HE HAVE PRIV?
053124 / 606040,,000400          TRNN  TAC,000400             ;;NO, CHECK PROTECTION PROTECTION
053125 / 304000,,000000          CAIA                         ;
053126 / 254000,,053164          JRST      053164             ;;LOSE
053127 / 550103,,777777          HRRZ TAC1,777777(P)          ;;GET BITS AGAIN
053130 / 405100,,000377          ANDI TAC1,000377             ;;DON'T LET HIM SET UNPURIFIED BIT
153054 / 000004,,030542                                       ;
153054 / 331104,,030542 POINT 9,04030542,8                    ;
053131 / 137100,,153054           DPB TAC1,153054             ;
                       NOSPR1:
053132 / 205040,,000001         MOVSI  TAC,   JWP             ;
053133 / 335003,,777777        SKIPGE      777777(P)          ;
053134 / 437044,,026114          IORB  TAC,JBTSTS(J)          ;
053135 / 331003,,777777         SKIPL      777777(P)          ;
053136 / 413044,,026114        ANDCAB  TAC,JBTSTS(J)          ;
053137 / 262143,,777777           POP    P,777777(P)          ;;MOVE J BACK ONTO FLAG
053140 / 554104,,027120          HLRZ TAC1,JBTADR(J)          ;;GET SEGMENT PROT
053141 / 603040,,000001          TLNE  TAC,   JWP             ;
053142 / 661100,,400000           TLO TAC1,400000             ;;SET WP BIT IF JWP SET
053143 / 200040,,000004          MOVE  TAC,000004             ;;SAVE J HERE
053144 / 201200,,000077         MOVEI    J,000077             ;;PREPARE TO SCAN ALL JOBS
                       SETRLC:
053145 / 135640,,037600           LDB  AC1, PSEGN             ;
053146 / 316640,,000001          CAMN  AC1,000001             ;;USING THIS SEGMENT?
053147 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;;YES, IS JOBRL2 AVAILABLE?
053150 / 304000,,000000          CAIA                         ;
053151 / 202107,,000115         MOVEM TAC1,JOBRL2(PROG)       ;;STORE NEW JOBRL2
053152 / 367200,,053145          SOJG    J,SETRLC             ;
053153 / 262140,,000004           POP    P,     J             ;
053154 / 263140,,000000          POPJ    P,                   ;
                       NXSEG:
053155 / 262140,,000004           POP    P,     J             ;
053156 / 262143,,000000           POP    P,      (P)          ;
053157 / 265040,,042666           JSP  TAC,ERRMES             ;
                       WPSEG:
053164 / 262140,,000004           POP    P,     J             ;
053165 / 262143,,000000           POP    P,      (P)          ;
053166 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ILLPRO:
053175 / 262143,,000000           POP    P,      (P)          ;
053176 / 265040,,042666           JSP  TAC,ERRMES             ;
                       DISABL:
053205 / 260140,,053262         PUSHJ    P,053262             ;;GET BIT INTO TAC
053206 / 254000,,053221          JRST      053221             ;;NO SUCH PRIVILEGE
053207 / 525040,,777776         HRLOI  TAC,777776             ;;CR TYPED, CLEAR ALL BITS (EXCEPT TNTPRV)
053210 / 255000,,000000          JFCL                         ;
053211 / 412044,,027420        ANDCAM  TAC,JBTPRV(J)          ;
053212 / 263140,,000000          POPJ    P,                   ;
                       ENABLE:
053213 / 260140,,053262         PUSHJ    P,PRVSET             ;
053214 / 254000,,053221          JRST       NXPRV             ;
053215 / 334044,,027520         SKIPA  TAC,JB2PRV(J)          ;;CR, COPY PRIVILEGES FROM PASSIVE
053216 / 254000,,053227          JRST      053227             ;;NOT LEGAL FOR THIS USER
053217 / 436044,,027420          IORM  TAC,JBTPRV(J)          ;
053220 / 263140,,000000          POPJ    P,                   ;
                       NXPRV:
053221 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ILLPRV:
053227 / 265040,,042666           JSP  TAC,ERRMES             ;
                       LFTTAB:
                       ;	LEFT HALF
053240 / 606251,,400000                                       ;;PRIVILEGE PRIVILEGE
053241 / 444167,,200000                                       ;;DISK ABSOLUTE WRITE 
                       ;  NEXT THREE MUST BE 100000,40000, AND 20000 UNLESS DSKSER IS CHANGED!!!
053242 / 606257,,100000                                       ;;FILE SYSTEM RENAME PRIV
053243 / 624541,,040000                                       ;;FILE SYSTEM READ PRIV
053244 / 676264,,020000                                       ;;FILE SYSTEM WRITE PRIV
053245 / 654460,,010000                                       ;;READ LAST BLOCK OF UDP
053246 / 656047,,004000                                       ;;SELECT OTHER DPYS WITH UPGIOT
053247 / 554563,,002000                                       ;;CAN DO TTYMES ARBITRARILY
053250 / 535154,,001000                                       ;;CAN USE CONSOLE KILL COMMAND
053251 / 444566,,000400                                       ;;CAN USE DET/ATT DEVICE COMMAND
053252 / 634547,,000200                                       ;;SEGMENT ACCESS & SETPRO OK
053253 / 636354,,000100                                       ;;CAN SET SERVICE LEVEL RESERVATION TABLE
053254 / 414367,,000040                                       ;;CAN DO ABS MODE WRITE USING SETPR2
053255 / 515646,,000020                                       ;;CAN READ AND WRITE SPECIAL FILE INFO
053256 / 645453,,000010                                       ;;CAN TALK TO ANY CONSOLE
053257 / 464267,,000004                                       ;;ALLOWS ABSOLUTE FBWRITE.
053260 / 704760,,000002                                       ;;THIS IS THE XGP FONT COMPILER
053261 / 546560,,000001                                       ;;LOCAL USER PRIVILEGE
                       RHTTAB:
                       ;	LEFT HALF
                       ;  NEXT THREE MUST BE 100000,40000, AND 20000 UNLESS DSKSER IS CHANGED!!!
                       PRVSET:
053262 / 260140,,042552         PUSHJ    P,CTEXT1             ;
053263 / 322100,,037401         JUMPE TAC1,037401             ;;CR OR DELIM TYPED
053264 / 205040,,777756         MOVSI  TAC,777756             ;;LENGTH OF LEFT TABLE
                       FNDLFT:
053265 / 510641,,053240          HLLZ  AC1,LFTTAB(TAC)        ;
053266 / 316640,,000002          CAMN  AC1,  TAC1             ;
053267 / 254000,,053272          JRST       ISLFT             ;
053270 / 253040,,053265         AOBJN  TAC,FNDLFT             ;
                       ;LFTLEN
                       ;FNDRHT
053271 / 263140,,000000          POPJ    P,                   ;;NO SUCH PRIVILEGE
                       ISLFT:
053272 / 514041,,053240          HRLZ  TAC,LFTTAB(TAC)        ;;LEFT HALF BIT
053273 / 304000,,000000          CAIA                         ;
                       ISRHT:
053274 / 550041,,053262          HRRZ  TAC,RHTTAB(TAC)        ;;RIGHT HALF BIT
053275 / 350003,,000000           AOS            (P)          ;
053276 / 350003,,000000           AOS            (P)          ;;AT LEAST 2 SKIPS
152032 / 000102,,000000                                       ;
053277 / 612040,,152032          TDNE  TAC,152032             ;;IS HE REQUESTING A RESTRICTED PRIVILEGE?
053300 / 263140,,000000          POPJ    P,                   ;;YES, FLUSH
053301 / 200644,,027520          MOVE  AC1,JB2PRV(J)          ;;GET PASSIVE PRIVILEGES
053302 / 607640,,400000          TLNN  AC1,400000             ;;IF HE HAS PRIV PRIV, ALL IS OK
053303 / 612040,,000015          TDNE  TAC,000015             ;;OR IF THE PRIV HE WANTS IS IN PASSIVE TABLE
053304 / 350003,,000000           AOS            (P)          ;;SKIP IF PRIV OK
053305 / 263140,,000000          POPJ    P,                   ;
                       ; "CORE  #" - ASSIGNS #*1024 WORDS OF CORE TO JOB
                       ;   "CORE" WITH NO ARG. WILL PRINT NO OF FREE BLOCKS LEFT
                       ;	WITHOUT AFFECTING CURRENT ASSIGNMENT OF CORE
                       CORE:
053306 / 260140,,042747         PUSHJ    P,042747             ;;GET NO. OF 1K BLOCKS
053307 / 254000,,053362          JRST      053362             ;;NO ARG. SPECIFIED, JUST TYPE FREE BLOCK LEFT
053310 / 254000,,042645          JRST      042645             ;;ILLEGAL DECIMAL CHARACTER RETURN
053311 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;;GET JOB STATUS WORD
053312 / 607040,,010000          TLNN  TAC,010000             ;;IS JOB LOGGED IN?
053313 / 254000,,053440          JRST      053440             ;;NO, TYPE OUT MESSAGE
053314 / 260140,,053531         PUSHJ    P,053531             ;;CLEAR TEMPORARY PRIVILEGES
053315 / 200640,,022204          MOVE  AC1,022204             ;;GET THE SWAPLIMIT
053316 / 242640,,777766           LSH  AC1,777766             ;;CONVERT SWAPLIMIT TO K
053317 / 313100,,000015         CAMLE TAC1,000015             ;;TOO BIG?
053320 / 254000,,053354          JRST      053354             ;;YES. TELL HIM SO.
053321 / 607040,,002000          TLNN  TAC,002000             ;;IS HE SWAPPED OUT?
053322 / 254000,,053330          JRST      053330             ;;NO. CONTINUE
053323 / 326340,,056356         JUMPN PROG,056356             ;;DELAY UNTIL HE IS IN CORE
053324 / 336040,,000002         SKIPN  TAC,000002             ;;DEC 3.16
053325 / 254000,,052306          JRST      052306             ;;DEC 3.16
053326 / 370003,,000000           SOS            (PDP)        ;;DEC 3.16
053327 / 254000,,072062          JRST      072062             ;;DEC 3.16
                       COR3:
053330 / 322100,,052070         JUMPE TAC1,052070             ;;RELEASE DEVICES IF ASKING FOR 0 CORE
053331 / 200040,,000002          MOVE  TAC,000002             ;
053332 / 242040,,000012           LSH  TAC,000012             ;;CONVERT 1K BLOCKS TO WORDS
053333 / 275040,,000001          SUBI  TAC,000001             ;;HIGHEST REL. LOC.
053334 / 261144,,027120          PUSH    P,JBTADR(J)          ;;SAVE OLD CORE ASSIGNMENT
053335 / 135100,,037600           LDB TAC1,037600             ;;SEE IF HE HAS AN UPPER
053336 / 332000,,000002         SKIPE        TAC1             ;
053337 / 260140,,071365         PUSHJ    P,071365             ;;YES, GET ITS SIZE INTO TAC1
053340 / 270100,,000001           ADD TAC1,000001             ;;ADD LOWER SIZE + UPPER SIZE
053341 / 313100,,022200         CAMLE TAC1,022200             ;;WILL IT FIT?
053342 / 254000,,053353          JRST      053353             ;;NO
053343 / 260140,,072047         PUSHJ    P,072047             ;;TRY TO ASSIGN CORE
053344 / 254000,,053353          JRST      053353             ;;CAN'T DO IT
053345 / 262140,,000015           POP    P,000015             ;;GET BACK OLD CORE ASSIGNMENT
053346 / 332000,,000015         SKIPE      000015             ;;IF NO CORE ASSIGNED PREVIOUSLY
                       CORX1:
053347 / 263140,,056357          POPJ    P,056357             ;;DEC 3.16 
053350 / 260140,,072613         PUSHJ    P,CLRJOB             ;
053351 / 402007,,000120         SETZM       JOBSA(PROG)       ;
053352 / 254000,,053347          JRST       CORX1             ;
                       CORFX:
053353 / 262143,,000000           POP    P,      (P)          ;;POP OFF OLD CORE ASSIGNMENT
                       CORFX1:
053354 / 200303,,777776          MOVE  DDB,777776(P)          ;;GET TTY DDB BACK
053355 / 265040,,042666           JSP  TAC,ERRMES             ;
                       COR4:
053362 / 205040,,000400         MOVSI  TAC,000400             ;;DON'T INITIALIZE A JOB
053363 / 436043,,777777          IORM  TAC,777777(PDP)        ;
053364 / 200303,,777776          MOVE DEVDAT,777776(P)          ;;RESTORE TTY DDB
053365 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;;GET JOB STATUS WORD
053366 / 607040,,010000          TLNN  TAC,010000             ;;IS JOB LOGGED IN?
053367 / 254000,,053416          JRST      053416             ;;NOT LOGGED IN. HE HAS NO CORE.
053370 / 201104,,000000         MOVEI TAC1,      (J)          ;;GET JOB NUMBER
053371 / 260140,,071365         PUSHJ    P,071365             ;;GET CORE SIZE IN WORDS
053372 / 242100,,777766           LSH TAC1,777766             ;;DIVIDE TO GET K
053373 / 201042,,000000         MOVEI  TAC,      (TAC1)       ;
053374 / 260140,,043720         PUSHJ    P,RADX10             ;
053375 / 260140,,042676         PUSHJ    P,INLMES             ;
053403 / 135100,,037600           LDB TAC1, PSEGN             ;
053404 / 322100,,053416         JUMPE TAC1,053416             ;
053405 / 260140,,071365         PUSHJ    P,071365             ;;GET SIZE OF UPPER IN WORDS IN TAC1
053406 / 242100,,777766           LSH TAC1,777766             ;;CONVERT TO K
053407 / 201042,,000000         MOVEI  TAC,      (TAC1)       ;
053410 / 260140,,043720         PUSHJ    P,RADX10             ;
053411 / 260140,,042676         PUSHJ    P,INLMES             ;
                       COR2_1:
053416 / 200040,,022200          MOVE  TAC,022200             ;;LOAD AVAIL CORE ;REG
053417 / 313040,,022204         CAMLE  TAC,022204             ;;BIGGER THAN SWAPLIMIT?
053420 / 200040,,022204          MOVE  TAC,022204             ;;YES, PRINT IT INSTEAD
053421 / 242040,,777766           LSH  TAC,777766             ;;CONVERT TO K
053422 / 260140,,043720         PUSHJ    P,043720             ;;WRITE
053423 / 260140,,042676         PUSHJ    P,INLMES             ;
053426 / 200040,,022200          MOVE  TAC,022200             ;;GET MAX AGAIN
053427 / 317040,,022204          CAMG  TAC,022204             ;;BIGGER THAN MAX?
053430 / 263140,,000000          POPJ    P,                   ;
053431 / 242040,,777766           LSH  TAC,777766             ;
053432 / 260140,,043720         PUSHJ    P,043720             ;;YES, PRINT IT ALSO
053433 / 260140,,042676         PUSHJ    P,INLMES             ;
053437 / 263140,,000000          POPJ    P,                   ;
                       LOGPLS:
053440 / 265040,,042666           JSP  TAC,ERRMES             ;
                       PRJOB:
053444 / 260140,,042676         PUSHJ    P,INLMES             ;
053446 / 200040,,000004          MOVE  TAC,     J             ;
053447 / 260140,,043720         PUSHJ    P,RADX10             ;
053450 / 260140,,042704         PUSHJ    P, PRSPC             ;
                       PRCONF:
053451 / 201040,,037565         MOVEI  TAC,CONFIG             ;
053452 / 254000,,042670          JRST      CONMES             ;
                       ;HELLO 				;JS, REST OF PAGE
                       HELLO:
053453 / 260140,,053451         PUSHJ    P,053451             ;;TELL HIM WHAT FLAVOR SYSTEM WE ARE!
053454 / 254000,,042667          JRST      042667             ;;TYPE CRLF
                       ;AUTOMATIC LOGIN AFTER DISK REFRESH OR WHEN REFLAG SET	;DEC 3.16, REST OF PAGE
                       LOGREF:
053455 / 202044,,027720         MOVEM  TAC,PRJPRG(J)          ;;PJ,PG NOS IN REFLAG
053456 / 205040,,010000         MOVSI  TAC,  JLOG             ;
053457 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;LOG HIM IN.
053460 / 205040,,400001         MOVSI  TAC,400001             ;;SET JOB PRIVILEGES
053461 / 202044,,027420         MOVEM  TAC,JBTPRV(J)          ;
053462 / 202044,,027520         MOVEM  TAC,JB2PRV(J)          ;
053463 / 402003,,777777         SETZM      777777(P)          ;;CLEAR ALL FLAGS FOR COMRET.
053464 / 402000,,000566         SETZM      000566             ;;ONLY ONCE.
053465 / 263140,,000000          POPJ    P,                   ;
                       ;"HELP" -HELP COMMAND
                       ;DEC 3.16
                       HELP1:
053466 / 200040,,037620          MOVE  TAC,HELPPP             ;
053467 / 603640,,010000          TLNE  AC1,  JLOG             ;
053470 / 263140,,000000          POPJ    P,                   ;
053471 / 260140,,053514         PUSHJ    P,ALOGIN             ;
053472 / 205100,,000001         MOVSI TAC1,000001             ;;GIVE 100,100 THE LOCAL USER PRIV
053473 / 436104,,027420          IORM TAC1,JBTPRV(J)          ;;BECAUSE HE CAN'T HARM US
053474 / 254000,,060515          JRST      060515             ;;AND SET-UP LOGIN STUFF
                       HELP:
053475 / 260140,,053466         PUSHJ  PDP, HELP1             ;
151436 / 504554,,600000                                       ;
053476 / 261140,,151436          PUSH    P,151436             ;
053477 / 254000,,053660          JRST       ARCOM             ;
                       WHECOM:
053500 / 260140,,053466         PUSHJ    P, HELP1             ;
151564 / 675045,,624500                                       ;
053501 / 261140,,151564          PUSH    P,151564             ;
053502 / 254000,,053660          JRST       ARCOM             ;
                       WHOCOM:
053503 / 260140,,053466         PUSHJ    P, HELP1             ;
151565 / 675057,,000000                                       ;
053504 / 261140,,151565          PUSH    P,151565             ;
053505 / 254000,,053660          JRST       ARCOM             ;
                       FIXIML:
053506 / 260140,,053466         PUSHJ    P, HELP1             ;
151423 / 465170,,515554                                       ;
053507 / 261140,,151423          PUSH    P,151423             ;
053510 / 254000,,053660          JRST       ARCOM             ;
                       FNDCOM:
053511 / 260140,,053466         PUSHJ    P, HELP1             ;
151421 / 465156,,440000                                       ;
053512 / 261140,,151421          PUSH    P,151421             ;
053513 / 254000,,053660          JRST       ARCOM             ;
                       ;ALOGIN, SETTPV, CLRTPV
                       ALOGIN:
053514 / 202044,,027720         MOVEM  TAC,PRJPRG(J)          ;
053515 / 402004,,030642         SETZM      JBTUFD(J)          ;
053516 / 402004,,030020         SETZM      DSKPPN(J)          ;;INTIALIZE DISK ALIAS PPN
053517 / 402004,,030242         SETZM      JBTKCJ(J)          ;
053520 / 205040,,010000         MOVSI  TAC,  JLOG             ;
053521 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
                       ALOGN1:
053522 / 260140,,137231         PUSHJ    P,137231             ;;MAKE SURE TTY IS ATTACHED IN CASE
                       ;THIS COMMAND MUST BE DELAYED
                       ;BECAUSE NO CORE YET.
053523 / 255000,,000000          JFCL                         ;
053524 / 263140,,000000          POPJ    P,                   ;
                       SETTPV:
053525 / 420044,,027420         ANDCM  TAC,JBTPRV(J)          ;;DON'T NEED ANY TEMPORARY PRIVS HE REALLY HAS
053526 / 436044,,027420          IORM  TAC,JBTPRV(J)          ;;GIVE HIM THE TEMP PRIVS
053527 / 436044,,027620          IORM  TAC,JBTTPV(J)          ;;REMEMBER TEMP PRIVILEGES WE ARE GIVING HIM
053530 / 263140,,000000          POPJ    P,                   ;
                       CLRTPV:
053531 / 250044,,027620          EXCH  TAC,JBTTPV(J)          ;;SAVE TAC, PICK UP TEMP PRIVILEGES
053532 / 412044,,027420        ANDCAM  TAC,JBTPRV(J)          ;;TURN OFF TEMP PRIVS
053533 / 201040,,000000         MOVEI  TAC,                   ;
053534 / 250044,,027620          EXCH  TAC,JBTTPV(J)          ;;RESTORE TAC, NO TEMP PRIVILEGES NOW
053535 / 263140,,000000          POPJ    P,                   ;
                       ;"LOGIN" - LOGIN COMMAND
                       LOGDET:
053536 / 265040,,042666           JSP  TAC,ERRMES             ;
                       CLOGIN:
053544 / 603640,,010000          TLNE  AC1,010000             ;;IS HE LOGGED IN?
053545 / 254000,,053536          JRST      053536             ;;YES. FORCE LOGOUT FIRST
053546 / 332040,,000566         SKIPE  TAC,000566             ;;DEC 3.16
053547 / 254000,,053455          JRST      053455             ;;DEC 3.16
053550 / 254000,,053552          JRST      053552             ;;(TAC HAS A ZERO)
                       CXLOGI:
053551 / 201040,,000001         MOVEI  TAC,     1             ;
053552 / 542044,,032765          HRRM  TAC,SAVSAI(J)          ;;SET STARTING OFFSET.
053553 / 200040,,037616          MOVE  TAC,037616             ;;SET PRJPRG TO DMPPPN
053554 / 260140,,053514         PUSHJ    P,053514             ;;AUTOMATIC LOGIN
053555 / 205040,,100000         MOVSI  TAC,100000             ;;FLAG ACCOUNTING PROGRAM RUNNING
053556 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;
053557 / 260140,,051443         PUSHJ    P,SKPBRK             ;
053560 / 200040,,151464          MOVE  TAC,151464             ;;LOGIN FILE NAME.
053561 / 202044,,030142         MOVEM  TAC,JOBNAM(J)          ;;STORE FILE NAME
053562 / 260140,,072454         PUSHJ    P,NAMSTT             ;
053563 / 205100,,446353         MOVSI TAC1,446353             ;;READ FROM DSK, DMPPPN AREA.
053564 / 254000,,053712          JRST      RUNCO2             ;
                       ;ONE OF THE RPG COMMANDS -- COMPILE, DEBUG, ECT
                       RPGCOM:
053565 / 261140,,151552          PUSH  PDP,151552             ;
053566 / 254000,,053660          JRST       ARCOM             ;
                       ETCOM:
151420 / 450000,,000000                                       ;
053567 / 261140,,151420          PUSH    P,151420             ;
053570 / 254000,,053660          JRST       ARCOM             ;
                       DSCCOM:
053571 / 261140,,151414          PUSH  PDP,151414             ;
053572 / 254000,,053660          JRST       ARCOM             ;
                       CPYCOM:
053573 / 261140,,151361          PUSH  PDP,151361             ;
053574 / 254000,,053660          JRST       ARCOM             ;
                       MAICOM:
053575 / 261140,,151526          PUSH    P,151526             ;
053576 / 254000,,053660          JRST       ARCOM             ;
                       OBLCOM:
151424 / 465762,,474564                                       ;
053577 / 261140,,151424          PUSH    P,151424             ;
053600 / 254000,,053660          JRST       ARCOM             ;
                       RCVCOM:
053601 / 261140,,151551          PUSH    P,151551             ;
053602 / 260140,,053466         PUSHJ    P, HELP1             ;
053603 / 254000,,053660          JRST       ARCOM             ;
                       NSCOM:
053604 / 261140,,151534          PUSH    P,151534             ;
                       NSCOM1:
053605 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;;GET USER'S REAL PRIVS
053606 / 607040,,000001          TLNN  TAC,000001             ;;IS HE LOCAL?
053607 / 254000,,053614          JRST      053614             ;;NOPE, FLUSH HIM
053610 / 205040,,040000         MOVSI  TAC,REAPRV             ;
053611 / 260140,,053525         PUSHJ    P,053525             ;;SET TEMPORARY PRIVILEGES
053612 / 261140,,152017          PUSH    P,152017             ;
053613 / 254000,,053674          JRST      ARPCOM             ;
                       NSCOM2:
053614 / 262140,,000001           POP    P,   TAC             ;
053615 / 254000,,042646          JRST      042646             ;;PRETEND IGNORANCE
                       UDPCOM:
053616 / 261140,,151563          PUSH    P,151563             ;
053617 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;;GET USER'S REAL PRIVS
053620 / 607040,,000001          TLNN  TAC,000001             ;;IS HE LOCAL?
053621 / 254000,,053614          JRST      053614             ;;NOPE, FLUSH HIM
053622 / 205040,,320020         MOVSI  TAC,320020             ;;BOY IS THIS A HAIRY PROGRAM
053623 / 260140,,053525         PUSHJ    P,053525             ;;SET TEMPORARY PRIVILEGES
053624 / 261140,,152017          PUSH    P,152017             ;
053625 / 254000,,053674          JRST      ARPCOM             ;
                       HOTCOM:
053626 / 261140,,151437          PUSH    P,151437             ;
053627 / 254000,,053605          JRST      NSCOM1             ;
                       SPLCOM:
053630 / 260140,,053466         PUSHJ    P, HELP1             ;
053631 / 261140,,151555          PUSH    P,151555             ;
053632 / 254000,,053660          JRST       ARCOM             ;
                       FINGER:
053633 / 260140,,053466         PUSHJ    P, HELP1             ;
053634 / 261140,,151422          PUSH    P,151422             ;
053635 / 254000,,053660          JRST       ARCOM             ;
                       LSPCOM:
053636 / 261140,,151463          PUSH    P,151463             ;
053637 / 254000,,053660          JRST       ARCOM             ;
                       DOCOM:
053640 / 261140,,151416          PUSH    P,151416             ;
053641 / 254000,,053660          JRST       ARCOM             ;
                       ZERCOM:
053642 / 261140,,151602          PUSH    P,151602             ;
053643 / 254000,,053660          JRST       ARCOM             ;
                       XERCOM:
053644 / 261140,,151570          PUSH    P,151570             ;
053645 / 254000,,053660          JRST       ARCOM             ;
                       TSTCOM:
053646 / 261140,,151560          PUSH    P,151560             ;
053647 / 254000,,053660          JRST       ARCOM             ;
                       RSLCOM:
053650 / 261140,,151553          PUSH    P,151553             ;
053651 / 254000,,053660          JRST       ARCOM             ;
                       TNCOM:
053652 / 261140,,151557          PUSH    P,151557             ;
053653 / 254000,,053660          JRST       ARCOM             ;
                       FTPCOM:
053654 / 261140,,151425          PUSH    P,151425             ;
053655 / 254000,,053660          JRST       ARCOM             ;
                       DILCOM:
053656 / 261140,,151415          PUSH    P,151415             ;
053657 / 254000,,053660          JRST       ARCOM             ;
                       ;R, RUN, SAVE, SSAVE, GET COMMANDS
                       ;ARCOM:  CALL WITH JOBNAM STACKED.  RUN IT FROM SYS:
                       ;AXCOM:	 SAME AS ARCOM, EXCEPT JOB STARTS AT C(JOBSA)+1
                       ARCOM:
053660 / 634040,,000001          TDZA  TAC,000001             ;;AUTOMATIC RUN COMMAND
                       AXCOM:
053661 / 201040,,000001         MOVEI  TAC,000001             ;;START WITH OFFSET=1
053662 / 260140,,051443         PUSHJ    P,SKPBRK             ;
                       ARCOM1:
053663 / 542044,,032765          HRRM  TAC,SAVSAI(J)          ;;SET STARTUP OFFSET
053664 / 262144,,030142           POP    P,JOBNAM(J)          ;;STORE FILE NAME
053665 / 260140,,072454         PUSHJ    P,NAMSTT             ;
053666 / 205100,,637163         MOVSI TAC1,637163             ;;READ FROM SYSTEM DEVICE
053667 / 254000,,053712          JRST      RUNCO2             ;
                       ;START UP WITH DOUBLE-SKIP C(JOBSA)+2, TTY POINTS TO THE REST OF LINE
                       AXXCOM:
053670 / 205040,,004000         MOVSI  TAC,004000             ;;DOUBLE-SKIP ENTRY
053671 / 436043,,777776          IORM  TAC,777776(P)          ;;TELL COMRET NOT TO CALL SKPBRK (JOBNAME STILL ON STACK)
053672 / 201040,,000002         MOVEI  TAC,000002             ;;SET FOR DOUBLE-SKIP ENTRY
053673 / 254000,,053663          JRST      ARCOM1             ;
                       ;ARPCOM: CALL WITH JOBNAM STACKED, AND PPN STACKED TOO!
                       ARPCOM:
053674 / 513004,,032765         HLLZS      SAVSAI(J)          ;;ZERO STARTING OFFSET
053675 / 262144,,030442           POP    P,JOBPPN(J)          ;;SETUP SGSET KLUDGE
053676 / 260140,,051443         PUSHJ    P,051443             ;;SKIP TO END OF LINE
053677 / 262144,,030142           POP    P,JOBNAM(J)          ;
053700 / 260140,,072454         PUSHJ    P,NAMSTT             ;
053701 / 205100,,446353         MOVSI TAC1,446353             ;;READ FROM DSK
053702 / 254000,,053713          JRST      RUNCO4             ;
                       ;"R CUSPNAME CORE" - DOES "RUN SYS:CUSPNAME"
                       RCOM:
151675 / 000000,,000000                                       ;
053703 / 261140,,151675          PUSH    P,151675             ;;ZERO OUT PROGRAM NAME
053704 / 201040,,000000         MOVEI  TAC,                   ;
053705 / 254000,,053663          JRST      ARCOM1             ;
                       ;"RUN DEVICE:FILE[PROJ.,PROG.] (CORE)"
                       ;DOES A CORE,GET,START ALL IN ONE
                       ;IF CORE ARG IS MISSING, SIZE IN DIRECTORY IS USED
                       RUNCOM:
053706 / 260140,,042552         PUSHJ    P,042552             ;;GET DEVICE NAME FROM COMMAND STRING
053707 / 402004,,030142         SETZM      JOBNAM(J)          ;;CLEAR OUT OLD JOB NAME
053710 / 260140,,072454         PUSHJ    P,NAMSTT             ;
053711 / 513004,,032765         HLLZS      SAVSAI(J)          ;;CLEAR STARTUP INCREMENT
                       RUNCO2:
053712 / 402004,,030442         SETZM      JOBPPN(J)          ;;DISABLE JOBPPN KLUGE FOR SGSET
                       RUNCO4:
053713 / 201000,,041424         MOVEI      RUNJOB             ;
                       RUNCM:
053714 / 261140,,000000          PUSH    P,                   ;;SAVE DISPATCH
053715 / 326340,,053725         JUMPN PROG,053725             ;;NO. DOES JOB HAVE CORE?
053716 / 261140,,000002          PUSH    P,000002             ;;SAVE DEVICE NAME
053717 / 201040,,200000         MOVEI  TAC,200000             ;;CLEAR TTY "ASSIGNED BY PROGRAM" BIT
053720 / 412046,,000004        ANDCAM  TAC,DEVMOD(DDB)        ;
053721 / 201040,,000140         MOVEI  TAC,000140             ;;REQUEST JUST ENOUGH CORE FOR A JOB DATA AREA
053722 / 260140,,072047         PUSHJ    P,072047             ;;IF OLD CORE(DEVICE ASSIGNMENTS RETAINED
053723 / 255000,,000000          JFCL                         ;
053724 / 262140,,000002           POP    P,000002             ;;RESTORE DEVICE NAME
                       RUNCO1:
053725 / 262140,,000000           POP    P,                   ;;ADR. OF MONITOR JOB
053726 / 322340,,056360         JUMPE PROG,056360             ;;DELAY IF ON DISK 
053727 / 202607,,000017         MOVEM  UUO,COMWRD(PROG)       ;;PUT COMMAND IN AC FOR PROG TO SEE
053730 / 202407,,000016         MOVEM  TEM,CHRWRD(PROG)       ;;ALSO DELIMITER CHAR
053731 / 336704,,030442         SKIPN  AC2,JOBPPN(J)          ;;SPECIAL PPN HACK?
053732 / 254000,,041234          JRST      041234             ;;NO
053733 / 254000,,041235          JRST      041235             ;;YES. SPECIAL ENTRY
                       ;"GET DEVICE:FILE-NAME[PROJ.,PROG.] CORE" - SETS UP JOB AREA FROM RETREIVABLE
                       ;DEVICE AND ASSIGNS CORE.
                       GET:
053734 / 201000,,041355         MOVEI      041355             ;;SETUP TO RUN GETJOB
053735 / 260140,,042552         PUSHJ    P,042552             ;;GET DEVICE NAME
053736 / 402004,,030142         SETZM      JOBNAM(J)          ;;CLEAR JOB NAME
053737 / 402004,,030442         SETZM      JOBPPN(J)          ;;DISABLE JOBPPN KLUGE FOR SGSET
053740 / 260140,,072454         PUSHJ    P,NAMSTT             ;
053741 / 254000,,053714          JRST       RUNCM             ;
                       ;"SAVE FILE-NAME[PROJ.,PROG.] CORE" - SAVES JOB AREA ON RETRIEVABLE DEVICE
                       ;ONLY A SAVE OR A GET IN PROGRESS FOR EACH JOB
                       ;NO ATTEMPT IS MADE TO SAVE DEVICE ASSIGNMENTS, AC'S, OR PC
                       SSAVE:
053742 / 664000,,041306          TROA      041306             ;;SAVE UPPER ALSO (IOS CLEARED BEFORE DISPATCH)
                       SAVE:
053743 / 201000,,041312         MOVEI      041312             ;;SETUP TO RUN SAVJOB 
053744 / 260140,,042552         PUSHJ    P,042552             ;;GET THE FIRST COMMAND ARGUMENT (DEV OR FILENAME)
053745 / 402004,,030142         SETZM      JOBNAM(J)          ;;CLEAR JOB NAME.
053746 / 260140,,072454         PUSHJ    P,NAMSTT             ;
053747 / 254000,,041234          JRST      041234             ;;SCAN THE REST OF THE ARGUMENTS
                       ; "ASSIGN DEV:NAME" - ASSIGN DEVICE TO JOB AND GIVE IT LOGICAL NAME
                       ASSIGN:
053750 / 201640,,000000         MOVEI  AC1,                   ;;START WITH NO ATTRIBUTES
                       ASSPP9:
053751 / 260140,,042552         PUSHJ    P,042552             ;;GET FIRST ARGUMENT
053752 / 322100,,042706         JUMPE TAC1,042706             ;;NO ARGUMENT TYPED IF 0
053753 / 201700,,000000         MOVEI  AC2,                   ;
053754 / 205040,,770000         MOVSI  TAC,770000             ;
                       ASSPP1:
053755 / 616040,,000002          TDNN  TAC,  TAC1             ;
053756 / 254000,,053762          JRST      ASSPP2             ;
053757 / 436040,,000016          IORM  TAC,000016             ;;MAKE MASK FOR NUMBER OF CHARACTERS TYPED
053760 / 242040,,777772           LSH  TAC,777772             ;
053761 / 326040,,053755         JUMPN  TAC,ASSPP1             ;
                       ASSPP2:
053762 / 205040,,777775         MOVSI  TAC,777775             ;
                       ASSPP3:
053763 / 316101,,054002          CAMN TAC1,ASATTT(TAC)        ;
053764 / 254000,,053775          JRST      053775             ;;EXACT MATCH.  GET BITS AND LOOP
053765 / 200741,,054002          MOVE  AC3,ASATTT(TAC)        ;;GET NAME OF ATTRIBUTE
053766 / 404740,,000016           AND  AC3,000016             ;;AND WITH MASK
053767 / 316100,,000017          CAMN TAC1,   AC3             ;
053770 / 667641,,400000          TLON  AC1,400000(TAC)        ;
053771 / 253040,,053763         AOBJN  TAC,ASSPP3             ;
053772 / 321040,,054013         JUMPL  TAC,054013             ;;AOBJN DIDN'T FALL THROUGH (TOO MANY MATCHES)
053773 / 325640,,054013        JUMPGE  AC1,054013             ;;IF SIGN BIT OFF THERE WERE NO MATCHES
152663 / 000000,,000015                                       ;
152663 / 222100,,000015 POINT 17,00000015,17                  ;
053774 / 135040,,152663           LDB  TAC,152663             ;;GET INDEX OF MATCHING ENTRY
                       ASSPP0:
053775 / 612641,,054010          TDNE  AC1,ASATBB(TAC)        ;;CHECK FOR EXCLUDED BITS
053776 / 254000,,042646          JRST      042646             ;;NAUGHTY NAUGHTY
053777 / 434641,,054005           IOR  AC1,ASATTB(TAC)        ;;OK, TURN ON NEW BIT
054000 / 201655,,000000         MOVEI  AC1,      (AC1)        ;;FLUSH CRUFT IN LH
054001 / 254000,,053751          JRST      ASSPP9             ;
                       ASATTT:
054002 / 606542,,545143                                       ;
054003 / 606251,,664164                                       ;
054004 / 575444,,000000                                       ;
                       ASATTB:
054005 / 000000,,000001                                       ;
054006 / 000000,,000002                                       ;
054007 / 000000,,000004                                       ;
                       ASATBB:
054010 / 000000,,000006                                       ;;TABLE OF BITS NOT ALLOWED WITH NEW ONE
054011 / 000000,,000005                                       ;
054012 / 000000,,000003                                       ;
                       ASSPPX:
054013 / 200700,,000002          MOVE  AC2,000002             ;;SAVE DEVICE NAME
054014 / 260140,,042552         PUSHJ    P,042552             ;;GET LOGICAL NAME, IF ANY
054015 / 202100,,026110         MOVEM TAC1,026110             ;;SAVE FOR LATER
054016 / 200100,,000016          MOVE TAC1,000016             ;;RESTORE TAC1 TO PHYS NAME
054017 / 553003,,000000         HRRZS            (P)          ;;CLEAR PARTIAL MATCH FOUND FLAG
054020 / 261140,,000006          PUSH    P,000006             ;;SAVE TTY DDB ADDRESS
054021 / 200040,,000002          MOVE  TAC,  TAC1             ;
054022 / 261140,,000015          PUSH    P,000015             ;;SAVE ATTRIBUTE BITS
054023 / 260140,,044701         PUSHJ    P,DEVPHY             ;
054024 / 254000,,054030          JRST       ASSG3             ;
054025 / 262140,,000015           POP    P,   AC1             ;
054026 / 201100,,400000         MOVEI TAC1,ASSCON             ;
054027 / 254000,,054036          JRST       ASSG4             ;
                       ASSG3:
054030 / 262140,,000015           POP    P,   AC1             ;
054031 / 201100,,400000         MOVEI TAC1,400000             ;;SETUP ASSIGNED BY CONSOLE BIT
054032 / 554300,,000610          HLRZ  DDB,DEVLST             ;
                       ASSG0:
054033 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054034 / 312706,,000000          CAME  AC2,      (DDB)        ;;DOES PHYSICAL NAME MATCH?
054035 / 254000,,054250          JRST      054250             ;;NO
                       ASSG4:
054036 / 316700,,151417          CAMN  AC2,151417             ;;IS THIS A DISK?
054037 / 254000,,054042          JRST      054042             ;;YES.  BYPASS CHECK FOR SYSTEM TAPE
054040 / 316040,,037572          CAMN  TAC,037572             ;;IS NEXT DEVICE IN LIST THE SYSTEM TAPE?
054041 / 254000,,054327          JRST      054327             ;;YES, DO NOT ASSIGN. CLEAR DIRECTORY IN CORE BIT
                       ASSG5:
054042 / 260140,,054051         PUSHJ    P,054051             ;;TEST VARIOUS UDP CASES
054043 / 254000,,054311          JRST      054311             ;;CAN'T GET UDPN SINCE PRIVATE AND NOT OURS
054044 / 260140,,054221         PUSHJ    P,054221             ;;NOW CHECK FOR RECYCLABLE DDB
054045 / 254000,,054330          JRST      054330             ;;I.E., SHARABLE DEVICE AND OUR ASSCON DDB
054046 / 260140,,044611         PUSHJ    P,044611             ;;TRY TO ASSIGN DEVICE
054047 / 254000,,054313          JRST      054313             ;;ALREADY ASSIGNED TO ANOTHER JOB
054050 / 254000,,054327          JRST      054327             ;;ASSIGNED
                       ASSUDP:
054051 / 554740,,000001          HLRZ  AC3,   TAC             ;
054052 / 302740,,654460          CAIE  AC3,654460             ;
054053 / 254000,,037401          JRST      037401             ;;NOT UDP.
054054 / 135740,,037577           LDB  AC3, PUNIT             ;
054055 / 312700,,151562          CAME  AC2,151562             ;
054056 / 254000,,054126          JRST      054126             ;;ASKED FOR UDPN.  SEE IF PUBLIC OR OURS
054057 / 332017,,011751         SKIPE      011751(AC3)        ;;ANY DDBS IN USE FOR THIS UDP?
054060 / 263140,,000000          POPJ    P,                   ;;YES.
                       ASSUD2:
054061 / 602640,,000001          TRNE  AC1,000001             ;;WANTS TO MAKE IT PUBLIC?
054062 / 254000,,054132          JRST      054132             ;;YES.
054063 / 602640,,000004          TRNE  AC1,000004             ;;WANTS TO MAKE IT OLD STYLE?
054064 / 254000,,054167          JRST      054167             ;;YES.
054065 / 606640,,000002          TRNN  AC1,000002             ;;MAKE IT PRIVATE?
054066 / 254000,,037401          JRST      037401             ;;NO.
054067 / 260140,,054140         PUSHJ    P,054140             ;;YES, FIRST MAKE IT NEW STYLE
054070 / 260140,,054073         PUSHJ    P,054073             ;;THEN MAKE IT PRIVATE
054071 / 255000,,000000          JFCL                         ;
054072 / 254000,,037401          JRST      CPOPJ1             ;
                       AUDPPV:
054073 / 336017,,011751         SKIPN      011751(AC3)        ;
054074 / 254000,,054123          JRST      054123             ;;OK TO PRIVATIFY UNUSED UDP
054075 / 261140,,000006          PUSH    P,   DDB             ;
                       ASSUD4:
054076 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;
054077 / 322300,,054122         JUMPE  DDB,ASSUD5             ;
054100 / 312706,,000000          CAME  AC2,      (DDB)        ;
054101 / 254000,,054122          JRST      054122             ;;NO MORE DDBS FOR THIS UDP
054102 / 135040,,037575           LDB  TAC, PJOBN             ;
054103 / 306044,,000000          CAIN  TAC,      (J)          ;
054104 / 254000,,054076          JRST      054076             ;;SAME JOB SAME UDP IS OK
054105 / 200303,,777775          MOVE  DDB,777775(P)          ;;TTY DDB
054106 / 260140,,042676         PUSHJ    P,INLMES             ;
054117 / 262140,,000006           POP    P,   DDB             ;
054120 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054121 / 263140,,000000          POPJ    P,                   ;;FAILURE RETURN
                       ASSUD5:
054122 / 262140,,000006           POP    P,   DDB             ;
                       ASSUD3:
054123 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054124 / 202217,,011750         MOVEM    J,011750(AC3)        ;;MAKE UDP PRIVATE
054125 / 254000,,037401          JRST      037401             ;;SUCCESS RETURN
                       ASSUD1:
054126 / 331017,,011750         SKIPL      011750(AC3)        ;;WANTS UDPN
054127 / 316217,,011750          CAMN    J,011750(AC3)        ;
054130 / 254000,,054061          JRST      054061             ;;OK SINCE PUBLIC OR OURS
054131 / 263140,,000000          POPJ    P,                   ;;CAN'T GET UDPN SINCE PRIVATE NOT OURS
                       AUDPPB:
054132 / 260140,,054140         PUSHJ    P,054140             ;;WANTS PUBLIC: FIRST MAKE NEW-STYLE
054133 / 135740,,037577           LDB  AC3, PUNIT             ;
054134 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;DDB POINTS TO MODEL DDB IT SAYS HERE
054135 / 603040,,200000          TLNE  TAC,200000             ;;IF WE MANAGED NEW-STYLE,
054136 / 476017,,011750         SETOM      011750(AC3)        ;;PUBLICIFY IT
054137 / 254000,,037401          JRST      CPOPJ1             ;
                       AUDPNU:
054140 / 135740,,037577           LDB  AC3,037577             ;;TRY TO MAKE IT NEW-STYLE UDP
054141 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
054142 / 667040,,200000          TLON  TAC,200000             ;;OK IF ALREADY NEW-STYLE
054143 / 336017,,011751         SKIPN      011751(AC3)        ;;OR IF NO DDBS YET
054144 / 254000,,054162          JRST      AUDNOK             ;
054145 / 250303,,777776          EXCH  DDB,777776(P)          ;;TTY DDB
054146 / 260140,,042676         PUSHJ    P,INLMES             ;
054157 / 250303,,777776          EXCH  DDB,777776(P)          ;
054160 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054161 / 263140,,000000          POPJ    P,                   ;
                       AUDNOK:
054162 / 202046,,000004         MOVEM  TAC,DEVMOD(DDB)        ;;SET FORMAT BIT
054163 / 201040,,074756         MOVEI  TAC,DSKDSP             ;
054164 / 542046,,000003          HRRM  TAC,DEVSER(DDB)        ;;SIGH, SET THE NEW DISPATCH TABLE TOO
054165 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054166 / 263140,,000000          POPJ    P,                   ;
                       AUDPOL:
054167 / 260140,,054073         PUSHJ    P,054073             ;;WANTS OLD-STYLE.  FIRST PRIVATIFY
054170 / 254000,,037401          JRST      037401             ;;FAILED TO PRIVATIFY, SO NO OLD-STYLE
054171 / 350003,,000000           AOS            (P)          ;;WIN OR LOSE, WE'VE ESTABLISHED ACCESS
054172 / 135740,,037577           LDB  AC3,037577             ;;TRY TO MAKE IT OLD-STYLE UDP
054173 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
054174 / 623040,,200000          TLZE  TAC,200000             ;;OK IF ALREADY OLD-STYLE
054175 / 336017,,011751         SKIPN      011751(AC3)        ;;OR IF NO DDBS YET
054176 / 254000,,054214          JRST      AUDOOK             ;
054177 / 250303,,777776          EXCH  DDB,777776(P)          ;;TTY DDB
054200 / 260140,,042676         PUSHJ    P,INLMES             ;
054211 / 250303,,777776          EXCH  DDB,777776(P)          ;
054212 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054213 / 263140,,000000          POPJ    P,                   ;
                       AUDOOK:
054214 / 202046,,000004         MOVEM  TAC,DEVMOD(DDB)        ;;SET FORMAT BIT
054215 / 201040,,102517         MOVEI  TAC,UDPDSP             ;
054216 / 542046,,000003          HRRM  TAC,DEVSER(DDB)        ;;SIGH, SET THE OLD DISPATCH TABLE TOO
054217 / 200046,,000000          MOVE  TAC,      (DDB)        ;
054220 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO TRY TO RECYCLE ASSCON-TYPE DDB FOR SHAREABLE DEVICE
                       ASSCKS:
054221 / 200746,,777777          MOVE  AC3,DEVCMR(DDB)        ;;FIRST OF ALL, GOTTA BE SHARABLE DEV
054222 / 607740,,100000          TLNN  AC3,100000             ;;OR ASSASG WON'T COPY IT ANYWAY
054223 / 254000,,037401          JRST      CPOPJ1             ;
054224 / 200740,,000006          MOVE  AC3,000006             ;;NOW SEARCH ALL DDBS FOR THIS DEV
                       ASCKS1:
153170 / 000017,,000001                                       ;
153170 / 360617,,000001 POINT 6,17000001,5                    ;
054225 / 135040,,153170           LDB  TAC,153170             ;;PJOBN
054226 / 302044,,000000          CAIE  TAC,      (J)          ;;MUST MATCH OUR JOB TO BE A CANDIDATE
054227 / 254000,,054242          JRST      054242             ;;ELSE CONTINUE THROUGH DDBS
054230 / 200057,,000004          MOVE  TAC,DEVMOD(AC3)        ;;MUST HAVE ASSCON
054231 / 606040,,400000          TRNN  TAC,400000             ;;PERHAPS NEEDLESSLY CONSERVATIVE, BUT
054232 / 254000,,054242          JRST      054242             ;;PERHAPS SOMEONE NEEDS NOT CON+PRG SAME DDB
054233 / 332057,,000005         SKIPE  TAC,DEVLOG(AC3)        ;;OK IF NO LOGICAL NAME IN THE DDB
054234 / 316040,,026110          CAMN  TAC,026110             ;;OR IF IT'S THE SAME AS LOG NAME ARG NOW
054235 / 254000,,054240          JRST      ASCKS2             ;
054236 / 332000,,026110         SKIPE      026110             ;;ALSO OK IF NO LOG NAME ARG IN COMMAND
054237 / 254000,,054242          JRST      054242             ;;BUT LOSE IF 2 DIFFERENT LOG NAMES
                       ASCKS2:
054240 / 200300,,000017          MOVE  DDB,000017             ;;GOT ONE!  SAVE POINTER
054241 / 263140,,000000          POPJ    P,                   ;
                       ASCKS9:
054242 / 554757,,000003          HLRZ  AC3,DEVSER(AC3)        ;;CONTINUE THROUGH DDB CHAIN
054243 / 322740,,037401         JUMPE  AC3,037401             ;;CAN'T HAPPEN MAYBE
054244 / 200057,,000000          MOVE  TAC,      (AC3)        ;;MAKE SURE THIS IS SAME DEVICE
054245 / 316046,,000000          CAMN  TAC,      (DDB)        ;
054246 / 254000,,054225          JRST      054225             ;;OK, CONTINUE TESTING
054247 / 254000,,037401          JRST      037401             ;;NO, POP AC3, SKIP RET
                       ;SYSTEM TAPE OR NOT MATCH OF ARG AND PHYSICAL NAME.
                       ASSG1:
054250 / 316040,,037572          CAMN  TAC,037572             ;;IS THIS SYSTEM TAPE?
054251 / 254000,,054270          JRST      054270             ;;YES
054252 / 135740,,037575           LDB  AC3,037575             ;;SAVE OLD JOB NUMBER FOR THIS DEVICE
054253 / 202740,,026111         MOVEM  AC3,ASSJBN             ;
054254 / 620040,,777777           TRZ  TAC,777777             ;;COMPARE LEFT HALF ONLY
054255 / 312040,,000016          CAME  TAC,   AC2             ;
054256 / 254000,,054270          JRST       ASSG2             ;
054257 / 563003,,777777         HRROS      777777(P)          ;;FLAG PARTIAL NAME MATCH FOUND
054260 / 260140,,054051         PUSHJ    P,054051             ;;DO UDP CHECKS
054261 / 254000,,054270          JRST      054270             ;;THIS UDP NOT FREE TRY NEXT
054262 / 260140,,054221         PUSHJ    P,054221             ;;NOW CHECK FOR RECYCLABLE DDB
054263 / 254000,,054330          JRST      054330             ;;NONSKIP RETURN MEANS SUCCESS, GOT A DDB
054264 / 260140,,044611         PUSHJ    P,044611             ;;MATCH, TRY TO ASSIGN IT
054265 / 254000,,054270          JRST      054270             ;;KEEP LOOKING
054266 / 336000,,026111         SKIPN      ASSJBN             ;
054267 / 254000,,054327          JRST      054327             ;;IF OLD JOB NUMBER 0,
                       ; DEVICE PREVIOUSLY UNASSIGNED
                       ASSG2:
054270 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;
054271 / 326300,,054033         JUMPN  DDB, ASSG0             ;
054272 / 262140,,000006           POP    P,   DDB             ;
054273 / 331003,,000000         SKIPL            (P)          ;;DID WE HAVE ANY PARTIAL MATCHES?
054274 / 254000,,054454          JRST      054454             ;;PRINT NO SUCH DEVICE
054275 / 200303,,777776          MOVE  DDB,777776(P)          ;;RESTORE TTY DDB
054276 / 260140,,042676         PUSHJ    P,INLMES             ;
054302 / 200100,,000016          MOVE TAC1,   AC2             ;
054303 / 260140,,043730         PUSHJ    P,PRNAME             ;
054304 / 265040,,042670           JSP  TAC,042670             ;;PRINT 'NO SUCH DEVICE'
                       ;ALREADY ASSIGNED TO ANOTHER JOB
                       ASSR1A:
054311 / 135040,,037577           LDB  TAC, PUNIT             ;
054312 / 334041,,011750         SKIPA  TAC,011750(TAC)        ;;GET JOB NUMBER OF PRIVATE OWNER OF UDPN
                       ASSER1:
054313 / 135040,,037575           LDB  TAC,037575             ;;GET JOB NUMBER FOR DEVICE
054314 / 262140,,000006           POP    P,000006             ;;GET DDB FOR TTY
054315 / 261140,,000001          PUSH    P,000001             ;;SAVE JOB NUMBER
054316 / 201040,,054322         MOVEI  TAC,054322             ;;TYPE ERROR MESSAGE
054317 / 260140,,042666         PUSHJ    P,ERRMES             ;
054320 / 262140,,000001           POP    P,000001             ;;GET JOB NUMBER BACK
054321 / 254000,,052166          JRST       DECLF             ;
                       ASSMS2:
                       ;DEVICE ASSIGNED, GIVE IT A LOGICAL NAME
                       ASSFIN:
054327 / 402006,,000005         SETZM      DEVLOG(DDB)        ;;CLEAR LOGICAL NAME
                       ASLNOK:
054330 / 250303,,000000          EXCH  DDB,      (P)          ;;GET TTY DDB, SAVE DEVICE DDB
054331 / 200100,,026110          MOVE TAC1,026110             ;;RETRIEVE SAVED LOGICAL NAME ARG
054332 / 336040,,000002         SKIPN  TAC,000002             ;;IS THERE A LOGICAL NAME SPECIFIED?
054333 / 254000,,054374          JRST      054374             ;;NO.  CHECK FOR DEFAULTING ASSIGNMENT
054334 / 260140,,044670         PUSHJ    P,044670             ;;SEE IF IT IS ALREADY IN USE BY THIS USER
054335 / 254000,,054342          JRST      054342             ;;NO
054336 / 201040,,054366         MOVEI  TAC,054366             ;;YES, PRINT ERROR
054337 / 200303,,777775          MOVE  DDB,777775(P)          ;;RESTORE TTY DDB
054340 / 260140,,042666         PUSHJ    P,ERRMES             ;
                       DEFLOS:
054341 / 201040,,000000         MOVEI  TAC,                   ;;CLEAR LOGICAL NAME FOR THIS DEVICE
                       ASSF1:
054342 / 262140,,000006           POP    P,   DDB             ;
054343 / 336006,,000005         SKIPN      DEVLOG(DDB)        ;;WILL BE NONZERO ONLY FOR RECYCLED DDB
054344 / 202046,,000005         MOVEM  TAC,DEVLOG(DDB)        ;;STORE IN DEVICE DATA BLOCK
054345 / 205100,,400000         MOVSI TAC1,400000             ;;CLEAR DIRECTORY IN CORE BIT
054346 / 412106,,000004        ANDCAM TAC1,DEVMOD(DDB)        ;
054347 / 200106,,000000          MOVE TAC1,      (DDB)        ;;PHYSICAL NAME
054350 / 200700,,000006          MOVE  AC2,   DDB             ;
054351 / 200303,,777776          MOVE  DDB,777776(P)          ;;RESTORE TTY DDB
054352 / 260140,,043730         PUSHJ    P,043730             ;;PRINT IT
054353 / 260140,,042676         PUSHJ    P,INLMES             ;
054356 / 336016,,000005         SKIPN      DEVLOG(AC2)        ;
054357 / 254000,,054364          JRST      NOLOGP             ;
054360 / 260140,,042676         PUSHJ    P,INLMES             ;
054362 / 200116,,000005          MOVE TAC1,DEVLOG(AC2)        ;
054363 / 260140,,043730         PUSHJ    P,PRNAME             ;
                       NOLOGP:
054364 / 265040,,042670           JSP  TAC,CONMES             ;
                       LOGERR:
                       DEFASS:
054374 / 200303,,000000          MOVE  DDB,      (P)          ;
054375 / 312706,,000000          CAME  AC2,      (DDB)        ;
151561 / 646471,,000000                                       ;
054376 / 316700,,151561          CAMN  AC2,151561             ;;DON'T DO IT FOR TTY
054377 / 254000,,054342          JRST       ASSF1             ;
054400 / 200040,,000016          MOVE  TAC,   AC2             ;
054401 / 260140,,044670         PUSHJ    P,044670             ;;INUSE?
054402 / 254000,,054342          JRST       ASSF1             ;
054403 / 254000,,054341          JRST      DEFLOS             ;
                       ;"DEASSIGN DEV" - DEASSIGNS DEVICE FROM CONSOLE
                       DEASSI:
054404 / 322200,,037403         JUMPE ITEM,037403             ;;NO-OP IF NO JOB NUMBER
054405 / 260140,,042552         PUSHJ  PDP,042552             ;;GET DEVICE NAME
054406 / 322100,,054472         JUMPE TAC1,054472             ;;NO ARG. IF 0, DEASSIGN ALL BUT TTY
054407 / 200040,,000002          MOVE  TAC,000002             ;;DEVICE NAME
                       DEAER4:
054410 / 260140,,044670         PUSHJ  PDP,044670             ;; SEARCH LOGICAL NAMES FIRST
054411 / 254000,,054417          JRST      DEAER3             ;
054412 / 260140,,042720         PUSHJ  PDP, DEASG             ;
054413 / 304000,,000000          CAIA                         ;
054414 / 254000,,054431          JRST      DEADON             ;
151750 / 000000,,054411                                       ;
054415 / 261140,,151750          PUSH  PDP,151750             ;
054416 / 254000,,044676          JRST        DEV0             ;
                       DEAER3:
054417 / 260140,,044701         PUSHJ  PDP,044701             ;; NOT FOUND, TRY PHYSICAL NAMES
054420 / 254000,,054462          JRST      054462             ;; NOT FOUND AT ALL, LOSE!
054421 / 260140,,042720         PUSHJ  PDP,042720             ;; FOUND, DEASSIGN IT
054422 / 304000,,000000          CAIA                         ;
054423 / 254000,,054431          JRST      DEADON             ;
054424 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;
054425 / 603640,,000010          TLNE  AC1,000010             ;; STOP IF FOUND A TTY
054426 / 263140,,000000          POPJ    P,                   ;; QUIT HERE OR WILL LOOP INDEFINITELY!!!!
                       ; ALSO FLUSH UNUSED TTY'S
151751 / 000000,,054420                                       ;
054427 / 261140,,151751          PUSH  PDP,151751             ;
054430 / 254000,,044713          JRST      DEVLP2             ;
                       DEADON:
054431 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;
054432 / 603640,,020000          TLNE  AC1,020000             ;; NOT FOR CONSOLE OF LOSER
054433 / 263140,,000000          POPJ    P,                   ;
054434 / 606640,,200000          TRNN  AC1,200000             ;; STILL ASSIGNED BY PROGRAM?
054435 / 254000,,054451          JRST      DEADN1             ;
054436 / 200106,,000000          MOVE TAC1,      (DDB)        ;
054437 / 200303,,777776          MOVE  DDB,777776(P)          ;
054440 / 260140,,043730         PUSHJ    P,PRNAME             ;
054441 / 265040,,042666           JSP  TAC,ERRMES             ;
                       DEADN1:
054451 / 607640,,000010          TLNN  AC1,000010             ;; IF TTY
054452 / 263140,,000000          POPJ    P,                   ;
054453 / 254000,,140262          JRST      140262             ;; RELEASE IT SO DDB WILL BE LET GO
                       NOTDEV:
                       DEAER1:
054454 / 200303,,777776          MOVE DEVDAT,777776(PDP)        ;; RESTORE TTY DDB
054455 / 265040,,042666           JSP  TAC,042666             ;; PRINT 'NO SUCH DEVICE'
                       DEAER2:
054462 / 200100,,000001          MOVE TAC1,000001             ;;PRINT PHYSICAL DEVICE NAME
054463 / 200303,,777776          MOVE DEVDAT,777776(PDP)        ;; RESTORE TTY DDB FIRST
054464 / 260140,,043730         PUSHJ  PDP,PRNAME             ;
054465 / 265040,,042666           JSP  TAC,ERRMES             ;
                       DEALL:
054472 / 261140,,000006          PUSH    P,   DDB             ;
054473 / 400300,,000000          SETZ  DDB,                   ;
054474 / 260140,,042735         PUSHJ    P,DEASTY             ;
054475 / 262140,,000006           POP    P,   DDB             ;
054476 / 263140,,000000          POPJ    P,                   ;
                       ;REASSIGN UUO
                       ;CALL	MOVE AC,JOB NUMBER
                       ;	MOVE AC+1,SIXBIT /DEVICE/
                       ;	CALL AC,[SIXBIT /REASSIGN/]
                       ;IF C(AC)=0, JOB HAS NOT BEEN INITIALIZED
                       ;IF C(AC+1)=0, DEVICE NOT ASSIGNED TO THIS JOB OR DEVICE IS A TTY
                       REASSI:
054477 / 135600,,037573           LDB  UUO,PUUOAC             ;
054500 / 505600,,000007          HRLI  UUO,  PROG             ;
054501 / 261160,,000014          PUSH  PDP,@000014            ;;STACK JOB NUMBER TO BE REASSIGNED TO
054502 / 350000,,000014           AOS         UUO             ;
054503 / 200120,,000014          MOVE TAC1,@000014            ;;DEVICE NAME
054504 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;;THIS JOB NUMBER
054505 / 364600,,054517          SOJA  UUO,REASS1             ;
                       ;"REASSIGN DEV:JOB" - REASSIGN DEVICE "DEV" TO JOB "JOB"
                       REASS:
054506 / 260140,,042552         PUSHJ  PDP,042552             ;;GET DEVICE NAME
054507 / 322100,,042706         JUMPE TAC1,042706             ;;NULL NAME?
054510 / 200600,,000002          MOVE  UUO,000002             ;;SAVE IT IN UUO
054511 / 260140,,042747         PUSHJ  PDP,042747             ;;GET NEW JOB NUMBER
054512 / 254000,,042706          JRST      042706             ;;NONE SPECIFIED. DOESN'T RETURN IF ERROR
054513 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
054514 / 261140,,000002          PUSH  PDP,000002             ;;PUT JOB NUMBER ON STACK, DEVICE
054515 / 200100,,000014          MOVE TAC1,000014             ;;NAME IN TAC1
054516 / 402000,,000014         SETZM      000014             ;;SET COMMAND SWITCH
                       ;ROUTINE COMMON TO REASSIGN UUO AND COMMAND
                       REASS1:
054517 / 250203,,000000          EXCH ITEM,      (PDP)        ;;NEW JOB NO. IN ITEM
054520 / 200044,,026114          MOVE  TAC,JBTSTS(ITEM)       ;;NEW JOB STATUS
054521 / 250203,,000000          EXCH ITEM,      (PDP)        ;;RESTORE ITEM AND STACK
054522 / 607040,,040000          TLNN  TAC,040000             ;;DOES NEW JOB EXIST?
054523 / 254000,,054623          JRST      054623             ;;NO.
054524 / 200040,,000002          MOVE  TAC,  TAC1             ;
054525 / 260140,,044655         PUSHJ  PDP,044655             ;;SEARCH FOR DEV (USE CHANNEL # IF UUO)
054526 / 254000,,054627          JRST      054627             ;;NOT FOUND
054527 / 135040,,037575           LDB  TAC, PJOBN             ;
054530 / 312040,,000004          CAME  TAC,000004             ;;ASSIGNED TO THIS JOB
054531 / 254000,,054633          JRST      054633             ;;NO
054532 / 200046,,000004          MOVE  TAC,DEVMOD(DEVDAT)     ;
054533 / 603040,,020000          TLNE  TAC,020000             ;;IS IT HIS CONSOLE?
054534 / 254000,,054635          JRST      054635             ;;YES. CAN'T BE REASSIGNED.
054535 / 606040,,200000          TRNN  TAC,200000             ;;IS DEVICE INITED?
054536 / 254000,,054613          JRST      054613             ;;NO.
054537 / 326600,,054555         JUMPN  UUO,054555             ;;YES. COMMAND LEVEL?
054540 / 504303,,000000           HRL DEVDAT,      (PDP)        ;;YES. SCHEDULE RELEASE
054541 / 202307,,000132         MOVEM DEVDAT,JOBFDV(JDAT)       ;
054542 / 262140,,000002           POP  PDP,  TAC1             ;
054543 / 200303,,777776          MOVE DEVDAT,777776(PDP)        ;
054544 / 205100,,000020         MOVSI TAC1,000020             ;;SET TTYRNC SO JOB WILL RUN
054545 / 436103,,777777          IORM TAC1,777777(PDP)        ;
054546 / 265100,,045773           JSP TAC1,MSTART             ;
054547 / 265040,,045741           JSP  TAC,MONSTR             ;
054550 / 554047,,000132          HLRZ  TAC,JOBFDV(JDAT)       ;
054551 / 261140,,000001          PUSH  PDP,   TAC             ;
054552 / 550307,,000132          HRRZ DEVDAT,JOBFDV(JDAT)       ;
054553 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;
054554 / 476000,,000014         SETOM      000014             ;;SET FLAG TO STOP JOB
                       REASS4:
054555 / 550446,,000003          HRRZ DSER,DEVSER(DEVDAT)     ;
054556 / 552307,,000132         HRRZM DEVDAT,JOBFDV(JDAT)       ;
054557 / 335513,,024066        SKIPGE UCHN,USRHCU(PID)        ;; HAS MONDMP BEEN HERE?
054560 / 254000,,054613          JRST      054613             ;;YES, WE CAN'T BE IN USRJDA LIST
                       REASS2:
054561 / 550312,,024071          HRRZ DEVDAT,USRJDA(UCHN)       ;
054562 / 261140,,000012          PUSH  PDP,  UCHN             ;
054563 / 312307,,000132          CAME DEVDAT,JOBFDV(JDAT)       ;
054564 / 254000,,054567          JRST      REASS8             ;
054565 / 500312,,024071           HLL DEVDAT,USRJDA(UCHN)       ;; PICK UP UUO FLAGS FIRST
054566 / 260140,,065522         PUSHJ  PDP,065522             ;; NOW RELEASE DEVICE
                       REASS8:
054567 / 262140,,000012           POP  PDP,  UCHN             ;
054570 / 365500,,054561         SOJGE UCHN,REASS2             ;
054571 / 331504,,032565         SKIPL UCHN,JBTIOP(J)          ;
054572 / 254000,,054612          JRST      REAST1             ;
                       REAST2:
054573 / 550312,,000000          HRRZ  DDB,      (UCHN)       ;
054574 / 312307,,000132          CAME  DDB,JOBFDV(JDAT)       ;
054575 / 254000,,054610          JRST      REAST3             ;
054576 / 200300,,024071          MOVE  DDB,USRJDA             ;
054577 / 250312,,000000          EXCH  DDB,      (UCHN)       ;
054600 / 202300,,024071         MOVEM  DDB,USRJDA             ;
054601 / 261140,,000012          PUSH    P,  UCHN             ;
054602 / 400500,,000000          SETZ UCHN,                   ;
054603 / 260140,,065522         PUSHJ    P,RELEA5             ;
054604 / 262140,,000012           POP    P,  UCHN             ;
054605 / 200312,,000000          MOVE  DDB,      (UCHN)       ;
054606 / 250300,,024071          EXCH  DDB,USRJDA             ;
054607 / 202312,,000000         MOVEM  DDB,      (UCHN)       ;
                       REAST3:
151763 / 000001,,000001                                       ;
054610 / 270500,,151763           ADD UCHN,151763             ;
054611 / 253500,,054573         AOBJN UCHN,REAST2             ;
                       REAST1:
054612 / 200307,,000132          MOVE DEVDAT,JOBFDV(JDAT)       ;
                       REASS3:
054613 / 201040,,400000         MOVEI  TAC,400000             ;;ASSIGN IT BY CONSOLE
054614 / 436046,,000004          IORM  TAC,DEVMOD(DEVDAT)     ;
054615 / 262140,,000004           POP    P,     J             ;
054616 / 137200,,037575           DPB    J,037575             ;;PUT IN NEW JOB NUMBER
054617 / 402006,,000005         SETZM      DEVLOG(DDB)        ;;FLUSH LOGICAL DEVICE NAME!
054620 / 200213,,024061          MOVE    J,   JOB(PID)        ;
054621 / 321600,,045550         JUMPL  UUO, ESTOP             ;
054622 / 263140,,000000          POPJ  PDP,                   ;
                       REASE1:
054623 / 262140,,000001           POP  PDP,   TAC             ;
054624 / 322600,,052440         JUMPE  UUO,052440             ;;PRINT NO SUCH JOB
                       REASE4:
054625 / 402020,,000014         SETZM      @000014            ;;CLEAR C(AC)
054626 / 263140,,000000          POPJ  PDP,                   ;
                       REASE2:
054627 / 201040,,054454         MOVEI  TAC,054454             ;;NO SUCH DEVICE
                       REASE5:
054630 / 262140,,000002           POP  PDP,  TAC1             ;
054631 / 322601,,000000         JUMPE  UUO,      (TAC)        ;
054632 / 344600,,054625          AOJA  UUO,REASE4             ;
                       REASE3:
054633 / 201040,,054650         MOVEI  TAC,054650             ;;WASN'T ASSIGNED
054634 / 254000,,054630          JRST      REASE5             ;
                       REASE6:
054635 / 201040,,054637         MOVEI  TAC,REASE7             ;
054636 / 254000,,054630          JRST      REASE5             ;
                       REASE7:
054637 / 200106,,000000          MOVE TAC1,      (DEVDAT)     ;
054640 / 200303,,777776          MOVE DEVDAT,777776(PDP)        ;; RESTORE TTY DDB
054641 / 260140,,043730         PUSHJ  PDP,PRNAME             ;
054642 / 265040,,042666           JSP  TAC,ERRMES             ;
                       REASSX:
054650 / 200106,,000000          MOVE TAC1,      (DEVDAT)     ;
054651 / 254000,,054463          JRST      054463             ;
                       ;"ATTACH DEVNAM" -ATTACHES A PREVIOUSLY PARTITIONED DEVICE
                       ;	NOTE-MUST BE LOGGED IN UNDER [1,1] TO DO THIS
                       ; "ATTACH N [PROJ.,PROG.]" - ATTACH CONSOLE TO JOB N
                       ;CHANGES ADDRESS OF TTY DEVICE DATA BLOCK STORED IN -2(PDP)
                       ;BY THE COMMAND DECODER
                       ATTACH:
054652 / 260140,,042747         PUSHJ    P,042747             ;;GET JOB NO.
054653 / 254000,,042706          JRST      042706             ;;NOT A NUMBER OR NONE SPECIFIEED
054654 / 254000,,054716          JRST      054716             ;;WANTS TO ATTACH A DEVICE
054655 / 322100,,052440         JUMPE TAC1,052440             ;;0 IS ILLEGAL
054656 / 301100,,000100          CAIL TAC1,000100             ;;IS JOB NUMBER TOO BIG?
054657 / 254000,,052440          JRST      052440             ;;ILLEGAL JOB NUMBER.  PRINT NO SUCH JOB
054660 / 205700,,040000         MOVSI  AC2,040000             ;;HAS THIS JOB NO BEEN ASSIGNED?
054661 / 616702,,026114          TDNN  AC2,JBTSTS(TAC1)       ;
054662 / 254000,,052440          JRST      052440             ;;NO, PRINT NO SUCH JOB
054663 / 261140,,000002          PUSH    P,000002             ;;SAVE JOB NO.
054664 / 260140,,042777         PUSHJ    P,042777             ;;GET PROJ.-PROG. NOS. ARG
054665 / 200704,,027720          MOVE  AC2,PRJPRG(J)          ;;NO PP NO. USE CURRENT ONE
054666 / 262140,,000002           POP    P,000002             ;;RESTORE
054667 / 312702,,027720          CAME  AC2,PRJPRG(TAC1)       ;;MATCHES THE DETACHED JOB'S PPN?
054670 / 254000,,055011          JRST      055011             ;;NO-ERROR
                       ;YES
054671 / 135040,,037577           LDB  TAC,037577             ;;GET LINE NUMBER OF TTY THAT'S TYPING.
054672 / 254000,,054674          JRST      054674             ;
                       ATTILA:
054673 / 570044,,027320          HRRE  TAC,JBTLIN(J)          ;;GET LINE NUMBER OF CONTROLING JOB.
054674 / 305040,,000121         CAIGE  TAC,000121             ;;IS THIS ON A PTY?
054675 / 254000,,054710          JRST      054710             ;;NO. ATTACH IS LEGAL.
054676 / 200201,,017743          MOVE    J,017743(TAC)        ;;GET JOB NUMBER OF CONTROLING JOB.
054677 / 302202,,000000          CAIE    J,      (TAC1)       ;;CONTROLLER=JOB TO ATTACH TO?
054700 / 254000,,054673          JRST      054673             ;;NO.  KEEP LOOPING
054701 / 201200,,000000         MOVEI    J,                   ;
054702 / 265040,,042666           JSP  TAC,ERRMES             ;
                       THEHUN:
054710 / 200200,,000002          MOVE    J,000002             ;;JOB NUMBER TO J
054711 / 260140,,051453         PUSHJ    P,051453             ;;FIX COMCNT
054712 / 260140,,137472         PUSHJ    P,137472             ;;NO, ATTACH TTY
054713 / 254000,,055000          JRST      055000             ;;ERROR CAN'T ATTACH
054714 / 202303,,777776         MOVEM  DDB,777776(P)          ;;CHANGE DEV DATA BLOCK ADDRESS
054715 / 254000,,137613          JRST      137613             ;;ATTACHED. GO SET UP OUTPUT BYTE PTR.
                       DEVATT:
054716 / 271400,,000020          ADDI  TEM,000020             ;; MAKE FIRST CHAR OF DEVICE NAME INTO SIXBIT
054717 / 261140,,000010          PUSH    P,000010             ;; NOW SAVE IT
054720 / 260140,,042550         PUSHJ    P,042550             ;;GET DEVICE ARGUMENT
054721 / 255000,,000000          JFCL                         ;
054722 / 262140,,000010           POP    P,000010             ;; GET CHARACTER BACK
054723 / 200644,,027420          MOVE  AC1,JBTPRV(J)          ;;GET JOB PRIVILEGES.
054724 / 607640,,000400          TLNN  AC1,000400             ;;HAS HE THIS PRIV?
054725 / 254000,,055023          JRST      055023             ;;NO - ERROR
054726 / 200040,,000002          MOVE  TAC,000002             ;;YES-SET UP DEVICE NAME
054727 / 242040,,777772           LSH  TAC,777772             ;
153152 / 000000,,000001                                       ;
153152 / 360600,,000001 POINT 6,00000001,5                    ;
054730 / 137400,,153152           DPB  TEM,153152             ;
054731 / 261140,,000006          PUSH    P,000006             ;;SAVE DDB FOR THIS TTY
054732 / 260140,,044663         PUSHJ    P,044663             ;;SEARCH FOR DEVICE
054733 / 254000,,054771          JRST      054771             ;;NOT FOUND
054734 / 135640,,037575           LDB  AC1,037575             ;;GET JOB NUMBER
054735 / 326640,,055030         JUMPN  AC1,055030             ;;IS IT = 0?
054736 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;CHECK TO SEE IF THIS IS A TTY
054737 / 603040,,100000          TLNE  TAC, DVUDP             ;
054740 / 254000,,054751          JRST      054751             ;;UDP IS SPECIAL
054741 / 602040,,200000          TRNE  TAC,200000             ;;IN USE BY JOB 0?
054742 / 254000,,055022          JRST      055022             ;;YES, CAN'T ATTACH IT
054743 / 137200,,037575           DPB    J,037575             ;;SET JOB NUMBER
054744 / 135100,,037577           LDB TAC1,037577             ;;
054745 / 603040,,000010          TLNE  TAC,000010             ;;IS IT A TTY?
054746 / 542302,,032347          HRRM  DDB,TTYTAB(TAC1)       ;;DEC 3.16
                       DADD02:
054747 / 262140,,000006           POP    P,000006             ;;
054750 / 263140,,000000          POPJ    P,                   ;;RETURN
                       ATTUDP:
054751 / 135040,,037577           LDB  TAC,037577             ;;TRYING TO ATTACH UDP
054752 / 336001,,011751         SKIPN      011751(TAC)        ;;MUST BE NO DDBS
054753 / 332001,,011750         SKIPE      011750(TAC)        ;;AND OWNER 0
054754 / 254000,,055030          JRST      055030             ;;ELSE IN USE, PUBLIC, OR SWAPPING DEVICE!
054755 / 476001,,011750         SETOM      011750(TAC)        ;;OK, MAKE IT PUBLIC
054756 / 254000,,054747          JRST      054747             ;;NOTE THAT YOU DON'T HAVE IT ASSIGNED NOW!
                       ;NOTE: THIS ROUTINE IS ALSO CALLED FROM PJOB COMMAND
                       DADD00:
054757 / 201100,,000000         MOVEI TAC1,                   ;;SUBROUTINE TO CHECK "DEV" NAME FOR DD
054760 / 245040,,000014          ROTC  TAC,    14             ;
054761 / 306100,,004444          CAIN TAC1,004444             ;;NOT A DEVICE, IS IT A DD CHANNEL?
054762 / 260140,,140110         PUSHJ    P,140110             ;;YES, GOBBLE NUMBER
054763 / 263140,,000000          POPJ    P,                   ;;NOT DD OR NO NUMBER
054764 / 301100,,000040          CAIL TAC1,000040             ;
054765 / 263140,,000000          POPJ    P,                   ;
054766 / 205040,,200201         MOVSI  TAC,200201             ;;DETACHED USE CODE
054767 / 541042,,000000          HRRI  TAC,      (TAC1)       ;
054770 / 254000,,037401          JRST      CPOPJ1             ;
                       DADD01:
054771 / 260140,,054757         PUSHJ    P,054757             ;;NOT A REAL DEVICE, TRY DD CHAN
054772 / 254000,,055254          JRST      055254             ;;NOPE
152654 / 221001,,014525                                       ;
054773 / 135100,,152654           LDB TAC1,152654             ;;;replace;;LDB TAC1,[DDUSR+<(TAC)>]	;YES, GET USE CODE
054774 / 302100,,000201          CAIE TAC1,DDDETU             ;
054775 / 254000,,055030          JRST      055030             ;;WASN'T DET
054776 / 260140,,135173         PUSHJ    P,135173             ;;LET GO!!
054777 / 254000,,054747          JRST      DADD02             ;
                       ATT2:
055000 / 250300,,000002          EXCH  DDB,000002             ;;PUT LINE NO. OF OUR TTY IN DDB
055001 / 200102,,000000          MOVE TAC1,      (TAC1)       ;;PRINT PHYSICAL NAME
055002 / 200306,,032347          MOVE  DDB,TTYTAB(DDB)        ;;PRINT MESSAGE ON RIGHT TTY !!
055003 / 260140,,043730         PUSHJ    P,PRNAME             ;
055004 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ATT3:
055011 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ATT5A:
055022 / 262140,,000006           POP    P,   DDB             ;
                       ATT5:
055023 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ATT6:
055030 / 262140,,000006           POP    P,DEVDAT             ;
055031 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ;FLUSH THIS TTY'S BUFFERS IF NOT IN USE BY A JOB
                       FLUSH:
055035 / 260140,,042552         PUSHJ    P,CTEXT1             ;
055036 / 322100,,042706         JUMPE TAC1,042706             ;;NO ARG?
055037 / 200040,,000002          MOVE  TAC,  TAC1             ;
055040 / 260140,,140101         PUSHJ    P,140101             ;;CONVERT TO LINE NUMBER
055041 / 254000,,055057          JRST      NOTTTY             ;
055042 / 336302,,032347         SKIPN  DDB,TTYTAB(TAC1)       ;
055043 / 254000,,055052          JRST      FLUSH1             ;
055044 / 135040,,037575           LDB  TAC, PJOBN             ;
055045 / 312040,,000004          CAME  TAC,000004             ;;LET HIM DO IT TO HIMSELF
055046 / 326040,,055065         JUMPN  TAC,055065             ;;JOB ON IT
055047 / 260140,,140774         PUSHJ    P,140774             ;;CLEAR BUFFERS
055050 / 205040,,000404         MOVSI  TAC,000404             ;
055051 / 202046,,000002         MOVEM  TAC,DEVIOS(DDB)        ;;MAKE HIM A VIRGIN
                       FLUSH1:
055052 / 200303,,777776          MOVE  DDB,777776(P)          ;;GET BACK OUR DDB
055053 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
055054 / 265040,,042670           JSP  TAC,CONMES             ;
                       NOTTTY:
055057 / 200303,,777776          MOVE  DDB,777776(P)          ;
055060 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
055061 / 265040,,042666           JSP  TAC,ERRMES             ;
                       INUSE:
055065 / 200303,,777776          MOVE  DDB,777776(P)          ;
055066 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
055067 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ;"FORK", "CFORK", "DETACH" AND "CDETACH" COMMANDS
                       ;"DETACH" - DETACH CONSOLE FROM JOB 
                       ;"DETACH DEVNAM" - DETACHES DEVICE FROM THE SYSTEM SOFTWAREWISE
                       MFORK:
055072 / 261140,,000004          PUSH    P,000004             ;;SAVE J
055073 / 260140,,051066         PUSHJ    P,051066             ;;INITIALIZE A JOB
153751 / 262140,,000004           POP    P,000004             ;;NO JOBS AVAILABLE.
153752 / 262143,,000000           POP    P,      (P)          ;;FLUSH CALL TO MFORK
153753 / 205040,,000010         MOVSI  TAC,000010             ;;LET ERROR MESSAGE THROUGH
153754 / 412043,,777777        ANDCAM  TAC,777777(P)          ;
153755 / 254000,,055166          JRST      LOSEJB             ;
055074 / 254000,,153751          JRST      153751             ;;
153476 / 262140,,000004           POP    P,     J             ;
153477 / 262143,,000000           POP    P,      (P)          ;
153500 / 254000,,056362          JRST      DLYCM1             ;
055075 / 254000,,153476          JRST      153476             ;;DELAY THIS COMMAND UNTIL FREE STORAGE AVAILABLE
055076 / 200040,,000004          MOVE  TAC,     J             ;
055077 / 262140,,000004           POP    P,     J             ;
055100 / 263140,,000000          POPJ    P,                   ;
                       CFORK:
055101 / 205040,,020000         MOVSI  TAC,  JERR             ;
055102 / 612044,,026114          TDNE  TAC,JBTSTS(J)          ;
055103 / 254000,,053020          JRST      NOCONT             ;
055104 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;
055105 / 302040,,000011          CAIE  TAC,000011             ;;START HIM ONLY IF STOPPED.
055106 / 254000,,055116          JRST      055116             ;;ALREADY RUNNING(MIGHT NOT BE IN RUNQ)
055107 / 260140,,055072         PUSHJ    P,055072             ;;GET A NEW JOB NUMBER IN TAC
055110 / 261140,,000001          PUSH    P,   TAC             ;
055111 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
055112 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
055113 / 260140,,046027         PUSHJ    P, REQUE             ;
055114 / 260140,,046021         PUSHJ    P,SETRUN             ;
055115 / 254000,,055120          JRST      055120             ;;WE HAVE NEW JOB NUMBER ON STACK.
                       FORK:
055116 / 260140,,055072         PUSHJ    P,055072             ;;GET US A NEW JOB NUMBER IN TAC
055117 / 261140,,000001          PUSH    P,000001             ;;ALL SET.
                       FORK1:
055120 / 261144,,027320          PUSH    P,JBTLIN(J)          ;
055121 / 260140,,055206         PUSHJ    P,DETCH1             ;
055122 / 262140,,000002           POP    P,000002             ;;GET BACK OLD LINE NUMBER
055123 / 506203,,777777          HRLM    J,777777(P)          ;;SAVE THE OLD JOB NUMBER ON TOP OF PC FLAGS
055124 / 260140,,140123         PUSHJ    P,140123             ;;GET A NEW DDB
153616 / 262140,,000004           POP    P,000004             ;;LOSE.
153617 / 260140,,051143         PUSHJ    P,051143             ;;RELEASE THE JOB WE GOT
153620 / 201200,,000000         MOVEI    J,                   ;;SIGNAL ERROR TO COMRET
153621 / 263140,,000000          POPJ    P,                   ;
055125 / 254000,,153616          JRST      153616             ;
055126 / 205040,,000010         MOVSI  TAC,NOMESS             ;
055127 / 412043,,777776        ANDCAM  TAC,777776(P)          ;;OK TO TALK NOW
055130 / 202303,,777775         MOVEM  DDB,777775(P)          ;;AND WHERE TO SAY IT
055131 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
055132 / 262140,,000004           POP    P,000004             ;;GET THE JOB NUMBER OF NEW JOB.
055133 / 260140,,055144         PUSHJ    P,055144             ;;COPY OLD JOB'S POOP
055134 / 260140,,053444         PUSHJ    P, PRJOB             ;
055135 / 260140,,042676         PUSHJ    P,INLMES             ;
055143 / 254000,,042713          JRST      PRCRCC             ;
                       FORKC:
055144 / 205040,,050000         MOVSI  TAC,050000             ;
055145 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;MAKE THIS JOB HIS
055146 / 402006,,000005         SETZM      DEVLOG(DDB)        ;;ZERO LOGICAL NAME OF TTY
055147 / 260140,,137231         PUSHJ    P,TTYATI             ;
055150 / 554043,,777777          HLRZ  TAC,777777(P)          ;;GET THE OLD JOB NUMBER BACK
055151 / 200041,,027720          MOVE  TAC,PRJPRG(TAC)        ;
055152 / 202044,,027720         MOVEM  TAC,PRJPRG(J)          ;;GIVE HIM SAME PPN
055153 / 554043,,777777          HLRZ  TAC,777777(P)          ;
055154 / 200041,,027420          MOVE  TAC,JBTPRV(TAC)        ;
055155 / 202044,,027420         MOVEM  TAC,JBTPRV(J)          ;;COPY PRIVILEGES
055156 / 554043,,777777          HLRZ  TAC,777777(P)          ;
055157 / 200041,,027520          MOVE  TAC,JB2PRV(TAC)        ;
055160 / 202044,,027520         MOVEM  TAC,JB2PRV(J)          ;;ALSO PASSIVE ONES
055161 / 260140,,060515         PUSHJ    P,060515             ;;GET GOOD STUFF
055162 / 554043,,777777          HLRZ  TAC,777777(P)          ;;GET THE OLD JOB NUMBER BACK
055163 / 200041,,030020          MOVE  TAC,DSKPPN(TAC)        ;
055164 / 202044,,030020         MOVEM  TAC,DSKPPN(J)          ;;GIVE HIM THE SAME ALIAS
055165 / 263140,,000000          POPJ    P,                   ;
                       LOSEJB:
055166 / 265040,,042666           JSP  TAC,ERRMES             ;
                       CDETAC:
055174 / 205040,,020000         MOVSI  TAC,  JERR             ;
055175 / 612044,,026114          TDNE  TAC,JBTSTS(J)          ;
055176 / 254000,,053020          JRST      NOCONT             ;
055177 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;
055200 / 302040,,000011          CAIE  TAC, STOPQ             ;
055201 / 254000,,055206          JRST      DETCH1             ;
055202 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
055203 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
055204 / 260140,,046027         PUSHJ    P, REQUE             ;
055205 / 260140,,046021         PUSHJ    P,SETRUN             ;
                       DETCH1:
055206 / 260140,,051453         PUSHJ    P,051453             ;;FIX COMMAND BIT, COMCNT BEFORE DETACHING.
055207 / 254000,,137532          JRST      137532             ;;GO DETACH TTY.
                       DETACH:
055210 / 260140,,042550         PUSHJ    P,042550             ;;GET ARGUMENT
055211 / 322100,,055206         JUMPE TAC1,055206             ;;ONLY "DET" TYPED
055212 / 200644,,027420          MOVE  AC1,JBTPRV(J)          ;;GET PRIV BITS
055213 / 607640,,000400          TLNN  AC1,000400             ;;DEVICE DETACH-ATTACH PRIV?
055214 / 254000,,055256          JRST      055256             ;;NO-PRINT ERROR MSG.
055215 / 200040,,000002          MOVE  TAC,000002             ;;YES-SET UP DEVICE NAME
055216 / 261140,,000006          PUSH    P,000006             ;;SAVE TTY DDB
055217 / 260140,,044663         PUSHJ    P,044663             ;;SEARCH FOR DEVICE
055220 / 254000,,055263          JRST      055263             ;;DEVICE NOT FOUND
055221 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;CHECK TO SEE IF THIS IS DSK
055222 / 603040,,100000          TLNE  TAC,100000             ;;IS IT A UDP?
055223 / 254000,,055247          JRST      055247             ;;YES, BIG MESS
055224 / 603040,,200000          TLNE  TAC,200000             ;;IS IT THE DSK?
055225 / 254000,,055254          JRST      055254             ;;YES-PRINT ERROR MSG.
055226 / 201100,,400000         MOVEI TAC1,400000             ;;FOUND-SET UP ASSIGNED BY CONSOLE
055227 / 260140,,044611         PUSHJ    P,044611             ;;TRY TO ASSIGN
055230 / 254000,,054313          JRST      054313             ;;CAN'T ASSIGN
055231 / 603300,,000100          TLNE  DDB,000100             ;;IS THIS SYSTEM DEVICE?
055232 / 254000,,055254          JRST      055254             ;;YES-PRINT ERROR MSG.
055233 / 430640,,000015           XOR  AC1,000015             ;;NO-SET TO ZERO
055234 / 137640,,037575           DPB  AC1,037575             ;;SET JOB NO. TO NULL JOB
055235 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;CHECK TO SEE IF THIS IS A TTY
055236 / 607040,,000010          TLNN  TAC,000010             ;;IS IT A TTY?
055237 / 254000,,055243          JRST      055243             ;;NO-GO AHEAD
055240 / 135040,,037577           LDB  TAC,037577             ;;YES-SET UP FOR SCNSER
055241 / 201100,,777777         MOVEI TAC1,777777             ;;SET LEFT HALVE OF TTYTAB TO -1
055242 / 542101,,032347          HRRM TAC1,TTYTAB(TAC)        ;;SO THAT SCNSER CHECKS FOR THIS
                       DDDD03:
055243 / 262140,,000006           POP    P,000006             ;;RESTORE OUR TTY DDB
055244 / 205040,,000310         MOVSI  TAC,000310             ;; ASK TO TYPE OUT A CRLF AND A PERIOD
055245 / 412043,,777777        ANDCAM  TAC,777777(P)          ;; BY ZEROING THESE IN THE COMMAND FLAGS
055246 / 263140,,000000          POPJ    P,                   ;;SUCCESSFUL RETURN
                       DDDUDP:
055247 / 135040,,037577           LDB  TAC,037577             ;;TRYING TO DETACH UDP, GET UNIT NUMBER
055250 / 332001,,011751         SKIPE      011751(TAC)        ;;MUST HAVE NO OUTSTANDING DDBS
055251 / 254000,,054313          JRST      054313             ;;ELSE LOSE
055252 / 402001,,011750         SETZM      011750(TAC)        ;;OK, SET JOB 0 AS OWNER
055253 / 254000,,055243          JRST      055243             ;;ANNOUNCE WIN
                       TEMP1:
055254 / 262140,,000006           POP    P,000006             ;;RESTORE TTY DDB
055255 / 254000,,054454          JRST      054454             ;;PRINT ERROR MSG. AND RETURN
                       LOGER1:
055256 / 265040,,042666           JSP  TAC,ERRMES             ;
                       DDDD01:
055263 / 260140,,054757         PUSHJ    P,054757             ;;NOT A DEV, TRY DD CHAN
055264 / 254000,,055254          JRST      055254             ;;N
055265 / 260140,,135230         PUSHJ    P,DDCGET             ;
055266 / 254000,,055270          JRST      055270             ;;IN USE
055267 / 254000,,055243          JRST      055243             ;;WIN
                       DDDD02:
055270 / 262140,,000006           POP    P,   DDB             ;
055271 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ;CLOSE FTLOGIN
                       ;"DAYTIME" - PRINT TIME OF DAY
                       DAYTIM:
055276 / 260140,,042747         PUSHJ    P,042747             ;;PICK UP JOB NUMBER ARGUMENT
055277 / 254000,,055345          JRST      055345             ;;NO ARGUMENT.  GIVE HIM DAY, DATE & TIME
055300 / 254000,,042645          JRST      042645             ;;ILLEGAL DECIMAL ARGUMENT
055301 / 326100,,055303         JUMPN TAC1,055303             ;;ZERO ARGUMENT?
055302 / 200100,,000004          MOVE TAC1,000004             ;;YES.  "DAYTIME 0" GETS TIMES FOR OWN JOB
055303 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;
055304 / 603040,,040000          TLNE  TAC,   JNA             ;
055305 / 603040,,001000          TLNE  TAC,  JSEG             ;
055306 / 254000,,052440          JRST      052440             ;;NO JOB OR A SEGMENT.  PRINT NO SUCH JOB.
151675 / 000000,,000000                                       ;
055307 / 261140,,151675          PUSH    P,151675             ;;INITIALIZE A FLAG: DONT PRINT DATES
055310 / 554042,,030342          HLRZ  TAC,JBTBTM(TAC1)       ;;GET LOGIN DATE
055311 / 312040,,024634          CAME  TAC,024634             ;;DID HE LOGIN TODAY?
055312 / 476003,,000000         SETOM            (P)          ;;NO.  FLAG TO PRINT DATES
055313 / 201040,,153667         MOVEI  TAC,153667             ;
055314 / 332003,,000000         SKIPE            (P)          ;;PRINTING DATES?
055315 / 201040,,154057         MOVEI  TAC,154057             ;;YES, LEAVE ROOM FOR DATES
055316 / 260140,,042670         PUSHJ    P,042670             ;;PRINT TITLES
055317 / 200042,,030342          MOVE  TAC,JBTBTM(TAC1)       ;;GET LOGIN DATE/TIME
055320 / 260140,,055327         PUSHJ    P,055327             ;; AND PRINT IT
055321 / 200042,,031343          MOVE  TAC, FTIME(TAC1)       ;;GET DATE/TIME LAST RUN
055322 / 260140,,055327         PUSHJ    P,055327             ;; AND PRINT IT
055323 / 200040,,023423          MOVE  TAC,023423             ;;GET CURRENT DATE/TIME
055324 / 260140,,055327         PUSHJ    P,055327             ;; AND PRINT IT
151763 / 000001,,000001                                       ;
055325 / 274140,,151763           SUB    P,151763             ;;POP FLAG
055326 / 254000,,042667          JRST      042667             ;;PRINT CRLF, AND RETURN
                       PRDATM:
055327 / 336003,,777777         SKIPN      777777(P)          ;;ARE WE PRINTING DATES?
055330 / 254000,,055632          JRST      055632             ;;NO.  JUST PRINT TIME
055331 / 261140,,000002          PUSH    P,000002             ;;YES.
055332 / 261140,,000001          PUSH    P,   TAC             ;
055333 / 554040,,000001          HLRZ  TAC,000001             ;;GET DATE
055334 / 231040,,000037         IDIVI  TAC,000037             ;;CONVERT TO DAY OF MONTH
055335 / 201042,,000001         MOVEI  TAC,     1(TAC1)       ;; WHICH IS THE REMAINDER+1
055336 / 201400,,000040         MOVEI  TEM,000040             ;
055337 / 260140,,055627         PUSHJ    P,055627             ;;PRINT DATE IN 2 COLS PADDING WITH LEADING BLANK
055340 / 201400,,000055         MOVEI  TEM,000055             ;
055341 / 256000,,042674           XCT         TYO             ;
055342 / 262140,,000001           POP    P,   TAC             ;
055343 / 405040,,777777          ANDI  TAC,777777             ;;CLEAR THE DATE HALF OF TAC
055344 / 254000,,055634          JRST      055634             ;;PRINT TIME (no use POPing TAC1 and then PUSHing it)
                       DAYT2:
055345 / 261140,,000005          PUSH    P,000005             ;; SAVE DAT OVER CALL ON DATIME
055346 / 261140,,000004          PUSH    P,000004             ;;AND ITEM		;JS
055347 / 200040,,024634          MOVE  TAC,024634             ;;PICKUP DATE	;REG
055350 / 260140,,055434         PUSHJ    P,055434             ;;CALCULATE
055351 / 231040,,000007         IDIVI  TAC,     7             ;
055352 / 242100,,000001           LSH TAC1,     1             ;
055353 / 201042,,055402         MOVEI  TAC,DAYTAB(TAC1)       ;;LOAD ADDRESS OF ASCIZ STRING
055354 / 260140,,042670         PUSHJ    P,CONMES             ;
055355 / 260140,,042704         PUSHJ    P, PRSPC             ;
055356 / 262140,,000004           POP    P,000004             ;;RESTORE STACK 
055357 / 262140,,000005           POP    P,   DAT             ;
055360 / 200040,,024634          MOVE  TAC,024634             ;;END REG STUFF
055361 / 231040,,000037         IDIVI  TAC,000037             ;
055362 / 250040,,000002          EXCH  TAC,000002             ;;YEAR AND MONTH IN TAC1
055363 / 350000,,000001           AOS      000001             ;;DAY IN TAC
055364 / 260140,,043720         PUSHJ    P,043720             ;;PRINT DAY
055365 / 201040,,000000         MOVEI  TAC,                   ;
055366 / 235040,,000014          DIVI  TAC,000014             ;
055367 / 250040,,000002          EXCH  TAC,  TAC1             ;
055370 / 200041,,037621          MOVE  TAC,MONTAB(TAC)        ;;MONTH
152322 / 000000,,023015                                       ;
152322 / 102500,,023015 POINT 21,00023015,27                  ;
055371 / 137040,,152322           DPB  TAC,152322             ;
055372 / 201040,,023015         MOVEI  TAC,DAMESS             ;
055373 / 260140,,042670         PUSHJ    P,042670             ;;PRINT DAY
055374 / 201042,,000100         MOVEI  TAC,000100(TAC1)       ;
055375 / 260140,,043720         PUSHJ    P,043720             ;;PRINT YEAR
055376 / 260140,,042704         PUSHJ    P,042704             ;;ADD SPACES
055377 / 550040,,023423          HRRZ  TAC,023423             ;;PRINT TIME OF DAY
055400 / 260140,,055633         PUSHJ    P,PDTIME             ;
055401 / 254000,,042667          JRST        CRLF             ;
                       DAYTAB:
                       MONTHB:
055420 / 000000,,000000                                       ;;JAN
055421 / 000000,,000037                                       ;;FEB
055422 / 000000,,000073                                       ;;MAR
055423 / 000000,,000132                                       ;;APR
055424 / 000000,,000170                                       ;;MAY
055425 / 000000,,000227                                       ;;JUN
055426 / 000000,,000265                                       ;;JUL
055427 / 000000,,000324                                       ;;AUG
055430 / 000000,,000363                                       ;;SEP
055431 / 000000,,000421                                       ;;OCT
055432 / 000000,,000460                                       ;;NOV
055433 / 000000,,000516                                       ;;DEC
                       ;CALL WITH TAC SET UP W/ SYSTEM FORMAT DATE.
                       ;RETURN W/ TAC= NUMBER OF DAYS SINCE JAN 1, 1964
                       ;TAC1 AND AC2 CLOBBERED
                       DAYCNT:
055434 / 231040,,000037         IDIVI  TAC,000037             ;;DAY OF THE MONTH IN TAC1
055435 / 201242,,000001         MOVEI  DAT,     1(TAC1)       ;;DAY INTO DAT
055436 / 231040,,000014         IDIVI  TAC,000014             ;;MONTHS IN TAC1, YEARS IN TAC
055437 / 270242,,055420           ADD  DAT,MONTHB(TAC1)       ;;ADD NUMBER OF DAYS BEFORE THE 1st OF MONTH
055440 / 606040,,000003          TRNN  TAC,000003             ;;SKIP UNLESS LEAP YEAR
055441 / 305100,,000002         CAIGE TAC1,000002             ;;LY. SKIP IF AFTER FEBRUARY
055442 / 275240,,000001          SUBI  DAT,000001             ;;NOT LEAP YEAR. OR BEFORE MARCH
055443 / 201101,,000003         MOVEI TAC1,     3(TAC)        ;
055444 / 242100,,777776           LSH TAC1,777776             ;;NUMBER OF LY SINCE '64 NOT INCLUDING THIS YEAR
055445 / 221040,,000555         IMULI  TAC,000555             ;;NUMBER OF YEARS TIMES 365
055446 / 271042,,000000          ADDI  TAC,      (TAC1)       ;;PLUS NUMBER OF PRIOR LEAP YEARS
055447 / 271045,,000000          ADDI  TAC,      (DAT)        ;;PLUS NUMBER OF DAYS SO FAR THIS YEAR.
055450 / 263140,,000000          POPJ    P,                   ;
                       ;"TIME (JOB NO.)" - PRINT TOTAL AND INCREMENTAL RUNNING TIME FOR A JOB
                       ;"TIME 0" IMPLIES RUNTIME FOR NULL JOB AND THE TOTAL TIME SPENT SHUFFLING USERS
                       ;	IF NO JOB NO. GIVEN-TIME WILL BE FOR CURRENTLY LOGGEN IN JOB NO.
                       RUNTIM:
055451 / 260140,,042747         PUSHJ    P,042747             ;;GET JOB NO. ARG.
055452 / 254000,,055513          JRST      055513             ;;NO ARG. GIVEN
055453 / 254000,,042645          JRST      042645             ;;ILLEGAL DECIMAL CHARACTER RETURN
055454 / 322100,,055515         JUMPE TAC1,055515             ;;RUNTIME 0 GIVEN?
055455 / 301100,,000100          CAIL TAC1,000100             ;;JOB NO. TOO BIG?
055456 / 254000,,052440          JRST      052440             ;;YES, ILLEGAL JOB NUMBER
                       CRUN3:
055457 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;;IS THIS A REAL JOB WE HAVE HERE?
055460 / 603040,,040000          TLNE  TAC,040000             ;;SKIP IF NO NUMBER ASSIGNED.
055461 / 603040,,001000          TLNE  TAC,001000             ;;THERE IS A JOB HERE. SKIP IF NOT A SEGMENT
055462 / 254000,,052440          JRST      052440             ;;NO JOB OR A SEGMENT. PRINT NO SUCH JOB.
055463 / 260140,,042676         PUSHJ    P,042676             ;;PRINT TITLES
055475 / 200042,,031243          MOVE  TAC, TTIME(TAC1)       ;;CPU TIME SINCE LAST LOGIN
055476 / 260140,,055601         PUSHJ    P,055601             ;;PRINT COMPUTE TIME USED
055477 / 200042,,031243          MOVE  TAC, TTIME(TAC1)       ;;CALCULATE INCREMENTAL RUN TIME
055500 / 274042,,031143           SUB  TAC, RTIME(TAC1)       ;
055501 / 260140,,055601         PUSHJ    P,055601             ;; AND PRINT IT
055502 / 200042,,031243          MOVE  TAC, TTIME(TAC1)       ;
055503 / 316200,,000002          CAMN    J,000002             ;;PRINTING TIME OUT FOR OWN JOB?
055504 / 202042,,031143         MOVEM  TAC, RTIME(TAC1)       ;;YES.  RESET INCREMENTAL TIME.
055505 / 335042,,031543        SKIPGE  TAC,JBTWAT(TAC1)       ;;GET TIME WAITING FOR SYSTEM
055506 / 270040,,024635           ADD  TAC,024635             ;;MAKE THIS TIME REAL
055507 / 260140,,055601         PUSHJ    P,055601             ;; AND PRINT IT
055510 / 200042,,030242          MOVE  TAC,JBTKCJ(TAC1)       ;;GET KILO-CORE-JIFFIES USED
055511 / 231040,,000074         IDIVI  TAC,000074             ;; AND CONVERT TO KILO-CORE-SECONDS
055512 / 254000,,052166          JRST      052166             ;; AND PRINT IT WITH A CRLF AND RETURN
                       CRUN1:
055513 / 332100,,000004         SKIPE TAC1,000004             ;;LOGGED IN?
055514 / 254000,,055457          JRST      055457             ;;YES.  GIVE HIM HIS OWN TIME.
                       CRUN2:
055515 / 260140,,042676         PUSHJ    P,042676             ;;"TIME 0" OR UNLOGGED IN "TI"
055517 / 200040,,024635          MOVE  TAC,UPTIME             ;
055520 / 231040,,007020         IDIVI  TAC,007020             ;;CONVERT TO MINUTES
055521 / 231040,,000074         IDIVI  TAC,000074             ;;CALCULATE HOURS
055522 / 261140,,000002          PUSH    P,000002             ;;SAVE MINUTES
055523 / 260140,,043720         PUSHJ    P,043720             ;;PRINT HOURS
055524 / 260140,,042676         PUSHJ    P,INLMES             ;
055526 / 262140,,000001           POP    P,000001             ;;RETRIEVE MINUTES
055527 / 260140,,043720         PUSHJ    P,043720             ;;PRINT MINUTES
055530 / 260140,,042676         PUSHJ    P,INLMES             ;
055534 / 200040,,026104          MOVE  TAC,026104             ;;NO. WORDS SHUFFLED
055535 / 000000,,000264                                       ;
055535 / 231040,,012663         IDIVI  TAC,012663             ;;ABOUT THIS MANY WORDS PER TICK.
055536 / 260140,,055557         PUSHJ    P,055557             ;;PRINT AS A PERCENTAGE OF UPTIME
055537 / 260140,,042676         PUSHJ    P,INLMES             ;
055542 / 200040,,031243          MOVE  TAC,031243             ;;GET NULL TIME
055543 / 260140,,055557         PUSHJ    P,055557             ;;AND PRINT AS A PERCENTAGE OF UPTIME
055544 / 260140,,042676         PUSHJ    P,INLMES             ;
055547 / 200040,,024636          MOVE  TAC,INTIME             ;
055550 / 260140,,055557         PUSHJ    P,PERCNT             ;
055551 / 260140,,042676         PUSHJ    P,INLMES             ;
055554 / 200040,,020701          MOVE  TAC, JLRIT             ;
055555 / 260140,,055561         PUSHJ    P,PERCN1             ;
055556 / 254000,,042667          JRST        CRLF             ;
                       ;ROUTINE TO PRINT A PERCENTAGE OF UPTIME IN FORM "DD.D%"
                       ;CALL WITH TIME (IN TICKS) IN TAC: PUSHJ P,PERCNT
                       PERCNT:
055557 / 221040,,001750         IMULI  TAC,001750             ;
055560 / 230040,,024635          IDIV  TAC,UPTIME             ;
                       PERCN1:
055561 / 231040,,000012         IDIVI  TAC,000012             ;;CALCULATE PERCENTAGE
055562 / 261140,,000002          PUSH    P,000002             ;;SAVE FRACTION
055563 / 260140,,043720         PUSHJ    P,043720             ;;PRINT INTEGRAL PART OF PERCENTAGE
055564 / 260140,,042716         PUSHJ    P,042716             ;;PRINT A PERIOD
055565 / 262140,,000010           POP    P,   TEM             ;
055566 / 271400,,000060          ADDI  TEM,000060             ;
055567 / 256000,,042674           XCT      042674             ;;PRINT TENTHS OF A PERCENT
055570 / 201400,,000045         MOVEI  TEM,000045             ;
055571 / 256000,,042674           XCT      042674             ;;PRINT PERCENT SIGN
055572 / 263140,,000000          POPJ    P,                   ;
                       PR2SP:
055573 / 201400,,000040         MOVEI  TEM,000040             ;
055574 / 256000,,042674           XCT         TYO             ;
                       TYOPOP:
055575 / 256000,,042674           XCT      042674             ;;PRINT TWO SPACES AFTER TIME
055576 / 263140,,000000          POPJ    P,                   ;
                       PRCOLN:
055577 / 201400,,000072         MOVEI  TEM,000072             ;;PRINT COLON
055600 / 254000,,055575          JRST      TYOPOP             ;
                       ;ROUTINE TO PRINT A TIME IN FORMAT "H:MM:SS'TT  " (HOURS, MINS, SECS, TICKS)
                       ;CALL WITH TIME IN TICKS IN TAC.  PRESERVES TAC1!
                       PRTIME:
055601 / 261140,,000002          PUSH    P,  TAC1             ;
055602 / 231040,,645700         IDIVI  TAC,645700             ;;HOURS INTO TAC
055603 / 322040,,055607         JUMPE  TAC,055607             ;;PRINT 2 SPACES INSTEAD OF 0: FOR HOURS
055604 / 260140,,043720         PUSHJ    P,RADX10             ;
055605 / 260140,,055577         PUSHJ    P,055577             ;;PRINT COLON
055606 / 644400,,000012          TRCA  TEM,000012             ;;MAKE SURE MINUTES GET PADDED WITH 0 IF NECESSARY
                       PRTIM1:
055607 / 260140,,055573         PUSHJ    P,055573             ;;PRINT 2 SPACES
055610 / 200040,,000002          MOVE  TAC,  TAC1             ;
055611 / 231040,,007020         IDIVI  TAC,007020             ;;MINUTES INTO TAC
055612 / 260140,,055627         PUSHJ    P,PRTIM3             ;
055613 / 260140,,055577         PUSHJ    P,PRCOLN             ;
055614 / 200040,,000002          MOVE  TAC,  TAC1             ;
055615 / 231040,,000074         IDIVI  TAC,000074             ;;SECONDS INTO TAC
055616 / 260140,,055626         PUSHJ    P,055626             ;;PRINT WITH LEADING 0 IF NECESSARY
055617 / 201400,,000047         MOVEI  TEM,000047             ;;USE RIGHT QUOTE TO PUNCTUATE TICKS
055620 / 256000,,042674           XCT         TYO             ;
055621 / 200040,,000002          MOVE  TAC,000002             ;;TICKS INTO TAC
055622 / 260140,,055626         PUSHJ    P,PRTIM2             ;
055623 / 260140,,055573         PUSHJ    P, PR2SP             ;
055624 / 262140,,000002           POP    P,000002             ;;RESTORE TAC1 FROM STACK
055625 / 263140,,000000          POPJ    P,                   ;;AND RETURN
                       PRTIM2:
055626 / 201400,,000060         MOVEI  TEM,000060             ;;PAD WITH LEADING 0 IF NECESSARY
                       PRTIM3:
055627 / 305040,,000012         CAIGE  TAC,000012             ;;ANY PADDING NEEDED?
055630 / 256000,,042674           XCT      042674             ;;YES.  ONE CHARACTER OF PADDING PLEASE
055631 / 254000,,043720          JRST      043720             ;;NOW PRINT TAC AS DECIMAL NUMBER AND RETURN
                       ;ROUTINE TO PRINT TIME OF DAY IN FORMAT "HH:MM  "
                       ;CALL WITH TIME IN SECONDS IN TAC.  PRESERVES TAC1
                       PDTIM0:
055632 / 405040,,777777          ANDI  TAC,777777             ;;CLEAR DATE IN LEFT HALF OF TAC
                       PDTIME:
055633 / 261140,,000002          PUSH    P,000002             ;;SAVE TAC1
                       PDTIM1:
055634 / 231040,,007020         IDIVI  TAC,007020             ;;HOURS INTO TAC
055635 / 260140,,055626         PUSHJ    P,055626             ;;PRINT HOURS WITH LEADING 0 IF NECESSARY
055636 / 260140,,055577         PUSHJ    P,PRCOLN             ;
055637 / 200040,,000002          MOVE  TAC,  TAC1             ;
055640 / 231040,,000074         IDIVI  TAC,000074             ;;MINUTES INTO TAC
055641 / 260140,,055626         PUSHJ    P,055626             ;;PRINT MINUTES WITH LEADING 0 IF NECESSARY
055642 / 260140,,055573         PUSHJ    P,055573             ;;PRINT 2 SPACES
055643 / 262140,,000002           POP    P,000002             ;;RESTORE TAC1
055644 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO LET TTY TALK TO ANY OTHER RING OF TTYS
                       ;	"TALK TTYN"
                       ;	TTYN NEED NEVER HAVE BEEN TYPED ON BEFORE
                       TALK:
055645 / 260140,,042550         PUSHJ  PDP,042550             ;;GET ARGUMENT
055646 / 322100,,055655         JUMPE TAC1,055655             ;;NONE SPECIFIED
055647 / 200040,,000002          MOVE  TAC,  TAC1             ;
055650 / 260140,,044663         PUSHJ  PDP,044663             ;;SEARCH FOR DEVICE
055651 / 254000,,055657          JRST      055657             ;;NONE AVAIL
055652 / 260140,,137732         PUSHJ  PDP,TTYTLK             ;
055653 / 254000,,055657          JRST       TALK1             ;
055654 / 263140,,000000          POPJ  PDP,                   ;
                       TALK2:
055655 / 202203,,777777         MOVEM ITEM,777777(PDP)        ;
055656 / 254000,,042706          JRST      NOTENF             ;
                       TALK1:
055657 / 200303,,777776          MOVE DEVDAT,777776(PDP)        ;; RESTORE TTY DDB
055660 / 205200,,000400         MOVSI ITEM,000400             ;; SET FLAGS TO PRINT RESPONSE
055661 / 202203,,777777         MOVEM ITEM,777777(PDP)        ;
055662 / 265040,,042666           JSP  TAC,ERRMES             ;
                       ;"EXAMINE LOC" - LOOKS A CONTENTS OF LOC AND PRINTS IN OCTAL
                       ;IF LOC IS MISSING, NEXT LOC IS PRINTED
                       ;TAB. IS PRINTED INSTEAD OF CRLF(LIKE DDT)
                       ECOM:
055665 / 260140,,042752         PUSHJ  PDP,042752             ;;GET OCTAL LOCATION
055666 / 254000,,055714          JRST      055714             ;;NO ARG - GET CURRENT LOC
055667 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
                       ECOM1:
055670 / 260140,,055716         PUSHJ    P,055716             ;;GET SET UP
055671 / 255000,,000000          JFCL                         ;
055672 / 557000,,000001         HLRZS      000001             ;;GET RELOCATION IN RIGHT HALF OF TAC
055673 / 261140,,000001          PUSH  PDP,000001             ;;PUSH IT
055674 / 260140,,056017         PUSHJ  PDP,056017             ;;CHECK FOR AC REFERENCE
055675 / 275117,,000000          SUBI TAC1,      (AC3)        ;;MAKE REL TO APPROP SEG
055676 / 272103,,000000          ADDM TAC1,      (PDP)        ;;RELOCATE ADDR
055677 / 550047,,000123          HRRZ  TAC,JOBEXM(JDAT)       ;;PRINT LOC BEING EXAMINED
055700 / 260140,,043700         PUSHJ  PDP,OCTPNT             ;
055701 / 260140,,042676         PUSHJ  PDP,042676             ;;PRINT SLASH TAB
055703 / 554063,,000000          HLRZ  TAC,@      (PDP)       ;;PRINT LEFT HALF
055704 / 260140,,043700         PUSHJ  PDP,OCTPNT             ;
055705 / 260140,,042676         PUSHJ  PDP,042676             ;;PRINT SPACE
055707 / 550063,,000000          HRRZ  TAC,@      (PDP)       ;;PRINT RIGHT HALF
055710 / 260140,,043700         PUSHJ  PDP,OCTPNT             ;
055711 / 260140,,042676         PUSHJ  PDP,042676             ;;PRINT FINAL TAB
055713 / 254000,,037376          JRST       TPOPJ             ;
                       ;HERE WE GET THE LAST LOC+1. NOTE WE DO NOT CHANGE JOBEXM YET SINCE WE MAY
                       ;GO TO DLYCOM FROM TESTIN AND DON'T WANT TO AOS IT SEVERAL TIMES.
                       ECOM2:
055714 / 200107,,000123          MOVE TAC1,JOBEXM(PROG)       ;
055715 / 344100,,055670          AOJA TAC1, ECOM1             ;
                       ;SETUP ROUTINE FOR EXAMINE/DEPOSIT COMMANDS
                       ;ADDRESS CHECKS, AND WAITS FOR SWAP (VIA DLYCOM) IF NEEDED FOR UPPER
                       ;EXECUTES INSTRUCTION FOLLOWING CALL IF WRITE-PROTECTED UPPER
                       TESTIN:
055716 / 405100,,777777          ANDI TAC1,777777             ;;FLUSH EXTRANEOUS GARBAGE
055717 / 201740,,000000         MOVEI  AC3,                   ;;INITIALLY ASSUME LOWER
055720 / 204044,,027120          MOVS  TAC,JBTADR(ITEM)       ;;PROT. RELOC.
055721 / 307101,,000000          CAIG TAC1,      (TAC)        ;;LEGAL LOC
055722 / 254000,,037401          JRST      037401             ;;YES, GO ON.
055723 / 201741,,000001         MOVEI  AC3,     1(TAC)        ;;COMPUTE POSSIBLE UPPER ORIGIN
055724 / 135640,,037600           LDB  AC1,037600             ;;# OF UPPER
055725 / 322640,,055757         JUMPE  AC1,055757             ;;NONE
055726 / 200715,,026114          MOVE  AC2,JBTSTS(AC1)        ;
055727 / 603700,,000001          TLNE  AC2,000001             ;;IF WRITE-PROTECTED,
055730 / 256023,,000000           XCT      @      (P)         ;;CHECK LEGALITY BEFORE TRYING TO SWAP
055731 / 332055,,027120         SKIPE  TAC,JBTADR(AC1)        ;;PROT. RELOC OF UPPER
055732 / 254000,,055736          JRST      TESTU1             ;
055733 / 135040,,037612           LDB  TAC,037612             ;;SWAPPED OUT, GET SIZE
055734 / 240040,,000012           ASH  TAC,000012             ;;MAKE IT WORDS
055735 / 364040,,055737          SOJA  TAC,055737             ;;MAKE IT HONEST
                       TESTU1:
055736 / 204040,,000001          MOVS  TAC,   TAC             ;
055737 / 305740,,400000         CAIGE  AC3,400000             ;
055740 / 201740,,400000         MOVEI  AC3,400000             ;;AC3 IS NOW ORIGIN OF UPPER
055741 / 271057,,000000          ADDI  TAC,      (AC3)        ;;RELOCATE PROT TO UPPER
055742 / 301117,,000000          CAIL TAC1,      (AC3)        ;
055743 / 303101,,000000         CAILE TAC1,      (TAC)        ;;LEGAL
055744 / 254000,,055757          JRST      055757             ;;NO
055745 / 607700,,002000          TLNN  AC2,002000             ;;IS UPPER IN CORE
055746 / 254000,,037401          JRST      CPOPJ1             ;
055747 / 205040,,000002         MOVSI  TAC,JHLDIN             ;
055750 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;KEEP US IN
055751 / 250200,,000015          EXCH    J,   AC1             ;
055752 / 205040,,100000         MOVSI  TAC,COMSNB             ;
055753 / 260140,,066763         PUSHJ    P,066763             ;;AND GET HIM IN
055754 / 200200,,000015          MOVE    J,   AC1             ;
055755 / 262143,,000000           POP    P,      (P)          ;
055756 / 254000,,056362          JRST      056362             ;;AND DELAY
                       ECOMP:
055757 / 262140,,000001           POP    P,000001             ;;POP OFF RETURN
                       ECOMA:
055760 / 265040,,042666           JSP  TAC,042666             ;;ILLEGAL MEMORY REFERENCE
                       ;"DEPOSIT LH RH LOC" - DEPOSITS XWD LH,RH IN LOCATION LOC
                       ;IF LOC IS MISSING ASSUMB CURRENT LOC
                       DCOM:
055765 / 260140,,042752         PUSHJ  PDP,042752             ;;GET LH
055766 / 254000,,042706          JRST      042706             ;;NOT ENOUGH ARGUMENTS
055767 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
055770 / 506100,,000000          HRLM TAC1,                   ;;SAVE
055771 / 260140,,042752         PUSHJ  PDP,042752             ;;GET RH
055772 / 254000,,042706          JRST      042706             ;;NOT ENOUGH ARGUMENTS
055773 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
055774 / 542100,,000000          HRRM TAC1,                   ;;SAVE RH
055775 / 260140,,042752         PUSHJ  PDP,042752             ;;GET LOC
055776 / 334107,,000123         SKIPA TAC1,JOBEXM(JDAT)       ;;NOT SPECIFIED (DEPOSIT THIS)!
055777 / 254000,,042645          JRST      042645             ;;ILLEGAL CHARACTER
056000 / 260140,,055716         PUSHJ    P,055716             ;;RETURN IF READY FOR DEPOSIT.
056001 / 254000,,055757          JRST      055757             ;;LOSE IF WRITE-PROT
056002 / 305100,,000020         CAIGE TAC1,000020             ;;IN USER ACS
056003 / 254000,,056006          JRST      056006             ;
056004 / 307100,,000114          CAIG TAC1,000114             ;;NO, GREATER THAN HIGHEST LOC. PROTECTED
                       ;FROM IO IN JOB DATA AREA?
056005 / 254000,,055760          JRST       ECOMA             ;
056006 / 502043,,000000          HLLM  TAC,      (PDP)        ;;SAVE RELOCATION
056007 / 260140,,056017         PUSHJ  PDP,056017             ;;CHECK FOR AC REFERENCE
056010 / 554043,,000000          HLRZ  TAC,      (PDP)        ;;GET RELOCATION
056011 / 275117,,000000          SUBI TAC1,      (AC3)        ;;ADJUST ADR FOR POSSIBLE SEGMENT
056012 / 270100,,000001           ADD TAC1,   TAC             ;
056013 / 202020,,000002         MOVEM      @  TAC1            ;
056014 / 322740,,056016         JUMPE  AC3,056016             ;;UPPER?
056015 / 476015,,032043         SETOM       STIME(AC1)        ;;YES, MARK IT ALTERED (LOWER WAS GOTTEN BY DEAT)
056016 / 263140,,000000          POPJ  PDP,                   ;
                       DEAT:
056017 / 202107,,000123         MOVEM TAC1,JOBEXM(JDAT)       ;;STORE FOR NEXT TIME
056020 / 476004,,032043         SETOM       STIME(J)          ;;AND NOTE THIS CORE IMAGE CHANGED
056021 / 200047,,000073          MOVE  TAC, JOBPC(JDAT)       ;
056022 / 316200,,024061          CAMN    J,024061             ;;MIGHT BE RUNNING IF HE SAID CCONT ETC.
056023 / 200040,,024067          MOVE  TAC, USRPC             ;
056024 / 301100,,000020          CAIL TAC1,000020             ;;IS IT AN AC?
056025 / 263140,,000000          POPJ  PDP,                   ;;NO
056026 / 603040,,010000          TLNE  TAC,010000             ;;USER MODE?
056027 / 271100,,000020          ADDI TAC1,000020             ;;YES USER ACS ARE HERE
056030 / 263140,,000000          POPJ  PDP,                   ;
                       ;"BLANK" OR NO ALPHA NUMERIC BEFORE BREAK CHAR COMMAND
                       ;DISPATCHED TO LIKE ANY OTHER COMMAND(O IN COMMAND TABLE)
                       CBLANK:
056031 / 302400,,000012          CAIE  TEM,000012             ;; WAS BREAK A L.F.?
056032 / 306400,,000073          CAIN  TEM,   073             ;;;replaced;;	CAIN TEM,";"	;NO, IS IT SEMI COLON(MONITOR COMMENT)
056033 / 263140,,000000          POPJ  PDP,                   ;;YES, IGNORE
                       ;FALL IN UNKNOWN COMMAND
                       ;COMMAND NOT IN COMMAND DIRECTORY
                       NOCOM:
056034 / 254000,,042646          JRST      042646             ;;NO, APPEND ? TO WHAT HE TYPED IN
                       ; "FINISH DEVICE" - CLOSES,RELEASE AND DEASSIGNS DEVICE
                       FINIS:
056035 / 322340,,037403         JUMPE PROG,037403             ;; NO CORE, NO FINISH!
056036 / 260140,,042552         PUSHJ  PDP,042552             ;; READ IN THE DEVICE NAME
056037 / 202107,,000132         MOVEM TAC1,JOBFDV(JDAT)       ;; SAVE THE SIXBIT OF THE DEVICE NAME
056040 / 205040,,000040         MOVSI  TAC,000040             ;; PUT TTY INTO USER MODE
056041 / 436043,,777777          IORM  TAC,777777(P)          ;; TELL COMRET
056042 / 265100,,045773           JSP TAC1,045773             ;; MAKE US A MONITOR JOB
056043 / 265040,,045741           JSP  TAC,045741             ;; NOW GET SOME ACS AND A PDL
056044 / 200047,,000132          MOVE  TAC,JOBFDV(JDAT)       ;; SET UP TO SEARCH FOR THIS DEVICE
056045 / 322040,,056147         JUMPE  TAC,056147             ;; NO DEVICE... FINISH ALL.
                       FIN3:
056046 / 260140,,044670         PUSHJ    P,044670             ;; TRY LOGICAL NAMES FIRST
056047 / 254000,,056053          JRST      056053             ;; NOT FOUND, TRY PHYSICAL NAMES
056050 / 260140,,056071         PUSHJ    P,056071             ;; TRY TO FINISH IT
151752 / 000000,,056047                                       ;
056051 / 261140,,151752          PUSH    P,151752             ;; IF WE RETURN, THAT WASN'T THE RIGHT DEVICE
056052 / 254000,,044676          JRST      044676             ;; CONTINUE SCANNING THE DEVICES
                       FIN1:
056053 / 260140,,044701         PUSHJ    P,044701             ;; SEARCH PHYSICAL NAMES
056054 / 254000,,056062          JRST      056062             ;; NO NAMES, ERROR
056055 / 260140,,056071         PUSHJ    P,FINRDV             ;
151753 / 000000,,056054                                       ;
056056 / 261140,,151753          PUSH    P,151753             ;
056057 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;
056060 / 607640,,000010          TLNN  AC1, DVTTY             ;
056061 / 254000,,044713          JRST      044713             ;; SEARCH FOR ANOTHER DEVICE OF SAME NAME
                       FIN2:
056062 / 260140,,137612         PUSHJ    P,137612             ;; GET A TTY FOR US
056063 / 260140,,042676         PUSHJ    P,042676             ;; GIVE AN ERROR MESSAGE
056067 / 260140,,042713         PUSHJ    P,PRCRCC             ;
056070 / 254000,,056102          JRST      056102             ;; LEAVE TTY IN COMMAND MODE,
                       ; STOP JOB, AND RESCHEDULE
                       ; ROUTINE TO FINISH A DEVICE BY RELEASING IT
                       ; IT FIRST MATCHES IT TO A DEVICE DATA BLOCK IN USRJDA
                       FINRDV:
056071 / 335513,,024066        SKIPGE UCHN,USRHCU(PID)        ;
056072 / 254000,,056062          JRST      056062             ;; NO CHANNELS, NO DEVICES
                       ;BEWARE- YOU'D BETTER BE RUNNING ON P1
                       FINRD1:
056073 / 550652,,024071          HRRZ  AC1,USRJDA(UCHN)       ;; GET DDB ADDRESS
056074 / 312640,,000006          CAME  AC1,000006             ;; IS THIS IT
056075 / 365500,,056073         SOJGE UCHN,056073             ;; NO, GET ANOTHER
056076 / 321500,,056123         JUMPL UCHN,056123             ;; IF NOTHING FOUND, CHECK IO PDL
056077 / 260140,,056104         PUSHJ    P,056104             ;;RELEASE IT
                       FINRD2:
056100 / 260140,,137612         PUSHJ    P,137612             ;; GET A TTY
056101 / 260140,,042713         PUSHJ    P,PRCRCC             ;
                       FINXIT:
056102 / 260140,,137704         PUSHJ    P,137704             ;; KEEP THE TTY IN COMMAND MODE
056103 / 254000,,045550          JRST      045550             ;; STOP THE JOB NOW
                       FINREL:
056104 / 261140,,000012          PUSH    P,  UCHN             ;
056105 / 071000,,000000        RELEAS                         ;
056105 / 205600,,071000         MOVSI  UUO,      (<RELEAS>)   ;; NOW SET UP TO RELEASE IT
056106 / 137500,,037573           DPB UCHN,PUUOAC             ;
056107 / 200506,,000004          MOVE UCHN,DEVMOD(DDB)        ;
056110 / 602500,,400000          TRNE UCHN,400000             ;;WILL DDB BE THERE AFTER RELEASE?
056111 / 254000,,056115          JRST      056115             ;;YES
056112 / 256000,,000014           XCT      000014             ;; RELEASE THE DEVICE
                       FINRL2:
056113 / 262140,,000012           POP    P,  UCHN             ;
056114 / 263140,,000000          POPJ    P,                   ;
                       FINRL1:
056115 / 261140,,000006          PUSH    P,   DDB             ;
056116 / 256000,,000014           XCT         UUO             ;
056117 / 262140,,000006           POP    P,   DDB             ;
056120 / 205500,,400000         MOVSI UCHN,400000             ;; CLEAR DIRECTORY IN CORE BIT
056121 / 412506,,000004        ANDCAM UCHN,DEVMOD(DDB)        ;
056122 / 254000,,056113          JRST      FINRL2             ;
                       FINSTK:
056123 / 200213,,024061          MOVE    J,   JOB(PID)        ;
056124 / 331504,,032565         SKIPL UCHN,JBTIOP(J)          ;
056125 / 263140,,000000          POPJ    P,                   ;;NOTHING ON STACK
                       FINST1:
056126 / 550652,,000000          HRRZ  AC1,      (UCHN)       ;
056127 / 312640,,000006          CAME  AC1,   DDB             ;
056130 / 254000,,056144          JRST      FINST2             ;
056131 / 200300,,024071          MOVE  DDB,USRJDA             ;
056132 / 250312,,000000          EXCH  DDB,      (UCHN)       ;
056133 / 202300,,024071         MOVEM  DDB,USRJDA             ;
056134 / 261140,,000012          PUSH    P,  UCHN             ;
056135 / 201500,,000000         MOVEI UCHN,                   ;
056136 / 260140,,056104         PUSHJ    P,FINREL             ;
056137 / 262140,,000012           POP    P,  UCHN             ;
056140 / 200312,,000000          MOVE  DDB,      (UCHN)       ;
056141 / 250300,,024071          EXCH  DDB,USRJDA             ;
056142 / 202312,,000000         MOVEM  DDB,      (UCHN)       ;
056143 / 254000,,056100          JRST      FINRD2             ;
                       FINST2:
151763 / 000001,,000001                                       ;
056144 / 270500,,151763           ADD UCHN,151763             ;
056145 / 253500,,056126         AOBJN UCHN,FINST1             ;
056146 / 263140,,000000          POPJ    P,                   ;
                       FINALL:
056147 / 335513,,024066        SKIPGE UCHN,USRHCU(PID)        ;;SEE IF HE HAS CHANNELS OPEN
056150 / 254000,,056154          JRST      056154             ;;NONE LEFT OPEN.
                       FINAL1:
056151 / 332312,,024071         SKIPE DEVDAT,USRJDA(UCHN)       ;;IS THERE ANYONE HERE?
056152 / 260140,,056104         PUSHJ    P,FINREL             ;
056153 / 365500,,056151         SOJGE UCHN,FINAL1             ;
                       FINAL3:
056154 / 200213,,024061          MOVE    J,   JOB(PID)        ;;DEPARTMENT OF REDUNDANCY DEPARTMENT
056155 / 331504,,032565         SKIPL UCHN,JBTIOP(J)          ;;ANY IO PDL?
056156 / 254000,,056174          JRST      FINST3             ;
                       FINST4:
056157 / 336312,,000000         SKIPN  DDB,      (UCHN)       ;
056160 / 254000,,056167          JRST      FINST5             ;
056161 / 402012,,000000         SETZM            (UCHN)       ;
056162 / 202300,,024071         MOVEM  DDB,USRJDA             ;
056163 / 261140,,000012          PUSH    P,  UCHN             ;
056164 / 400500,,000000          SETZ UCHN,                   ;
056165 / 260140,,056104         PUSHJ    P,FINREL             ;
056166 / 262140,,000012           POP    P,  UCHN             ;
                       FINST5:
151763 / 000001,,000001                                       ;
056167 / 270500,,151763           ADD UCHN,151763             ;
056170 / 253500,,056157         AOBJN UCHN,FINST4             ;
056171 / 550644,,032565          HRRZ  AC1,JBTIOP(J)          ;
056172 / 402004,,032565         SETZM      JBTIOP(J)          ;
056173 / 260140,,074163         PUSHJ    P,FSGIVE             ;
                       FINST3:
056174 / 260140,,056176         PUSHJ    P, FKALL             ;
056175 / 254000,,056100          JRST      FINRD2             ;
                       ;HERE WE CHASE THROUGH ALL THE DDBS AND MAKE SURE NONE OF THEM BELONG TO THIS JOB
                       ;FINISH (BY SUPPRESS CLOSE OUTPUT) ANY THAT MAY BE HUNG-OVER
                       FKALL:
056176 / 201300,,000605         MOVEI  DDB,000605             ;
                       FKALL1:
056177 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;
056200 / 322300,,037403         JUMPE  DDB, CPOPJ             ;
056201 / 135640,,037575           LDB  AC1, PJOBN             ;
056202 / 302644,,000000          CAIE  AC1,      (J)          ;
056203 / 254000,,056177          JRST      FKALL1             ;
056204 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;
056205 / 606640,,200000          TRNN  AC1,200000             ;;SKIP IF ASSIGNED BY PROGRAM.
056206 / 254000,,056177          JRST      056177             ;;NO.
056207 / 202300,,024071         MOVEM  DDB,024071             ;;SAVE DDB POINTER. (CHANNEL 0)
056210 / 205640,,400000         MOVSI  AC1,400000             ;
056211 / 412646,,000004        ANDCAM  AC1,DEVMOD(DDB)        ;
056212 / 070000,,000003         CLOSE      000003             ;;CLOSE CHANNEL 0. INHIBIT INPUT/OUTPUT CLOSE
056213 / 071000,,000003        RELEAS      000003             ;;RELEASE CHANNEL 0. INHIBIT I/O CLOSE
056214 / 254000,,056176          JRST      056176             ;;START OVER FROM THE FRONT OF DEVICE CHAIN
                       ;"RESOURCES" - PRINT OUT AVAILABLE DEVICES AND FREE BLOCKS ON THE DISK
                       FREDEV:
                       ;JS
056215 / 260140,,042676         PUSHJ    P,INLMES             ;
056217 / 201700,,000000         MOVEI  AC2,                   ;;UNIT 0 IS DSK, NOT UDP
                       FRUDP1:
056220 / 201116,,000000         MOVEI TAC1,      (AC2)        ;
056221 / 260140,,077427         PUSHJ    P,077427             ;; GET FREE BLOCK COUNT FROM DISK SERVICE ROUTINE
056222 / 260140,,043720         PUSHJ    P,043720             ;;CONVERT TO DECIMAL
                       FRUDP2:
056223 / 271700,,000001          ADDI  AC2,000001             ;;NOW DO THE SAME FOR UDPS
056224 / 303700,,000001         CAILE  AC2,UPACKS             ;
056225 / 254000,,056253          JRST      056253             ;;NO MORE UDPS
056226 / 260140,,042676         PUSHJ    P,INLMES             ;
056230 / 200056,,011745          MOVE  TAC,DKDBML(AC2)        ;;ELSE GET NAME
056231 / 200101,,000000          MOVE TAC1,      (TAC)        ;
056232 / 260140,,043730         PUSHJ    P,PRNAME             ;
056233 / 332056,,011733         SKIPE  TAC,SATADR(AC2)        ;
056234 / 260140,,056320         PUSHJ    P,056320             ;;TYPE SATID IF ANY
056235 / 201040,,153330         MOVEI  TAC,153330             ;
056236 / 332016,,011751         SKIPE      011751(AC2)        ;
056237 / 201040,,153336         MOVEI  TAC,153336             ;
056240 / 331016,,011750         SKIPL      011750(AC2)        ;
056241 / 201040,,153334         MOVEI  TAC,153334             ;
056242 / 332016,,011750         SKIPE      011750(AC2)        ;
056243 / 254000,,056247          JRST      FRUDP3             ;
056244 / 201040,,153732         MOVEI  TAC,153732             ;
056245 / 332016,,011751         SKIPE      011751(AC2)        ;
056246 / 201040,,153612         MOVEI  TAC,153612             ;
                       FRUDP3:
056247 / 260140,,042670         PUSHJ    P,CONMES             ;
056250 / 332016,,011733         SKIPE      SATADR(AC2)        ;
056251 / 254000,,056220          JRST      FRUDP1             ;
056252 / 254000,,056223          JRST      FRUDP2             ;
                       FRUDP9:
056253 / 260140,,042676         PUSHJ    P,INLMES             ;
056256 / 200040,,014566          MOVE  TAC,014566             ;;GET NBR OF DD CHANNELS LEFT
056257 / 260140,,043720         PUSHJ    P,043720             ;; AND PRINT IT
056260 / 260140,,042676         PUSHJ    P,INLMES             ;
056263 / 200100,,035266          MOVE TAC1,JOBNM1             ;
056264 / 400040,,000000          SETZ  TAC,                   ;
056265 / 205700,,040000         MOVSI  AC2,   JNA             ;
                       LOP03:
056266 / 616702,,026114          TDNN  AC2,JBTSTS(TAC1)       ;;IS THIS JOB SLOT AVAILABLE?
056267 / 271040,,000001          ADDI  TAC,000001             ;;YES
056270 / 367100,,056266          SOJG TAC1,056266             ;;CHECK NEXT SLOT
056271 / 260140,,052166         PUSHJ    P,052166             ;;PRINT NUMBER OF JOB SLOTS AVAILABLE
151675 / 000000,,000000                                       ;
056272 / 261140,,151675          PUSH    P,151675             ;
056273 / 554640,,000610          HLRZ  AC1,000610             ;;GET DDB POINTER
                       LOP01:
056274 / 201700,,600000         MOVEI  AC2,600000             ;;MASK FOR DEVICE ASSIGNED
056275 / 616715,,000004          TDNN  AC2,DEVMOD(AC1)        ;;ASSIGNED BY CONSOLE OR PROGRAM?
056276 / 260140,,056303         PUSHJ  PDP,056303             ;;DEV NOT ASG-CHECK AND PRINT
056277 / 554655,,000003          HLRZ  AC1,DEVSER(AC1)        ;;GET NEXT DDB
056300 / 326640,,056274         JUMPN  AC1,056274             ;;END OF CHAIN?
056301 / 260140,,042667         PUSHJ    P,042667             ;;YES
056302 / 254000,,037376          JRST      037376             ;;GET THAT EXTRA WORD OFF THE STACK
                       LOP02:
056303 / 200055,,000004          MOVE  TAC,DEVMOD(AC1)        ;;GET DEVICE CHARACTERISTICS
056304 / 603040,,302010          TLNE  TAC,302010             ;;IS IT A TTY OR DSK OR YE OLE IMP?
056305 / 263140,,000000          POPJ  PDP,                   ;;YES - RETURN
                       LOP04:
056306 / 201400,,000054         MOVEI  TEM,000054             ;;AND A COMMA
056307 / 332003,,777777         SKIPE      777777(P)          ;
056310 / 256000,,042674           XCT         TYO             ;
056311 / 200115,,000000          MOVE TAC1,      (AC1)        ;;NO-SET UP TAC1 AGAIN
056312 / 550715,,000003          HRRZ  AC2,DEVSER(AC1)        ;;IS THIS SAME DEVICE AS PREVIOUS ONE?
056313 / 316703,,777777          CAMN  AC2,777777(P)          ;
056314 / 514100,,000002          HRLZ TAC1,000002             ;;YES.  DONT PRINT NAME, ONLY NUMBER
056315 / 202703,,777777         MOVEM  AC2,777777(P)          ;;AND SAVE FOR NEXT DEVICE
056316 / 260140,,043730         PUSHJ    P,043730             ;;GO AND PRINT IT OUT
056317 / 263140,,000000          POPJ    P,                   ;
                       SATTAC:
056320 / 261140,,000001          PUSH    P,000001             ;;SAVE SAT ADDR JUST IN CASE
056321 / 201400,,000050         MOVEI  TEM,   050             ;;;"("		;(SATTAC CALLED BY PJOB FOR UDP)
056322 / 256000,,042674           XCT         TYO             ;
056323 / 262140,,000001           POP    P,   TAC             ;
056324 / 200101,,000002          MOVE TAC1, SATID(TAC)        ;;THIS IS VOLUME ID FOR UDPS
056325 / 260140,,043730         PUSHJ    P,043730             ;;(IBM VOCABULARY TAKES OVER THE WORLD)
056326 / 201400,,000051         MOVEI  TEM,   051             ;;;")"
056327 / 256000,,042674           XCT         TYO             ;
056330 / 263140,,000000          POPJ    P,                   ;
                       ;RUNCHK, DLYCOR, DLYCR1
                       RUNCHK:
056331 / 316200,,026107          CAMN ITEM,026107             ;;SYSTEM TAPE USER?
056332 / 254000,,056362          JRST      056362             ;;YES. DELAY
                       ACTCHK:
056333 / 322340,,056340         JUMPE PROG,056340             ;;DOES JOB HAVE CORE IN MEMORY?
056334 / 603640,,002000          TLNE  AC1,002000             ;;DEC 3.16
056335 / 254000,,056340          JRST      056340             ;;DEC 3.16
056336 / 260140,,071623         PUSHJ  PDP,071623             ;;YES, ARE DEVICES ACTIVE?
056337 / 254000,,056362          JRST      056362             ;;YES, DELAY COMMAND.
                       ACTCH1:
056340 / 200103,,777777          MOVE TAC1,777777(PDP)        ;;RESTORE COMMAND DISPATCH ADDRESS
056341 / 200303,,777776          MOVE  DDB,777776(PDP)        ;;RESTORE TTY DDB ADDRESS
056342 / 200644,,026114          MOVE  AC1,JBTSTS(ITEM)       ;;RESTORE JOB STATUS
056343 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO DELAY A COMMAND
                       ;DELAYS COMMAND TO BE EXECUTED WHEN JOB IN CORE MEMORY
                       ;AND POPS LEVEL UP ONE.
                       DLYCR2:
056344 / 200100,,017712          MOVE TAC1,017712             ;;GET THE LINE NUMBER
056345 / 205040,,400000         MOVSI  TAC,COMBIT             ;
056346 / 700600,,001004          CONO   PI,SCNOFF             ;
056347 / 612042,,032347          TDNE  TAC,TTYTAB(TAC1)       ;
056350 / 370000,,026105           SOS      026105             ;;DECREMENT IF COMMAND BIT WAS SET
056351 / 412042,,032347        ANDCAM  TAC,TTYTAB(TAC1)       ;
056352 / 260140,,137150         PUSHJ    P,COMBCK             ;
056353 / 260140,,137063         PUSHJ    P,CNTCOM             ;
056354 / 700600,,002004          CONO   PI, SCNON             ;
056355 / 263140,,000000          POPJ    P,                   ;
                       DLYCR1:
056356 / 260140,,056344         PUSHJ    P,056344             ;;CLEAR COMBIT
056357 / 254000,,056362          JRST      056362             ;;
                       DLYCOR:
056360 / 260140,,056344         PUSHJ    P,056344             ;;CLEAR COMBIT
                       DLYCM:
056361 / 260140,,045725         PUSHJ  PDP,045725             ;;REQUEUE JOB TO CMWQ 
                       DLYCM1:
056362 / 350000,,036145           AOS      036145             ;;COUNT A DELAYED COMMAND
056363 / 262140,,000001           POP    P,000001             ;;FLUSH THE RETURN TO COMRET
056364 / 262140,,000002           POP    P,000002             ;;AND FLUSH THE COMMAND BITS
056365 / 262140,,000002           POP    P,000002             ;;AND FLUSH THE TTY DDB POINTER.
056366 / 260140,,137020         PUSHJ    P,137020             ;;DELAY PRESENT COMMAND AND GET A NEW COMMAND
056367 / 263140,,000000          POPJ    P,                   ;;THERE ARE NO NEW COMMANDS
056370 / 254000,,051215          JRST      051215             ;;PROCESS A COMMAND.
                       ;SEARCH DEVICE CHAIN FOR DSK WITH COUNTS ON
                       ;CALL	MOVE ITEM,JOB NO
                       ;	PUSHJ PDP,STOPCK
                       ;	CAN'T STOP RETURN
                       ;	OK TO STOP RETURN
                       STOPCK:
056371 / 261140,,000006          PUSH  PDP,DEVDAT             ;
056372 / 201300,,011756         MOVEI DEVDAT,DSKDDB             ;
056373 / 205100,,400100         MOVSI TAC1,DSKFGS             ;
                       STOPD:
056374 / 135040,,037575           LDB  TAC, PJOBN             ;
056375 / 302201,,000000          CAIE ITEM,      (TAC)        ;;ASSIGNED TO THIS JOB?
056376 / 254000,,056401          JRST      056401             ;;NO
056377 / 612106,,000002          TDNE TAC1,DEVIOS(DEVDAT)     ;;DUMP MODE I/O IN PROGRESS ?
056400 / 254000,,056410          JRST      056410             ;;YES. DELAY
                       STOPC:
056401 / 554306,,000003          HLRZ DEVDAT,DEVSER(DEVDAT)     ;
056402 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;LOOP THRU DSK AND UDP DDBS
056403 / 603040,,200000          TLNE  TAC, DVDSK             ;
056404 / 254000,,056374          JRST      056374             ;;ONLY LOOK AT DVDSK ONES
056405 / 603040,,100000          TLNE  TAC, DVUDP             ;
056406 / 254000,,056401          JRST      056401             ;;BUT KEEP SEARCHING IF DVUDP
056407 / 350003,,777777           AOS      777777(PDP)        ;;OK TO STOP
                       STOPR1:
056410 / 262140,,000006           POP  PDP,DEVDAT             ;
056411 / 263140,,000000          POPJ  PDP,                   ;
                       ;"FILES <filename or job number>" -- print status of open files.
                       FILCOM:
056412 / 201640,,011756         MOVEI  AC1,DSKDDB             ;
056413 / 260140,,042552         PUSHJ    P,042552             ;;GET ARG OF COMMAND
056414 / 322100,,056536         JUMPE TAC1,056536             ;;NO ARG
056415 / 261140,,000002          PUSH    P,000002             ;;SAVE ARG
056416 / 306400,,000056          CAIN  TEM,000056             ;;DELIMITING PERIOD MEANS FILENAME EXT COMING
056417 / 254000,,056454          JRST      056454             ;;READ EXT
056420 / 306400,,000133          CAIN  TEM,000133             ;;DELIMITING LEFT BRACKET MEANS PPN COMING
056421 / 254000,,056453          JRST      056453             ;;READ PPN
056422 / 260140,,056515         PUSHJ    P,056515             ;;SEE IF ARG WAS A JOB NUMBER RATHER THAN FILENAME
056423 / 254000,,056467          JRST      056467             ;;GOT JOB NUMBER
151675 / 000000,,000000                                       ;
056424 / 261140,,151675          PUSH    P,151675             ;;MUST BE FILE NAME WITH ZERO EXTENSION.
                       FIL6D:
056425 / 336704,,030020         SKIPN  AC2,DSKPPN(J)          ;;GET APPROPRIATE PPN FOR FILE
056426 / 200704,,027720          MOVE  AC2,PRJPRG(J)          ;
                       FIL6:
056427 / 261140,,000016          PUSH    P,000016             ;;SAVE PPN
056430 / 260140,,056461         PUSHJ    P,056461             ;;SEE IF ANYTHING LEFT IN COMMAND LINE
056431 / 260140,,042667         PUSHJ    P,042667             ;;BLANK LINE TO INDICATE STARTING NEW FILE SEARCH
                       FIL6A:
056432 / 260140,,056664         PUSHJ    P,056664             ;;GET NEXT DSK DDB
056433 / 254000,,056450          JRST      056450             ;;NONE, DONE
056434 / 200055,,000011          MOVE  TAC,DEVFIL(AC1)        ;;GET NAME OF FILE OPEN
056435 / 312043,,777776          CAME  TAC,777776(P)          ;;SAME AS FILE OF INTEREST?
056436 / 254000,,056432          JRST      056432             ;;NOPE
056437 / 510055,,000012          HLLZ  TAC,DEVEXT(AC1)        ;;GET EXT OF FILE OPEN
056440 / 312043,,777777          CAME  TAC,777777(P)          ;;SAME AS FILE OF INTEREST?
056441 / 254000,,056432          JRST      056432             ;;NOPE
056442 / 200055,,000014          MOVE  TAC,FILPPN(AC1)        ;;AND PPN
056443 / 316043,,000000          CAMN  TAC,      (P)          ;;SAME?
                       FIL6C:
056444 / 260140,,056556         PUSHJ    P,056556             ;;YES.  PRINT STATUS OF THIS FILE
056445 / 254000,,056432          JRST      056432             ;;NOT SAME, OR STATUS PRINTED OK.
056446 / 552646,,000034         HRRZM  AC1,SAVDDB(DDB)        ;;NO ROOM TO PRINT FILE NAME.  SAVE OUR PLACE.
056447 / 254000,,056451          JRST      056451             ;
                       FIL6B:
056450 / 402006,,000034         SETZM      SAVDDB(DDB)        ;;WE FINISHED.  INDICATE NO PLACE TO CONTINUE.
151777 / 000003,,000003                                       ;
056451 / 274140,,151777           SUB    P,151777             ;;RE-ADJUST STACK, FLUSHING FILE NAME, EXT, PPN
056452 / 263140,,000000          POPJ    P,                   ;
                       FIL4:
151675 / 000000,,000000                                       ;
056453 / 334100,,151675         SKIPA TAC1,151675             ;;ZERO FILE EXTENSION
                       FIL3:
056454 / 260140,,042550         PUSHJ    P,042550             ;;READ FILE EXTENSION
056455 / 261140,,000002          PUSH    P,000002             ;;SAVE EXT
                       FIL3A:
056456 / 260140,,042777         PUSHJ    P,042777             ;;READ PPN
056457 / 254000,,056425          JRST      056425             ;;NONE TYPED, GET DEFAULT PPN
056460 / 254000,,056427          JRST      056427             ;;GO SAVE PPN TYPED
                       FIL99:
056461 / 260140,,042620         PUSHJ    P,042620             ;;SEE IF ANYTHING EXTRANEOUS AT END OF LINE
152002 / 000004,,000004                                       ;
056462 / 274140,,152002           SUB    P,152002             ;;YES.  ERROR
056463 / 254000,,042645          JRST      042645             ;;(SKIPS1 RETURNS UP A LEVEL IF FINDS END OF LINE)
                       FIL88:
056464 / 260140,,042620         PUSHJ    P,042620             ;;COMEND MAKES THIS CHECK ALSO BUT ONLY REMOVES
151774 / 000002,,000002                                       ;
056465 / 274140,,151774           SUB    P,151774             ;;	ONE ENTRY FROM STACK INSTEAD OF TWO
056466 / 254000,,042645          JRST      COMERA             ;
                       FIL5:
151763 / 000001,,000001                                       ;
056467 / 274140,,151763           SUB    P,151763             ;;DISCARD SIXBIT JOB NUMBER ON STACK
056470 / 326040,,056473         JUMPN  TAC,056473             ;;ZERO JOB NUMBER MEANS OWN JOB,
                       FIL5C:
056471 / 336040,,000004         SKIPN  TAC,000004             ;; IF ANY.
056472 / 254000,,053440          JRST      053440             ;; IF NONE, CANT HELP YOU
                       FIL5D:
056473 / 200101,,026114          MOVE TAC1,JBTSTS(TAC)        ;;SEE IF THIS JOB NUMBER IS ASSIGNED
056474 / 603100,,040000          TLNE TAC1,   JNA             ;
056475 / 603100,,001000          TLNE TAC1,001000             ;;NO SEGMENTS PLEASE
056476 / 254000,,052440          JRST      052440             ;;NO SUCH JOB
056477 / 261140,,000001          PUSH    P,000001             ;;SAVE JOB NUMBER
056500 / 260140,,056464         PUSHJ    P,056464             ;;MAKE SURE NOTHING EXTRANEOUS AFTER JOB NUMBER
056501 / 260140,,042667         PUSHJ    P,042667             ;;BEGINNING NEW FILE SEARCH
                       FIL5A:
056502 / 260140,,056664         PUSHJ    P,056664             ;;GET NEXT DSK DDB
056503 / 254000,,056513          JRST      056513             ;;NONE, DONE
153166 / 000015,,000001                                       ;
153166 / 360615,,000001 POINT 6,15000001,5                    ;
056504 / 135100,,153166           LDB TAC1,153166             ;;PICK UP JOB NUMBER FROM DDB
056505 / 316103,,000000          CAMN TAC1,      (P)          ;;IS IT THE JOB OF INTEREST?
                       FIL5E:
056506 / 260140,,056556         PUSHJ    P,056556             ;;YUP.  PRINT FILE STATUS
056507 / 254000,,056502          JRST      056502             ;;NOT CORRECT JOB, OR FILE STATUS PRINTED OK
056510 / 504643,,000000           HRL  AC1,      (P)          ;;NO ROOM TO PRINT FILE STATUS.  SAVE JOB NUMBER
056511 / 202646,,000034         MOVEM  AC1,SAVDDB(DDB)        ;; AND CURRENT DSK DDB.
056512 / 254000,,037376          JRST      037376             ;;RE-ADJUST STACK AND RETURN.
                       FIL5B:
056513 / 402006,,000034         SETZM      SAVDDB(DDB)        ;;WE FINISHED.  INDICATE NO PLACE TO CONTINUE.
056514 / 254000,,037376          JRST       TPOPJ             ;
                       FIL2JB:
152031 / 000077,,777777                                       ;
056515 / 612100,,152031          TDNE TAC1,152031             ;;CONVERT SIXBIT TEXT TO JOB NUMBER
056516 / 254000,,037401          JRST      037401             ;;MORE THAN TWO CHARS MEANS NOT JOB NUMBER
056517 / 400040,,000000          SETZ  TAC,                   ;
056520 / 246040,,000006          LSHC  TAC,000006             ;;GET FIRST SIXBIT CHAR
056521 / 275040,,000020          SUBI  TAC,000020             ;;CONVERT DIGIT TO BINARY
056522 / 321040,,037401         JUMPL  TAC,037401             ;;NOT DIGIT MEANS NOT JOB NUMBER
056523 / 303040,,000011         CAILE  TAC,000011             ;
056524 / 254000,,037401          JRST      037401             ;;NOT DIGIT
056525 / 322100,,037403         JUMPE TAC1,037403             ;;IF NO SECOND DIGIT, THEN DONE
056526 / 241100,,000006           ROT TAC1,000006             ;;GET SECOND DIGIT
056527 / 275100,,000020          SUBI TAC1,000020             ;;CONVERT SIXBIT DIGIT TO BINARY
056530 / 321100,,037401         JUMPL TAC1,037401             ;;NO DIGEE, NO JOBEE
056531 / 303100,,000011         CAILE TAC1,000011             ;
056532 / 254000,,037401          JRST      037401             ;;LOSE
056533 / 221040,,000012         IMULI  TAC,000012             ;;SHIFT HIGH-ORDER DIGIT
056534 / 270040,,000002           ADD  TAC,000002             ;; AND ADD IN LOW-ORDER DIGIT
056535 / 263140,,000000          POPJ    P,                   ;;DIRECT RETURN WITH JOB NUMBER IN TAC
                       FIL2:
056536 / 260140,,042643         PUSHJ    P,042643             ;;MAKE SURE REALLY NO ARG
056537 / 550046,,000034          HRRZ  TAC,SAVDDB(DDB)        ;;NO ARGUMENT.  GET PLACE WE QUIT LAST TIME.
056540 / 322040,,056471         JUMPE  TAC,056471             ;;FINISHED LAST TIME.  START OVER.
                       FIL2A:
056541 / 260140,,056664         PUSHJ    P,056664             ;;GET NEXT DSK DDB
056542 / 254000,,056471          JRST      056471             ;;NO MORE.  CANT FIND PLACE TO CONTINUE.  START OVER.
056543 / 312040,,000015          CAME  TAC,000015             ;;IS THIS THE DDB WHERE WE QUIT?
056544 / 254000,,056541          JRST      056541             ;;NO, TRY AGAIN.
056545 / 554046,,000034          HLRZ  TAC,SAVDDB(DDB)        ;;YES.  PICK UP JOB NUMBER WE WERE WORKING ON
056546 / 261140,,000001          PUSH    P,000001             ;;PUT JOB NUMBER ON STACK
056547 / 326040,,056506         JUMPN  TAC,056506             ;; AND CONTINUE PRINTING FILES FOR THAT JOB.
056550 / 200055,,000011          MOVE  TAC,DEVFIL(AC1)        ;;NO JOB NUMBER.  MUST BE WORKING ON SPECIFIC FILE.
056551 / 202043,,000000         MOVEM  TAC,      (P)          ;
056552 / 261155,,000012          PUSH    P,DEVEXT(AC1)        ;; SAVE NAME, EXT, AND PPN OF FILE
056553 / 513003,,000000         HLLZS            (P)          ;; CLEAR RIGHT HALF OF EXT WORD
056554 / 261155,,000014          PUSH    P,FILPPN(AC1)        ;
056555 / 254000,,056444          JRST      056444             ;;AND CONTINUE PRINTING REFERENCES TO THAT FILE
                       PTFILE:
056556 / 201040,,000053         MOVEI  TAC,000053             ;;PRINT A FILE'S STATUS, AT MOST =39 CHARS NEEDED.
056557 / 311046,,000032          CAML  TAC,TOFCTR(DDB)        ;;SEE IF WE HAVE ENOUGH ROOM IN OUTPUT BUFFER
056560 / 254000,,056630          JRST      056630             ;;NOT ENOUGH ROOM.  PRINT " ..." (4 CHARS)
153166 / 000015,,000001                                       ;
153166 / 360615,,000001 POINT 6,15000001,5                    ;
056561 / 135040,,153166           LDB  TAC,153166             ;; GET NUMBER OF JOB WITH FILE OPEN
056562 / 201400,,000040         MOVEI  TEM,000040             ;
056563 / 305040,,000012         CAIGE  TAC,000012             ;;IF JOB NUMBER LESS THAN =10,
056564 / 256000,,042674           XCT      042674             ;; THEN PAD NUMBER WITH A SPACE
056565 / 260140,,043720         PUSHJ    P,043720             ;;PRINT JOB NUMBER
056566 / 200115,,000011          MOVE TAC1,DEVFIL(AC1)        ;;GET FILE NAME
056567 / 260140,,056635         PUSHJ    P,056635             ;; AND PRINT 6 CHARS AFTER SPACE
056570 / 510115,,000012          HLLZ TAC1,DEVEXT(AC1)        ;;GET FILE EXT
056571 / 260140,,056633         PUSHJ    P,056633             ;; AND PRINT 3 CHARS AFTER SPACE
056572 / 200115,,000014          MOVE TAC1,FILPPN(AC1)        ;;GET FILE PPN
056573 / 260140,,056635         PUSHJ    P,056635             ;; AND PRINT 6 CHARS AFTER SPACE
056574 / 200055,,000016          MOVE  TAC,FILLNG(AC1)        ;;GET FILE LENGTH
056575 / 260140,,076556         PUSHJ    P,076556             ;; AND CONVERT TO RECORDS (DGETL1 IS IN DSKSER)
056576 / 332100,,000001         SKIPE TAC1,000001             ;;IF NON-ZERO, SUBTRACT ONE TO GET NUMBER
056577 / 275100,,000001          SUBI TAC1,000001             ;; OF LAST RECORD, NOT FIRST FREE RECORD
056600 / 260140,,056646         PUSHJ    P,056646             ;; PRINT FILE LENGTH IN RECORDS
056601 / 200115,,000021          MOVE TAC1, USETP(AC1)        ;;GET CURRENT USET POINTER
056602 / 260140,,056646         PUSHJ    P,056646             ;; AND PRINT IT
056603 / 201400,,000040         MOVEI  TEM,000040             ;
056604 / 256000,,042674           XCT      042674             ;;PRINT A SPACE
056605 / 201400,,000125         MOVEI  TEM,000125             ;
056606 / 603700,,100000          TLNE  AC2,100000             ;;IS THIS A UDP?
056607 / 256000,,042674           XCT      042674             ;;YES, PRINT "U"
056610 / 200055,,000002          MOVE  TAC,DEVIOS(AC1)        ;;SEE WHAT IS HAPPENING TO THIS FILE
056611 / 607040,,200000          TLNN  TAC,200000             ;;BEING READ?
056612 / 254000,,056624          JRST      056624             ;;NO
056613 / 201400,,000122         MOVEI  TEM,000122             ;;YES.  PRINT "R"
056614 / 256000,,042674           XCT         TYO             ;
056615 / 201400,,000101         MOVEI  TEM,000101             ;
056616 / 603040,,040000          TLNE  TAC,040000             ;;OPEN IN READ-ALTER MODE?
056617 / 256000,,042674           XCT      042674             ;;YUP,  PRINT "A" AFTER THE "R"
056620 / 201400,,000105         MOVEI  TEM,000105             ;
056621 / 603040,,000040          TLNE  TAC,000040             ;;END OF FILE?
056622 / 256000,,042674           XCT      042674             ;;YES, PRINT "E"
056623 / 254000,,042667          JRST      042667             ;;PRINT CRLF AND RETURN FROM PTFILE
                       PTFIL2:
056624 / 201400,,000127         MOVEI  TEM,000127             ;
056625 / 603040,,100000          TLNE  TAC,100000             ;;IS FILE BEING WRITTEN?
056626 / 256000,,042674           XCT      042674             ;;YES, PRINT "W"
056627 / 254000,,042667          JRST      042667             ;;PRINT CRLF AND RETURN FROM PTFILE
                       PTFIL1:
056630 / 260140,,042676         PUSHJ    P,INLMES             ;
056632 / 254000,,037401          JRST      CPOPJ1             ;
                       PR3SIX:
056633 / 201500,,000003         MOVEI UCHN,000003             ;;PRINT 3 SIXBIT CHARS
056634 / 254000,,056636          JRST      056636             ;
                       PR6SIX:
056635 / 201500,,000006         MOVEI UCHN,000006             ;;PRINT 6 SIXBIT CHARS
056636 / 201400,,000040         MOVEI  TEM,000040             ;
056637 / 256000,,042674           XCT         TYO             ;
                       PRSIXA:
056640 / 400040,,000000          SETZ  TAC,                   ;
056641 / 246040,,000006          LSHC  TAC,000006             ;;GET NEXT SIXBIT CHAR
056642 / 201401,,000040         MOVEI  TEM,    40(TAC)        ;;PRINT ASCII
056643 / 256000,,042674           XCT         TYO             ;
056644 / 367500,,056640          SOJG UCHN,056640             ;;PRINTED ENOUGH CHARS YET?
056645 / 263140,,000000          POPJ    P,                   ;;YUP
                       PRREC:
056646 / 201500,,000005         MOVEI UCHN,000005             ;;PRINT OCTAL NUMBER IN 6 CHARS WITH LEADING BLANKS
056647 / 201400,,000040         MOVEI  TEM,000040             ;
056650 / 514100,,000002          HRLZ TAC1,000002             ;;PUT OCTAL NUMBER IN LEFT HALF OF TAC1
                       PRREC2:
056651 / 400040,,000000          SETZ  TAC,                   ;
056652 / 246040,,000003          LSHC  TAC,000003             ;;GET NEXT OCTAL DIGIT
056653 / 326040,,056660         JUMPN  TAC,056660             ;;IF NON ZERO, GO PRINT
056654 / 256000,,042674           XCT      042674             ;;OTHERWISE, PRINT SPACE
056655 / 367500,,056651          SOJG UCHN,056651             ;;PRINTED 5 LEADING SPACES YET?
                       PRREC3:
056656 / 400040,,000000          SETZ  TAC,                   ;
056657 / 246040,,000003          LSHC  TAC,000003             ;;GET NEXT OCTAL DIGIT
                       PRREC1:
056660 / 201401,,000060         MOVEI  TEM,000060(TAC)        ;;PRINT ASCII DIGIT
056661 / 256000,,042674           XCT         TYO             ;
056662 / 365500,,056656         SOJGE UCHN,056656             ;;PRINTED 6 CHARS YET?
056663 / 263140,,000000          POPJ    P,                   ;;YES.  DONE AT LAST
                       NXTDSK:
056664 / 554655,,000003          HLRZ  AC1,DEVSER(AC1)        ;;GET LINK TO NEXT DDB
056665 / 322640,,037403         JUMPE  AC1,037403             ;;DIRECT RETURN IF NONE
056666 / 200715,,000004          MOVE  AC2,DEVMOD(AC1)        ;;GET DEVICE CHARACTERISTICS
056667 / 607700,,200000          TLNN  AC2,200000             ;;IS THIS A DSK DDB?
056670 / 254000,,056664          JRST      056664             ;;NO.  GET NEXT DDB
056671 / 254000,,037401          JRST      037401             ;;YES.  SKIP RETURN WITH DSK DDB
056672 /               ;: CLKSER[J17,SYS] EOF.
056672 /               ;: UUOCON[J17,SYS]
                       ;UUOCON (BOTH SECTIONS) CONSISTS OF THE UUO TRAP HANDLER
                       ;THE CALL UUO ROUTINES AND THE IO UUO ROUTINES
                       ;SOME UUO DO DISPATCH TO OTHER ROUTINES OUTSIDE OF UUOCON
                       ;ALL UUOS DROP THEMSELVES IN REAL LOCATION 40, AND TRAP TO 41.
                       ;SYSTEM UUOS(40-77) FIRST SAVE THE USERS ACS IN RELATIVE LOC 0-17
                       ;THEN THE FOLLOWING ACS ARE LOADED UP BEFORE DISPATCHING:
                       ;	PDP	;PUSHDOWN LIST IN CURRENT JOB DATA AREA
                       ;	PROG	;CURRENT JOB RELOCATION IN RH,PROTECTION IN LH
                       ;	JDAT	;ADDRESS OF CURRENT JOB DATA AREA
                       ;	UUO	;THE CONTENTS OF LOC 40 WITH PROG IN INDEX FIELD
                       ;		;SO THAT RELOCATION CAN BE DONE FOR PICKING UP ARGUMENTS
                       ;	DEVDAT	;ADR. OF DEVICE DATA BLOCK
                       ;	IOS	;DEVICE IO STATUS WORD
                       ;	DSER	;ADR. OF DEVICE SERVICE ROUT. DISPATCH TABLE
                       ;	UCHN	;THE USER IO CHANNEL(AC FIELD) OF UUO
                       ;RETURN IS PUT IN UUOPC(JOB)
                       ;THEN IF CALL WAS FROM USER MODE, THE UUO ROUTINE IS CALLED
                       ;WITH A PUSHJ, SO THAT ALL UUO ROUTINE RETURN WITH A POPJ PDP,
                       ;WHICH WILL RETURN CONTROL TO UUOCON WHICH WILL RESTORE USERS
                       ;ACS AND RETURN TO HIM
                       ;IF THE CALL IS FROM EXEC MODE, THE UUO ROUTINE IS CALLED
                       ;BY DOING JUST A JRST,  WHEN THE UUO ROUTINE RETURNS WITH
                       ;A POPJ, IT WILL RETURN TO THE EXEC WITHOUT RESTORING
                       ;ANY ACS
                       ;CONTROL MAY ALWAYS BE RETURNED BY EXECUTING A
                       ;	POPJ	P,
                       ;WHICH WILL RESTORE THE ACS, APR BITS, AND RETURN.
                       ;THE UUO HANDLER IS PURE IF THE FOLLOWING RESTRICTIONS ARE OBSERVED.
                       ;RESTRICTIONS: UUOS CANNOT BE CALLED BY INTERRUPT SERVICE ROUTINES.
                       ;HERE WE FIGURE OUT WHOSE FAULT THE UUO IS AND WHO IT IS FOR
                       UUO1:
056672 / 202740,,026100         MOVEM   17,026100             ;;SAVE ALL AC'S FOR ILLUUO FROM EXEC
056673 / 201740,,026061         MOVEI   17,026061             ;
056674 / 251740,,026077           BLT   17,026077             ;
056675 / 200740,,026100          MOVE   17,026100             ;;RESTORE AC 17
056676 / 700740,,077400         CONSO   PI,077400             ;;ARE WE AT INTERRUPT LEVEL?
056677 / 254000,,056704          JRST      056704             ;;NO.
056700 / 250040,,024112          EXCH  TAC,024112             ;;SAVE TAC, GET PC OF UUO + 1
056701 / 607040,,010000          TLNN  TAC,010000             ;;USER MODE?
056702 / 254000,,056774          JRST      056774             ;;UUO FROM EXEC WHILE PI IN PROG - ILLEGAL
056703 / 250040,,024112          EXCH  TAC,024112             ;;RESTORE TAC
                       NOPCK:
056704 / 336000,,023425         SKIPN      023425             ;;ARE WE RUNNING SPACEWAR NOW?
056705 / 254000,,056713          JRST      056713             ;;NO.
056706 / 202740,,020243         MOVEM   17,020243             ;
056707 / 201740,,020224         MOVEI   17,SPWSAC             ;
056710 / 251740,,020242           BLT   17,020242             ;;STUFF THE SPACEWARE AC'S AWAY.
056711 / 201540,,000000         MOVEI  PID,                   ;
056712 / 254000,,150501          JRST      150501             ;;LET SPWSER PROCESS IT
                       UUO1B:
056713 / 202740,,024463         MOVEM   17,024463             ;;SAVE AC 17
056714 / 200740,,024112          MOVE   17,024112             ;;GET PROCESSOR FLAGS
056715 / 603740,,010000          TLNE   17,010000             ;;IS UUO FROM MONITOR?
056716 / 254000,,056724          JRST      056724             ;;NO. ORDINARY FROM USER MODE
056717 / 200240,,024112          MOVE  DAT,024112             ;;UUO FROM EXEC
056720 / 201540,,000000         MOVEI  PID,                   ;
056721 / 200633,,024116          MOVE  UUO,@UUOLOC(PID)       ;
056722 / 200213,,024061          MOVE    J,   JOB(PID)        ;
056723 / 254000,,057107          JRST      057107             ;;UUO FROM SYSTEM
                       UUO1A:
056724 / 332740,,024063         SKIPE   17,024063             ;;GET JOB DATA AREA ADDRESS
056725 / 254000,,057072          JRST      057072             ;;HAPPY
056726 / 201540,,000000         MOVEI  PID,                   ;;NO JOB DATA AREA
056727 / 254000,,050037          JRST      050037             ;;MUST BE AILING NULL JOB
                       UUO3:
056730 / 250040,,024114          EXCH  TAC,024114             ;;TRAP TO LOCATION 60.
056731 / 202040,,024112         MOVEM  TAC,024112             ;;ILLEGAL FOR NOW.
056732 / 200040,,024114          MOVE  TAC,024114             ;;RESTORE TAC.
056733 / 402020,,024116         SETZM      @024116            ;;MAKE LOOK LIKE ILL INSTR.
056734 / 254000,,056672          JRST      056672             ;;TRAPPING TO 40.
                       ;UUO SETUP ROUTINES FOR P2
                       P2UUO1:
056735 / 700740,,077400         CONSO   PI,077400             ;;INTERRUPT LEVEL?
056736 / 254000,,056743          JRST      056743             ;;NO.
056737 / 250040,,025330          EXCH  TAC,025330             ;
056740 / 607040,,010000          TLNN  TAC,010000             ;;FROM USER MODE?
056741 / 254000,,057002          JRST      057002             ;;NO, LOSE
056742 / 250040,,025330          EXCH  TAC,025330             ;
                       P2NOPC:
056743 / 336000,,024643         SKIPN      024643             ;
056744 / 254000,,056752          JRST      056752             ;;NOT SPACEWAR LEVEL
056745 / 202740,,020263         MOVEM   17,020263             ;
056746 / 201740,,020244         MOVEI   17,SP2SAC             ;
056747 / 251740,,020262           BLT   17,020262             ;;SAVE SPACEWAR AC'S
056750 / 201540,,001216         MOVEI  PID, P2PID             ;
056751 / 254000,,150501          JRST      150501             ;;LET SPWSER THINK ABOUT THIS
                       P2UU1B:
056752 / 202740,,025701         MOVEM   17,025701             ;;SAVE AC 17
056753 / 200740,,025330          MOVE   17,025330             ;;GET PROCESSOR FLAGS
056754 / 603740,,010000          TLNE   17,010000             ;;IS UUO FROM MONITOR?
056755 / 254000,,056763          JRST      056763             ;;USER LEVEL UUO
056756 / 200240,,025330          MOVE  DAT,025330             ;;SYSTEM UUO
056757 / 201540,,001216         MOVEI  PID, P2PID             ;
056760 / 200633,,024116          MOVE  UUO,@UUOLOC(PID)       ;
056761 / 200213,,024061          MOVE    J,   JOB(PID)        ;
056762 / 254000,,057107          JRST      UUOSY1             ;
                       P2UU1A:
056763 / 332740,,025301         SKIPE   17,025301             ;;GET JOB DATA AREA ADDRESS
056764 / 254000,,057063          JRST      057063             ;;THERE IS ONE.
056765 / 201540,,001216         MOVEI  PID,001216             ;;NO CORE FOR JOB
056766 / 254000,,050037          JRST      050037             ;;MUST BE AILING NULL JOB
                       P2UUO3:
056767 / 250040,,025332          EXCH  TAC,025332             ;;TRAP TO LOCATION 60.
056770 / 202040,,025330         MOVEM  TAC,025330             ;;ILLEGAL FOR NOW.
056771 / 200040,,025332          MOVE  TAC,025332             ;;RESTORE TAC.
056772 / 402020,,025334         SETZM      @025334            ;;MAKE LOOK LIKE ILL INSTR.
056773 / 254000,,056735          JRST      056735             ;;TRAPPING TO 40.
                       ;HERE WE TELL THE WORLD WE HIT A UUO AT INTERUPT LEVEL AND TRY
                       ;TO FIGURE OUT WHAT TO DO!
                       UUOX:
056774 / 250040,,024112          EXCH  TAC,024112             ;;RESTORE TAC, UUO0
056775 / 700600,,000400          CONO   PI,000400             ;;HOLD EVERYTHING
056776 / 250140,,023657          EXCH    P,023657             ;;GET A PDL
056777 / 260140,,000316         PUSHJ    P,PUSHIT             ;
057000 / 201540,,000000         MOVEI  PID,                   ;
057001 / 254000,,057007          JRST       UUOX1             ;
                       P2UUOX:
057002 / 250040,,025330          EXCH  TAC,025330             ;
057003 / 700600,,000400          CONO   PI, PIOFF             ;
057004 / 250140,,025075          EXCH    P,025075             ;
057005 / 260140,,000316         PUSHJ    P,PUSHIT             ;
057006 / 201540,,001216         MOVEI  PID, P2PID             ;
                       UUOX1:
057007 / 370013,,024112           SOS        UUO0(PID)        ;;FIX UP ADDRESS FOR PRINTING AND RETURN
057010 / 260140,,044066         PUSHJ    P,DISMES             ;
057023 / 700640,,000001          CONI   PI,   TAC             ;
057024 / 260140,,044170         PUSHJ    P,DISLOC             ;
057025 / 260140,,044120         PUSHJ    P,DISERR             ;
057026 / 000000,,153270                                       ;
057027 / 000113,,023657        OCTQQQ       ERRPD(PID)        ;
057030 / 000000,,153440                                       ;
057031 / 777777,,777777                                       ;
057032 / 550053,,023657          HRRZ  TAC, ERRPD(PID)        ;
057033 / 200041,,000000          MOVE  TAC,      (TAC)        ;
057034 / 260140,,044200         PUSHJ    P,DISOCT             ;
057035 / 260140,,044120         PUSHJ    P,DISERR             ;
057036 / 000000,,153272                                       ;
057037 / 000113,,024112        OCTQQQ        UUO0(PID)        ;
057040 / 000000,,153446                                       ;
057041 / 000133,,024116        OCTQQQ      @UUOLOC(PID)       ;
057042 / 000000,,154256                                       ;
057043 / 777777,,777777                                       ;
057044 / 260140,,050113         PUSHJ    P,SYSFIX             ;
057045 / 255000,,000000          JFCL                         ;
057046 / 304000,,000000          CAIA                         ;
057047 / 254000,,057052          JRST      057052             ;;FIXED AN ERROR
057050 / 260140,,043761         PUSHJ    P,043761             ;
057051 / 260140,,000347         PUSHJ    P,000347             ;
                       UUOX2:
057052 / 326540,,057057         JUMPN  PID,P2UUX2             ;
057053 / 260140,,000341         PUSHJ    P, POPIT             ;
057054 / 250153,,023657          EXCH    P, ERRPD(PID)        ;
057055 / 700600,,000200          CONO   PI,  PION             ;
057056 / 254120,,024112          JRST    2,@024112            ;;TRY TO GO ON!
                       P2UUX2:
057057 / 260140,,000341         PUSHJ    P, POPIT             ;
057060 / 250153,,023657          EXCH    P, ERRPD(PID)        ;
057061 / 700600,,000200          CONO   PI,  PION             ;
057062 / 254120,,025330          JRST    2,@025330            ;
                       ;SAVE USER'S ACS, GET A PDL
                       U2OSYS:
057063 / 202717,,000016         MOVEM   16,    16(17)         ;
057064 / 201717,,000000         MOVEI   16,      (17)         ;
057065 / 251717,,000015           BLT   16,    15(17)         ;
057066 / 200040,,025701          MOVE  TAC,025701             ;
057067 / 202057,,000017         MOVEM  TAC,    17(17)         ;
057070 / 201540,,001216         MOVEI  PID, P2PID             ;
057071 / 254000,,057100          JRST      UUOSY2             ;
                       UUOSYS:
057072 / 202717,,000016         MOVEM   16,    16(17)         ;;STORE AC16 IN USER 16
057073 / 201717,,000000         MOVEI   16,      (17)         ;;SET UP BLT POINTER
057074 / 251717,,000015           BLT   16,    15(17)         ;;MOVE REAL AC'S TO USER AREA
057075 / 200040,,024463          MOVE  TAC,024463             ;;MOVE USER 17 TO USER'S AREA
057076 / 202057,,000017         MOVEM  TAC,    17(17)         ;
057077 / 201540,,000000         MOVEI  PID,                   ;
                       UUOSY2:
057100 / 200340,,000017          MOVE PROG,000017             ;;LOAD UP POINTER TO USER PROGRAM AREA
057101 / 200213,,024061          MOVE    J,   JOB(PID)        ;; PICK UP JOB NUMBER
057102 / 200253,,024112          MOVE  DAT,  UUO0(PID)        ;; SAVE RETURN IN ACS
057103 / 200633,,024116          MOVE  UUO,@UUOLOC(PID)       ;; AND SAVE UUO ALSO
057104 / 332013,,023431         SKIPE      INTACT(PID)        ;
057105 / 334153,,023474         SKIPA    P, INTSP(PID)        ;;USE INTERRUPT LEVEL PDL
057106 / 265040,,074422           JSP  TAC,074422             ;; GET US A PDL
                       ;HERE WE SET UP A CHANNEL AND DISPATCH
                       UUOSY1:
057107 / 250244,,026620          EXCH  DAT, UUOPC(J)          ;; SAVE RETURN
057110 / 202244,,026720         MOVEM  DAT,UUOOPC(J)          ;; SAVE OLD RETURN IN CASE ILL. UUO INSIDE UUO CODE.
057111 / 332244,,034365         SKIPE  DAT,UUOPTR(J)          ;
057112 / 254000,,057255          JRST      057255             ;;MAYBE LOSER WANTS TO SIMULATE IT
                       UUOSY3:
057113 / 607600,,740000          TLNN  UUO,740000             ;;SYSTEM UUO?
                       ILEGAL:
057114 / 254000,,043340          JRST      043340             ;;NO, 0-37 ARE ILLEGAL,PRINT ERROR
057115 / 661600,,000007           TLO  UUO,000007             ;;SET FOR RELOCATION
057116 / 135500,,037573           LDB UCHN,037573             ;; SETUP USER DEVICE CHANNEL NUMBER
153051 / 000000,,000014                                       ;
153051 / 331100,,000014 POINT 9,00000014,8                    ;
057117 / 135100,,153051           LDB TAC1,153051             ;;PICK UP UUO OP CODE
057120 / 431100,,000700          XORI TAC1,000700             ;; IS THIS AN IOT UUO?
057121 / 646100,,000700          TRCN TAC1,   700             ;
057122 / 254000,,057345          JRST      057345             ;; YES, SEPARATE DISPATCH TABLE
057123 / 301100,,000100          CAIL TAC1,000100             ;;ILLEGAL INSTRUCTION?
057124 / 254000,,043451          JRST      043451             ;;YES, STOP JOB AND PRINT ERROR
057125 / 260140,,057273         PUSHJ    P,057273             ;; CHECK CHANNEL NUMBER AND LOAD IOS AND DSER
057126 / 254000,,057144          JRST      057144             ;; NO CHANNEL, BUT UUO LEGAL ANYWAY
057127 / 254000,,057142          JRST      057142             ;; THINGS LIKE LOOKUP AND ENTER ON NON-DIRECTORY DEVICES GET HERE
057130 / 241100,,777777           ROT TAC1,777777             ;;DIVIDE UUO OPCODE BY 2, SAVE REMAINDER
057131 / 200242,,057305          MOVE  DAT,057305(TAC1)       ;;GET DISPATCH TABLE ENTRY
                       DISP4:
057132 / 607100,,400000          TLNN TAC1,400000             ;;WAS UUO ODD?
057133 / 204240,,000005          MOVS  DAT,000005             ;;NO, USE LH OF DISPATCH ENTRY
057134 / 350000,,036146           AOS       NUUOS             ;
057135 / 260145,,000000         PUSHJ    P,      (DAT)        ;;NO, FROM USER. ROUTINES ALL RETURN BY POPJ
                       ;BEGINNING HERE WE WON'T TAKE USER INTS
                       USRXT0:
057136 / 254000,,057144          JRST      057144             ;;NO SKIP RETURN REQUIRED
057137 / 254000,,057142          JRST      USRXT1             ;
057140 / 200213,,024061          MOVE    J,   JOB(PID)        ;
057141 / 354004,,026620          AOSA       UUOPC(J)          ;
                       USRXT1:
057142 / 200213,,024061          MOVE    J,   JOB(PID)        ;
057143 / 350004,,026620           AOS       UUOPC(J)          ;; SKIP RETURN TO USER
                       ;USRXIT  - WE RETURN HERE EVENTUALLY TO CHECK WITH SCHEDULER
                       ; TO SEE IF IT WANTS TO RESCHEDULE THIS JOB
                       USRXIT:
057144 / 200213,,024061          MOVE    J,   JOB(PID)        ;
057145 / 336013,,023425         SKIPN      SPWUUF(PID)        ;;ARE WE AT SPACEWAR LEVEL ?
057146 / 254000,,057161          JRST      057161             ;;NO.
057147 / 200044,,026620          MOVE  TAC, UUOPC(ITEM)       ;
057150 / 262144,,026620           POP    P, UUOPC(J)          ;; RESTORE OLD PC WORD
057151 / 202053,,024112         MOVEM  TAC,  UUO0(PID)        ;
057152 / 322540,,057156         JUMPE  PID,USRXT7             ;
057153 / 205740,,020244         MOVSI   17,SP2SAC             ;
057154 / 251740,,000017           BLT   17,    17             ;
057155 / 256000,,024646           XCT      024646             ;;USUALLY JRST 2,@UUO0+P2PID
                       USRXT7:
057156 / 205740,,020224         MOVSI   17,020224             ;; RESTORE SPW ACS
057157 / 251740,,000017           BLT   17,    17             ;
057160 / 256000,,023430           XCT      023430             ;;USUALLY JRST 2,@UUO0 ;RETURN TO SPW JOB
                       USRXT6:
057161 / 332013,,023431         SKIPE      INTACT(PID)        ;;USER INTERRUPT LEVEL?
057162 / 254000,,057177          JRST      057177             ;;YES, SKIP SCHEDULING CHECK
057163 / 331044,,026114         SKIPL  TAC,JBTSTS(J)          ;;STILL RUNNABLE?
057164 / 254000,,057232          JRST      057232             ;;NO - RUN BIT OFF - PUT HIM IN STOPQ
057165 / 603040,,206000          TLNE  TAC,206000             ;;YES?
                       USRXT2:
057166 / 260140,,057227         PUSHJ    P,057227             ;;NO, CAUSE CLK INT ON EXIT
057167 / 205500,,002000         MOVSI UCHN,002000             ;;ARE WE ENABLED FOR INTERRUPT WAIT INTERRUPT?
057170 / 616504,,033665          TDNN UCHN,JBTIEN(J)          ;
057171 / 254000,,057177          JRST      057177             ;;NOT ENABLED FOR INT-WAIT INTERRUPT
057172 / 476013,,024642         SETOM      INTHLD(PID)        ;;MAKE SURE WE DON'T GET TO INTNOW FROM HERE
057173 / 436504,,033765          IORM UCHN,JBTIRQ(J)          ;
057174 / 402013,,024642         SETZM      INTHLD(PID)        ;;INTNOW WILL WIN NOW
057175 / 476013,,023475         SETOM      INTREQ(PID)        ;
                       USRX4A:
057176 / 260140,,057227         PUSHJ    P,057227             ;;INT ON WAY BACK TO LOSER
                       USRXT4:
057177 / 201240,,057235         MOVEI  DAT,USRXT5             ;
057200 / 250244,,026620          EXCH  DAT, UUOPC(J)          ;
057201 / 607240,,010000          TLNN  DAT,USRMOD             ;
057202 / 326260,,000005         JUMPN  DAT,@000005            ;;RETURN DIRECT IF EXEC MODE, UNLESS 0 (EXIT UUO)
                       ;RESTORE ACS AND DISMISS UUO 
057203 / 202253,,024112         MOVEM  DAT,  UUO0(PID)        ;
057204 / 200344,,027120          MOVE JDAT,JBTADR(J)          ;; MAKE SURE USER'S RELOCATION IS SET UP
057205 / 205747,,000000         MOVSI   17,      (PROG)       ;;RESTORE ALL USER ACS
057206 / 322540,,057217         JUMPE  PID,USRXT8             ;
057207 / 251740,,000017           BLT   17,    17             ;
057210 / 256000,,026056           XCT      026056             ;;JEN @UUO0+P2PID OR CONO PI,PIOFF
057211 / 476000,,025702         SETOM      025702             ;;CAUSES TRAP TO CLKIN0 INSTEAD OF CLKINT
057212 / 476000,,026055         SETOM      026055             ;
057213 / 700600,,004201          CONO   PI,  4201             ;;;replaced;;	CONO	PI,PION!4000!<200⊗-CLKCHN>
057214 / 700740,,077000         CONSO   PI, 77000             ;
057215 / 254000,,047044          JRST      CL2IN0             ;
057216 / 254400,,057214          JRST   10,057214             ;
                       USRXT8:
057217 / 251740,,000017           BLT   17,    17             ;
                       ; JEN WILL RESTORE FLAGS AND RETURN TO USER
                       ;DISMISS INTERRUPT ONLY ON TRPJEN UUO
                       ;IN ALL OTHER CASES NO INTERRUPTS
                       ;IN PROGRESS
057220 / 256000,,024640           XCT      024640             ;;JEN @UUO0 OR CONO PI,PIOFF
057221 / 476000,,024464         SETOM      024464             ;;HERE WITH INTS OFF IF CLOCK HAS TICKED (SEE CLKINT)
057222 / 476000,,024637         SETOM      024637             ;;IN CASE OF 0 PC FROM EXIT
057223 / 700600,,004201          CONO   PI,  4201             ;;;replaced;;	CONO	PI,PION!4000!<200⊗-CLKCHN>	;NOW (GOES TO CLKIN0 SINCE CLKFLG<0)
057224 / 700740,,077000         CONSO   PI,077000             ;;GET HERE ON TRPJEN (ALREADY IN PROGRESS)
057225 / 254000,,047010          JRST      047010             ;;CH7, JUST GO
057226 / 254400,,057224          JRST   10,057224             ;;HIGHER CHN, DISMISS (SHOULDN'T RETURN)
                       ;ROUTINE TO FORCE CLOCK BREAK UPON RETURN TO USER
                       ;ONLY CALL WHEN NEARLY READY TO EXIT FOR INTNOW TO WORK.
                       USRXTS:
151566 / 700600,,000400          CONO   PI, PIOFF             ;
057227 / 200040,,151566          MOVE  TAC,151566             ;
057230 / 202053,,024640         MOVEM  TAC,UUOXIT(PID)        ;
057231 / 263140,,000000          POPJ    P,                   ;
                       ;GET HERE IF RUN BIT WAS OFF
                       USRXT9:
057232 / 211040,,000011         MOVNI  TAC, STOPQ             ;
057233 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
057234 / 254000,,057166          JRST      057166             ;;GO FORCE SCHEDULE
                       USRXT5:
                       ;BEYOND HERE USER INTS OK
057235 / 700600,,000400          CONO   PI, PIOFF             ;
057236 / 476000,,036035         SETOM      036035             ;
057237 / 260140,,044066         PUSHJ    P,DISMES             ;
057253 / 260140,,043761         PUSHJ    P,043761             ;
057254 / 254000,,000365          JRST      000365             ;
                       ;GET HERE WHEN UUOPTR≠0 TO THINK ABOUT LETTING LOSER SIMULATE UUO
                       ;UUOPTR POINTS TO TABLE (IN LOSER'S CORE) OF 3 3-WORD BLOCKS
                       ;EACH BLOCK LOOKS LIKE THIS:
                       ;WD0:	PLACE TO SAVE PC
                       ;WD1:	PLACE TO SAVE UUO ITSELF
                       ;WD2:	PC TO TRANSFER TO
                       ;THE FIRST BLOCK IS USED FOR PDP-10 MAIN PROGRAM UUOS, THE SECOND FOR PDP-10
                       ;INTERRUPT LEVEL UUOS, AND THE THIRD FOR PDP-10 SPACEWAR UUOS. NO PDP-6 UUOS
                       ;CAN BE SIMULATED.  IF EITHER WD1≠0 OR WD2=0 IN A GIVEN BLOCK, THOSE
                       ;UUOS ARE NOT GIVEN TO THE USER'S HANDLER.  THE WD1≠0 CONDITION HAS THE
                       ;EFFECT OF AUTOMATICALLY DISABLING SIMULATION WHILE IN THE SIMULATOR.
                       UUOSY4:
057255 / 332013,,023431         SKIPE      INTACT(PID)        ;;FIRST MAKE PNTR TO APPROP BLK
057256 / 271240,,000003          ADDI  DAT,     3             ;
057257 / 332013,,023425         SKIPE      SPWUUF(PID)        ;
057260 / 271240,,000006          ADDI  DAT,     6             ;
153100 / 336005,,000001         SKIPN           1(DAT)        ;
057261 / 256200,,153100          XCTR   XR,153100             ;;NOW SEE IF HE REALLY WANTS TO SIMULATE THIS
153105 / 336045,,000002         SKIPN  TAC,     2(DAT)        ;
057262 / 256200,,153105          XCTR   XR,153105             ;
057263 / 254000,,057113          JRST      057113             ;;NOPE, WE'LL DO OUR THING AS USUAL
152602 / 202605,,000001         MOVEM  UUO,     1(DAT)        ;
057264 / 256040,,152602          XCTR   XW,152602             ;
057265 / 661040,,010000           TLO  TAC,USRMOD             ;
057266 / 250044,,026620          EXCH  TAC, UUOPC(J)          ;;SWAP PC'S AROUND
152546 / 202045,,000000         MOVEM  TAC,      (DAT)        ;
057267 / 256040,,152546          XCTR   XW,152546             ;
057270 / 254000,,057144          JRST      057144             ;;AND "RETURN" TO HIS SIMULATOR
                       ;UUO TO SET UUOPTR TO ENABLE/DISABLE SIMULATOR
                       ;CALL:
                       ;	UUOSIM AC,
                       ;SETS UUOPTR TO C(AC)
                       UUOSIM:
057271 / 202044,,034365         MOVEM  TAC,UUOPTR(J)          ;
057272 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO ASSIGN A CHANNEL NUMBER
                       CHNSET:
057273 / 262140,,000005           POP    P,000005             ;;POP UP RETURN ADDRESS
057274 / 332312,,024071         SKIPE  DDB,USRJDA(UCHN)       ;;GET ADRESS OF DEVICE DATA BLOCK
057275 / 313513,,024066         CAMLE UCHN,USRHCU(PID)        ;;IS IT LESS THAN OR EQUAL TO HIGHEST
                       ;USER IO CHANNEL IN USE FOR CURRENT JOB?
057276 / 254000,,057304          JRST      057304             ;;CHANNEL NOT ASSIGNED
                       CHNSE1:
057277 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET DATA BLOCK STATUS WORD
057300 / 200446,,000003          MOVE DSER,DEVSER(DDB)        ;;SETUP IO SERVICE DISPATCH TABLE ADDRESS
057301 / 301100,,000072          CAIL TAC1,000072             ;;LONG DISPATCH TABLE UUO?
057302 / 254000,,057317          JRST      057317             ;;YES
057303 / 254005,,000002          JRST           2(DAT)        ;
                       NOCHAN:
057304 / 200044,,026620          MOVE  TAC, UUOPC(J)          ;;IS UUO FROM USER MODE?
057305 / 305100,,000055         CAIGE TAC1,000055             ;;IO UUO?
057306 / 254000,,057315          JRST      057315             ;;NO.
057307 / 607040,,010000          TLNN  TAC,USRMOD             ;
057310 / 254000,,057277          JRST      057277             ;;EXEC MODE
057311 / 302100,,000070          CAIE TAC1,000070             ;;YES,IS IT CLOSE OR RELEASE?
057312 / 306100,,000071          CAIN TAC1,000071             ;;CLOSE AND RELEASE ALWAYS LEGAL
057313 / 254005,,000000          JRST            (DAT)        ;
057314 / 254000,,043331          JRST      043331             ;;NO, PRINT IO TO UNASSIGNED CHANNEL AND STOP JOB
                       CHNSE2:
057315 / 201300,,000000         MOVEI DEVDAT,                   ;;SET DEVDAT 0 TO FLAG NON-IO UUO
057316 / 254005,,000002          JRST           2(DAT)        ;;GO DISPATCH
                       CHNSE3:
057317 / 200046,,000004          MOVE  TAC,DEVMOD(DEVDAT)     ;;LONG DISPATCH TABLE UUO
057320 / 603040,,001000          TLNE  TAC,001000             ;;DOES THIS DEVICE HAVE A LONG DISPATCH TABLE?
057321 / 254005,,000002          JRST           2(DAT)        ;;YES, DISPATCH
057322 / 305100,,000076         CAIGE TAC1,000076             ;;NO, IS UUO LOOKUP OR ENTER?
057323 / 254005,,000000          JRST            (DAT)        ;;NO, RETURN TO USER
057324 / 254005,,000001          JRST           1(DAT)        ;;YES, SKIP RETURN TO USER
                       ;TABLE OF UUO DISPATCH ADDRESSES
                       ;IN FORMAT:
                       ;	XWD 40,41
                       ;	XWD 42,43
                       ;	.
                       ;	XWD 76,77
                       ;THERE'D BETTER BE EXACTLY 40 ENTRIES HERE
                       UUOTAB:
                       ;; HERE manual expand the ignobly programmed, rats nested,
                       ;; macro expansion with lots of conditional assembly for
                       ;;      UUOS { UUOADR U,X }
                       ;; The result of the above commented out crap is a dispatch table for UUO routines
                       ;; that could have been more clearly implemented in its day as follows:
                       ;; `2013-03-02 bgbaumgart@mac.com'
                       ;40-47 CALL INIT - SPCWAR - - - CALLI
                       ;50-57 OPEN TTYUUO - - - RENAME IN OUT
                       ;60-67 SETSTS STATO GETSTS STATZ INBUF OUTBUF INPUT OUTPUT
                       ;74-77 CLOSE RELEASE MTAPE UGETF USETI USETO LOOKUP ENTER
                       ;IOT UUO DISPATCH TABLE
                       UUOIOT:
057345 / 275100,,000700          SUBI TAC1,000700             ;; MAKE 700-777 INTO 0-77
057346 / 301100,,000030          CAIL TAC1,000030             ;; DOES THIS ONE EXIST?
057347 / 254000,,043451          JRST      043451             ;; NO, ILLEGAL INSTRUCTION
057350 / 350000,,036204           AOS      036204             ;; BUMP NUMBER OF IOT UUOS USED
057351 / 241100,,777777           ROT TAC1,777777             ;
057352 / 200242,,057356          MOVE  DAT,IUUTAB(TAC1)       ;; PICK UP DISPATCH ADDRESS
057353 / 201300,,151426         MOVEI DEVDAT,151426             ;;INIT. FOR ERROR PRINTOUTS.
057354 / 350000,,036154           AOS      036154             ;; BUMP COUNT OF DISPATCHES
057355 / 254000,,057132          JRST       DISP4             ;
                       IUUTAB:
                       ;difficult macro IUUOS { UUOADR ,X }
                       ; IFN UUOPHZ,<UUOADR>
                       ;UUO NAME TABLE, FOR FAIL, ETC.
057372 / 000030,,151167                                       ;;
                       ;;else;;IUUMAX*2-1,,UUOFLK ;LINK TO TABLES FOR TTYUUO, ETC.
                       UUONAM:
057373 / 434154,,540000                                       ;
057374 / 515651,,640000                                       ;
057375 / 000000,,000000                                       ;
057376 / 636043,,674162                                       ;
057377 / 000000,,000000                                       ;
057400 / 000000,,000000                                       ;
057401 / 000000,,000000                                       ;
057402 / 434154,,545100                                       ;
057403 / 576045,,560000                                       ;
057405 / 051000,,000000        TTYUUO                         ;
057404 / 646471,,656557                                       ;
057405 / 000000,,000000                                       ;
057406 / 000000,,000000                                       ;
057407 / 000000,,000000                                       ;
057410 / 624556,,415545                                       ;
057412 / 000440,,000000                                       ;
057411 / 515600,,000000                                       ;
057413 / 000640,,000000                                       ;
057412 / 576564,,000000                                       ;
057414 / 000300,,000000                                       ;
057413 / 634564,,636463                                       ;
057414 / 636441,,645700                                       ;
057416 / 000200,,000000                                       ;
057415 / 474564,,636463                                       ;
057416 / 636441,,647200                                       ;
057420 / 704000,,000000         UINBF                         ;
057417 / 515642,,654600                                       ;
057421 / 705000,,000000        UOUTBF                         ;
057420 / 576564,,426546                                       ;
057422 / 056000,,000000            IN                         ;
057421 / 515660,,656400                                       ;
057423 / 000000,,000000                                       ;
057422 / 576564,,606564                                       ;
057424 / 000700,,000000                                       ;
057423 / 435457,,634500                                       ;
057425 / 000440,,000000                                       ;
057424 / 624554,,454163                                       ;
057425 / 556441,,604500                                       ;
057427 / 000100,,000000                                       ;
057426 / 654745,,644600                                       ;
057430 / 000040,,000000                                       ;
057427 / 656345,,645100                                       ;
057431 / 000000,,000000                                       ;
057430 / 656345,,645700                                       ;
057432 / 000700,,000000                                       ;
057431 / 545757,,536560                                       ;
057433 / 000100,,000000                                       ;
057432 / 455664,,456200                                       ;
057434 / 000140,,000000                                       ;
057433 / 000000,,000000                                       ;
057434 / 446071,,435462                                       ;
057435 / 606051,,576400                                       ;
057436 / 656047,,515764                                       ;
057440 / 000100,,000000                                       ;
057437 / 655156,,424600                                       ;
057441 / 000300,,000000                                       ;
057440 / 655765,,644246                                       ;
057442 / 000400,,000000                                       ;
057441 / 464262,,454144                                       ;
057443 / 000340,,000000                                       ;
057442 / 464267,,626400                                       ;
057444 / 000500,,000000                                       ;
057443 / 554151,,540000                                       ;
057444 / 606471,,656557                                       ;
057445 / 605751,,566463                                       ;
057447 / 000700,,000000                                       ;
057446 / 656047,,556645                                       ;
057447 / 656047,,556655                                       ;
057450 / 604751,,576400                                       ;
057451 / 435056,,636463                                       ;
057453 / 000740,,000000                                       ;
057452 / 435453,,515664                                       ;
057453 / 515664,,556353                                       ;
057454 / 515563,,536364                                       ;
057455 / 515563,,534354                                       ;
057456 / 515664,,656557                                       ;
057457 / 515760,,656350                                       ;
057460 / 515760,,576000                                       ;
057461 / 515760,,445400                                       ;
                       ;CALL AND CALLI
                       ; CALLING SEQUENCE
                       ;	CALL D,[SIXBIT/NAME/]
                       ; WHERE NAME IS THE NAME OF A SYSTEM ROUTINE.
                       ; IF NO SYSTEM ROUTINE WITH THE SPECIFIED NAME IF FOUND, THIS ROUTINE
                       ; EXITS TO UUOERR.
                       ;CONTENTS OF USER AC PLACED IN AC TAC,UUO SET TO POINT
                       ;TO USER AC, PROG IN LH.
                       ;ITEM SET TO JOB NUMBER
                       UCALL:
152502 / 200254,,000000          MOVE  DAT,      (UUO)        ;
057462 / 256200,,152502          XCTR   XR,152502             ;;PICK UP NAME OF SYSTEM ROUTINE
057463 / 205100,,777612         MOVSI TAC1,777612             ;
057464 / 312242,,057513          CAME  DAT,UCLTAB(TAC1)       ;;SEARCH SYSTEM ROUTINE NAME TABLE
057465 / 253100,,057464         AOBJN TAC1,057464             ;
057466 / 627100,,777777          TLZN TAC1,777777             ;;CLEAR LH. WAS IT ZERO?
057467 / 254000,,043340          JRST      043340             ;;YES. RAN OUT OF TABLE
057470 / 254000,,057474          JRST      057474             ;;NO. DISPATCH.
                       ;CALLI UUO	-	CALL IMMEDIATE
                       ;CALLI D,E
                       ;WHERE E IS RELATIVE INDEX IN CALL TABLE
                       UCALLI:
057471 / 550100,,000014          HRRZ TAC1,   UUO             ;
057472 / 301100,,000046          CAIL TAC1,000046             ;;EXCEED ?
057473 / 254000,,057503          JRST      057503             ;;YES. ERROR
                       UCALL1:
057474 / 262140,,000001           POP    P,000001             ;;REMOVE RETURN
057475 / 540600,,000012           HRR  UUO,000012             ;;UUO AC FIELD
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
057476 / 256200,,152455          XCTR   XR,152455             ;;PICK UP CONTENTS OF USER AC
057477 / 241100,,777777           ROT TAC1,777777             ;;DIVIDE BY 2 AND SAVE REMAINDER
057500 / 200242,,057702          MOVE  DAT,UCLJMP(TAC1)       ;;GET DISPACTH TABLE ENTRY
057501 / 200213,,024061          MOVE    J,   JOB(PID)        ;
057502 / 254000,,057132          JRST      057132             ;;AND GO DISPATCH
                       UCALL2:
057503 / 626600,,400000          TRZN  UUO,400000             ;;IS HE ASKING FOR A STANFORD CALLI?
057504 / 254000,,043340          JRST      043340             ;;NO, SHOOT HIM!! BANG!
057505 / 201114,,000046         MOVEI TAC1,UCLDLN(UUO)        ;
057506 / 301100,,000046          CAIL TAC1,000046             ;;IF NOT BIGGER THAN THIS, FLUSH IT!
057507 / 301100,,000166          CAIL TAC1,000166             ;;STILL TOO LARGE?
057510 / 254000,,043340          JRST      043340             ;;YES, FLUSH
057511 / 350000,,036205           AOS      036205             ;;BUMP NUMBER OF STANFORD CALLIS USED
057512 / 254000,,057474          JRST      UCALL1             ;
                       ;CALL UUO DISPATCH TABLE
                       ;NEW UUOS MUST BE ADDED AT END SINCE CALLI DEPENDS ON
                       ;POSITION IN TABLE
                       ;ALSO NUMBER OF DEC CALLIS MUST BE EVEN
                       ; THE FOLLOWING ARE STANFORD'S OWN PRIVATE CALLI'S
                       ;NOTE, USE UP THE UUOERR ENTRIES BEFORE MAKING NEW ONES
                       ; MACROS TO DEFINE CALLI TABLES
                       UCLTAB:
057513 / 624563,,456400                                       ;
057514 / 444464,,515600                                       ;
057515 / 634564,,444464                                       ;
057516 / 444464,,576564                                       ;
057517 / 444566,,435062                                       ;
057520 / 444464,,476400                                       ;
057521 / 474564,,435062                                       ;
057522 / 444464,,625400                                       ;
057523 / 674151,,640000                                       ;
057524 / 435762,,450000                                       ;
057525 / 457051,,640000                                       ;
057526 / 656460,,435462                                       ;
057527 / 444164,,450000                                       ;
057530 / 545747,,515600                                       ;
057531 / 416062,,455642                                       ;
057532 / 545747,,576564                                       ;
057533 / 636751,,644350                                       ;
057534 / 624541,,636351                                       ;
057535 / 645155,,456200                                       ;
057536 / 556364,,515545                                       ;
057537 / 474564,,606056                                       ;
057540 / 656557,,456262                                       ;
057541 / 656557,,456262                                       ;
057542 / 626556,,645155                                       ;
057543 / 605257,,420000                                       ;
057544 / 635445,,456000                                       ;
057545 / 634564,,605766                                       ;
057546 / 604545,,530000                                       ;
057547 / 474564,,545600                                       ;
057550 / 626556,,000000                                       ;
057551 / 634564,,656760                                       ;
057552 / 624555,,416000                                       ;
057553 / 474564,,634547                                       ;
057554 / 474564,,644142                                       ;
057555 / 656557,,456262                                       ;
057556 / 634564,,564155                                       ;
057557 / 645560,,435762                                       ;
057560 / 656557,,456262                                       ;
057561 / 636067,,426564                                       ;
057562 / 436454,,660000                                       ;
057563 / 634564,,564155                                       ;
057564 / 636043,,674757                                       ;
057565 / 636741,,600000                                       ;
057566 / 455157,,645500                                       ;
057567 / 545157,,645500                                       ;
057570 / 605641,,554500                                       ;
057571 / 654642,,474564                                       ;
057572 / 654642,,475166                                       ;
057573 / 654642,,435462                                       ;
057574 / 524264,,636463                                       ;
057575 / 646471,,515763                                       ;
057576 / 435762,,452200                                       ;
057577 / 416464,,634547                                       ;
057600 / 444564,,634547                                       ;
057601 / 634564,,606257                                       ;
057602 / 634547,,566555                                       ;
057603 / 634547,,635172                                       ;
057604 / 545156,,536560                                       ;
057605 / 445163,,555163                                       ;
057606 / 515664,,455642                                       ;
057607 / 515664,,576255                                       ;
057610 / 515664,,414355                                       ;
057611 / 515664,,455663                                       ;
057612 / 515664,,515160                                       ;
057613 / 515664,,516261                                       ;
057614 / 515664,,474556                                       ;
057615 / 656741,,516400                                       ;
057616 / 444542,,624541                                       ;
057617 / 634564,,565522                                       ;
057620 / 634547,,564155                                       ;
057621 / 516741,,516400                                       ;
057622 / 656353,,516000                                       ;
057623 / 426546,,544556                                       ;
057624 / 564155,,455156                                       ;
057625 / 635445,,664554                                       ;
057626 / 514556,,426700                                       ;
057627 / 626556,,556353                                       ;
057630 / 646471,,554563                                       ;
057631 / 525742,,624400                                       ;
057632 / 444566,,656345                                       ;
057633 / 634564,,606222                                       ;
057634 / 474564,,606222                                       ;
057635 / 625445,,664554                                       ;
057636 / 654642,,605071                                       ;
057637 / 654642,,635360                                       ;
057640 / 464267,,415164                                       ;
057641 / 654642,,456262                                       ;
057642 / 674153,,455545                                       ;
057643 / 474564,,564155                                       ;
057644 / 635645,,415367                                       ;
057645 / 635645,,415363                                       ;
057646 / 474460,,645155                                       ;
057647 / 634564,,606266                                       ;
057650 / 444443,,504156                                       ;
057651 / 664463,,554160                                       ;
057652 / 446353,,606056                                       ;
057653 / 446353,,645155                                       ;
057654 / 634564,,436244                                       ;
057655 / 434154,,545164                                       ;
057656 / 704760,,656557                                       ;
057657 / 545743,,530000                                       ;
057660 / 655654,,574353                                       ;
057661 / 444171,,435664                                       ;
057662 / 414343,,645155                                       ;
057663 / 655660,,656245                                       ;
057664 / 645560,,436244                                       ;
057665 / 444566,,566555                                       ;
057666 / 414364,,435062                                       ;
057667 / 656557,,635155                                       ;
057670 / 606063,,607100                                       ;
057671 / 414463,,554160                                       ;
057672 / 424545,,600000                                       ;
057673 / 675057,,000000                                       ;
057674 / 646471,,525742                                       ;
057675 / 000000,,000000                                       ;
057676 / 474564,,606266                                       ;
057677 / 646471,,635360                                       ;
057700 / 445141,,540000                                       ;
057701 / 000000,,057373                                       ;;POINTER TO FIND REST OF UUO NAMES
                       UCLJMP:
                       ;EXIT UUO ROUTINE
                       ;(1-14-72) EXIT UUO WITH AC FIELD ≠ 0 WILL STOP JOB,
                       ;TYPE CRLF DOT AND ALLOW USER TO TYPE CONTINUE
                       EXIT:
057775 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
057776 / 570104,,027320          HRRE TAC1,JBTLIN(J)          ;
057777 / 321100,,060014         JUMPL TAC1,060014             ;;KILL DETACHED JOB THAT EXIT!
060000 / 607040,,010000          TLNN  TAC,010000             ;;LOGGED IN?
060001 / 254000,,060014          JRST      060014             ;;FLUSH DETATCHED OR UNLOGGED IN JOBS
060002 / 326500,,060017         JUMPN UCHN,060017             ;;IS THIS CALLI N,12 WITH N≠0
060003 / 260140,,045075         PUSHJ    P,045075             ;;FLUSH USER'S IO
060004 / 260140,,060050         PUSHJ    P,060050             ;;RESET EVERYTHING ELSE
060005 / 260140,,137616         PUSHJ    P,137616             ;;FIND TTY FOR CURRENT JOB
                       ;SET ITEM TO JOB NO.,DAT TO OUTPUT BYTE POINTER
                       ;DEVDAT TO TTY DDB
060006 / 402007,,000130         SETZM      JOBOPC(PROG)       ;;NO MORE OPC
060007 / 402004,,026620         SETZM       UUOPC(J)          ;;OR USER PC (NOTE ESTOP CHANGED TO GO TO USRXIT)
060010 / 402004,,026720         SETZM      UUOOPC(J)          ;;OR BACKUP USER PC
                       ;NOTE ALL THIS MEANS THAT THE NEXT START, ETC.
                       ;WILL LEAVE A 0 IN JOBOPC (HERE'S TO CLEAN RAID SCREENS)
060011 / 265040,,045545           JSP  TAC,045545             ;;MOVE "EXIT" TO OUTPUT BUFFER
                       ;AND STOP JOB, AND START TTY
                       EXIT1:
060014 / 260140,,045075         PUSHJ    P,045075             ;;HERE TO KILL JOB.  FLUSH USER IO
060015 / 260140,,150072         PUSHJ    P,150072             ;; ZERO SPACEWAR CELLS
060016 / 254000,,052607          JRST      052607             ;
                       EXIT2:
060017 / 260140,,150072         PUSHJ    P,150072             ;; ZERO SPACEWAR CELLS
060020 / 260140,,137616         PUSHJ    P,137616             ;;GET THE USER'S CONSOLE
060021 / 260140,,042713         PUSHJ    P,042713             ;;TYPE CRLF ↑C CRLF .
060022 / 260140,,137704         PUSHJ    P,137704             ;;START THE TTY
060023 / 254000,,045672          JRST      045672             ;;COPIED (BLINDLY) FROM HALT, (LAME EXCUSE)
                       ;SETPOV - SET PUSH DOWN OVERFLOW TRAP
                       ;CALL	MOVE AC,ADR. OF TRAP ON PD OVF
                       ;	CALL AC,[SIXBIT /SETPOV/]
                       SETPOV:
060024 / 202047,,000125         MOVEM  TAC,JOBAPR(JDAT)       ;
060025 / 201040,,200000         MOVEI  TAC,  1B19             ;
060026 / 254000,,060143          JRST      060143             ;;SET TRAP LOC.
                       ;RESET UUO ROUTINE
                       RESET:
060027 / 260140,,060104         PUSHJ    P,060104             ;
                       RESETU:
060030 / 332013,,023425         SKIPE      SPWUUF(PID)        ;;AT SPACEWAR LEVEL?
060031 / 254000,,150447          JRST      150447             ;;FLUSH THE BASTARD
060032 / 336013,,023431         SKIPN      INTACT(PID)        ;
060033 / 254000,,060047          JRST      RESETA             ;
060034 / 265040,,043640           JSP  TAC,UUOMES             ;
                       RESETA:
060047 / 260140,,045210         PUSHJ    P,045210             ;;RELEASE ALL DEVICES
                       RESETB:
060050 / 260140,,051042         PUSHJ    P,051042             ;;CLEAR THE USER INTERRUPT SYSTEM (FLUSHES CLK REQS)
060051 / 260140,,072775         PUSHJ    P,072775             ;;UNLOCK HIM IN CORE.
060052 / 332044,,027220         SKIPE  TAC,JBTPR2(J)          ;;IS HE DOING PEEK-POKE?
060053 / 602040,,000002          TRNE  TAC,000002             ;;DON'T CLEAR PSEUDO-UPPER
060054 / 254000,,060060          JRST      060060             ;;NO
060055 / 402004,,027220         SETZM      JBTPR2(J)          ;;CLEAR IT
060056 / 260140,,072621         PUSHJ    P, GETPR             ;
060057 / 700140,,000001         DATAO  APR,000001             ;;AND INDICATE IN PROT.,RELOC, REG.
                       NOPR2:
                       ;AND RETURN TO USER
060060 / 200213,,024061          MOVE    J,   JOB(PID)        ;
060061 / 332644,,033265         SKIPE  AC1, JBTFS(J)          ;;ANY FREE STORAGE?
060062 / 260140,,074163         PUSHJ    P,074163             ;;YES, RETURN IT
060063 / 402004,,033265         SETZM       JBTFS(J)          ;
060064 / 260140,,150072         PUSHJ    P,KILSPW             ;
060065 / 260140,,113206         PUSHJ    P,113206             ;;RELEASE ALL HIS FAST BANDS
060066 / 402000,,000001         SETZM         TAC             ;
060067 / 260140,,060143         PUSHJ    P,060143             ;;KILL HIS APR INTERRUPTS
060070 / 332644,,033365         SKIPE  AC1,033365(J)          ;;ANYTHING IN HIS MAILBOX ?
060071 / 260140,,074163         PUSHJ    P,074163             ;;YES. RETURN THE FREE STORAGE.
060072 / 402004,,033365         SETZM      033365(J)          ;;EMPTY THE MAILBOX.
060073 / 260140,,145107         PUSHJ    P,145107             ;;FLUSH HIS PSEUDO TTY'S, IF ANY.
060074 / 205044,,000000         MOVSI  TAC,      (J)          ;
060075 / 260140,,135144         PUSHJ    P,135144             ;;FLUSH HIS DATA DISC CHANNELS
060076 / 260140,,144140         PUSHJ    P,144140             ;;RESET AUDIO SWITCH MAP
060077 / 200644,,027320          MOVE  AC1,JBTLIN(J)          ;;PICK UP LINE CHARACTERISTICS
151674 / 777777,,777777                                       ;
060100 / 312640,,151674          CAME  AC1,151674             ;;DETACHED?
060101 / 607640,,420000          TLNN  AC1,420000             ;;IF III OR DD, GO RESET THE DISPLAY
060102 / 263140,,000000          POPJ    P,                   ;;NO, NO RESET OF SCREEN
060103 / 254000,,131077          JRST      131077             ;;RESET HIS DPY, IF HE HAS ONE.
                       ; ROUTINE TO RESET ONE'S UPPER SEGMENT
                       RESETS:
060104 / 261140,,000001          PUSH    P,   TAC             ;
060105 / 261140,,000015          PUSH    P,   AC1             ;
060106 / 261140,,000002          PUSH    P,  TAC1             ;
060107 / 261140,,000006          PUSH    P,   DDB             ;
060110 / 260140,,042451         PUSHJ    P,042451             ;; FLUSH HIS UPPER, IF ANY
060111 / 312213,,024061          CAME ITEM,   JOB(PID)        ;; IS THIS THE CURRENT JOB?
060112 / 254000,,060115          JRST      060115             ;; NO, DON'T BOTHER TO RESET PR
060113 / 260140,,072621         PUSHJ    P,072621             ;; RESET HIS PROT-RELOC
060114 / 700140,,000001         DATAO  APR,   TAC             ;
                       RESTG1:
060115 / 262140,,000006           POP    P,   DDB             ;
060116 / 262140,,000002           POP    P,  TAC1             ;
060117 / 262140,,000015           POP    P,   AC1             ;
060120 / 262140,,000001           POP    P,   TAC             ;
060121 / 263140,,000000          POPJ    P,                   ;
                       ;APRDKL  ROUTINE TO KILL ANY CLOCK INTERRUPT REQUESTS FOR JOB J
                       APRDKL:
060122 / 326540,,037403         JUMPN  PID, CPOPJ             ;
060123 / 261140,,000002          PUSH    P,000002             ;;SAVE THIS IN CASE SOMEONE DEPENDS ON IT
060124 / 700640,,000002          CONI   PI,000002             ;;GET STATE OF PI SYSTEM
060125 / 405100,,000020          ANDI TAC1,000020             ;;MASK FOR ONLY STATE OF APR CHANNEL
060126 / 700600,,001020          CONO   PI,001020             ;;MAKE SURE CHANNEL IS OFF
060127 / 332040,,026112         SKIPE  TAC,APRLST             ;
                       APRDK3:
060130 / 336641,,000000         SKIPN  AC1,      (TAC)        ;
060131 / 254000,,060140          JRST      060140             ;;APRLST EMPTY OR END OF LIST
060132 / 306215,,000000          CAIN    J,      (AC1)        ;
060133 / 254000,,060136          JRST      060136             ;;THIS IS OUR REQUEST
060134 / 271040,,000002          ADDI  TAC,     2             ;
060135 / 254000,,060130          JRST      APRDK3             ;
                       APRDK2:
060136 / 260140,,046344         PUSHJ    P,046344             ;;DELETE REQUEST POINTED TO BY TAC
060137 / 255000,,000000          JFCL                         ;
                       APRDK1:
060140 / 700602,,002000          CONO   PI,  2000(TAC1)       ;;TURN CHANNEL ON ONLY IF WE TURNED IT OFF.
060141 / 262140,,000002           POP    P,  TAC1             ;
060142 / 263140,,000000          POPJ    P,                   ;
                       ;APRENB - ROUTINE TO SET UP APR FOR USER TRAPPING
                       ;CALL:	CALL AC,[SIXBIT /APRENB/]
                       ;WITH FOLLOWING APR CONSO FLAG BITS
                       ;TO INDICATE WHICH APR CONDITIONS SHOULD
                       ;TRAP TO USER WHEN TRAP OCCURS FROM USER MODE
                       ;1B18	;CONS TRAP		;JS
                       ;1B19	;PUSHDOWN OVERFLOW
                       ;1B22	;ILLEGAL MEMORY
                       ;1B23	;NON-EXISTENT MEMORY
                       ;1B26	;CLOCK
                       ;1B29	;PC CHANGE FLAG (AR FOV ON THE PDP-10)
                       ;1B32	;ARITH. OVERFLOW
                       APRENB:
060143 / 405040,,631110          ANDI  TAC,631110             ;;MASK OUT ILLEGAL BITS ;JS
060144 / 202047,,000043         MOVEM  TAC,JOBENB(JDAT)       ;;SET RH TO CONSO BITS
060145 / 612053,,023510          TDNE  TAC,APRIN2(PID)        ;
060146 / 254000,,062564          JRST      INTLOS             ;
060147 / 434053,,023510           IOR  TAC,APRIN2(PID)        ;;MAKE SURE WE INCLUDE OTHER MOORER INTS
                       APREN2:
060150 / 542053,,023507          HRRM  TAC,APRIN1(PID)        ;;SET CONSO FLAGS IN APRSER ROUTINE WITH
                       ;WITH FLAGS USER IS ENABLED FOR
060151 / 431040,,000110          XORI  TAC,000110             ;; COMPLEMENT PC CHNG AND AROV
060152 / 271040,,000330          ADDI  TAC,000330             ;; DISABLE THE ENABLED ONES
060153 / 405040,,000660          ANDI  TAC,   660             ;
060154 / 700201,,000003          CONO  APR,APRCHN(TAC)        ;;ENABLE OR DISABLE PC CHANGE AND OR OVF
060155 / 263140,,000000          POPJ  PDP,                   ;
                       ;PJOB, DATE, DAYCNT, ACCTIM, DSKTIM, JOBTIM, MSTIME UUO'S
                       JOBNO:
060156 / 200040,,000004          MOVE  TAC,000004             ;;RETURN JOB NUMBER OF THIS JOB
060157 / 254000,,060225          JRST      060225             ;;STORE IN USER AREA.
                       DATE:
060160 / 200040,,024634          MOVE  TAC,024634             ;;RETURN DATE TO USER
060161 / 254000,,060225          JRST      STOTAC             ;
                       ;CONVERT SYSTEM FORMAT DATE TO NUMBER OF DAYS SINCE 1-JAN-64
                       DAYCT:
060162 / 327040,,060164         JUMPG  TAC,060164             ;;ARGUMENT IN SYSTEM FORMAT TO DAY COUNT.
060163 / 200040,,024634          MOVE  TAC,024634             ;;ZERO OR NEGATIVE DATE GIVEN GETS TODAY'S DATE
060164 / 260140,,055434         PUSHJ    P,055434             ;;THIS ROUTINE IS IN COMCON
060165 / 254000,,060225          JRST      STOTAC             ;
                       ACCTIM:
060166 / 200040,,023423          MOVE  TAC,023423             ;;GET <DATE>,,<TIME IN SECS>
060167 / 254000,,060225          JRST      060225             ;;AND RETURN IT
                       DSKTIM:
060170 / 260140,,075220         PUSHJ    P,075220             ;;RETURN DATE & TIME IN DSKSER FORMAT
152567 / 202114,,000000         MOVEM TAC1,      (UUO)        ;
060171 / 256040,,152567          XCTR   XW,152567             ;
060172 / 263140,,000000          POPJ    P,                   ;
                       ;RETURN JOB RUNNING TIME IN MILLISECONDS
                       JOBTIM:
060173 / 321040,,060313         JUMPL  TAC,060313             ;;ILLEGAL JOB NUMBER
060174 / 301040,,000100          CAIL  TAC,000100             ;
060175 / 254000,,060313          JRST      060313             ;;ILLEGAL JOB NUMBER
060176 / 327040,,060200         JUMPG  TAC,060200             ;
060177 / 201044,,000000         MOVEI  TAC,      (J)          ;;ASSUME CURRENT JOB FOR ZERO ARGUMENT
060200 / 200041,,031243          MOVE  TAC, TTIME(TAC)        ;;TOTAL JOB RUNNING TIME IN TICKS.
060201 / 254000,,060205          JRST      060205             ;;CONVERT TO MILLISECONDS AND RETURN
                       TIMER:
060202 / 200040,,024633          MOVE  TAC,024633             ;;RETURN TIME OF DAY IN JIFFIES
060203 / 254000,,060225          JRST      STOTAC             ;
                       ;RETURN TIME OF DAY IN MILLISECONDS
                       MSTIME:
060204 / 200040,,024633          MOVE  TAC,024633             ;;GET TIME OF DAY
                       MST1:
060205 / 221040,,001750         IMULI  TAC,001750             ;;CONVERT TIME FROM JIFFIES TO MILLISECONDS
060206 / 231040,,000074         IDIVI  TAC,000074             ;;DIVIDE BY NO. OF JIFFIES PER SECOND
060207 / 254000,,060225          JRST      STOTAC             ;
                       ;SLEEP	PUT JOB TO SLEEP FOR NSECONDS
                       ;CALL	CALL AC,[SIXBIT /SLEEP/]
                       SLEEP:
060210 / 221040,,000074         IMULI  TAC,000074             ;;MULTIPLY BY NO. OF JIFFIES PER SECOND
                       SLEEPT:
060211 / 205100,,000400         MOVSI TAC1,  CLKR             ;
060212 / 612104,,026114          TDNE TAC1,JBTSTS(ITEM)       ;;DOES THIS JOB HAVE A CLOCK QUEUE
                       ;REQUEST IN CLOCK QUEUE?
060213 / 254000,,046040          JRST      046040             ;;YES, DO NOT PUT ANOTHER ONE IN
060214 / 606040,,007777          TRNN  TAC,007777             ;;0 TIME?  ;JS
                       SLEEP1:
060215 / 201040,,000001         MOVEI  TAC,000001             ;;YES. SLEEP 1 JIFFY
152401 / 000000,,000001                                       ;
152401 / 140600,,000001 POINT 6,00000001,23                   ;
060216 / 137200,,152401           DPB ITEM,152401             ;
060217 / 505040,,046044          HRLI  TAC,046044             ;;ADR. IN RUNCSS WHEN JOB WAKES UP
060220 / 700600,,000400          CONO   PI, PIOFF             ;
060221 / 136040,,024117          IDPB  TAC, CLOCK             ;
060222 / 700600,,000200          CONO   PI,  PION             ;
060223 / 254000,,046040          JRST      046040             ;;SET JOB STATUS WORD SO JOB WILL NOT RUN
                       ;SWITCH	RETURN DATA SWITCHES
                       SWITCH:
060224 / 700040,,000001         DATAI      000001             ;;READ SWITCHES, FALL INTO STOTAC
                       ;ROUTINE TO STORE TAC IN USER AREA AS SPECIFIED BY UUO
                       ;MUST BE CALLED FROM UUO LEVEL WITH PROG SETUP
                       ;ALSO PROG IN INDEX FIELD OF UUO
                       STOTAC:
152550 / 202054,,000000         MOVEM  TAC,      (UUO)        ;
060225 / 256040,,152550          XCTR   XW,152550             ;;STORE TAC INTO USER'S AC
060226 / 263140,,000000          POPJ    P,                   ;
                       ;DVCHR, DEVNUM
                       DVCHR:
060227 / 260140,,044655         PUSHJ    P,044655             ;;SEARCH FOR DEVICE (OR CHANNEL)
060230 / 634040,,000001          TDZA  TAC,000001             ;;NOT A DEVICE, RETURN ZERO
060231 / 334046,,000004         SKIPA  TAC,DEVMOD(DDB)        ;;DEVICE FOUND,RETURN DEVMOD
060232 / 254000,,060225          JRST      060225             ;;RETURN ZERO, DEVICE NOT FOUND
060233 / 607040,,100000          TLNN  TAC, DVUDP             ;
060234 / 254000,,060251          JRST      060251             ;;EASY OUT UNLESS UDP
060235 / 135700,,037577           LDB  AC2,037577             ;;UDP, SCAN ENTIRE DDB LIST OF THIS UDP
060236 / 200116,,011745          MOVE TAC1,DKDBML(AC2)        ;
060237 / 200646,,000000          MOVE  AC1,      (DDB)        ;
                       DVCHR0:
060240 / 554102,,000003          HLRZ TAC1,DEVSER(TAC1)       ;
060241 / 312642,,000000          CAME  AC1,      (TAC1)       ;
060242 / 254000,,060245          JRST      060245             ;;END OF DDBS FOR THIS DEVICE
060243 / 434046,,000004           IOR  TAC,DEVMOD(DDB)        ;;RETURN UNION OF ALL ASSCON AND ASSPRG BITS
060244 / 254000,,060240          JRST      DVCHR0             ;
                       DVCHR1:
060245 / 331116,,011750         SKIPL TAC1,011750(AC2)        ;
060246 / 316113,,024061          CAMN TAC1,   JOB(PID)        ;
060247 / 661040,,000040           TLO  TAC,000040             ;;AVAILABLE IF HIS OR PUBLIC
060250 / 254000,,060225          JRST      STOTAC             ;
                       DVCHR2:
060251 / 135100,,037575           LDB TAC1,037575             ;;GET JOB NO.  USING DEVICE
060252 / 312113,,024061          CAME TAC1,   JOB(PID)        ;;DOES CURRENT USER ALREADY HAVE IT?
152200 / 020000,,600000           XWD TTYATC,ASSCON+ASSPRG    ;
060253 / 616040,,152200          TDNN  TAC,152200             ;;NO, IS IT ASSIGNED?
060254 / 661040,,000040           TLO  TAC,000040             ;;NO, BUT HE CAN GET IT.
060255 / 254000,,060225          JRST      STOTAC             ;
                       DEVNUM:
060256 / 260140,,044655         PUSHJ    P,FNDDDB             ;
060257 / 263140,,000000          POPJ    P,                   ;;NONE
060260 / 135040,,037577           LDB  TAC,037577             ;;GET UNIT NUMBER
060261 / 350003,,000000           AOS            (P)          ;
060262 / 254000,,060225          JRST      STOTAC             ;
                       ;GETPPN -- DSKPPN
                       ;DSKPPN
                       ;CALLING:
                       ;	CALL AC,[SIXBIT/DSKPPN/]
                       ;AC		MEANING
                       ;0		RETURN CURRENT JOB'S DSKPPN
                       ;1 TO JOBN-1	RETURN DSKPPN OF JOB IN AC
                       ;-1		RESET DSKPPN OF CURRENT JOB
                       ;ANYTHING ELSE	WILL TRY TO BE PPN TO SET DSKPPN TO
                       ;		MUST HAVE NON-ZERO LEFT AND RIGHT HALVES
                       UDSKPP:
151674 / 777777,,777777                                       ;
060263 / 316040,,151674          CAMN  TAC,151674             ;;REQUESTING A RESET?
060264 / 344040,,060271          AOJA  TAC,060271             ;;YES, SET TAC TO 0 AND STORE IT
060265 / 607040,,777777          TLNN  TAC,777777             ;;IS IT PPN?
060266 / 254000,,060301          JRST      060301             ;;NO, MAYBE JUST GETTING SOMEONES DSKPPN
060267 / 606040,,777777          TRNN  TAC,777777             ;
060270 / 540044,,027720           HRR  TAC,PRJPRG(J)          ;;COPY PRG FROM PRJPRG
                       RSTPPN:
060271 / 316044,,027720          CAMN  TAC,PRJPRG(J)          ;
060272 / 201040,,000000         MOVEI  TAC,                   ;;THIS IS REALLY A RESET
060273 / 316040,,074743          CAMN  TAC,074743             ;;SAME AS 1,1?
060274 / 263140,,000000          POPJ    P,                   ;;DISALLOW SOME FORMS OF LOSSAGE.
060275 / 312044,,030020          CAME  TAC,DSKPPN(J)          ;
060276 / 402004,,030642         SETZM      JBTUFD(J)          ;;CLEAR LOC OF UFD IF DEFAULT UFD IS CHANGING
060277 / 202044,,030020         MOVEM  TAC,DSKPPN(J)          ;;SET NEW DISK ALIAS PPN
060300 / 263140,,000000          POPJ    P,                   ;
                       RTDSKP:
060301 / 326040,,060303         JUMPN  TAC,060303             ;
060302 / 200040,,000004          MOVE  TAC,000004             ;;WANTS HIS OWN
060303 / 205100,,040000         MOVSI TAC1,   JNA             ;
060304 / 305040,,000100         CAIGE  TAC,000100             ;;LEGAL?
060305 / 616101,,026114          TDNN TAC1,JBTSTS(TAC)        ;;AND A REAL JOB?
060306 / 254000,,060313          JRST      060313             ;;NO
060307 / 336101,,030020         SKIPN TAC1,DSKPPN(TAC)        ;;IF THIS IS 0
060310 / 200101,,027720          MOVE TAC1,PRJPRG(TAC)        ;;THEN THIS IS IT
                       ;FTDSKPPN
                       ;FTDSKPPN
152567 / 202114,,000000         MOVEM TAC1,      (UUO)        ;
060311 / 256040,,152567          XCTR   XW,152567             ;;RETURN IT
060312 / 263140,,000000          POPJ    P,                   ;
                       RTZERO:
060313 / 201040,,000000         MOVEI  TAC,                   ;
060314 / 254000,,060225          JRST      STOTAC             ;
                       ;RETURN PROJECT-PROGRAMMER NUMBER IN AC
                       GETPPN:
                       ;;misplaced right end closing;;IFN FTLOGIN,<	
060315 / 205040,,100000         MOVSI  TAC,100000             ;;ACCOUNTING PROGRAM?
060316 / 612044,,026114          TDNE  TAC,JBTSTS(J)          ;
060317 / 254000,,060322          JRST      060322             ;;YES. GETPPN DOES DIFFERENT THING
060320 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;
060321 / 254000,,060225          JRST      STOTAC             ;
                       GETPPL:
060322 / 402004,,030642         SETZM      JBTUFD(J)          ;;ACCOUNTING: ANY OTHER USERS UNDER SAME PPN?
060323 / 402004,,030020         SETZM      DSKPPN(J)          ;;RESET DISK ALIAS PPN
060324 / 200040,,037616          MOVE  TAC,037616             ;;GET ALL POWERFULL PPN
060325 / 250044,,027720          EXCH  TAC,PRJPRG(J)          ;;SET THIS JOB TO THAT PPN
060326 / 201100,,000077         MOVEI TAC1,000077             ;;LOOK THRU ALL THE WORLD
060327 / 316042,,027720          CAMN  TAC,PRJPRG(TAC1)       ;;SKIP IF NOT MATCHED
060330 / 316200,,000002          CAMN    J,000002             ;;MATCH. SKIP IF MATCH DIFFERENT FROM JOB NUMBER
060331 / 367100,,060327          SOJG TAC1,060327             ;;NO MATCH OR MATCHED SELF. LOOP
060332 / 323100,,060225        JUMPLE TAC1,060225             ;;IF TAC1 = 0 THEN NO MATCH
060333 / 350003,,000000           AOS            (P)          ;;MAKE IT SKIP RETURN
060334 / 254000,,060225          JRST      060225             ;;GO RETURN
                       ;SETNAM, SETCRD, SETDDT, GETNAM
                       SETNAM:
060335 / 200213,,024061          MOVE    J,   JOB(PID)        ;
060336 / 202044,,030142         MOVEM  TAC,JOBNAM(J)          ;;SET JOB NAME FOR SYSTAT
060337 / 260140,,072454         PUSHJ    P,NAMSTT             ;
060340 / 263140,,000000          POPJ  PDP,                   ;
                       ;SET CREATION DATE & PROT
                       SETCRD:
060341 / 623040,,400000          TLZE  TAC,400000             ;;CLEAR & CHECK UNUSED BIT
060342 / 254000,,060351          JRST      060351             ;;ANY OF THESE MEANS DO IT TO THE UPPER
                       SETCD1:
060343 / 202044,,030542         MOVEM  TAC,JOBCRD(J)          ;
152022 / 000037,,777777                                       ;
060344 / 612040,,152022          TDNE  TAC,152022             ;
060345 / 263140,,000000          POPJ    P,                   ;
060346 / 260140,,075220         PUSHJ    P,DSKTM1             ;
060347 / 436104,,030542          IORM TAC1,JOBCRD(J)          ;
060350 / 263140,,000000          POPJ    P,                   ;
                       SETCD2:
060351 / 261140,,000004          PUSH    P,000004             ;;SAVE FOR ACCESS
060352 / 135200,,037600           LDB    J, PSEGN             ;
060353 / 322200,,037376         JUMPE    J,037376             ;;EASY IF NO UPPER
060354 / 200640,,000001          MOVE  AC1,000001             ;;ELSE SAVE ARG
060355 / 260140,,042155         PUSHJ    P,042155             ;;AND MAKE SURE THIS IS LEGAL
060356 / 254000,,037376          JRST       TPOPJ             ;
060357 / 254000,,037376          JRST       TPOPJ             ;
151763 / 000001,,000001                                       ;
060360 / 274140,,151763           SUB    P,151763             ;;DON'T NEED THAT JOB # ANY MORE
060361 / 200040,,000015          MOVE  TAC,   AC1             ;
060362 / 254000,,060343          JRST      SETCD1             ;
                       SETDDT:
060363 / 202053,,024070         MOVEM  TAC,USRDDT(PID)        ;;ROUTINE TO SET ONE'S DDT STARTING ADDRESS
060364 / 263140,,000000          POPJ    P,                   ;;RETURN TO USER
                       GETNAM:
060365 / 323040,,060367        JUMPLE  TAC,060367             ;;GET JOBNAME GIVEN JOB NUMBER
060366 / 301040,,000100          CAIL  TAC,  JOBN             ;
                       GETNA1:
060367 / 200040,,000004          MOVE  TAC,     J             ;
060370 / 200041,,030142          MOVE  TAC,JOBNAM(TAC)        ;
060371 / 254000,,060225          JRST      STOTAC             ;
                       ;WAIT FOR IO TO BECOME INACTIVE ON CHANNEL AC
                       WAIT:
060372 / 322300,,043331         JUMPE DEVDAT,043331             ;;CHANNEL ASSIGNED?
060373 / 254000,,046160          JRST      046160             ;;WAIT TILL INACTIVE BEFORE
                       ;RETURNING TO USER.
                       GETLN:
060374 / 260140,,137613         PUSHJ  PDP,137613             ;;GET NAME OF TTY
060375 / 200046,,000000          MOVE  TAC,      (DEVDAT)     ;
060376 / 254000,,060225          JRST      STOTAC             ;
                       ;CRKSER -- READ THE PETIT CROCK, J. SAUTER, REST OF PAGE.
                       ;FOR A DESCRIPTION OF THE ON-LINE CALENDAR CLOCK SEE
                       ;SAILON MEMO NUMBER 9.
                       ;DATIME SKIPS RETURN IF CLOCK IS OK AND RETURNS IN DAT
                       ;THE YEAR, MONTH, AND DAY IN STANDARD SYSTEM FORMAT.
                       ;IN ITEM THE TIME TO THE NEAREST JIFFIE.
                       ;USED TO SKIP RETURN.
                       DATIME:
060377 / 201100,,001000         MOVEI TAC1,001000             ;; TRY ONLY 1000 TIMES
                       DAT2:
060400 / 773240,,000010          CONI PCLK,000010             ;;READ FAST PART.
060401 / 773040,,000001         DATAI PCLK,000001             ;;READ SLOW PART.
060402 / 327040,,060405         JUMPG  TAC,060405             ;;CLOCK IS VALID.
                       DAT2A:
060403 / 367100,,060400          SOJG TAC1,060400             ;;INVALID, RETRY.
060404 / 263140,,000000          POPJ  PDP,                   ;;TOO MANY RETRIES, CONSIDER IT SICK.
                       DAT1:
060405 / 275040,,005004          SUBI  TAC,005004             ;;NORMALIZE CROCK DATA.
152121 / 002020,,136700                                       ;
060406 / 274400,,152121           SUB  TEM,152121             ;;AND FAST PART.
153031 / 000000,,000010                                       ;
153031 / 320400,,000010 POINT 4,00000010,9                    ;
060407 / 135200,,153031           LDB ITEM,153031             ;
152044 / 000000,,000001                                       ;
152044 / 000400,,000001 POINT 4,00000001,35                   ;
060410 / 135240,,152044           LDB  DAT,152044             ;
060411 / 312240,,000004          CAME  DAT,000004             ;;DID READINGS GIVE THE SAME MINUTE?
060412 / 254000,,060403          JRST      060403             ;;NO. GO RETRY.
060413 / 603040,,200000          TLNE  TAC,200000             ;;YEAR INVALID?
060414 / 263140,,000000          POPJ  PDP,                   ;;YES. CROCK SICK.
152506 / 000000,,000001                                       ;
152506 / 200400,,000001 POINT 4,00000001,19                   ;
060415 / 135200,,152506           LDB ITEM,152506             ;;MONTH.
060416 / 275200,,000004          SUBI ITEM,     4             ;
060417 / 301200,,000014          CAIL ITEM,000014             ;
060420 / 263140,,000000          POPJ  PDP,                   ;
060421 / 221200,,000037         IMULI ITEM,000037             ;
060422 / 202200,,000005         MOVEM ITEM,   DAT             ;
152347 / 000000,,000001                                       ;
152347 / 130500,,000001 POINT 5,00000001,24                   ;
060423 / 135200,,152347           LDB ITEM,152347             ;
060424 / 272200,,000005          ADDM ITEM,000005             ;;ADD IN DAY.
                       ; FINISH READING PCROCK, CONVERT TO STANDARD FORM
153010 / 000000,,000001                                       ;
153010 / 300400,,000001 POINT 4,00000001,11                   ;
060425 / 135100,,153010           LDB TAC1,153010             ;
060426 / 303100,,000007         CAILE TAC1,000007             ;;after 1979?
060427 / 263140,,000000          POPJ  PDP,                   ;;YES.
060430 / 221100,,000012         IMULI TAC1,000012             ;
152667 / 000000,,000001                                       ;
152667 / 240400,,000001 POINT 4,00000001,15                   ;
060431 / 135200,,152667           LDB ITEM,152667             ;
060432 / 303200,,000011         CAILE ITEM,000011             ;
060433 / 263140,,000000          POPJ  PDP,                   ;;19WHAT?
060434 / 270200,,000002           ADD ITEM,  TAC1             ;
060435 / 307200,,000103          CAIG ITEM,000103             ;;ITS AFTER 1-JAN-68.
060436 / 263140,,000000          POPJ  PDP,                   ;
060437 / 275200,,000100          SUBI ITEM,000100             ;;NORMALIZE TO 1964.
060440 / 221200,,000564         IMULI ITEM,000564             ;
060441 / 272200,,000005          ADDM ITEM,000005             ;;DAT IS NOW SET UP.
152272 / 000000,,000001                                       ;
152272 / 060500,,000001 POINT 5,00000001,29                   ;
060442 / 135100,,152272           LDB TAC1,152272             ;;HOUR.
060443 / 301100,,000030          CAIL TAC1,000030             ;
060444 / 263140,,000000          POPJ  PDP,                   ;
060445 / 200200,,000002          MOVE ITEM,  TAC1             ;
060446 / 221200,,645700         IMULI ITEM,645700             ;
060447 / 405040,,000077          ANDI  TAC,000077             ;;MINUTES
060450 / 301040,,000074          CAIL  TAC,000074             ;
060451 / 263140,,000000          POPJ  PDP,                   ;
060452 / 221040,,007020         IMULI  TAC,007020             ;
060453 / 270200,,000001           ADD ITEM,   TAC             ;
152676 / 000000,,000010                                       ;
152676 / 240600,,000010 POINT 6,00000010,15                   ;
060454 / 135040,,152676           LDB  TAC,152676             ;;SECONDS.
060455 / 301040,,000074          CAIL  TAC,000074             ;
060456 / 263140,,000000          POPJ  PDP,                   ;
060457 / 221040,,000074         IMULI  TAC,000074             ;
060460 / 270200,,000001           ADD ITEM,000001             ;;ADD INTO RESULT.
152124 / 000000,,000010                                       ;
152124 / 002400,,000010 POINT 20,00000010,35                  ;
060461 / 135040,,152124           LDB  TAC,152124             ;
152000 / 000003,,641100                                       ;
060462 / 311040,,152000          CAML  TAC,152000             ;;CHECK MILLISECONDS.
060463 / 263140,,000000          POPJ  PDP,                   ;
060464 / 000000,,040432                                       ;
060464 / 231040,,040432         IDIVI  TAC,040432             ;
060465 / 270200,,000001           ADD ITEM,   TAC             ;
060466 / 311240,,024634          CAML  DAT,024634             ;;DONT GO BACKWARDS
060467 / 315200,,024633         CAMGE ITEM,024633             ;;DONT GO BACKWARDS
060470 / 263140,,000000          POPJ    P,                   ;;LOSER.
060471 / 254000,,037401          JRST      037401             ;;RETURN + 1.
                       ;LOGIN UUO.	FOR LOGIN CUSP ONLY.
                       ;	CALL AC,['LOGIN ']
                       ;	AC = -N,,LOC
                       ; 	LOC = LOCATION OF TABLE OF LENGTH N. TABLE HAS LOGIN GOODIES.
                       ;(1-14-72 REWRITTEN BY REG)
                       ;ONLY FOR LOGIN SYSTEMS. (IFN INCLUDES SETPRV)
                       LOGIN:
060472 / 205100,,010000         MOVSI TAC1,010000             ;;LOAD ONE BIT.
060473 / 612104,,026114          TDNE TAC1,JBTSTS(J)          ;;SKIP IF JOB NOT LOGGED IN
060474 / 254000,,043340          JRST      043340             ;;LOGGED IN ALREADY.
060475 / 564640,,000001          HLRO  AC1,000001             ;;GET -WORD COUNT
060476 / 540600,,000001           HRR  UUO,000001             ;;BASE OF DATA TABLE
151655 / 777776,,060532           XWD -LOGTOP,LOGTAB          ;
060477 / 200700,,151655          MOVE  AC2,151655             ;;SET A DEPOSIT/CONTROL WORD
                       LOGIN1:
060500 / 347640,,060502          AOJG  AC1,060502             ;;INCREMENT USER'S COUNT. SKIP IF EXHAUSTED
153067 / 334754,,000000         SKIPA  AC3,      (UUO)        ;
060501 / 256200,,153067          XCTR   XR,153067             ;;GET DATA FROM USER AND SKIP
                       LOGIN2:
060502 / 201740,,000000         MOVEI  AC3,                   ;;NO DATA FROM USER. USE ZERO
060503 / 202776,,000000         MOVEM  AC3,@      (AC2)       ;;STORE DATA IN JOB TABLE
060504 / 271600,,000001          ADDI  UUO,000001             ;;PUSH USERS POINTER
060505 / 253700,,060500         AOBJN  AC2,060500             ;;LOOP UNTIL WE FILL MONITOR TABLES
060506 / 436104,,026114          IORM TAC1,JBTSTS(J)          ;;SET JLOG BIT IN JBTSTS
060507 / 205100,,100000         MOVSI TAC1,100000             ;;
060510 / 412104,,026114        ANDCAM TAC1,JBTSTS(J)          ;;CLEAR ACCOUNTING BIT
060511 / 200104,,027520          MOVE TAC1,JB2PRV(J)          ;;INITIALIZE PRIVS TO PASSIVE PRIVS
060512 / 202104,,027420         MOVEM TAC1,JBTPRV(J)          ;
060513 / 402004,,030642         SETZM      JBTUFD(J)          ;;ZERO UFD POINTER FOR NEW PPN
060514 / 402004,,030020         SETZM      DSKPPN(J)          ;;INITIALIZE DISK ALIAS PPN
                       ;FTDSKPPN
                       ;FTDISK
                       SETLOG:
060515 / 336004,,021103         SKIPN       JBTJL(J)          ;
060516 / 260140,,060534         PUSHJ    P,PRIBUF             ;
                       ;SPREAD SERVICE LEVEL TO THIS NEW JOB
060517 / 550644,,027720          HRRZ  AC1,PRJPRG(J)          ;;GET PROGRAMMER NAME
060520 / 210040,,030121          MOVN  TAC,030121             ;;LOAD -NUMBER OF RESERVATIONS
060521 / 322040,,037403         JUMPE  TAC,037403             ;;NO RESERVATIONS.
060522 / 514040,,000001          HRLZ  TAC,000001             ;;-SLNRES,,0 IN TAC
                       LOGIN4:
060523 / 550101,,030122          HRRZ TAC1, SLRES(TAC)        ;;PROG NAME WHO HAS A RESERVATION
060524 / 312100,,000015          CAME TAC1,000015             ;;MATCH?
060525 / 253040,,060523         AOBJN  TAC,060523             ;;NO MATCH: LOOP
060526 / 325040,,037403        JUMPGE  TAC,037403             ;;NO MATCH ANYWHERE.
060527 / 554041,,030122          HLRZ  TAC, SLRES(TAC)        ;;GET HIS RESERVATION AS A RH FRACTION
060530 / 202044,,026320         MOVEM  TAC,JBTGSL(J)          ;;SET GUARANTEED SERVICE LEVEL
060531 / 263140,,000000          POPJ    P,                   ;;STOW IT.
                       ;TABLE OF TABLES SET BY LOGIN UUO. INCLUDE J AS INDEX REGISTER
                       ;AND STORE @ THRU THIS TABLE.
                       LOGTAB:
060532 / 000004,,027720           XWD J,PRJPRG	               ;
                       ;USER NAME 
060533 / 000004,,027520           XWD J,JB2PRV	               ;
                       ;JOB PASSIVE PRIVLEGE BITS
                       ; ROUTINE TO SET UP SCHEDULER DATA STRUCTURE FOR A JOB
                       PRIBUF:
060534 / 201740,,000024         MOVEI  AC3,000024             ;
060535 / 260140,,073353         PUSHJ    P, FSGET             ;
060536 / 263140,,000000          POPJ    P,                   ;;IF YOU LOSE, YOU LOSE
060537 / 202644,,021103         MOVEM  AC1, JBTJL(ITEM)       ;
060540 / 402004,,021203         SETZM      JBTJLH(ITEM)       ;
060541 / 402004,,026320         SETZM      JBTGSL(J)          ;
060542 / 504700,,000015           HRL  AC2,   AC1             ;
060543 / 541715,,000001          HRRI  AC2,     1(AC1)        ;
060544 / 402015,,000000         SETZM            (AC1)        ;
060545 / 251715,,000023           BLT  AC2,000023(AC1)        ;
060546 / 263140,,000000          POPJ  PDP,                   ;
                       ;SETPRV, GETPRV
                       ;	SETPRV	SET JBTPRV	JOB PRIVILEGE BITS
                       ;	CALL AC,['SETPRV']
                       ; JBTPRV WILL BE SET TO CONTENTS OF AC IF 
                       ; EITHER PRIPRV IS SET IN CURRENT JBTPRV OR JBTSTS INDICATES JACCT SET
                       ; RETURN CONTENTS OF JBTPRV IN AC.
                       ; IF AC REQUESTS FEWER PRIVILEGES THAN ARE NOW ALLOWED, THEN
                       ; THE REQUEST WILL BE SUCESSFUL
                       ; IF C(AC) = -1 THEN ONLY RETURN CURRENT CONTENTS OF JBTPRV
                       SETPRV:
151674 / 777777,,777777                                       ;
060547 / 316040,,151674          CAMN  TAC,151674             ;;SKIP UNLESS SPECIAL CODE
060550 / 254000,,060563          JRST      060563             ;;JUST GIVE HIM THE CURRENT CONTENTS
060551 / 205100,,400000         MOVSI TAC1,400000             ;;THE PRIVILEGE PRIVILEGE BIT
060552 / 205640,,100000         MOVSI  AC1,100000             ;;ACCOUNTING PROG, BIT
060553 / 616644,,026114          TDNN  AC1,JBTSTS(J)          ;;SKIP IF JACCT SET
060554 / 612104,,027520          TDNE TAC1,JB2PRV(J)          ;;SKIP UNLESS PRIPRV SET
060555 / 202044,,027420         MOVEM  TAC,JBTPRV(J)          ;;STORE NEW PRIV BITS IF JACCT ∨ PRIPRV
060556 / 316044,,027420          CAMN  TAC,JBTPRV(J)          ;;ARE THESE THE SAME NOW?
060557 / 263140,,000000          POPJ    P,                   ;;YES RETURN QUICK
060560 / 406044,,027420          ANDM  TAC,JBTPRV(J)          ;;TURN OFF THE ONES HE IS NOT REQUESTING
060561 / 404044,,027520           AND  TAC,JB2PRV(J)          ;;LEAVE ON THE ONES HE CAN SET
060562 / 436044,,027420          IORM  TAC,JBTPRV(J)          ;;AND SET THEM
                       STPRV1:
060563 / 205040,,400000         MOVSI  TAC,400000             ;;RETURN PRIPRV FROM JB2PRV
060564 / 404044,,027520           AND  TAC,JB2PRV(J)          ;
060565 / 434044,,027420           IOR  TAC,JBTPRV(J)          ;;GET THE REST FROM JBTPRV
060566 / 254000,,060225          JRST      060225             ;;GIVE THEM BACK TO THE USER
                       ;GET PRIVILEGES FOR JOB
                       ;CALLING SEQUENCE:
                       ;	MOVE AC,[FUNC CODE,,JOB #]
                       ;	GETPRV AC,
                       ;	<ALWAYS RETURN HERE>
                       ;CODE 0 ACTIVE PRIVILEGES
                       ;CODE 1 PASSIVE PRIVILEGES
                       GETPRV:
060567 / 554640,,000001          HLRZ  AC1,000001             ;;GET FUNCTION CODE
060570 / 301640,,000002          CAIL  AC1,000002             ;;LEGAL FUNCTION CODE
060571 / 254000,,043340          JRST      043340             ;;NO, FLUSH
060572 / 550040,,000001          HRRZ  TAC,000001             ;;GET JUST JOB #
060573 / 305040,,000100         CAIGE  TAC,000100             ;;JOB # TO LARGE?
060574 / 326040,,060576         JUMPN  TAC,060576             ;;OR 0?
060575 / 200040,,000004          MOVE  TAC,000004             ;;YES, USE CURRENT JOB
060576 / 256015,,060600           XCT      FNCTAB(AC1)        ;;DO FUNCTION
060577 / 254000,,060225          JRST      060225             ;;RETURN ANSWER
                       FNCTAB:
060600 / 200041,,027420          MOVE  TAC,JBTPRV(TAC)        ;
060601 / 200041,,027520          MOVE  TAC,JB2PRV(TAC)        ;
                       ;GET A PPN'S SERVICE LEVEL RESERVATION.
                       ;CALLING
                       ;	MOVE AC,[SIXBIT /PPN/]		;ONLY THE PROG NAME IS USED
                       ;	CALL AC,[SIXBIT /RLEVEL/]
                       ;	RETURN HERE ALWAYS, AC = <SL RESERVATION IN %>,,PRG NAME,
                       ;		IF RESERVATION ≠ 0, OTHERWISE AC = 0,,0.
                       RLEVEL:
060602 / 550640,,000001          HRRZ  AC1,000001             ;;GET PROGRAMMER NAME
060603 / 210040,,030121          MOVN  TAC,030121             ;;LOAD -NUMBER OF RESERVATIONS
060604 / 322040,,060313         JUMPE  TAC,060313             ;;NO RESERVATIONS: RETURN ZERO
060605 / 514040,,000001          HRLZ  TAC,000001             ;;-SLNRES,,0 IN TAC
                       RLEV1:
060606 / 550701,,030122          HRRZ  AC2, SLRES(TAC)        ;;PROG NAME WHO HAS A RESERVATION
060607 / 312700,,000015          CAME  AC2,000015             ;;MATCH?
060610 / 253040,,060606         AOBJN  TAC,060606             ;;NO MATCH: LOOP
060611 / 325040,,060313        JUMPGE  TAC,060313             ;;JUMP IF NO MATCH.
                       RLEV2:
060612 / 554041,,030122          HLRZ  TAC, SLRES(TAC)        ;;GET HIS RESERVATION AS A RH FRACTION
                       GETLV1:
060613 / 221040,,000144         IMULI  TAC,000144             ;;MAKE IT LEFT HALF PERCENT
060614 / 271040,,400000          ADDI  TAC,400000             ;;ROUND IT. (LIKE YOU DID IN CLKSER)
060615 / 540040,,000015           HRR  TAC,000015             ;;JOB NUMBER (OR PRG NAME) TO TAC
060616 / 254000,,060225          JRST      060225             ;;STOW IT.
                       ;REG 12-5-72
                       SPRSSL:
060617 / 402000,,026321         SETZM      026321             ;;SPREAD SERVICE LEVEL TO USERS WITH RESERVATIONS.
152221 / 026321,,026322                                       ;
060620 / 200040,,152221          MOVE  TAC,152221             ;
060621 / 251040,,026417           BLT  TAC,026417             ;;FIRST ZERO ALL LEVELS.
060622 / 333700,,030121        SKIPLE  AC2,030121             ;;GET THE NUMBER OF RESERVATIONS
060623 / 303700,,000020         CAILE  AC2,000020             ;;SKIP IF REASONABLE NUMBER.
060624 / 263140,,000000          POPJ    P,                   ;;RETURN QUICK IF NONE.
                       SPRSS0:
060625 / 550116,,030121          HRRZ TAC1,030121(AC2)        ;
060626 / 200640,,035266          MOVE  AC1,035266             ;;LOOK THROUGH ALL THE JOBS
                       SPRSS1:
060627 / 550055,,027720          HRRZ  TAC,PRJPRG(AC1)        ;
060630 / 302101,,000000          CAIE TAC1,      (TAC)        ;
060631 / 254000,,060634          JRST      SPRSS2             ;
060632 / 554056,,030121          HLRZ  TAC,030121(AC2)        ;
060633 / 202055,,026320         MOVEM  TAC,JBTGSL(AC1)        ;
                       SPRSS2:
060634 / 367640,,060627          SOJG  AC1,SPRSS1             ;
060635 / 367700,,060625          SOJG  AC2,SPRSS0             ;
060636 / 263140,,000000          POPJ    P,                   ;
                       ;SET BELOW IS DISABLED!
                       ;GET OR SET A JOBS SERVICE LEVEL.
                       ;CALLING
                       ;	MOVE AC,[XWD %SLEVEL,JOB # ]
                       ;	CALL AC,[SIXBIT/SLEVEL/]
                       ;	RETURN HERE ALWAYS
                       ;IF %SLEVEL<0 RETURN  CURRENT %SL,,JOB NUMBER
                       ;OTHERWISE SET SLEVEL OF JOB TO %SLEVEL
                       ; SET IS ALLOWED ONLY IF JOB NUMBER GIVEN IS 0 OR USER'S JOB #
                       ; IF SET COMMAND FAILS, USER'S AC WILL BE SET TO 
                       ; - % AVAILABLE 
                       ;ALSO SET IT FOR HIS OTHER JOBS.
                       ;IF JOB # = 0 USE THIS JOB
                       ;IF JOB # = -1, AND SERVICE LEVEL MONITOR IS THE USER,
                       ;	THEN RESET THE SL RESERVATION TABLE.
                       SETLVL:
060637 / 550640,,000001          HRRZ  AC1,000001             ;;GET JOB NUMBER
060640 / 301640,,000100          CAIL  AC1,000100             ;;LEGAL JOB?
060641 / 254000,,060651          JRST      060651             ;;NO. MAYBE SL MONITOR CHANGING RESERVATIONS
060642 / 327640,,060644         JUMPG  AC1,060644             ;;SKIP UNLESS ZERO
060643 / 200640,,000004          MOVE  AC1,000004             ;;ZERO MEANS THIS JOB.
060644 / 261140,,000015          PUSH    P,000015             ;;THESE 5 INSTRUCTIONS: REG 12-5-72
060645 / 260140,,060617         PUSHJ    P,060617             ;;SPREAD ALL SERVICE LEVELS
060646 / 262140,,000015           POP    P,   AC1             ;
060647 / 550055,,026320          HRRZ  TAC,JBTGSL(AC1)        ;
060650 / 254000,,060613          JRST      GETLV1             ;
                       ;;;	WE ARRIVE HERE IF A NEGATIVE JOB NUMBER IS SPECIFIED.
                       ;;;	THIS IS ALWAYS ILLEGAL UNLESS THE JOB HAS THE SSL PRIVILEGE,
                       ;;;	IN WHICH CASE THE CURRENT SLRESERVATION TABLE IS BEING RESET,
                       ;;;	AND THE CALLING SEQUENCE WAS:
                       ;;;	
                       ;;;		MOVE AC,[XWD [ XWD <0,1OR2>,N
                       ;;;			      <1ST TABLE ENTRY>
                       ;;;			      <2ND TABLE ENTRY>
                       ;;;				    ...
                       ;;;			      <NTH TABLE ENTRY>],-1]
                       ;;;		CALL AC,[SIXBIT /SLEVEL/]
                       ;;;		FAILURE RETURN (N TOO LARGE, TOTAL SL TOO MUCH, ETC.)
                       ;;;		SUCCESS RETURN
                       SETRES:
060651 / 302640,,777777          CAIE  AC1,777777             ;
060652 / 254000,,060313          JRST      RTZERO             ;
060653 / 200104,,027420          MOVE TAC1,JBTPRV(J)          ;;GET THE USER'S PRIV BITS
060654 / 607100,,000100          TLNN TAC1,000100             ;;SKIP IF HE HAS THE PRIVILEGE
060655 / 254000,,060313          JRST      060313             ;;RETURN ZERO.
                       ;;;	THIS IS THE CODE THAT READS A NEW SL RESERVATION TABLE FROM
                       ;;;	GSLMON AND GIVES THE RESERVED AMOUNTS TO ANYBODY CURRENTLY
                       ;;;	LOGGED IN, DECREASING THE SL OF SCROUNGERS IF NECESSARY.
151523 / 554114,,000000          HLRZ TAC1,      (UUO)        ;
060656 / 256200,,151523          XCTR   XR,151523             ;;TAC1 ← USER REL. ADDR. OF TABLE INFO.
060657 / 260140,,072703         PUSHJ    P,072703             ;;CONVERT TAC1 TO ABSOLUTE ADDRESS
060660 / 254000,,043221          JRST      043221             ;;  LOSER GOOFED
060661 / 554702,,000000          HLRZ  AC2,      (TAC1)       ;;AC2 ← CORE COST OF SL = 0,1 OR 2
060662 / 301700,,000003          CAIL  AC2,000003             ;;IS 0 ≤ (TAC) ≤ 2  ?
060663 / 201700,,000001         MOVEI  AC2,000001             ;;NO, MAKE IT 1.
060664 / 202700,,030120         MOVEM  AC2,030120             ;;STORE IN SL DATA AREA
060665 / 550042,,000000          HRRZ  TAC,      (TAC1)       ;;TAC ← (# OF RESERVATIONS)
060666 / 303040,,000020         CAILE  TAC,000020             ;;TOO MANY RESERVATIONS?
060667 / 254000,,060706          JRST      060706             ;;YES, FAILURE EXIT
060670 / 205702,,000000         MOVSI  AC2,      (TAC1)       ;;SOURCE OF BLT.
060671 / 541700,,030121          HRRI  AC2,030121             ;;DESTINATION OF BLT
151523 / 554114,,000000          HLRZ TAC1,      (UUO)        ;
060672 / 256200,,151523          XCTR   XR,151523             ;;TAC1 ← USER REL. ADDR. OF TABLE INFO.
060673 / 271101,,000000          ADDI TAC1,      (TAC)        ;;TAC1 ← USER REL. ADDR. OF TABLE'S END
060674 / 260140,,072762         PUSHJ    P,072762             ;;ADDRESS CHECK END OF SOURCE.
060675 / 254000,,043221          JRST      043221             ;;  USER LOOSES
060676 / 251701,,030121           BLT  AC2,SLNRES(TAC)        ;;BLT NEW RES TABLE INTO SYSTEM
060677 / 553000,,030121         HRRZS      030121             ;;ZERO OUT THE 0,1,OR 2 IN LEFT HALF,
060700 / 201100,,000000         MOVEI TAC1,                   ;;ADD UP NEW RESERVATIONS...
060701 / 554641,,030121          HLRZ  AC1,SLNRES(TAC)        ;
060702 / 270100,,000015           ADD TAC1,   AC1             ;
060703 / 367040,,060701          SOJG  TAC,060701             ;
060704 / 000120,,000000           XWD MAXLEV,0                ;
060704 / 307100,,631503          CAIG TAC1,631503             ;;TOO MUCH RESERVED SL?
                       SETAL1:
060705 / 354003,,000000          AOSA            (P)          ;;NOT TOO MUCH. SET SKIP RETURN
                       SETAL0:
060706 / 402000,,030121         SETZM      030121             ;;TOO MUCH. CLEAR TABLE.
060707 / 254000,,060617          JRST      060617             ;;SPREAD NEW TABLE
                       ;LOGOUT UUO
                       ;JS
                       LOGOUT:
060710 / 205040,,100000         MOVSI  TAC,100000             ;; IS HE REALLY THE LOGOUT ROUTINE?
060711 / 616044,,026114          TDNN  TAC,JBTSTS(ITEM)       ;; SEE IF THE ACCOUNTING BIT IS ON
060712 / 254000,,043340          JRST      043340             ;; NOT ON, HE IS A FAKE!
060713 / 254000,,052607          JRST      052607             ;; ALL OK. LOG HIM OUT.
                       ;JS, REST OF PAGE
                       ; ROUTINE TO READ SPACEWAR BUTTONS
                       SPCWAR:
060714 / 740640,,000001          CONI   TV,000001             ;;READ SWITCH REGISTER
060715 / 254000,,060225          JRST      STOTAC             ;
                       ; ROUTINE TO COMPLEMENT STATE OF DUPLEXING
                       ; DOES NOT AFFECT DUPLEXING OF ALT-MODE
                       CTLV:
060716 / 254000,,136453          JRST      136453             ;;IN TTYSER. COMPLEMENT STATE OF DUPLEXING.
                       ; ROUTINE TO GET A WORD FROM MONITOR CORE
                       PEEK:
060717 / 553000,,000001         HRRZS      000001             ;;ZERO LH OF TAC
060720 / 311040,,022066          CAML  TAC,022066             ;;OVER END OF CORE?
060721 / 254000,,060313          JRST      060313             ;;YES. DONT LET HIM GET NON-EX MEM.
060722 / 200060,,000001          MOVE  TAC,@   TAC            ;
060723 / 254000,,060225          JRST      STOTAC             ;
                       ; RUN A JOB UUO
                       ; FORMAT AS FOLLOWS . . .
                       ;	CALL AC,[SIXBIT /SWAP/]
                       ;AC:	E,,F
                       ;E:	SIXBIT /DEVICE/
                       ;	SIXBIT /FILENAME/
                       ;	SIXBIT /EXTENSION/ + MODE BITS
                       ;	XWD (CORESIZE - IN K),(STARTING ADDRESS)
                       ;	SIXBIT /PROJ-PROG NUMBER/
                       ; IF STARTING ADDRESS IS ZERO, C(JOBSA) WILL BE USED
                       ; IF E=0, NO SAVE WILL BE DONE
                       ;F:	SIXBIT /DEVICE/
                       ;	SIXBIT /FILENAME/
                       ;	SIXBIT /EXTENSION/ + MODE BITS
                       ;	XWD (CORESIZE - IN K),(STARTING ADDRESS INCREMENT)
                       ;	SIXBIT /PROJ-PROG NUMBER/
                       ; IF F=0, NO RUN WILL BE DONE. IF E=F=0, THE UUO IS A NO-OP
                       ; MODE BIT 35 = DO NOT START JOB. JUST GET CORE IMAGE.
                       ; MODE BIT 34 = MAKE STARTING ADDRESS ABSOLUTE, NOT AN INCREMENT
                       ; MODE BIT 33 = LOGIN NEW JOB AND RUN THIS THERE!
                       ; MODE BIT 32 = DON'T SET JLOG
                       ;THIS VERSION IS INCLUDED FOR COMPATIBILITY WITH DEC
                       RUNUUO:
060724 / 260140,,061154         PUSHJ    P,SVUACS             ;
060725 / 546044,,032765          HLRM  TAC,SAVSAI(J)          ;;SET START INCREMENT
151474 / 550101,,000005          HRRZ TAC1,     5(TAC)        ;
060726 / 256200,,151474          XCTR   XR,151474             ;
060727 / 202107,,000133         MOVEM TAC1,JOBCOR(JDAT)       ;;SET CORE SIZE
060730 / 561641,,000000         HRROI  AC1,      (TAC)        ;;COPY PNTR WITH "RUN" FLAG
060731 / 254000,,060762          JRST      060762             ;;NOW ENTER SWAP UUO
                       ; SWAP UUO - CONTINUED . . .
                       SYSRJB:
060732 / 332013,,023425         SKIPE      SPWUUF(PID)        ;
060733 / 254000,,150447          JRST      150447             ;;FLUSH SPACEWAR
060734 / 336013,,023431         SKIPN      INTACT(PID)        ;
060735 / 254000,,060745          JRST      SYSRJ2             ;
060736 / 265040,,043640           JSP  TAC,UUOMES             ;
                       SYSRJ2:
153113 / 336652,,000000         SKIPN  AC1,      (UCHN)       ;
060745 / 256200,,153113          XCTR   XR,153113             ;;PICK UP ADDRESSES OF TABLES, IF ANY
060746 / 263140,,000000          POPJ    P,                   ;;NONE, NO-OP
060747 / 202647,,000132         MOVEM  AC1,JOBFDV(JDAT)       ;;SAVE TABLE ADDRESS OF GET SIDE
060750 / 200644,,026620          MOVE  AC1, UUOPC(J)          ;;SAVE RETURN ADDRESS
060751 / 202647,,000130         MOVEM  AC1,JOBOPC(JDAT)       ;
060752 / 260140,,061154         PUSHJ    P,061154             ;;SAVE THE ACCUMULATORS IN FREE STORAGE
060753 / 554647,,000132          HLRZ  AC1,JOBFDV(JDAT)       ;;PICK UP 'SAVE' TABLE ADDRESS
060754 / 326640,,061105         JUMPN  AC1,061105             ;;IF NON-ZERO, DO A SAVE FIRST
                       SYSRJ1:
060755 / 550647,,000132          HRRZ  AC1,JOBFDV(JDAT)       ;;GET 'RUN' TABLE ADDRESS BACK
060756 / 322640,,061121         JUMPE  AC1,061121             ;;IF ZERO, EXIT GRACEFULLY
152475 / 200115,,000002          MOVE TAC1,     2(AC1)        ;
060757 / 256200,,152475          XCTR   XR,152475             ;;GET MODE BITS FIRST!
060760 / 602100,,000004          TRNE TAC1,000004             ;;AND TEST FOR RUN ELSEWHERE BIT
060761 / 254000,,061007          JRST      061007             ;;YES!
                       RUNUU2:
060762 / 260140,,061125         PUSHJ    P,061125             ;;DO THE RUN COMMAND BIT
                       PRUNJB:
060763 / 265100,,041447           JSP TAC1,041447             ;;ASSIGN DEVICE, DO LOOKUP, AND RESET PDL
060764 / 254000,,041407          JRST      041407             ;;NO FILE?
060765 / 260140,,041635         PUSHJ    P,041635             ;;READ JOB IN
060766 / 205640,,010000         MOVSI  AC1,010000             ;;MAKE SURE HE GETS INTO USER MODE
060767 / 540647,,000120           HRR  AC1, JOBSA(JDAT)       ;;PICK UP STARTING ADDRESS
060770 / 200707,,000013          MOVE  AC2,INCWRD(JDAT)       ;;PICK UP OUR MODE BITS AGAIN
060771 / 261140,,000015          PUSH    P,000015             ;;PUT THAT ADDRESS ON THE STACK
060772 / 200213,,024061          MOVE    J,   JOB(PID)        ;;PICK UP JOB NUMBER
060773 / 602700,,000002          TRNE  AC2,000002             ;;IF BIT 34 ON, INHIBIT ADDING IN HIS STARTING ADDRESS
060774 / 334644,,032765         SKIPA  AC1,SAVSAI(J)          ;;INSTEAD, PICK UP INCREMENT AND USE IT!
060775 / 270644,,032765           ADD  AC1,SAVSAI(J)          ;;PICK UP STARTING ADDRESS INCREMENT
153035 / 330015,,000000          SKIP            (AC1)        ;
060776 / 256200,,153035          XCTR   XR,153035             ;;SEE IF ADDRESS IS IN BOUNDS
060777 / 542643,,000000          HRRM  AC1,      (P)          ;;UPDATE STARTING ADDRESS
061000 / 261140,,000016          PUSH    P,000016             ;;SAVE OUR RANDOM GOOD BITS
061001 / 260140,,061204         PUSHJ    P,061204             ;;RESTORE USER'S ACCUMULATORS
061002 / 262140,,000016           POP    P,000016             ;;BRING BACK OUR R.G.B. WORD
061003 / 262144,,026620           POP    P, UUOPC(J)          ;
061004 / 606700,,000001          TRNN  AC2,000001             ;;IF MODE BIT 35 IS ON, DON'T START JOB
061005 / 254000,,057144          JRST      USRXIT             ;
061006 / 254000,,041360          JRST       GETJ1             ;
                       ; SWAP UUO - LOG IN NEW JOB AND RUN THIS ON IT - PHANTOM STARTUP
                       PHANTO:
061007 / 510044,,032765          HLLZ  TAC,SAVSAI(J)          ;;RESTORE ACS NOW, SINCE THEY ARE SAFE
061010 / 541047,,000000          HRRI  TAC,      (PROG)       ;;AND WE WILL GIVE THE TABLE TO THE NEW JOB
061011 / 251047,,000017           BLT  TAC,    17(PROG)       ;
153107 / 336055,,000005         SKIPN  TAC,     5(AC1)        ;
061012 / 256200,,153107          XCTR   XR,153107             ;;PRJPRG
061013 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;;USE CURRENT PPN
061014 / 316044,,027720          CAMN  TAC,PRJPRG(J)          ;;IS HE DOING IT TO HIMSELF?
061015 / 254000,,061020          JRST      061020             ;;YES
061016 / 316040,,037615          CAMN  TAC,037615             ;;1,1
061017 / 254000,,061101          JRST      061101             ;;LOSE.
                       PHWIN:
061020 / 261140,,000004          PUSH    P,000004             ;;SAVE PRESENT JOB NUMBER
061021 / 261140,,000007          PUSH    P,000007             ;;INIJOB CLOBBERS PROG!
061022 / 260140,,051066         PUSHJ    P,051066             ;;INITIALIZE A NEW JOB
061023 / 254000,,061077          JRST      061077             ;;NO JOBS TO BE HAD
061024 / 255000,,000000          JFCL                         ;
061025 / 262140,,000007           POP    P,000007             ;;RESTORE PROG
061026 / 205040,,040000         MOVSI  TAC,   JNA             ;
061027 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;
061030 / 202104,,031043         MOVEM TAC1,JOBLOG(J)          ;;SAVE MODE BITS AND EXTENSION
061031 / 205040,,010000         MOVSI  TAC,  JLOG             ;
061032 / 606100,,000010          TRNN TAC1,000010             ;;THIS BIT SAYS DON'T SET JLOG
061033 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;
061034 / 402004,,030642         SETZM      JBTUFD(J)          ;;FLUSH THIS OR ELSE!
061035 / 402004,,030020         SETZM      DSKPPN(J)          ;;INITIALIZE DISK ALIAS PPN
061036 / 402004,,030242         SETZM      JBTKCJ(J)          ;;INITIALIZE KILO CORE SECONDS
152473 / 200115,,000000          MOVE TAC1,      (AC1)        ;
061037 / 256200,,152473          XCTR   XR,152473             ;;DEVICE
061040 / 202104,,030743         MOVEM TAC1,JOBDEV(J)          ;
152474 / 200115,,000001          MOVE TAC1,     1(AC1)        ;
061041 / 256200,,152474          XCTR   XR,152474             ;;FILENAME
061042 / 202104,,030142         MOVEM TAC1,JOBNAM(J)          ;
061043 / 260140,,072454         PUSHJ    P,NAMSTT             ;
152476 / 200115,,000004          MOVE TAC1,     4(AC1)        ;
061044 / 256200,,152476          XCTR   XR,152476             ;;LOC OF FILE
061045 / 202104,,030442         MOVEM TAC1,JOBPPN(J)          ;
061046 / 200043,,000000          MOVE  TAC,      (P)          ;;GET OUR J TEMPORARILY
153111 / 336115,,000005         SKIPN TAC1,     5(AC1)        ;
061047 / 256200,,153111          XCTR   XR,153111             ;;PPN
061050 / 200101,,027720          MOVE TAC1,PRJPRG(TAC)        ;;NONE, USE CURRENT
061051 / 202104,,027720         MOVEM TAC1,PRJPRG(J)          ;
061052 / 312101,,027720          CAME TAC1,PRJPRG(TAC)        ;;SAME AS CALLER?
061053 / 634100,,000002          TDZA TAC1,000002             ;;NO. ZERO CELL AND SKIP
061054 / 200101,,027420          MOVE TAC1,JBTPRV(TAC)        ;;SAME PPN. COPY OUR PRIVILEGE
061055 / 202104,,027420         MOVEM TAC1,JBTPRV(J)          ;;TO THE NEW GUY
061056 / 200101,,027720          MOVE TAC1,PRJPRG(TAC)        ;;GET OUR PPN
061057 / 312104,,027720          CAME TAC1,PRJPRG(J)          ;;SAME AS HIS?
061060 / 634100,,000002          TDZA TAC1,000002             ;;NO, NO PRIVELEGES
061061 / 200101,,027520          MOVE TAC1,JB2PRV(TAC)        ;;ALSO PASSIVE PRIVELEGES
061062 / 202104,,027520         MOVEM TAC1,JB2PRV(J)          ;
152626 / 204115,,000003          MOVS TAC1,     3(AC1)        ;
061063 / 256200,,152626          XCTR   XR,152626             ;;GET S.A.,,CORE SIZE
061064 / 552104,,030542         HRRZM TAC1,JOBCRD(J)          ;;PASS ON CORE SIZE
061065 / 200043,,000000          MOVE  TAC,      (P)          ;;CALLERS JOB #
061066 / 544101,,032765           HLR TAC1,SAVSAI(TAC)        ;
061067 / 206104,,032765         MOVSM TAC1,SAVSAI(J)          ;;GIVE AC BLK AND S.A. TO NEW JOB
061070 / 402001,,032765         SETZM      SAVSAI(TAC)        ;;NO LONGER BELONGS TO CALLER
061071 / 271112,,000000          ADDI TAC1,      (UCHN)       ;
061072 / 202042,,000000         MOVEM  TAC,      (TAC1)       ;;CALLERS JOB # TO NEW JOB (IN SAME AC)
152571 / 202212,,000000         MOVEM    J,      (UCHN)       ;
061073 / 256040,,152571          XCTR   XW,152571             ;;NEW JOB # TO CALLER
061074 / 260140,,047545         PUSHJ    P,DELBTT             ;
061075 / 262140,,000004           POP    P,     J             ;
061076 / 254000,,061122          JRST      061122             ;;DON'T BOTHER LOOKING FOR ACS
                       PHLOSE:
061077 / 262140,,000007           POP    P,  PROG             ;
061100 / 262140,,000004           POP    P,     J             ;
                       PHLOS1:
061101 / 554044,,032765          HLRZ  TAC,SAVSAI(J)          ;;GET LOC OF SAVED AC'S
061102 / 270040,,000012           ADD  TAC,000012             ;;LOC OF USERS AC
061103 / 402001,,000000         SETZM            (TAC)        ;;RETURN 0 TO INDICATE LOSSAGE
061104 / 254000,,061121          JRST      SYSRXT             ;
                       ; ROUTINE TO DO THE GETTING OF A JOB FROM UUO LEVEL
                       SYSSJB:
061105 / 260140,,061125         PUSHJ  PDP,061125             ;; PICK UP ARGUEMENTS FROM USER
061106 / 265100,,041447           JSP TAC1,041447             ;; DO LOOKUP
061107 / 255000,,000000          JFCL                         ;
061110 / 261140,,000015          PUSH    P,   AC1             ;
061111 / 550644,,032765          HRRZ  AC1,SAVSAI(ITEM)       ;; PICK UP STARTING ADDRESS
061112 / 322640,,061116         JUMPE  AC1,SYSSJ1             ;
153035 / 330015,,000000          SKIP            (AC1)        ;
061113 / 256200,,153035          XCTR   XR,153035             ;
061114 / 661640,,010000           TLO  AC1,USRMOD             ;
061115 / 542647,,000120          HRRM  AC1, JOBSA(JDAT)       ;
                       SYSSJ1:
061116 / 262140,,000015           POP    P,   AC1             ;
061117 / 260140,,042035         PUSHJ  PDP,042035             ;; DO ACTUAL SAVE
061120 / 254000,,060755          JRST      SYSRJ1             ;
                       SYSRXT:
061121 / 260140,,061204         PUSHJ  PDP,061204             ;; RESTORE ACCUMULATORS
                       SYSRX2:
061122 / 200047,,000130          MOVE  TAC,JOBOPC(JDAT)       ;; GET UUO RETURN ADDRESS
061123 / 202044,,026620         MOVEM  TAC, UUOPC(ITEM)       ;; AND RETURN TO IT!
061124 / 254000,,057144          JRST      057144             ;; MAKE IT LOOK LIKE A UUO EXIT (WHICH IT IS)
                       ; ROUTINE TO PICK UP BITS OF USER'S GOODIE TABLE
                       SYSRS:
152473 / 200115,,000000          MOVE TAC1,      (AC1)        ;
061125 / 256200,,152473          XCTR   XR,152473             ;; PICK UP DEVICE NAME
061126 / 202107,,000006         MOVEM TAC1,DEVWRD(JDAT)       ;; STORE FOR SAVJOB
152474 / 200115,,000001          MOVE TAC1,     1(AC1)        ;
061127 / 256200,,152474          XCTR   XR,152474             ;;PICK UP FILE NAME
061130 / 202107,,000000         MOVEM TAC1,      (JDAT)       ;
061131 / 202104,,030142         MOVEM TAC1,JOBNAM(J)          ;;THIS IS NEW JOB NAME TOO
061132 / 260140,,072454         PUSHJ    P,NAMSTT             ;
151524 / 554115,,000002          HLRZ TAC1,     2(AC1)        ;
061133 / 256200,,151524          XCTR   XR,151524             ;;PICK UP EXTENSION
061134 / 326100,,061136         JUMPN TAC1,061136             ;;NOT SPECIFIED?
061135 / 201100,,445560         MOVEI TAC1,445560             ;;HE REALLY WANTS .DMP
061136 / 516107,,000001         HRLZM TAC1,FILEXT(JDAT)       ;
151513 / 550715,,000002          HRRZ  AC2,     2(AC1)        ;
061137 / 256200,,151513          XCTR   XR,151513             ;;PICK UP MODE BITS INTO AC2
061140 / 202707,,000013         MOVEM  AC2,INCWRD(JDAT)       ;;AND SAVE THEM FOR US TO SEE LATER
152476 / 200115,,000004          MOVE TAC1,     4(AC1)        ;
061141 / 256200,,152476          XCTR   XR,152476             ;;AND PPN TOO
061142 / 202104,,030442         MOVEM TAC1,JOBPPN(J)          ;
061143 / 321640,,037403         JUMPL  AC1,037403             ;;THAT'S ALL FOR RUN UUO
151525 / 554115,,000003          HLRZ TAC1,     3(AC1)        ;
061144 / 256200,,151525          XCTR   XR,151525             ;;PICK UP CORE SIZE
061145 / 242100,,000012           LSH TAC1,000012             ;;CONVERT TO RELOCATABLE ADDRESS
061146 / 322100,,061150         JUMPE TAC1,061150             ;;UNLESS, OF COURSE, HE ASKED FOR NONE
061147 / 275100,,000001          SUBI TAC1,     1             ;
061150 / 202107,,000133         MOVEM TAC1,JOBCOR(JDAT)       ;
151507 / 550655,,000003          HRRZ  AC1,     3(AC1)        ;
061151 / 256200,,151507          XCTR   XR,151507             ;;PICK UP STARTING ADDRESS INCREMENT
061152 / 542644,,032765          HRRM  AC1,SAVSAI(J)          ;;TUCK AWAY IN A CONVENIENT TABLE IN APRDAT
061153 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SAVE ACCUMULATORS OVER RUNJOB UUO
                       SVUACS:
061154 / 554644,,032765          HLRZ  AC1,SAVSAI(J)          ;; ANY FREE STORAGE HERE ALREADY?
061155 / 322640,,061174         JUMPE  AC1,061174             ;; NO, GET SOME
061156 / 311640,,022067          CAML  AC1,022067             ;; IS IT IN THE FREE STORAGE AREA?
061157 / 311640,,022066          CAML  AC1,022066             ;; IT IS ABOVE USER CORE. IS IT IN REAL CORE?
061160 / 254000,,061162          JRST      061162             ;;THINK ABOUT IT SOME MORE, ANDY.
061161 / 254000,,061200          JRST      061200             ;;YES, USE IT
061162 / 260140,,000316         PUSHJ    P,PUSHIT             ;
061163 / 260140,,044066         PUSHJ    P,DISMES             ;
061173 / 260140,,000341         PUSHJ    P, POPIT             ;
                       SVUA2:
061174 / 201740,,000020         MOVEI  AC3,000020             ;; GET A 20-WORD BLOCK OF FREE STORAGE
061175 / 260140,,073353         PUSHJ  PDP, FSGET             ;
061176 / 254200,,061177          HALT      061177             ;; AT UUO LEVEL, SHOULDN'T HAPPEN
061177 / 506644,,032765          HRLM  AC1,SAVSAI(ITEM)       ;; SAVE THE POINTER
                       SVUA1:
061200 / 505647,,000000          HRLI  AC1,      (PROG)       ;; SET TO BLT IN USER'S ACS
061201 / 540700,,000015           HRR  AC2,   AC1             ;
061202 / 251656,,000017           BLT  AC1,    17(AC2)        ;
061203 / 263140,,000000          POPJ  PDP,                   ;
                       RSUACS:
061204 / 510644,,032765          HLLZ  AC1,SAVSAI(ITEM)       ;; PICK UP FREE STORAGE POINTER
061205 / 322640,,037403         JUMPE  AC1,037403             ;;NOBODY HOME
061206 / 541647,,000000          HRRI  AC1,      (PROG)       ;
061207 / 251647,,000017           BLT  AC1,    17(PROG)       ;
061210 / 554644,,032765          HLRZ  AC1,SAVSAI(ITEM)       ;
061211 / 402004,,032765         SETZM      SAVSAI(ITEM)       ;; ZERO OUT FS POINTER
061212 / 254000,,074163          JRST      FSGIVE             ;
                       ; EIOTM AND LIOTM UUO'S
                       ; CAUSES A PROGRAM TO ENTER IOT USER MODE
                       ; OR LEAVE IOT USER MODE
                       EIOTM:
061213 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
061214 / 607040,,000001          TLNN  TAC,LUPPRV             ;
061215 / 254000,,043340          JRST      UUOERR             ;
061216 / 205040,,004000         MOVSI  TAC,  4000             ;
061217 / 436044,,026620           ORM  TAC, UUOPC(ITEM)       ;
061220 / 263140,,000000          POPJ    P,                   ;
                       LIOTM:
061221 / 205040,,004000         MOVSI  TAC,  4000             ;
061222 / 412044,,026620        ANDCAM  TAC, UUOPC(ITEM)       ;
061223 / 263140,,000000          POPJ    P,                   ;
                       ; UUO TO GET THE PHYSICAL NAME OF A DEVICE
                       ; PUT THE SIXBIT OF THE DEVICE LOGICAL NAME IN AN AC
                       ; DO A 'CALL AC,[SIXBIT /PNAME/]
                       ; AND THE ROUTINE SKIPS UPON SUCCESS (IE, IF DEVICE NAME EXISTS)
                       ; AND RETURNS PHYSICAL NAME IN THAT AC
                       PNAME:
061224 / 260140,,044655         PUSHJ    P,044655             ;; SEARCH FOR DEVICE NAME (OR CHANNEL #)
061225 / 263140,,000000          POPJ    P,                   ;; FAILURE
061226 / 200046,,000000          MOVE  TAC,      (DDB)        ;; PICK UP PHYSICAL NAME
152547 / 202052,,000000         MOVEM  TAC,      (UCHN)       ;
061227 / 256040,,152547          XCTR   XW,152547             ;
061230 / 254000,,037401          JRST      CPOPJ1             ;
                       ; GET A JOB'S JOB STATUS WORD
                       ; CALLING . . .
                       ;	MOVE AC,<JOB NUMBER IN QUESTION>
                       ;	CALL AC,[SIXBIT /JBTSTS/]
                       ; RETURNS JOB STATUS WORD IN AC
                       USTAT:
061231 / 327040,,061233         JUMPG  TAC,061233             ;; POSITIVE JOB NUMBER?
061232 / 200040,,000004          MOVE  TAC,000004             ;; LESS OR EQUAL TO ZERO MEANS OWN JOB
061233 / 301040,,000100          CAIL  TAC,000100             ;; MUST BE LESS THAN MAXIMUM TOO
061234 / 254000,,043340          JRST      043340             ;; OR ELSE, ERROR
061235 / 200041,,026114          MOVE  TAC,JBTSTS(TAC)        ;; GET STATUS WORD
061236 / 254000,,060225          JRST      060225             ;; AND GIVE IT TO HIM
                       ; GET A TELETYPE'S DEVIOS
                       ; CALLING . . .
                       ;	MOVE AC,<JOB NUMBER WHOSE TTY IOS YOU WANT>
                       ;	CALL AC,[SIXBIT /TTYIOS/]
                       TTYIOS:
061237 / 321040,,061257         JUMPL  TAC,061257             ;;TRY NAME IF ILLEGAL NUMBER
061240 / 301040,,000100          CAIL  TAC,  JOBN             ;
061241 / 254000,,061257          JRST      061257             ;;ILLEGAL AS A JOB NUMBER, TRY AS A DEV NAME.
061242 / 554300,,000610          HLRZ  DDB,DEVLST             ;
                       TTYIO1:
061243 / 554106,,000000          HLRZ TAC1,      (DDB)        ;;IS THIS A TELETYPE?
061244 / 302100,,646471          CAIE TAC1,646471             ;
061245 / 254000,,061253          JRST      061253             ;;NO. KEEP LOOKING.
061246 / 135100,,037575           LDB TAC1,037575             ;;YES, DOES THE JOB NUMBER MATCH?
061247 / 302101,,000000          CAIE TAC1,      (TAC)        ;
061250 / 254000,,061253          JRST      061253             ;;NO, SCAN SOME MORE
                       TTYIO5:
061251 / 200046,,000002          MOVE  TAC,DEVIOS(DDB)        ;;YES, PICK UP HIS IOS
061252 / 254000,,060225          JRST      060225             ;;AND GIVE IT TO HIM
                       TTYIO2:
061253 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;;PICK UP NEXT DEVICE DATA BLOCK ADDRESS
061254 / 326300,,061243         JUMPN  DDB,061243             ;;AND GO BACK IF NOT END OF LIST
                       TTYIO4:
061255 / 211040,,000001         MOVNI  TAC,000001             ;; IF END OF LIST, GIVE HIM A -1 TO CHEW ON
061256 / 254000,,060225          JRST      STOTAC             ;
                       TTYIO3:
061257 / 260140,,044663         PUSHJ    P,044663             ;;TRY SEARCHING FOR THIS SIXBIT NAME.
061260 / 254000,,061255          JRST      061255             ;;LOSE.
061261 / 254000,,061251          JRST      061251             ;;WIN.
                       WAKEME:
061262 / 332000,,000567         SKIPE      000567             ;;SKIP IF NORMAL MODE
061263 / 263140,,000000          POPJ    P,                   ;;ERROR RETURN IF MAINTMODE
152515 / 200652,,000000          MOVE  AC1,      (UCHN)       ;
061264 / 256200,,152515          XCTR   XR,152515             ;;GET USER'S POINTER
152526 / 200715,,000000          MOVE  AC2,      (AC1)        ;
061265 / 256200,,152526          XCTR   XR,152526             ;;GET JOBNAME
152532 / 200755,,000001          MOVE  AC3,     1(AC1)        ;
061266 / 256200,,152532          XCTR   XR,152532             ;;GET PPN
061267 / 205040,,777765         MOVSI  TAC,777765             ;;GET SIZE OF BATMAN
                       WAKEM1:
061270 / 316701,,022737          CAMN  AC2,BATMAN(TAC)        ;;LOOK IN TABLE
061271 / 312741,,022752          CAME  AC3, ROBIN(TAC)        ;;SAME AS TABLE?
061272 / 254000,,061304          JRST      061304             ;;NO
153077 / 335755,,000002        SKIPGE  AC3,     2(AC1)        ;
061273 / 256200,,153077          XCTR   XR,153077             ;;GET DATA FOR ALFRED
061274 / 254000,,061302          JRST      061302             ;;RUN NEVER.
061275 / 200640,,024633          MOVE  AC1,  TIME             ;
061276 / 231640,,007020         IDIVI  AC1,007020             ;
061277 / 504640,,024634           HRL  AC1,THSDAT             ;
061300 / 317740,,000015          CAMG  AC3,000015             ;;SKIP IF RUN IN THE FUTURE
061301 / 402000,,022735         SETZM      022735             ;;MAKE CH7 LOOK NEXT TICK
                       WAKEM3:
061302 / 202741,,022765         MOVEM  AC3,ALFRED(TAC)        ;;STUFF IT
061303 / 254000,,037401          JRST      037401             ;;GIVE HIM SUCCESS RETURN
                       WAKEM2:
061304 / 253040,,061270         AOBJN  TAC,061270             ;;LOOK THRU TABLE
061305 / 263140,,000000          POPJ    P,                   ;;LOSE
                       ;TRANSLATE SYSTEM CALL TO/FROM SIXBIT.
                       ;CALL:	MOVE AC,[SIXBIT OR NUMERIC UUO]
                       ;	CALLIT AC,
                       ;	RETURN WITH NUMERIC OR SIXBIT FORM (RESP.), 0 IF ERROR
                       ;IF AC12-16 ≠ 0,  ARG IS ASSUMED TO BE SIXBIT (ALL UUO MNEMONICS ARE > 2 CHARS)
                       ; NUMERIC REPRESENTATION WILL BE RETURNED, OR 0 IF THE SPECIFIED UUO DOES
                       ; NOT EXIST.  NOTE THAT CALLING THIS WITH 1- OR 2-CHARACTER NAMES MAY HAVE 
                       ; STRANGE RESULTS.
                       ;IF AC12-17 = 0,  ARG IS ASSUMED TO BE A NUMERIC UUO OF SOME FORM.  THE AC AND
                       ; ADDRESS FIELDS MUST BE 0 UNLESS RELEVANT FOR DECODING (I.E. ADR OF CALLI,
                       ; AC OF TTYUUO, ETC.).  IF THE ARG IS A LEGAL UUO, ITS SIXBIT MNEMONIC WILL BE
                       ; RETURNED, OTHERWISE 0.  IN THE EVENT OF AMBIGUITY, THE MORE SPECIFIC MNEMONIC
                       ; WILL BE RETURNED (E.G. INCHRW RATHER THAN TTYUUO).
                       ;IF AC12-17 = 1, THE MNEMONIC FOR THE SPECIFIED MAJOR OPCODE WILL BE RETURNED.
                       ; THE AC AND ADDRESS FIELDS MUST BE 0.  THIS PROVIDES A WAY TO GET AT MNEMONICS
                       ; SUCH AS "TTYUUO".
                       CALLIT:
061306 / 603040,,000036          TLNE  TAC,000036             ;;IF ITS SIXBIT
061307 / 254000,,061325          JRST      061325             ;;    THEN GO LOOK IT UP
061310 / 554100,,000001          HLRZ TAC1,   TAC             ;
061311 / 047000,,000000         CALLI                         ;
061311 / 302100,,047000          CAIE TAC1,      (<CALLI>)    ;
061312 / 326100,,061336         JUMPN TAC1, CALTU             ;
061313 / 405040,,777777          ANDI  TAC,777777             ;
061314 / 305040,,000046         CAIGE  TAC,000046             ;;IF ITS A DEC CALLI
061315 / 254000,,061323          JRST      061323             ;;    THEN GET THE SIXBIT
061316 / 626040,,400000          TRZN  TAC,400000             ;;IF NOT A STANFORD CALLI
061317 / 254000,,060313          JRST      060313             ;;    THEN RETURN 0
061320 / 201041,,000046         MOVEI  TAC,UCLDLN(TAC)        ;;GET ACTUAL POINTER
061321 / 301040,,000166          CAIL  TAC,000166             ;;IF ITS OFF THE END
061322 / 254000,,060313          JRST      060313             ;;    THEN RETURN 0
                       CALT1:
061323 / 200041,,057513          MOVE  TAC,UCLTAB(TAC)        ;;ELSE PICK UP SIXBIT
061324 / 254000,,060225          JRST      060225             ;;THEN PUT IT IN AC AND RETURN
                       CALT0:
061325 / 205100,,777612         MOVSI TAC1,777612             ;
061326 / 312042,,057513          CAME  TAC,UCLTAB(TAC1)       ;;SEARCH CALLI SIXBIT TABLE
061327 / 253100,,061326         AOBJN TAC1,061326             ;
061330 / 325100,,061377        JUMPGE TAC1,061377             ;;IF OFF THE END, TRY FOR OPCODES
061331 / 201042,,000000         MOVEI  TAC,      (TAC1)       ;
061332 / 301040,,000046          CAIL  TAC,000046             ;;IF STANFORD CALL
061333 / 201041,,377732         MOVEI  TAC,377732(TAC)        ;;THEN CONVERT
061334 / 047000,,000000         CALLI                         ;
061334 / 505040,,047000          HRLI  TAC,      (<CALLI>)    ;;MAKE IT A CALLI
061335 / 254000,,060225          JRST      060225             ;; AND SHIP IT
                       CALTU:
061336 / 405100,,777000          ANDI TAC1,777000             ;
061337 / 301100,,040000          CAIL TAC1, 40000             ;
061340 / 301100,,730000          CAIL TAC1,730000             ;
061341 / 254000,,061325          JRST      061325             ;;OUTSIDE UUO RANGE - TRY AS SIXBIT
061342 / 301100,,100000          CAIL TAC1,100000             ;
061343 / 301100,,700000          CAIL TAC1,700000             ;
061344 / 602040,,777777          TRNE  TAC,777777             ;
061345 / 254000,,061325          JRST      061325             ;;IN BETWEEN RANGES OR RH NOT ZERO
061346 / 623040,,000001          TLZE  TAC,     1             ;
061347 / 254000,,061370          JRST      061370             ;;SPECIAL - FORCE MAJOR OPCODE NAME
061350 / 205642,,000000         MOVSI  AC1,      (TAC1)       ;
061351 / 205702,,001000         MOVSI  AC2,  1000(TAC1)       ;
061352 / 201100,,057373         MOVEI TAC1,057373             ;;HEADER FOR SECOND LEVEL TABLES
                       CALTU1:
061353 / 550102,,777777          HRRZ TAC1,777777(TAC1)       ;
061354 / 322100,,061370         JUMPE TAC1,061370             ;;NO MORE - MUST BE PLAIN UUO
061355 / 317642,,777777          CAMG  AC1,777777(TAC1)       ;
061356 / 317702,,777777          CAMG  AC2,777777(TAC1)       ;
061357 / 254000,,061353          JRST      061353             ;;NOT THIS ONE
061360 / 510742,,777777          HLLZ  AC3,777777(TAC1)       ;;GET OPCODE
061361 / 313040,,000017         CAMLE  TAC,   AC3             ;
061362 / 254000,,060313          JRST      060313             ;;ILLEGAL AC FIELD
061363 / 241040,,000015           ROT  TAC,    15             ;
061364 / 405040,,000017          ANDI  TAC,000017             ;;ISOLATE AC FIELD
061365 / 270040,,000002           ADD  TAC,  TAC1             ;
061366 / 200041,,000000          MOVE  TAC,      (TAC)        ;;GET SIXBIT
061367 / 254000,,060225          JRST      STOTAC             ;
                       CALTU2:
061370 / 000740,,000000                                       ;
061370 / 603040,,000740          TLNE  TAC,      (<17,>)      ;
061371 / 254000,,060313          JRST      060313             ;;AC FIELD MUST BE ZERO
061372 / 241040,,000011           ROT  TAC,000011             ;;GET OPCODE
061373 / 301040,,000700          CAIL  TAC,   700             ;
061374 / 334041,,056533         SKIPA  TAC,056533(TAC)        ;
061375 / 200041,,057333          MOVE  TAC,057333(TAC)        ;
061376 / 254000,,060225          JRST      STOTAC             ;
                       CALT2:
061377 / 205100,,777710         MOVSI TAC1,777710             ;;TOTAL # MAJOR OPCODES
061400 / 312042,,057373          CAME  TAC,UUONAM(TAC1)       ;
061401 / 253100,,061400         AOBJN TAC1,061400             ;
061402 / 325100,,061410        JUMPGE TAC1,061410             ;;NOT FOUND - TRY SECOND LEVEL TABLES
061403 / 201042,,000040         MOVEI  TAC,    40(TAC1)       ;;THIS WILL BE THE OPCODE
061404 / 303040,,000077         CAILE  TAC,    77             ;
061405 / 201042,,000640         MOVEI  TAC,000640(TAC1)       ;;UNLESS IT'S ONE OF THESE
061406 / 241040,,777767           ROT  TAC,777767             ;;PUT IT IN THE RIGHT PLACE
061407 / 254000,,060225          JRST      STOTAC             ;
                       CALT3:
151776 / 000002,,057373                                       ;
061410 / 200240,,151776          MOVE  DAT,151776             ;;INIT TABLE PNTR TO HDR, (TAC1) FOR @ BELOW
                       CALT4:
061411 / 540245,,777777           HRR  DAT,777777(DAT)        ;;GET NEXT TABLE LOC
061412 / 606240,,777777          TRNN  DAT,777777             ;
061413 / 254000,,060313          JRST      060313             ;;IF NO MORE JUST RET 0 FOR FAILURE
153000 / 270405,,777777                                       ;
061414 / 135100,,153000           LDB TAC1,153000             ;;GET MAX #
061415 / 211102,,000001         MOVNI TAC1,     1(TAC1)       ;;OFFSET BY 1 FOR COUNT
061416 / 205102,,000000         MOVSI TAC1,      (TAC1)       ;;MAKE AOBJN PNTR
061417 / 312060,,000005          CAME  TAC,@   DAT            ;
061420 / 253100,,061417         AOBJN TAC1,061417             ;
061421 / 325100,,061411        JUMPGE TAC1,061411             ;;TRY NEXT TABLE IF NOT FOUND
061422 / 510045,,777777          HLLZ  TAC,777777(DAT)        ;;FOUND - GET BASE OPCODE
152775 / 270400,,000001                                       ;
061423 / 137100,,152775           DPB TAC1,152775             ;;SET CORRECT AC FIELD
061424 / 254000,,060225          JRST      STOTAC             ;
                       ;SETPR2, BEGIN SEGUUO
061425 /                 ;::   BEGIN STANFO.APRSER.SEGUUO.
                       ;	SETPR2	UUO
                       ;	MOVE AC,[XWD PROT.,RELOC]
                       ;	CALL AC,['SETPR2']
                       ;	<ERROR RETURN>
                       ;	<SUCCESS RETURN>
                       ;	RELOC IS ABSOLUTE ADDRESS YOU WISH AS YOUR BASE ADDRESS
                       ;	IF THE LOW ORDER BIT IS ON THEN RELOC IS A RELATIVE ADDRESS
                       ;	IN YOUR CORE IMAGE.
                       ;	IF THE LOW ORDER BIT OF PROT IS ON THEN ACCESS IS WRITE PROTECTED
                       ;	IF THE ACCESS IS ABSOLUTE AND YOU ARE NOT 1,2 THEN YOU ARE
                       ;	AUTOMATICALLY WRITE PROTECTED.
                       ;	BOTH PROT. AND RELOC. ARE TRUNCATED TO 1K BOUNDARIES WHEN LOADED
                       ;	INTO THE PROT.-RELOC. REGISTER.
                       ;	IN RELATIVE MODE PROT. IS ADJUSTED TO BE WITHIN YOUR CORE IMAGE.
                       SETPR2:
061425 / 602040,,000001          TRNE  TAC,000001             ;;IS THIS RELATIVE?
061426 / 254000,,061451          JRST      PR2REL             ;
061427 / 201101,,000000         MOVEI TAC1,      (TAC)        ;
061430 / 421100,,001777        ANDCMI TAC1,  1777             ;
061431 / 311100,,022066          CAML TAC1,022066             ;;IS RELOC GREATER THAN MEMORY?
061432 / 263140,,000000          POPJ    P,                   ;;YES, LOSE
061433 / 200100,,022066          MOVE TAC1,022066             ;
061434 / 303100,,777777         CAILE TAC1,777777             ;;FULL HOUSE?
061435 / 254000,,061445          JRST      061445             ;;YES. LET HIM WRAP AROUND.
061436 / 554100,,000001          HLRZ TAC1,   TAC             ;
061437 / 660100,,001777           TRO TAC1,  1777             ;
061440 / 550640,,000001          HRRZ  AC1,   TAC             ;
061441 / 421640,,001777        ANDCMI  AC1,  1777             ;
061442 / 271115,,000000          ADDI TAC1,      (AC1)        ;
061443 / 311100,,022066          CAML TAC1,022066             ;;IS RELOC+PROTECT GREATER THAN MEMORY?
061444 / 263140,,000000          POPJ    P,                   ;;YES
                       SETPRW:
061445 / 200104,,027420          MOVE TAC1,JBTPRV(J)          ;;GET THIS GUY'S PRIV BITS
061446 / 607100,,000040          TLNN TAC1,000040             ;;SKIP IF HE HAS ABS CORE WRITE PRIV
061447 / 661040,,000001           TLO  TAC,000001             ;;NO, WRITE PROTECT AUTOMATICALLY
061450 / 254000,,061465          JRST      PR2SET             ;
                       ; HERE WE ADDRESS CHECK HIS PR REQUEST
                       PR2REL:
061451 / 554104,,027120          HLRZ TAC1,JBTADR(J)          ;;JOBS PROTECTION
061452 / 550640,,000001          HRRZ  AC1,000001             ;;RELOC REQUESTED(RELATIVE TO CORE IMAGE).
061453 / 421640,,001777        ANDCMI  AC1,  1777             ;
061454 / 313640,,000002         CAMLE  AC1,000002             ;;TOO HIGH?
061455 / 263140,,000000          POPJ    P,                   ;;LOSE
061456 / 554640,,000001          HLRZ  AC1,000001             ;;PROT.
061457 / 660640,,001777           TRO  AC1,  1777             ;
061460 / 550700,,000001          HRRZ  AC2,   TAC             ;
061461 / 421700,,001777        ANDCMI  AC2,  1777             ;
061462 / 271656,,000000          ADDI  AC1,      (AC2)        ;;+RELOC
061463 / 313640,,000002         CAMLE  AC1,000002             ;;TOO BIG?
061464 / 263140,,000000          POPJ    P,                   ;;YES, LOSE
                       PR2SET:
061465 / 261140,,000001          PUSH    P,   TAC             ;
061466 / 260140,,042334         PUSHJ    P,KILSEG             ;
061467 / 262140,,000001           POP    P,   TAC             ;
061470 / 350003,,000000           AOS            (P)          ;
061471 / 620040,,001776           TRZ  TAC,001776             ;;MAKE IT PRETTY
061472 / 661040,,001776           TLO  TAC,001776             ;;	"
                       STPR2:
061473 / 202044,,027220         MOVEM  TAC,JBTPR2(J)          ;
061474 / 254000,,062370          JRST      062370             ;;SET UP PR AND JOBRL2
                       ;GETPR2
                       ;CALLING SEQUENCE:
                       ;	CALL AC,['GETPR2']
                       ;	<ALWAYS RETURNS HERE>
                       ;	AC NOW CONTAINS XWD PROT.,RELOC. 
                       ;	LOW ORDER BIT OF PROT IS ON IF ACCESS IS WRITE PROTECTED.
                       ;	LOW ORDER BIT OF RELOC IS ON IF RELATIVE MODE.
                       PR2GET:
061475 / 200044,,027220          MOVE  TAC,JBTPR2(J)          ;
061476 / 254000,,060225          JRST      060225             ;;GIVE HIM CURRENT VALUE
                       ; REMAP UUO . . .
                       ; CALLING . . .
                       ;	MOVEI AC,<HIGHEST ADDRESS IN LOW PART>
                       ;	CALL AC,[SIXBIT /REMAP/]
                       ;	<NO CAN DO>
                       ; RETURNS JOB NUMBER OF SEGMENT IN ACCUMULATOR
                       ; IF SIGN BIT IN AC IS ON, SETS SEGMENT AS WRITE-PROTECTED
                       REMAP:
061477 / 261140,,000001          PUSH    P,   TAC             ;
061500 / 260140,,042235         PUSHJ    P,042235             ;
061501 / 260140,,042303         PUSHJ    P,042303             ;
061502 / 135100,,037600           LDB TAC1, PSEGN             ;
061503 / 322100,,037376         JUMPE TAC1, TPOPJ             ;
061504 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;; IF WE GOT AN OLD ONE, MAKE SURE IT IS IN CORE
061505 / 603040,,006000          TLNE  TAC,006000             ;
061506 / 260140,,046124         PUSHJ    P,046124             ;; WAIT FOR IT TO GET IN
061507 / 336002,,027120         SKIPN      JBTADR(TAC1)       ;; DID WE GET A FRESH SEGMENT, OR LINK ON TO AN EXISTING ONE?
061510 / 254000,,061563          JRST      061563             ;; WE GOT A NEW ONE
061511 / 603040,,001000          TLNE  TAC,  JSEG             ;
061512 / 254000,,061526          JRST      REMAP6             ;
061513 / 260140,,000316         PUSHJ    P,PUSHIT             ;
061514 / 260140,,044320         PUSHJ    P,044320             ;
061515 / 260140,,044120         PUSHJ    P,DISERR             ;
061516 / 000000,,154312                                       ;
061517 / 000303,,777764        DCPQQQ      777764(P)          ;
061520 / 000000,,153312                                       ;
061521 / 000303,,777762        DCPQQQ      777762(P)          ;
061522 / 000000,,152275                                       ;
061523 / 777777,,777777                                       ;
061524 / 260140,,000341         PUSHJ    P, POPIT             ;
061525 / 265240,,043257           JSP  DAT,UERROR             ;
                       ; REMAP - CHECK IF HE WANTS IT WRITE PROTECTED
                       REMAP6:
061526 / 603040,,000001          TLNE  TAC,000001             ;; IS IT WRITE PROTECTED?
061527 / 331003,,000000         SKIPL            (P)          ;; YES, IS THAT WHAT WE WANT?
061530 / 304000,,000000          CAIA                         ;
061531 / 254000,,061542          JRST      061542             ;; YES
061532 / 607040,,000001          TLNN  TAC,000001             ;; IS IT UNPROTECTED?
061533 / 335003,,000000        SKIPGE            (P)          ;; YES, IS THAT WHAT WE WANT?
061534 / 304000,,000000          CAIA                         ;
061535 / 254000,,061542          JRST      REMAP5             ;
061536 / 260140,,042303         PUSHJ    P,042303             ;; NO, GET A NEW ONE
061537 / 135100,,037600           LDB TAC1,037600             ;;GET SEGMENT #
061540 / 322100,,037376         JUMPE TAC1,037376             ;; LEAVE NOW IF WE DIDN'T GET ONE!
061541 / 254000,,061563          JRST      REMAP1             ;
                       REMAP5:
061542 / 262140,,000001           POP    P,000001             ;; GET NEW CORE ASSIGNMENT BACK
061543 / 553000,,000001         HRRZS         TAC             ;
061544 / 435040,,001777           ORI  TAC,  1777             ;
061545 / 260140,,071266         PUSHJ    P,CORUUO             ;
061546 / 304000,,000000          CAIA                         ;
061547 / 254000,,061560          JRST      REMAP7             ;
061550 / 260140,,000316         PUSHJ    P,PUSHIT             ;
061551 / 260140,,044320         PUSHJ    P,044320             ;
061552 / 260140,,044120         PUSHJ    P,DISERR             ;
061553 / 000000,,154332                                       ;
061554 / 000303,,777764        DCPQQQ      777764(P)          ;
061555 / 777777,,777777                                       ;
061556 / 260140,,000341         PUSHJ    P, POPIT             ;
061557 / 265240,,043257           JSP  DAT,UERROR             ;
                       REMAP7:
061560 / 135100,,037600           LDB TAC1, PSEGN             ;
061561 / 135500,,037573           LDB UCHN,037573             ;; CORUUO USES UCHN ITSELF!
061562 / 254000,,061654          JRST      REMAP2             ;
                       ; REMAP - IF HE IS NOT ON 1K BOUNDARY, ADJUST HIM
                       REMAP1:
061563 / 460043,,000000         SETCM  TAC,      (P)          ;; NOW WE DO THE SIMULATED UPWARDS BLT
061564 / 606040,,001777          TRNN  TAC,001777             ;; IS HE ALREADY AT A 1K BOUNDARY
061565 / 254000,,061601          JRST      061601             ;; YES.
061566 / 550053,,024065          HRRZ  TAC,USRREL(PID)        ;; NO. GET AN EXTRA 1K TO BLT HIM UP INTO
061567 / 271040,,002000          ADDI  TAC,  2000             ;
061570 / 260140,,071266         PUSHJ    P,CORUUO             ;
061571 / 304000,,000000          CAIA                         ;
061572 / 254000,,061575          JRST      REMAP8             ;
061573 / 262140,,000001           POP    P,   TAC             ;
061574 / 254000,,042334          JRST      KILSEG             ;
                       REMAP8:
061575 / 550043,,000000          HRRZ  TAC,      (P)          ;
061576 / 260140,,061657         PUSHJ    P,061657             ;;MOVE UP UPPER
061577 / 135100,,037600           LDB TAC1, PSEGN             ;
061600 / 135500,,037573           LDB UCHN,037573             ;; CORUUO USES UCHN ITSELF!
                       REMAP3:
061601 / 262140,,000001           POP    P,   TAC             ;
061602 / 205240,,000001         MOVSI  DAT,   JWP             ;
061603 / 337000,,000001         SKIPG         TAC             ;
061604 / 436242,,026114           ORM  DAT,JBTSTS(TAC1)       ;
061605 / 553000,,000001         HRRZS         TAC             ;
061606 / 435040,,001777           ORI  TAC,  1777             ;
061607 / 311053,,024065          CAML  TAC,USRREL(PID)        ;
061610 / 254000,,042334          JRST      KILSEG             ;
061611 / 506044,,027120          HRLM  TAC,JBTADR(J)          ;
061612 / 506040,,024063          HRLM  TAC,JOBADR             ;
061613 / 542053,,024065          HRRM  TAC,USRREL(PID)        ;
061614 / 542047,,000044          HRRM  TAC,JOBREL(JDAT)       ;
061615 / 261140,,000001          PUSH    P,   TAC             ;
061616 / 242040,,777774           LSH  TAC,777774             ;
061617 / 405040,,037700          ANDI  TAC, 37700             ;
061620 / 271040,,000100          ADDI  TAC,000100             ;
061621 / 260140,,072423         PUSHJ    P,STAPUT             ;
061622 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
061623 / 271047,,000001          ADDI  TAC,     1(PROG)       ;
061624 / 542042,,027120          HRRM  TAC,JBTADR(TAC1)       ;
061625 / 242040,,777774           LSH  TAC,777774             ;
061626 / 405040,,037700          ANDI  TAC, 37700             ;
061627 / 660040,,040000           TRO  TAC,CPSSTA             ;
061630 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       ;FTSTAT
061631 / 554040,,000007          HLRZ  TAC,  PROG             ;
061632 / 274053,,024065           SUB  TAC,USRREL(PID)        ;
061633 / 275040,,000001          SUBI  TAC,     1             ;
061634 / 506042,,027120          HRLM  TAC,JBTADR(TAC1)       ;
061635 / 242040,,777774           LSH  TAC,777774             ;
061636 / 405040,,037700          ANDI  TAC, 37700             ;
061637 / 271040,,000100          ADDI  TAC,000100             ;
061640 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       ;FTSTAT
061641 / 504353,,024065           HRL PROG,USRREL(PID)        ;
061642 / 261140,,000002          PUSH    P,000002             ;;REG. FIX CORTAB AT REMAP TIME.
061643 / 550442,,027120          HRRZ DSER,JBTADR(TAC1)       ;;GET THE LOWEST ADDRESS IN UPPER
061644 / 554642,,027120          HLRZ  AC1,JBTADR(TAC1)       ;;GET THE PROTECTION OF UPPER.
061645 / 201500,,000000         MOVEI UCHN,                   ;;SET TO RELEASE CORE.
061646 / 260140,,072522         PUSHJ    P,072522             ;;RELEASE THIS FROM CORTAB
061647 / 200503,,000000          MOVE UCHN,      (P)          ;;GET THE JOB NUMBER OF UPPER.
061650 / 554652,,027120          HLRZ  AC1,JBTADR(UCHN)       ;;GET THE PROTECTION AGAIN
061651 / 260140,,072522         PUSHJ    P,072522             ;;CLAIM BLOCKS IN CORTAB
061652 / 262140,,000002           POP    P,  TAC1             ;
061653 / 135500,,037573           LDB UCHN,037573             ;;RESTORE UCHN
                       REMAP2:
152566 / 202112,,000000         MOVEM TAC1,      (UCHN)       ;
061654 / 256040,,152566          XCTR   XW,152566             ;
061655 / 350003,,000000           AOS            (P)          ;
061656 / 254000,,062370          JRST      SEGXIT             ;
                       ;BLTUP - FAST UPWARDS BLT
                       ;TAKES SOURCE ADDRESS-1 IN TAC (RELATIVE)
                       ;BLTS UP REST OF CORE IMAGE TO NEXT 1K BOUNDARY
                       ;CAN ALSO ENTER AT FASBLT WITH TAC1=DEST-1 AND AC2=END DEST
                       ;CLOBBERS TAC,TAC1,AC1,AC2,AC3
                       ;THIS CODE IS MORE OR LESS COPIED FROM CORE ROUTINES IN 'E'
                       BLTUP:
061657 / 201101,,000000         MOVEI TAC1,      (TAC)        ;
061660 / 435100,,001777          IORI TAC1,001777             ;;DEST ADR
061661 / 554700,,000007          HLRZ  AC2,  PROG             ;
                       FASBLT:
061662 / 275702,,000000          SUBI  AC2,      (TAC1)       ;;LENGTH OF XFER
061663 / 275101,,000000          SUBI TAC1,      (TAC)        ;;DIST OF XFER
061664 / 271047,,000000          ADDI  TAC,      (PROG)       ;;RELOCATE
061665 / 303702,,000000         CAILE  AC2,      (TAC1)       ;;EASY (NO OVERLAP) IF LENGTH<DIST
061666 / 325100,,061676        JUMPGE TAC1,061676             ;;NOW WE NEED TO WORRY
061667 / 323700,,037403        JUMPLE  AC2, CPOPJ             ;
061670 / 201741,,000000         MOVEI  AC3,      (TAC)        ;
061671 / 270740,,000002           ADD  AC3,000002             ;;GET BACK DEST
061672 / 505741,,000000          HRLI  AC3,      (TAC)        ;
061673 / 271717,,000000          ADDI  AC2,      (AC3)        ;;END LOC+1
061674 / 251756,,777777           BLT  AC3,777777(AC2)        ;
061675 / 263140,,000000          POPJ    P,                   ;
                       BLTUP1:
061676 / 303100,,000005         CAILE TAC1,000005             ;;THIS IS BELIEVED TO BE THE ROUGH BREAK-EVEN POINT
061677 / 254000,,061711          JRST      061711             ;;BETWEEN THE TWO METHODS
061700 / 322100,,037403         JUMPE TAC1, CPOPJ             ;
061701 / 262102,,000000           POP TAC1,      (TAC1)       ;
061701 / 205640,,262102         MOVSI  AC1,      (<POP TAC1,(TAC1)>)        ;
061702 / 541642,,000000          HRRI  AC1,      (TAC1)       ;
061703 / 205117,,377777         MOVSI TAC1,377777(AC3)        ;;SET COUNT TO GO NEG AFTER APPROP # OF WDS
061704 / 541101,,000000          HRRI TAC1,      (TAC)        ;
061705 / 271117,,000000          ADDI TAC1,      (AC3)        ;;INITIAL FETCH ADR
153032 / 321100,,000015         JUMPL TAC1,   AC1             ;
061706 / 200700,,153032          MOVE  AC2,153032             ;
152753 / 263140,,000000          POPJ    P,                   ;
061707 / 200740,,152753          MOVE  AC3,152753             ;;TO GET US BACK
061710 / 254000,,000015          JRST      000015             ;;ROAR
                       ;HERE WE ITERATE ON BLTS, POSSIBLY STARTING WITH A SMALLER ONE
                       BLTUP2:
061711 / 261140,,000016          PUSH    P,   AC2             ;
061712 / 231702,,000000         IDIVI  AC2,      (TAC1)       ;;REMAINDER WILL BWE SIZE OF SHORT ONE
061713 / 200703,,000000          MOVE  AC2,      (P)          ;
061714 / 271701,,000001          ADDI  AC2,     1(TAC)        ;;SOURCE END ADR+1
061715 / 505716,,000000          HRLI  AC2,      (AC2)        ;
061716 / 271702,,000000          ADDI  AC2,      (TAC1)       ;;SOURCE END+1,,DEST END+1
061717 / 322740,,061725         JUMPE  AC3,061725             ;;SKIP INITIAL STEP IF 0 REMAINDER
061720 / 251756,,000000           BLT  AC3,      (AC2)        ;
061720 / 205640,,251756         MOVSI  AC1,      (<BLT AC3,(AC2)>)      ;
061721 / 541657,,777777          HRRI  AC1,777777(AC3)        ;
061722 / 505757,,000000          HRLI  AC3,      (AC3)        ;
061723 / 277700,,000017          SUBB  AC2,000017             ;;BACK UP & DUPLICATE POINTER
061724 / 256000,,000015           XCT         AC1             ;
                       BLTUP3:
061725 / 251756,,000000           BLT  AC3,      (AC2)        ;
061725 / 505100,,251756          HRLI TAC1,      (<BLT AC3,(AC2)>)      ;;CREATE BLT WITH APPROP OFFSET
061726 / 202103,,000000         MOVEM TAC1,      (P)          ;
061727 / 370003,,000000           SOS            (P)          ;
061730 / 505102,,000000          HRLI TAC1,      (TAC1)       ;;DIST,,DIST
061731 / 201641,,000001         MOVEI  AC1,     1(TAC)        ;
061732 / 271642,,000000          ADDI  AC1,      (TAC1)       ;;DEST ADR
                       BLTUP4:
061733 / 274700,,000002           SUB  AC2,000002             ;;BACKUP PNTR OVER NEXT BLT
061734 / 200740,,000016          MOVE  AC3,000016             ;;DUPLICATE FOR BLT
061735 / 256003,,000000           XCT            (P)          ;;DO BLT
061736 / 305656,,000000         CAIGE  AC1,      (AC2)        ;;DOWN TO STARTING DEST ADR YET?
061737 / 254000,,061733          JRST      061733             ;;NO - DO SOME MORE
151763 / 000001,,000001                                       ;
061740 / 274140,,151763           SUB    P,151763             ;
061741 / 263140,,000000          POPJ    P,                   ;
                       ; UUO TO SET OR CLEAR USER WRITE-PROTECT BIT
                       ; CALLING . . .
                       ;	MOVE AC,<0 FOR CLEAR, ≠0 FOR SET>
                       ;	CALL AC,[SIXBIT /SETUWP/]
                       ;	<NO CAN DO>
                       SETUWP:
061742 / 261140,,000004          PUSH    P,     J             ;
061743 / 261140,,000001          PUSH    P,   TAC             ;
061744 / 135200,,037600           LDB    J, PSEGN             ;
061745 / 326200,,061751         JUMPN    J,SETUW1             ;
061746 / 262140,,000001           POP    P,   TAC             ;
061747 / 262140,,000004           POP    P,     J             ;
061750 / 254000,,062370          JRST      SEGXIT             ;
                       SETUW1:
061751 / 260140,,042155         PUSHJ    P,ACCESS             ;
061752 / 255000,,000000          JFCL                         ;
061753 / 254000,,061764          JRST      SETUW2             ;
061754 / 262140,,000002           POP    P,  TAC1             ;
061755 / 205040,,000001         MOVSI  TAC,   JWP             ;
061756 / 322100,,061760         JUMPE TAC1,061760             ;
061757 / 437044,,026114          IORB  TAC,JBTSTS(J)          ;
061760 / 326100,,061762         JUMPN TAC1,061762             ;
061761 / 413044,,026114        ANDCAB  TAC,JBTSTS(J)          ;
061762 / 554104,,027120          HLRZ TAC1,JBTADR(J)          ;;FOR CORE2X
061763 / 254000,,062172          JRST      062172             ;;UPDATE EVERYONE'S JOBRL2 WP FLAG
                       SETUW2:
061764 / 262140,,000001           POP    P,   TAC             ;
061765 / 262140,,000004           POP    P,000004             ;; FORGET IMMEDIATELY IF READ-ONLY ACCESS
061766 / 332000,,000001         SKIPE         TAC             ;
061767 / 254000,,037401          JRST      CPOPJ1             ;
061770 / 263140,,000000          POPJ    P,                   ;
                       ;UNPURE - MAKE A WRITEABLE COPY OF WRITE-PROTECTED UPPER, IF NECESSARY
                       ;SKIPS IF SUCCESSFUL, IF ALREADY WRITEABLE, OR IF NO UPPER
                       ;NO-SKIP MEANS COPY COULDN'T BE CREATED (JOB SLOTS OR CORE NEEDED)
                       UNPURE:
061771 / 135640,,037600           LDB  AC1, PSEGN             ;
061772 / 322640,,062051         JUMPE  AC1,062051             ;;NONE AT ALL, CHECK PR2
061773 / 200055,,026114          MOVE  TAC,JBTSTS(AC1)        ;
061774 / 627040,,000001          TLZN  TAC,   JWP             ;
061775 / 254000,,037401          JRST      037401             ;;NOT WRITE-PROTECTED
061776 / 200115,,026420          MOVE TAC1, NJOBS(AC1)        ;
061777 / 362100,,062047          SOJE TAC1,062047             ;;SEE IF WE HAVE SOLE ACCESS
062000 / 260140,,071623         PUSHJ    P,071623             ;;NO - WAIT FOR I/O & SPW
062001 / 260140,,045074         PUSHJ    P,IOWAIT             ;
062002 / 135640,,037600           LDB  AC1, PSEGN             ;
062003 / 260140,,042203         PUSHJ    P,042203             ;;TRY TO CREATE FRESH UPPER
062004 / 254000,,071612          JRST      071612             ;;NO JOBS
062005 / 205040,,002000         MOVSI  TAC,   SWP             ;
062006 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;PRETEND SWAPPED OUT SO CORGET WON'T CALL XPAND
062007 / 201340,,000000         MOVEI PROG,                   ;;NO CORE YET
062010 / 554055,,027120          HLRZ  TAC,JBTADR(AC1)        ;;HOW MUCH WE WOULD LIKE
062011 / 260140,,072147         PUSHJ    P,072147             ;;TRY TO GET IT
062012 / 254000,,062055          JRST      062055             ;;NO CAN DO - MUST HACK VIA SWAPPER
062013 / 205040,,002000         MOVSI  TAC,   SWP             ;
062014 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;FIX THIS BEFORE WE FORGET
062015 / 200640,,024061          MOVE  AC1,   JOB             ;
152062 / 000615,,026114                                       ;
062016 / 135640,,152062           LDB  AC1,152062             ;;GET CURRENT SEGMENT AGAIN
062017 / 554040,,000007          HLRZ  TAC,  PROG             ;
062020 / 271047,,000000          ADDI  TAC,      (PROG)       ;
062021 / 504355,,027120           HRL PROG,JBTADR(AC1)        ;
062022 / 251341,,000000           BLT PROG,      (TAC)        ;;COPY DATA TO NEW SEGMENT
                       UNPURX:
062023 / 261140,,000004          PUSH    P,     J             ;
062024 / 200200,,024061          MOVE    J,   JOB             ;
062025 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
062026 / 260140,,071612         PUSHJ    P,071612             ;;IN CASE SPW STOPPED
062027 / 261140,,000015          PUSH    P,   AC1             ;
062030 / 260140,,042334         PUSHJ    P,042334             ;;GET RID OF OLD SEGMENT
062031 / 262140,,000004           POP    P,     J             ;
062032 / 262140,,000001           POP    P,   TAC             ;
062033 / 260140,,042314         PUSHJ    P,042314             ;;COPY PARAMETERS FROM OLD
062034 / 200213,,024061          MOVE    J,   JOB(PID)        ;
062035 / 137040,,037600           DPB  TAC,037600             ;;THIS IS NOW OUR SEGMENT
062036 / 260140,,072465         PUSHJ    P,SEGSTT             ;
062037 / 135040,,037600           LDB  TAC, PSEGN             ;
                       ;FTSTAT
                       UNPUR2:
062040 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
                       UNPU21:
062041 / 200055,,030142          MOVE  TAC,JOBNAM(AC1)        ;;MUNG JOBNAM SO THE OLD ONE IS STILL UNIQUE
062042 / 242040,,777772           LSH  TAC,777772             ;;CLEVERLY PRESERVING THE INFO FOR HUMANS
062043 / 202055,,030142         MOVEM  TAC,JOBNAM(AC1)        ;
062044 / 201044,,000400         MOVEI  TAC,   400(J)          ;;400 BIT WILL FEND OFF ACCESS
153061 / 331115,,030542                                       ;
062045 / 137040,,153061           DPB  TAC,153061             ;;CLEAR PROTECTION
062046 / 254000,,062367          JRST      062367             ;;RETURN SUCCESSFULLY
                       UNPUR3:
062047 / 202055,,026114         MOVEM  TAC,JBTSTS(AC1)        ;;OURS ALONE - JUST UNPROTECT IT
062050 / 254000,,062041          JRST      UNPU21             ;
                       UNPNON:
062051 / 205040,,000001         MOVSI  TAC,     1             ;
062052 / 613044,,027220          TSNE  TAC,JBTPR2(J)          ;;IF HE HAS RELATIVE PR2
062053 / 412044,,027220        ANDCAM  TAC,JBTPR2(J)          ;;THEN UNPROTECT IT
062054 / 254000,,062367          JRST      062367             ;;NOW UPDATE PR & JOBHRL & SKIP RETURN
                       ;UNPURE CONTINUED:
                       ;HERE WE COULDN'T GET CORE IMMEDIATELY FOR THE NEW SEGMENT, SO WE'LL GET
                       ;THE SWAPPER TO DO THE WORK
                       ;FIRST WE MAKE SURE THE CORE AND DISK COPIES OF OUR PRESENT UPPER AGREE.
                       ;IF NOT, WE WAIT WHILE TRYING TO FORCE A SWAP
                       UNPNC:
062055 / 205040,,002000         MOVSI  TAC,   SWP             ;
062056 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;FIRST PUT THIS BACK
062057 / 200653,,024061          MOVE  AC1,   JOB(PID)        ;
152062 / 000615,,026114                                       ;
062060 / 135640,,152062           LDB  AC1,152062             ;;GET BACK OLD UPPER #
062061 / 554055,,021427          HLRZ  TAC,JBTSWP(AC1)        ;
062062 / 336015,,032043         SKIPN       STIME(AC1)        ;
062063 / 326040,,062110         JUMPN  TAC,062110             ;;AH, UPPER HAS BEEN SWAPPED AND NOT CHANGED
062064 / 205040,,051000         MOVSI  TAC,051000             ;
062065 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;MUST WAIT - MEANWHILE GIVE BACK JOB SLOT
062066 / 402004,,027720         SETZM      PRJPRG(J)          ;
062067 / 201040,,000010         MOVEI  TAC,  NULQ             ;
062070 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;
062071 / 260140,,046027         PUSHJ    P, REQUE             ;
062072 / 200213,,024061          MOVE    J,   JOB(PID)        ;;NOW BE OURSELVES, WAITING FOR OUR UPPER TO GET SWAPPED
                       UNPNC1:
062073 / 135640,,037600           LDB  AC1, PSEGN             ;
062074 / 554055,,021427          HLRZ  TAC,JBTSWP(AC1)        ;
062075 / 336015,,032043         SKIPN       STIME(AC1)        ;
062076 / 326040,,062106         JUMPN  TAC,062106             ;;NOW WE'RE ALMOST READY
062077 / 336000,,021630         SKIPN      021630             ;;NOT YET - SEE IF WE CAN DIDDLE THE SWAPPER
062100 / 332000,,021631         SKIPE       FORCE             ;
062101 / 254000,,062104          JRST      062104             ;;NO - WAIT A LITTLE
062102 / 202640,,021631         MOVEM  AC1,021631             ;;YES - THIS OUGHT TO GET IT OUT THERE
062103 / 402000,,022062         SETZM      SWPCNT             ;
                       UNPNC2:
062104 / 260140,,046124         PUSHJ    P,046124             ;;WASTE A LITTLE TIME
062105 / 254000,,062073          JRST      062073             ;;AND TRY AGAIN
                       ;SWAPPING IS NOW COMPLETE. NOW TRY TO GET BACK JOB SLOT.
                       UNPNC3:
062106 / 260140,,042203         PUSHJ    P,ESTSEG             ;
062107 / 254000,,071612          JRST      071612             ;;AFTER ALL THAT WORK ...
                       ;THE CORE AND DISK COPIES OF THE UPPER NOW AGREE. WE WILL STEAL THE CORE COPY,
                       ;LEAVING THE OTHER LOSERS TO FIGHT OVER GETTING THE DISK ONE SWAPPED BACK IN.
                       UNPNC4:
062110 / 205040,,002000         MOVSI  TAC,   SWP             ;
062111 / 436055,,026114          IORM  TAC,JBTSTS(AC1)        ;;SEE US SCREW ALL THE OTHER POOR LOSERS
062112 / 201440,,000000         MOVEI DSER,                   ;
062113 / 250455,,027120          EXCH DSER,JBTADR(AC1)        ;;THE OLD UPPER IS NOW OFFICIALLY SWAPPED OUT!
062114 / 202444,,027120         MOVEM DSER,JBTADR(J)          ;;GEE, WHAT AN EASY CORE UUO
062115 / 261140,,000015          PUSH    P,   AC1             ;
062116 / 554640,,000011          HLRZ  AC1,000011             ;;NOW ALL WE HAVE TO DO IS FIX CORTAB
062117 / 405440,,777777          ANDI DSER,777777             ;
062120 / 201500,,000000         MOVEI UCHN,                   ;
062121 / 260140,,072522         PUSHJ    P,072522             ;;OUT WITH THE OLD JOB
062122 / 201504,,000000         MOVEI UCHN,      (J)          ;
062123 / 554644,,027120          HLRZ  AC1,JBTADR(J)          ;
062124 / 260140,,072522         PUSHJ    P,072522             ;;AND IN WITH THE GOOD
062125 / 262140,,000015           POP    P,000015             ;;RESTORE JOB NUMBER OF OLD SEG TO COPY DATA
062126 / 254000,,062023          JRST      062023             ;;DO THE FINAL CLEANUP AND LEAVE
                       ; CORE UUO FOR HIGH SEGMENTS
                       ; CALLING . . .
                       ;	MOVE AC,<HIGHEST REL. ADR. IN UPPER, INCLUDING 0>
                       ;	CALL AC,[SIXBIT /CORE2/]
                       ;	<ERROR RETURN>
                       CORE2:
062127 / 602040,,377777          TRNE  TAC,377777             ;;IS HE REQUESTING ANY CORE AT ALL?
062130 / 254000,,062133          JRST      062133             ;;YES.
062131 / 350003,,000000           AOS            (P)          ;;NO. GIVE HIM THE SUCCESS RETURN
062132 / 254000,,042334          JRST      042334             ;;AND KILL THE SEGMENT
                       CORE2A:
062133 / 435040,,001777           ORI  TAC,001777             ;;ROUND UP TO NORMAL BOUNDARY
062134 / 405040,,377777          ANDI  TAC,377777             ;;ZERO SOME BITS.
062135 / 261140,,000004          PUSH    P,     J             ;
062136 / 135200,,037600           LDB    J, PSEGN             ;
062137 / 326200,,062151         JUMPN    J,062151             ;;JUMP IF WE HAVE A SEGMENT ALREADY.
062140 / 262140,,000004           POP    P,000004             ;;HERE WE HAVE TO MAKE A NEW SEGMENT
062141 / 261140,,000001          PUSH    P,   TAC             ;
062142 / 260140,,042303         PUSHJ    P,042303             ;
062143 / 262140,,000001           POP    P,   TAC             ;
062144 / 135100,,037600           LDB TAC1, PSEGN             ;
062145 / 322100,,062370         JUMPE TAC1,062370             ;;WE LOSE SOMEHOW - NO SEGMENT AVAILABLE.
062146 / 261140,,000004          PUSH    P,     J             ;
062147 / 135200,,037600           LDB    J, PSEGN             ;
062150 / 254000,,062160          JRST      062160             ;;AVOID ACCESS CHECK WHEN MAKING A NEW ONE
                       CORE2B:
062151 / 261140,,000001          PUSH    P,   TAC             ;
062152 / 261143,,777777          PUSH    P,777777(P)          ;;PUT JOB NUMBER ON TOP OF STACK
062153 / 260140,,042155         PUSHJ    P,ACCESS             ;
062154 / 255000,,000000          JFCL                         ;
062155 / 254000,,062211          JRST      062211             ;;LOSE?
062156 / 262143,,000000           POP    P,      (P)          ;
062157 / 262140,,000001           POP    P,   TAC             ;
                       CORE2N:
062160 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;J HAS NUMBER OF THE UPPER.
062161 / 260140,,071266         PUSHJ    P,CORUUO             ;
062162 / 254000,,062206          JRST      CORE2D             ;
062163 / 261140,,000007          PUSH    P,  PROG             ;
062164 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
062165 / 607040,,006000          TLNN  TAC,006000             ;;SWAPPED OR MOVING?
062166 / 332004,,021760         SKIPE        XJOB(J)          ;;OR TRYING TO GROW?
062167 / 260140,,046124         PUSHJ    P,046124             ;;YES, WAIT FOR IT
062170 / 262140,,000007           POP    P,000007             ;;GET THIS BACK
062171 / 554100,,000007          HLRZ TAC1,  PROG             ;
                       CORE2X:
062172 / 603040,,000001          TLNE  TAC,   JWP             ;
062173 / 661100,,400000           TLO TAC1,400000             ;;TELL LOSERS ABOUT WRITE PROTECTION
062174 / 200040,,000004          MOVE  TAC,     J             ;
062175 / 660100,,400000           TRO TAC1,400000             ;
062176 / 350003,,777777           AOS      777777(P)          ;;SET FOR SUCCESS RETURN
                       ; CORE2 - SCAN FOR ALL JOBS USING THIS SEGMENT AND TELL THEM HE HAS CHANGED SIZE
062177 / 201200,,000077         MOVEI    J,000077             ;;SET JOBRL2 FOR ALL JOBS USING THIS SEGMENT.
                       SETRL2:
062200 / 135400,,037600           LDB  TEM, PSEGN             ;
062201 / 316400,,000001          CAMN  TEM,   TAC             ;
062202 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;
062203 / 254000,,062205          JRST      062205             ;
062204 / 202107,,000115         MOVEM TAC1,JOBRL2(PROG)       ;
062205 / 367200,,062200          SOJG    J,SETRL2             ;
                       CORE2D:
062206 / 262140,,000004           POP    P,     J             ;
062207 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
062210 / 254000,,062370          JRST      SEGXIT             ;
                       CORE2C:
062211 / 262143,,000000           POP    P,      (P)          ;
062212 / 262140,,000001           POP    P,   TAC             ;
062213 / 262140,,000004           POP    P,     J             ;
062214 / 254000,,042334          JRST      KILSEG             ;
                       ; ATTACH HIGH SEGMENT
                       ; CALLING . . .
                       ;	MOVE AC,<JOB NUMBER OR JOB NAME>
                       ;	CALL AC,[SIXBIT /ATTSEG/]
                       ;	<NO CAN DO, ERROR CODE IN AC>
                       ; ERROR CODES:
                       ; 0 - PROTECTION VIOLATION
                       ; 1 - AMBIGUOUS ADDRESSEE
                       ; 2 - NOT A HIGH SEGMENT
                       ; 3 - DOES NOT EXIST
                       ; 4 - ALREADY HAVE A HIGH SEGMENT
                       ATTSEG:
062215 / 135100,,037600           LDB TAC1, PSEGN             ;
062216 / 336004,,027220         SKIPN      JBTPR2(J)          ;;CAN'T ATTACH WHILE DOING PEEK-POKE
062217 / 322100,,062222         JUMPE TAC1,ATTSE5             ;
062220 / 201040,,000004         MOVEI  TAC,     4             ;
062221 / 254000,,062230          JRST      ATTSER             ;
                       ATTSE5:
151663 / 777777,,777700                                       ;
062222 / 612040,,151663          TDNE  TAC,151663             ;
062223 / 254000,,062274          JRST      ATTSGJ             ;
                       ATTSE1:
062224 / 200101,,026114          MOVE TAC1,JBTSTS(TAC)        ;
062225 / 603100,,001000          TLNE TAC1,  JSEG             ;
062226 / 254000,,062232          JRST      ATTSE6             ;
062227 / 201040,,000001         MOVEI  TAC,     1             ;
                       ATTSER:
152547 / 202052,,000000         MOVEM  TAC,      (UCHN)       ;
062230 / 256040,,152547          XCTR   XW,152547             ;
062231 / 263140,,000000          POPJ    P,                   ;
                       ATTSE6:
062232 / 261140,,000004          PUSH    P,     J             ;
062233 / 200200,,000001          MOVE    J,   TAC             ;
062234 / 260140,,042155         PUSHJ    P,ACCESS             ;
062235 / 254000,,062322          JRST      ATTSE7             ;
062236 / 255000,,000000          JFCL                         ;
062237 / 200100,,000004          MOVE TAC1,     J             ;
062240 / 262140,,000004           POP    P,     J             ;
062241 / 137100,,037600           DPB TAC1, PSEGN             ;
062242 / 261140,,000001          PUSH    P,   TAC             ;
062243 / 260140,,072465         PUSHJ    P,SEGSTT             ;
062244 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
062245 / 350002,,026420           AOS       NJOBS(TAC1)       ;; BUMP COUNT OF PEOPLE POINTING TO THIS SEGMENT
062246 / 336644,,033065         SKIPN  AC1,JBTDTS(J)          ;;DOES HE HAVE A LIST OF DETACHED SEGMENTS?
062247 / 254000,,062271          JRST      062271             ;;NO.
                       ATTSE3:
062250 / 135240,,037601           LDB  DAT,037601             ;;YES, IS THERE A SEGMENT NUMBER THERE
062251 / 322240,,062271         JUMPE  DAT,062271             ;;NO SEGMENTS LEFT IN LIST
062252 / 312240,,000002          CAME  DAT,000002             ;;IS THIS THE ONE IN QUESTION?
062253 / 344640,,062250          AOJA  AC1,062250             ;;NO, TRY THE NEXT ONE
062254 / 200400,,000015          MOVE  TEM,000015             ;;YES, RUN DOWN TO END OF LIST
062255 / 271400,,000001          ADDI  TEM,000001             ;;UPDATE LIST OF DETACHED SEGMENTS
                       ATTSE4:
062256 / 332010,,000000         SKIPE            (TEM)        ;;IS THIS THE END OF LIST?
062257 / 344400,,062256          AOJA  TEM,062256             ;;NO, TRY AGAIN
062260 / 200250,,777777          MOVE  DAT,777777(TEM)        ;;MOVE LAST WORD ONTO WHERE WE'RE DELETING
062261 / 202255,,000000         MOVEM  DAT,      (AC1)        ;
062262 / 402010,,777777         SETZM      777777(TEM)        ;;ZERO THE END OF THE LIST
062263 / 275400,,000001          SUBI  TEM,     1             ;
062264 / 312404,,033065          CAME  TEM,JBTDTS(J)          ;;DOES HE HAVE ANY DETACHED SEGMENTS LEFT?
062265 / 254000,,062271          JRST      062271             ;;YES, WE ARE DONE
062266 / 200644,,033065          MOVE  AC1,JBTDTS(J)          ;;NO, WE CAN GIVE BACK FREE STORAGE
062267 / 260140,,074163         PUSHJ    P,FSGIVE             ;
062270 / 402004,,033065         SETZM      JBTDTS(J)          ;
                       ATTSE2:
062271 / 350003,,000000           AOS            (P)          ;
062272 / 260140,,046124         PUSHJ    P,046124             ;;MAKE SURE SEGMENT IS IN CORE
062273 / 254000,,062370          JRST      062370             ;; NOW GO SET PROT-RELOC
                       ;ATTSEG	 SEARCH FOR A SEGMENT OF A GIVEN NAME
                       ATTSGJ:
062274 / 200240,,035266          MOVE  DAT,JOBNM1             ;
                       ATTSG1:
062275 / 312045,,030142          CAME  TAC,JOBNAM(DAT)        ;
062276 / 254000,,062304          JRST      ATTSG4             ;
062277 / 200105,,026114          MOVE TAC1,JBTSTS(DAT)        ;
062300 / 607100,,001000          TLNN TAC1,  JSEG             ;
062301 / 254000,,062304          JRST      ATTSG4             ;
062302 / 200100,,000005          MOVE TAC1,   DAT             ;
062303 / 254000,,062317          JRST      ATTSG2             ;
                       ATTSG4:
062304 / 367240,,062275          SOJG  DAT,ATTSG1             ;
062305 / 201040,,000003         MOVEI  TAC,     3             ;
062306 / 254000,,062230          JRST      ATTSER             ;
                       ATTSG3:
062307 / 312045,,030142          CAME  TAC,JOBNAM(DAT)        ;
062310 / 254000,,062317          JRST      ATTSG2             ;
062311 / 200405,,026114          MOVE  TEM,JBTSTS(DAT)        ;
062312 / 607400,,001000          TLNN  TEM,  JSEG             ;
062313 / 254000,,062317          JRST      ATTSG2             ;
062314 / 201040,,000001         MOVEI  TAC,     1             ;
062315 / 504040,,000005           HRL  TAC,   DAT             ;
062316 / 254000,,062230          JRST      ATTSER             ;
                       ATTSG2:
062317 / 367240,,062307          SOJG  DAT,ATTSG3             ;
062320 / 200040,,000002          MOVE  TAC,  TAC1             ;
062321 / 254000,,062224          JRST      062224             ;;GO TRY IT
                       ATTSE7:
062322 / 262140,,000004           POP    P,     J             ;
062323 / 201040,,000000         MOVEI  TAC,                   ;
062324 / 254000,,062230          JRST      ATTSER             ;
                       ;DETSEG  DETACH SEGMENT
                       ; CALLING . . .
                       ;	CALL AC,[SIXBIT /DETSEG/]
                       ; IF AC=0, THEN THE SEGMENT IS DETACHED AND PLACED INTO A LIST
                       ; OF THE SEGMENTS THIS GUY HAS DETACHED, SUCH THAT WHEN THE
                       ; SYSTEM CALLES RESET, ALL HIS DETACHED SEGMENTS GO AWAY. IF AC LOW
                       ; ORDER BIT IS ON, SEGEMENT WILL BE SPECIALLY DETACHED- WILL STICK AROUND
                       ; UNTIL THE MAKER KJOBS.
                       DETSEG:
062325 / 332004,,027220         SKIPE      JBTPR2(J)          ;;DOING PEEK-POKE?
153216 / 402004,,027220         SETZM      JBTPR2(J)          ;;FLUSH PEEK-POKE
153217 / 254000,,062370          JRST      SEGXIT             ;
062326 / 254000,,153216          JRST      153216             ;
062327 / 135100,,037600           LDB TAC1, PSEGN             ;
062330 / 322100,,037403         JUMPE TAC1,037403             ;;NO HIGH SEGMENT HERE, HOW STRANGE!
062331 / 332644,,033065         SKIPE  AC1,JBTDTS(J)          ;;PUT THIS ON THE LIST OF DETACHED SEGMENTS.
062332 / 254000,,062337          JRST      062337             ;;HE HAS A DETACHED SEGMENT LIST ALREADY.
062333 / 201740,,000100         MOVEI  AC3,000100             ;;NO, GET HIM ONE ABOUT THIS LONG.
062334 / 260140,,074361         PUSHJ    P,UFSGET             ;
062335 / 552644,,033065         HRRZM  AC1,JBTDTS(J)          ;
062336 / 254000,,062341          JRST      DETSE2             ;
                       DETSE1:
062337 / 332015,,000000         SKIPE            (AC1)        ;;NOW RUN DOWN TO END OF LIST
062340 / 344640,,062337          AOJA  AC1,DETSE1             ;
                       DETSE2:
062341 / 602500,,000001          TRNE UCHN,000001             ;;DOES HE HAVE THE 1-BIT ON IN THE AC FIELD?
062342 / 661100,,400000           TLO TAC1,400000             ;;YES, SET SPECIAL DET SEG.
062343 / 202115,,000000         MOVEM TAC1,      (AC1)        ;;PUT THIS SEGMENT NUMBER IN THE TABLE
062344 / 375002,,026420         SOSGE       NJOBS(TAC1)       ;
062345 / 260140,,062353         PUSHJ    P, NJERR             ;
062346 / 403055,,000001         SETZB  TAC,     1(AC1)        ;;AND MARK THE END OF LIST
062347 / 137040,,037600           DPB  TAC, PSEGN             ;
062350 / 260140,,072465         PUSHJ    P,SEGSTT             ;
062351 / 135040,,037600           LDB  TAC, PSEGN             ;
                       ;FTSTAT
062352 / 254000,,062370          JRST      SEGXIT             ;
                       NJERR:
062353 / 260140,,000316         PUSHJ    P,PUSHIT             ;
062354 / 260140,,044066         PUSHJ    P,DISMES             ;
062364 / 260140,,000341         PUSHJ    P, POPIT             ;
062365 / 402002,,026420         SETZM       NJOBS(TAC1)       ;
062366 / 263140,,000000          POPJ    P,                   ;
                       ; DETSEG - COMMON SEGMENT UUO EXIT ROUTINE
                       SEGXT1:
062367 / 350003,,000000           AOS            (P)          ;
                       SEGXIT:
062370 / 260140,,072621         PUSHJ    P, GETPR             ;
062371 / 700140,,000001         DATAO  APR,   TAC             ;
062372 / 242040,,777767           LSH  TAC,777767             ;;SET JOBHRL DIRECTLY FROM PR WD SO SETPR2 WILL WIN TOO
062373 / 000000,,000011                                       ;
062373 / 606040,,001000          TRNN  TAC,001000             ;
062374 / 625040,,777777          TLZA  TAC,777777             ;
062375 / 505040,,400000          HRLI  TAC,400000             ;
062376 / 435040,,401777          IORI  TAC,401777             ;
062377 / 316344,,027120          CAMN PROG,JBTADR(J)          ;
062400 / 254000,,062416          JRST      SEGXT3             ;
062401 / 260140,,000316         PUSHJ    P,PUSHIT             ;
062402 / 260140,,044066         PUSHJ    P,DISMES             ;
062412 / 200040,,000007          MOVE  TAC,  PROG             ;
062413 / 260140,,044200         PUSHJ    P,DISOCT             ;
062414 / 260140,,000341         PUSHJ    P, POPIT             ;
062415 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
                       SEGXT3:
062416 / 202047,,000115         MOVEM  TAC,JOBRL2(PROG)       ;
062417 / 263140,,000000          POPJ    P,                   ;
                       ; GET NUMBER OF SEGMENT BELONGING TO JOB N
                       ; IF N IS ZERO, RETURNS YOUR SEGMENT NUMBER
                       ; ZERO RETURNED MEANS NO SEGMENT
                       SEGNUM:
062420 / 301040,,000000          CAIL  TAC,                   ;
062421 / 301040,,000100          CAIL  TAC,  JOBN             ;
062422 / 254000,,043340          JRST      UUOERR             ;
062423 / 306040,,000000          CAIN  TAC,                   ;
062424 / 200040,,000004          MOVE  TAC,     J             ;
062425 / 200200,,000001          MOVE    J,   TAC             ;
062426 / 135040,,037600           LDB  TAC, PSEGN             ;
152547 / 202052,,000000         MOVEM  TAC,      (UCHN)       ;
062427 / 256040,,152547          XCTR   XW,152547             ;
062430 / 263140,,000000          POPJ    P,                   ;
                       ; SEGSIZ CALLING . . .
                       ;	CALL AC,[SIXBIT /SEGSIZ/]
                       ; RETURNS HIGHEST LEGAL ADDRESS IN UPPER SEGMENT
                       ; MINUS 400000
                       ; RETURNS ZERO IF YOU DO NOT HAVE AN UPPER SEGMENT
                       SEGSIZ:
062431 / 135040,,037600           LDB  TAC, PSEGN             ;
062432 / 322040,,060225         JUMPE  TAC,STOTAC             ;
062433 / 554041,,027120          HLRZ  TAC,JBTADR(TAC)        ;
062434 / 254000,,060225          JRST      STOTAC             ;
                       ; SETNM2 CALLING . . .
                       ;	MOVE AC,[SIXBIT /<NAME YOU WISH YOUR UPPER TO HAVE>/]
                       ;	CALL AC,[SIXBIT /SETNM2/]
                       ;	<ERROR RETURN>
                       ; IF YOU HAVE AN UPPER SEGMENT, GIVES IT THE NAME IN ACCUMULATOR AC.
                       ; IF YOU DON'T HAVE AN UPPER, THIS UUO IS A NO-OP.
                       ; UPON SUCCESS, AC IS CLEARED, UNLESS THERE IS ANOTHER SEGMENT OF THE SAME NAME,
                       ;	 IN WHICH CASE YOU GET ITS JOB NUMBER
                       SETNM2:
062435 / 135100,,037600           LDB TAC1, PSEGN             ;
062436 / 322100,,037401         JUMPE TAC1,CPOPJ1             ;
062437 / 261140,,000001          PUSH    P,   TAC             ;
062440 / 261140,,000004          PUSH    P,     J             ;
062441 / 200200,,000002          MOVE    J,  TAC1             ;
062442 / 260140,,042155         PUSHJ    P,ACCESS             ;
062443 / 255000,,000000          JFCL                         ;
062444 / 254000,,062462          JRST      SETNM5             ;
062445 / 262140,,000002           POP    P,  TAC1             ;
062446 / 262144,,030142           POP    P,JOBNAM(J)          ;
062447 / 260140,,072454         PUSHJ    P,NAMSTT             ;
062450 / 201100,,000077         MOVEI TAC1,000077             ;
                       SETNM3:
062451 / 200242,,026114          MOVE  DAT,JBTSTS(TAC1)       ;
062452 / 607240,,001000          TLNN  DAT,  JSEG             ;
062453 / 254000,,062457          JRST      SETNM4             ;
062454 / 200242,,030142          MOVE  DAT,JOBNAM(TAC1)       ;
062455 / 312100,,000004          CAME TAC1,     J             ;
062456 / 312244,,030142          CAME  DAT,JOBNAM(J)          ;
                       SETNM4:
062457 / 367100,,062451          SOJG TAC1,SETNM3             ;
152566 / 202112,,000000         MOVEM TAC1,      (UCHN)       ;
062460 / 256040,,152566          XCTR   XW,152566             ;
062461 / 254000,,037401          JRST      CPOPJ1             ;
                       SETNM5:
062462 / 262140,,000004           POP    P,     J             ;
062463 / 254000,,037376          JRST       TPOPJ             ;
                       ; ROUTINE TO GET YOUR SEGMENT'S NAME
                       ; CALLING . . .
                       ;	CALL AC,[SIXBIT /SEGNAM/]
                       ; NAME (OR 0) RETURNED IN ACCUMULATOR
                       SEGNAM:
062464 / 135200,,037600           LDB    J, PSEGN             ;
062465 / 200044,,030142          MOVE  TAC,JOBNAM(J)          ;
062466 / 254000,,060225          JRST      STOTAC             ;
                       ; THIS UUO FIRST KILLS ANY HIGH SEGMENT YOU MAY HAVE.
                       ; CALLING . . .
                       ;	CALL [SIXBIT /LINKUP/]
                       ;	<NO CAN DO>
                       ; IT THEN ATTEMPTS TO MAKE A LINKUP WITH ANY HIGH SEGMENT
                       ; IN CORE WITH YOUR CREDENTIALS.
                       LINKUP:
062467 / 260140,,042235         PUSHJ    P,042235             ;
062470 / 263140,,000000          POPJ    P,                   ;
062471 / 254000,,062271          JRST      062271             ;; BRING UPPER INTO CORE, AND SKIP RETURN
                       ; RETURNS LIST OF JOB NUMBERS WHO POINT TO YOUR UPPER SEGMENT.
                       ; THE LIST TERMINATES WITH A ZERO
                       ; IF YOU HAVE NO UPPER SEGMENT, ZERO IS RETURNED IN ADR
                       ; ADR BETTER BE AT LEAST JOBN WORDS LONG.
                       ; CALLING . . .
                       ;	POINTS ADR
                       POINTS:
062472 / 135240,,037600           LDB  DAT, PSEGN             ;
062473 / 322240,,062503         JUMPE  DAT,POINT3             ;
062474 / 201200,,000077         MOVEI    J,000077             ;
                       POINT2:
062475 / 135100,,037600           LDB TAC1, PSEGN             ;
062476 / 312100,,000005          CAME TAC1,   DAT             ;
062477 / 254000,,062502          JRST      POINT1             ;
152572 / 202214,,000000         MOVEM    J,      (UUO)        ;
062500 / 256040,,152572          XCTR   XW,152572             ;
062501 / 271600,,000001          ADDI  UUO,     1             ;
                       POINT1:
062502 / 367200,,062475          SOJG    J,POINT2             ;
                       POINT3:
151336 / 402014,,000000         SETZM            (UUO)        ;
062503 / 256040,,151336          XCTR   XW,151336             ;
062504 / 263140,,000000          POPJ    P,                   ;
                       ; SET PROTECTION ON A HIGH SEGMENT
                       ; CALLING . . .
                       ;	MOVE AC,<0-8 NEW PROTECTION KEY; 30-35 SEGMENT NUMBER>
                       ;	CALL AC,[SIXBIT /SETPRO/]
                       ;	<NO CAN DO>
                       ; IF SEGMENT NUMBER IS ZERO, REFERS TO YOUR OWN SEGMENT
                       SETPRO:
062505 / 261140,,000001          PUSH    P,   TAC             ;
062506 / 261140,,000004          PUSH    P,     J             ;
152052 / 000000,,000001                                       ;
152052 / 000600,,000001 POINT 6,00000001,35                   ;
062507 / 135200,,152052           LDB    J,152052             ;
062510 / 332000,,000004         SKIPE           J             ;
062511 / 254000,,062520          JRST       SETP3             ;
062512 / 200203,,000000          MOVE    J,      (P)          ;
062513 / 135200,,037600           LDB    J, PSEGN             ;
062514 / 326200,,062520         JUMPN    J, SETP3             ;
                       SETP1:
062515 / 262140,,000004           POP    P,     J             ;
062516 / 262140,,000001           POP    P,   TAC             ;
062517 / 263140,,000000          POPJ    P,                   ;
                       SETP3:
062520 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;
062521 / 607100,,001000          TLNN TAC1,  JSEG             ;
062522 / 254000,,062515          JRST       SETP1             ;
062523 / 260140,,042155         PUSHJ    P,ACCESS             ;
062524 / 255000,,000000          JFCL                         ;
062525 / 254000,,062515          JRST       SETP1             ;
062526 / 200103,,000000          MOVE TAC1,      (P)          ;
062527 / 200102,,027420          MOVE TAC1,JBTPRV(TAC1)       ;
062530 / 603100,,000200          TLNE TAC1,000200             ;;SKIP UNLESS HE HAS SEGMENT PRIV
062531 / 254000,,062534          JRST      062534             ;;SEG PRIV. HE WINS
062532 / 602040,,000400          TRNE  TAC,000400             ;;PROTECTION PROTECTED?
062533 / 254000,,062515          JRST       SETP1             ;
                       SETP2:
062534 / 200043,,777777          MOVE  TAC,777777(P)          ;
062535 / 242040,,777745           LSH  TAC,777745             ;
062536 / 405040,,000377          ANDI  TAC,000377             ;;ONLY REAL BITS
153054 / 000004,,030542                                       ;
153054 / 331104,,030542 POINT 9,04030542,8                    ;
062537 / 137040,,153054           DPB  TAC,153054             ;
062540 / 350003,,777776           AOS      777776(P)          ;
062541 / 254000,,062515          JRST       SETP1             ;
062542 /                 ;::    BEND STANFO.APRSER.SEGUUO.
                       ; UUO TO SET THE PROCESSOR RUNNING MASK
                       ; CALLING . . .
                       ;	MOVE AC,[<RUN BITS>]
                       ;	CALL AC,[SIXBIT /RUNMSK/]
                       ; THE BITS ARE
                       ; BIT 35 - RUNNABLE ON P1
                       ; BIT 34 - RUNNABLE ON P2
                       RUNMSK:
062542 / 263140,,000000          POPJ    P,                   ;
                       ; INTENB
                       ; ENABLE INTERRUPTS . . .
                       ;	MOVE AC,[MAGIC BITS]
                       ;	CALL AC,[SIXBIT /INTENB/]
                       INTENB:
062543 / 260140,,062561         PUSHJ    P,INTCHK             ;
062544 / 200644,,033665          MOVE  AC1,JBTIEN(J)          ;;OLD ENABLINGS
062545 / 202044,,033665         MOVEM  TAC,JBTIEN(J)          ;;NEW ENABLINGS
062546 / 430640,,000001           XOR  AC1,   TAC             ;
062547 / 607640,,000200          TLNN  AC1,000200             ;;SKIP IF INTCLK CHANGING
062550 / 254000,,062655          JRST      062655             ;;INTAPC NEEDS TAC = JBTIEN
062551 / 607040,,000200          TLNN  TAC,000200             ;;SKIP IF TURNING INTCLK ON
062552 / 254000,,062555          JRST      062555             ;;TURNING IT OFF
062553 / 260140,,062576         PUSHJ    P,062576             ;;PLANT CLOCK REQUEST IN APRLST FOR 1 TICK
062554 / 254000,,062655          JRST      INTAPC             ;
                       INTEN1:
062555 / 260140,,062655         PUSHJ    P,INTAPC             ;
062556 / 205040,,000200         MOVSI  TAC,INTCLK             ;
062557 / 412044,,033765        ANDCAM  TAC,JBTIRQ(J)          ;;FLUSH PENDING CLOCK INTERRUPT
062560 / 254000,,060122          JRST      060122             ;;KILL ANY CLOCK REQUESTS WE MIGHT HAVE
                       INTCHK:
062561 / 621040,,002000           TLZ  TAC,002000             ;;UUO WAIT IS THE ONLY PROTECTED INTERRUPT BIT
062562 / 616047,,000043          TDNN  TAC,JOBENB(PROG)       ;
062563 / 263140,,000000          POPJ    P,                   ;
                       INTLOS:
062564 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ; CLKENB, CLKENA  - ENABLE FOR USER CLOCK INTERRUPTS
                       ; CLKENA - SAME AS CLKENB EXCEPT TAC HAS NUMBER OF TICKS FOR REQ
                       CLKENB:
062576 / 261140,,000001          PUSH    P,   TAC             ;
062577 / 634040,,000001          TDZA  TAC,000001             ;;FLAG NOT TO STORE TIME
                       CLKENA:
062600 / 261140,,000001          PUSH    P,   TAC             ;
062601 / 326540,,037376         JUMPN  PID,037376             ;;NO INTERRUPTS ON P2
                       CLKNB1:
062602 / 700600,,001020          CONO   PI,APROFF             ;
062603 / 336640,,026112         SKIPN  AC1,APRLST             ;
062604 / 254000,,062613          JRST      062613             ;;HAVE TO CREATE APRLST BLOCK
                       CLKNBL:
062605 / 336715,,000000         SKIPN  AC2,      (AC1)        ;;FIND THE FIRST BLANK SPOT
062606 / 254000,,062635          JRST      062635             ;;END OF LIST AND THIS JOB HAS NO REQ YET
062607 / 306216,,000000          CAIN    J,      (AC2)        ;;IS THERE AN ENTRY FOR THIS JOB?
062610 / 254000,,062627          JRST      CLKNB4             ;
062611 / 271640,,000002          ADDI  AC1,000002             ;;LOOP AROUND
062612 / 254000,,062605          JRST      CLKNBL             ;
                       CLKNB2:
062613 / 700600,,002020          CONO   PI, APRON             ;
062614 / 201740,,000200         MOVEI  AC3,000200             ;
062615 / 260140,,074361         PUSHJ    P,074361             ;;GET A BLOCK OF FREE STORAGE
062616 / 402015,,000000         SETZM            (AC1)        ;
062617 / 700600,,001020          CONO   PI,APROFF             ;
062620 / 336000,,026112         SKIPN      026112             ;;SEE IF SOMEONE ELSE HAS MADE IT ALREADY
062621 / 254000,,062625          JRST      062625             ;;NO, WE STILL GET TO DO IT
062622 / 700600,,002020          CONO   PI, APRON             ;
062623 / 260140,,074163         PUSHJ    P,074163             ;;FALSE ALARM
062624 / 254000,,062602          JRST      CLKNB1             ;
                       CLKNB3:
062625 / 202640,,026112         MOVEM  AC1,APRLST             ;
062626 / 254000,,062605          JRST      CLKNBL             ;
                       CLKNB4:
062627 / 322040,,062632         JUMPE  TAC,062632             ;;ALREADY AN ENTRY AND DON'T CHANGE TIME
                       CLKNB6:
062630 / 506055,,000000          HRLM  TAC,      (AC1)        ;
062631 / 212055,,000001         MOVNM  TAC,     1(AC1)        ;
                       CLKNB7:
062632 / 700600,,002020          CONO   PI, APRON             ;
062633 / 262140,,000001           POP    P,   TAC             ;
062634 / 263140,,000000          POPJ    P,                   ;
                       CLKNB5:
062635 / 402015,,000002         SETZM           2(AC1)        ;;MAKE A FRESH ENTRY
062636 / 552215,,000000         HRRZM    J,      (AC1)        ;
062637 / 326040,,062630         JUMPN  TAC,062630             ;;STORE NEW TIME
062640 / 201040,,000001         MOVEI  TAC,     1             ;
062641 / 254000,,062630          JRST      CLKNB6             ;
                       ; INTORM - ROUTINE TO SET BITS IN INTERUPT ENABLE MASK
                       INTORM:
062642 / 260140,,062561         PUSHJ    P,INTCHK             ;
062643 / 200640,,000001          MOVE  AC1,000001             ;;INTERRUPT BITS BEING TURNED ON
062644 / 437044,,033665          IORB  TAC,JBTIEN(J)          ;;TAC MUST HAVE JBTIEN AT INTAPC
062645 / 603640,,000200          TLNE  AC1,INTCLK             ;
062646 / 260140,,062576         PUSHJ    P,062576             ;;PLANT CLOCK REQ FOR 1 TICK
062647 / 254000,,062655          JRST      INTAPC             ;
                       ; INTACM - CLEARS BITS IN INTERRUPT ENABLE MASK
                       INTACM:
062650 / 260140,,062561         PUSHJ    P,INTCHK             ;
062651 / 200640,,000001          MOVE  AC1,000001             ;;INTERRUPT BITS BEING TURNED OFF
062652 / 413044,,033665        ANDCAB  TAC,JBTIEN(J)          ;
062653 / 603640,,000200          TLNE  AC1,000200             ;;SKIP IF NOT CLEARING INTCLK
062654 / 254000,,062555          JRST      INTEN1             ;
                       INTAPC:
062655 / 405040,,630110          ANDI  TAC,CPUMSK             ;
062656 / 552053,,023510         HRRZM  TAC,APRIN2(PID)        ;;ONLY LEGAL BITS
062657 / 434047,,000043           IOR  TAC,JOBENB(PROG)       ;
062660 / 405040,,631110          ANDI  TAC,631110             ;;MASK THIS TOO, SINCE IT'S UNPROTECTED
062661 / 254000,,060150          JRST      060150             ;;SET UP PROCESSOR CONO
                       ; INTENS, INTIIP - ROUTINES TO GIVE BACK INFORMATION
                       INTENS:
062662 / 334044,,033665         SKIPA  TAC,JBTIEN(J)          ;
                       INTIIP:
062663 / 200044,,034165          MOVE  TAC,JBTIIP(J)          ;
062664 / 254000,,060225          JRST      STOTAC             ;
                       ; INTIRQ - TELLS YOU WHAT INTERRUPTS ARE PENDING
                       INTIRQ:
062665 / 200044,,033765          MOVE  TAC,JBTIRQ(J)          ;
062666 / 254000,,060225          JRST      STOTAC             ;
                       ; DISMIS - TERMINATES CURRENT I-LEVEL RUN
                       DISMIS:
062667 / 332013,,023431         SKIPE      INTACT(PID)        ;
062670 / 254000,,062674          JRST       DISM2             ;
062671 / 332013,,023425         SKIPE      SPWUUF(PID)        ;
062672 / 254000,,150455          JRST      150455             ;;MUST LEAVE THROUGH HERE!!!!!!!
062673 / 254000,,062716          JRST      DISLOS             ;
                       DISM2:
062674 / 201640,,050736         MOVEI  AC1,INTDSM             ;
                       DISM1:
062675 / 322500,,062710         JUMPE UCHN,062710             ;;NONZERO AC FIELD REQUEUES JOB AS SPEC BY C(AC)
062676 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;
152466 / 200112,,000000          MOVE TAC1,      (UCHN)       ;
062677 / 256200,,152466          XCTR   XR,152466             ;;LH(AC) IS MASK FOR LEGAL SOURCE Q'S
062700 / 242101,,000000           LSH TAC1,      (TAC)        ;
062701 / 325100,,062710        JUMPGE TAC1,062710             ;;NOT IN LEGAL SOURCE Q
151470 / 550052,,000000          HRRZ  TAC,      (UCHN)       ;
062702 / 256200,,151470          XCTR   XR,151470             ;;GET NEW CODE
062703 / 301040,,000004          CAIL  TAC,NDISQS             ;
062704 / 254000,,062710          JRST      062710             ;;OUT OF BOUNDS
062705 / 200041,,062730          MOVE  TAC,DISQTB(TAC)        ;
062706 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
062707 / 260140,,046027         PUSHJ    P, REQUE             ;
                       DISM3:
062710 / 700600,,000400          CONO   PI,000400             ;;AVOID EXTRANEOUS CLK INTS
062711 / 202653,,023473         MOVEM  AC1,023473(PID)        ;
062712 / 523013,,024464         HLLOS      CLKFLG(PID)        ;; MAKE SURE CH7 KNOWS WE'RE COMING!
062713 / 700600,,004201          CONO   PI,004201(7-CLKCHN)   ;
062714 / 326540,,047047         JUMPN  PID,CL2INT             ;
062715 / 254000,,047013          JRST      CLKINT             ;
                       DISLOS:
062716 / 265040,,043640           JSP  TAC,UUOMES             ;
                       DISQTB:
062730 / 000000,,000015                                       ;;THESE ARE POSITIVE SO THEY WON'T GENERATE QXFER INTS
062731 / 000000,,000014                                       ;
062732 / 000000,,000012                                       ;
062733 / 000000,,000005                                       ;
                       ; INTGEN - ROUTINE TO GENERATE AN INTERRUPT FOR YOURSELF
                       INTGEN:
062734 / 460644,,033665         SETCM  AC1,JBTIEN(J)          ;
062735 / 616640,,000001          TDNN  AC1,   TAC             ;
062736 / 254000,,062752          JRST      INTGN1             ;
062737 / 265040,,043640           JSP  TAC,UUOMES             ;
                       INTGN1:
062752 / 436044,,033765          IORM  TAC,JBTIRQ(J)          ;
062753 / 476013,,023475         SETOM      INTREQ(PID)        ;
062754 / 336013,,023431         SKIPN      INTACT(PID)        ;
062755 / 254000,,046124          JRST      WSCHED             ;
062756 / 263140,,000000          POPJ    P,                   ;
                       ; USKIP - ROUTINE TO TELL USER IF HE IS INSIDE A UUO
                       USKIP:
062757 / 336013,,023431         SKIPN      INTACT(PID)        ;
062760 / 254000,,062716          JRST      DISLOS             ;
062761 / 200653,,024067          MOVE  AC1, USRPC(PID)        ;;PC OF SUSPENDING MAIN JOB
062762 / 607640,,010000          TLNN  AC1,USRMOD             ;
062763 / 350003,,000000           AOS            (P)          ;
062764 / 263140,,000000          POPJ    P,                   ;
                       ; UWAIT - WAITS FOR UUO TO TERMINATE
                       UWAIT:
062765 / 260140,,062757         PUSHJ    P,062757             ;;SKIP IF INTERRUPTED OUT OF A UUO, RETURNING
062766 / 254000,,063002          JRST      063002             ;; IN AC1 THE PC OF THE SUSPENDED PROCESSES
062767 / 200444,,026114          MOVE DSER,JBTSTS(J)          ;; HE HAS BEEN REQUEUED IF HE IS IN INTERRUPT WAIT,
                       ; NOW CHECK FOR SLEEPING.
062770 / 603440,,000400          TLNE DSER,000400             ;; DOES HE HAVE A SLEEP REQUEST IN?
062771 / 260140,,063000         PUSHJ    P,063000             ;; YES, GO WAKE HIM UP
062772 / 205640,,002000         MOVSI  AC1,002000             ;
062773 / 436644,,033665          IORM  AC1,JBTIEN(J)          ;
062774 / 436644,,033565          IORM  AC1,JBTMSK(J)          ;
062775 / 200644,,026620          MOVE  AC1, UUOPC(J)          ;
062776 / 202644,,027020         MOVEM  AC1,JBTUPC(J)          ;;USER ADDRESS AFTER UWAIT
062777 / 254000,,062667          JRST      DISMIS             ;
                       UWAIT1:
063000 / 200040,,000004          MOVE  TAC,000004             ;;SIMULATE UUO LEVEL CALL BY PUTTING JOB NUMBER IN TAC
063001 / 254000,,046044          JRST        WAKE             ;
                       UWNPC:
063002 / 202647,,000127         MOVEM  AC1,JOBTPC(PROG)       ;
063003 / 205647,,000020         MOVSI  AC1,JOBDAC(PROG)       ;;GET MAIN PROGRAM ACS (20-37) BACK INTO REAL ACS
063004 / 541647,,000000          HRRI  AC1,      (PROG)       ;
063005 / 251647,,000017           BLT  AC1,000017(PROG)       ;
063006 / 263140,,000000          POPJ    P,                   ;
                       ; DEBREAK - MAKES I-LEVEL PROCESS TAKE PLACE OF U-LEVEL PROCESS
                       DEBREA:
063007 / 336013,,023431         SKIPN      INTACT(PID)        ;
063010 / 254000,,062716          JRST      DISLOS             ;
063011 / 201640,,050752         MOVEI  AC1,INTDEB             ;
063012 / 254000,,062675          JRST       DISM1             ;
                       ; IWAIT - GO INTO INTERRUPT WAIT UNTIL AWAKENED BY AN APPROPRIATE INTERRUPT
                       IWAIT:
063013 / 201640,,000012         MOVEI  AC1, INTWQ             ;
063014 / 212644,,020574         MOVNM  AC1,JOBQUE(J)          ;
063015 / 254000,,046124          JRST      WSCHED             ;
                       ; ROUTINE TO ENABLE INTERRUPTS AND THEN GO INTO INTERRUPT WAIT
                       ; CALLING . . .
                       ;	MOVE AC,[<INTERRUPT BITS>]
                       ;	CALL AC,[SIXBIT /IENBW/]
                       ; YOU ARE NOW IN INTERRUPT WAIT.
                       IENBW:
063016 / 201640,,000012         MOVEI  AC1,000012             ;; PUT US IN INTERRUPT WAIT
063017 / 212644,,020574         MOVNM  AC1,JOBQUE(J)          ;
063020 / 260140,,062543         PUSHJ    P,062543             ;; ENABLE INTERRUPTS
063021 / 254000,,046124          JRST      046124             ;; WAIT.
                       ;;UUOS TO SET THE INTERRUPT MASK
                       ; CALLING . . .
                       ;	INTMSK [<MASK BITS>]
                       INTMSK:
152516 / 200654,,000000          MOVE  AC1,      (UUO)        ;
063022 / 256200,,152516          XCTR   XR,152516             ;
063023 / 202644,,033565         MOVEM  AC1,JBTMSK(J)          ;
                       IMCALL:
063024 / 336013,,023431         SKIPN      INTACT(PID)        ;;DON'T CALL WSCHED IF ALREADY AT I-LEVEL
063025 / 616644,,033765          TDNN  AC1,JBTIRQ(J)          ;; DOES HE HAVE ANY INTERRUPTS PENDING?
063026 / 263140,,000000          POPJ    P,                   ;
063027 / 476013,,023475         SETOM      INTREQ(PID)        ;; YES, GIVE THEM
063030 / 254000,,046124          JRST      WSCHED             ;
                       ;IMSKST  IMSKCL
                       ; THIS ONE SETS BITS IN THE MASK . . .
                       IMSKST:
152516 / 200654,,000000          MOVE  AC1,      (UUO)        ;
063031 / 256200,,152516          XCTR   XR,152516             ;
063032 / 436644,,033565          IORM  AC1,JBTMSK(J)          ;
063033 / 254000,,063024          JRST      IMCALL             ;
                       ; AND THIS ONE CLEARS BITS . . .
                       IMSKCL:
152516 / 200654,,000000          MOVE  AC1,      (UUO)        ;
063034 / 256200,,152516          XCTR   XR,152516             ;
063035 / 412644,,033565        ANDCAM  AC1,JBTMSK(J)          ;
063036 / 263140,,000000          POPJ    P,                   ;
                       ; CLKINT UUO  (CLKUUO) START UP A CLOCKED I-LEVEL JOB
                       ; CALLING . . .
                       ;	CLKINT TIX
                       ; TIX IS THE TIME IN TICKS BETWEEN STARTUPS
                       ; IF TIX IS ZERO, ANY CLOCKED JOB IS FLUSHED
                       CLKUUO:
063037 / 606600,,777777          TRNN  UUO,777777             ;;ZERO TIX?
063040 / 254000,,063046          JRST      063046             ;;YES, GO KILL JOB
063041 / 205040,,000200         MOVSI  TAC,INTCLK             ;
063042 / 436044,,033665          IORM  TAC,JBTIEN(J)          ;;ENABLE CLOCK INTERRUPTS
063043 / 412044,,033765        ANDCAM  TAC,JBTIRQ(J)          ;;FLUSH PENDING OLD CLOCK INTERRUPT
063044 / 550040,,000014          HRRZ  TAC,   UUO             ;
063045 / 254000,,062600          JRST      062600             ;;PLANT THE CLOCK REQUEST
                       CLKUU2:
063046 / 260140,,060122         PUSHJ    P,060122             ;;KILL CLOCK REQUEST
063047 / 205040,,000200         MOVSI  TAC,INTCLK             ;
063050 / 412044,,033665        ANDCAM  TAC,JBTIEN(J)          ;
063051 / 412044,,033765        ANDCAM  TAC,JBTIRQ(J)          ;
063052 / 263140,,000000          POPJ    P,                   ;
                       ;INTUUO - INTDEJ, IMSTW
                       ; MULTI-PURPOSE INTERRUPT UUO
                       INTUUO:
063053 / 303500,,000006         CAILE UCHN,INTMXU             ;
063054 / 254000,,043340          JRST      UUOERR             ;
063055 / 254032,,063056          JRST      @INTUTB(UCHN)      ;
                       ; UUOMAC INTUTB,INTUUO
                       ;; manual expansion
                       INTUTB:
063056 / 000000,,063073                                       ;
063057 / 000000,,063101                                       ;
063060 / 000000,,063105                                       ;
063061 / 000000,,063114                                       ;
063062 / 000000,,063167                                       ;
063063 / 000000,,063110                                       ;
063064 / 723240,,000000        INTUUO UUOCNT-1,                   ;
                       ; RESET INTERRUPT MASK AND JUMP TO ADDRESS UUO.
                       ; CALLING . . .
                       ;	INTDEJ ADR
                       ; WITH THE FOLLOWING DATA . . .
                       ; ADR:	<INTERRUPT BITS TO BE ORED INTO MASK>
                       ;	<PC WORD TO GO TO>
                       ; THIS UUO DOES NOT RETURN, BUT INSTEAD JUMPS TO THE ADDRESS
                       INTDEJ:
152456 / 200054,,000001          MOVE  TAC,     1(UUO)        ;
063073 / 256200,,152456          XCTR   XR,152456             ;;FETCH PC WORD
063074 / 661040,,010000           TLO  TAC,010000             ;; KEEP THE LOSER OUT OF THE SYSTEM
063075 / 261140,,000001          PUSH    P,   TAC             ;
063076 / 260140,,063031         PUSHJ    P,063031             ;; OR IN MASK BITS
063077 / 262144,,026620           POP    P, UUOPC(J)          ;; SET UP RETURN ADDRESS
063100 / 263140,,000000          POPJ    P,                   ;; RETURN TO LOSER
                       ; SET MASK FROM FIRST WORD OF UUO AND GO INTO WAIT STATE.
                       ; CALLING . . .
                       ;	IMSTW ADR
                       ; ADR:	<MASK BITS>
                       IMSTW:
063101 / 201640,,000012         MOVEI  AC1,000012             ;; PUT US INTO INTERRUPT WAIT FIRST
063102 / 212644,,020574         MOVNM  AC1,JOBQUE(J)          ;
063103 / 260140,,063022         PUSHJ    P,063022             ;; SET THE MASK
063104 / 254000,,046124          JRST      046124             ;; DO THE WAIT STATE THING.
                       ; IWKMSK, IMSKCR
                       ; SET MASK THAT ALLOWS THE MAIN JOB TO BE AWAKENED
                       ; FROM IWAIT QUEUE.
                       ; CALLING . . .
                       ;	IWKMSK ADR
                       ; ADR:	<INTERRUPT BITS WHICH SHOULD AWAKEN>
                       IWKMSK:
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
063105 / 256200,,152455          XCTR   XR,152455             ;
063106 / 202044,,034065         MOVEM  TAC,JBTWKM(J)          ;
063107 / 263140,,000000          POPJ    P,                   ;
                       ;CLEAR SPECIFIED BITS OF MASK (PDP-10 ONLY) AND RETURN OLD MASK
                       ;CALL:
                       ;	IMSKCR ADR
                       ;ADR:	BITS TO TURN OFF IN MASK, REPLACED BY OLD MASK VALUE
                       IMSKCR:
063110 / 200044,,033565          MOVE  TAC,JBTMSK(J)          ;
151355 / 420054,,000000         ANDCM  TAC,      (UUO)        ;
063111 / 256200,,151355          XCTR   XR,151355             ;
063112 / 250044,,033565          EXCH  TAC,JBTMSK(J)          ;
063113 / 254000,,060225          JRST      STOTAC             ;
                       ; INTDMP
                       ; ROUTINE TO DUMP OUT INFORMATION ABOUT A PARTICULAR JOB'S INTERRUPT
                       ; CONDITION. CALLING . . .
                       ;	INTDMP ADR
                       ;	<FAILURE - ERROR CODE IN ADR+1>
                       ; ADR:	<JOB NUMBER OR JOB NAME>
                       ;	<ENABLE BITS OR ERROR CODE, 1 FOR NON-EX JOB NUMBER,
                       ;		2 FOR AMBIGUOUS JOB NAME, 3 FOR NON-EX JOB NAME>
                       ;	<P1 INTERRUPT MASK>
                       ;	ZERO
                       ;	<WAKEUP MASK>
                       ;	<JOB QUEUE>
                       INTDMP:
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
063114 / 256200,,152455          XCTR   XR,152455             ;;PICK UP JOB NUMBER OR NAME
151663 / 777777,,777700                                       ;
063115 / 612040,,151663          TDNE  TAC,151663             ;; SEE WHICH IT IS
063116 / 254000,,063144          JRST      063144             ;; NAME, FIND OUT WHICH
063117 / 322040,,063134         JUMPE  TAC,063134             ;; IF ZERO, USE HIS OWN
063120 / 301040,,000100          CAIL  TAC,000100             ;; IS JOB NUMBER IN BOUNDS?
063121 / 254000,,063141          JRST      063141             ;; NO.  GIVE BAD JOB # ERROR RETURN
                       INTDM1:
063122 / 200641,,033665          MOVE  AC1,JBTIEN(TAC)        ;; GIVE THE GUY HIS ENABLE BITS
152604 / 202654,,000001         MOVEM  AC1,     1(UUO)        ;
063123 / 256040,,152604          XCTR   XW,152604             ;
063124 / 200644,,033565          MOVE  AC1,JBTMSK(J)          ;; AND HIS PROCESSOR MASKS
152605 / 202654,,000002         MOVEM  AC1,     2(UUO)        ;
063125 / 256040,,152605          XCTR   XW,152605             ;
151341 / 402014,,000003         SETZM           3(UUO)        ;
063126 / 256040,,151341          XCTR   XW,151341             ;
063127 / 200641,,034065          MOVE  AC1,JBTWKM(TAC)        ;; HIS WAKEUP MASK
152607 / 202654,,000004         MOVEM  AC1,     4(UUO)        ;
063130 / 256040,,152607          XCTR   XW,152607             ;
063131 / 214641,,020574          MOVM  AC1,JOBQUE(TAC)        ;; AND HIS CURRENT QUEUE
152610 / 202654,,000005         MOVEM  AC1,     5(UUO)        ;
063132 / 256040,,152610          XCTR   XW,152610             ;
063133 / 254000,,037401          JRST      037401             ;; GIVE SUCCESS RETURN
                       ; INTDMP - ERROR RETURNS
                       INTDM2:
063134 / 200040,,000004          MOVE  TAC,     J             ;
063135 / 254000,,063122          JRST      INTDM1             ;
                       INTDR3:
063136 / 201640,,000003         MOVEI  AC1,     3             ;
063137 / 254000,,063142          JRST      INTDR4             ;
                       INTDR2:
151700 / 000000,,000002                                       ;
063140 / 334640,,151700         SKIPA  AC1,151700             ;
                       INTDR1:
063141 / 201640,,000001         MOVEI  AC1,     1             ;
                       INTDR4:
152604 / 202654,,000001         MOVEM  AC1,     1(UUO)        ;
063142 / 256040,,152604          XCTR   XW,152604             ;
063143 / 263140,,000000          POPJ    P,                   ;
                       INTDGJ:
063144 / 260140,,063150         PUSHJ    P,063150             ;; GET JOB NUMBER FROM NAME IN TAC
063145 / 254000,,063140          JRST      063140             ;; AMBIGUOUS NAME
063146 / 254000,,063136          JRST      063136             ;; NON-EX NAME
063147 / 254000,,063122          JRST      063122             ;; WIN!
                       ; ROUTINE TO GET A JOB NUMBER FROM A JOB NAME
                       GJOBN:
063150 / 201640,,000077         MOVEI  AC1,000077             ;
                       GJOBN1:
063151 / 316055,,030142          CAMN  TAC,JOBNAM(AC1)        ;
063152 / 254000,,063155          JRST      GJOBN2             ;
                       GJOBN4:
063153 / 367640,,063151          SOJG  AC1,GJOBN1             ;
063154 / 254000,,037401          JRST      CPOPJ1             ;
                       GJOBN2:
063155 / 200715,,026114          MOVE  AC2,JBTSTS(AC1)        ;
063156 / 603700,,001000          TLNE  AC2,  JSEG             ;
063157 / 254000,,063153          JRST      GJOBN4             ;
063160 / 200700,,000015          MOVE  AC2,   AC1             ;
063161 / 254000,,063164          JRST      GJOBN5             ;
                       GJOBN3:
063162 / 316056,,030142          CAMN  TAC,JOBNAM(AC2)        ;
063163 / 263140,,000000          POPJ    P,                   ;
                       GJOBN5:
063164 / 367700,,063162          SOJG  AC2,GJOBN3             ;
063165 / 200040,,000015          MOVE  TAC,   AC1             ;
063166 / 254000,,037400          JRST      CPOPJ2             ;
                       ; INTIPI
                       ; INTER-PROCESS INTERRUPT SYSTEM
                       ; CALLING . . .
                       ;	INTIPI ADR
                       ;	<ERROR - CODE IN ADR+1 - 1 FOR NON-EX JOB NUMBER
                       ;			2 FOR AMBIGUOUS JOB NAME
                       ;			3 FOR NON-EX JOB NAME
                       ;			4 FOR JOB NOT ENABLED FOR THOSE INTERRUPTS>
                       ; ADR:	<JOB NUMBER OR NAME>
                       ;	<INTERRUPT BITS OR ERROR CODE>
                       INTIPI:
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
063167 / 256200,,152455          XCTR   XR,152455             ;;GET JOB NAME OR NUMBER
151663 / 777777,,777700                                       ;
063170 / 612040,,151663          TDNE  TAC,151663             ;
063171 / 254000,,063204          JRST      063204             ;;JOB NAME
063172 / 322040,,063210         JUMPE  TAC,063210             ;;IF 0 USE OWN JOB
063173 / 301040,,000100          CAIL  TAC,  JOBN             ;
063174 / 254000,,063141          JRST      INTDR1             ;
                       INTIP3:
152517 / 200654,,000001          MOVE  AC1,     1(UUO)        ;
063175 / 256200,,152517          XCTR   XR,152517             ;;INTERRUPT BITS
063176 / 460701,,033665         SETCM  AC2,JBTIEN(TAC)        ;
063177 / 612640,,000016          TDNE  AC1,   AC2             ;
063200 / 254000,,063212          JRST      INTIR4             ;
063201 / 436641,,033765          IORM  AC1,JBTIRQ(TAC)        ;
063202 / 476013,,023475         SETOM      INTREQ(PID)        ;
063203 / 254000,,037401          JRST      CPOPJ1             ;
                       INTIP1:
063204 / 260140,,063150         PUSHJ    P, GJOBN             ;
063205 / 254000,,063140          JRST      063140             ;;AMBIGUOUS
063206 / 254000,,063136          JRST      063136             ;;NOT FOUND
063207 / 254000,,063175          JRST      063175             ;;UNIQUE
                       INTIP2:
063210 / 200040,,000004          MOVE  TAC,     J             ;
063211 / 254000,,063175          JRST      INTIP3             ;
                       INTIR4:
063212 / 201640,,000004         MOVEI  AC1,     4             ;
063213 / 254000,,063142          JRST      INTDR4             ;
                       ;;UUO TO GET USE BITS FOR A CHANNEL
                       ;	CHNSTS <CHANNEL NUMBER>,ADR
                       ; PUTS USRJDA IN ADR, 0 FOR UNUSED.
                       CHNSTS:
063214 / 313513,,024066         CAMLE UCHN,USRHCU(PID)        ;
063215 / 634040,,000001          TDZA  TAC,   TAC             ;
063216 / 554052,,024071          HLRZ  TAC,USRJDA(UCHN)       ;
152550 / 202054,,000000         MOVEM  TAC,      (UUO)        ;
063217 / 256040,,152550          XCTR   XW,152550             ;
063220 / 263140,,000000          POPJ    P,                   ;
                       ;;THIS UUO GETS THE STANDARD BUFFER LENGTH FOR A DEVICE
                       ;	MOVE AC,[DEVICE NAME IN SIXBIT]
                       ;	CALL AC,[SIXBIT /BUFLEN/]
                       ;	<RETURNS HERE WITH BUFFER LENGTH, OR 0, IN AC>
                       BUFLEN:
063221 / 260140,,044655         PUSHJ    P,044655             ;; LOOK FOR DEVICE WITH THIS NAME (OR CHANNEL #)
063222 / 254000,,060313          JRST      060313             ;; GIVE BACK A ZERO IF NOT FOUND
063223 / 135040,,037576           LDB  TAC,037576             ;; RETURN BUFFER LENGTH
063224 / 254000,,060225          JRST      STOTAC             ;
                       ; ROUTINE TO GET THE TIME CELLS AND CLEAR THEM
                       ; CALLING . . .
                       ;	MOVE AC,<ADDRESS OF 2-WORD BUFFER>
                       ;	CALL AC,[SIXBIT /GDPTIM/]
                       ; RETURNS KEYBOARD TIME IN <BUFFER> AND DISPLAY TIME IN <BUFFER>+1
                       ; CLEARS BOTH CELLS IN THE MONITOR
                       ; RETURNS ZEROS IF YOU ARE NOT A DPY
                       GDPTIM:
                       ;END DELETION OF GDPTIM
063225 / 263140,,000000          POPJ    P,                   ;
                       ;;RETURNS A CODE TELING WHETHER A JOB NAME IS LOGGED IN
                       ;	MOVE AC,[<JOB NAME IN SIXBIT>]
                       ;	CALL AC,[SIXBIT /NAMEIN/]
                       ;	<NO SUCH JOB - ERROR CODE IN AC>
                       ; ERROR CODE IS 3 FOR MULTIPLY DEFINED JOB NAME, 1 FOR NO SUCH NAME
                       NAMEIN:
063226 / 201100,,000077         MOVEI TAC1,000077             ;
                       NAMEI1:
063227 / 312042,,030142          CAME  TAC,JOBNAM(TAC1)       ;; IS THIS IT?
                       NAMEI2:
063230 / 367100,,063227          SOJG TAC1,NAMEI1             ;
063231 / 326100,,063234         JUMPN TAC1,NAMEI4             ;
063232 / 201040,,000001         MOVEI  TAC,     1             ;
063233 / 254000,,060225          JRST      060225             ;; NO SUCH NAME, GIVE ERROR 1 RETURN
                       NAMEI4:
063234 / 200642,,026114          MOVE  AC1,JBTSTS(TAC1)       ;
063235 / 607640,,040000          TLNN  AC1,040000             ;; NOW, IS IT A JOB?
063236 / 254000,,063230          JRST      NAMEI2             ;
063237 / 200700,,000002          MOVE  AC2,000002             ;;GIVE BACK JOB NUMBER
                       NAMEI3:
063240 / 363100,,063250         SOJLE TAC1,063250             ;; SEARCH REMAINDER OF NAMES FOR MATCH
063241 / 312042,,030142          CAME  TAC,JOBNAM(TAC1)       ;
063242 / 254000,,063240          JRST      NAMEI3             ;
063243 / 200642,,026114          MOVE  AC1,JBTSTS(TAC1)       ;
063244 / 607640,,040000          TLNN  AC1,   JNA             ;
063245 / 254000,,063240          JRST      NAMEI3             ;
063246 / 201040,,000003         MOVEI  TAC,     3             ;
063247 / 254000,,060225          JRST      STOTAC             ;
                       NAMEI5:
063250 / 200040,,000016          MOVE  TAC,   AC2             ;
063251 / 350003,,000000           AOS            (P)          ;; SKIP RETURN
063252 / 254000,,060225          JRST      060225             ;; AND GIVE HIM THE JOB NUMBER
                       ; DEVUSE - HOW MANY JOBS ARE WAITING FOR A PARTICULAR DEVICE.
                       ; CALLING . . .
                       ;	MOVE AC,<DEVICE NAME>
                       ;	CALL AC,[SIXBIT /DEVUSE/]
                       ; RETURNS NUMBER OF JOBS WAITING FOR THIS DEVICE IN AC (NOT INCLUDING YOUR JOB)
                       DEVUSE:
063253 / 260140,,044655         PUSHJ    P,044655             ;; PICK UP DEVICE DATA BLOCK ADDRESS
063254 / 254000,,060313          JRST      060313             ;; NO SUCH DEVICE, NOBODY WAITING FOR IT!
063255 / 201640,,000077         MOVEI  AC1,000077             ;; PREPARE TO SCAN JOB TABLES
063256 / 400040,,000000          SETZ  TAC,                   ;
                       DEVUS1:
063257 / 312315,,026220          CAME  DDB,JBTDVW(AC1)        ;; IS THIS THE DEVICE?
                       DEVUS2:
063260 / 367640,,063257          SOJG  AC1,063257             ;; NO, LOOP AROUND
063261 / 322640,,063272         JUMPE  AC1,063272             ;; RETURN ARGUMENT AND LEAVE
063262 / 306644,,000000          CAIN  AC1,      (J)          ;
063263 / 254000,,063260          JRST      063260             ;; DON'T COUNT YOURSELF.
063264 / 200715,,026114          MOVE  AC2,JBTSTS(AC1)        ;; SEE IF THE JOB EXISTS
063265 / 214755,,020574          MOVM  AC3,JOBQUE(AC1)        ;; AND IF IT IS IN DEVICE WAIT
063266 / 603700,,040000          TLNE  AC2,   JNA             ;
063267 / 302740,,000007          CAIE  AC3,   DWQ             ;
063270 / 254000,,063260          JRST      DEVUS2             ;
063271 / 344040,,063260          AOJA  TAC,063260             ;; BUMP COUNT AND LOOP BACK
                       DEVUS3:
063272 / 200106,,000004          MOVE TAC1,DEVMOD(DDB)        ;
063273 / 603100,,100000          TLNE TAC1, DVUDP             ;
063274 / 254000,,063306          JRST      063306             ;;COMPLICATED FOR UDP
063275 / 135640,,037575           LDB  AC1,037575             ;;GET JOB NUMBER OF DEVICE OWNER
063276 / 603100,,020000          TLNE TAC1,TTYATC             ;
063277 / 660640,,100000           TRO  AC1,100000             ;
063300 / 602100,,400000          TRNE TAC1,ASSCON             ;
063301 / 660640,,400000           TRO  AC1,400000             ;
063302 / 602100,,200000          TRNE TAC1,ASSPRG             ;
063303 / 660640,,200000           TRO  AC1,200000             ;
063304 / 504040,,000015           HRL  TAC,   AC1             ;
063305 / 254000,,060225          JRST      STOTAC             ;
                       DEVUS4:
063306 / 135640,,037577           LDB  AC1,037577             ;;UDP, SCAN ALL DDBS FOR ASSCON, ASSPRG
063307 / 200715,,011745          MOVE  AC2,DKDBML(AC1)        ;;MODEL DDB FOR THIS UDP
063310 / 200746,,000000          MOVE  AC3,      (DDB)        ;
                       DEVUS5:
063311 / 544716,,000003           HLR  AC2,DEVSER(AC2)        ;
063312 / 312756,,000000          CAME  AC3,      (AC2)        ;
063313 / 254000,,063336          JRST      063336             ;;NO MORE DDBS
063314 / 200116,,000004          MOVE TAC1,DEVMOD(AC2)        ;
063315 / 602100,,400000          TRNE TAC1,ASSCON             ;
063316 / 661700,,400000           TLO  AC2,400000             ;
063317 / 602100,,200000          TRNE TAC1,ASSPRG             ;
063320 / 661700,,200000           TLO  AC2,200000             ;
153167 / 000016,,000001                                       ;
153167 / 360616,,000001 POINT 6,16000001,5                    ;
063321 / 135640,,153167           LDB  AC1,153167             ;
063322 / 302644,,000000          CAIE  AC1,      (J)          ;;EXTRA BITS FOR UDP ONLY,
063323 / 254000,,063331          JRST      063331             ;;NAMELY ASSCON AND ASSPRG FOR YOUR OWN JOB
063324 / 602100,,400000          TRNE TAC1,ASSCON             ;
063325 / 661700,,040000           TLO  AC2, 40000             ;
063326 / 602100,,200000          TRNE TAC1,ASSPRG             ;
063327 / 661700,,020000           TLO  AC2, 20000             ;
063330 / 254000,,063311          JRST      DEVUS5             ;
                       DEVUS6:
063331 / 602100,,400000          TRNE TAC1,400000             ;;AND SEPARATELY FOR OTHER JOBS
063332 / 661700,,010000           TLO  AC2, 10000             ;
063333 / 602100,,200000          TRNE TAC1,ASSPRG             ;
063334 / 661700,,004000           TLO  AC2,  4000             ;
063335 / 254000,,063311          JRST      DEVUS5             ;
                       DEVUS7:
063336 / 135100,,037577           LDB TAC1,037577             ;;GET UDP NUMBER
063337 / 554640,,000016          HLRZ  AC1,000016             ;;FLAGS INTO AC1
063340 / 660640,,002000           TRO  AC1,002000             ;;THIS IS PRIVATE OWNERSHIP FLAG
063341 / 335002,,011750        SKIPGE      011750(TAC1)       ;;SKIP IF PRIVATE
063342 / 624640,,002000          TRZA  AC1,002000             ;;PUBLIC, TURN OFF PRIVATE FLAG
063343 / 270642,,011750           ADD  AC1,011750(TAC1)       ;;JOB NUMBER OF OWNER OR 0 FOR PUBLIC
063344 / 504040,,000015           HRL  TAC,   AC1             ;
063345 / 254000,,060225          JRST      STOTAC             ;
                       ; JOBRD  UUO TO BLT DATA FROM SOME OTHER JOB'S CORE IMAGE TO YOURS.
                       ; CALLING . . .
                       ;	MOVEI AC,ADR
                       ;	CALL AC,[SIXBIT /JOBRD/]
                       ;	<ERROR - CODE IN ADR+1>
                       ;ADR:	<JOB NAME OR NUMBER>
                       ;	<XWD -NWDS,HISADR - OR ERROR CODE,
                       ;		1 FOR NON-EX JOB NUMBER
                       ;		2 FOR AMBIGUOUS JOB NAME
                       ;		3 FOR NON-EX JOB NAME
                       ;		4 FOR ADDRESS OUT OF BOUNDS
                       ;		5 FOR JOB NOT LOGGED IN
                       ;		6 FOR BLOCK TOO LARGE!>
                       ;	<ADDRESS IN YOUR CORE IMAGE WHERE YOU WANT THE DATA>
                       JOBRD:
063346 / 540600,,000001           HRR  UUO,000001             ;; PUT DATA BLOCK ADDRESS IN UUO
063347 / 332644,,033265         SKIPE  AC1, JBTFS(J)          ;; DOES HE HAVE ANY FREE STORAGE?
063350 / 260140,,074163         PUSHJ    P,074163             ;; YES, RETURN IT
063351 / 402004,,033265         SETZM       JBTFS(J)          ;
151530 / 564054,,000001          HLRO  TAC,     1(UUO)        ;
063352 / 256200,,151530          XCTR   XR,151530             ;; PICK UP LENGTH OF TRANSFER
151660 / 777777,,776000                                       ;
063353 / 315040,,151660         CAMGE    1,151660             ;; MORE THAN ONE K?
153326 / 201640,,000006         MOVEI  AC1,000006             ;; YES, VERBOTEN
153327 / 254000,,063142          JRST      INTDR4             ;
063354 / 254000,,153326          JRST      153326             ;; BLOCK TOO LARGE --  RPH 4-14-73
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
063355 / 256200,,152455          XCTR   XR,152455             ;; PICK UP JOB NUMBER OR NAME
151663 / 777777,,777700                                       ;
063356 / 612040,,151663          TDNE  TAC,151663             ;; IS IT A NUMBER?
063357 / 254000,,063430          JRST      063430             ;; NO, GO PARSE IT
063360 / 323040,,063141        JUMPLE  TAC,063141             ;; IF NON-EX JOB NUMBER, FLUSH HIM NOW
063361 / 301040,,000100          CAIL  TAC,  JOBN             ;
063362 / 254000,,063141          JRST      INTDR1             ;
                       JOBRD2:
063363 / 200641,,026114          MOVE  AC1,JBTSTS(TAC)        ;; JOB NUMBER OK, SEE IF JOB EXISTS
063364 / 607640,,040000          TLNN  AC1,   JNA             ;
153324 / 201640,,000005         MOVEI  AC1,     5             ;
153325 / 254000,,063142          JRST      INTDR4             ;
063365 / 254000,,153324          JRST      153324             ;; NO SUCH JOB
063366 / 603640,,006000          TLNE  AC1,006000             ;;IS OTHER GUY BEING SWUFFLED OR SCHWAPPED?
063367 / 254000,,063434          JRST      063434             ;;YES, THIS IS HARDER
063370 / 554641,,027120          HLRZ  AC1,JBTADR(TAC)        ;; NOW DOES IT HAVE ENOUGH CORE?
151510 / 550714,,000001          HRRZ  AC2,     1(UUO)        ;
063371 / 256200,,151510          XCTR   XR,151510             ;; PICK UP STARTING ADDRESS
063372 / 200100,,000016          MOVE TAC1,   AC2             ;
063373 / 270101,,027120           ADD TAC1,JBTADR(TAC)        ;; RELOCATE THE ADDRESS
151532 / 564754,,000001          HLRO  AC3,     1(UUO)        ;
063374 / 256200,,151532          XCTR   XR,151532             ;; AND WORD COUNT
063375 / 210740,,000017          MOVN  AC3,   AC3             ;
                       ; JOBRD - PICK UP ADDRESS OF LAST WORD, ADDRESS CHECK IT
063376 / 271756,,000000          ADDI  AC3,      (AC2)        ;; THIS IS LAST WORD TO BE TRANSFERRED
063377 / 275740,,000001          SUBI  AC3,     1             ;
063400 / 303755,,000000         CAILE  AC3,      (AC1)        ;
063401 / 254000,,063426          JRST      JOBRD4             ;
063402 / 275756,,000000          SUBI  AC3,      (AC2)        ;; GET BACK WORD COUNT-1
                       JOBRD5:
151511 / 550714,,000002          HRRZ  AC2,     2(UUO)        ;
063403 / 256200,,151511          XCTR   XR,151511             ;; PICK UP ADDRESS IN HIS CORE
063404 / 270740,,000016           ADD  AC3,000016             ;; AND END OF TRANSFER
063405 / 554640,,000007          HLRZ  AC1,000007             ;; PICK UP OUR PROTECTION
063406 / 307715,,000000          CAIG  AC2,      (AC1)        ;
063407 / 303755,,000000         CAILE  AC3,      (AC1)        ;
063410 / 254000,,063422          JRST      JOBRD6             ;
063411 / 271707,,000000          ADDI  AC2,      (PROG)       ;; COMPUTE ABSOLUTE ADDRESS OF DESTINATION
063412 / 271747,,000000          ADDI  AC3,      (PROG)       ;; ABSOLUTE ADDRESS OF LAST WORD.
063413 / 504700,,000002           HRL  AC2,000002             ;; PUT INTO BLT
063414 / 251717,,000000           BLT  AC2,      (AC3)        ;; DO THE TRANSFER
063415 / 350003,,000000           AOS            (P)          ;; INDICATE SUCCESS RETURN
063416 / 336644,,033265         SKIPN  AC1, JBTFS(J)          ;; IS THERE ANY FREE STORAGE THERE?
063417 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
063420 / 402004,,033265         SETZM       JBTFS(J)          ;; NOT ANY MORE
063421 / 254000,,074163          JRST      074163             ;; YES, RETURN IT
                       JOBRD6:
063422 / 336644,,033265         SKIPN  AC1, JBTFS(J)          ;; IF NO FREE STORAGE, GIVE ERROR MESSAGE
063423 / 254000,,063426          JRST      JOBRD4             ;
063424 / 402004,,033265         SETZM       JBTFS(J)          ;
063425 / 260140,,074163         PUSHJ    P,FSGIVE             ;
                       JOBRD4:
063426 / 201640,,000004         MOVEI  AC1,     4             ;
063427 / 254000,,063142          JRST      INTDR4             ;
                       JOBRD1:
063430 / 260140,,063150         PUSHJ    P,063150             ;; GET JOB NUMBER FROM JOB NAME
063431 / 254000,,063140          JRST      INTDR2             ;
063432 / 254000,,063136          JRST      INTDR3             ;
063433 / 254000,,063363          JRST      JOBRD2             ;
                       ; JOBRD - GET FREE STORAGE FOR DATA, PLANT CLOCK REQUEST TO DO TRANSFER
                       JOBRD3:
151532 / 564754,,000001          HLRO  AC3,     1(UUO)        ;
063434 / 256200,,151532          XCTR   XR,151532             ;; PICK UP WORD COUNT
063435 / 210740,,000017          MOVN  AC3,   AC3             ;
063436 / 271740,,000001          ADDI  AC3,     1             ;
063437 / 260140,,074361         PUSHJ    P,074361             ;; F.S. BLOCK IS MINIMUM OF 6 WORDS
063440 / 504640,,000001           HRL  AC1,000001             ;; STORE JOB TO READ IN JBTFS
063441 / 202644,,033265         MOVEM  AC1, JBTFS(J)          ;; SAVE FREE STORAGE ADDRESS
063442 / 200240,,000004          MOVE  DAT,000004             ;; ARG IS JOB NUMBER
063443 / 505240,,063467          HRLI  DAT,063467             ;; ROUTINE TO CALL
063444 / 260140,,132555         PUSHJ    P,DPYTIM             ;
152523 / 200714,,000001          MOVE  AC2,     1(UUO)        ;
063445 / 256200,,152523          XCTR   XR,152523             ;
063446 / 202715,,000000         MOVEM  AC2,      (AC1)        ;
                       JOBRDX:
063447 / 211740,,000005         MOVNI  AC3,000005             ;; WAIT FOR IT ALL
063450 / 202744,,020574         MOVEM  AC3,JOBQUE(J)          ;
063451 / 260140,,046124         PUSHJ    P,046124             ;; WAIT FOR GUYS TO FILL IT
063452 / 336644,,033265         SKIPN  AC1, JBTFS(J)          ;; BLOCK STILL THERE?
063453 / 254000,,063422          JRST      063422             ;; NO, GIVE ILL ADDR ERROR
063454 / 551115,,000001         HRRZI TAC1,     1(AC1)        ;; PICK UP ADDRRESS PLUS ONE
063455 / 335015,,000000        SKIPGE            (AC1)        ;; DONE YET?
063456 / 254000,,063447          JRST      063447             ;; NO, WAIT AGAIN
063457 / 332055,,000000         SKIPE  TAC,      (AC1)        ;; WAS THERE AN ERROR?
063460 / 254000,,063464          JRST      063464             ;; YES, RETURN CODE
151532 / 564754,,000001          HLRO  AC3,     1(UUO)        ;
063461 / 256200,,151532          XCTR   XR,151532             ;
063462 / 210740,,000017          MOVN  AC3,   AC3             ;
063463 / 364740,,063403          SOJA  AC3,063403             ;; GO DO BLT TO USER
                       JOBRDY:
152551 / 202054,,000001         MOVEM  TAC,     1(UUO)        ;
063464 / 256040,,152551          XCTR   XW,152551             ;; STORE ERROR CODE
063465 / 402004,,033265         SETZM       JBTFS(J)          ;
063466 / 254000,,074163          JRST      074163             ;; RETURN BLOCK
                       ;FREE STORAGE BLOCK LOCATIONS
                       ;	BEFORE			AFTER
                       ;0	-WC,,MA TO READ		-1=ERROR, 0=SUCCESS
                       ;1	RANDOM			DATA TO END OF BLOCK
                       ;2					.
                       ; JOBRD - WE GET HERE AT CLOCK LEVEL . . .
                       JOBRCK:
063467 / 550200,,000005          HRRZ    J,000005             ;;JOB # IS ARG
063470 / 336404,,033265         SKIPN  TEM, JBTFS(J)          ;; DID FREE STORAGE BLOCK GO AWAY?
063471 / 263140,,000000          POPJ    P,                   ;; YES, DISAPPEAR
063472 / 554040,,000010          HLRZ  TAC,000010             ;;GET JOB # WE ARE READING
063473 / 200641,,026114          MOVE  AC1,JBTSTS(TAC)        ;
063474 / 607640,,040000          TLNN  AC1,040000             ;; IS JOB STILL THERE?
063475 / 254000,,063555          JRST      063555             ;; NO, ERROR
063476 / 603640,,004000          TLNE  AC1,004000             ;;IF SHUFFLING
063477 / 254000,,132555          JRST      132555             ;;JUST REPLANT CLOCK REQUEST
063500 / 603640,,002000          TLNE  AC1,002000             ;;IF SWAPPED,
063501 / 254000,,063504          JRST      063504             ;;BRING HIM IN
063502 / 260140,,063507         PUSHJ    P,063507             ;;DO BLT
063503 / 254000,,063560          JRST      063560             ;;NOW CONTINUE USER
                       JOBRCQ:
063504 / 200200,,000001          MOVE    J,000001             ;;TRANSFER CONTROL TO SWAP IN LIST
063505 / 205040,,040000         MOVSI  TAC,JRDSNB             ;
063506 / 254000,,066763          JRST      SETSIN             ;
                       ;CALL WITH TEM=FS BLOCK, TAC=JOB # WE ARE READING FROM
                       JRDBLT:
063507 / 550710,,000000          HRRZ  AC2,      (TEM)        ;; PICK UP STARTING ADDRESS
063510 / 564750,,000000          HLRO  AC3,      (TEM)        ;; AND WORD COUNT
063511 / 213000,,000017         MOVNS         AC3             ;
063512 / 554641,,027120          HLRZ  AC1,JBTADR(TAC)        ;
063513 / 271756,,000000          ADDI  AC3,      (AC2)        ;
063514 / 275740,,000001          SUBI  AC3,     1             ;
063515 / 303755,,000000         CAILE  AC3,      (AC1)        ;
063516 / 254000,,063527          JRST      JRDBL1             ;
063517 / 275756,,777777          SUBI  AC3,777777(AC2)        ;; BACK UP TO JUST WORD COUNT - 1
063520 / 270701,,027120           ADD  AC2,JBTADR(TAC)        ;; RELOCATE
063521 / 505710,,000001          HRLI  AC2,     1(TEM)        ;; PREPARE TO MOVE DATA
063522 / 207000,,000016         MOVSS         AC2             ;
063523 / 270740,,000010           ADD  AC3,000010             ;; ADD IN FS ADDRESS
063524 / 251717,,000000           BLT  AC2,      (AC3)        ;
063525 / 402010,,000000         SETZM            (TEM)        ;; CLEAR THE ERROR FLAG
063526 / 263140,,000000          POPJ    P,                   ;
                       JRDBL1:
063527 / 201040,,000004         MOVEI  TAC,     4             ;
063530 / 202050,,000000         MOVEM  TAC,      (TEM)        ;; FLAG ERROR
063531 / 263140,,000000          POPJ    P,                   ;
                       ;ENTER HERE WITH TAC=JOB JUST SWAPPED IN, J=JOB # WHO WANTS TO READ HIM
                       ;CALLED FROM FININ
                       JRDWIN:
063532 / 261140,,000010          PUSH    P,000010             ;;FIRST SAVE SOME ACS
063533 / 261140,,000015          PUSH    P,   AC1             ;
063534 / 261140,,000016          PUSH    P,   AC2             ;
063535 / 261140,,000017          PUSH    P,   AC3             ;
063536 / 550404,,033265          HRRZ  TEM, JBTFS(J)          ;
063537 / 260140,,063507         PUSHJ    P,063507             ;;DO BLT
063540 / 260140,,063560         PUSHJ    P,063560             ;;RESTART USER
                       JRDLEV:
063541 / 262140,,000017           POP    P,000017             ;;NOW RESTORE ACS
063542 / 262140,,000016           POP    P,   AC2             ;
063543 / 262140,,000015           POP    P,   AC1             ;
063544 / 262140,,000010           POP    P,   TEM             ;
063545 / 263140,,000000          POPJ    P,                   ;
                       ;CALLED FROM FININ
                       JRDLOS:
063546 / 261140,,000010          PUSH    P,000010             ;;FIRST SAVE SOME ACS
063547 / 261140,,000015          PUSH    P,   AC1             ;
063550 / 261140,,000016          PUSH    P,   AC2             ;
063551 / 261140,,000017          PUSH    P,   AC3             ;
063552 / 550404,,033265          HRRZ  TEM, JBTFS(J)          ;; J IS JOB # OF JOB DOING JOBRD
063553 / 260140,,063556         PUSHJ    P,063556             ;; GIVE ADDR ERROR RETURN ON SWAP ERROR
063554 / 254000,,063541          JRST      JRDLEV             ;
                       ;DONE, RESTART USER
                       JOBRC3:
151703 / 000000,,000005                                       ;
063555 / 334040,,151703         SKIPA  TAC,151703             ;;NO JOB THERE
                       JOBRC1:
063556 / 201040,,000004         MOVEI  TAC,000004             ;;ADDR ERROR
063557 / 202050,,000000         MOVEM  TAC,      (TEM)        ;
                       JOBRC2:
063560 / 214744,,020574          MOVM  AC3,JOBQUE(J)          ;
063561 / 302740,,000005          CAIE  AC3,000005             ;;IS HE WERE WE LEFT HIM?
153435 / 200644,,033265          MOVE  AC1, JBTFS(J)          ;;NO, GIVE BACK FS AND GO AWAY
153436 / 402004,,033265         SETZM       JBTFS(J)          ;
153437 / 254000,,074163          JRST      FSGIVE             ;
063562 / 254000,,153435          JRST      153435             ;
063563 / 211740,,000014         MOVNI  AC3,  RUNQ             ;
063564 / 202744,,020574         MOVEM  AC3,JOBQUE(J)          ;
063565 / 254000,,046027          JRST       REQUE             ;
                       ;TMPCOR UUO - BEHAVES AS DESCRIBED IN DEC MANUAL
                       ;FORMAT OF TMPCOR BLOCK
                       TMPCRD:
151502 / 550441,,000000          HRRZ DSER,      (TAC)        ;
063566 / 256200,,151502          XCTR   XR,151502             ;;TMPCOR TO OTHER JOB:
063567 / 326440,,063571         JUMPN DSER,063571             ;
063570 / 201444,,000000         MOVEI DSER,      (J)          ;
063571 / 201100,,000000         MOVEI TAC1,                   ;
063572 / 313440,,035266         CAMLE DSER,JOBNM1             ;
063573 / 254000,,063617          JRST      TMPCR1             ;
063574 / 200651,,026114          MOVE  AC1,JBTSTS(DSER)       ;
063575 / 607640,,040000          TLNN  AC1,   JNA             ;
063576 / 254000,,063617          JRST      063617             ;;NO SUCH JOB
153112 / 336601,,000002         SKIPN  UUO,     2(TAC)        ;
063577 / 256200,,153112          XCTR   XR,153112             ;;GET JOB, ALIAS FROM USER
063600 / 200611,,027720          MOVE  UUO,PRJPRG(DSER)       ;;DEFAULT IS HIS PPN
063601 / 254000,,063605          JRST      TMPCO1             ;
                       TMPCOR:
063602 / 201444,,000000         MOVEI DSER,      (J)          ;;TMPCOR TO YOURSELF:
063603 / 336611,,030020         SKIPN  UUO,DSKPPN(DSER)       ;;DSER IS YOUR JOB
063604 / 200611,,027720          MOVE  UUO,PRJPRG(DSER)       ;;UUO IS YOUR ALIAS
                       TMPCO1:
063605 / 554100,,000001          HLRZ TAC1,   TAC             ;
063606 / 301100,,000006          CAIL TAC1,NUMTMP             ;
063607 / 254000,,043340          JRST      UUOERR             ;
063610 / 302444,,000000          CAIE DSER,      (J)          ;
063611 / 335002,,063621        SKIPGE      TMPDSP(TAC1)       ;;ONLY SOME ALLOWED FOR TMPCRD
063612 / 254000,,063614          JRST      063614             ;
063613 / 254000,,043340          JRST      UUOERR             ;
063614 / 260162,,063621         PUSHJ    P,@TMPDSP(TAC1)      ;
063615 / 254000,,063617          JRST      063617             ;
063616 / 350003,,000000           AOS            (P)          ;
                       TMPCR1:
152566 / 202112,,000000         MOVEM TAC1,      (UCHN)       ;
063617 / 256040,,152566          XCTR   XW,152566             ;;STORE PARAM FROM TAC1 (OFTEN SIZE)
063620 / 263140,,000000          POPJ    P,                   ;
                       TMPDSP:
063621 / 400000,,063627          SETZ      063627             ;;4.9 IMPLIES ALLOWED FOR OTHER JOBS
063622 / 400000,,063711          SETZ      TMPRED             ;
063623 / 000000,,063724                                       ;
063624 / 000000,,063736                                       ;
063625 / 400000,,063770          SETZ      TMPDIR             ;
063626 / 000000,,063727                                       ;
                       ;CALCULATE AMT OF ROOM LEFT (TMPMAX-CURRENT TOTAL)
                       TMPSZ1:
063627 / 354003,,000000          AOSA            (P)          ;
                       TMPWRX:
063630 / 260140,,074163         PUSHJ    P,074163             ;;HERE IF XFER ABORTS AFTER GETTING FS
                       TMPSIZ:
063631 / 201100,,000400         MOVEI TAC1,TMPMAX             ;
063632 / 265240,,063652           JSP  DAT,063652             ;;COUNT ALL FILES WITHOUT REGARD TO ALIAS
063633 / 274115,,000001           SUB TAC1,TMPNAM(AC1)        ;
063634 / 625100,,777777          TLZA TAC1,777777             ;
063635 / 263140,,000000          POPJ    P,                   ;
                       ;SCAN A JOB'S TMPCOR FILES AND EXECUTE 2 INSTRS FOLLOWING CALL
                       TMPSCN:
063636 / 550751,,033465          HRRZ  AC3,JBTTCR(DSER)       ;
                       TMPSC1:
063637 / 336640,,000017         SKIPN  AC1,   AC3             ;
063640 / 254005,,000002          JRST           2(DAT)        ;
063641 / 312615,,000002          CAME  UUO,TMPPPN(AC1)        ;;IGNORE ALL TMP FILES WITH WRONG ALIAS
063642 / 254000,,063650          JRST      TMPSC2             ;
063643 / 550755,,000000          HRRZ  AC3,      (AC1)        ;;SAVE LINK NOW IN CASE DELETING
063644 / 256005,,000000           XCT            (DAT)        ;
063645 / 256005,,000001           XCT           1(DAT)        ;;THIS ONE USUALLY SKIPS
063646 / 254005,,000003          JRST           3(DAT)        ;;BUT SKIP RETURN NOW IF NOT
063647 / 254000,,063637          JRST      TMPSC1             ;
                       TMPSC2:
063650 / 550755,,000000          HRRZ  AC3,      (AC1)        ;
063651 / 254000,,063637          JRST      TMPSC1             ;
                       ;SCAN A JOB'S TMPCOR FILES AND EXECUTE 2 INSTRS FOLLOWING CALL--IGNORE ALIAS
                       TM1SCN:
063652 / 550751,,033465          HRRZ  AC3,JBTTCR(DSER)       ;
                       TM1SC1:
063653 / 336640,,000017         SKIPN  AC1,   AC3             ;
063654 / 254005,,000002          JRST           2(DAT)        ;
063655 / 550755,,000000          HRRZ  AC3,      (AC1)        ;;SAVE LINK NOW IN CASE DELETING
063656 / 256005,,000000           XCT            (DAT)        ;
063657 / 256005,,000001           XCT           1(DAT)        ;;THIS ONE USUALLY SKIPS
063660 / 254005,,000003          JRST           3(DAT)        ;;BUT SKIP RETURN NOW IF NOT
063661 / 254000,,063653          JRST      TM1SC1             ;
                       ;FIND REQUESTED TMPCOR FILE
                       TMPFND:
151441 / 510101,,000000          HLLZ TAC1,      (TAC)        ;
063662 / 256200,,151441          XCTR   XR,151441             ;
063663 / 265240,,063636           JSP  DAT,TMPSCN             ;
063664 / 510715,,000001          HLLZ  AC2,TMPNAM(AC1)        ;
063665 / 316700,,000002          CAMN  AC2,  TAC1             ;
063666 / 263140,,000000          POPJ    P,                   ;
063667 / 254000,,037401          JRST      CPOPJ1             ;
                       ;CHECK & RELOCATE TMPCOR WCMA
                       TMPSET:
063670 / 201100,,777777         MOVEI TAC1,777777             ;;UPPER LIM ON WC
                       TMPST1:
151536 / 574701,,000001          HLRE  AC2,     1(TAC)        ;
063671 / 256200,,151536          XCTR   XR,151536             ;
063672 / 325700,,037403        JUMPGE  AC2, CPOPJ             ;
063673 / 210700,,000016          MOVN  AC2,000016             ;;+ WC
063674 / 303116,,000000         CAILE TAC1,      (AC2)        ;;USE MIN OF FILE & USER WC'S
063675 / 334100,,000016         SKIPA TAC1,   AC2             ;
063676 / 201702,,000000         MOVEI  AC2,      (TAC1)       ;
151515 / 550741,,000001          HRRZ  AC3,     1(TAC)        ;
063677 / 256200,,151515          XCTR   XR,151515             ;;START ADR-1
063700 / 261140,,000015          PUSH    P,   AC1             ;
063701 / 271117,,000000          ADDI TAC1,      (AC3)        ;;CALCULATE END ADR
063702 / 260140,,072703         PUSHJ    P,072703             ;;CHECK IT
063703 / 254000,,043340          JRST      UUOERR             ;
063704 / 201117,,000001         MOVEI TAC1,     1(AC3)        ;;START ADR
063705 / 260140,,072762         PUSHJ    P,072762             ;;CHECK THAT TOO
063706 / 254000,,043340          JRST      UUOERR             ;
063707 / 262140,,000015           POP    P,   AC1             ;
063710 / 254000,,037401          JRST      CPOPJ1             ;
                       ;READ TMPCOR FILE
                       TMPRED:
063711 / 260140,,063662         PUSHJ    P,063662             ;;LOOK FOR FILE
063712 / 254000,,063631          JRST      063631             ;;NOT THERE - RETURN FREE SIZE
063713 / 550115,,000001          HRRZ TAC1,TMPNAM(AC1)        ;;LIMIT XFER TO SIZE
063714 / 260140,,063671         PUSHJ    P,TMPST1             ;
063715 / 254000,,063722          JRST      TMPRDX             ;
063716 / 321100,,043340         JUMPL TAC1,043340             ;;CAN'T CLOBBER WRITE PROTECTED CORE
063717 / 505115,,000003          HRLI TAC1,TMPDAT(AC1)        ;
063720 / 271702,,000000          ADDI  AC2,      (TAC1)       ;
063721 / 251116,,777777           BLT TAC1,777777(AC2)        ;
                       TMPRDX:
063722 / 550115,,000001          HRRZ TAC1,TMPNAM(AC1)        ;;RETURN ACTUAL FILE SIZE
063723 / 254000,,037401          JRST      CPOPJ1             ;
                       ;READ & DELETE TMPCOR FILE
                       TMPRDD:
063724 / 260140,,063711         PUSHJ    P,063711             ;;TRY TO READ FILE
063725 / 263140,,000000          POPJ    P,                   ;
063726 / 354003,,000000          AOSA            (P)          ;;SET SKIP & SKIP INTO TMPDEL
                       ;READ & CLEAR TMPCOR DIRECTORY
                       TMPCLR:
063727 / 265400,,063771           JSP  TEM,063771             ;;SET TEM TO CALL TMPDEL FOR EACH ITEM
                       ;DELETE TMPCOR FILE SPECIFIED BY (AC1)
                       TMPDEL:
063730 / 200715,,000000          MOVE  AC2,      (AC1)        ;
063731 / 602700,,777777          TRNE  AC2,777777             ;
063732 / 502716,,000000          HLLM  AC2,      (AC2)        ;
063733 / 204700,,000016          MOVS  AC2,   AC2             ;
063734 / 546716,,000000          HLRM  AC2,      (AC2)        ;
063735 / 254000,,074163          JRST      FSGIVE             ;
                       ;WRITE TMPCOR FILE
                       TMPWRT:
063736 / 260140,,063662         PUSHJ    P,063662             ;;SEE IF IT ALREADY EXISTS
063737 / 254000,,063741          JRST      063741             ;;NO
063740 / 260140,,063730         PUSHJ    P,063730             ;;YES - DELETE IT
063741 / 260140,,063670         PUSHJ    P,TMPSET             ;
063742 / 254000,,063631          JRST      063631             ;;NO XFER
063743 / 205242,,000000         MOVSI  DAT,      (TAC1)       ;;SAVE USER ADR
063744 / 260140,,063631         PUSHJ    P,TMPSIZ             ;
063745 / 303702,,000000         CAILE  AC2,      (TAC1)       ;
063746 / 263140,,000000          POPJ    P,                   ;;NOT ENOUGH ROOM LEFT
063747 / 201756,,000003         MOVEI  AC3,TMPDAT(AC2)        ;
063750 / 260140,,074361         PUSHJ    P,074361             ;;GET A BLOCK
063751 / 260140,,063670         PUSHJ    P,063670             ;;NOW DO THIS AGAIN (MAY HAVE MOVED)
063752 / 254000,,063630          JRST      TMPWRX             ;
063753 / 205242,,000000         MOVSI  DAT,      (TAC1)       ;;LH OF BLT PNTR
063754 / 205111,,033465         MOVSI TAC1,JBTTCR(DSER)       ;
063755 / 540111,,033465           HRR TAC1,JBTTCR(DSER)       ;;& LINK IT IN
063756 / 202115,,000000         MOVEM TAC1,      (AC1)        ;
063757 / 542651,,033465          HRRM  AC1,JBTTCR(DSER)       ;
063760 / 506642,,000000          HRLM  AC1,      (TAC1)       ;
151433 / 500701,,000000           HLL  AC2,      (TAC)        ;
063761 / 256200,,151433          XCTR   XR,151433             ;;GET NAME
063762 / 202715,,000001         MOVEM  AC2,TMPNAM(AC1)        ;;STORE NAME & SIZE
063763 / 202615,,000002         MOVEM  UUO,TMPPPN(AC1)        ;;AND ALIAS WITH TMP FILE
063764 / 541255,,000003          HRRI  DAT,TMPDAT(AC1)        ;;MAKE BLT PNTR
063765 / 271705,,000000          ADDI  AC2,      (DAT)        ;;CALC END ADR
063766 / 251256,,777777           BLT  DAT,777777(AC2)        ;
063767 / 254000,,063627          JRST      063627             ;;SKIP RETURN WITH NEW FREE CNT
                       ;READ TMPCOR DIRECTORY
                       TMPDIR:
063770 / 201400,,037403         MOVEI  TEM,037403             ;;NO DELETING
                       TMPDR2:
063771 / 260140,,063670         PUSHJ    P,TMPSET             ;
063772 / 255000,,000000          JFCL                         ;
063773 / 321100,,043340         JUMPL TAC1,043340             ;;ERR IF R/O CORE
063774 / 205716,,000001         MOVSI  AC2,     1(AC2)        ;;BUGGER BY 1 FOR PRE-AOBJN
063775 / 210700,,000016          MOVN  AC2,   AC2             ;
063776 / 541702,,000000          HRRI  AC2,      (TAC1)       ;;MAKE AOBJN PNTR
063777 / 201100,,000000         MOVEI TAC1,                   ;;INIT CNT
064000 / 265240,,063636           JSP  DAT,TMPSCN             ;
064001 / 260140,,064004         PUSHJ    P,TMPDR1             ;
064002 / 304000,,000000          CAIA                         ;
064003 / 254000,,037401          JRST      CPOPJ1             ;
                       TMPDR1:
064004 / 200055,,000001          MOVE  TAC,TMPNAM(AC1)        ;;GET NAME & SIZE
064005 / 252700,,064007         AOBJP  AC2,064007             ;
064006 / 202056,,777777         MOVEM  TAC,777777(AC2)        ;;STORE IF ROOM
064007 / 344110,,000000          AOJA TAC1,      (TEM)        ;;COUNT ITEM & DO EXIT THING
                       ;DELETE ALL TMPCOR FILES (REGARDLESS OF ALIAS PPNS)
                       TMPKIL:
064010 / 201444,,000000         MOVEI DSER,      (J)          ;;THIS ROUTINE DOES OWN JOB!!
064011 / 265240,,063652           JSP  DAT,063652             ;;FIND ALL TMP FILES, IGNORING ALIAS
064012 / 260140,,063730         PUSHJ    P,063730             ;;DELETE EACH ONE
064013 / 304000,,000000          CAIA                         ;
064014 / 263140,,000000          POPJ    P,                   ;
                       ;FOR PURPOSES OF COMMENTING THIS SUBROUTINE THE
                       ;TERM 'BUFFER HEADER' SHALL REFER TO THE 3 WORD HEADER
                       ;WHICH IS USED BY THE USER PROGRAM AND THIS EXEC FOR
                       ;REFERING TO THE RING BUFFERS.
                       ;THE CONTENTS OF THE 3 WORD HEADER (AS SET BY THE MONITOR
                       ;		ON EACH INPUT AND OUTPUT UUO).
                       ;		BIT 18-35=ADDRESS OF SECOND WORD OF THE
                       ;		CURRENT BUFFER IN RING WHICH USER IS REFERENCING
                       ;	WORD 2:	BYTE POINTER TO CURRENT ITEM.
                       ;	WORD 3:	POSITIVE ITEM COUNT (NO. OF ITEMS LEFT ON
                       ;		INPUT, NO. OF FREE ITEMS TO GO ON OUTPUT).
                       ;EACH BUFFER IN THE RING HAS FOLLOWING FORMAT (AS THE USER SEES IT)
                       ;	WORD 1:	RESERVED FOR BLOCK NUMBER FOR FIXED ADDRESS DEVICES
                       ;	WORD 2:	BIT 0=USE BIT FOR THIS BUFFER
                       ;		BIT 1-17=NO. OF WORDS WHICH FOLLOW (LENGTH OF BUFFER)/
                       ;		BIT 18-35=ADDRESS OF SECOND WORD OF NEXT BUFFER IN RING
                       ;	WORD 3:	LH=LINK TO NEXT BLOCK (SET BY MONITOR FOR DECTAPE)
                       ;		RH=NO. OF WORDS OF DATA WHICH FOLLOW (USUALLY
                       ;		SET BY EXEC EXCEPT IF THE USER HAS SPECIFIED
                       ;		THAT HE WANTS TO COMPUTE WORD COUNT
                       ;		HIMSELF INSTEAD OF HAVING THE MONITOR DO IT
                       ;		USING THE BYTE POINTER IN THE 3 WORD HEADER).
                       ;IOPUSH, IOPOP, IOPDL
                       ;IOPUSH CHN,ID
                       ;	PUSH DEVICE ON CHANNEL "CHN" ON STACK WITH ID "ID"
                       IOPUSH:
064015 / 332644,,032565         SKIPE  AC1,JBTIOP(J)          ;
064016 / 254000,,064022          JRST      IOPSH1             ;
064017 / 201740,,000046         MOVEI  AC3,IOPDLN             ;
064020 / 260140,,074361         PUSHJ    P,UFSGET             ;
064021 / 202644,,032565         MOVEM  AC1,JBTIOP(J)          ;
                       IOPSH1:
064022 / 554740,,000015          HLRZ  AC3,   AC1             ;
064023 / 306740,,777732          CAIN  AC3,777732             ;
064024 / 263140,,000000          POPJ    P,                   ;;NO SPACE ERROR
064025 / 276640,,000017          SUBM  AC1,   AC3             ;
064026 / 313500,,024066         CAMLE UCHN,USRHCU             ;
064027 / 634300,,000006          TDZA  DDB,   DDB             ;
064030 / 200312,,024071          MOVE  DDB,USRJDA(UCHN)       ;
064031 / 202317,,000000         MOVEM  DDB,      (AC3)        ;
064032 / 402012,,024071         SETZM      USRJDA(UCHN)       ;
064033 / 336040,,024066         SKIPN  TAC,USRHCU             ;
064034 / 254000,,064040          JRST      064040             ;;USRHCU STAYS AT 0 EVEN IF NO CHANNELS OPEN
                       IOPSH3:
064035 / 336001,,024071         SKIPN      USRJDA(TAC)        ;
064036 / 367040,,064035          SOJG  TAC,IOPSH3             ;
064037 / 202040,,024066         MOVEM  TAC,USRHCU             ;
                       IOPSH2:
064040 / 202517,,000001         MOVEM UCHN,     1(AC3)        ;
064041 / 506617,,000001          HRLM  UUO,     1(AC3)        ;;SAVE ID ON STACK WITH CHANNEL NUMBER
151772 / 000002,,000000                                       ;
064042 / 274640,,151772           SUB  AC1,151772             ;
                       IOPOP3:
064043 / 202644,,032565         MOVEM  AC1,JBTIOP(J)          ;
064044 / 254000,,037401          JRST      CPOPJ1             ;
                       ;IOPOP CHN,ID
                       ;	RELEASE DEVICE ON CHANNEL "CHN", POP DEVICE WITH ID "ID" INTO CHANNEL "CHN"
                       IOPOP:
064045 / 260140,,064140         PUSHJ    P,064140             ;;FIND ID WHICH USER SPECIFIED
064046 / 263140,,000000          POPJ    P,                   ;;NO STACK, OR NOT FOUND
                       IOPOP0:
064047 / 332312,,024071         SKIPE  DDB,USRJDA(UCHN)       ;;IS A DEVICE ALREADY ASSIGNED TO THIS CHAN?
064050 / 313513,,024066         CAMLE UCHN,USRHCU(PID)        ;;YES, IS THIS CHAN. LE HIGHEST CHAN. FOR THIS USER?
064051 / 254000,,064056          JRST      064056             ;;NO, NO PREVIOUS DEVICE TO RELEASE
064052 / 550446,,000003          HRRZ DSER,DEVSER(DDB)        ;
064053 / 261140,,000017          PUSH    P,000017             ;;SAVE POINTER TO ENTRY WE WILL POP
064054 / 260140,,065470         PUSHJ    P,065470             ;;RELEASE PREVIOUS DEVICE ON THIS CHAN.
064055 / 262140,,000017           POP    P,   AC3             ;
                       IOPOP2:
064056 / 200317,,000000          MOVE  DDB,      (AC3)        ;;THIS POINTS TO STACK ENTRY
064057 / 202312,,024071         MOVEM  DDB,USRJDA(UCHN)       ;;NEW DEV ON THIS CHANNEL
064060 / 322300,,064066         JUMPE  DDB,064066             ;;DON'T READJUST USRHCU IF POPPING A NULL CHANNEL
                       IOPOP1:
064061 / 317500,,024066          CAMG UCHN,USRHCU             ;
064062 / 254000,,064066          JRST      IOPOP4             ;
064063 / 350040,,024066           AOS  TAC,USRHCU             ;
064064 / 402001,,024071         SETZM      USRJDA(TAC)        ;
064065 / 254000,,064061          JRST      IOPOP1             ;
                       IOPOP4:
064066 / 200644,,032565          MOVE  AC1,JBTIOP(J)          ;
151772 / 000002,,000000                                       ;
064067 / 270640,,151772           ADD  AC1,151772             ;
064070 / 327640,,064101         JUMPG  AC1,IOPOP5             ;
064071 / 574700,,000015          HLRE  AC2,   AC1             ;
064072 / 276640,,000016          SUBM  AC1,   AC2             ;
064073 / 550740,,000017          HRRZ  AC3,   AC3             ;
064074 / 306756,,000000          CAIN  AC3,      (AC2)        ;;ARE WE THE END ENTRY?
064075 / 254000,,064043          JRST      064043             ;;YES, SKIP BLT
064076 / 505757,,000002          HRLI  AC3,     2(AC3)        ;;BLT DOWN ONE ENTRY
064077 / 251756,,777777           BLT  AC3,777777(AC2)        ;;LAST WORD OF LAST ENTRY
064100 / 254000,,064043          JRST      IOPOP3             ;
                       IOPOP5:
064101 / 402004,,032565         SETZM      JBTIOP(J)          ;
064102 / 350003,,000000           AOS            (P)          ;
064103 / 254000,,074163          JRST      FSGIVE             ;
                       IOPDL:
064104 / 301500,,000003          CAIL UCHN,000003             ;;LEGAL IOPDL FUNTION?
064105 / 254000,,043340          JRST      043340             ;;NO
064106 / 254032,,064135          JRST      @IOPDLD(UCHN)      ;;DISPATCH
                       ;IOPDL 0,
                       ;	RETURN ALL STACKED DEVICES TO WHERE THEY CAME FROM
                       IOPDL0:
064107 / 331744,,032565         SKIPL  AC3,JBTIOP(J)          ;
064110 / 263140,,000000          POPJ    P,                   ;
064111 / 574640,,000017          HLRE  AC1,   AC3             ;
064112 / 274740,,000015           SUB  AC3,   AC1             ;
064113 / 550517,,777777          HRRZ UCHN,777777(AC3)        ;;GET JUST CHANNEL NUMBER
064114 / 620600,,777777           TRZ  UUO,777777             ;;MAKE SURE WE GET TOP OF STACK
064115 / 260140,,064045         PUSHJ    P, IOPOP             ;
064116 / 263140,,000000          POPJ    P,                   ;
064117 / 254000,,064104          JRST       IOPDL             ;
                       ;IOPDL 1,
                       ;	RELEASE ALL STACKED DEVICES
                       IOPDL1:
064120 / 331004,,032565         SKIPL      JBTIOP(J)          ;
064121 / 263140,,000000          POPJ    P,                   ;;DONE
064122 / 620600,,777777           TRZ  UUO,777777             ;;DO IT TO TOP OF STACK
064123 / 260140,,064126         PUSHJ    P,064126             ;;RELEASE IT
064124 / 263140,,000000          POPJ    P,                   ;;FOO
064125 / 254000,,064120          JRST      064120             ;;LOOP TILL ALL GONE
                       ;IOPDL 2,ID
                       ;	RELEASE STACKED DEVICE WITH ID "ID".
                       IOPDL2:
064126 / 260140,,064140         PUSHJ    P,FIOPID             ;
064127 / 263140,,000000          POPJ    P,                   ;;NOT FOUND
064130 / 200317,,000000          MOVE  DDB,      (AC3)        ;;GET DEVICE HE WANTS RELEASED
064131 / 250300,,024071          EXCH  DDB,024071             ;;EXCHANGE WITH CHAN 0
064132 / 202317,,000000         MOVEM  DDB,      (AC3)        ;;WHICH WE SAVE ON STACK
064133 / 400500,,000000          SETZ UCHN,                   ;;NOW RELEASE CHANNEL 0 AND POP OLD ONE BACK THERE
064134 / 254000,,064047          JRST      IOPOP0             ;
                       IOPDLD:
064135 / 000000,,064107                                       ;
064136 / 000000,,064120                                       ;
064137 / 000000,,064126                                       ;
                       FIOPID:
064140 / 331744,,032565         SKIPL  AC3,JBTIOP(J)          ;;ANY STACK AT ALL?
064141 / 263140,,000000          POPJ    P,                   ;;NO
064142 / 574640,,000017          HLRE  AC1,   AC3             ;
064143 / 275755,,000002          SUBI  AC3,     2(AC1)        ;;POINT TO TOP OF STACK
064144 / 211655,,000002         MOVNI  AC1,     2(AC1)        ;
064145 / 504740,,000015           HRL  AC3,000015             ;;PUT COUNT IN LEFT HALF
064146 / 606600,,777777          TRNN  UUO,777777             ;;ANY ID?
064147 / 254000,,037401          JRST      037401             ;;NO, 0 IS ALWAYS TOP OF STACK
                       IOPID1:
064150 / 554657,,000001          HLRZ  AC1,     1(AC3)        ;;GET ID
064151 / 306654,,000000          CAIN  AC1,      (UUO)        ;
064152 / 254000,,037401          JRST      037401             ;;FOUND IT
151774 / 000002,,000002                                       ;
064153 / 274740,,151774           SUB  AC3,151774             ;
064154 / 327740,,064150         JUMPG  AC3,064150             ;;MORE TO GO?
064155 / 263140,,000000          POPJ    P,                   ;;NO, NOT FOUND
                       ; CLOSE UUO - CALLING SEQUENCE
                       ;	CLOSE D,
                       ;	EXIT		ALWAYS RETURNS HERE
                       ; THIS ROUTINES PROCESSES THE CLOSE UUO AND DETERMINES WHETHER THE
                       ;OUTPUT ROUTINE SHOULD BE CALLED IF OUTPUT WERE ACTIVE, CLEARS
                       ;THE INPUT BUFFER AREA IF INPUT WERE ACTIVE, AND CLEARS THE 
                       ;ITEM COUNTS OF BOTH INPUT AND OUTPUT HEADERS SERVING TO BOTH
                       ;TERMINATE THE USE OF THE DEVICE AND SET THE I/O ROUTINES TO
                       ;ACCEPT ANOTHER INPUT OR OUTPUT COMMAND IN A CLEAR STATE.
                       ;IN THE CASE OF OUTPUT DEVICES, THE CLOSE ROUTINE OF THE DEVICE HANDL-
                       ;ING ROUTINE IS CALLED IN CASE ANY SPECIAL HANDLING IS REQUIRED.
                       ; CLOSE CODE - WAIT FOR IO TO FINISH, FLUSH BUFFERS
                       CLOSE1:
064156 / 260140,,046160         PUSHJ  PDP,046160             ;; WAIT UNTIL DEVICE IS INACTIVE
064157 / 421600,,777774        ANDCMI  UUO,777774             ;;ZERO ALL BUT CLOSE-INHIBIT BITS IN RH OF UUO
064160 / 606600,,000002          TRNN  UUO,000002             ;;SUPPRESS INPUT CLOSE?
064161 / 663300,,002000          TLOE DEVDAT,002000             ;;NO. INPUT ALREADY BEEN CLOSED?
064162 / 254000,,064234          JRST      064234             ;;YES
064163 / 135040,,037574           LDB  TAC,037574             ;;NO
064164 / 306040,,000002          CAIN  TAC,     2             ;
064165 / 263140,,000000          POPJ  PDP,                   ;;SAVE MODE.
064166 / 305040,,000015         CAIGE  TAC,000015             ;;DUMP MODE?
064167 / 254000,,064172          JRST      064172             ;;NO. CLOSE BUFFERED INPUT.
                       UCLS5:
064170 / 260151,,000014         PUSHJ  PDP,  DCLI(DSER)       ;;YES. DISPATCH TO DEVICE DEP. ROUTINE
064171 / 254000,,064234          JRST      064234             ;;MUST NOT DESTROY UUO,DEVDAT,DSER,UCHN
                       UCLSBI:
064172 / 200046,,000004          MOVE  TAC,DEVMOD(DEVDAT)     ;
064173 / 603300,,010400          TLNE DEVDAT,010400             ;;WAS AN INPUT BUFFER SETUP?
064174 / 254000,,064200          JRST      064200             ;;
064175 / 603040,,202000          TLNE  TAC,202000             ;;NO.  CLOSING DISK OR IMP?
064176 / 254000,,064170          JRST      064170             ;;YES. DO CLOSE
064177 / 254000,,064234          JRST      064234             ;;NO.
                       UCLS4:
064200 / 603040,,001000          TLNE  TAC, DVLNG             ;
064201 / 260151,,000014         PUSHJ  PDP,  DCLI(DSER)       ;;YES, CLOSE INPUT
064202 / 550106,,000006          HRRZ TAC1,DEVBUF(DEVDAT)     ;
151501 / 550242,,000000          HRRZ  DAT,      (TAC1)       ;
064203 / 256200,,151501          XCTR   XR,151501             ;;PICK UP FIRST WORD OF BUFFER HEADER
064204 / 135740,,037576           LDB  AC3,037576             ;; PICK UP BUFFER LENGTH
064205 / 271745,,000000          ADDI  AC3,      (DAT)        ;; ADD IN BUFFER ADDRESS
152623 / 203017,,000000         MOVES            (AC3)        ;
064206 / 256240,,152623          XCTR  XRW,152623             ;; ADDRESS CHECK BUFFER ADDRESS
151446 / 540102,,000000           HRR TAC1,      (TAC1)       ;
064207 / 256200,,151446          XCTR   XR,151446             ;; REMEMBER CURRENT BUFFER IN TAC1
064210 / 515040,,400000         HRLZI  TAC,400000             ;;USED BOTH FOR HEADER AND EACH BUFFER
064211 / 322240,,064227         JUMPE  DAT,064227             ;;HAS A RING BEEN SETUP?(NO IF 0)
064212 / 402000,,000015         SETZM         AC1             ;
064213 / 135400,,037576           LDB  TEM,037576             ;; FIGURE OUT THE MAXIMUM NUMBER OF BUFFERS
064214 / 554740,,000007          HLRZ  AC3,  PROG             ;
064215 / 231750,,000000         IDIVI  AC3,      (TEM)        ;
064216 / 271740,,000002          ADDI  AC3,000002             ;; AND THIS IS CERTAINLY A GOOD UPPER BOUND!
                       UCLS0:
151450 / 540245,,000000           HRR  DAT,      (DAT)        ;
064217 / 256200,,151450          XCTR   XR,151450             ;; ADVANCE CURRENT INPUT BUFFER ADDRESS
064220 / 306645,,000000          CAIN  AC1,      (DAT)        ;;IS THIS THE SAME BUFFER AS LAST ONE?
064221 / 254000,,064227          JRST      064227             ;;YES. BAD RING. LOOPING ON ITSELF.
064222 / 201645,,000000         MOVEI  AC1,      (DAT)        ;;IS ADDRESS OK?
151350 / 412045,,000000        ANDCAM  TAC,      (DAT)        ;
064223 / 256240,,151350          XCTR  XRW,151350             ;; CLEAR USE BIT
064224 / 361740,,064227          SOJL  AC3, UCLS1             ;
064225 / 312100,,000005          CAME TAC1,000005             ;;DONE?
064226 / 254000,,064217          JRST       UCLS0             ;
                       ; CLOSE CODE
                       UCLS1:
064227 / 550246,,000006          HRRZ  DAT,DEVBUF(DEVDAT)     ;
151362 / 436045,,000000          IORM  TAC,      (DAT)        ;
064230 / 256240,,151362          XCTR  XRW,151362             ;; FLAG AS VIRGIN BUFFER IN HEADER
151335 / 402005,,000002         SETZM           2(DAT)        ;
064231 / 256040,,151335          XCTR   XW,151335             ;; CLEAR INPUT ITEM COUNT
152023 / 000040,,020000           XWD IOEND,IODEND            ;
064232 / 200000,,152023          MOVE      152023             ;
064233 / 413006,,000002        ANDCAB      DEVIOS(DEVDAT)     ;
                       UCLS2:
064234 / 606600,,000001          TRNN  UUO,000001             ;;SUPPRESS OUTPUT CLOSE?
064235 / 663300,,001000          TLOE DEVDAT,001000             ;;NO. OUTPUT ALREADY CLOSED?
064236 / 254000,,064310          JRST      064310             ;;YES
064237 / 135040,,037574           LDB  TAC,037574             ;;NO.
064240 / 306040,,000002          CAIN  TAC,000002             ;;SAVE MODE?
064241 / 254000,,064310          JRST      064310             ;;YES.
064242 / 305040,,000015         CAIGE  TAC,000015             ;;DUMP MODE?
064243 / 254000,,064246          JRST      064246             ;;NO. CLOSE BUFFERED OUTPUT
                       UCLS7:
064244 / 260151,,000001         PUSHJ  PDP,   DCL(DSER)       ;;YES. DISPATCH TO DEVICE DEP. ROUTINE
064245 / 254000,,064310          JRST       UCLS3             ;
                       UCLSBO:
064246 / 607300,,004200          TLNN DEVDAT,004200             ;;WAS AN OUTPUT BUFFER SET UP?
064247 / 254000,,064312          JRST      064312             ;;NO
064250 / 544246,,000006           HLR  DAT,DEVBUF(DEVDAT)     ;; RESTORE DAT NOW.
153115 / 337005,,000000         SKIPG            (DAT)        ;
064251 / 256200,,153115          XCTR   XR,153115             ;
064252 / 254000,,064312          JRST      064312             ;; DO NOT CLOSE UNLESS DISK OR IMP
064253 / 554640,,000007          HLRZ  AC1,000007             ;; PICK UP LENGTH OF LOWER
064254 / 135700,,037600           LDB  AC2, PSEGN             ;
064255 / 554716,,027120          HLRZ  AC2,JBTADR(AC2)        ;; AND ADD IN LENGTH OF UPPER
064256 / 271656,,000002          ADDI  AC1,     2(AC2)        ;
064257 / 135700,,037576           LDB  AC2,PDVBLN             ;
064260 / 271700,,000002          ADDI  AC2,000002             ;; PICK UP SIZE OF BUFFER
064261 / 231656,,000000         IDIVI  AC1,      (AC2)        ;; GET MAXIMUM NUMBER OF BUFFERS HE COULD HAVE
064262 / 261140,,000015          PUSH    P,000015             ;; AND SAVE IT
                       UCLS2A:
064263 / 200446,,000003          MOVE DSER,DEVSER(DEVDAT)     ;
064264 / 200646,,000010          MOVE  AC1,DEVOAD(DEVDAT)     ;
064265 / 371003,,000000          SOSL            (P)          ;; DECREMENT MAXIMUM NUMBER OF BUFFERS WE WILL LOOK AT
153045 / 331015,,000000         SKIPL            (AC1)        ;
064266 / 256200,,153045          XCTR   XR,153045             ;; NO. HAS SERVICE ROUTINE WRITTEN
                       ;ITS NEXT BUFFER YET?
064267 / 254000,,064277          JRST      064277             ;;YES
                       ;NO. START OUTPUT DEVICE.
064270 / 620000,,760000           TRZ      760000             ;
064271 / 261140,,000014          PUSH  PDP,000014             ;; SAVE UUO
064272 / 260151,,000002         PUSHJ  PDP,   DOU(DSER)       ;
064273 / 262140,,000014           POP  PDP,000014             ;; RESTORE UUO
064274 / 260140,,046160         PUSHJ  PDP,046160             ;;WAIT TILL MOST BUFFERS FILLED
064275 / 606000,,760000          TRNN      760000             ;;ERROR?
064276 / 254000,,064263          JRST      064263             ;;RETURN WHEN ALL EMPTIED
                       ; CLOSE - CALL DEVICE DEPENDENT ROUTINE
                       ;OF SHUFFLING REQUIRED STOPS DEVICE
                       UCLS2B:
151763 / 000001,,000001           XWD 1,1                     ;
064277 / 274140,,151763           SUB    P,151763             ;; NORMALIZE STACK, THROW AWAY MAXIMUM BUFFER COUNT
064300 / 200446,,000003          MOVE DSER,DEVSER(DEVDAT)     ;
064301 / 260151,,000001         PUSHJ  PDP,   DCL(DSER)       ;;CLOSE OUTPUT BUFFER
064302 / 554246,,000006          HLRZ  DAT,DEVBUF(DEVDAT)     ;
064303 / 515040,,400000         HRLZI  TAC, IOUSE             ;
151362 / 436045,,000000          IORM  TAC,      (DAT)        ;
064304 / 256240,,151362          XCTR  XRW,151362             ;
151335 / 402005,,000002         SETZM           2(DAT)        ;
064305 / 256040,,151335          XCTR   XW,151335             ;
064306 / 260140,,046160         PUSHJ  PDP, WAIT1             ;
064307 / 661300,,001000           TLO DEVDAT,001000             ;;SET OCLOSB AFTER OUTPUT IS COMPLETE
                       UCLS3:
064310 / 502312,,024071          HLLM DEVDAT,USRJDA(UCHN)       ;
064311 / 263140,,000000          POPJ  PDP,                   ;;EXIT THIS UUO
                       UCLS6:
064312 / 205040,,202000         MOVSI  TAC,202000             ;;ALWAYS CALL DEVICE ROUTINE FOR DISK AND IMP
064313 / 612046,,000004          TDNE  TAC,DEVMOD(DEVDAT)     ;
064314 / 254000,,064244          JRST       UCLS7             ;
064315 / 254000,,064310          JRST       UCLS3             ;
                       ; INBUF - CALLING SEQUENCE
                       ;	INBUF D,N
                       ;	EXIT		RETURNS HERE IF MEMORY NOT EXCEEDED
                       ;CALLING SEQUENCE
                       ;	OUTBUF D,N
                       ;	EXIT		RETURNS HERE IF MEMORY NOT EXCEEDED
                       ; SETS UP AN N BUFFER RING FOLLOWING THE USER'S PROGRAM FOR DEVICE
                       ; D AND INITIALIZES THE JOB BUFFER AREA HEADER:
                       ;	JBFADR0:=1,	JBFADR 1-17:=0
                       ;	JBFADR 18-35:=ADDRESS OF FIRST BUFFER IN RING
                       ;INPUT SETS DEVIAD:=ADDRESS OF FIRST BUFFER IN RING
                       ;OUTPUT SET DEVOAD:=ADDRESS OF FIRST BUFFER IN RING
                       ;BUFPNT IS RESTORED.
                       ; SET UP BUFFERS OF USER-SPECIFIED LENGTH
                       UOUTBF:
064316 / 607300,,100000          TLNN DEVDAT,100000             ;; SEE IF THERE EXISTS AN OUTPUT BUFFER HEADER
064317 / 254000,,064403          JRST      064403             ;; NO HEADER, GIVE ERROR MESSAGE
064320 / 661300,,000200           TLO DEVDAT,000200             ;; FLAG OUTBUF UUO DONE
064321 / 261140,,000012          PUSH  PDP,000012             ;;SAVE BUFPNT ON STACK
064322 / 260140,,044733         PUSHJ  PDP,044733             ;;SET UP BUFFER RING
                       UOBF2:
064323 / 544046,,000006           HLR  TAC,DEVBUF(DEVDAT)     ;;TAC:=OUTPUT BUFFER AREA HEADER ADDRESS
064324 / 542506,,000010          HRRM BUFPNT,DEVOAD(DEVDAT)     ;;DEVOAD:=ADDRESS OF FIRST BUFFER
                       ;IN RING
                       UOBF1:
152600 / 202501,,000000         MOVEM BUFPNT,      (TAC)        ;
064325 / 256040,,152600          XCTR   XW,152600             ;
                       ;JBFADR:=IOUSE,ADDRESS OF FIRST BUFFER
                       ;IN RING
064326 / 135040,,037573           LDB  TAC,PUUOAC             ;
064327 / 202301,,024071         MOVEM DEVDAT,USRJDA(TAC)        ;
064330 / 262140,,000012           POP  PDP,000012             ;;RESTORE BUFPNT FROM STACK
064331 / 263140,,000000          POPJ  PDP,                   ;;EXIT THIS UUO
                       UINBF:
064332 / 607300,,200000          TLNN DEVDAT,200000             ;; IS THERE AN INPUT BUFFER HEADER?
064333 / 254000,,064417          JRST      064417             ;; NO, ERROR
064334 / 661300,,000400           TLO DEVDAT,000400             ;; FLAG INBUF UUO DONE
064335 / 261140,,000012          PUSH  PDP,000012             ;;SAVE BUFPNT ON STACK
064336 / 260140,,044733         PUSHJ  PDP,044733             ;;SET UP BUFFER RING
                       UINBF1:
064337 / 542506,,000007          HRRM BUFPNT,DEVIAD(DEVDAT)     ;;DEVIAD:=ADDRESS OF FIRST BUFFER
                       ;IN RING
064340 / 540046,,000006           HRR  TAC,DEVBUF(DEVDAT)     ;;TAC:=INPUT BUFFER AREA HEADER ADDRESS
064341 / 254000,,064325          JRST       UOBF1             ;
                       ; UINBF - CALLING SEQUENCE . . .
                       ;	UINBF D,ADR
                       ; WHERE D IS CHANNEL NUMBER AND ADR IS ADDRESS OF TWO WORD BLOCK
                       ; THE FIRST WORD OF WHICH IS THE NUMBER OF BUFFERS YOU WANT
                       ; THE SECOND WORD IS THE LENGTH OF EACH BUFFER
                       ; SAME FOR UOUTBF.
                       MINBF:
064342 / 260140,,057273         PUSHJ  PDP,057273             ;; GIVE ERROR IF IO TO UNASSIGNED CHANNEL
064343 / 255000,,000000          JFCL                         ;
064344 / 254000,,064353          JRST      CHNERR             ;
064345 / 607300,,200000          TLNN DEVDAT,200000             ;; IS THERE A BUFFER HEADER ADDRESS?
064346 / 254000,,064417          JRST      064417             ;; NO, GO COMPLAIN
064347 / 661300,,000400           TLO DEVDAT, INBFB             ;
064350 / 261140,,000012          PUSH  PDP,BUFPNT             ;
064351 / 260140,,064377         PUSHJ  PDP,064377             ;; DO ALL THE DIRTY
064352 / 254000,,064337          JRST      UINBF1             ;
                       CHNERR:
064353 / 260140,,000316         PUSHJ    P,PUSHIT             ;
064354 / 260140,,044320         PUSHJ    P,044320             ;
064355 / 260140,,044120         PUSHJ    P,DISERR             ;
064356 / 000000,,154725                                       ;
064357 / 000303,,777764        DCPQQQ      777764(P)          ;
064360 / 000000,,153316                                       ;
064361 / 000103,,777773        OCTQQQ      777773(P)          ;
064362 / 000000,,152275                                       ;
064363 / 777777,,777777                                       ;
064364 / 260140,,000341         PUSHJ    P, POPIT             ;
064365 / 265240,,043257           JSP  DAT,UERROR             ;
                       MOUTBF:
064366 / 260140,,057273         PUSHJ  PDP,CHNSET             ;
064367 / 255000,,000000          JFCL                         ;
064370 / 254000,,064353          JRST      CHNERR             ;
064371 / 607300,,100000          TLNN DEVDAT, OBUFB             ;
064372 / 254000,,064403          JRST      ILLOBF             ;
064373 / 661300,,000200           TLO DEVDAT,OUTBFB             ;
064374 / 261140,,000012          PUSH  PDP,BUFPNT             ;
064375 / 260140,,064377         PUSHJ  PDP,MBFSET             ;
064376 / 254000,,064323          JRST       UOBF2             ;
                       MBFSET:
064377 / 200640,,000014          MOVE  AC1,   UUO             ;
151452 / 540615,,000000           HRR  UUO,      (AC1)        ;
064400 / 256200,,151452          XCTR   XR,151452             ;;MAKE UUO LOOK LIKE NORMAL INBUF
152633 / 214055,,000001          MOVM  TAC,     1(AC1)        ;
064401 / 256200,,152633          XCTR   XR,152633             ;;AND PICK UP BUFFER LENGTH
064402 / 254000,,044734          JRST      044734             ;;NOW CLEAR OUT THAT MANY BUFFERS THAT BIG
                       ;;ERROR MESSAGES FOR INBUF, OUTBUF, UINBF, AND UOUTBF UUOS
                       ILLOBF:
064403 / 265040,,043571           JSP  TAC,043571             ;; PRINT A BIT, SET UP TTY DEVDAT
064406 / 260140,,043723         PUSHJ  PDP,043723             ;; PRINT "DEVICE XXX"
064407 / 265040,,043640           JSP  TAC,043640             ;; PRINT MESSAGE AND STOP JOB
                       ILLIBF:
064417 / 265040,,043571           JSP  TAC,043571             ;; SET UP FOR ERROR PRINTOUT
064422 / 260140,,043723         PUSHJ  PDP,043723             ;; PRINT "DEVICE XXX"
064423 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ;OPEN UUO - PERFORMS SAME OPERATION AS INIT
                       ;MAY BE USED EASILY BY REENTRANT PROGRAMS
                       ;CALLING SEQUENCE FROM USER AREA
                       ;	OPEN D,ADR
                       ;	ERROR RETURN
                       ;	DEVICE INITED
                       ;LH(ADR)=0,RH(ADR)=DATA MODE THIS INIT
                       ;LH(ADR+1)=OUTPUT BUFFER HEADER ADDRESS
                       ;RH(ADR+1)=INPUT BUFFER HEADER ADDRESS
                       ;C(ADR+2,...,ADR+5)=SAME AS LOOKUP OR ENTER
                       UOPEN:
153034 / 330014,,000002          SKIP           2(UUO)        ;
064433 / 256200,,153034          XCTR   XR,153034             ;; ADDRESS CHECK GOODIE TABLE
064434 / 201254,,000001         MOVEI  DAT,     1(UUO)        ;;SETUP REL ADR OF ARGUMENTS
151451 / 540614,,000000           HRR  UUO,      (UUO)        ;
064435 / 256200,,151451          XCTR   XR,151451             ;;SET UP RH WITH DATA MODE TO LOOK LIKE INIT
064436 / 254000,,064445          JRST      UINIT0             ;
                       ; INIT - CALLING SEQUENCE
                       ;	INIT D,MODUS	D=JOB DEVICE CHANNEL
                       ;			MODUS=IORDEL,IOCON,IOWC,MODE.
                       ;	SIXBIT/NAME/	DEVICE NAME
                       ;	XWD OBUF,IBUF	BUFFER AREA HEADER ADDRESSES
                       ;	EXIT1		DEVICE NOT AVAILABLE
                       ;	EXIT2		DEVICE PROPERLY ASSIGNED
                       ;THE LEFT HALF OF NAME CONTAINS THE THREE LETTER DEVICE MNEMONIC,
                       ;   THE RIGHT HALF IS EITHER ZERO (SYSTEM WILL ASSIGN AN ARBITRARY
                       ;   UNIT) OR NON-ZERO TO REQUEST A SPECIFIC UNIT (LEFT JUSTIFIED).
                       ;IF THE SELECTED DEVICE IS NOT AVAILABLE, CONTROL RETURNS TO EXIT1.
                       ;OTHERWISE, THE DEVICE IS ASSIGNED TO THE USER AND ATTACHED TO HIS
                       ;CHANNEL D.  THE DEVICE IS INITIALIZED IN THE FOLLOWING MANNER AFTER
                       ;IOACT IS ZERO:
                       ;	IOBEG:=1
                       ;	DATA MODE:=BITS 32-35 OF AC UUO
                       ;	IOCON:=BIT 31 OF AC UUO
                       ;	IOWC:=BIT 30 OF AC UUO
                       ;	IORDEL:=BIT 29 OF AC UUO
                       ;	IOACT:=IODEND:=IOBKTL:=IODTER:=IODERR:=IOIMPM:=0
                       ;	JBFADR:=JBFCTR:=0 FOR THE SPECIFIED BUFFERS.
                       ;	DEVBUF:=OBUF,IBUF
                       ; INIT CODE - FIRST FIND DEVICE AND TRY TO ASSIGN IT
                       UINIT:
064437 / 200244,,026620          MOVE  DAT, UUOPC(ITEM)       ;;SETUP DAT WITH REL ADR OF ARGUMENTS TO INIT
064440 / 260140,,064445         PUSHJ    P,064445             ;;DO THE INIT
064441 / 254000,,064443          JRST      064443             ;;NOW SET UP KLUDGEY MULTIPLE SKIP RETURN
064442 / 350004,,026620           AOS       UUOPC(ITEM)       ;;(ONLY AFTER ALL THRU WAITING, ETC.)
064443 / 350004,,026620           AOS       UUOPC(ITEM)       ;
064444 / 254000,,037401          JRST      037401             ;;RETURN WITH ONE MORE SKIP
                       UINIT0:
064445 / 261140,,000005          PUSH  PDP,000005             ;; NOW SAVE POINTER TO ARGUEMENT LIST
                       UINITG:
064446 / 332312,,024071         SKIPE DEVDAT,USRJDA(UCHN)       ;;IS A DEVICE ALREADY ASSIGNED TO THIS CHAN>?
064447 / 313513,,024066         CAMLE UCHN,USRHCU(PID)        ;;YES, IS THIS CHAN. LESS OR EQUAL TO HIGHEST
                       ;CHAN. FOR THIS USER?
064450 / 254000,,064456          JRST      064456             ;;NO, NO PREVIOUS DEVICE TO RELEASE
064451 / 261140,,000014          PUSH  PDP,000014             ;;SAVE UUO
064452 / 261140,,000005          PUSH  PDP,000005             ;;SAVE POINTER TO ARGS.
064453 / 260140,,065470         PUSHJ  PDP,065470             ;;RELEASE PREVIOUS DEVICE ON THIS CHAN.
064454 / 262140,,000005           POP  PDP,000005             ;;RESTORE REL. ADR. OF ARGS.
064455 / 262140,,000014           POP  PDP,000014             ;;RESTORE UUO
                       UINITA:
152454 / 200045,,000000          MOVE  TAC,      (DAT)        ;
064456 / 256200,,152454          XCTR   XR,152454             ;;GET DEVICE NAME FROM USER
                       UINITK:
064457 / 200213,,024061          MOVE    J,   JOB(PID)        ;;JOB NUMBER
064460 / 260140,,044663         PUSHJ    P,044663             ;;SEARCH FOR DEVICE NAME
                       ;(SET SYSDEV BIT IN LH OF
                       ;DEVDAT IF THIS IS SYSTEM TAPE)
064461 / 254000,,064560          JRST      064560             ;; MUST POP DAT OFF THE STACK BEFORE LEAVING
064462 / 200646,,777777          MOVE  AC1,DEVCMR(DDB)        ;
064463 / 603640,,020000          TLNE  AC1,020000             ;;SKIP IF OK TO INIT WITHOUT HAVING ASSIGNED OR INITED
064464 / 254000,,064520          JRST      064520             ;;CHECK IF ASSIGNED
                       UNITAD:
064465 / 200046,,000000          MOVE  TAC,      (DDB)        ;;PHYSICAL DEVICE NAME
064466 / 312040,,151417          CAME  TAC,151417             ;;NOT DISK?
064467 / 312040,,037572          CAME  TAC,037572             ;;SYSTEM TAPE DEVICE?
064470 / 254000,,064474          JRST      064474             ;;NO, DISK OR NOT SYSTEM TAPE
064471 / 352000,,021654          AOSE      021654             ;;SYSTEM TAPE, INCREMENT REQUEST COUNT
064472 / 260140,,046075         PUSHJ  PDP,046075             ;;SYSTEM TAPE BUSY, PUT JOB IN WAIT
064473 / 202200,,026107         MOVEM ITEM,026107             ;;SET THIS JOB AS ONLY USER OF SYSTEM TAPE
                       ;CONTROL C DOES NOT STOP JOB WHILE USING S. T.
                       UINITB:
064474 / 201100,,200000         MOVEI TAC1,200000             ;;TRY TO ASSIGN IT BY PROGRAM
064475 / 260140,,044611         PUSHJ  PDP,ASSASG             ;
064476 / 254000,,064576          JRST      064576             ;;NOT AVAILABLE, SEE IF HE WILL WAIT FOR IT
064477 / 260140,,045352         PUSHJ    P,045352             ;;SET DDB IOS STATUS WORD
064500 / 254000,,064562          JRST      064562             ;;LOSE. ILLEGAL MODE.
064501 / 205000,,000002         MOVSI      000002             ;;FLAG INIT JUST DONE
064502 / 437006,,000002          IORB      DEVIOS(DEVDAT)     ;
                       ;FROM RT. HALF OF UUO
064503 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;GET GOOD BITS
064504 / 603040,,000010          TLNE  TAC,000010             ;;IS IT A TTY?
064505 / 603040,,020000          TLNE  TAC,020000             ;;AND NOT HIS CONSOLE?
064506 / 254000,,064511          JRST      064511             ;;NO
064507 / 205000,,000400         MOVSI       TPMON             ;
064510 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;THEN NOT IN MONITOR MODE ANY MORE
                       UINITL:
064511 / 335013,,024066        SKIPGE      USRHCU(PID)        ;; IS USRHCU SCREWED UP?(NEGATIVE?)
064512 / 402013,,024066         SETZM      USRHCU(PID)        ;; YES, ZERO IT
                       UINITM:
064513 / 317513,,024066          CAMG UCHN,USRHCU(PID)        ;; IS THIS CHANN. > HIGHEST CHANN. IN USE?
064514 / 254000,,064540          JRST      064540             ;;NO
064515 / 350053,,024066           AOS  TAC,USRHCU(PID)        ;;YES, BUMP HIGHEST SO FAR BY ONE
064516 / 402001,,024071         SETZM      USRJDA(TAC)        ;;AND CLEAR IT OUT
064517 / 254000,,064513          JRST      064513             ;;AND KEEP LOOKING
                       UNITAC:
064520 / 261140,,000006          PUSH    P,000006             ;;SAVE MODEL DDB
                       UNTAC1:
064521 / 135640,,037575           LDB  AC1,037575             ;;CHECK FOR ASSIGNED OR INITED ALREADY
064522 / 306644,,000000          CAIN  AC1,      (J)          ;
064523 / 254000,,064536          JRST      064536             ;;SAME JOB MEANS ASSIGNED OR INITED
064524 / 260140,,044713         PUSHJ    P,044713             ;;COME, LET US CONTINUE OUR SEARCH
064525 / 304000,,000000          CAIA                         ;
064526 / 254000,,064521          JRST      064521             ;;GOT ANOTHER, KEEP CHECKING
064527 / 262140,,000006           POP    P,   DDB             ;
064530 / 265040,,043571           JSP  TAC,043571             ;;RAN OUT, HE LOSES
064534 / 260140,,043723         PUSHJ    P,043723             ;;TYPE "DEVICE MUMBLE"
064535 / 254000,,043656          JRST      043656             ;;AT USER/EXEC XXX
                       UNTAD1:
064536 / 262143,,000000           POP    P,      (P)          ;
064537 / 254000,,064465          JRST      UNITAD             ;
                       ; INIT - SET UP BUFFERS AND INITIALIZE THEM
                       UINITC:
064540 / 262140,,000005           POP  PDP,000005             ;;RESTORE POINTER TO ARGUMENT LIST
064541 / 661300,,400000           TLO DEVDAT,400000             ;;SET INIT UUO BIT
151522 / 554105,,000001          HLRZ TAC1,     1(DAT)        ;
064542 / 256200,,151522          XCTR   XR,151522             ;;OUTPUT BUFFER HEADER FROM USER
064543 / 322100,,064547         JUMPE TAC1,064547             ;;WAS ONE SPECIFIED?
064544 / 506106,,000006          HRLM TAC1,DEVBUF(DEVDAT)     ;;YES, SET DEVICE DATA BLOCK
064545 / 661300,,100000           TLO DEVDAT,100000             ;;SET OUTPUT BUFFER SPECIFIED BIT
064546 / 260140,,064732         PUSHJ  PDP,064732             ;;INITIALIZE OUTPUT BUFFER HEADER
                       UINIT4:
151475 / 550105,,000001          HRRZ TAC1,     1(DAT)        ;
064547 / 256200,,151475          XCTR   XR,151475             ;;INPUT BUFFER HEADER FROM USER
064550 / 322100,,064556         JUMPE TAC1,064556             ;;WAS ONE SPECIFIED?
064551 / 542106,,000006          HRRM TAC1,DEVBUF(DEVDAT)     ;;YES, SET DEVICE DATA BLOCK
064552 / 661300,,200000           TLO DEVDAT,200000             ;;SET INPUT BUFFER SPECIFIED BIT
064553 / 205000,,000040         MOVSI      000040             ;;CLEAR END OF FILE FLAG
064554 / 413006,,000002        ANDCAB      DEVIOS(DEVDAT)     ;;AND RETAIN IOS
064555 / 260140,,064732         PUSHJ  PDP,064732             ;;INITIALIZE INPUT BUFFER HEADER
                       UINIT5:
064556 / 202312,,024071         MOVEM DEVDAT,USRJDA(UCHN)       ;;STORE UUO BITS AND  DEVICE
                       ;DATA BLOCK ADDRESS
064557 / 254000,,037401          JRST      037401             ;;SUCCESSFUL RETURN
                       UINXIT:
064560 / 262140,,000005           POP    P,000005             ;; RESTORE STACK LOSER EXIT.
064561 / 263140,,000000          POPJ    P,                   ;
                       UINITR:
064562 / 261140,,000006          PUSH    P,000006             ;;SAVE LOSER DDB
064563 / 265040,,043571           JSP  TAC,ERRPTU             ;
064571 / 260140,,043723         PUSHJ    P, ERNAM             ;
064572 / 250303,,000000          EXCH  DDB,      (P)          ;;SAVE TTY DDB, GET LOSER DDB
064573 / 260140,,065555         PUSHJ    P,065555             ;;RELEASE DEVICE.
064574 / 262140,,000006           POP    P,000006             ;;RESTORE TTY DDB
064575 / 254000,,043656          JRST      043656             ;;SEND THE BEDBUG LETTER
                       ; HERE WE ASK HIM IF HE IS WILLING TO WAIT FOR THE DEVICE
                       ; PUT HIM IN DEVICE WAIT (DWQ) IF HE WANTS TO WAIT
                       ; ROUTINE TO WAIT FOR DEVICE TO BECOME AVAILABLE FOR INIT
                       UINITW:
064576 / 602600,,000400          TRNE  UUO,000400             ;;DOES HE WANT ERROR RETURN?
064577 / 254000,,064560          JRST      064560             ;;YES. GIVE IT NOW
064600 / 200104,,027420          MOVE TAC1,JBTPRV(J)          ;
064601 / 603100,,000001          TLNE TAC1,000001             ;;LOCAL-USER?
064602 / 254000,,064606          JRST      064606             ;;YES BYPASS TEST FOR SPECIAL DEV
064603 / 200106,,777777          MOVE TAC1,DEVCMR(DDB)        ;
064604 / 603100,,040000          TLNE TAC1,DEVLUP             ;
064605 / 254000,,064560          JRST      UINXIT             ;
                       UINTW1:
064606 / 552304,,026220         HRRZM  DDB,JBTDVW(J)          ;; SAVE THE DEVICE DATA BLOCK ADDRESS
064607 / 261140,,000014          PUSH    P,   UUO             ;
064610 / 261144,,026620          PUSH    P, UUOPC(J)          ;
064611 / 261140,,000012          PUSH    P,  UCHN             ;
064612 / 602600,,001000          TRNE  UUO,001000             ;; DO WE ASK HIM?
064613 / 254000,,064646          JRST      064646             ;; NO, WAIT AUTOMATICALLY
                       SETIWT:
064614 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT, SET UP DAT AND DDB
064615 / 550104,,026220          HRRZ TAC1,JBTDVW(J)          ;
064616 / 200102,,000000          MOVE TAC1,      (TAC1)       ;
064617 / 260140,,043730         PUSHJ    P,PRNAME             ;
064620 / 260140,,143040         PUSHJ    P, TYPGO             ;
064621 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
064622 / 051440,,000000        CLRBFI                         ;
064623 / 260140,,042676         PUSHJ    P,INLMES             ;
064632 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
064633 / 260140,,064725         PUSHJ    P,UCTEXT             ;
064634 / 550304,,026220          HRRZ  DDB,JBTDVW(J)          ;; PICK UP DDB ADDRESS OF DESIRED DEVICE
152200 / 020000,,600000           XWD TTYATC,ASSCON!ASSPRG    ;
064635 / 200040,,152200          MOVE  TAC,152200             ;
064636 / 612046,,000004          TDNE  TAC,DEVMOD(DDB)        ;; THE AND OF THESE FOR TTY
064637 / 254000,,064642          JRST       SETRC             ;
064640 / 135400,,037575           LDB  TEM,037575             ;; PICK UP JOB NUMBER
064641 / 322400,,064661         JUMPE  TEM,064661             ;; NOT CLAIMED, WE CAN GET IT
                       SETRC:
064642 / 312100,,151572          CAME TAC1,151572             ;
064643 / 316100,,151573          CAMN TAC1,151573             ;
064644 / 304000,,000000          CAIA                         ;
064645 / 254000,,064674          JRST      SETNOW             ;
                       SETWAT:
064646 / 201100,,000007         MOVEI TAC1,   DWQ             ;
064647 / 212104,,020574         MOVNM TAC1,JOBQUE(J)          ;
064650 / 260140,,046124         PUSHJ    P,WSCHED             ;
064651 / 550304,,026220          HRRZ  DDB,JBTDVW(J)          ;
152200 / 020000,,600000           XWD TTYATC,ASSCON+ASSPRG    ;
064652 / 200040,,152200          MOVE  TAC,152200             ;
064653 / 612046,,000004          TDNE  TAC,DEVMOD(DDB)        ;
064654 / 254000,,064646          JRST      064646             ;;LOSE
064655 / 135400,,037575           LDB  TEM, PJOBN             ;
064656 / 322400,,064661         JUMPE  TEM, GOTIT             ;
064657 / 302404,,000000          CAIE  TEM,      (J)          ;
064660 / 254000,,064646          JRST      SETWAT             ;
                       GOTIT:
064661 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
064662 / 051440,,000000        CLRBFI                         ;
064663 / 260140,,042676         PUSHJ    P,INLMES             ;
064666 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
064667 / 262140,,000012           POP    P,  UCHN             ;
064670 / 262144,,026620           POP    P, UUOPC(J)          ;
064671 / 262140,,000014           POP    P,   UUO             ;
064672 / 200243,,000000          MOVE  DAT,      (P)          ;
064673 / 254000,,064446          JRST      UINITG             ;
                       ; DEVICE WAIT - CAN'T GET IT, SEE IF HE WANTS DISK
                       SETNOW:
064674 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
064675 / 051440,,000000        CLRBFI                         ;
064676 / 260140,,042676         PUSHJ    P,INLMES             ;
064704 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
064705 / 260140,,064725         PUSHJ    P,UCTEXT             ;
064706 / 326100,,064714         JUMPN TAC1,SETERY             ;
                       SETERX:
064707 / 262140,,000012           POP    P,  UCHN             ;
064710 / 262144,,026620           POP    P, UUOPC(J)          ;
064711 / 262140,,000014           POP    P,   UUO             ;
064712 / 550304,,026220          HRRZ  DDB,JBTDVW(J)          ;;IN CASE WE NEED THIS ANYWAY (FOR ERR PRINT)
064713 / 254000,,064560          JRST      UINXIT             ;
                       SETERY:
064714 / 312100,,151572          CAME TAC1,151572             ;
064715 / 316100,,151573          CAMN TAC1,151573             ;
064716 / 304000,,000000          CAIA                         ;
064717 / 254000,,064707          JRST      SETERX             ;
064720 / 205040,,446353         MOVSI  TAC,446353             ;
064721 / 262140,,000012           POP    P,  UCHN             ;
064722 / 262144,,026620           POP    P, UUOPC(J)          ;
064723 / 262140,,000014           POP    P,   UUO             ;
064724 / 254000,,064457          JRST      UINITK             ;
                       UCTEXT:
064725 / 051200,,000051        INCHWL      000051             ;; INPUT A CHARACTER WHICH WE WILL THROW AWAY!
064726 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;; SET UP ADDRESS OF DATA BUFFER
064727 / 260140,,042552         PUSHJ    P,CTEXT1             ;
064730 / 260140,,051443         PUSHJ    P,051443             ;; MOVE OUT TO END OF LINE
064731 / 263140,,000000          POPJ    P,                   ;
                       ;CALLING SEQUENCE
                       ;	PUSHJ PDP,UINITZ
                       ;	EXIT		RETURNS HERE IF MEMORY NOT EXCEEDED.
                       ;SETS JBFADR:=JBFCTR:=0 FOR THE BUFFER AREA HEADER WHOSE ADDRESS
                       ;IS IN AC TAC1.  ALSO,JBFPTR 0-5:=JBFPTR 12-17:=0,JBFPTR 6-11:=BYTE SIZE
                       UINITZ:
151333 / 402002,,000000         SETZM            (TAC1)       ;
064732 / 256040,,151333          XCTR   XW,151333             ;; CLEAR FIRST WORD OF BUFFER HEADER
151334 / 402002,,000002         SETZM           2(TAC1)       ;
064733 / 256040,,151334          XCTR   XW,151334             ;; AND LAST WORD OF BUFFER HEADER
064734 / 261140,,000002          PUSH    P,  TAC1             ;
064735 / 260140,,045403         PUSHJ    P,045403             ;; SET BYTE SIZE ACCORDING TO MODE
064736 / 621040,,770077           TLZ  TAC,770077             ;
064737 / 262140,,000002           POP    P,  TAC1             ;
151434 / 502042,,000001          HLLM  TAC,     1(TAC1)       ;
064740 / 256240,,151434          XCTR  XRW,151434             ;
064741 / 263140,,000000          POPJ    P,                   ;;RETURN
                       ;LONG DISPATCH TABLE UUOS - GET HERE ONLY IF DEVICE HAS LONG
                       ;DISPACTH TABLE
                       ;DISPACTH TO DEVICE DEPENDENT SERVICE ROUTINE
                       ;ENTER UUO - ENTER FILE NAME IN DIRECTORY
                       UDEN:
064742 / 201040,,000002         MOVEI  TAC, CLSIN             ;
064743 / 607300,,020000          TLNN  DDB,020000             ;; HAS THIS FILE BEEN OPENED FOR WRITING?
064744 / 254000,,064747          JRST      064747             ;; NO, SUPRESS CALL ON CLOSE CODE
064745 / 607300,,001000          TLNN DEVDAT,001000             ;;FILE OPEN?
064746 / 260140,,064767         PUSHJ  PDP,064767             ;;YES. CLOSE IT.
                       UDEN1:
064747 / 661000,,000002           TLO       IOBEG             ;
064750 / 620000,,776000           TRZ      776000             ;
064751 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
064752 / 661300,,020000           TLO DEVDAT, ENTRB             ;
064753 / 621300,,001000           TLZ DEVDAT,OCLOSB             ;
064754 / 502312,,024071          HLLM DEVDAT,USRJDA(UCHN)       ;;STORE UUO BITS
064755 / 254011,,000004          JRST         DEN(DSER)       ;
                       ;LOOKUP UUO - LOOKUP FILE NAME IN DIRECTORY
                       UDLK:
064756 / 201040,,000001         MOVEI  TAC,CLSOUT             ;
064757 / 607300,,002000          TLNN DEVDAT,002000             ;;FILE OPEN?
064760 / 260140,,064767         PUSHJ  PDP,064767             ;;YES. CLOSE IT
152025 / 000040,,776000           XWD IOEND,776000            ;
064761 / 630000,,152025           TDZ      152025             ;
064762 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
064763 / 661300,,040000           TLO DEVDAT, LOOKB             ;
064764 / 621300,,002000           TLZ DEVDAT,ICLOSB             ;
064765 / 502312,,024071          HLLM DEVDAT,USRJDA(UCHN)       ;;STORE UUO BITS
064766 / 254011,,000005          JRST         DLK(DSER)       ;
                       UDLKC:
064767 / 261140,,000014          PUSH  PDP,   UUO             ;
064770 / 541601,,000000          HRRI  UUO,      (TAC)        ;
064771 / 260140,,064156         PUSHJ  PDP,CLOSE1             ;
064772 / 262140,,000014           POP  PDP,   UUO             ;
064773 / 254000,,046160          JRST       WAIT1             ;
                       ;RENAME UUO - HERE ON SHORT DISPATCH TABLE DEVICES TOO
                       URENAM:
064774 / 200046,,000004          MOVE  TAC,DEVMOD(DEVDAT)     ;;IS THIS DEVICE A LONG DISPATCH TABLE?
064775 / 603040,,001000          TLNE  TAC, DVLNG             ;
064776 / 254011,,000013          JRST         DRN(DSER)       ;;YES, DISPATCH TO SERVICE ROUT.
064777 / 254000,,037401          JRST      037401             ;;NO. GIVE SKIP RETURN TO USER
                       ;SETO UUO - SET NEXT OUTPUT BLOCK NUMBER(DECTAPE)
                       UDSO:
065000 / 254011,,000010          JRST         DSO(DSER)       ;
                       ;SETI UUO - SET NEXT INPUT BLOCK NUMBER
                       UDSI:
065001 / 254011,,000011          JRST         DSI(DSER)       ;
                       ;GETF UUO - GET NEXT FREE BLOCK
                       UDGF:
065002 / 254011,,000012          JRST         DGF(DSER)       ;
                       ;MTAPE UUO - MAGTAPE OPERATIONS
                       UMTAPE:
065003 / 254011,,000016          JRST         DMT(DSER)       ;
                       ;UTPCLR - CLEAR DECTAPE DIRECT.
                       UTPCLR:
065004 / 200046,,000004          MOVE  TAC,DEVMOD(DEVDAT)     ;;IS THIS A LONG DISPATCH TABLE?
065005 / 607040,,001000          TLNN  TAC, DVLNG             ;
065006 / 263140,,000000          POPJ  PDP,                   ;;NO,RETURN
065007 / 254011,,000015          JRST        DCLR(DSER)       ;;YES, DISPATCH
                       ;INPUT UUO
                       ;1)  IF OUTPUT ACTIVE ON THIS CHANNEL, WAIT FOR IT TO COMPLETE.
                       ;2)  IF DUMP MODE, WAIT FOR DEVICE INACTIVE, CALL SERVICE
                       ;	ROUTINE TO START INPUT, WAIT TILL COMPLETE, THEN RETURN TO USER.
                       ;3)  IF NO BUFFER RING SETUP, SET UP 2 RING BUFFER.
                       ;4)  IF FIRST REFERENCE, START SERVICE ROUTINE, GO TO
                       ;5)  FLAG CURRENT BUFFER AS FREE TO RECEIVE MORE INPUT
                       ;	(USE BIT SET TO 0).
                       ;	START SERVICE ROUTINE FILLING FIRST BUFFER WITH USE BIT 0
                       ;	(NEXT BUFFER OR ONE AHEAD OF IT)
                       ;	(SERVICE ROUTINE WILL SET USE BIT WHEN IT FINISHES FILLING
                       ;	BUFFER).
                       ;7)  IF NEXT INPUT BUFFER IS FULL OF DATA, GO TO 10).
                       ;8)  PUT JOB IN IO WAIT TILL NEXT BUFFER FILLED.
                       ;9)  IF NEXT INPUT BUFFER STILL NOT FILLED, CHECK FOR END
                       ;	OF FILE OR ERROR BITS SET BY SERVICE ROUTINE.
                       ;10) CONVERT WORD COUNT AS STORED BY SERVICE ROUTINE IN THIRD
                       ;	WORD OF BUFFER TO ITEM COUNT AND STORE IN THIRD WORD
                       ;	OF HEADER (ITEM COUNT) ALSO SET BYTE POINTER (SECOND
                       ;	WORD OF HEADER) AND RETURN TO USER.
                       ; HERE IF INPUT NEEDS LOOKUP. GET FILE NAME FROM LOSER.
                       SETFIL:
065010 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
065011 / 051440,,000000        CLRBFI                         ;
065012 / 260140,,042676         PUSHJ    P,INLMES             ;
065020 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
065021 / 051200,,000051        INCHWL      JOBTM5             ;
065022 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;GODDAMN SYSTEM
065023 / 260140,,042552         PUSHJ    P,042552             ;; READ IN FILE NAME IF ANY
065024 / 326100,,065027         JUMPN TAC1, NOCLR             ;
                       CLRIN:
065025 / 260140,,051443         PUSHJ    P,SKPBRK             ;
065026 / 254000,,065010          JRST      065010             ;
                       NOCLR:
065027 / 202107,,000045         MOVEM TAC1,JOBTM1(PROG)       ;
065030 / 260140,,042552         PUSHJ    P,CTEXT1             ;
065031 / 512107,,000046         HLLZM TAC1,JOBTM2(PROG)       ;
065032 / 402007,,000047         SETZM      JOBTM3(PROG)       ;
065033 / 260140,,042777         PUSHJ    P,PJPGNO             ;
153507 / 336704,,030020         SKIPN  AC2,DSKPPN(J)          ;;DA, WHICH WAY DID 'E GO BOSS
153510 / 200704,,027720          MOVE  AC2,PRJPRG(J)          ;
153511 / 254000,,153512          JRST      153512             ;
065034 / 254000,,153507          JRST      153507             ;
065035 / 202707,,000050         MOVEM  AC2,JOBTM4(PROG)       ;
065036 / 260140,,051443         PUSHJ    P,SKPBRK             ;
065037 / 263140,,000000          POPJ    P,                   ;
                       IN:
065040 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
065041 / 603040,,200000          TLNE  TAC, DVDSK             ;
065042 / 603300,,040000          TLNE  DDB,040000             ;; DOES THIS DEVICE NEED A LOOKUP?
065043 / 254000,,065105          JRST      065105             ;; NO, FORGET IT.
065044 / 261140,,000014          PUSH    P,   UUO             ;
065045 / 261144,,026620          PUSH    P, UUOPC(J)          ;
065046 / 261140,,000012          PUSH    P,  UCHN             ;
065047 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
065050 / 051440,,000000        CLRBFI                         ;
065051 / 260140,,042676         PUSHJ    P,INLMES             ;
065056 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
                       IN4:
065057 / 260140,,065010         PUSHJ    P,065010             ;
152313 / 076000,,000045        LOOKUP      JOBTM1             ;
065060 / 200600,,152313          MOVE  UUO,152313             ;
065061 / 200503,,000000          MOVE UCHN,      (P)          ;
065062 / 137500,,037573           DPB UCHN,PUUOAC             ;
065063 / 256000,,000014           XCT         UUO             ;
065064 / 304000,,000000          CAIA                         ;
065065 / 254000,,065077          JRST         IN5             ;
065066 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
065067 / 051440,,000000        CLRBFI                         ;
065070 / 260140,,042676         PUSHJ    P,INLMES             ;
065075 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
065076 / 254000,,065057          JRST         IN4             ;
                       IN5:
065077 / 262140,,000012           POP    P,  UCHN             ;
065100 / 262144,,026620           POP    P, UUOPC(J)          ;
065101 / 262140,,000014           POP    P,   UUO             ;
065102 / 200312,,024071          MOVE  DDB,USRJDA(UCHN)       ;
065103 / 550446,,000003          HRRZ DSER,DEVSER(DDB)        ;
065104 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
                       ; INPUT UUO - HERE, WE ARE SATISFIED DEVICE IS PROPERLY LOOKED UP
                       IN2:
065105 / 603000,,000020          TLNE      000020             ;;IS THIS DEVICE ALREADY DOING OUTPUT?
065106 / 260140,,046160         PUSHJ  PDP,046160             ;;YES, WAIT TILL IT IS FINISHED.
065107 / 661300,,010000           TLO DEVDAT,010000             ;;FOR THIS DEVICE.
065110 / 621300,,002000           TLZ DEVDAT,ICLOSB             ;
065111 / 502312,,024071          HLLM DEVDAT,USRJDA(UCHN)       ;;IN LH OF CURRENT JOB DEVICE CHANNEL
065112 / 135040,,037574           LDB  TAC,037574             ;;IO MODE
065113 / 302040,,000002          CAIE  TAC,000002             ;;SAVE MODE?
065114 / 301040,,000015          CAIL  TAC,000015             ;;IT THE IO MODE DUMP(SD,D,DR)?
065115 / 254000,,065206          JRST      065206             ;;YES
065116 / 607300,,200000          TLNN DEVDAT,200000             ;;INPUT BUFFER HEADER SPECIFIED IN INIT?
065117 / 254000,,043211          JRST      043211             ;;NO, FLUSH THE BASTARD!
                       IN1:
065120 / 540246,,000006           HRR JBUF,DEVBUF(DDB)        ;;NO, GET ADDRESS OF BUFFER HEADER
065121 / 205040,,400000         MOVSI  TAC,400000             ;;BUFFER IN USE BIT
065122 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET A NEW COPY OF IOS
153115 / 337005,,000000         SKIPG            (JBUF)       ;
065123 / 256200,,153115          XCTR   XR,153115             ;;HAS A BUFFER RING BEEN SET UP (RH NON-ZERO)
                       ;WHICH HAS BEEN REFERENCED BY PREVIOUS INPUT (BIT0=0)
065124 / 254000,,065170          JRST      065170             ;;NO. GO SET UP BUFFER IF NECESSARY AND DO FIRST IO
065125 / 260140,,065227         PUSHJ    P,065227             ;;CHECK BUFFERS!
065126 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK
152465 / 200105,,000000          MOVE TAC1,      (JBUF)       ;
065127 / 256200,,152465          XCTR   XR,152465             ;
065130 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;DEC 3.16
151547 / 616042,,000000          TDNN  TAC,      (TAC1)       ;
065131 / 256200,,151547          XCTR   XR,151547             ;;DEC 3.16
065132 / 254000,,065155          JRST      065155             ;;DEC 3.16
151351 / 413042,,000000        ANDCAB  TAC,      (TAC1)       ;
065133 / 256240,,151351          XCTR  XRW,151351             ;
                       ;FLAG CURRENT BUFFER AS FREE TO
                       ;RECEIVE MORE INPUT, CLEAR USE BIT
                       ;AND GET POINTER TO NEXT BUFFER
151454 / 542045,,000000          HRRM  TAC,      (JBUF)       ;
065134 / 256240,,151454          XCTR  XRW,151454             ;;SET WORD 1 IN 3 WORD HEADER TO NEXT BUFFER
065135 / 602000,,010000          TRNE      010000             ;;IS THE DEVICE ALREADY ACTIVE
065136 / 254000,,065144          JRST      065144             ;;YES
065137 / 200646,,000004          MOVE  AC1,DEVMOD(DEVDAT)     ;;GET DEVICE CHARACTERISTIC WORD
065140 / 607640,,000010          TLNN  AC1,000010             ;;IS IT A TTY?
151445 / 540041,,000000           HRR  TAC,      (TAC)        ;
065141 / 256200,,151445          XCTR   XR,151445             ;;GET POINTER 1 BUFFER AHEAD OF NEXT BUFFER
                       ;IF NOT TTY.
153040 / 331001,,000000         SKIPL            (TAC)        ;
065142 / 256200,,153040          XCTR   XR,153040             ;;IS THE USE BIT SET?
065143 / 260140,,065210         PUSHJ    P,065210             ;;NO, START SERVICE ROUTINE FILLING EMPTY BUFFER
                       ; INPUT UUO CONT.
                       INPT0C:
151446 / 540102,,000000           HRR TAC1,      (TAC1)       ;
065144 / 256200,,151446          XCTR   XR,151446             ;;GET USE BIT FOR NEXT BUFFER
                       INPT0A:
153070 / 335002,,000000        SKIPGE            (TAC1)       ;
065145 / 256200,,153070          XCTR   XR,153070             ;;IS USE BIT SET YET?(BUFFER FILLED YET?)
065146 / 254000,,065152          JRST      065152             ;;YES, RETURN IMMEDIATELY TO USER
                       INPT2:
                       ;DEC 3.16
065147 / 260140,,046176         PUSHJ    P,046176             ;;NO, PUT JOB IN IO WAIT TILL BUFFER FILLED.
153041 / 331002,,000000         SKIPL            (TAC1)       ;
065150 / 256200,,153041          XCTR   XR,153041             ;;RETURN WHEN BUFFER FILLED. CHECK TO MAKE SURE.
065151 / 254000,,065160          JRST      065160             ;;NO, MUST BE EOF OR ERROR
                       INPUT2:
065152 / 271100,,000001          ADDI TAC1,000001             ;;YES, GET WORD COUNT AS SET BY IO SERVICE
151500 / 550202,,000000          HRRZ ITEM,      (TAC1)       ;
065153 / 256200,,151500          XCTR   XR,151500             ;;RH OF 3RD WORD(FIRST SO-CALLED DATA WORD)
065154 / 364100,,045322          SOJA TAC1,045322             ;;SET ITEM COUNT AND BYTE POINTER
                       ;IN 3 WORD HEADER AND RETURN TO USER
                       INPT1:
065155 / 606000,,010000          TRNN      010000             ;;DEC 3.16
065156 / 260140,,065210         PUSHJ    P,065210             ;;DEC 3.16
065157 / 254000,,065147          JRST      065147             ;;DEC 3.16
                       INEOF:
152024 / 000040,,760000           XWD IOEND,IODEND!IODERR!IOBKTL!IODTER!IOIMPM ;
065160 / 616000,,152024          TDNN      152024             ;
                       ;EOF OR ERROR BIT SET BY SERVICE ROUTINE
065161 / 254000,,065166          JRST      065166             ;;NO,
065162 / 603000,,000040          TLNE      000040             ;;IS THIS EOF?
065163 / 660000,,020000           TRO      020000             ;;YES, SET USER EOF BIT.
065164 / 436006,,000002          IORM      DEVIOS(DDB)        ;
065165 / 263140,,000000          POPJ    P,                   ;;RETURN TO USER'S PROGRAM
                       INEOFE:
065166 / 265240,,043257           JSP  DAT,043257             ;;MONITOR ERROR AT UUO LEVEL
065167 / 263140,,000000          POPJ    P,                   ;
                       ;HERE ON FIRST INPUT AFTER INIT, INIT & LOOKUP, OR INIT & LOOKUP & INPUT
                       INPUTF:
151352 / 413045,,000000        ANDCAB  TAC,      (JBUF)       ;
065170 / 256240,,151352          XCTR  XRW,151352             ;
                       ;MARK THAT BUFFERS HAVE BEEN REFER
                       ;BY CLEARING SIGN BIT OF 1ST WORD IN 3 WORD
                       ;IN 3 WORD BUFFER HEADER
065171 / 322040,,065202         JUMPE  TAC,065202             ;;HAS A RING BEEN SET UP YET?
065172 / 260140,,065227         PUSHJ    P,BCHECK             ;
065173 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK
152465 / 200105,,000000          MOVE TAC1,      (JBUF)       ;
065174 / 256200,,152465          XCTR   XR,152465             ;
153114 / 337002,,000000         SKIPG            (TAC1)       ;
065175 / 256200,,153114          XCTR   XR,153114             ;
065176 / 254000,,065152          JRST      INPUT2             ;
065177 / 542046,,000007          HRRM  TAC,DEVIAD(DDB)        ;;YES, STORE ADR. OF 2ND WORD OF
                       ;A BUFFER FOR SERVICE ROUTINE
065200 / 260140,,065210         PUSHJ    P,065210             ;;YES. GO START IO SERVICE ROUTINE
                       ;FILLING BUFFER
065201 / 254000,,065145          JRST      INPT0A             ;
                       INPUT3:
065202 / 541600,,000002          HRRI  UUO,000002             ;;BUFFERS NOT SETUP YET. - MAKE 2
065203 / 260140,,064332         PUSHJ    P, UINBF             ;
065204 / 541600,,000000          HRRI  UUO,                   ;;CLEAR RIGHT HALF
065205 / 254000,,065120          JRST         IN1             ;
                       INDMP:
065206 / 260151,,000007         PUSHJ    P,   DDI(DSER)       ;;CALL SERVICE ROUTINE
065207 / 254000,,046176          JRST      046176             ;;THEN WAIT TILL IO  FINISHED BEFORE
                       ;RETURNING TO USER.
                       ;*** NOTE: ADCSER THINKS IT CAN RETURN
                       ; TO USER WITHOUT WAITING BY
                       ; A `JRST TPOPJ', THUS SKIPPING WSYNC
                       ; CALL THE DEVICE INPUT ROUTIN
                       CALIN:
065210 / 603000,,000040          TLNE       IOEND             ;
065211 / 263140,,000000          POPJ    P,                   ;
065212 / 261140,,000002          PUSH    P,  TAC1             ;
065213 / 261140,,000005          PUSH    P,  JBUF             ;
065214 / 550646,,000007          HRRZ  AC1,DEVIAD(DDB)        ;;IS FIRST ADR. ABOVE JOB DATA AREA?
065215 / 307640,,000114          CAIG  AC1,JOBPFI             ;
065216 / 254000,,043211          JRST      043211             ;;NO, PRINT ERROR AND STOP JOB
151527 / 554715,,000000          HLRZ  AC2,      (AC1)        ;
065217 / 256200,,151527          XCTR   XR,151527             ;;GET LENGTH OF BUFFER
065220 / 620700,,400000           TRZ  AC2,400000             ;;CLEAR USE BIT IN CASE IT IS ON(TTY)
065221 / 270640,,000016           ADD  AC1,   AC2             ;
152621 / 203015,,000000         MOVES            (AC1)        ;
065222 / 256240,,152621          XCTR  XRW,152621             ;; ADDRESS CHECK LAST ADDRESS OF BUFFER
065223 / 260151,,000003         PUSHJ    P,   DIN(DSER)       ;;DISPATCH TO IO SERVICE ROUTINE
065224 / 262140,,000005           POP    P,  JBUF             ;
065225 / 262140,,000002           POP    P,  TAC1             ;
065226 / 263140,,000000          POPJ    P,                   ;
                       BCHECK:
065227 / 201645,,000000         MOVEI  AC1,      (JBUF)       ;
065230 / 307640,,000114          CAIG  AC1,000114             ;;CHECK PROTECTED PART THIS WAY
065231 / 263140,,000000          POPJ    P,                   ;
152624 / 203655,,000000         MOVES  AC1,      (AC1)        ;
065232 / 256240,,152624          XCTR  XRW,152624             ;;AND THE REST THIS WAY
065233 / 550640,,000015          HRRZ  AC1,   AC1             ;
065234 / 307640,,000114          CAIG  AC1,JOBPFI             ;
065235 / 263140,,000000          POPJ    P,                   ;
152621 / 203015,,000000         MOVES            (AC1)        ;
065236 / 256240,,152621          XCTR  XRW,152621             ;
065237 / 254000,,037401          JRST      CPOPJ1             ;
                       ; OUTPUT UUO - CALLING SEQUENCE
                       ;     OUTPUT D,
                       ;     EXIT
                       ;OR
                       ;     OUTPUT D, ADR
                       ;     EXIT
                       ;IF INPUT IS ACTIVE, WAIT FOR IT TO COMPLETE.
                       ;IF DUMP MODE WAS SELECTED BY THE LAST INIT UUO OR SETSTS UUO
                       ;   THE PROGRAM WAITS UNTIL THE DEVICE IN INACTIVE AND THEN
                       ;   WRITES THE DUMPFILE AND RETURNS CONTROL TO THE USER'S PROGRAM
                       ;   WHEN IO HAS COMPLETED.
                       ;IF THE MODE IS NOT DUMP, THEN
                       ;1) IF ADR IS NOT ZERO, WAIT FOR DEVICE TO BECOME INACTIVE THEN SET THE
                       ;   CURRENT BUFFER ADDRESS EQUAL TO ADR AND AN INDICATOR (JBFADR0)
                       ;   SPECIFYING THAT THIS BUFFER RING HAS NEVER BEEN REFERENCED FROM THE
                       ;   USER'S PROGRAM BY AN INPUT OR AN OUTPUT UUO.  OTHERWISE, GO TO
                       ;   2) DIRECTLY.
                       ;2) IF THE BUFFER RING HAS NEVER BEEN REFERENCED (JBFADR0=1), THE
                       ;   BUFFER IS CLEARED, IOUSE SET TO ZERO AND
                       ;      IF THE CURRENT BUFFER ADDRESS IS ZERO, A TWO BUFFER RING IS SET UP.
                       ;      THEN GO TO 8
                       ;3) IF THE BUFFER RING HAS BEEN REFERENCED (JBFADR0=0	,THEN A CHECK IS
                       ;   MADE TO DETERMINE IF THE WORD COUNT IS TO BE COMPUTED.
                       ;      IF THE WORD COUNT IS TO BE COMPUTED (IOWC=0), IT IS SET EQUAL
                       ;      TO THE ADDRESS FOR THE LAST DATA WORD MINUS THE ADDRESS OF THE
                       ;      BUFFER MINUS ONE.
                       ;4) IOUSE IS SET TO ONE, INDICATING THAT THE BUFFER IS FULL OR BEING
                       ;   EMPTIED, AND THE CURRENT BUFFER ADDRESS IS ADVANCED.
                       ;5) IF THE DEVICE IS NOT ACTIVE (IOACT=0), OUTPUT IS STARTED.
                       ;6) IF THE CURRENT BUFFER IS FULL OR BEING EMPTIED (IOUSE=1),
                       ;   THE PROGRAM WAITS UNTIL THE DEVICE FINISHES THE BUFFER
                       ;   (THE OUTPUT SERVICE ROUTINE CLEARS THE USE BIT WHEN
                       ;   IT FINISHES OUTPUTTING A BUFFER).
                       ;7) THE CURRENT BUFFER IS CLEARED.
                       ;8) THE ITEM POINTER IS INITIATED TO THE CURRENT BUFFER ADDRESS+1
                       ;   AND THE ITEM COUNT IS SET TO THE PRODUCT OF THE BUFFER SIZE
                       ;   MINUS ONE AND THE INTEGER PART OF 36/BYTE SIZE.
                       ;9) RETURN TO THE USER'S PROGRAM
                       ;HERE ON OUTPUT UUO
                       UOUT:
065240 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
065241 / 603040,,200000          TLNE  TAC, DVDSK             ;
065242 / 603300,,020000          TLNE  DDB, ENTRB             ;
065243 / 254000,,065345          JRST       UOUT1             ;
065244 / 261140,,000014          PUSH    P,   UUO             ;
065245 / 261144,,026620          PUSH    P, UUOPC(J)          ;
065246 / 261140,,000012          PUSH    P,  UCHN             ;
065247 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
065250 / 051440,,000000        CLRBFI                         ;
065251 / 260140,,042676         PUSHJ    P,INLMES             ;
065256 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
                       OUT4:
065257 / 260140,,065010         PUSHJ    P,065010             ;
152313 / 076000,,000045        LOOKUP      JOBTM1             ;
065260 / 200600,,152313          MOVE  UUO,152313             ;
065261 / 200503,,000000          MOVE UCHN,      (P)          ;
065262 / 137500,,037573           DPB UCHN,PUUOAC             ;
065263 / 261147,,000050          PUSH    P,JOBTM4(PROG)       ;;LOOKUP CLOBBERS THIS.
065264 / 256000,,000014           XCT         UUO             ;
065265 / 254000,,065312          JRST      065312             ;;DOESN'T EXIST OR ERROR WILL BE DETECTED BY ENTER
065266 / 262147,,000050           POP    P,JOBTM4(PROG)       ;
065267 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
065270 / 051440,,000000        CLRBFI                         ;
065271 / 260140,,042676         PUSHJ    P,INLMES             ;
065301 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
065302 / 051200,,000051        INCHWL      JOBTM5             ;
065303 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;
065304 / 260140,,042552         PUSHJ    P,CTEXT1             ;
065305 / 260140,,051443         PUSHJ    P,SKPBRK             ;
151572 / 710000,,000000                                       ;
065306 / 312100,,151572          CAME TAC1,151572             ;
151573 / 714563,,000000                                       ;
065307 / 316100,,151573          CAMN TAC1,151573             ;
065310 / 254000,,065313          JRST       OURDN             ;
065311 / 254000,,065257          JRST        OUT4             ;
                       OUT5:
065312 / 262147,,000050           POP    P,JOBTM4(PROG)       ;;RESTORE PPN
                       OURDN:
065313 / 513007,,000046         HLLZS      JOBTM2(PROG)       ;
065314 / 402007,,000047         SETZM      JOBTM3(PROG)       ;
152300 / 070000,,000000         CLOSE                         ;
065315 / 200600,,152300          MOVE  UUO,152300             ;
065316 / 200503,,000000          MOVE UCHN,      (P)          ;
065317 / 137500,,037573           DPB UCHN,PUUOAC             ;
065320 / 256000,,000014           XCT      000014             ;;MAKE SURE WE DON'T GET INTO ALTER MODE
152314 / 077000,,000045         ENTER      JOBTM1             ;
065321 / 200600,,152314          MOVE  UUO,152314             ;
065322 / 200503,,000000          MOVE UCHN,      (P)          ;
065323 / 137500,,037573           DPB UCHN,PUUOAC             ;
065324 / 256000,,000014           XCT         UUO             ;
065325 / 304000,,000000          CAIA                         ;
065326 / 254000,,065337          JRST        OUT3             ;
065327 / 260140,,137616         PUSHJ    P,137616             ;; WAIT FOR OUTPUT TO FINISH
065330 / 051440,,000000        CLRBFI                         ;
065331 / 260140,,042676         PUSHJ    P,INLMES             ;
065335 / 260140,,143040         PUSHJ    P,143040             ;; START UP TTY
065336 / 254000,,065257          JRST        OUT4             ;
                       OUT3:
065337 / 262140,,000012           POP    P,  UCHN             ;
065340 / 262144,,026620           POP    P, UUOPC(J)          ;
065341 / 262140,,000014           POP    P,   UUO             ;
065342 / 200312,,024071          MOVE  DDB,USRJDA(UCHN)       ;
065343 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
065344 / 550446,,000003          HRRZ DSER,DEVSER(DDB)        ;
                       ; OUTPUT UUO - HERE WE ARE SATISFIED DEVICE HAS BEEN PROPERLY ENTERED
                       UOUT1:
065345 / 661300,,004000           TLO DEVDAT,004000             ;;SET OUTPUT UUO BIT
065346 / 621300,,001000           TLZ DEVDAT,001000             ;;CLEAR CLOSE OUTPUT BIT
                       ;HERE FROM DEVICE SERVICE ROUTINES ON CLOSE UUO
                       OUT:
065347 / 607000,,000020          TLNN      000020             ;;IS THIS DEVICE ALREADY DOING INPUT?
065350 / 260140,,046160         PUSHJ  PDP,046160             ;;YES, WAIT TILL IT BECOMES INACTIVE
065351 / 502312,,024071          HLLM DEVDAT,USRJDA(UCHN)       ;;SAVE NEW BIT SETTINGS.
065352 / 135040,,037574           LDB  TAC,037574             ;;GET DATA MODE SET BY INIT OR SETSTS.
065353 / 302040,,000002          CAIE  TAC,000002             ;;SAVE MODE?
065354 / 301040,,000015          CAIL  TAC,000015             ;;IS IT DUMP MODE(SD,DR,D)?
065355 / 254000,,065455          JRST      065455             ;;YES.
065356 / 607300,,100000          TLNN  DDB,100000             ;; IS THERE AN OUTPUT BUFFER HEADER?
065357 / 254000,,043211          JRST      043211             ;; NO, ERROR
065360 / 260140,,065457         PUSHJ  PDP,065457             ;;NO, CHECK FOR NON-ZERO ADDRESS(USER
                       ;CHANGING RING)
065361 / 544246,,000006           HLR JBUF,DEVBUF(DEVDAT)     ;;REL. ADDR. OF OUTPUT BUFFER HEADER
153120 / 337105,,000000         SKIPG TAC1,      (JBUF)       ;
065362 / 256200,,153120          XCTR   XR,153120             ;
                       ; CHECK FIRST WORD OF BUFFER HEADER
065363 / 254000,,065435          JRST      065435             ;;RING NOT SET UP OR FIRST REFERENCE TO RING
065364 / 260140,,065227         PUSHJ    P,065227             ;;RING SET-UP, CHECK IT
065365 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK
153114 / 337002,,000000         SKIPG            (TAC1)       ;
065366 / 256200,,153114          XCTR   XR,153114             ;;DID WE SOME HOW GET BACK TO HIM WITH NO FREE BUFFERS? RPH
065367 / 254000,,065417          JRST      065417             ;;YES, LET DEVICE WORRY ABOUT IT!  RPH
065370 / 350000,,000005           AOS      000005             ;;COMPUTE WORD COUNT FROM BYTE POINTER
151467 / 550045,,000000          HRRZ  TAC,      (JBUF)       ;
065371 / 256200,,151467          XCTR   XR,151467             ;;GET RH OF BYTE POINTER.
065372 / 271100,,000001          ADDI TAC1,000001             ;;REL. ADDR. OF 3RD WORD IN BUFFER.
065373 / 336000,,000001         SKIPN      000001             ;;BYTE POINTER INITIALIZED ;DWP(JS)
065374 / 634040,,000001          TDZA  TAC,000001             ;;NO. SET WORD COUNT = 0	  ;DWP(JS)
065375 / 274040,,000002           SUB  TAC,000002             ;;DISTANCE FILLED BY USER.
065376 / 602000,,000020          TRNE      000020             ;;DOES USER WANT SYSTEM TO COMPUTE WORD
                       ;COUNT FROM BYTE POINTER?
065377 / 254000,,065411          JRST      065411             ;;NO.
065400 / 550640,,000002          HRRZ  AC1,000002             ;;YES, PROCEED IF ADDR. OF WORD COUNT IN BOUNDS
065401 / 271641,,000000          ADDI  AC1,      (TAC)        ;;CHECK ENDING ADDRESS.
152621 / 203015,,000000         MOVES            (AC1)        ;
065402 / 256240,,152621          XCTR  XRW,152621             ;
065403 / 360100,,000000           SOJ TAC1,                   ;; BACK UP POINTER TO LENGTH AND LINK WORD
152664 / 000002,,000000                                       ;
152664 / 222102,,000000 POINT 17,02000000,17                  ;
152365 / 135640,,152664           LDB  AC1,152664             ;
065404 / 256040,,152365          XCTR  XLB,152365             ;
065405 / 313040,,000015         CAMLE  TAC,000015             ;; IS THERE MORE DATA THAN THERE IS BUFFER?
065406 / 254000,,043211          JRST      043211             ;; YES, USER ERROR
065407 / 340100,,000000           AOJ TAC1,                   ;; RESET BUFFER WORD COUNT POINTER
151453 / 542042,,000000          HRRM  TAC,      (TAC1)       ;
065410 / 256240,,151453          XCTR  XRW,151453             ;;STORE WORD COUNT IN 3RD WORD OF BUFFER.
                       ; OUTPUT UUO - HERE, WE ADVANCE BUFFER ADDRESS, START OUTPUT, AND WAIT FOR
                       ; OUTPUT TO FINISH BEFORE RETURNING TO USER
                       OUT2:
065411 / 275240,,000001          SUBI JBUF,000001             ;;REL. ADDR. OF 1ST WORD IN HEADER
                       ;(POINTER TO CURRENT BUFFER).
065412 / 275100,,000001          SUBI TAC1,000001             ;;REL. ADDR. OF 2ND WORD IN BUFFER
                       ;(LINK TO NEXT BUFFER).
065413 / 515040,,400000         HRLZI  TAC,400000             ;;FLAG CURRENT BUFFER CONTAINS ACTIVE DATA.
151363 / 437042,,000000          IORB  TAC,      (TAC1)       ;
065414 / 256240,,151363          XCTR  XRW,151363             ;
151454 / 542045,,000000          HRRM  TAC,      (JBUF)       ;
065415 / 256240,,151454          XCTR  XRW,151454             ;;ADVANCE CURRENT BUFFER ADDRESS
151443 / 513005,,000001         HLLZS           1(JBUF)       ;
065416 / 256240,,151443          XCTR  XRW,151443             ;; ZERO OUT RH OF BYTE PTR TO NOTE NOT YET INITIALIZED - DWP (JS) /JAM
                       OUTAGN:
151335 / 402005,,000002         SETZM           2(JBUF)       ;
065417 / 256040,,151335          XCTR   XW,151335             ;;CAN'T USE NEXT BUFFER YET!!   RPH
065420 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;;IS DEVICE ACTIVE?
065421 / 205640,,200000         MOVSI  AC1,200000             ;; CAN WE CALL THIS SERVICE ROUTINE IF IOACT IS ON?
065422 / 616646,,777777          TDNN  AC1,DEVCMR(DEVDAT)     ;; THIS BIT IN THIS WORD WILL TELL US
065423 / 606000,,010000          TRNN       IOACT             ;
065424 / 260151,,000002         PUSHJ  PDP,   DOU(DSER)       ;;NO,START OUTPUT.
065425 / 544246,,000006           HLR JBUF,DEVBUF(DEVDAT)     ;;JBUF TO REL. ADDR. OF BUFFER HEADER
152465 / 200105,,000000          MOVE TAC1,      (JBUF)       ;
065426 / 256200,,152465          XCTR   XR,152465             ;;TAC1 TO REL. ADDR. OF 2ND WORD OF BUFFER.
153041 / 331002,,000000         SKIPL            (TAC1)       ;
065427 / 256200,,153041          XCTR   XR,153041             ;;HAS SERVICE ROUTINE EMPTIED NEXT BUFFER
065430 / 254000,,065447          JRST      065447             ;;YES, CLEAR AND RETURN
065431 / 602000,,740000          TRNE      740000             ;;ANY ERRORS TO SHOW LOSER?   RPH
065432 / 263140,,000000          POPJ    P,                   ;;YES, LET HIM SEE THEM	     RPH
065433 / 260140,,046176         PUSHJ    P,046176             ;;NO, WAIT.
065434 / 254000,,065447          JRST      065447             ;;CLEAR BUFFER AND RETURN TO LOSER, HOPING THAT THE BUFFER IS NOW REALLY FREE
                       OUTF:
153065 / 332105,,000000         SKIPE TAC1,      (JBUF)       ;
065435 / 256200,,153065          XCTR   XR,153065             ;
065436 / 254000,,065442          JRST       OUTF1             ;
065437 / 541600,,000002          HRRI  UUO,     2             ;
065440 / 260140,,064316         PUSHJ  PDP,UOUTBF             ;
065441 / 544246,,000006           HLR JBUF,DEVBUF(DEVDAT)     ;
                       OUTF1:
065442 / 260140,,065227         PUSHJ    P,065227             ;;CHECK BUFFER ADDRESSES
065443 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK
065444 / 205040,,400000         MOVSI  TAC, IOUSE             ;
151352 / 413045,,000000        ANDCAB  TAC,      (JBUF)       ;
065445 / 256240,,151352          XCTR  XRW,151352             ;;IOUSE:=0
065446 / 542046,,000010          HRRM  TAC,DEVOAD(DEVDAT)     ;
                       OUTS:
151467 / 550045,,000000          HRRZ  TAC,      (JBUF)       ;
065447 / 256200,,151467          XCTR   XR,151467             ;;CLEAR NEXT OUTPUT BUFFER.
065450 / 260140,,045020         PUSHJ    P,045020             ;;BEING CLEARED.
065451 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK
151447 / 540105,,000000           HRR TAC1,      (JBUF)       ;
065452 / 256200,,151447          XCTR   XR,151447             ;
152664 / 000002,,000000                                       ;
152664 / 222102,,000000 POINT 17,02000000,17                  ;
152362 / 135200,,152664           LDB ITEM,152664             ;
065453 / 256040,,152362          XCTR  XLB,152362             ;
065454 / 364200,,045322          SOJA ITEM,IOSETC             ;
                       ;ADDRESS+1
                       ;JBFCTR:=(BUFFER SIZE-1)*[36/BYTE
                       ;SIZE]
                       ;RETURN TO USER'S PROGRAM
                       OUTDMP:
065455 / 260151,,000006         PUSHJ  PDP,   DDO(DSER)       ;
                       ;NOTE THAT XGPSER (AND ADCSER) THINKS IT CAN RETURN
                       ;WITHOUT WAITING BY JRST TPOPJ
065456 / 254000,,046176          JRST      046176             ;;WAIT BEFORE RETURNING TO USER
                       ; SUBROUTINE FOR OUTPUT UUO
                       ;CALLING SEQUENCE:
                       ;	PUSHJ PDP,OUTA
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;IF THE ADDRESS FIELD OF AC UUO IS ZERO,EXIT. OTHERWISE,CHECK IOACT.
                       ;IF IOACT=1, WAIT FOR IOACT=0.
                       ;SET JBFADR18-35:=ADDRESS FIELD OF AC UUO. JBFADR0:=1 AND EXIT.
                       OUTA:
065457 / 606600,,777774          TRNN  UUO,777774             ;;IS BUFFER ADDRESS SPECIFIED?
065460 / 263140,,000000          POPJ    P,                   ;;NO
065461 / 260140,,046160         PUSHJ    P, WAIT1             ;
065462 / 544246,,000006           HLR JBUF,DEVBUF(DDB)        ;
151460 / 542605,,000000          HRRM  UUO,      (JBUF)       ;
065463 / 256240,,151460          XCTR  XRW,151460             ;
065464 / 542606,,000010          HRRM  UUO,DEVOAD(DDB)        ;
065465 / 205040,,400000         MOVSI  TAC, IOUSE             ;
151362 / 436045,,000000          IORM  TAC,      (JBUF)       ;
065466 / 256240,,151362          XCTR  XRW,151362             ;
065467 / 263140,,000000          POPJ    P,                   ;;RETURN
                       ;RELEASE A DEVICE
                       RELEA0:
                       RELEA3:
065470 / 620600,,777777           TRZ  UUO,777777             ;;CLOSE BOTH INPUT AND OUTPUT.  HERE FROM IORELS
                       RELEA1:
065471 / 260140,,064156         PUSHJ    P,CLOSE1             ;
065472 / 550046,,000003          HRRZ  TAC,DEVSER(DDB)        ;;DISPATCH ADDRESS IS THE ONLY THING RELEVANT
065473 / 306051,,000000          CAIN  TAC,      (DSER)       ;;COMPARE
065474 / 254000,,065521          JRST      RELE1A             ;
065475 / 260140,,000316         PUSHJ    P,PUSHIT             ;
065476 / 261146,,000000          PUSH    P,      (DDB)        ;;DEVICE NAME
065477 / 200040,,000011          MOVE  TAC,  DSER             ;
065500 / 260140,,044200         PUSHJ    P,DISOCT             ;
065501 / 260140,,044066         PUSHJ    P,DISMES             ;
065512 / 262140,,000002           POP    P,  TAC1             ;
065513 / 260140,,044246         PUSHJ    P,DISSIX             ;
065514 / 260140,,044102         PUSHJ    P,DISTAB             ;
065515 / 260140,,044104         PUSHJ    P,DISJOB             ;
065516 / 260140,,044076         PUSHJ    P,044076             ;
065517 / 260140,,000341         PUSHJ    P, POPIT             ;
065520 / 200446,,000003          MOVE DSER,DEVSER(DDB)        ;
                       RELE1A:
065521 / 260140,,046160         PUSHJ    P,046160             ;;WAIT FOR DEVICE TO BECOME INACTIVE
                       RELEA5:
065522 / 260151,,000000         PUSHJ    P,      (DSER)       ;;DISPATCH TO DEVICE SERVICE ROUTINE
065523 / 201000,,010000         MOVEI      010000             ;;CLEAR IO ACTIVE BIT
065524 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;AND RETURN WITH IOS SET
065525 / 403252,,024071         SETZB  DAT,USRJDA(UCHN)       ;;CLEAR DEVICE ASSIGNMENT
065526 / 335053,,024066        SKIPGE  TAC,USRHCU(PID)        ;
065527 / 201040,,000017         MOVEI  TAC,    17             ;
                       RELEA4:
065530 / 550101,,024071          HRRZ TAC1,USRJDA(TAC)        ;
065531 / 326240,,065534         JUMPN  DAT,065534             ;;NON-ZERO CHAN. ALREADY?
065532 / 200240,,000002          MOVE  DAT,000002             ;;NO, SET DAT WHEN FIRST(HIGHEST) FOUND
065533 / 202053,,024066         MOVEM  TAC,USRHCU(PID)        ;;STORE HIGHEST IN USE CHANNEL
                       RELE4A:
065534 / 302106,,000000          CAIE TAC1,      (DDB)        ;;IS THIS DEVICE SAME AS ONE BEING RELEASED?
065535 / 365040,,065530         SOJGE  TAC,RELEA4             ;
065536 / 325040,,037403        JUMPGE  TAC,037403             ;;DON'T FLUSH THIS DDB IF OPEN ON ANOTHER CHANNEL
065537 / 513006,,000007         HLLZS      DEVIAD(DDB)        ;;CLEAR INPUT BUFFER ADDRESS
065540 / 513006,,000010         HLLZS      DEVOAD(DDB)        ;;AND OUTPUT BUFFER ADDRESS.
                       ;CALLED FROM ERROR STOP ROUTINE(ESTOP)
                       RELEA9:
065541 / 200046,,000000          MOVE  TAC,      (DDB)        ;;IS THIS SYSTEM TAPE?
065542 / 312040,,151417          CAME  TAC,151417             ;;DSK IS NEVER QUEUED
065543 / 312040,,037572          CAME  TAC,SYSTAP             ;
065544 / 254000,,065555          JRST      065555             ;;IS DISK OR NOT SYSTEM TAPE
065545 / 205040,,777760         MOVSI  TAC,777760             ;;PREPARE TO ZERO OUT MOST OF DEVIAD AND DEVOAD
065546 / 412046,,000007        ANDCAM  TAC,DEVIAD(DDB)        ;
065547 / 412046,,000010        ANDCAM  TAC,DEVOAD(DDB)        ;
065550 / 336000,,026107         SKIPN      026107             ;;HAS COUNT ALREADY BEEN REDUCED AT ESTOP?
065551 / 254000,,065555          JRST      065555             ;;YES
065552 / 402000,,026107         SETZM      026107             ;;YES, CLEAR SYSTEM USER NO.
065553 / 371000,,021654          SOSL      021654             ;;YES, REDUCE COUNT
065554 / 476000,,021647         SETOM      021647             ;;SOMEONE IS WAITING, SET AVAILABLE FLAG/
                       RELEA7:
065555 / 201100,,200000         MOVEI TAC1,200000             ;;CLEAR ASSIGNED BY PROGRAM BIT
                       RELEA6:
065556 / 413106,,000004        ANDCAB TAC1,DEVMOD(DDB)        ;;CALLED FROM DEASSIGN
065557 / 620100,,000777           TRZ TAC1,000777             ;;CLEAR JOB NO. FIELD
152200 / 020000,,600000           XWD TTYATC,ASSCON+ASSPRG    ;
065560 / 612100,,152200          TDNE TAC1,152200             ;
065561 / 263140,,000000          POPJ    P,                   ;;DEVICE ASSIGNED BY OTHER MEANS TOO
065562 / 137100,,037575           DPB TAC1,037575             ;;CLEAR JOB NUMBER
065563 / 200106,,777777          MOVE TAC1,DEVCMR(DDB)        ;
065564 / 607100,,100000          TLNN TAC1,100000             ;;SHARABLE DEV?
065565 / 254000,,065577          JRST      065577             ;;NO - WAKE UP WAITERS IF ANY
065566 / 261140,,000005          PUSH    P,000005             ;; IF AT COMMAND LEVEL, SAVE TTY POINTER
065567 / 261140,,000006          PUSH    P,000006             ;; AND DDB ADDRESS
065570 / 261140,,000011          PUSH    P,  DSER             ;
065571 / 550446,,000003          HRRZ DSER,DEVSER(DDB)        ;;GET POINTER TO DEVICE DEPENDENT ROUTINES
065572 / 260151,,777774         PUSHJ  PDP,DGIVDD(DSER)       ;;RETURN DDB TO STORAGE
065573 / 262140,,000011           POP    P,  DSER             ;
065574 / 262140,,000006           POP    P,   DDB             ;
065575 / 262140,,000005           POP    P,000005             ;; RESTORE COMMAND POINTER
065576 / 263140,,000000          POPJ    P,                   ;
                       ; RELEAS CODE - SEE IF THERE IS ANYONE WAITING FOR THE DEVICE
                       ; IF SO, WAKE HIM UP.
                       RELDVW:
065577 / 261140,,000006          PUSH    P,   DDB             ;
065600 / 261140,,000014          PUSH    P,   UUO             ;
065601 / 261140,,000005          PUSH    P,   DAT             ;
065602 / 261140,,000004          PUSH    P,000004             ;;SAVE OLD JOB NUMBER
065603 / 553000,,000006         HRRZS         DDB             ;
065604 / 201240,,066757         MOVEI  DAT,066757             ;; SCAN ALL JOBS IN DEVICE WAIT
065605 / 265600,,066643           JSP  UUO, QSCAN             ;
065606 / 254000,,065614          JRST      RELDVX             ;
065607 / 312304,,026220          CAME  DDB,JBTDVW(J)          ;
065610 / 254015,,000000          JRST            (AC1)        ;; GO RESCAN
065611 / 201640,,000014         MOVEI  AC1,  RUNQ             ;
065612 / 212644,,020574         MOVNM  AC1,JOBQUE(J)          ;; WAKE HIM UP
065613 / 260140,,046027         PUSHJ    P, REQUE             ;
                       RELDVX:
065614 / 262140,,000004           POP    P,     J             ;
065615 / 262140,,000005           POP    P,   DAT             ;
065616 / 262140,,000014           POP    P,   UUO             ;
065617 / 262140,,000006           POP    P,   DDB             ;
065620 / 263140,,000000          POPJ    P,                   ;
                       ; UUOS TO TEST IO STATUS WORD
                       ;CALLING SEQUENCE
                       ;	STATO D,MASK
                       ;	EXIT1		ALL SELECTED BITS ARE 0
                       ;	EXIT2		SOME SELECTED BITS ARE 1
                       ;TESTS BITS OF I/O STATUS WORD OF DEVICE ON USER'S CHANNEL D WHICH
                       ;ARE SELECTED BY MASK.
                       USTATO:
065621 / 602014,,000000          TRNE            (UUO)        ;; SKIP IF ANY INDICATED BITS ARE ONE
065622 / 350003,,000000           AOS            (PDP)        ;
065623 / 263140,,000000          POPJ  PDP,                   ;;RETURN TO USER
                       ; MORE STATUS UUOS
                       ;CALLING SEQUENCE
                       ;	GETSTS D,ADR
                       ;	EXIT		ALWAYS RETURNS HERE
                       ;STORES I/O STATUS WORD OF DEVICE ON CHANNEL D IN LOCATION ADR.
                       USTATS:
065624 / 550040,,000000          HRRZ  TAC,                   ;; GET USER HALF OF IOS
065625 / 254000,,060225          JRST      060225             ;;ADDRESS CHECK AND STORE IN USER AREA
                       ; STILL MORE STATUS UUOS
                       ;CALLING SEQUENCE
                       ;	STATZ D,MASK
                       ;	EXIT1		SOME SELECTED BITS ARE 1
                       ;	EXIT2		ALL SELECTED BITS ARE 0
                       ;TESTS BITS OF I/O STATUS WORD OF DEVICE ON USER'S
                       ;CHANNEL D WHICH ARE SELECTED BY MASK.
                       USTATZ:
065626 / 606014,,000000          TRNN            (UUO)        ;; SKIP IF ALL INDICATED BITS ARE ZERO
065627 / 350003,,000000           AOS            (PDP)        ;
065630 / 263140,,000000          POPJ  PDP,                   ;;RETURN TO USER
                       ;IN UUO - LIKE INPUT	SKIPS IF  EOF OR ERRORS
                       TIN:
065631 / 260140,,065040         PUSHJ  PDP,065040             ;;DO INPUT UUO
065632 / 602000,,760000          TRNE      760000             ;
065633 / 350003,,000000           AOS            (PDP)        ;
065634 / 263140,,000000          POPJ  PDP,                   ;
                       ;OUT UUO - LIKE OUTPUT  -  SKIPS IF ERRORS
                       TOUT:
065635 / 260140,,065240         PUSHJ  PDP,065240             ;;DO OUTPUT UUO
065636 / 602000,,740000          TRNE      740000             ;
065637 / 350003,,000000           AOS            (PDP)        ;
065640 / 263140,,000000          POPJ  PDP,                   ;
                       ;SPACEWAR UUOS
                       SPCWGO:
065641 / 201601,,000000         MOVEI  UUO,      (TAC)        ;;SETUP STARTING ADDRESS.
065642 / 510500,,000001          HLLZ UCHN,000001             ;;MODE BITS IN UCHN LEFT
065643 / 544500,,000001           HLR UCHN,000001             ;;TICKS IN UCHN RIGHT
151604 / 740000,,000017                                       ;
065644 / 404500,,151604           AND UCHN,151604             ;;FLUSH IRRELEVANT BITS
065645 / 254000,,065647          JRST      SPCWG1             ;
                       ;UUO43 IS THE SPACEWAR UUO.  SEE SPWSER FOR MORE DETAILS - JS
                       USPCWA:
065646 / 405500,,000017          ANDI UCHN,000017             ;;TICKS ONLY
                       SPCWG1:
065647 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
065650 / 603040,,000001          TLNE  TAC,LUPPRV             ;
065651 / 254000,,150164          JRST      150164             ;;LET SPACE WAR SERVICE FIGURE OUT WHAT TO DO
065652 / 254000,,043340          JRST      043340             ;;ILLEGAL FOR REMOTE JOBS
065653 /                 ;::    BEND STANFO.APRSER.
065653 /               ;: UUOCON[J17,SYS] EOF.
065653 /               ;: SCHEDU[J17,SYS]
065653 /                 ;::   BEGIN STANFO.SCHEDU.
                       ;11 SEPT 67 REDESIGNED PERIODICALLY BY JAM (AND OTHERS)
                       ;AC'S
                       ;INITIALIZE SCHEDULER  (CALLED FROM IOINI1 BEFORE ALL OTHER
                       ;	DEVICES ARE INITIALIZED)
                       NXTINI:
065653 / 402000,,020674         SETZM      020674             ;;ZERO JOB PRIORITY STUFF
152204 / 020674,,020675           XWD SCHBEG,SCHBEG+1         ;
065654 / 200300,,152204          MOVE  DDB,152204             ;
065655 / 251300,,021302           BLT  DDB,SCHEND             ;
065656 / 201300,,000004         MOVEI  DDB,000004             ;;MAXIMUM NUMBER OF QUEUES
                       NXTIN1:
065657 / 402006,,021646         SETZM      AVALTB(DDB)        ;;CLEAR SHARABLE DEVICE AVAIL. FLAGS
065660 / 476006,,021653         SETOM      REQTAB(DDB)        ;;SET SHARABLE DEVICE REQUEST COUNT
                       ;TO -1,  I.E. NO JOB WAITING OR
                       ;USING DEVICE OTHER THAN INITIALIZATION
065661 / 365300,,065657         SOJGE  DDB,NXTIN1             ;
065662 / 402000,,022062         SETZM      022062             ;;CLEAR SWAPPER COUNT
065663 / 402000,,020573         SETZM      020573             ;;WAKE SWAPPER UP THE FIRST TIME AROUND
065664 / 402000,,021660         SETZM        QJOB             ;
152206 / 021660,,021661           XWD QJOB,QJOB+1             ;
065665 / 200300,,152206          MOVE  DDB,152206             ;
065666 / 251300,,021757           BLT  DDB,021757             ;
065667 / 260140,,112562         PUSHJ    P, FBINI             ;
065670 / 254000,,071206          JRST      SWPINI             ;
                       ;NXTJOB DECREMENTS CURRENT JOB'S QUANT. AND PROTECT
                       ;TIMES AND REQUEUES IT IF QUANT. TIME GONE TO 0.
                       ;SERVICES ANY JOB REQUEUING REQUESTED AT OTHER PRIORITY
                       ;LEVELS THEN CALLS SHUFFLER,SWAPPER AND SCHEDULER
                       ;MAKES NO ASSUMPTIONS RE. ACS
                       ;RETURNS NEXT JOB TO RUN IN J.
                       NXTJOB:
065671 / 326540,,066163         JUMPN  PID,066163             ;;PDP-6 GETS TO RUN THE NULL JOB A LOT.
                       ; HERE, WE SEE IF CURRENT JOB IS RUNNABLE. IF IT IS, WE
                       ; SEE IF ITS QUANTUM TIME HAS RUN OUT. IF IT HAS, WE REQUEUE THE
                       ; JOB. IF NOT, WE LEAVE NOW
                       CKJB3:
065672 / 336213,,024061         SKIPN    J,   JOB(PID)        ;;CURRENT JOB NO., IS IT NULL JOB?
065673 / 254000,,065772          JRST      065772             ;;YES,GO SEE IF OTHER JOBS NEED RESCHEDULING
065674 / 700600,,000400          CONO   PI,000400             ;;AVOID CONFUSION BETWEEN NEXT 2 INSTRS
065675 / 200244,,020574          MOVE  DAT,JOBQUE(J)          ;;PICK UP HIS NEW QUEUE
065676 / 216244,,020574         MOVMM  DAT,JOBQUE(J)          ;;STORE BACK POS (NO MORE INT NEEDED)
065677 / 700600,,000200          CONO   PI,  PION             ;
065700 / 214300,,000005          MOVM  DDB,000005             ;;GET POSITIVE FORM
065701 / 554004,,026114          HLRZ      JBTSTS(J)          ;;GET JOB STATUS BITS AND CODES
065702 / 421000,,310402        ANDCMI      310402             ;;MASK OUT DO NOT CARE BITS
065703 / 302000,,440000          CAIE      440000             ;;IS CURRENT JOB RUNABLE?
065704 / 254000,,065767          JRST      065767             ;;NO, REQUE CURRENT JOB
065705 / 302300,,000014          CAIE  DDB,000014             ;; IS HE STILL RUNNABLE?
065706 / 306300,,000015          CAIN  DDB,    TQ             ;
065707 / 304000,,000000          CAIA                         ;
065710 / 254000,,065767          JRST      065767             ;; NO. REQUE HIM.
065711 / 332013,,024632         SKIPE       TIMEF(PID)        ;;YES, IS THIS A TIME INTERRUPT?
065712 / 373013,,020573         SOSLE      SCHMQT(PID)        ;; YES, DO WE RUN THE SCHEDULER THIS TICK?
065713 / 304000,,000000          CAIA                         ;
065714 / 254000,,065757          JRST      065757             ;;  YES
065715 / 332004,,021760         SKIPE        XJOB(J)          ;; NO, THIS JOB EXPANDING?
065716 / 254000,,065755          JRST      065755             ;; YES, SCHEDULE TO GET SWAPPED OUT
065717 / 135300,,037600           LDB  DDB,037600             ;; GOT AN UPPER?
065720 / 322300,,037403         JUMPE  DDB,037403             ;; NO, FORGET IT
065721 / 332006,,021760         SKIPE        XJOB(DDB)        ;;IS HIS UPPER SEGMENT EXPANDING?
065722 / 254000,,065753          JRST      065753             ;;  YES	
065723 / 200306,,026114          MOVE  DDB,JBTSTS(DDB)        ;;IS IT IN TRANSIT?
065724 / 603300,,006000          TLNE  DDB,006000             ;
065725 / 254000,,065772          JRST      065772             ;; YES, SHUT THIS JOB OFF
065726 / 263140,,000000          POPJ    P,                   ;;  NO
                       ;BUG TRAP
                       CHKXJB:
065727 / 332000,,021760         SKIPE      021760             ;;THIS SHOULD BE SET.
065730 / 263140,,000000          POPJ    P,                   ;;ALL IS WELL
065731 / 350000,,021760           AOS      021760             ;;GET IT TAKEN CARE OF.
065732 / 260140,,000316         PUSHJ    P,PUSHIT             ;
065733 / 260140,,044104         PUSHJ    P,DISJOB             ;
065734 / 260140,,044066         PUSHJ    P,DISMES             ;
065744 / 260140,,000341         PUSHJ    P, POPIT             ;
065745 / 263140,,000000          POPJ    P,                   ;
                       CHKXJ4:
065746 / 261140,,000004          PUSH    P,     J             ;
065747 / 200200,,000006          MOVE    J,   DDB             ;
065750 / 260140,,065727         PUSHJ    P,CHKXJB             ;
065751 / 262140,,000004           POP    P,     J             ;
065752 / 263140,,000000          POPJ    P,                   ;
                       CHKXJ3:
065753 / 260140,,065746         PUSHJ    P,CHKXJ4             ;
065754 / 254000,,065772          JRST      CKJB2A             ;
                       CHKXJ1:
065755 / 260140,,065727         PUSHJ    P,CHKXJB             ;
065756 / 254000,,065772          JRST      CKJB2A             ;
                       CKJB9:
065757 / 201240,,000010         MOVEI  DAT,000010             ;; RESET SCHEDULER WAIT TIME
065760 / 202253,,020573         MOVEM  DAT,SCHMQT(PID)        ;
065761 / 350000,,036162           AOS      036162             ;; BUMP NUMBER OF TIME-OUTS
065762 / 302300,,000015          CAIE  DDB,000015             ;; IF IN TQ, WE HAVE TO REQUEUE THIS JOB
065763 / 254000,,065772          JRST      CKJB2A             ;
065764 / 201300,,000014         MOVEI  DDB,000014             ;; PUT HIM INTO STANDARD RUN QUEUE
065765 / 202304,,020574         MOVEM  DDB,JOBQUE(J)          ;;SAVE QUEUE CODE (POS SINCE INT TAKEN CARE OF HERE)
151657 / 777777,,066705                                       ;
065766 / 334240,,151657         SKIPA  DAT,151657             ;
                       CKJB10:
065767 / 540246,,066666           HRR  DAT, QBITS(DDB)        ;;GET ADR FROM POS CODE IN DDB, PRESERVE SIGN OF ORIG
065770 / 260140,,066465         PUSHJ    P, QXFER             ;
065771 / 200213,,024061          MOVE    J,   JOB(PID)        ;
                       CKJB2A:
                       CKJB1:
065772 / 326540,,066043         JUMPN  PID, SCHED             ;
                       CKJB2:
065773 / 400100,,000000          SETZ TAC1,                   ;
065774 / 700600,,000400          CONO   PI,000400             ;;MAKE SURE LIST STAYS HONEST
065775 / 336200,,021660         SKIPN    J,  QJOB             ;
065776 / 254000,,066013          JRST       CKJB4             ;
065777 / 250104,,000000          EXCH TAC1,      (J)          ;;GET LIST LINK AND ZERO THIS ENTRY
066000 / 552100,,021660         HRRZM TAC1,021660             ;;LINK HIM OUT
066001 / 700600,,000200          CONO   PI,  PION             ;
066002 / 275200,,021660          SUBI    J,021660             ;;GET JOB NUMBER
066003 / 700600,,000400          CONO   PI,000400             ;;PROBABLY BETTER DUPLICATED THAN OFF TOO LONG
066004 / 200244,,020574          MOVE  DAT,JOBQUE(J)          ;;NEW QUEUE, - => GEN INT IF ENABLED
066005 / 216244,,020574         MOVMM  DAT,JOBQUE(J)          ;;INT NO LONGER NEEDED
066006 / 700600,,000200          CONO   PI,  PION             ;
066007 / 214300,,000005          MOVM  DDB,000005             ;;GET POS FORM
066010 / 540246,,066666           HRR  DAT, QBITS(DDB)        ;;AND BITS (PRESERVE SIGN)
066011 / 260140,,066465         PUSHJ    P,066465             ;;DO THE QXFER THING
066012 / 254000,,065773          JRST       CKJB2             ;
                       CKJB4:
066013 / 700600,,000200          CONO   PI,000200             ;;TURN PI'S BACK ON
066014 / 201300,,000004         MOVEI   QJ,000004             ;;CK AVAL FLAGS FOR SHAR. DEVS.
                       CKJB6:
066015 / 336006,,021646         SKIPN      AVALTB(QJ)         ;;FLAG=0?
066016 / 365300,,066015         SOJGE   QJ,066015             ;;YES - TRY NEXT ONE
066017 / 305300,,000001         CAIGE   QJ,000001             ;;LESS THAN MIN. SHAR. DEV.Q?
066020 / 254000,,066032          JRST      066032             ;;YES. IGNORE.
066021 / 210200,,000006          MOVN    J,000006             ;;NO--GET 1ST JOB IN Q
066022 / 570204,,021323          HRRE    J,  JBTQ(J)          ;
066023 / 323200,,066031        JUMPLE    J,066031             ;;FINISHED Q?
066024 / 211240,,000014         MOVNI  DAT,000014             ;; REQUEUE HIM TO THE RUN QUEUE
066025 / 202244,,020574         MOVEM  DAT,JOBQUE(J)          ;
066026 / 561240,,066705         HRROI  DAT,066705             ;;- SO INT CAN HAPPEN
066027 / 402006,,021646         SETZM      AVALTB(QJ)         ;;CLEAR AVAL FLAG
066030 / 260140,,066465         PUSHJ  PDP,066465             ;;REQUEUE THE JOB AND PUT IT IN
                       ;PROCESSOR Q SO SCHEDULER WILL RUN IT
                       CKJB8:
066031 / 367300,,066015          SOJG   QJ,066015             ;;CONTINUE IF ANY MORE FLAGS TO LOOK AT
                       CKJB7:
                       ;NONE--GO SHUFFLE AND SWAP
066032 / 332000,,023475         SKIPE      023475             ;;BUT FIRST A WORD FROM OUR INTERRUPTS
066033 / 260140,,050276         PUSHJ    P,050276             ;;(QXFER MAY HAVE GENERATED INTS)
066034 / 326540,,066037         JUMPN  PID,066037             ;
151705 / 000000,,000010                                       ;
066035 / 261140,,151705          PUSH    P,151705             ;
066036 / 262140,,036260           POP    P,036260             ;
066037 / 260140,,067116         PUSHJ  PDP,  SWAP             ;
066040 / 326540,,066043         JUMPN  PID,066043             ;
151704 / 000000,,000006                                       ;
066041 / 261140,,151704          PUSH    P,151704             ;
066042 / 262140,,036260           POP    P,036260             ;
                       ; SCAN JOB STATUS TABLES FOR A JOB TO RUN
                       SCHED:
066043 / 350000,,036147           AOS      036147             ;; COUNT NUMBER OF TIMES THROUGH HERE
066044 / 201240,,066754         MOVEI  DAT,066754             ;; SCAN TQ AND RUNQ ONLY
066045 / 265600,,066643           JSP   PC, QSCAN             ;
066046 / 254000,,066163          JRST      066163             ;; NOBODY LEFT, RUN NULL JOB
066047 / 261140,,000005          PUSH    P,000005             ;; SAVE POINTER TO QUEUE SCAN LIST
066050 / 260140,,066056         PUSHJ    P,066056             ;; IS HE REALLY RUNNABLE?
066051 / 254000,,066054          JRST      066054             ;; NO, TRY NEXT GUY
066052 / 262140,,000005           POP    P,   DAT             ;
066053 / 254000,,066162          JRST      066162             ;; YES, DO IT
                       SCHPDR:
066054 / 262140,,000005           POP    P,   DAT             ;
                       SCH2:
066055 / 254015,,000000          JRST            (QR)         ;
                       ;END REPEAT 0
                       ; THIS ROUTINE CHECKS TO SEE IF THE JOB IN J IS REALLY RUNNABLE
                       ; RETURNS IF NOT RUNNABLE, TAKES SKIP RETURN IF RUNNABLE
                       CHKJOB:
066056 / 554004,,026114          HLRZ      JBTSTS(J)          ;;PICK UP STATUS BITS
066057 / 421000,,310402        ANDCMI      310402             ;;ZERO THE BITS THAT DON'T MATTER
066060 / 332004,,021760         SKIPE        XJOB(J)          ;
066061 / 254000,,065727          JRST      065727             ;;JOB IS EXPANDING.  CAN'T BE RUN.
066062 / 306000,,440000          CAIN      440000             ;;IS THIS JOB RUNNABLE
066063 / 254000,,066115          JRST      066115             ;;YES.  MAKE SURE THAT SEGMENT IS THERE.
066064 / 602000,,400000          TRNE         RUN             ;
066065 / 263140,,000000          POPJ    P,                   ;
066066 / 214244,,020574          MOVM  DAT,JOBQUE(J)          ;
066067 / 302240,,000014          CAIE  DAT,  RUNQ             ;
066070 / 263140,,000000          POPJ    P,                   ;
066071 / 260140,,000316         PUSHJ    P,PUSHIT             ;
066072 / 205240,,400000         MOVSI  DAT,   RUN             ;
066073 / 412244,,026114        ANDCAM  DAT,JBTSTS(J)          ;
066074 / 211240,,000011         MOVNI  DAT, STOPQ             ;
066075 / 202244,,020574         MOVEM  DAT,JOBQUE(J)          ;
066076 / 260140,,046027         PUSHJ    P, REQUE             ;
066077 / 260140,,044104         PUSHJ    P,DISJOB             ;
066100 / 260140,,044066         PUSHJ    P,DISMES             ;
066110 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
066111 / 260140,,044200         PUSHJ    P,DISOCT             ;
066112 / 260140,,044076         PUSHJ    P,044076             ;
066113 / 260140,,000341         PUSHJ    P, POPIT             ;
066114 / 263140,,000000          POPJ    P,                   ;
                       ; HERE WE SEE IF THIS JOB'S HIGH SEGMENT IS IN CORE
                       SCHD4:
066115 / 135300,,037600           LDB  DDB,037600             ;; DOES THIS JOB HAVE A HIGH SEGMENT?
066116 / 322300,,037401         JUMPE  DDB,CPOPJ1             ;
066117 / 326540,,037403         JUMPN  PID, CPOPJ             ;
066120 / 200446,,026114          MOVE DSER,JBTSTS(DDB)        ;
066121 / 603440,,002000          TLNE DSER,002000             ;; IF SO, IS IT IN CORE?
066122 / 254000,,066144          JRST      066144             ;;NO. SWAPPED OUT. LET'S DRAG IT IN!
066123 / 603440,,004000          TLNE DSER,   SHF             ;
066124 / 263140,,000000          POPJ    P,                   ;
066125 / 332006,,021760         SKIPE        XJOB(DDB)        ;
066126 / 254000,,065746          JRST      CHKXJ4             ;
066127 / 214446,,020574          MOVM DSER,JOBQUE(DDB)        ;
066130 / 306440,,000011          CAIN DSER, STOPQ             ;
066131 / 254000,,066141          JRST        SCH3             ;
066132 / 201440,,000011         MOVEI DSER, STOPQ             ;
066133 / 212446,,020574         MOVNM DSER,JOBQUE(DDB)        ;
066134 / 201240,,066716         MOVEI  DAT,QSTOPW             ;
066135 / 261140,,000004          PUSH    P,     J             ;
066136 / 200200,,000006          MOVE    J,   DDB             ;
066137 / 260140,,066465         PUSHJ    P, QXFER             ;
066140 / 262140,,000004           POP    P,     J             ;
                       SCH3:
066141 / 316200,,021635          CAMN    J,021635             ;
066142 / 402000,,021635         SETZM      021635             ;
066143 / 254000,,037401          JRST      CPOPJ1             ;
                       SCH5:
066144 / 332000,,021635         SKIPE      021635             ;
066145 / 263140,,000000          POPJ    P,                   ;
066146 / 202200,,021635         MOVEM    J,021635             ;
066147 / 214246,,020574          MOVM  DAT,JOBQUE(DDB)        ;
066150 / 306240,,000013          CAIN  DAT,  SEGQ             ;
066151 / 263140,,000000          POPJ    P,                   ;; YES, DON'T REQUEUE HIM
066152 / 261140,,000004          PUSH    P,000004             ;; SWAPPED OUT. BRING IT IN
066153 / 200200,,000006          MOVE    J,   DDB             ;
066154 / 201240,,000013         MOVEI  DAT,  SEGQ             ;
066155 / 212244,,020574         MOVNM  DAT,JOBQUE(J)          ;
066156 / 201240,,066717         MOVEI  DAT,066717             ;; PUT IT IN SEGMENT WAIT QUEUE
066157 / 260140,,066465         PUSHJ    P, QXFER             ;
066160 / 262140,,000004           POP    P,     J             ;
066161 / 263140,,000000          POPJ    P,                   ;
                       ; AT THIS POINT, WE HAVE ALMOST DECIDED ON A JOB
                       ; WE CLAIM IT AND RETURN
                       SCH1:
066162 / 263140,,000000          POPJ    P,                   ;;RETURN
                       SCHD1:
066163 / 400200,,000000          SETZ    J,                   ;;RETURN NULL JOB
066164 / 336000,,000013         SKIPN      000013             ;; FOR P1, WE WILL
066165 / 350000,,036157           AOS      036157             ;; BUMP NUMBER OF TIMES NULL JOB SELECTED
066166 / 263140,,000000          POPJ  PDP,                   ;
                       ;;2-PROCESSOR ROUTINES TO INTERLOCK JOBS
                       ;JBTOWN(J) > 0 MEANS JOB J IS BEING RUN BY P1
                       ;JBTOWN(J) < 0 MEANS JOB J IS BEING RUN BY P2
                       ; HERE, WE SORT THE RUN QUEUE INTO PRIORITY ORDER
                       ORDER:
066167 / 200300,,024636          MOVE  DDB,024636             ;;TOTAL INTERRUPT TIME
066170 / 250300,,020677          EXCH  DDB,020677             ;;SAVE IT
066171 / 274300,,020677           SUB  DDB,020677             ;;-(RECENT INTERRUPT TIME)
066172 / 200200,,024635          MOVE    J,024635             ;;CURRENT UPTIME
066173 / 250200,,020700          EXCH    J,020700             ;;SAVE IT
066174 / 274200,,020700           SUB    J,020700             ;;-(CHANGE IN UPTIME)
066175 / 200440,,000006          MOVE DSER,000006             ;;SAVE -(RECENT INTERRUPT TIME)
066176 / 274300,,000004           SUB  DDB,000004             ;;(DELTA UPTIME)-(DELTA INTERRUPT TIME)
066177 / 202300,,020675         MOVEM  DDB,020675             ;;SAVE AS WEIGHTING FACTOR.
066200 / 202300,,020676         MOVEM  DDB,020676             ;
066201 / 205300,,000001         MOVSI  DDB,     1             ;
066202 / 232300,,020676         IDIVM  DDB,020676             ;;AVOID REMAINDER
066203 / 221440,,001750         IMULI DSER,001750             ;
066204 / 232440,,000004         IDIVM DSER,     J             ;
066205 / 202200,,020701         MOVEM    J,020701             ;;SAVE RECENT INTERRUPT FRACTION, *1000
152205 / 021003,,020703           XWD JBTNPR,JBTPRI           ;
066206 / 200040,,152205          MOVE  TAC,152205             ;
066207 / 251040,,021002           BLT  TAC,021002             ;
066210 / 211340,,000014         MOVNI    Q,  RUNQ             ;
                       ORD3:
066211 / 570347,,021323          HRRE    Q,  JBTQ(Q)          ;;PICK UP FIRST JOB IN RUN QUEUE
066212 / 321340,,066240         JUMPL    Q,066240             ;;NO MORE, EXIT.
                       ORD2:
066213 / 570447,,021323          HRRE DSER,  JBTQ(Q)          ;;GET NEXT JOB IN QUEUE.
066214 / 321440,,066240         JUMPL DSER,066240             ;;IF NO NEXT JOB, WE'RE DONE.
066215 / 200311,,020703          MOVE  DDB,JBTPRI(DSER)       ;;COMPARE PRIORITIES.
066216 / 317307,,020703          CAMG  DDB,JBTPRI(Q)          ;
066217 / 254000,,066211          JRST      066211             ;;RIGHT ORDER  PRI[Q]>PRI[DSER].  ADVANCE IN QUEUE.
066220 / 574507,,021323          HLRE UCHN,  JBTQ(Q)          ;;WRONG ORDER. SCAN BACKWARDS TO FIND RIGHT SPOT
                       ORD1:
066221 / 321500,,066226         JUMPL UCHN,066226             ;;JUMP IF THERE'S NO FURTHER BACKWARDS.
066222 / 317312,,020703          CAMG  DDB,JBTPRI(UCHN)       ;;IS THIS WHERE IT SHOULD BE?
066223 / 254000,,066226          JRST      066226             ;;YES. PRI[UCHN]>PRI[DSER]
066224 / 574512,,021323          HLRE UCHN,  JBTQ(UCHN)       ;;ADVANCE BACKWARDS.
066225 / 254000,,066221          JRST        ORD1             ;
                       ;DELETE ENTRY POINTED TO BY DSER; INSERT IT AFTER ENTRY POINTED TO BY UCHN.
                       ORDINS:
066226 / 200311,,021323          MOVE  DDB,  JBTQ(DSER)       ;;DELETE HIM FROM OLD POSITION.
066227 / 502306,,021323          HLLM  DDB,  JBTQ(DDB)        ;;SET BACKWARDS LINK IN GUY FORWARD FROM US.
066230 / 204300,,000006          MOVS  DDB,   DDB             ;
066231 / 546306,,021323          HLRM  DDB,  JBTQ(DDB)        ;;SET FORWARDS LINK IN GUY BACKWARD FROM US.
066232 / 200312,,021323          MOVE  DDB,  JBTQ(UCHN)       ;;ADD US AFTER (FORWARDS FROM) OUR TRUE PREDECESSOR
066233 / 542311,,021323          HRRM  DDB,  JBTQ(DSER)       ;;FLINK[DSER]←FLINK[UCHN]
066234 / 542452,,021323          HRRM DSER,  JBTQ(UCHN)       ;;FLINK[UCHN]←DSER
066235 / 506511,,021323          HRLM UCHN,  JBTQ(DSER)       ;;BLINK[DSER]←UCHN
066236 / 506446,,021323          HRLM DSER,  JBTQ(DDB)        ;;BLINK[FLINK[DSER]]←DSER
066237 / 254000,,066213          JRST      066213             ;;HE IS IN PLACE, SCAN SOME MORE (DON'T ADVANCE Q)
                       ORDX:
066240 / 402000,,020702         SETZM      020702             ;;TELL PDP-6 THAT WE'VE FINISHED OUR SORT
066241 / 263140,,000000          POPJ    P,                   ;
                       ; THIS ROUTINE CALCULATES THE VARIOUS JOB PRIORITIES
                       ; IT DOES SO BY TAKING THE CURRENT JOB LOADING FACTOR,
                       ; DEFINED TO BE TIME WAITING FOR COMPUTE TIME OVER REAL TIME,
                       ; AND PUTS IT IN A TABLE WITH THE PREVIOUS JLLENGTH
                       ; FACTORS. THEN IT MAKES A WEIGHTED AVERAGE OF THESE AND
                       ; ADDS IT INTO THE JOBS TOTAL JOB LOADING HISTORY, WHICH IS
                       ; DECAYED EXPONENTIALLY BY SUBTRACTING A FRACTION EVERY SO OFTEN
                       JLCAL:
066242 / 200200,,020702          MOVE    J,020702             ;;HAS THE PDP-10 DONE IT'S THING YET?
066243 / 326200,,037403         JUMPN    J,037403             ;;IF NOT, WAIT FOR IT
066244 / 373200,,020674         SOSLE    J,JLCYET             ;
066245 / 254000,,066254          JRST       JLCA1             ;
066246 / 402000,,022062         SETZM      SWPCNT             ;
066247 / 201300,,000200         MOVEI  DDB,JLTIME             ;
066250 / 202300,,020674         MOVEM  DDB,JLCYET             ;
066251 / 476000,,020702         SETOM      ORDYET             ;
066252 / 322540,,066167         JUMPE  PID,066167             ;;IF WE'RE THE PDP-10, NO NEED TO INTERLOCK
066253 / 263140,,000000          POPJ    P,                   ;
                       JLCA1:
066254 / 241200,,777777           ROT    J,777777             ;;DIVIDE BY 2
066255 / 321200,,037403         JUMPL    J,037403             ;;SKIP ODD TICKS.
066256 / 301200,,000100          CAIL    J,000100             ;;LEGAL JOB NUMBERS ONLY
066257 / 263140,,000000          POPJ    P,                   ;
066260 / 332304,,021103         SKIPE  DDB, JBTJL(J)          ;;IS THERE A HISTORY TABLE?
066261 / 254000,,066265          JRST      066265             ;;YES, GO RECOMPUTE PRIORITY
066262 / 205300,,300000         MOVSI  DDB,      (3B2)        ;;NO. MAKE A SILLY ASSUMPTION
066263 / 202304,,021003         MOVEM  DDB,JBTNPR(J)          ;
066264 / 263140,,000000          POPJ    P,                   ;
                       ; CALCULATE ONE JOB'S NEW PRIORITY
                       ; DECAY PAST, WEIGHT NEAR PAST, THEN COMPUTE PRIORITY
                       ; JBTJLH = DISTANT PAST CELL.
                       ; JBTJL  = TABLE OF FS BLOCKS, ONE-PER-JOB. KEEPS RECENT HISTORY.
                       ; JBTNPR = JOB'S NEW PRIORITY.
                       ; JBTRNB = AMOUNT OF CPU TIME THAT JOB HAS ACCUMULATED SINCE LAST CALL HERE.
                       JLCA3:
066265 / 210444,,021203          MOVN DSER,JBTJLH(J)          ;;FIRST, DECAY DISTANT PAST
066266 / 240440,,777773           ASH DSER,777773             ;
066267 / 272444,,021203          ADDM DSER,JBTJLH(J)          ;;PAST ← (31/32)*PAST
066270 / 200506,,000000          MOVE UCHN,      (DDB)        ;;ADD OLDEST TO DISTANT HISTORY
066271 / 272504,,021203          ADDM UCHN,JBTJLH(J)          ;;PAST ← PAST+OLDEST "RECENT" HISTORY
066272 / 205446,,000001         MOVSI DSER,     1(DDB)        ;;BLT DOWN RECENT HISTORY
066273 / 541446,,000000          HRRI DSER,      (DDB)        ;
066274 / 251446,,000022           BLT DSER,000022(DDB)        ;;MAKE ROOM FOR NEW FACTOR
066275 / 550444,,031743          HRRZ DSER,JBTRNB(J)          ;;PICK UP RUN TIME USED
066276 / 220440,,020676          IMUL DSER,020676             ;;DIVIDE BY USEABLE TIME. = PROCESSOR LEVEL
066277 / 202446,,000023         MOVEM DSER,000023(DDB)        ;;SET IN LAST POSITION IN TABLE (MOST RECENT)
                       ;1,,0 = 100% PL
066300 / 200444,,026114          MOVE DSER,JBTSTS(J)          ;;GIVE LOGIN AND LOGOUT GOOD SERVICE
066301 / 607440,,100000          TLNN DSER,100000             ;;ACCOUNTING?
066302 / 254000,,066307          JRST      066307             ;;NO.
066303 / 515300,,377777         HRLZI  DDB,377777             ;;GIVE THEM THE HIGHEST POSSIBLE PRIORITY
066304 / 544304,,020703           HLR  DDB,JBTPRI(J)          ;;RANDOM	;PUT IN SOME NUMBERS FOR GOOD MEASURE
                       JLCA9:
066305 / 202304,,021003         MOVEM  DDB,JBTNPR(J)          ;;SAVE USER'S PRIORITY
066306 / 263140,,000000          POPJ    P,                   ;
                       JLCA15:
066307 / 403744,,031743         SETZB  AC3,JBTRNB(J)          ;;
066310 / 201400,,000144         MOVEI  TEM,000144             ;;WEIGHT.
066311 / 201640,,000000         MOVEI  AC1,                   ;;COUNT WEIGHTS USED
066312 / 205440,,000023         MOVSI DSER,000023             ;
066313 / 541446,,000023          HRRI DSER,000023(DDB)        ;;DSER ← <JLLENGTH-1,,ADDRESS OF DATA>
                       JLCA4:
066314 / 200711,,000000          MOVE  AC2,      (DSER)       ;;PICK UP HISTORICAL JOB LOAD
066315 / 221710,,000000         IMULI  AC2,      (TEM)        ;; %PL * WEIGHT
066316 / 271650,,000000          ADDI  AC1,      (TEM)        ;;SUM OF ALL WEIGHTS.
066317 / 270740,,000016           ADD  AC3,   AC2             ;
066320 / 201710,,000000         MOVEI  AC2,      (TEM)        ;
066321 / 242700,,777775           LSH  AC2,777775             ;
066322 / 275416,,000000          SUBI  TEM,      (AC2)        ;;WEIGHT ← (7/8)*WEIGHT.
151763 / 000001,,000001                                       ;
066323 / 274440,,151763           SUB DSER,151763             ;
066324 / 327440,,066314         JUMPG DSER,066314             ;;LOOP THROUGH JOB HISTORY
066325 / 200704,,021203          MOVE  AC2,JBTJLH(J)          ;;PICK UP DISTANT PAST
066326 / 221710,,000000         IMULI  AC2,      (TEM)        ;;JUST TO MAKE CURVES JOIN
066327 / 271650,,000000          ADDI  AC1,      (TEM)        ;;ADD UP WEIGHTS.
066330 / 270740,,000016           ADD  AC3,   AC2             ;
153003 / 300000,,000000                                       ;
066331 / 274740,,153003           SUB  AC3,153003             ;;USAGE - DEFAULT PRIORITY = -(PRIORITY)
066332 / 212744,,021003         MOVNM  AC3,JBTNPR(J)          ;;THIS IS THEN HIS PRIORITY
                       ; CHECK THIS JOB'S SERVICE LEVEL TO SEE IF HE DESERVES HIGHER PRIORITY.
                       ;AC2 = SERVICE GUARANTEE LEVEL, TEM = SUM OF ALL THE SERVICE LEVELS
066333 / 332000,,026320         SKIPE      JBTGSL             ;
066334 / 263140,,000000          POPJ    P,                   ;
066335 / 550704,,026320          HRRZ  AC2,JBTGSL(J)          ;;PICK UP THE SERVICE LEVEL GUARANTEE
066336 / 303700,,320000         CAILE  AC2,320000             ;;MORE THAN 40.625% SERVICE LEVEL?
066337 / 201700,,320000         MOVEI  AC2,320000             ;;REDUCE TO 40% - REG'S UNFAIRNESS.
066340 / 550304,,027720          HRRZ  DDB,PRJPRG(J)          ;
066341 / 201400,,000000         MOVEI  TEM,                   ;;ADD UP SERVICES TO RELATIVES.
066342 / 201440,,000077         MOVEI DSER,000077             ;;INDEX FOR LOOP THRU JOBS
                       JLCA5:
066343 / 550511,,027720          HRRZ UCHN,PRJPRG(DSER)       ;
066344 / 306312,,000000          CAIN  DDB,      (UCHN)       ;;DOES THIS GUY HAVE THE SAME PPN
066345 / 336511,,021103         SKIPN UCHN, JBTJL(DSER)       ;;YES, DOES HE HAVE ANY PAST
066346 / 254000,,066352          JRST      066352             ;;NO. LOOP FOR NEXT GUY
066347 / 505500,,777754          HRLI UCHN,777754             ;;AOBJN POINTER TO PL HISTORY
066350 / 270412,,000000           ADD  TEM,      (UCHN)       ;;ADD IN THE SERVICE LEVEL
066351 / 253500,,066350         AOBJN UCHN,066350             ;
                       JLCA6:
066352 / 367440,,066343          SOJG DSER,066343             ;;NOW LOOP AROUND TO LOOK FOR ANOTHER GUY WITH SAME PPN
066353 / 231400,,000024         IDIVI  TEM,000024             ;;NORMALIZE PL.  SUM OF PL OF ALL RELATIVES.
                       ; ADD UP THE SERVICES TO HIS VARIOUS RELATIVES
066354 / 317700,,000010          CAMG  AC2,000010             ;; SEE IF HE GOT MORE THAN HE BARGAINED FOR
066355 / 263140,,000000          POPJ    P,                   ;; YES, HE NOW JUST FOLLOWS HIS PRIORITY
066356 / 336000,,030120         SKIPN      030120             ;; ARE WE CHARGING FOR CORE?
066357 / 254000,,066435          JRST      066435             ;;NO SKIP THIS STUFF.
066360 / 261140,,000016          PUSH    P,000016             ;;SAVE HIS GSL 
066361 / 261140,,000010          PUSH    P,000010             ;;SAVE ACTUAL PL
066362 / 201100,,000077         MOVEI TAC1,000077             ;; OK. NOW SEE IF HE IS A CORE LEVEL VIOLATOR
066363 / 550644,,027720          HRRZ  AC1,PRJPRG(J)          ;
066364 / 201700,,000000         MOVEI  AC2,                   ;;COUNT SUM OF CORE SIZES.
                       JLCA10:
066365 / 550742,,027720          HRRZ  AC3,PRJPRG(TAC1)       ;
066366 / 214242,,020574          MOVM  DAT,JOBQUE(TAC1)       ;; PICK UP HIS QUEUE CODE
066367 / 312640,,000017          CAME  AC1,   AC3             ;
066370 / 254000,,066425          JRST      JLCA11             ;
066371 / 302240,,000015          CAIE  DAT,000015             ;;ADD HIS CORE SIZE IF RUNNING OR LOCKED IN
066372 / 306240,,000014          CAIN  DAT,  RUNQ             ;
066373 / 254000,,066402          JRST      JLCA14             ;
066374 / 302240,,000006          CAIE  DAT, DIOWQ             ;
066375 / 332002,,020473         SKIPE      JBTST2(TAC1)       ;;SPACEWAR DOES THIS TOO
066376 / 254000,,066402          JRST      JLCA14             ;
066377 / 201240,,100000         MOVEI  DAT, JLOCK             ;
066400 / 616242,,026114          TDNN  DAT,JBTSTS(TAC1)       ;
066401 / 254000,,066425          JRST      JLCA11             ;
                       JLCA14:
066402 / 261140,,000002          PUSH    P,000002             ;;SAVE JOB NUMBER WE'RE THINKING ABOUT.
066403 / 260140,,071365         PUSHJ    P,071365             ;;GET HIS CORE SIZE IN TAC1
066404 / 271702,,000000          ADDI  AC2,      (TAC1)       ;;ADD IN TO CORE TOTAL
066405 / 200103,,000000          MOVE TAC1,      (P)          ;;GET JOB NUMBER BACK
152055 / 000002,,026114                                       ;
152055 / 000602,,026114 POINT 6,02026114,35                   ;
066406 / 135100,,152055           LDB TAC1,152055             ;
066407 / 322100,,066424         JUMPE TAC1,JLCA13             ;
066410 / 201300,,000077         MOVEI  DDB,000077             ;;HE GETS CHARGED FOR (1/N) OF HIS HIGH SEGMENT CORE
066411 / 201500,,000000         MOVEI UCHN,                   ;;WHERE N WILL BE THE NUMBER OF PEOPLE POINTING AT THIS SEGMENT
                       JLCA12:
152060 / 000006,,026114                                       ;
152060 / 000606,,026114 POINT 6,06026114,35                   ;
066412 / 135440,,152060           LDB DSER,152060             ;
066413 / 316440,,000002          CAMN DSER,  TAC1             ;
066414 / 331006,,026114         SKIPL      JBTSTS(DDB)        ;; ONLY IF HE IS ACTIVE
066415 / 304000,,000000          CAIA                         ;
066416 / 271500,,000001          ADDI UCHN,000001             ;; BUMP NUMBER OF JOBS POINTING TO THIS SEGMENT BY ONE
066417 / 367300,,066412          SOJG  DDB,JLCA12             ;
066420 / 260140,,071365         PUSHJ    P,071365             ;;GET THE SIZE OF THIS UPPER
066421 / 200040,,000002          MOVE  TAC,  TAC1             ;
066422 / 231052,,000000         IDIVI  TAC,      (UCHN)       ;; GET HIS SHARE OF THE UPPER SEGMENT CORE
066423 / 270700,,000001           ADD  AC2,000001             ;; AND ADD IT IN TO THE TOTAL
                       JLCA13:
066424 / 262140,,000002           POP    P,  TAC1             ;
                       JLCA11:
066425 / 367100,,066365          SOJG TAC1,066365             ;; LOOP AROUND FOR NEXT JOB
066426 / 242700,,777766           LSH  AC2,777766             ;; CONVERT TO NUMBER OF 1K BLOCKS
066427 / 205716,,000000         MOVSI  AC2,      (AC2)        ;; PUT CORE IN K IN LEFT HALF
066430 / 200740,,030120          MOVE  AC3,030120             ;;AC3←1 OR 2 (LOW OR HIGH COST, RESPCTIVELY)
                       ;;	IDIV	AC2,[=1000		;CONVERT TO ONE PERCENT FOR EACH
                       ;;		  =500]-1(AC3)	;	10K (LO) OR 5K(HI) OF CORE
066431 / 230717,,153251          IDIV  AC2,153251(AC3)        ;;;DMP;;
066432 / 262140,,000010           POP    P,000010             ;; GET PROCESSOR LEVEL
066433 / 270400,,000016           ADD  TEM,000016             ;; CALL THIS PROCESSOR LEVEL TOO.
066434 / 262140,,000016           POP    P,000016             ;; GET BACK HIS GSL
                       JLCA20:
066435 / 313400,,000016         CAMLE  TEM,000016             ;; IS HE OVER HIS GUARANTEE?
066436 / 263140,,000000          POPJ    P,                   ;; YES, HE IS OFFICIALLY A SCROUNGER
066437 / 205300,,360000         MOVSI  DDB,360000             ;; NO, GIVE HIM HIGH PRIORITY
066440 / 544304,,021003           HLR  DDB,JBTNPR(J)          ;; WITH HIS REAL PRIORITY AS HIS LOW-ORDER BITS
066441 / 202304,,021003         MOVEM  DDB,JBTNPR(J)          ;
066442 / 263140,,000000          POPJ    P,                   ;
                       ;THIS ROUTINE MUST BE ASSEMBLED WITH THE CONFIGURATION
                       ;TAPE TO DEFINE NUMBER OF JOBS
                       ;THIS SECTION CONTAINS 2 ROUTINES FOR Q MANIPULATION
                       ;AND NECESSARY TABLES FOR SPECIFING OPERATIONS PERFORMED
                       ;BY THEM.
                       ;STORAGE:
                       ;EACH Q IS A RING STRUCTURED, FOWARD AND BACKWARD
                       ;LINKED SRING LIST. THE "FIRST" LINK IN A Q IS
                       ;A Q-HEADER POINTING TO THE FIRST AND LAST MEMBERS OF THE Q.
                       ;A NULL Q HAS ONE LINK--THE Q-HEADER ITSELF.  THE LINKS MAKING
                       ;UP THE QS ARE CONTAINED IN A TABLE (JBTQ) WITH NEGATIVE
                       ;INDICIES (ADDRESSES LESS THAN JBTQ) USED FOR Q-HEADERS AND
                       ;POSITIVE INDICIES USED FOR MEMBERS (JOBS). THUS ONLY ONE WORD
                       ;PER LINK IS NECESSARY--ITS ADDRESS RELATIVE TO JBTQ GIVES THE
                       ;JOB NO. (OR Q NO. IF NEGATIVE) WHICH IT REPRESENTS WHILE
                       ;ITS CONTENTS CONTAINS THE LINKING POINTERS. THESE
                       ;POINTERS ARE ALSO INDICIES RELATIVE TO JBTQ RATHER THAN
                       ;ABSOLUTE ADDRESSES--RH(LINK)=FOWARD POINTER;
                       ;LH(LINK)=BACKWARD POINTER.
                       ;A JOB IS ASSUMED TO BE IN NO MORE THAN ONE Q AT A TIME, AND
                       ;THE NULL JOB (JOB 0) DOES NOT APPEAR IN THE QS  (I.E. JBTQ
                       ;ITSELF IS THE Q-HEADER FOR Q 0).
                       ;ROUTINES:
                       ;BOTH ROUTINES ARE "TABLE DRIVEN" IN THE SENSE THAT THE
                       ;CALLING ROUTINE PROVIDES THE ADDRESS OF A TABLE WHICH
                       ;DEFINES THE SPECIFIC OPERATIONS TO BE PERFORMED.
                       ;QUEUE INITIALIZATION
                       ;PUT ALL JOBS IN NULL QUEUE(JOB NO. NOT ASSIGNED)
                       ;CALLED ON RESTART AT LOC. 143
                       QINI:
066443 / 211300,,000016         MOVNI  DDB,000016             ;;MAKE ALL QUEUE HEADERS POINT TO THEMSELVES
066444 / 504300,,000006           HRL  DDB,000006             ;;BACKWARD POINTERS TOO
066445 / 202306,,021323         MOVEM  DDB,  JBTQ(DDB)        ;
066446 / 253300,,066445         AOBJN  DDB,066445             ;
066447 / 201300,,777770         MOVEI  DDB,777770             ;;PUT JOBS ALL IN NULQ QUEUE
066450 / 206300,,021324         MOVSM  DDB,021324             ;;BACK POINTER FOR JOB 1
066451 / 201200,,000077         MOVEI    J,000077             ;;MAX. JOB NO.
066452 / 202304,,021323         MOVEM  DDB,  JBTQ(J)          ;;FOR. POINTER OF JOBMAX JOB NO.
066453 / 506200,,021313          HRLM    J,021313             ;;SET NULQ HEADER TO POINT TO JOB1
066454 / 201300,,000001         MOVEI  DDB,000001             ;;AND JOBMAX
066455 / 542300,,021313          HRRM  DDB,021313             ;;FORWARD POINTER
066456 / 211440,,000010         MOVNI DSER,  NULQ             ;
                       QINI1:
066457 / 542204,,021322          HRRM    J,021322(J)          ;;JOB I-1 POINT TO JOB I
066460 / 202444,,020574         MOVEM DSER,JOBQUE(J)          ;
066461 / 363200,,037403         SOJLE    J,037403             ;;FINISHED?
066462 / 402000,,021323         SETZM        JBTQ             ;
066463 / 506204,,021324          HRLM    J,021324(J)          ;;BACK POINTER JOB I+1 POINTS TO JOB I
066464 / 254000,,066457          JRST       QINI1             ;
                       ;DELETES A JOB FROM ITS "SOURCE-Q", DETERMINES A "DEST-Q"
                       ;ACCORDING TO ONE OF 3 FUNCTIONS, AND INSERTS THE JOB AT
                       ;THE BEGINNING OR END OF THIS DEST-Q.
                       ;THE DRIVING TABLES ARE "TRANSFER TABLES":
                       ;T. TABLE:	XWD <0 OR -1>, -<QUEUE NUMBER>
                       ;CALLING SEQUENCE:
                       ;	MOVE  J,[JOB NUMBER]
                       ;	MOVEI/HRROI DAT,TRANS TABLE ADDRESS	;DAT NEG MEANS GEN QXFER INT IF NECC
                       ;	PUSHJ PDP,QXFER
                       ;  ON RETURN J IS UNALTERED; LH(Q)=-1  IF QUANT. TIME NOT
                       ;  RESET; =QUANT. TIME IF RESET;RH(Q)=DEST.Q
                       QXFER:
066465 / 305200,,000100         CAIGE    J,000100             ;;JOB NUMBER TOO HIGH?
066466 / 254000,,066500          JRST      066500             ;;J OK
066467 / 260140,,000316         PUSHJ    P,PUSHIT             ;
066470 / 260140,,044320         PUSHJ    P,044320             ;
066471 / 260140,,044120         PUSHJ    P,DISERR             ;
066472 / 000000,,154141                                       ;
066473 / 000303,,777764        DCPQQQ      777764(P)          ;
066474 / 000000,,152275                                       ;
066475 / 777777,,777777                                       ;
066476 / 260140,,000341         PUSHJ    P, POPIT             ;
066477 / 263140,,000000          POPJ    P,                   ;
                       QXFER1:
066500 / 325240,,066506        JUMPGE  DAT,066506             ;;NO INT NEEDED IF POS
066501 / 205440,,000002         MOVSI DSER,000002             ;;DOES HE WANT INT ON Q XFER?
066502 / 616444,,033665          TDNN DSER,JBTIEN(J)          ;
066503 / 254000,,066506          JRST      QXFER2             ;
066504 / 436444,,033765          IORM DSER,JBTIRQ(J)          ;
066505 / 476000,,023475         SETOM      INTREQ             ;
                       QXFER2:
066506 / 402000,,022062         SETZM      022062             ;; FIRE UP SWAPPER WHEN THE SITUATION CHANGES
066507 / 350000,,036150           AOS      036150             ;;COUNT A QUEUE TRANSFER
066510 / 200345,,000000          MOVE    Q,      (DAT)        ;;GET TRANSFER TABLE ADDRESS
066511 / 603340,,200000          TLNE    Q,200000             ;;ARE WE NOW WAITING FOR THE SYSTEM?
066512 / 254000,,066517          JRST      066517             ;;YES
066513 / 200440,,024635          MOVE DSER,024635             ;;NO, WE ARE WAITING FOR THE USER.
066514 / 335004,,031543        SKIPGE      JBTWAT(J)          ;;WERE WE ALREADY WAITING FOR THE USER?
066515 / 272444,,031543          ADDM DSER,JBTWAT(J)          ;;NO.  NOTE THAT WE ARE NOW
066516 / 254000,,066522          JRST      QXFER4             ;
                       QXFER3:
066517 / 210440,,024635          MOVN DSER,024635             ;;WE ARE WAITING FOR THE SYSTEM
066520 / 331004,,031543         SKIPL      JBTWAT(J)          ;;WERE WE ALREADY WAITING FOR THE SYSTEM?
066521 / 272444,,031543          ADDM DSER,JBTWAT(J)          ;;NO.  NOTE THAT WE ARE NOW
                       QXFER4:
066522 / 570440,,000007          HRRE DSER,000007             ;; SAVE QUEUE CODE IN DSER
066523 / 214440,,000011          MOVM DSER,000011             ;;GET THE Q CODE. PUT IT IN JBTSTS FOR THIS JOB
066524 / 307440,,000004          CAIG DSER,000004             ;;IF RELEVANT TYPE
152714 / 000004,,026114                                       ;
152714 / 250504,,026114 POINT 5,04026114,JWPOS                ;
066525 / 137440,,152714           DPB DSER,152714             ;
                       ;GATHER STATISTICS.
066526 / 261140,,000001          PUSH    P,   TAC             ;
066527 / 242440,,000006           LSH DSER,     6             ;
066530 / 201051,,410000         MOVEI  TAC,QUESTA(DSER)       ;
066531 / 260140,,072423         PUSHJ    P,STAPUT             ;
066532 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
066533 / 200444,,021323          MOVE DSER,  JBTQ(J)          ;;DELETE JOB FROM SOURCE-Q
066534 / 204500,,000011          MOVS UCHN,000011             ;;DSER=FORW. LINK, UCHN=BACK LINK
066535 / 542452,,021323          HRRM DSER,  JBTQ(UCHN)       ;;GO BACK AND LINK FORWARD PAST THIS JOB
066536 / 506511,,021323          HRLM UCHN,  JBTQ(DSER)       ;;GO FORWARD AND LINK BACKWARD PAST THIS JOB
066537 / 312340,,066705          CAME    Q,066705             ;;ARE WE ENTERING THE RUN QUEUE?
066540 / 254000,,066576          JRST      066576             ;;NO
066541 / 200704,,020703          MOVE  AC2,JBTPRI(J)          ;;GET THIS GUY'S PRIORITY
153003 / 300000,,000000                                       ;
066542 / 315700,,153003         CAMGE  AC2,153003             ;;SKIP IF BIG: WE WILL SCAN FORWARD
066543 / 254000,,066561          JRST      066561             ;;SMALL PRIORITY: SCAN BACKWARDS.
066544 / 570447,,021323          HRRE DSER,  JBTQ(Q)          ;;SEARCH AHEAD. PICK UP FORWARD LINK
066545 / 321440,,066576         JUMPL DSER,066576             ;;NO ONE HERE. THERE'S NO ORDERING NEEDED
                       QXF6:
066546 / 311711,,020703          CAML  AC2,JBTPRI(DSER)       ;;IS THIS THE RIGHT PLACE FOR HIM?
066547 / 254000,,066553          JRST      066553             ;;YES. OUR (J) PRIORITY > HIS (DSER)
066550 / 570451,,021323          HRRE DSER,  JBTQ(DSER)       ;;OUR PRIORITY IS SMALL, KEEP LOOKING
066551 / 325440,,066546        JUMPGE DSER,066546             ;;LOOP UNLESS END OF LIST, STICK HIM AT BOTTOM.
066552 / 254000,,066576          JRST      066576             ;;GO STICK HIM IN AT THE BOTTOM.
                       QXF8:
066553 / 554511,,021323          HLRZ UCHN,  JBTQ(DSER)       ;;PUT US BEFORE DSER, AND AFTER DSER'S BACK LINK.
066554 / 516504,,021323         HRLZM UCHN,  JBTQ(J)          ;;STICK HIS BACK LINK IN AS OUR BACK LINK.
066555 / 506211,,021323          HRLM    J,  JBTQ(DSER)       ;;STICK US IN AS DSER'S BACK LINK.
066556 / 542444,,021323          HRRM DSER,  JBTQ(J)          ;;STICK DSER IN AS OUR FORWARD LINK.
066557 / 542212,,021323          HRRM    J,  JBTQ(UCHN)       ;;STUFF US IN AS UCHN'S FORWARD LINK.
066560 / 254000,,066604          JRST      066604             ;;ALL DONE WITH TRANSFER.
                       QXSB:
066561 / 574447,,021323          HLRE DSER,  JBTQ(Q)          ;;SORTING IN FROM THE BOTTOM. FOLLOW BACK.
066562 / 321440,,066576         JUMPL DSER,066576             ;;JUMP IF Q IS EMPTY. PUT US IN THE END.
                       QXF5:
066563 / 317711,,020703          CAMG  AC2,JBTPRI(DSER)       ;;SKIP IF OUR PRIORITY ≥ HIS PRIORITY
066564 / 254000,,066570          JRST      066570             ;;OUR PRIORITY IS SMALL. WE HAVE A HOME.
066565 / 574451,,021323          HLRE DSER,  JBTQ(DSER)       ;;LINK BACKWARDS.
066566 / 325440,,066563        JUMPGE DSER,066563             ;;CONTINUE SCAN FOR A PLACE TO PUT US.
066567 / 254000,,066577          JRST      066577             ;;WE BELONG AT TOP OF Q.
                       QXF9:
066570 / 550511,,021323          HRRZ UCHN,  JBTQ(DSER)       ;;WE BELONG BELOW DSER. GET DSER'S FORWARD LINK
066571 / 202504,,021323         MOVEM UCHN,  JBTQ(J)          ;;SET OUR FORWARD LINK FROM DSER'S LINK.
066572 / 542211,,021323          HRRM    J,  JBTQ(DSER)       ;;SET US AS DSER'S FORWARD LINK.
066573 / 506444,,021323          HRLM DSER,  JBTQ(J)          ;;SET DSER AS OUR BACKWARDS LINK
066574 / 506212,,021323          HRLM    J,  JBTQ(UCHN)       ;;SET US AS UCHN'S BACKWARDS LINK.
066575 / 254000,,066604          JRST      066604             ;;ALL DONE.
                       ;QXF3 IS TO ADD GUY AT THE END OF THE QUEUE
                       ;QXF7 IS TO ADD GUY AT THE BEGINNING OF THE QUEUE
                       QXF3:
066576 / 544347,,021323           HLR    Q,  JBTQ(Q)          ;;GET THE LAST LINK IN Q.
                       ;UCHN WILL BE SET TO THE Q-HEADER.
                       QXF7:
066577 / 200507,,021323          MOVE UCHN,  JBTQ(Q)          ;;UCHN IS FORWARD LINK AND Q IS Q-HEADER.
066600 / 542207,,021323          HRRM    J,  JBTQ(Q)          ;;SET FORWARD LINK:
                       ;F/ INSERT IN Q HEAD. B/ INSERT AT END.
066601 / 506212,,021323          HRLM    J,  JBTQ(UCHN)       ;;SET BACK LINK:
                       ;F/ INSERT IN FIRST.  B/ INSERT AT Q-HEAD.
066602 / 552504,,021323         HRRZM UCHN,  JBTQ(J)          ;;SET OUR FORWARD LINK
066603 / 506344,,021323          HRLM    Q,  JBTQ(J)          ;;SET OUR BACK LINK.
                       QXF4:
066604 / 321340,,066610         JUMPL    Q,066610             ;; RETURN IF QUANTUM TIME NOT REQUESTED
                       ;HERE WE ARE IS JOB IS COMING INTO A RUN QUEUE
                       QFIX1:
066605 / 400440,,000000          SETZ DSER,                   ;;CLEAR WAIT STATE CODE IN JBTSTS:
152714 / 000004,,026114                                       ;
152714 / 250504,,026114 POINT 5,04026114,JWPOS                ;
066606 / 137440,,152714           DPB DSER,152714             ;
066607 / 263140,,000000          POPJ    P,                   ;;RETURN
                       ; JOB IS NOT RUNNING.  REQUEUE HIS SEGMENT IF NEEDED.
                       QNORUN:
066610 / 316200,,021635          CAMN    J,021635             ;; WAS THIS GUY WAITING FOR HIGH SEGMENT?
066611 / 402000,,021635         SETZM      021635             ;; YES, NOT ANY MORE
066612 / 135440,,037600           LDB DSER,037600             ;; DOES THIS JOB HAVE A HIGH SEGMENT?
066613 / 322440,,037403         JUMPE DSER,037403             ;; NO, FORGET IT
066614 / 214511,,020574          MOVM UCHN,JOBQUE(DSER)       ;; YES, IS IT IN SEGMENT WAIT QUEUE?
066615 / 302500,,000013          CAIE UCHN,  SEGQ             ;
066616 / 263140,,000000          POPJ    P,                   ;;NO, RETURN
066617 / 261140,,000004          PUSH    P,000004             ;;YES, IF NO ONE ELSE WANTS SEGMENT, REQUE IT
066620 / 201200,,000077         MOVEI    J,000077             ;;LOOK THRU ALL THE WORLD.
                       QNORU1:
066621 / 135500,,037600           LDB UCHN, PSEGN             ;
066622 / 302511,,000000          CAIE UCHN,      (DSER)       ;;SAME SEGMENT?
066623 / 254000,,066633          JRST      066633             ;;NOPE.
066624 / 200704,,026114          MOVE  AC2,JBTSTS(J)          ;;GET JOB STATUS OF THIS GUY
066625 / 603700,,002000          TLNE  AC2,002000             ;; DOESN'T COUNT IF HE'S SWAPPED OUT
066626 / 254000,,066633          JRST      066633             ;;SO LOOK FOR SOMEONE ELSE.
066627 / 214504,,020574          MOVM UCHN,JOBQUE(J)          ;;AND HIS QUEUE
066630 / 302500,,000014          CAIE UCHN,000014             ;;IS THIS GUY RUNNABLE?
066631 / 306500,,000015          CAIN UCHN,    TQ             ;
066632 / 254000,,066641          JRST      066641             ;;THIS GUY WANTS THIS SEGMENT!
                       QNORU3:
066633 / 367200,,066621          SOJG    J,066621             ;;LOOP.
066634 / 211240,,000011         MOVNI  DAT,000011             ;;NO ONE CARES FOR THIS.
066635 / 202251,,020574         MOVEM  DAT,JOBQUE(DSER)       ;
066636 / 201240,,066716         MOVEI  DAT,066716             ;;NO RUNNABLE JOB USING THIS SEGMENT, REQUEUE IT
066637 / 200200,,000011          MOVE    J,  DSER             ;
066640 / 260140,,066465         PUSHJ    P, QXFER             ;
                       QNORU4:
066641 / 262140,,000004           POP    P,000004             ;;RETURN BY POPPING J.
066642 / 263140,,000000          POPJ    P,                   ;;AND POPJ.
                       ;SCANS THE QS RETURNING THE NUMBERS OF THE JOBS IN THE QS.
                       ;THE ORDER AND MANNER IN WHICH THE QS ARE SEARCHED IS
                       ;DETERMINED BY A "SCAN TABLE" ADDRESSED IN THE CALLING SEQ.
                       ;THE SCAN TABLE HAS THE FORM:
                       ;SCANTAB:	XWD <Q1>,<CODE1>	;SCN Q1 ACCRDING TO CODE1
                       ;		...
                       ;		XWD <QN>,<CODEN>	;QN ACCORDING TO CODEN
                       ;		Z		;ZERO TERMINATES TABLE
                       ;EACH Q MAY BE SCANNED IN ONE OF FOUR WAYS SPECIFIED BY <CODE>
                       ;THE CODES ARE:
                       ;QFOR	SCAN WHOLE Q FOWARD
                       ;QFOR1	SCAN FOR ONLY THE 1ST MEMBER (IF ANY)
                       ;QBAK	SCAN WHOLE Q BACKWARD
                       ;QBAK1	SCAN BACKWARD FOR ALL MEMBERS EXCEPT THE 1ST
                       ;CALLING SEQ.
                       ;	MOVEI DAT,SCAN TABLE ADDRESS
                       ;	JSP PC,QSCAN	;SET UP PC FOR REPEATED RETURNS
                       ;	...		;RETURN HERE WHEN NO MORE JOBS
                       ;	...		;RETURN HERE WITH NEXT JOB IN AC J
                       ;			;   AND ITS Q IN LH(QR)
                       ;	PERFORM ANY NECESSARY TESTING OF THIS JOB
                       ;	J,DAT,PC,QR MUST BE PRESERVED
                       ;	JRST (QR)	;RETURN TO QSCAN TO GET NEXT JOB
                       ;			;   IF THIS ONE NOT ACCEPTABLE
                       QSCAN:
066643 / 336645,,000000         SKIPN   QR,      (DAT)        ;;END OF SCAN TABLE?
066644 / 254014,,000000          JRST            (PC)         ;;YES--RETURN TO CALL+1
066645 / 574200,,000015          HLRE    J,000015             ;;NO--GET NO. OF Q
066646 / 254015,,000000          JRST            (QR)         ;;DISPATCH
                       QFOR1:
066647 / 201640,,066652         MOVEI   QR,066652             ;;ONLY THE FIRST JOB
                       QFOR:
066650 / 570204,,021323          HRRE    J,  JBTQ(J)          ;;SCAN FOWARD ALL JOBS
066651 / 325214,,000001        JUMPGE    J,     1(PC)         ;;RETURN THIS JOB NO. CALL+2 UNLESS--
                       QFORB:
066652 / 344240,,066643          AOJA  DAT,066643             ;;END OF THIS Q--GET NEXT Q
                       QBAK1:
066653 / 574204,,021323          HLRE    J,  JBTQ(J)          ;;SCAN BACKWARD ALL JOBS EXCEPT 1TT
066654 / 333004,,021323        SKIPLE        JBTQ(J)          ;;IS THIS THE FIRST MEMBER?
066655 / 254014,,000001          JRST           1(PC)         ;;NO--RETURN CALL+2
066656 / 344240,,066643          AOJA  DAT,066643             ;;YES--GET NEXT Q
                       QBAK:
066657 / 574204,,021323          HLRE    J,  JBTQ(J)          ;;SCAN BACKWARD ALL JOBS
066660 / 327214,,000001         JUMPG    J,     1(PC)         ;;RETURN CALL+2 WITH JOB NO. UNLESS
066661 / 344240,,066643          AOJA  DAT,066643             ;;BEG OF THIS Q--GET NEXT Q
                       QFOR2:
066662 / 570204,,021323          HRRE    J,  JBTQ(J)          ;; ALL BUT FIRST JOB
066663 / 541640,,066650          HRRI   QR,066650             ;; PUT UP NEW RESCAN ADDRESS
066664 / 325200,,066650        JUMPGE    J,066650             ;; IF NOT END OF QUEUE, GET SECOND JOB
066665 / 344240,,066643          AOJA  DAT,066643             ;; END OF QUEUE, TRY NEXT ONE
                       ;DEFINE STATE CODES WHICH DO NOT HAVE AVAL AND REQ FLAGS
                       ;CORRESPONDENCE TABLE BETWEEN JOB STATUS CODES AND QUEUE TRANSFER TABLES
                       ;USED BY SCHEDULER
                       ;RUNCSS SETS JOB STATUS WORD TO NEW STATE CODE.
                       ;SCHEDULER SETS UP QUEUE TRANSFER TABLE ADDRESS FROM
                       ;FOLLOWING TABLE USING NEW STATE CODE AS INDEX
                       QBITS:
066666 / 000000,,066704                                       ;
066667 / 000000,,066706                                       ;
066670 / 000000,,066707                                       ;
066671 / 000000,,066710                                       ;
066672 / 000000,,066711                                       ;
066673 / 000000,,066712                                       ;
066674 / 000000,,066714                                       ;
066675 / 000000,,066720                                       ;
066676 / 000000,,066715                                       ;
066677 / 000000,,066716                                       ;
066700 / 000000,,066713                                       ;
066701 / 000000,,066717                                       ;
066702 / 000000,,066705                                       ;
066703 / 000000,,066704                                       ;
                       ;400000,,0 BIT MEANS IS NOT RUNNABLE QUEUE
                       ;200000,,0 BIT MEANS QUEUE REQUIRES WAITING FOR THE SYSTEM RATHER THAN THE USER
                       QFUCKW:
                       QTW:
066704 / 200000,,777763           XWD 200000,-TQ              ;
                       QRUNW:
066705 / 200000,,777764           XWD 200000,-RUNQ            ;
                       QSTW:
066706 / 600000,,777777           XWD 600000,-STQ		           ;
                       ; SYST TAPE
                       QDTW:
066707 / 600000,,777776           XWD 600000,-DTQ		           ;
                       ; DEC TAPE
                       QDCW:
066710 / 600000,,777775           XWD 600000,-DCQ		           ;
                       ; DATA CONTROL WAIT
                       QMTW:
066711 / 600000,,777774           XWD 600000,-MTQ		           ;
                       ; MAG TAPE
                       QIOWW:
066712 / 400000,,777773           XWD 400000,-IOWQ	           ;
                       ; IOW(EXDEPT TTY) HELD IN IOWQ
                       QINTWW:
066713 / 400000,,777766           XWD 400000,-INTWQ	          ;
                       ; INTERRUPT WAIT QUEUE
                       QDIOWW:
066714 / 600000,,777772           XWD 600000,-DIOWQ           ;
                       QNULW:
066715 / 400000,,777770           XWD 400000,-NULQ	           ;
                       ; NULL QUEUE JOB NO. NOT ASSIGNED
                       QSTOP:
                       QSTOPW:
066716 / 400000,,777767           XWD 400000,-STOPQ	          ;
                       ; UNRUNABLE JOBS TO END OF STOPQ
                       QSEGW:
066717 / 600000,,777765           XWD 600000,-SEGQ	           ;
                       ; SEGMENT WAIT QUEUE
                       QDWW:
066720 / 400000,,777771           XWD 400000,-DWQ		           ;
                       ; DEVICE WAIT GOES BACK TO DEVICE WAIT
                       ISCAN:
                       ;SCAN FOR INPUT
066721 / 777765,,066650           XWD -SEGQ,QFOR	             ;
                       ; SEGMENT WAIT QUEUE
066722 / 777763,,066650           XWD -TQ,QFOR	               ;
                       ; TELETYPE IO WAIT QUEUE
066723 / 777764,,066650           XWD -RUNQ,QFOR              ;
066724 / 777775,,066647           XWD -DCQ,QFOR1              ;
066725 / 777777,,066647           XWD -STQ,QFOR1              ;
066726 / 777776,,066647           XWD -DTQ,QFOR1              ;
066727 / 777774,,066647           XWD -MTQ,QFOR1              ;
066730 / 777775,,066662           XWD -DCQ,QFOR2              ;
066731 / 777777,,066662           XWD -STQ,QFOR2              ;
066732 / 777776,,066662           XWD -DTQ,QFOR2              ;
066733 / 777774,,066662           XWD -MTQ,QFOR2              ;
066734 / 000000,,000000                                       ;
                       ; TABLE TO DECIDE ON WHICH JOB TO SWAP OUT
                       OSCAN:
066735 / 777767,,066657           XWD -STOPQ,QBAK	            ;
                       ;UNRUNABLE JOBS FIRST
066736 / 777774,,066653           XWD -MTQ,QBAK1              ;
066737 / 777776,,066653           XWD -DTQ,QBAK1              ;
066740 / 777777,,066653           XWD -STQ,QBAK1              ;
066741 / 777775,,066653           XWD -DCQ,QBAK1              ;
066742 / 777774,,066647           XWD -MTQ,QFOR1              ;
066743 / 777776,,066647           XWD -DTQ,QFOR1              ;
066744 / 777777,,066647           XWD -STQ,QFOR1              ;
066745 / 777775,,066647           XWD -DCQ,QFOR1              ;
066746 / 777771,,066657           XWD -DWQ,QBAK               ;
066747 / 777766,,066657           XWD -INTWQ,QBAK             ;
066750 / 777773,,066657           XWD -IOWQ,QBAK              ;
066751 / 777764,,066657           XWD -RUNQ,QBAK              ;
066752 / 777763,,066657           XWD -TQ,QBAK                ;
066753 / 000000,,000000                                       ;
                       ALLRUN:
066754 / 777763,,066650           XWD -TQ,QFOR                ;
                       RUNSCA:
066755 / 777764,,066650           XWD -RUNQ,QFOR              ;
066756 / 000000,,000000                                       ;
                       DVWSCA:
066757 / 777771,,066650           XWD -DWQ,QFOR               ;
066760 / 000000,,000000                                       ;
                       TQSCAN:
066761 / 777763,,066650           XWD -TQ,QFOR                ;
066762 / 000000,,000000                                       ;
                       ;HERE RESIDES ALL THE SWAP IN LIST CODE -- RPH 1/15/74
                       ;CALL WITH C(J)=JOB, C(TAC)=BIT TO SET
                       SETSIN:
066763 / 700600,,000400          CONO   PI, PIOFF             ;
066764 / 402000,,022062         SETZM      022062             ;;RUN SWAPPER
066765 / 612044,,032665          TDNE  TAC,JBTSIN(J)          ;;BIT ON ALREADY?
066766 / 254000,,037402          JRST      037402             ;;YES, LEAVE
066767 / 261140,,000001          PUSH    P,   TAC             ;
066770 / 261140,,000002          PUSH    P,  TAC1             ;
066771 / 243040,,066772          JFFO  TAC,066772             ;
066772 / 242100,,000006           LSH TAC1,     6             ;
066773 / 201042,,424000         MOVEI  TAC,424000(TAC1)       ;;SETTING BIT
066774 / 260140,,072423         PUSHJ    P,STAPUT             ;
066775 / 262140,,000002           POP    P,  TAC1             ;
066776 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
066777 / 436044,,032665          IORM  TAC,JBTSIN(J)          ;;TURN IT ON
067000 / 410044,,032665         ANDCA  TAC,JBTSIN(J)          ;;PICK UP ALL OTHER BITS
067001 / 326040,,037402         JUMPN  TAC,037402             ;;LEAVE IF ALREADY LINKED IN
067002 / 135040,,037605           LDB  TAC,037605             ;;PUT AT END OF LIST
067003 / 137200,,037605           DPB    J,037605             ;;NOW WE ARE END
067004 / 137040,,037606           DPB  TAC,037606             ;;AND WE POINT TO OLD LAST
067005 / 137200,,037604           DPB    J,037604             ;;AND HE POINTS TO US
067006 / 400040,,000000          SETZ  TAC,                   ;
067007 / 137040,,037603           DPB  TAC,037603             ;;AND WE ARE END
067010 / 254000,,037402          JRST      037402             ;;ALL DONE
                       ;ENTER HERE WITH C(J)=JOB, C(TAC)=BIT(S) TO CLEAR
                       CLRSIN:
067011 / 700600,,000400          CONO   PI, PIOFF             ;
067012 / 616044,,032665          TDNN  TAC,JBTSIN(J)          ;;IN CASE SOMEONE SNUCK IN
067013 / 254000,,037402          JRST       PIONJ             ;
067014 / 261140,,000001          PUSH    P,   TAC             ;
067015 / 261140,,000002          PUSH    P,  TAC1             ;
067016 / 243040,,067017          JFFO  TAC,067017             ;
067017 / 242100,,000006           LSH TAC1,     6             ;
067020 / 201042,,420000         MOVEI  TAC,SINSTA(TAC1)       ;;CLEARING BIT
067021 / 260140,,072423         PUSHJ    P,STAPUT             ;
067022 / 262140,,000002           POP    P,  TAC1             ;
067023 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
067024 / 413044,,032665        ANDCAB  TAC,JBTSIN(J)          ;;TURN OF REQUESTED BIT
067025 / 603040,,777777          TLNE  TAC,777777             ;;ANY BITS LEFT ON?
067026 / 254000,,037402          JRST      037402             ;;YES, DON'T HAVE TO DE-LINK
067027 / 135040,,037603           LDB  TAC,037603             ;;GET OUR FORWARD LINK
067030 / 261140,,000004          PUSH    P,000004             ;;USE J HERE
067031 / 135200,,037606           LDB    J,037606             ;;AND OUR BACKWARD LINK
067032 / 137200,,037607           DPB    J,037607             ;;STORE OUR BACK IN OUR FORWARD
067033 / 137040,,037603           DPB  TAC,037603             ;;AND OUR FORWARD IN OUR BACK
067034 / 262140,,000004           POP    P,     J             ;
067035 / 402004,,032665         SETZM      JBTSIN(J)          ;;ZERO FOR TESTS
067036 / 254000,,037402          JRST      037402             ;;ALL DONE
                       ;ENTER HERE WITH J SETUP TO FLUSH ALL SWAPIN BITS (DOESN'T CLOBBER ACS)
                       FLUSIN:
067037 / 261140,,000001          PUSH    P,000001             ;;KEEP THIS ROUTINE AUTONOMOUS
067040 / 200044,,032665          MOVE  TAC,JBTSIN(J)          ;
067041 / 607040,,500000          TLNN  TAC,500000             ;;BITS WHICH MAY SET JHLDIN
067042 / 260140,,067065         PUSHJ    P,067065             ;;FLUSH
067043 / 607040,,040000          TLNN  TAC,JRDSNB             ;
067044 / 254000,,067047          JRST      FLUSN1             ;
067045 / 260140,,067053         PUSHJ    P,067053             ;;IF JOB READ BIT ON
067046 / 000000,,063546                                       ;;SEND EVERYONE TO LOSE ROUTINE
                       FLUSN1:
067047 / 205040,,777777         MOVSI  TAC,777777             ;
067050 / 260140,,067011         PUSHJ    P,067011             ;;CLEAR ALL BITS
067051 / 262140,,000001           POP    P,   TAC             ;
067052 / 263140,,000000          POPJ    P,                   ;
                       ;SEARCH FOR ALL OTHER JOBS TRYING TO READ THIS ONE (J)
                       ;AND CALL SUBROUTINE FOLLOWING CALL ON JRSRCH
                       JRSRCH:
067053 / 261140,,000004          PUSH    P,     J             ;
067054 / 201200,,000077         MOVEI    J,000077             ;;SCAN ALL JOBS
                       JRSRC1:
067055 / 554044,,033265          HLRZ  TAC, JBTFS(J)          ;
067056 / 312043,,000000          CAME  TAC,      (P)          ;
067057 / 254000,,067062          JRST      JRSRC2             ;
067060 / 200123,,777777          MOVE TAC1,@777777(P)         ;;GET ROUTINE TO CALL
067061 / 260142,,000000         PUSHJ    P,      (TAC1)       ;;CALL IT
                       JRSRC2:
067062 / 367200,,067055          SOJG    J,JRSRC1             ;
067063 / 262140,,000004           POP    P,     J             ;
067064 / 254000,,037401          JRST      037401             ;;SKIP ROUTINE NAME
                       ;FLUSH JHLDIN FROM UPPER OR LOWERS OF THIS JOB
                       FLUHLD:
067065 / 261140,,000001          PUSH    P,   TAC             ;
067066 / 261140,,000004          PUSH    P,     J             ;
067067 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
067070 / 607040,,001000          TLNN  TAC,001000             ;;SEGMENT?
067071 / 254000,,067104          JRST      067104             ;;NO, EASY
067072 / 201200,,000077         MOVEI    J,000077             ;
                       FLUHL2:
067073 / 135040,,037600           LDB  TAC,037600             ;;GET HIS SEGMENT
067074 / 312043,,000000          CAME  TAC,      (P)          ;;DOES THIS JOB POINT TO US?
067075 / 254000,,067100          JRST      067100             ;;NO
067076 / 205040,,000002         MOVSI  TAC,JHLDIN             ;
067077 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
                       FLUHL3:
067100 / 367200,,067073          SOJG    J,FLUHL2             ;
                       FLUHL4:
067101 / 262140,,000004           POP    P,     J             ;
067102 / 262140,,000001           POP    P,   TAC             ;
067103 / 263140,,000000          POPJ    P,                   ;
                       FLUHL1:
067104 / 135200,,037600           LDB    J, PSEGN             ;
067105 / 322200,,067101         JUMPE    J,067101             ;;ANY SEGMENT?
067106 / 205040,,000002         MOVSI  TAC,JHLDIN             ;
067107 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;CLEAR BIT IN UPPER
067110 / 254000,,067101          JRST      FLUHL4             ;
                       ;CALLED FROM SCNIN TO SWAP GUYS IN JBTSIN IN FIRST
                       GETSIN:
067111 / 400200,,000000          SETZ    J,                   ;
067112 / 201640,,067113         MOVEI   QR,GETSN1             ;
                       GETSN1:
067113 / 135200,,037603           LDB    J,037603             ;;FOLLOW FORWARD LINK
067114 / 326214,,000000         JUMPN    J,      (PC)         ;;GOT ANOTHER JOB
067115 / 254014,,000001          JRST           1(PC)         ;;NO MORE
                       ;SWAPPER CALLED EVERY CLOCK TIC.
                       ;SINCE MOST OPERATIONS STARTED BY THE SWAPPER REQUIRE SEVERAL
                       ;TICS TO RUN TO COMPLETION, SEVERAL FLAGS(FINISH,FIT,FORCE,
                       ;XPANDF) ARE USED TO "REMEMBER" PREVIOUS STATES.
                       ;THE BASIC ALGORITHM:
                       ;IS CORE SHUFFLER WAITING FOR IO TO FINISH FOR SOME JOB?
                       ;  YES--TRY AGAIN TO SHUFFLE(WHEN IO STOPS)
                       ;IS CORE SHUFFLER STILL WAITING FOR IO TO FINISH?
                       ;  YES--RETURN AND DO NOTHING
                       ;IS SWAPPER STILL BUSY?
                       ;  YES--RETURN AND DO NOTHING
                       ;SCAN QS FOR 1ST JOB OUT OF CORE.
                       ; IF NONE--RETURN
                       ;A:
                       ; IF ONE--WILL IT FIT IN LARGEST HOLE IN CORE?
                       ;  YES--START INPUT AND RETURN
                       ;  NO--IS TOTAL FREE CORE(CORTAL) ENOUGH TO ACCOMMODATE IT?
                       ;    YES--CALL CORE SHUFFLER
                       ;       IS SHUFFLER WAITING FOR IO TO STOP?
                       ;         YES--RETURN AND DO NOTHING
                       ;         NO--GO TO A:
                       ;   NO--"REMBER" THIS JOB FOR INPUT AND LOOK FOR OUTPUT:
                       ;ANY JOBS WAITING TO XPAND CORE BY SWAP OUT/IN?
                       ; YES--OUTPUT ONE AND RETURN
                       ; NO--SCAN QS BACKWARD FOR JOB IN CORE WHOSE PROTECT TIME
                       ;		(SET ON INPUT) HAS GONE TO 0.
                       ;  IF NONE--RETURN
                       ;  IF ONE--IS IT SWAPPABLE?
                       ;   YES--OUTPUT AND RETURN
                       ;   NO--SET SWP BIT(FORCE JOB TO BECOME SWAPPABLE)--RETURN
                       ;SOME DEVICE DEPENDENT CODE IS MARKED WITH A "*"
                       SWAP:
151754 / 000000,,070620                                       ;
067116 / 261140,,151754          PUSH  PDP,151754             ;; MAKE SURE WE EXIT THROUGH HERE
067117 / 373000,,022062         SOSLE      022062             ;;SHOULD WE RUN THE SWAPPER THIS TICK?
067120 / 263140,,000000          POPJ  PDP,                   ;;NO.
067121 / 201040,,000500         MOVEI  TAC,000500             ;; RUN THE SWAPPER EVERY SO OFTEN
067122 / 202040,,022062         MOVEM  TAC,SWPCNT             ;
067123 / 332000,,022201         SKIPE      022201             ;;IS CORE SHUFFLER WAITING FOR IO TO STOP
                       ;FOR SOME JOB?
067124 / 260140,,071376         PUSHJ  PDP,071376             ;;YES, CALL CORE SHUFFLER TO SEE IF
                       ;IO STOPPED YET
067125 / 336000,,022201         SKIPN      022201             ;;IS SHUFFLER STILL WAITING?
067126 / 332000,,022060         SKIPE      022060             ;;*NO--IS SWAP SERV. ROUT. STILL BUSY?
067127 / 263140,,000000          POPJ  PDP,                   ;;*YES--RETURN
067130 / 336000,,016225         SKIPN      016225             ;; ARE WE SWAPPING ON FAST BANDS TODAY?
067131 / 254000,,067134          JRST      067134             ;; NO, FORGET IT
067132 / 332000,,154747         SKIPE      154747             ;; YES, IS THE FAST BANS SWAPPER STILL BUSY?
067133 / 263140,,000000          POPJ  PDP,                   ;; YES, COME BACK LATER
                       FINSWP:
067134 / 336200,,021630         SKIPN    J,021630             ;;NO--ANY IN/OUTPUT TO FINISH?
067135 / 254000,,067665          JRST      067665             ;;NO-
067136 / 402000,,022062         SETZM      022062             ;; SET TO RESCAN NEXT TIME AROUND
067137 / 321200,,067621         JUMPL    J,067621             ;;YES--INPUT OR OUTPUT?
                       ; WE COME HERE TO FINISH A SWAPPING INPUT REQUEST
                       FININ:
067140 / 202200,,154752         MOVEM    J,154752             ;
                       ;RESTORE PARTS OF HIS JOB DATA AREA FROM JBTPDL IF IT WAS SAVED THERE....
067141 / 200244,,026114          MOVE  DAT,JBTSTS(J)          ;;GET STATUS
067142 / 607240,,001000          TLNN  DAT,001000             ;;SKIP IF THIS IS A SEGMENT
067143 / 626240,,400000          TRZN  DAT,400000             ;;NOT A SEGMENT. DOES HE HAVE A DATA AREA SAVED?
067144 / 254000,,067155          JRST      067155             ;;SEGMENT OR NOT SAVED IN PDL
067145 / 336004,,022315         SKIPN      JBTPDL(J)          ;
067146 / 254000,,067155          JRST      067155             ;;CANT BE IN THE PDL IF THERE'S NO PDL.
067147 / 202244,,026114         MOVEM  DAT,JBTSTS(J)          ;;NOT SAVED ON PDL ANYMORE.
067150 / 514104,,022315          HRLZ TAC1,JBTPDL(J)          ;;SOURCE (SORT OF)
067151 / 540104,,027120           HRR TAC1,JBTDAT(J)          ;;DESTINATION (SORT OF)
152034 / 000000,,000114                                       ;
152034 / 000000,,000072                                       ;
067152 / 270100,,152034           ADD TAC1,152034             ;;ADD OFFSETS.
067153 / 550244,,027120          HRRZ  DAT,JBTDAT(J)          ;
067154 / 251105,,000114           BLT TAC1,JOBPFI(DAT)        ;;RESTORE JOB DATA AREA TO USER CORE.
                       FININA:
067155 / 332240,,022061         SKIPE  DAT,022061             ;;ANY INPUT ERRORS?
067156 / 254000,,067410          JRST      067410             ;;YES
067157 / 135240,,037613           LDB  DAT,037613             ;;*INPUT--RETURN STORAGE TO DEVICE
067160 / 554044,,021427          HLRZ  TAC,JBTSWP(J)          ;;*1ST BLOCK ADDR.
067161 / 260140,,071205         PUSHJ    P,071205             ;;*
067162 / 200344,,027120          MOVE JDAT,JBTDAT(J)          ;
067163 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;;IS THIS A HIGH SEGMENT?
067164 / 607300,,001000          TLNN  DDB,  JSEG             ;
067165 / 254000,,067202          JRST      067202             ;;NOT A SEGMENT.
067166 / 260140,,042532         PUSHJ    P,042532             ;;FOR ALL LOWERS OF THIS UPPER,
067167 / 260140,,071612         PUSHJ    P,071612             ;;CONTINUE SPACEWAR (ARGUMENT TO UAPPLY)
067170 / 336640,,021635         SKIPN  AC1,021635             ;
067171 / 254000,,067217          JRST      067217             ;;SEGWAIT WASN'T SET.
152062 / 000015,,026114                                       ;
152062 / 000615,,026114 POINT 6,15026114,35                   ;
067172 / 135640,,152062           LDB  AC1,152062             ;
067173 / 302644,,000000          CAIE  AC1,      (J)          ;;WAS THAT GUY WAITING FOR US?
067174 / 254000,,067217          JRST      067217             ;;NO. SEGWAIT WASN'T SET ON OUT ACCOUNT
067175 / 402000,,021635         SETZM      021635             ;;IT WAS OUR FAULT. CLEAR SEGWAIT
067176 / 211640,,000011         MOVNI  AC1, STOPQ             ;
067177 / 202644,,020574         MOVEM  AC1,JOBQUE(J)          ;
067200 / 260140,,046027         PUSHJ    P,046027             ;;QUEUE THIS SEGMENT BACK TO STOPQ
067201 / 254000,,067217          JRST      FININ1             ;
                       ; HERE WE CONTINUE ANY SPW JOB THAT WAS ACTIVE AND GIVE SWAPIN INTS
                       ; NOTE HERE THAT THE ONLY WAY I KNOW THAT A JOB WITH SPW ACTIVE CAN
                       ; GET SWAPPED OUT IS IF IT EXPANDS ITS CORE SIZE, OR IF THE FREE
                       ; STORAGE MECHANISM NEEDS THE 1K BLOCK THE JOB IS SITTING ON.
                       FININ5:
067202 / 260140,,071612         PUSHJ    P,071612             ;; CONTINUE ITS SPW JOB, IF ANY
067203 / 200307,,000073          MOVE  DDB, JOBPC(JDAT)       ;
067204 / 603300,,010000          TLNE  DDB,USRMOD             ;
067205 / 254000,,067217          JRST      067217             ;;NO
067206 / 550307,,000027          HRRZ  DDB,JOBDPG(JDAT)       ;;YES, ADJUST PROG AND PDP IN DUMP AC AREA
067207 / 275307,,000000          SUBI  DDB,      (PROG)       ;;OLD RELOC-NEW RELOC
067210 / 213000,,000006         MOVNS      000006             ;;NEW RELOC-OLD RELOC
067211 / 550447,,000023          HRRZ DSER,000023(JDAT)       ;; SEE IF DUMP PDL IS IN USER'S AREA
067212 / 313440,,000573         CAMLE DSER,000573             ;; IS IT ABOVE SYSTEM
067213 / 311440,,022067          CAML DSER,022067             ;; AND BELOW FREE STORAGE AREA?
067214 / 254000,,067216          JRST      067216             ;; NO
067215 / 272307,,000023          ADDM  DDB,000023(JDAT)       ;; YES, RELOCATE PDL
                       FINZR2:
067216 / 202347,,000027         MOVEM PROG,JOBDPG(JDAT)       ;;STORE NEW AC PROG
                       FININ1:
067217 / 135440,,037600           LDB DSER,037600             ;; # OF UPPER
067220 / 322440,,067233         JUMPE DSER,067233             ;;NONE IF 0
067221 / 200311,,026114          MOVE  DDB,JBTSTS(DSER)       ;
067222 / 554451,,027120          HLRZ DSER,JBTADR(DSER)       ;;PROTECTION OF UPPER
067223 / 326440,,067230         JUMPN DSER,FINZR1             ;
067224 / 135440,,037600           LDB DSER, PSEGN             ;
152076 / 000011,,021427                                       ;
152076 / 001011,,021427 POINT 8,11021427,35                   ;
067225 / 135440,,152076           LDB DSER,152076             ;
067226 / 240440,,000012           ASH DSER,    12             ;
067227 / 275440,,000001          SUBI DSER,     1             ;
                       FINZR1:
067230 / 603300,,000001          TLNE  DDB,   JWP             ;
067231 / 661440,,400000           TLO DSER,400000             ;;FLAG WRITE PROT
067232 / 660440,,400000           TRO DSER,400000             ;;MAKE IT UPPER SEG ADDR
                       FINZRL:
067233 / 205300,,002000         MOVSI  DDB,002000             ;;CLEAR SWP BIT
067234 / 413304,,026114        ANDCAB  DDB,JBTSTS(J)          ;
067235 / 607300,,001000          TLNN  DDB,001000             ;;ONLY SET JOBRL2 FOR LOWERS
067236 / 316447,,000115          CAMN DSER,JOBRL2(PROG)       ;;AND SEE IF ITS REALLY NECESSARY
067237 / 254000,,067244          JRST      FINZ1A             ;
067240 / 332004,,027220         SKIPE      JBTPR2(J)          ;
067241 / 254000,,067244          JRST      067244             ;;AVOID CLOBBERING PEEK-POKE JOBRL2
067242 / 476004,,032043         SETOM       STIME(J)          ;;MARK CORE IMAGE MODIFIED IF CHANGED
067243 / 202447,,000115         MOVEM DSER,JOBRL2(PROG)       ;;SET NEW SEG2 JOBREL
                       FINZ1A:
067244 / 570444,,027320          HRRE DSER,JBTLIN(J)          ;
067245 / 321440,,067262         JUMPL DSER,067262             ;;DETACHED?
067246 / 205300,,200000         MOVSI  DDB,DLYBIT             ;
067247 / 700600,,001004          CONO   PI,001004             ;;KEEP TTYSER OUT
067250 / 616311,,032347          TDNN  DDB,TTYTAB(DSER)       ;;WAS HE DELAYED?
067251 / 254000,,067261          JRST      067261             ;;NO.
067252 / 205300,,400000         MOVSI  DDB,COMBIT             ;
067253 / 612311,,032347          TDNE  DDB,TTYTAB(DSER)       ;;COMMAND ALREADY IN?
067254 / 254000,,067261          JRST      067261             ;;YES
067255 / 350000,,026105           AOS      026105             ;;NOW LOOK AT HIM AGAIN!
067256 / 436311,,032347          IORM  DDB,TTYTAB(DSER)       ;;SET BIT
067257 / 260140,,137150         PUSHJ    P,COMBCK             ;
067260 / 260140,,137063         PUSHJ    P,137063             ;;MAKE SURE ALL IS WELL
                       NOTSET:
067261 / 700600,,002004          CONO   PI, SCNON             ;
                       FINDET:
067262 / 205440,,200000         MOVSI DSER,INTSWD             ;
067263 / 616444,,033665          TDNN DSER,JBTIEN(J)          ;
067264 / 254000,,067271          JRST      FININ2             ;
067265 / 436444,,033765          IORM DSER,JBTIRQ(J)          ;
067266 / 261140,,000004          PUSH    P,     J             ;
067267 / 260140,,050276         PUSHJ    P,INTRUN             ;
067270 / 262140,,000004           POP    P,     J             ;
                       FININ2:
                       ; WE CLEAR JOB DATA AREA IF REQUIRED ALSO
067271 / 402004,,032043         SETZM       STIME(J)          ;; MARK FRESH IMAGE IN CORE
067272 / 336000,,000572         SKIPN      000572             ;;ARE WE TESTING CORE IMAGE AFTER SWAP IN?
067273 / 254000,,067303          JRST      067303             ;;NO.
067274 / 460304,,027120         SETCM  DDB,JBTADR(J)          ;;- SIZE IN LEFT
067275 / 540304,,027120           HRR  DDB,JBTADR(J)          ;;GET ADDRESS IN RIGHT
067276 / 321300,,067301         JUMPL  DDB,067301             ;
067277 / 200446,,000000          MOVE DSER,      (DDB)        ;
067300 / 252300,,067277         AOBJP  DDB,067277             ;
067301 / 200446,,000000          MOVE DSER,      (DDB)        ;
067302 / 253300,,067301         AOBJN  DDB,067301             ;
                       FINAFB:
067303 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;; PICK UP JOB STATUS WORD AGAIN(MAY BE CLOBBERED BY INTRUN)
067304 / 626300,,200000          TRZN  DDB,200000             ;; MUST WE WIPE THE JOB DATA AREA?
067305 / 254000,,067311          JRST      067311             ;; NO, GO AHEAD
067306 / 542304,,026114          HRRM  DDB,JBTSTS(J)          ;
067307 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
067310 / 260140,,072615         PUSHJ    P,CLRINI             ;
                       FININS:
                       ;HERE WE CHECK ALL THE SWAPIN BITS
067311 / 554044,,032665          HLRZ  TAC,JBTSIN(J)          ;
067312 / 322040,,067364         JUMPE  TAC,067364             ;;NO JBTSIN BITS ARE SET. SKIP THIS STUFF.
067313 / 261140,,000004          PUSH    P,     J             ;
067314 / 205040,,500000         MOVSI  TAC,500000             ;;BITS WHICH MAY CAUSE JHLDIN TO BE SET ELSEWHERE
067315 / 612044,,032665          TDNE  TAC,JBTSIN(J)          ;
067316 / 260140,,067065         PUSHJ    P,067065             ;;FLUSH
067317 / 205040,,400000         MOVSI  TAC,INTSNB             ;
067320 / 616044,,032665          TDNN  TAC,JBTSIN(J)          ;;INTERRUPT HANDLER TRYING TO GET HIM IN?
067321 / 254000,,067331          JRST      067331             ;;NO
067322 / 260140,,067011         PUSHJ    P,067011             ;;YES, TURN OFF BIT
067323 / 261140,,036260          PUSH    P,HGCODE             ;
067324 / 201040,,000007         MOVEI  TAC,     7             ;
067325 / 202040,,036260         MOVEM  TAC,HGCODE             ;
067326 / 260140,,050276         PUSHJ    P,INTRUN             ;
067327 / 262140,,036260           POP    P,HGCODE             ;
067330 / 200203,,000000          MOVE    J,      (P)          ;;RESET J
                       NOSINT:
067331 / 205040,,200000         MOVSI  TAC,200000             ;;PHANTON TRYING TO START UP?
067332 / 616044,,032665          TDNN  TAC,JBTSIN(J)          ;
067333 / 254000,,067337          JRST      NOSBAT             ;
067334 / 260140,,067011         PUSHJ    P,CLRSIN             ;
067335 / 260140,,047515         PUSHJ    P,047515             ;;FINISH HIM OFF
067336 / 200203,,000000          MOVE    J,      (P)          ;
                       NOSBAT:
067337 / 205040,,040000         MOVSI  TAC,040000             ;;JOB READ?
067340 / 616044,,032665          TDNN  TAC,JBTSIN(J)          ;
067341 / 254000,,067346          JRST      NOSJRD             ;
067342 / 260140,,067011         PUSHJ    P,CLRSIN             ;
067343 / 260140,,067053         PUSHJ    P,067053             ;;FIND EVERYONE TRYING TO READ THIS JOB
067344 / 000000,,063532                                       ;;AND SEND THEM HERE
067345 / 200203,,000000          MOVE    J,      (P)          ;
                       NOSJRD:
067346 / 205040,,100000         MOVSI  TAC,100000             ;;COMMAND WAIT?
067347 / 616044,,032665          TDNN  TAC,JBTSIN(J)          ;
067350 / 254000,,067360          JRST      NOSCOM             ;
067351 / 260140,,067011         PUSHJ    P,CLRSIN             ;
067352 / 261140,,036260          PUSH    P,HGCODE             ;
067353 / 201040,,000001         MOVEI  TAC,     1             ;
067354 / 202040,,036260         MOVEM  TAC,HGCODE             ;
067355 / 332000,,026105         SKIPE      COMCNT             ;
067356 / 260140,,051212         PUSHJ    P,051212             ;;CALL COMMAND DECODER (NOTE THIS MAY NOT GET THE RIGTH GUY)
067357 / 262140,,036260           POP    P,HGCODE             ;
                       NOSCOM:
067360 / 262140,,000004           POP    P,     J             ;
067361 / 205040,,020000         MOVSI  TAC,SPWSNB             ;
067362 / 612044,,032665          TDNE  TAC,JBTSIN(J)          ;;FORCED OUT BY FS OR LOCK AND SPACEWAR ACTIVE?
067363 / 260140,,067011         PUSHJ    P,067011             ;;YES. JUST CLEAR BIT.
                       NSINBT:
                       ;CHECK IF UPPER WANTS IN
067364 / 200440,,000004          MOVE DSER,     J             ;
067365 / 135200,,037600           LDB    J,037600             ;; DOES THIS JOB HAVE AN UPPER?
067366 / 322200,,067663         JUMPE    J,067663             ;; NO, SCAN FOR MORE INPUT
067367 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;
067370 / 607300,,002000          TLNN  DDB,002000             ;; IS HIGH SEGMENT SWAPPED OUT?
067371 / 254000,,067663          JRST      067663             ;; NO
067372 / 214511,,020574          MOVM UCHN,JOBQUE(DSER)       ;
067373 / 302500,,000014          CAIE UCHN,000014             ;;LOWER RUNABLE?
067374 / 306500,,000015          CAIN UCHN,    TQ             ;
067375 / 260140,,067402         PUSHJ    P,067402             ;;YES, CAUSE UPPER TO COME IN
067376 / 135040,,037612           LDB  TAC,037612             ;; NOW, CAN UPPER FIT IN NOW?
067377 / 317040,,021627          CAMG  TAC,BIGHOL             ;
067400 / 254000,,070640          JRST      070640             ;; YES, GET IT
067401 / 254000,,067663          JRST      067663             ;
                       FININ7:
067402 / 211240,,000013         MOVNI  DAT,  SEGQ             ;
067403 / 202244,,020574         MOVEM  DAT,JOBQUE(J)          ;
067404 / 336000,,021635         SKIPN      021635             ;
067405 / 202440,,021635         MOVEM DSER,021635             ;; MAKE SURE THIS GUY STAYS AROUND!
067406 / 201240,,066717         MOVEI  DAT, QSEGW             ;
067407 / 254000,,066465          JRST       QXFER             ;
                       ;HERE THERE'S A SWAPIN ERROR.
                       INERR:
067410 / 336000,,016225         SKIPN      016225             ;;LIBRASCOPE FAST BANDS?
067411 / 602240,,300000          TRNE  DAT,300000             ;;NO. IBM DISK.  ANY ERRORS?
067412 / 254000,,067414          JRST      067414             ;;L'SCOPE OR IBM ERRORS.
067413 / 254000,,067440          JRST      067440             ;;GO TRY DOING INPUT AGAIN.
067414 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;
067415 / 607300,,001000          TLNN  DDB,  JSEG             ;
067416 / 254000,,067443          JRST      067443             ;;THIS WAS A LOWER.
067417 / 332000,,016225         SKIPE       FBACT             ;
067420 / 332000,,154751         SKIPE      154751             ;
067421 / 254000,,067443          JRST      067443             ;;WE HAVE NO SPARE COPY (THAT WORKS)
                       ;THIS IS A WRITE PROTECTED UPPER. TRY TO SWAP IN THE SPARE.
067422 / 476000,,154751         SETOM      154751             ;;FLAG TO AVOID COMING HERE AGAIN.
067423 / 402000,,022061         SETZM      022061             ;;CLEAR SWAPPER ERROR FLAG
067424 / 135300,,037612           LDB  DDB,037612             ;;THIS IS LIFTED DIRECTLY FROM INJOB
067425 / 135040,,037613           LDB  TAC,IMGOUT             ;
067426 / 311300,,000001          CAML  DDB,   TAC             ;
067427 / 200300,,000001          MOVE  DDB,   TAC             ;
067430 / 242300,,000034           LSH  DDB,000034             ;
067431 / 210100,,000006          MOVN TAC1,   DDB             ;
067432 / 540104,,027120           HRR TAC1,JBTADR(J)          ;
152006 / 000004,,021527           XWD J,JB2SWP                ;
067433 / 200240,,152006          MOVE  DAT,152006             ;
067434 / 554444,,021427          HLRZ DSER,JBTSWP(J)          ;
067435 / 271440,,000001          ADDI DSER,     1             ;
067436 / 553004,,021427         HRRZS      JBTSWP(J)          ;;NO PRIMARY SWAPPING BANDS IN USE
067437 / 254000,,071107          JRST      FBIREQ             ;
                       FININ8:
067440 / 402000,,154751         SETZM      154751             ;;FOR IBM DISK ERRORS, WE TRY AGAIN
067441 / 402000,,021632         SETZM         FIT             ;
067442 / 254000,,070654          JRST       INJO1             ;
                       ;ERROR AND NOT WRITE PROTECTED SEGMENT, OR LOWER.
                       INERNS:
067443 / 260140,,067037         PUSHJ    P,FLUSIN             ;
067444 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;; IS THIS A HIGH SEGMENT?
067445 / 607300,,001000          TLNN  DDB,  JSEG             ;
067446 / 254000,,067457          JRST      067457             ;;NO.
067447 / 205300,,002000         MOVSI  DDB,002000             ;; YES, CALL KILSEG ON ALL JOBS THAT POINT TO THIS SEGMENT
067450 / 412304,,026114        ANDCAM  DDB,JBTSTS(J)          ;
067451 / 200644,,027720          MOVE  AC1,PRJPRG(J)          ;
067452 / 202644,,030142         MOVEM  AC1,JOBNAM(J)          ;; MAKE SURE NO ONE WILL ATTATCH TO HIM
067453 / 260140,,072454         PUSHJ    P,NAMSTT             ;
067454 / 260140,,042532         PUSHJ    P,UAPPLY             ;
067455 / 260140,,067557         PUSHJ    P,067557             ;;CALL SEGERR FOR EACH LOWER.
067456 / 254000,,067663          JRST      067663             ;
                       ;TRY TO RECONSTRUCT JOB DATA AREA
                       INERR7:
067457 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
067460 / 400240,,000000          SETZ  DAT,                   ;
067461 / 336047,,000072         SKIPN  TAC,JOBHCU(PROG)       ;; ANY IO CHANNELS?
067462 / 254000,,067476          JRST      067476             ;; NO, REGENERATE ANY WHAT MAY EXIST
067463 / 201107,,000075         MOVEI TAC1,JOBJDA(PROG)       ;; SCAN THEM ALL AND CHECK FOR VALIDITY
067464 / 505100,,000001          HRLI TAC1,   TAC             ;
                       INERJL:
067465 / 336320,,000002         SKIPN  DDB,@000002            ;; PICK UP ADDRESS OF IO DDB
                       INERJ1:
067466 / 365040,,067465         SOJGE  TAC,INERJL             ;
067467 / 321040,,067477         JUMPL  TAC,067477             ;;IF ALL CHECKED OUT OK, GO ON
067470 / 550300,,000006          HRRZ  DDB,   DDB             ;
067471 / 301300,,037375          CAIL  DDB,037375             ;;DDB IN SYSTEM LOW CORE?
067472 / 311300,,022067          CAML  DDB,022067             ;;NO. IN FREE STORAGE?
067473 / 311300,,022066          CAML  DDB,022066             ;;MUST BE IN PHYSICAL CORE.
067474 / 344240,,067517          AOJA  DAT,067517             ;;LOSER.
067475 / 344240,,067514          AOJA  DAT,067514             ;;IS OK.
                       ; HERE WE CHECK THE NUMBER OF DDB'S HE HAS, ALSO REGENERATE JOB DATA AREA
                       INERC0:
067476 / 402007,,000075         SETZM      JOBJDA(PROG)       ;; MAYBE NO CHANNELS??????
                       INERCN:
067477 / 400040,,000000          SETZ  TAC,                   ;
067500 / 554300,,000610          HLRZ  DDB,000610             ;; COUNT NUMBER OF DDB'S ON CHAIN THAT ARE HIS
                       INERC1:
067501 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;
067502 / 606640,,200000          TRNN  AC1,200000             ;; DOES HE HAVE IT INITED?
067503 / 254000,,067507          JRST      INERC2             ;
067504 / 135640,,037575           LDB  AC1, PJOBN             ;
067505 / 306644,,000000          CAIN  AC1,      (J)          ;
067506 / 271040,,000001          ADDI  TAC,     1             ;
                       INERC2:
067507 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;
067510 / 326300,,067501         JUMPN  DDB,INERC1             ;
067511 / 306241,,000000          CAIN  DAT,      (TAC)        ;; DID WE CHECK AS MANY AS WE FOUND?
067512 / 254000,,067541          JRST      067541             ;; YES, ALL IS WELL
067513 / 254000,,067517          JRST      067517             ;; NO, REGENERATE DATA AREA
                       INERJC:
067514 / 135640,,037575           LDB  AC1,037575             ;; NOW CHECK JOB NUMBERS
067515 / 306644,,000000          CAIN  AC1,      (J)          ;
067516 / 254000,,067466          JRST      INERJ1             ;
                       INERR1:
067517 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
067520 / 260140,,072576         PUSHJ    P,072576             ;; CLEAN IT OUT
067521 / 402007,,000072         SETZM      JOBHCU(PROG)       ;
067522 / 201447,,000075         MOVEI DSER,JOBJDA(PROG)       ;
067523 / 554300,,000610          HLRZ  DDB,DEVLST             ;
                       INERR2:
067524 / 402011,,000000         SETZM            (DSER)       ;
067525 / 200506,,000004          MOVE UCHN,DEVMOD(DDB)        ;
067526 / 606500,,200000          TRNN UCHN,200000             ;; DOES HE HAVE IT INITED??
067527 / 254000,,067536          JRST      INERR3             ;
067530 / 135500,,037575           LDB UCHN,037575             ;; DOES THIS DDB BELONG TO HIM?
067531 / 312500,,000004          CAME UCHN,     J             ;
067532 / 254000,,067536          JRST      INERR3             ;
067533 / 202311,,000000         MOVEM  DDB,      (DSER)       ;; YES, PUT ITS ADDRESS IN JOBJDA
067534 / 350007,,000072           AOS      JOBHCU(PROG)       ;
067535 / 271440,,000001          ADDI DSER,     1             ;
                       INERR3:
067536 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;; MOVE DOWN TO NEXT DDB
067537 / 326300,,067524         JUMPN  DDB,INERR2             ;
067540 / 260140,,045550         PUSHJ    P, ESTOP             ;
                       INERR4:
067541 / 200447,,000072          MOVE DSER,JOBHCU(PROG)       ;
067542 / 205240,,400000         MOVSI  DAT, GOBIT             ;
                       INERRG:
067543 / 201307,,000075         MOVEI  DDB,JOBJDA(PROG)       ;
067544 / 270300,,000011           ADD  DDB,  DSER             ;
067545 / 200306,,000000          MOVE  DDB,      (DDB)        ;
067546 / 200506,,000004          MOVE UCHN,DEVMOD(DDB)        ;
067547 / 603500,,300000          TLNE UCHN,300000             ;
067550 / 412246,,000002        ANDCAM  DAT,DEVIOS(DDB)        ;;CLEAR GOBIT SO USER DOESN'T HANG
067551 / 365440,,067543         SOJGE DSER,INERRG             ;
067552 / 214200,,021630          MOVM    J,FINISH             ;
                       INERR6:
067553 / 205300,,002000         MOVSI  DDB,   SWP             ;
067554 / 412304,,026114        ANDCAM  DDB,JBTSTS(J)          ;
067555 / 402000,,021633         SETZM      XPANDF             ;
067556 / 402000,,021630         SETZM      FINISH             ;
                       SEGERR:
067557 / 316200,,021635          CAMN    J,021635             ;
067560 / 402000,,021635         SETZM      021635             ;
067561 / 260140,,000316         PUSHJ    P,PUSHIT             ;
067562 / 260140,,044066         PUSHJ    P,DISMES             ;
067567 / 260140,,044104         PUSHJ    P,DISJOB             ;
067570 / 260140,,044076         PUSHJ    P,044076             ;
067571 / 260140,,000341         PUSHJ    P, POPIT             ;
067572 / 260140,,137655         PUSHJ    P,TTYERP             ;
067573 / 260140,,042676         PUSHJ    P,INLMES             ;
067600 / 260140,,042713         PUSHJ    P,PRCRCC             ;
067601 / 260140,,137704         PUSHJ    P,TTYSTC             ;
067602 / 200644,,026114          MOVE  AC1,JBTSTS(J)          ;
067603 / 603640,,010000          TLNE  AC1,010000             ;; IS HE REALLY LOGGED IN?
067604 / 254000,,045672          JRST       STOP1             ;
067605 / 254000,,045550          JRST       ESTOP             ;
                       ; ROUTINE TO RELEASE A JOB'S SWAPPING BANDS (LIBRASCOPE ONLY)
                       GIVEBA:
067606 / 336000,,016225         SKIPN       FBACT             ;
067607 / 263140,,000000          POPJ    P,                   ;
067610 / 554504,,021527          HLRZ UCHN,JB2SWP(J)          ;
067611 / 336000,,000012         SKIPN        UCHN             ;
067612 / 554504,,021427          HLRZ UCHN,JBTSWP(J)          ;
                       INERX:
067613 / 260140,,113165         PUSHJ    P,FBGIVE             ;
067614 / 302500,,000040          CAIE UCHN, MAXFB             ;
067615 / 364500,,067613          SOJA UCHN, INERX             ;
067616 / 553004,,021427         HRRZS      JBTSWP(J)          ;
067617 / 553004,,021527         HRRZS      JB2SWP(J)          ;
067620 / 263140,,000000          POPJ    P,                   ;
                       ; AND HERE IS WHERE WE GO TO FINISH A SWAP OUTPUT REQUEST
                       FINOUT:
067621 / 213000,,000004         MOVNS      000004             ;;FINISH OUTPUT, -FINISH=JOB NO.
067622 / 336000,,022061         SKIPN      022061             ;;ANY ERRORS
067623 / 254000,,067626          JRST      FINOU1             ;
067624 / 260140,,067606         PUSHJ    P,067606             ;; RELEASE ALL HIS BANDS AND TRY AGAIN
067625 / 254000,,070452          JRST      OUTJOB             ;
                       FINOU1:
067626 / 332000,,016225         SKIPE       FBACT             ;
067627 / 332000,,154751         SKIPE      154751             ;
067630 / 254000,,067645          JRST       OUTP1             ;
067631 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;
067632 / 607300,,001000          TLNN  DDB,  JSEG             ;
067633 / 254000,,067645          JRST       OUTP1             ;
067634 / 476000,,154751         SETOM      154751             ;
067635 / 554304,,027120          HLRZ  DDB,JBTADR(J)          ;
067636 / 212300,,000001         MOVNM  DDB,000001             ;; IF A WRITE-PROTECTED UPPER, SWAP OUT A SPARE COPY
067637 / 550104,,027120          HRRZ TAC1,JBTADR(J)          ;
067640 / 505101,,777777          HRLI TAC1,777777(TAC)        ;
152006 / 000004,,021527           XWD J,JB2SWP                ;
067641 / 200240,,152006          MOVE  DAT,152006             ;
067642 / 554444,,021427          HLRZ DSER,JBTSWP(J)          ;
067643 / 271440,,000001          ADDI DSER,     1             ;
067644 / 254000,,071000          JRST      FBOREQ             ;
                       OUTP1:
067645 / 201040,,000000         MOVEI  TAC,                   ;;RETURN CORE
067646 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;XWD PROTECT.,RELOC.
067647 / 260140,,072047         PUSHJ  PDP, CORE0             ;
067650 / 265240,,043260           JSP  DAT,043260             ;;SHOULD NEVER HAPPEN
067651 / 336000,,022415         SKIPN      022415             ;;FREE STORAGE FORCING USERS?
067652 / 332000,,022205         SKIPE      022205             ;;NO. LOCK UUO FORCING?
067653 / 634040,,000001          TDZA  TAC,000001             ;;THIS GUY IS BEING FORCED BY FS OR LOCK (ZERO TAC) 
067654 / 254000,,067663          JRST      067663             ;
067655 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;
067656 / 603300,,001000          TLNE  DDB,001000             ;;SEGMENT?
067657 / 260140,,042532         PUSHJ    P,042532             ;;YES. APPLY ROUTINE TO ALL LOWERS
067660 / 260140,,067702         PUSHJ    P,067702             ;;IS SPACEWAR ACTIVE FOR THIS USER? (SET TAC)
067661 / 322040,,067663         JUMPE  TAC,067663             ;;NO.
067662 / 260140,,066763         PUSHJ    P,066763             ;;FORCE THIS GUY TO GET SWAPPED IN
                       SWAPSC:
067663 / 402000,,021633         SETZM      021633             ;;CLEAR XPANDING JOB OUTPUT TO DISK FLAG
067664 / 402000,,021630         SETZM      021630             ;;CLEAR FINISH FLAG
                       SWP2:
067665 / 332200,,021631         SKIPE    J,021631             ;;WAITING FOR JOB TO BECOME SWAPPABLE?
067666 / 254000,,070430          JRST      070430             ;;YES
067667 / 402000,,021632         SETZM      021632             ;;RESCAN FOR INPUT NEXT TIME
067670 / 332000,,021760         SKIPE      021760             ;;IS THERE SOMEONE WHO WANTS TO BE KICKED OUT?
067671 / 254000,,067706          JRST      067706             ;;YES.  SCNIN WILL DO IT (BELIEVE IT OR NOT)
067672 / 335000,,022415        SKIPGE      022415             ;;ARE WE WAITING FOR FREE STORAGE?
067673 / 263140,,000000          POPJ    P,                   ;;YES.
067674 / 337200,,022205         SKIPG    J,022205             ;;ARE WE WAITING FOR A JOB TO BE LOCKED IN?
067675 / 254000,,067706          JRST      067706             ;;NO.
067676 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;;IS THE LOCKING JOB STILL IN CORE?
067677 / 607300,,002000          TLNN  DDB,002000             ;;
067700 / 263140,,000000          POPJ    P,                   ;;JOB IS STILL IN CORE. FOREGO SWAPIN UNTIL LOCKNO=0
067701 / 254000,,067733          JRST      067733             ;;J AND DDB ARE SET TO GET THIS GUY IN.
                       PSPWAC:
067702 / 336004,,020273         SKIPN       SPWGO(J)          ;
067703 / 332004,,020373         SKIPE       SP2GO(J)          ;
067704 / 205040,,020000         MOVSI  TAC,020000             ;;INDICATE WE HAVE SPACEWAR ACTIVE
067705 / 263140,,000000          POPJ    P,                   ;
                       ;SCAN FOR INPUT - LOOK FOR A JOB ON THE DISK WHICH OUGHT TO COME IN.
                       SCNIN:
067706 / 326540,,067711         JUMPN  PID,067711             ;
151700 / 000000,,000002                                       ;
067707 / 261140,,151700          PUSH    P,151700             ;
067710 / 262140,,036260           POP    P,036260             ;
                       ;FORCE EXPANDING JOBS OUT before SCAN FOR INPUT
067711 / 260140,,070723         PUSHJ    P,070723             ;;CHECK XPANDING JOB FIRST
067712 / 336000,,022060         SKIPN      022060             ;;*WERE THERE ANY?
067713 / 332000,,021631         SKIPE       FORCE             ;
067714 / 263140,,000000          POPJ    P,                   ;;YES
067715 / 336000,,016225         SKIPN      016225             ;; ARE WE SWAPPING IN FBPACK TODAY?
067716 / 254000,,067721          JRST      067721             ;; NO
067717 / 332000,,154747         SKIPE      154747             ;; YES, IS THE FBPACK SWAPPER BUSY?
067720 / 263140,,000000          POPJ    P,                   ;; YES, LEAVE NOW
067721 / 260140,,070244         PUSHJ    P,070244             ;;GET TOTAL AMOUNT OF AVAILABLE CORE (CORE IS 
067722 / 202740,,022064         MOVEM  AC3,022064             ;;AVAILABLE IF NOT OCCUPIED BY SYSTEM OR SPW JOBS)
                       ;OR LOCKED CORE.
067723 / 265600,,067111           JSP   PC,GETSIN             ;
067724 / 254000,,067730          JRST      067730             ;;FOUND A JOB IN SWAP IN LIST
067725 / 201240,,066721         MOVEI  DAT,066721             ;;NO MORE IN SWAP IN LIST, TRY QUEUES
067726 / 265600,,066643           JSP   PC,066643             ;;C(J)← NEXT MOST IMPORTANT JOB TO SWAP IN
067727 / 263140,,000000          POPJ    P,                   ;;(THERE IS NO NEXT MOST IMPORTANT JOB)
                       SCNINZ:
067730 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;;THIS JOB OUT OF CORE?
067731 / 607300,,002000          TLNN  DDB,   SWP             ;
067732 / 254015,,000000          JRST            (QR)         ;;NO--CONTINUE SCAN
                       SCNINX:
067733 / 135040,,037612           LDB  TAC,037612             ;;YES--WILL IT FIT IN BIGGEST HOLE?
                       SCNIN1:
067734 / 261140,,000001          PUSH    P,   TAC             ;
067735 / 201040,,470000         MOVEI  TAC,FITSTA             ;
067736 / 260140,,072423         PUSHJ    P,STAPUT             ;
067737 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
067740 / 317040,,021627          CAMG  TAC,BIGHOL             ;
067741 / 254000,,070640          JRST      070640             ;;YES
067742 / 202200,,021632         MOVEM    J,021632             ;;NO--SET FIT FLAG
                       SCNIN2:
067743 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;
067744 / 603300,,001000          TLNE  DDB,001000             ;;IS THIS JOB AN UPPER SEGMENT?
067745 / 254000,,067771          JRST      067771             ;;  YES
067746 / 135300,,037600           LDB  DDB,037600             ;;GET NUMBER OF THIS JOB'S UPPER SEGMENT
067747 / 200446,,026114          MOVE DSER,JBTSTS(DDB)        ;
067750 / 607440,,002000          TLNN DSER,002000             ;;IS UPPER SEGMENT IN CORE?
067751 / 254000,,067754          JRST      067754             ;;  YES, (OR ELSE THERE IS NO UPPER)
067752 / 135440,,037614           LDB DSER,037614             ;;C(DSER) ← INCORE IMAGE SIZE OF THE UPPER
067753 / 270040,,000011           ADD  TAC,000011             ;;C(TAC) ← CORZ SIZE OF SWAPPED OUT PORTION OF JOB
                       DEADR1:
067754 / 200740,,022064          MOVE  AC3,022064             ;;AC3 ← TOTAL CORE SPACE AVAILABLE TO OUR JOB
067755 / 336100,,000006         SKIPN TAC1,000006             ;;DOES THIS JOB HAVE AN UPPER SEGMENT?
067756 / 254000,,067763          JRST      067763             ;;  NO
067757 / 260140,,070312         PUSHJ    P,070312             ;;  YES, IS IT'S SIZE ALREADY REFLECTED IN CORMX?
067760 / 254000,,067763          JRST      067763             ;;  YES
067761 / 260140,,071365         PUSHJ    P,071365             ;;  NO, C(TAC1) ← SIZE OF UPPER SEGMENT
067762 / 274740,,000002           SUB  AC3,000002             ;;AC3 ← (AVAILABLE CORE) - (UPPER CORE SIZE)
                       DEADR9:
067763 / 135300,,037612           LDB  DDB, IMGIN             ;
067764 / 242300,,000012           LSH  DDB,000012             ;;DDB ← CORE SIZE OF JOB (LOWER SEG ONLY)
067765 / 317300,,000017          CAMG  DDB,000017             ;;WILL WE FIT INTO AVAILABLE CORE?
067766 / 254000,,070061          JRST      070061             ;;  YES
067767 / 260140,,070123         PUSHJ    P,070123             ;;  NO
067770 / 254015,,000000          JRST            (QR)         ;;CONTINUE SCAN FOR A JOB TO SWAP IN
                       ; "DEADUP" IS CALLED FROM NEAR SCNIN2, IF THE JOB TO BE SWAPPED IN IS AN
                       ;UPPER SEGMENT AND NO SINGLE HOLE IS LARGE ENOUGH TO CONTAIN IT;
                       ;	CODE BY JAM		COMMENTS BY JHS
                       DEADUP:
067771 / 403440,,000010         SETZB DSER,    JN             ;
067772 / 402000,,022065         SETZM       ISONE             ;
067773 / 200300,,000004          MOVE  DDB,     J             ;
067774 / 201200,,000077         MOVEI    J,000077             ;;SCAN JOB TABLE, LOOKING FOR OUR LOWERS
                       DEADU1:
067775 / 135500,,037600           LDB UCHN, PSEGN             ;
067776 / 302506,,000000          CAIE UCHN,      (DDB)        ;;IS THIS JOB POINTING TO US?
                       DEADU2:
067777 / 367200,,067775          SOJG    J,067775             ;;  NO, CONTINUE SCAN
070000 / 322200,,070040         JUMPE    J,070040             ;;JUMP WHEN SCAN COMPLETED
070001 / 200504,,026114          MOVE UCHN,JBTSTS(J)          ;
070002 / 607500,,000002          TLNN UCHN,000002             ;;LOWER HOLDING?
070003 / 332004,,032665         SKIPE      JBTSIN(J)          ;
070004 / 254000,,070017          JRST      070017             ;;COMING IN
070005 / 214504,,020574          MOVM UCHN,JOBQUE(J)          ;;IF OUR LOWER IS
070006 / 302500,,000014          CAIE UCHN,000014             ;;IN RUNQ OR TQ
070007 / 306500,,000015          CAIN UCHN,000015             ;;THEN GO TO DEADU7
070010 / 254000,,070017          JRST      070017             ;;ELSE CONTINUE SCAN
070011 / 200504,,033565          MOVE UCHN,JBTMSK(J)          ;
070012 / 404504,,033665           AND UCHN,JBTIEN(J)          ;
070013 / 404504,,033765           AND UCHN,JBTIRQ(J)          ;
070014 / 326500,,070017         JUMPN UCHN,DEADU7             ;
070015 / 336004,,020473         SKIPN      JBTST2(J)          ;
070016 / 254000,,067777          JRST      067777             ;;NONE OF THE ABOVE, CONTINUE SCAN
                       DEADU7:
070017 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;
070020 / 603100,,002000          TLNE TAC1,002000             ;;THIS LOWER OF OURS IS SWAPPED OUT?
070021 / 254000,,070031          JRST      070031             ;;	YES
070022 / 554104,,027120          HLRZ TAC1,JBTADR(J)          ;
070023 / 271100,,000001          ADDI TAC1,     1             ;
070024 / 135500,,037614           LDB UCHN,IMGINT             ;
070025 / 242500,,000012           LSH UCHN,000012             ;
070026 / 271112,,000000          ADDI TAC1,      (UCHN)       ;;C(TAC1) ← COMBINED SIZE OF LOWER AND UPPER
070027 / 317100,,022064          CAMG TAC1,022064             ;;BOTH WILL FIT IN CORE AT ONE TIME?
070030 / 476000,,022065         SETOM      022065             ;;  YEP, INDICATE THAT THERE ISONE THAT FITS
                       DEADUC:
070031 / 200100,,000004          MOVE TAC1,     J             ;
070032 / 260140,,071365         PUSHJ    P,071365             ;;C(TAC1) ← SIZE OF LOWER
070033 / 317100,,000011          CAMG TAC1,000011             ;;HAS SUCH A LARGE LOWER BEEN FOUND BEFORE?
070034 / 254000,,067777          JRST      067777             ;;  NO, CONTINUE SCAN FOR LOWERS
070035 / 200440,,000002          MOVE DSER,000002             ;;  YES, REMEMBER SIZE IN DSER
070036 / 200400,,000004          MOVE   JN,000004             ;;   AND REMEMBER JOB# IN JN
070037 / 254000,,067777          JRST      067777             ;;	AND CONTINUE SCAN
                       DEADU3:
070040 / 326400,,070043         JUMPN   JN,070043             ;;ARRIVE HERE WHEN SCAN FOR LOWERS COMPLETE
070041 / 200200,,000006          MOVE    J,000006             ;;ARRIVE HERE IF WE HAVE NO LOWERS ! (?)
070042 / 254015,,000000          JRST            (QR)         ;;DON'T BRING IN UPPER, LOOK FOR SOME OTHER
                       ;  JOB TO SWAP IN
                       ; THIS SENDS THE MESSAGE TO A DEADLOCKED LOWER
                       DEADU4:
070043 / 200200,,000010          MOVE    J,000010             ;;C(JN) = JOB# OF LARGEST LOWER SEGMENT
070044 / 200500,,000001          MOVE UCHN,000001             ;;C(TAC) = SIZE OF UPPER SEGMENT
070045 / 242500,,000012           LSH UCHN,000012             ;
070046 / 270500,,000011           ADD UCHN,  DSER             ;
070047 / 317500,,022064          CAMG UCHN,022064             ;;WILL LARGEST LOWER BE LOCKED OUT?
070050 / 254000,,070061          JRST      070061             ;;  NO, GO SHUFFLE ETC.
070051 / 261140,,000006          PUSH    P,000006             ;;  YES, ETC.
070052 / 316200,,021635          CAMN    J,021635             ;
070053 / 402000,,021635         SETZM      021635             ;
070054 / 260140,,070123         PUSHJ    P,070123             ;
070055 / 262140,,000004           POP    P,     J             ;
070056 / 336000,,022065         SKIPN       ISONE             ;
070057 / 254015,,000000          JRST            (QR)         ;
070060 / 254000,,070061          JRST      SCNIN9             ;
                       ;NOTE:  IF MORE THAN ONE LOWER IS SO LARGE THAT
                       ;  IT TOGETHER WITH THE UPPER WON'T FIT, THEN ONLY
                       ;  ONE OF THEM WILL GET THE DEADLOCK MESSAGE,
                       ;  AND THIS IS PROBABLY A BUG.
                       ; HERE WE SEE IF JOB CAN EVER FIT. IF SO, TRY TO COMPACT CORE TO GET HIM IN
                       ; IF NOT, SCAN FOR SOMEBODY ELSE
                       SCNIN9:
070061 / 201300,,020000         MOVEI  DDB,020000             ;; J MAY CONTAIN THE NUMBER OF THE LOWER HERE
070062 / 412304,,026114        ANDCAM  DDB,JBTSTS(J)          ;; TELL SOMEONE WE GOT HIM IN.
070063 / 313040,,022177         CAMLE  TAC,022177             ;; ENOUGH FREE CORE TO EVENTUALLY
                       ;FIT IN CORE?
070064 / 254000,,070335          JRST      070335             ;;NO, SCAN FOR SOME JOB TO OUTPUT TO MAKE ROOM
070065 / 260140,,071376         PUSHJ  PDP,071376             ;;YES, CALL CORE SHUFFLER TO MOVE JOBS AROUND
070066 / 336000,,021631         SKIPN      021631             ;;REG 12/3/73 SHUFFLER CAN SET FORCE!
070067 / 332000,,022201         SKIPE      022201             ;; SHUFFLER WAITING FOR IO OR SPW?
070070 / 263140,,000000          POPJ  PDP,                   ;; YES, GOODBYE
070071 / 200200,,021632          MOVE    J,021632             ;; NO, SEE IF WE WILL FIT NOW
070072 / 135040,,037612           LDB  TAC, IMGIN             ;
070073 / 317040,,021627          CAMG  TAC,BIGHOL             ;
070074 / 254000,,070640          JRST       INJOB             ;
070075 / 326540,,070100         JUMPN  PID,070100             ;
151700 / 000000,,000002                                       ;
070076 / 261140,,151700          PUSH    P,151700             ;
070077 / 262140,,036260           POP    P,036260             ;
070100 / 254000,,067743          JRST      SCNIN2             ;
                       RESCNI:
070101 / 201240,,066754         MOVEI  DAT,066754             ;
070102 / 265600,,066643           JSP   PC, QSCAN             ;
070103 / 254000,,070543          JRST       NOFIT             ;
070104 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;
070105 / 607300,,002000          TLNN  DDB,   SWP             ;
070106 / 254015,,000000          JRST            (QR)         ;
070107 / 135040,,037612           LDB  TAC, IMGIN             ;
070110 / 135300,,037600           LDB  DDB,037600             ;; SECOND SEGMENT NUMBER
070111 / 322300,,070117         JUMPE  DDB,RESCN2             ;
070112 / 200446,,026114          MOVE DSER,JBTSTS(DDB)        ;
070113 / 607440,,002000          TLNN DSER,   SWP             ;
070114 / 254000,,070117          JRST      RESCN2             ;
152075 / 000006,,021427                                       ;
152075 / 001006,,021427 POINT 8,06021427,35                   ;
070115 / 135440,,152075           LDB DSER,152075             ;
070116 / 270040,,000011           ADD  TAC,  DSER             ;
                       RESCN2:
070117 / 313040,,022177         CAMLE  TAC,CORTAL             ;
070120 / 254015,,000000          JRST            (QR)         ;
070121 / 135040,,037612           LDB  TAC, IMGIN             ;
070122 / 254000,,067734          JRST      SCNIN1             ;
                       ; HERE WE HAVE DETECTED A CORE DEADLOCK
                       DEADLO:
070123 / 201300,,040000         MOVEI  DDB,040000             ;
070124 / 612304,,026114          TDNE  DDB,JBTSTS(J)          ;
070125 / 263140,,000000          POPJ    P,                   ;; WE KNOW ABOUT HIM
070126 / 261140,,000004          PUSH    P,     J             ;
070127 / 660300,,020000           TRO  DDB,020000             ;;NOTE REALLY DEAD AT THIS TIME.
070130 / 436304,,026114           ORM  DDB,JBTSTS(J)          ;; MARK IT AS DETECTED
070131 / 260140,,070324         PUSHJ    P,   GCS             ;
070132 / 313440,,022200         CAMLE DSER,022200             ;; IS HE TOO BIG ALTOGETHER, OR IS SOMEONE KEEPING HIM OUT
070133 / 254000,,070144          JRST      070144             ;; TOO BIG ALTOGETHER.
070134 / 260140,,070136         PUSHJ    P,HALFIN             ;
070135 / 254000,,070145          JRST      DEADL1             ;
                       HALFIN:
070136 / 242200,,000014           LSH    J,000014             ;; SOMEBODY'S FAULT. TELL HIM ABOUT IT.
152303 / 070204,,003410           XWD HALFD,=30*JIFSEC        ;
070137 / 270200,,152303           ADD    J,152303             ;
                       PLANT:
070140 / 700600,,000400          CONO   PI, PIOFF             ;
070141 / 136213,,024117          IDPB    J, CLOCK(PID)        ;
070142 / 700600,,000200          CONO   PI,  PION             ;
070143 / 263140,,000000          POPJ    P,                   ;
                       DEADL2:
070144 / 260140,,070147         PUSHJ    P,DEACLN             ;
                       DEADL1:
070145 / 262140,,000004           POP    P,     J             ;
070146 / 263140,,000000          POPJ    P,                   ;
                       DEACLN:
070147 / 242200,,000014           LSH    J,000014             ;
152301 / 070152,,001604           XWD SDEAD,=15*JIFSEC        ;
070150 / 270200,,152301           ADD    J,152301             ;
070151 / 254000,,070140          JRST      070140             ;;GO PLANT IT
                       ; CLOCK REQUEST TIMES OUT IN 15-SOME-ODD-SECONDS AND COMES HERE:
                       SDEAD:
070152 / 201200,,040000         MOVEI    J,040000             ;
070153 / 413201,,026114        ANDCAB    J,JBTSTS(TAC)        ;;CLEAR SDEADIN (NO MORE CLOCK REQUESTS).
070154 / 606200,,020000          TRNN    J,020000             ;;HAS HE BEEN IN SINCE DETECTION?
070155 / 263140,,000000          POPJ    P,                   ;;YES
070156 / 200200,,000001          MOVE    J,   TAC             ;
070157 / 260140,,070324         PUSHJ    P,   GCS             ;
070160 / 317440,,022200          CAMG DSER,CORMAX             ;
070161 / 263140,,000000          POPJ    P,                   ;
070162 / 214304,,020574          MOVM  DDB,JOBQUE(J)          ;; SEE IF HE HAS STOPPED HIS JOB
070163 / 306300,,000011          CAIN  DDB, STOPQ             ;
070164 / 254000,,070147          JRST      070147             ;; YES, WE WILL GIVE HIM SOME TIME
070165 / 260140,,067037         PUSHJ    P,067037             ;;FLUSH FROM SWAP IN LIST
070166 / 261140,,000004          PUSH    P,     J             ;
070167 / 135200,,037600           LDB    J, PSEGN             ;
070170 / 332000,,000004         SKIPE           J             ;
070171 / 260140,,067037         PUSHJ    P,067037             ;;ALSO UPPER
070172 / 262140,,000004           POP    P,     J             ;
070173 / 260140,,137655         PUSHJ    P,137655             ;; FIND HIS TTY FOR HIM
070174 / 260140,,042676         PUSHJ    P,INLMES             ;
070201 / 260140,,042713         PUSHJ    P,PRCRCC             ;
070202 / 260140,,137704         PUSHJ    P,TTYSTC             ;
070203 / 254000,,045672          JRST       STOP1             ;
                       HALFD:
070204 / 200200,,000001          MOVE    J,   TAC             ;
070205 / 214744,,020574          MOVM  AC3,JOBQUE(J)          ;
070206 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
070207 / 302740,,000011          CAIE  AC3,000011             ;;CLEAR BIT IF HE STOPPED HIMSELF
070210 / 606040,,020000          TRNN  TAC,020000             ;;HAS HE BEEN IN SINCE DETECTION?
070211 / 254000,,070241          JRST      KILLIN             ;
070212 / 260140,,070324         PUSHJ    P,   GCS             ;
070213 / 317440,,022200          CAMG DSER,CORMAX             ;
070214 / 254000,,070217          JRST      HALFD1             ;
070215 / 261140,,000004          PUSH    P,     J             ;
070216 / 254000,,070144          JRST      DEADL2             ;
                       HALFD1:
070217 / 261140,,000011          PUSH    P,  DSER             ;
070220 / 260140,,070244         PUSHJ    P, GCMAX             ;
070221 / 262140,,000011           POP    P,  DSER             ;
070222 / 317440,,000017          CAMG DSER,   AC3             ;
070223 / 254000,,070241          JRST      KILLIN             ;
070224 / 260140,,137657         PUSHJ    P,137657             ;;THIS GUY ONLY SETS ERROR BIT
                       ;DOESN'T CLEAR INPUT UNLESS NECESSARY
070225 / 260140,,042676         PUSHJ    P,INLMES             ;
070235 / 205000,,000100         MOVSI        USRB             ;
070236 / 437006,,000002          IORB      DEVIOS(DDB)        ;
070237 / 260140,,137707         PUSHJ    P,TTYSTR             ;
070240 / 254000,,070136          JRST      HALFIN             ;
                       KILLIN:
070241 / 201300,,040000         MOVEI  DDB,040000             ;
070242 / 412304,,026114        ANDCAM  DDB,JBTSTS(J)          ;
070243 / 263140,,000000          POPJ    P,                   ;
                       ;	GCMAX - ROUTINE TO CALCULATE HOW MUCH CORE IS AVAILABLE FOR A
                       ;	JOB ON THE DISK WHICH WANTS TO COME IN.  CORE IS CONSIDERED
                       ;	TO BE AVAILABLE IF IT IS USER CORE NOT OCCUPIED BY SPW JOBS.
                       GCMAX:
070244 / 402000,,021303         SETZM      021303             ;;72 BITS FOR REMEMBERING
070245 / 402000,,021304         SETZM      021304             ;
070246 / 200740,,035407          MOVE  AC3,035407             ;;COMPUTE -(LOKTOP-SYSTOP)
070247 / 274740,,022207           SUB  AC3,022207             ;;LOCKED CORE SIZE = LOKTOP-SYSTOP
070250 / 270740,,022200           ADD  AC3,022200             ;;ADD SIZE FROM SYSTOP TO MEMSIZ
070251 / 337000,,020266         SKIPG      020266             ;;ANY ONE IN SPW MODE?
070252 / 263140,,000000          POPJ    P,                   ;;NO. THIS IS SIMPLE
070253 / 261140,,000006          PUSH    P,   DDB             ;
153164 / 000010,,020273                                       ;
153164 / 360610,,020273 POINT 6,10020273,5                    ;
070254 / 261140,,153164          PUSH    P,153164             ;;GET A BYTE POINTER
070255 / 260140,,070264         PUSHJ    P,070264             ;;CALL THINK ABOUT P1 SPW JOBS
153165 / 000010,,020373                                       ;
153165 / 360610,,020373 POINT 6,10020373,5                    ;
070256 / 200440,,153165          MOVE DSER,153165             ;;GET ANOTHER BYTE POINTER
070257 / 202443,,000000         MOVEM DSER,      (P)          ;;STUFF IT WHERE GCLP WILL SEE IT
070260 / 260140,,070264         PUSHJ    P,  GCLP             ;
151763 / 000001,,000001                                       ;
070261 / 274140,,151763           SUB    P,151763             ;;ADJUST STACK(A LESS USEFUL COMMENT-FW)
070262 / 262140,,000006           POP    P,   DDB             ;
070263 / 263140,,000000          POPJ    P,                   ;
                       GCLP:
070264 / 201400,,000000         MOVEI   JN,                   ;;INITIALLY LOOK AT LIST BASE
                       GCLP1:
070265 / 135403,,777777           LDB   JN,777777(P)          ;;GET NUMBER OF SOME SPW JOB.
070266 / 322400,,037403         JUMPE   JN,037403             ;;0 MEANS END OF LIST.
070267 / 336010,,020473         SKIPN      JBTST2(JN)         ;;SKIP IF SPACEWAR IS ACTIVE
070270 / 254000,,070265          JRST      070265             ;;NOT STILL ACTIVE
070271 / 201310,,000000         MOVEI  DDB,      (JN)         ;;GET JOB NUMBER INTO DDB
070272 / 260140,,070312         PUSHJ    P,070312             ;;HAVE WE SEEN THIS JOB BEFORE?
070273 / 254000,,070265          JRST      070265             ;;YES. DON'T COUNT AGAIN
070274 / 202011,,021303         MOVEM      GCBITS(DSER)       ;;SO WE WON'T COUNT THIS JOB AGAIN
070275 / 200310,,026114          MOVE  DDB,JBTSTS(JN)         ;
070276 / 602300,,100000          TRNE  DDB,100000             ;;IS THIS JOB LOCKED IN?
070277 / 254000,,070302          JRST      070302             ;;YES. DON'T COUNT IT TWICE
070300 / 554450,,027120          HLRZ DSER,JBTADR(JN)         ;;GET THE PROTECTION
070301 / 275751,,000001          SUBI  AC3,     1(DSER)       ;;DECREASE THE AVAILABLE SIZE.
                       GCLP2:
070302 / 405300,,000077          ANDI  DDB,000077             ;;SEGMENT NUMBER FROM JBTSTS
070303 / 322300,,070265         JUMPE  DDB,070265             ;;LOOP IF NO SEGMENT
070304 / 260140,,070312         PUSHJ    P,070312             ;;SEGMENT SEEN BEFORE?
070305 / 254000,,070265          JRST      070265             ;;YES. DON'T DO IT AGAIN.
070306 / 202011,,021303         MOVEM      GCBITS(DSER)       ;;DON'T COUNT THIS SEGMENT AGAIN
070307 / 554306,,027120          HLRZ  DDB,JBTADR(DDB)        ;;GET THE PROTECTION SIZE
070310 / 275746,,000001          SUBI  AC3,     1(DDB)        ;
070311 / 254000,,070265          JRST      070265             ;;LOOP
                       ;JOB NUMBER IN DDB. SKIP IF WE'VE NOT SEEN THIS JOB BEFORE.
                       ;IOS IS SET WITH WORD TO DEPOSIT IF YOU WANT TO MARK THIS JOB AS SEEN:
                       ; USE	MOVEM	IOS,GCBITS(DSER)	TO REMEMBER HAVING SEEN THIS JOB.
                       GCMCK:
070312 / 200440,,000006          MOVE DSER,   DDB             ;
070313 / 405440,,000001          ANDI DSER,000001             ;;THIS BIT WILL INDEX THE TWO WORD BIT TABLE
070314 / 201000,,000001         MOVEI      000001             ;;THIS BIT WILL BE SHIFTED TO UNIQUE POSITION
070315 / 241300,,777777           ROT  DDB,777777             ;
070316 / 241006,,777760           ROT      777760(DDB)        ;;
070317 / 241300,,000001           ROT  DDB,000001             ;;RESTORE DDB
070320 / 434011,,021303           IOR      GCBITS(DSER)       ;;TURN ON OTHER JOB BITS WE HAVE SEEN AND SET
070321 / 312011,,021303          CAME      GCBITS(DSER)       ;;IS THIS AN OLD JOB NUMBER?
070322 / 350003,,000000           AOS            (P)          ;;  NO, SKIP RETURN
070323 / 263140,,000000          POPJ    P,                   ;;  YES, NORMAL RETURN
                       GCS:
070324 / 200100,,000004          MOVE TAC1,     J             ;
070325 / 260140,,071365         PUSHJ    P,071365             ;; ADD UP HIS CORE SIZE AND SEE IF WE ARE STILL DEADLOCKED
070326 / 200440,,000002          MOVE DSER,  TAC1             ;
070327 / 135100,,037600           LDB TAC1, PSEGN             ;
070330 / 200300,,000002          MOVE  DDB,  TAC1             ;
070331 / 322100,,037403         JUMPE TAC1, CPOPJ             ;
070332 / 260140,,071365         PUSHJ    P,CORSGT             ;
070333 / 270440,,000002           ADD DSER,  TAC1             ;
070334 / 263140,,000000          POPJ    P,                   ;
                       ;SCAN FOR OUTPUT
                       SCNOUT:
070335 / 326540,,070340         JUMPN  PID,070340             ;
151701 / 000000,,000003                                       ;
070336 / 261140,,151701          PUSH    P,151701             ;
070337 / 262140,,036260           POP    P,036260             ;
                       ;(CODE TO LOOK FOR EXPANDING JOBS HAS BEEN MOVED TO SCNIN)
070340 / 200300,,022177          MOVE  DDB,022177             ;;INITIALIZE FREE CORE COUNTER
070341 / 202300,,021644         MOVEM  DDB,SUMCOR             ;
070342 / 402000,,021636         SETZM      021636             ;;CLEAR SIZE OF LARGEST JOB
070343 / 402000,,021637         SETZM      MAXJBN             ;
070344 / 402000,,021640         SETZM      MAXRSZ             ;
070345 / 402000,,021641         SETZM      MAXRJB             ;
070346 / 402000,,021642         SETZM      MAXSSZ             ;
070347 / 402000,,021643         SETZM      MAXSJB             ;
152222 / 026420,,026520           XWD NJOBS,CJOBS             ;
070350 / 200040,,152222          MOVE  TAC,152222             ;
070351 / 251040,,026617           BLT  TAC,026617             ;; MOVE OVER TABLE OF REFERENCE COUNTS
070352 / 200300,,021632          MOVE  DDB,021632             ;;ENOUGH SEEN YET?
152060 / 000006,,026114                                       ;
152060 / 000606,,026114 POINT 6,06026114,35                   ;
070353 / 135440,,152060           LDB DSER,152060             ;
070354 / 322440,,070362         JUMPE DSER,FORCE3             ;
070355 / 200511,,026114          MOVE UCHN,JBTSTS(DSER)       ;
070356 / 603500,,002000          TLNE UCHN,   SWP             ;
152076 / 000011,,021427                                       ;
152076 / 001011,,021427 POINT 8,11021427,35                   ;
070357 / 135440,,152076           LDB DSER,152076             ;
070360 / 607500,,002000          TLNN UCHN,002000             ;; OR IS HE SWAPPED IN?
070361 / 400440,,000000          SETZ DSER,                   ;; YES, HE DOESN'T COUNT INTO CORE WE HAVE TO GET
                       FORCE3:
070362 / 135300,,037614           LDB  DDB,IMGINT             ;
070363 / 270300,,000011           ADD  DDB,000011             ;; ADD IN SIZE OF UPPER
070364 / 202300,,021645         MOVEM  DDB,021645             ;; AND STORE AS AMOUNT NEEDED
070365 / 201240,,066735         MOVEI  DAT,066735             ;;NO--SCAN QS
070366 / 265600,,066643           JSP   PC, QSCAN             ;
070367 / 254000,,070101          JRST      070101             ;
070370 / 312200,,021632          CAME    J,021632             ;; REACHED OURSELVES YET?
070371 / 254000,,070376          JRST      070376             ;; NO.
070372 / 336004,,032665         SKIPN      JBTSIN(J)          ;; GIVE HIGH PRIORITY TO GUYS IN SWAP IN LIST
070373 / 316200,,021635          CAMN    J,021635             ;; IS THIS GUY WAITING FOR A SEGMENT?
070374 / 254015,,000000          JRST            (QR)         ;; YES, EXCEPT FOR US, SCAN BACK ALL THE WAY
070375 / 254000,,070101          JRST      070101             ;; NO, SCAN FOR MORE INPUT
                       SCNOF1:
070376 / 200304,,026114          MOVE  DDB,JBTSTS(J)          ;;GET JOB STATUS BITS
070377 / 603300,,002000          TLNE  DDB,002000             ;;NO, IS JOB ON DISK OR ON ITS WAY?
070400 / 254000,,070600          JRST      070600             ;;YES,CONTINUE SCAN TO FIND ANOTHER JOB TO OUTPUT
070401 / 603300,,000002          TLNE  DDB,000002             ;;SOMEONE TRYING TO KEEP THIS GUY IN?
070402 / 254015,,000000          JRST            (QR)         ;;YES, SKIP HIM
070403 / 603300,,001000          TLNE  DDB,001000             ;;SEGMENT?
070404 / 254000,,070447          JRST      070447             ;;YES. CHECK NJOBS TO SEE IF IT SHOULD BE SWAPPED
070405 / 602300,,100000          TRNE  DDB,100000             ;;LOCKED JOB?
070406 / 254015,,000000          JRST            (QR)         ;;YES. CAN'T BE SWAPPED.
070407 / 312200,,021635          CAME    J,021635             ;;DON'T SWAP OUT IF WAITING FOR A HIGH SEGMENT
070410 / 316200,,022205          CAMN    J,LOCKNO             ;
070411 / 254015,,000000          JRST            (QR)         ;;DON'T SWAP OUT THE GUY WE'RE TRYING TO LOCK IN.
                       FORCE4:
070412 / 312200,,021635          CAME    J,021635             ;; IF WAITING FOR SEGMENT, MUST STAY IN
070413 / 332004,,020473         SKIPE      JBTST2(J)          ;; DOES HE HAVE A SPACEWAR MODULE?
070414 / 254015,,000000          JRST            (QR)         ;;YES. CANT SWAP HIM OUT.
070415 / 554304,,027120          HLRZ  DDB,JBTDAT(J)          ;;PICK UP SIZE OF JOB
070416 / 322315,,000000         JUMPE  DDB,      (QR)         ;
070417 / 260140,,070545         PUSHJ    P,070545             ;;UPDATE SUMCOR AND CHECK IF ENOUGH YET
070420 / 254000,,070600          JRST      070600             ;;NO. LOOK FOR MORE
                       FORCE6:
070421 / 336200,,021637         SKIPN    J,021637             ;;YES, SWAP OUT LARGEST
070422 / 200200,,021641          MOVE    J,MAXRJB             ;
070423 / 326200,,070425         JUMPN    J,FORCE0             ;
070424 / 200200,,021643          MOVE    J,021643             ;;AS A LAST RESORT, SWAP SEGMENT
                       FORCE0:
070425 / 205300,,002000         MOVSI  DDB,   SWP             ;
070426 / 436304,,026114          IORM  DDB,JBTSTS(J)          ;
070427 / 202200,,021631         MOVEM    J,021631             ;;ASSUME NOT SWAPPABLE--IS IT?
                       FORCE1:
070430 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;;LOC. IN PHYSICAL CORE, IS CORE
                       ;ASSIGNED IN MEMORY?
070431 / 254000,,070452          JRST      070452             ;;NO, CANNOT HAVE ACTIVE DEVICES
070432 / 312213,,024061          CAME    J,   JOB(PID)        ;;IF THIS IS CURRENT JOB, WAIT UNTIL
                       ;PROTECTED AREA IS MOVED BACK TO JOB DATA AREA
070433 / 260140,,071623         PUSHJ  PDP,071623             ;;ANY ACTIVE DEVICES?
070434 / 263140,,000000          POPJ  PDP,                   ;;YES--RETURN AND WAIT FOR I/O TO STOP.
070435 / 336300,,021635         SKIPN  DDB,021635             ;; IS ANYONE WAITING FOR A SEGMENT?
070436 / 254000,,070452          JRST      070452             ;; NO
152060 / 000006,,026114                                       ;
152060 / 000606,,026114 POINT 6,06026114,35                   ;
070437 / 135040,,152060           LDB  TAC,152060             ;
070440 / 302044,,000000          CAIE  TAC,      (J)          ;; YES, IS IT US?
070441 / 254000,,070452          JRST      070452             ;; NO
070442 / 205040,,002000         MOVSI  TAC,002000             ;; YES, WE ARE NO LONGER SWAPPABLE
070443 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;
070444 / 402000,,021631         SETZM       FORCE             ;
070445 / 402000,,022062         SETZM      022062             ;; BE SURE AND SCAN AGAIN NEXT TICK
070446 / 263140,,000000          POPJ    P,                   ;
                       FRCE4A:
070447 / 332004,,026420         SKIPE       NJOBS(J)          ;;ANYONE LEFT USING THIS?
070450 / 254015,,000000          JRST            (QR)         ;;YES. SEGMENT SWAP OUT WILL BE CONSIDERED W/LOWERS
070451 / 254000,,070412          JRST      070412             ;;THIS MAY BE A DETACHED SEGMENT. SWAP IT
                       ;OUTPUT A JOB
                       OUTJOB:
070452 / 326540,,070455         JUMPN  PID,070455             ;
151702 / 000000,,000004                                       ;
070453 / 261140,,151702          PUSH    P,151702             ;
070454 / 262140,,036260           POP    P,036260             ;
070455 / 212200,,021630         MOVNM    J,021630             ;;SET FINISH FLAG FOR OUTJOB
070456 / 350000,,036151           AOS      036151             ;
070457 / 402000,,021631         SETZM      021631             ;;CLEAR FORCE FLAG
070460 / 260140,,066610         PUSHJ    P,066610             ;; REQUE HI SEGMENT IF NECESSARY
070461 / 402000,,154751         SETZM      154751             ;
070462 / 205300,,400000         MOVSI  DDB,INTSWW             ;
070463 / 616304,,033665          TDNN  DDB,JBTIEN(J)          ;
070464 / 254000,,070470          JRST      OUTJO1             ;
070465 / 436304,,033765          IORM  DDB,JBTIRQ(J)          ;
070466 / 260140,,050276         PUSHJ    P,INTRUN             ;
070467 / 214200,,021630          MOVM    J,FINISH             ;
                       OUTJO1:
070470 / 554304,,027120          HLRZ  DDB,JBTADR(J)          ;;COMPUTE CORE IMAGE SIZE
070471 / 322300,,070541         JUMPE  DDB,070541             ;;DONT OUTPUT IF 0 CORE
                       ;HERE WE SAVE THE JOB DATA AREA OF A LOWER
070472 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;;GET STATUS
070473 / 332004,,022315         SKIPE      JBTPDL(J)          ;;DON'T SAVE IF THERE'S NO PLACE.
070474 / 603100,,001000          TLNE TAC1,001000             ;;IS THIS A SEGMENT?
070475 / 254000,,070505          JRST      070505             ;;YES. THERE IS NOTHING TO SAVE.
070476 / 514104,,027120          HRLZ TAC1,JBTDAT(J)          ;;SOURCE (SORT OF)
070477 / 540104,,022315           HRR TAC1,JBTPDL(J)          ;;DESTINATION (SORT OF)
152026 / 000000,,000114                                       ;
152026 / 000072,,000114                                       ;
070500 / 270100,,152026           ADD TAC1,152026             ;
070501 / 550244,,022315          HRRZ  DAT,JBTPDL(J)          ;;
070502 / 251105,,000136           BLT TAC1,JBTPLN(DAT)        ;;SAVE THE DATA.
070503 / 201100,,400000         MOVEI TAC1,SAVJDA             ;
070504 / 436104,,026114          IORM TAC1,JBTSTS(J)          ;;DATA AREA IS NOW SAVED IN CORE.
                       OUTJO3:
070505 / 550104,,027120          HRRZ TAC1,JBTADR(J)          ;;LOCATION OF CORE IMAGE
070506 / 212300,,000001         MOVNM  DDB,000001             ;;*SAVE COUNT FOR CALL TO SQOUT. -(SIZE-1)
070507 / 240300,,777766           ASH  DDB,777766             ;;CONVERT TO 1K BLOCKS
070510 / 271300,,000001          ADDI  DDB,     1             ;
070511 / 137300,,037613           DPB  DDB,037613             ;;RECORD AS OUT IMAGE
070512 / 336000,,021633         SKIPN      021633             ;;DONT SET IMGIN IF FROM XPAND1
070513 / 137300,,037612           DPB  DDB, IMGIN             ;
070514 / 332004,,032043         SKIPE       STIME(J)          ;;HAS HIS CORE IMAGE BEEN MODIFIED?
070515 / 254000,,070521          JRST      070521             ;;YES.
070516 / 554304,,021427          HLRZ  DDB,JBTSWP(J)          ;;SEE IF HE HAS BEEN SWAPPED OUT BEFORE
070517 / 326300,,067645         JUMPN  DDB,067645             ;;WAS SWAPPED OUT BEFORE.
070520 / 135300,,037613           LDB  DDB,037613             ;;FIX DDB FOR CALL ON OUTJ1
                       ; WE HAVE DECIDED THAT JOB IS REALLY TO BE SWAPPED
                       ; CALL THE OUTPUT ROUTINE.
                       ;DDB = IMGOUT SIZE. TAC1=LOCATION OF JOB. TAC = -(SIZE-1)
                       OUTJ1:
070521 / 336000,,000572         SKIPN      000572             ;;ARE WE DOING BLT AFTER SWAPIN?
070522 / 254000,,070530          JRST      070530             ;;NO. THEN NO BLT BEFORE SWAP OUT.
070523 / 504100,,000002           HRL TAC1,000002             ;;LOCATION,,LOCATION
070524 / 554244,,027120          HLRZ  DAT,JBTADR(J)          ;;GET THE SIZE
070525 / 271242,,000000          ADDI  DAT,      (TAC1)       ;;COMPUTE ENDING ADDRESS
070526 / 251105,,000000           BLT TAC1,      (DAT)        ;;BLT TO SELF.
070527 / 550104,,027120          HRRZ TAC1,JBTADR(J)          ;;RESTORE TAC1.
                       OUTJ2:
070530 / 505101,,777777          HRLI TAC1,777777(TAC)        ;;*BUILD AND SAVE IOWD FOR SQOUT
070531 / 261140,,000002          PUSH    P,000002             ;;*
070532 / 200240,,000006          MOVE  DAT,000006             ;;*CONVERT CORE IMAGE TO 128 WD BLOCKS
070533 / 260140,,071177         PUSHJ    P,071177             ;;*GET DEVICE STORAGE
070534 / 254000,,070624          JRST      070624             ;;*NONE AVAILABLE
070535 / 336000,,016225         SKIPN       FBACT             ;
070536 / 506044,,021427          HRLM  TAC,JBTSWP(J)          ;;*SAVE DEVICE ADDRESS
070537 / 262140,,000002           POP    P,000002             ;;*GET IOWD
070540 / 254000,,070755          JRST      070755             ;;*START OUTPUT AND RETURN
                       SWP5:
070541 / 137300,,037613           DPB  DDB,037613             ;;SET OUTPUT IMAGE TO 0
070542 / 254000,,067663          JRST      067663             ;;GO LOOK FOR SOMETHING ELSE TO DO
                       NOFIT:
070543 / 402000,,021632         SETZM      021632             ;;FORGET ABOUT FITTING IN A JOB ON DISK
070544 / 263140,,000000          POPJ  PDP,                   ;;ALL JOBS IN CORE ARE HIGHER PRIORITY.
                       ; ROUTINE TO ADD THIS JOB'S SIZE TO CURRENT TOTAL AND SEE IF WE
                       ; HAVE MADE ENOUGH ROOM FOR THE JOB WE ARE TRYING TO FIT IN
                       ; EXPECTS RELOCATION IN DDB, JOB NUMBER IN J
                       SIZCHK:
070545 / 240300,,777766           ASH  DDB,777766             ;;CONVERT TO 1K BLOCKS
070546 / 271300,,000001          ADDI  DDB,     1             ;
070547 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
070550 / 603040,,001000          TLNE  TAC,  JSEG             ;
070551 / 254000,,070566          JRST      SETMRS             ;
070552 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;; IS HE RUNNABLE?
070553 / 302040,,000015          CAIE  TAC,    TQ             ;
070554 / 306040,,000014          CAIN  TAC,  RUNQ             ;
070555 / 254000,,070573          JRST      070573             ;; YES, GET SEPARATE MAXIMUM.
070556 / 317300,,021636          CAMG  DDB,021636             ;;LARGEST SO FAR?
070557 / 254000,,070562          JRST      070562             ;;NO
070560 / 202300,,021636         MOVEM  DDB,021636             ;;YES, SAVE SIZE
070561 / 202200,,021637         MOVEM    J,021637             ;;AND JOB NUMBER
                       FORCE2:
070562 / 273300,,021644          ADDB  DDB,021644             ;;ADD TO TOTAL
070563 / 311300,,021645          CAML  DDB,021645             ;;IS IT WHAT WE NEEDED
070564 / 350003,,000000           AOS            (P)          ;;YES
070565 / 263140,,000000          POPJ    P,                   ;
                       SETMRS:
070566 / 317300,,021642          CAMG  DDB,MAXSSZ             ;
070567 / 254000,,070562          JRST      FORCE2             ;
070570 / 202300,,021642         MOVEM  DDB,MAXSSZ             ;
070571 / 202200,,021643         MOVEM    J,MAXSJB             ;
070572 / 254000,,070562          JRST      FORCE2             ;
                       SETMRJ:
070573 / 317300,,021640          CAMG  DDB,MAXRSZ             ;
070574 / 254000,,070562          JRST      FORCE2             ;
070575 / 202300,,021640         MOVEM  DDB,MAXRSZ             ;
070576 / 202200,,021641         MOVEM    J,MAXRJB             ;
070577 / 254000,,070562          JRST      FORCE2             ;
                       ; ROUTINE TO DECREMENT REFERENCE TO THIS JOB'S UPPER, IF ANY
                       ; IF ALL REFERENCES HAVE BEEN SELECTED FOR SWAPOUT, THEN ADD
                       ; IN THE UPPER SIZE TOO.
                       CJOB:
070600 / 135300,,037600           LDB  DDB,037600             ;; PICK UP NUMBER OF UPPER
070601 / 322315,,000000         JUMPE  DDB,      (QR)         ;
070602 / 200046,,026114          MOVE  TAC,JBTSTS(DDB)        ;; IS UPPER IN CORE?
070603 / 376006,,026520          SOSN       CJOBS(DDB)        ;; DECREMENT REFERENCE COUNT
070604 / 603040,,002000          TLNE  TAC,   SWP             ;
070605 / 254015,,000000          JRST            (QR)         ;
070606 / 261140,,000004          PUSH    P,     J             ;
070607 / 200200,,000006          MOVE    J,   DDB             ;
070610 / 554304,,027120          HLRZ  DDB,JBTADR(J)          ;
070611 / 322300,,070616         JUMPE  DDB,CJBXIT             ;
070612 / 260140,,070545         PUSHJ    P,070545             ;; UPDATE SUMCOR AND CHECK IF ENOUGH YET
070613 / 254000,,070616          JRST      070616             ;; NO, KEEP LOOKING
151763 / 000001,,000001           XWD 1,1                     ;
070614 / 274140,,151763           SUB    P,151763             ;; YES, SWAP OUT LARGEST
070615 / 254000,,070421          JRST      FORCE6             ;
                       CJBXIT:
070616 / 262140,,000004           POP    P,     J             ;
070617 / 254015,,000000          JRST            (QR)         ;
                       ; ALL SWAP RETURNS THROUGH HERE
                       SWPXIT:
070620 / 336000,,021632         SKIPN      021632             ;; ARE WE FITTING SOMEBODY?
070621 / 332000,,021631         SKIPE      021631             ;; OR PERHAPS FORCING SOMEONE?
070622 / 402000,,022062         SETZM      022062             ;; IF SO, FIRE UP SWAPPER SOMETIME
070623 / 263140,,000000          POPJ    P,                   ;
                       FULL:
070624 / 262140,,000001           POP  PDP,   TAC             ;
070625 / 371000,,021634          SOSL      021634             ;;PRINT MESSAGE EVERY 30 SECONDS
070626 / 263140,,000000          POPJ  PDP,                   ;
070627 / 201040,,003410         MOVEI  TAC,003410             ;
070630 / 202040,,021634         MOVEM  TAC,FULCNT             ;
070631 / 265040,,043573           JSP  TAC,ERRPNT             ;
070637 / 254000,,043656          JRST      EXCALP             ;
                       ;INPUT A JOB
                       INJOB:
070640 / 326540,,070643         JUMPN  PID,070643             ;
151703 / 000000,,000005                                       ;
070641 / 261140,,151703          PUSH    P,151703             ;
070642 / 262140,,036260           POP    P,036260             ;
070643 / 202200,,021630         MOVEM    J,021630             ;;SET FINISH FLAG TO INJOB
070644 / 350000,,036152           AOS      036152             ;
070645 / 402000,,154751         SETZM      154751             ;
070646 / 402000,,021632         SETZM      021632             ;;CLEAR FIT FLAG
070647 / 242040,,000012           LSH  TAC,000012             ;
070650 / 275040,,000001          SUBI  TAC,     1             ;
070651 / 403340,,000007         SETZB JDAT,000007             ;;NO CORE NOW
070652 / 260140,,072147         PUSHJ  PDP,CORGET             ;
070653 / 254000,,070666          JRST      070666             ;; NOT AVAILABLE, FREE STORAGE SYSTEM MUST HAVE SNUK IN. RESCAN FOR INPUT.
                       INJO1:
070654 / 135300,,037613           LDB  DDB,037613             ;;GET OUTPUT IMAGE
070655 / 322300,,067217         JUMPE  DDB,067217             ;;DONT INPUT IF OUT IMAGE IS 0
070656 / 135040,,037612           LDB  TAC,037612             ;;GET IN-CORE SIZE.
070657 / 311300,,000001          CAML  DDB,000001             ;;SMALLER THAN OUT?
070660 / 200300,,000001          MOVE  DDB,000001             ;;YES. READ ONLY WHAT WILL FIT.
070661 / 242300,,000034           LSH  DDB,000034             ;;*BUILD IOWD FOR SQIN
070662 / 210100,,000006          MOVN TAC1,000006             ;;*
070663 / 540104,,027120           HRR TAC1,JBTADR(J)          ;;*
070664 / 554044,,021427          HLRZ  TAC,JBTSWP(J)          ;;*GET DEVICE ADDRESS
070665 / 254000,,070752          JRST      070752             ;;*START INPUT
                       INJO3:
070666 / 402000,,021630         SETZM      FINISH             ;
070667 / 336000,,022201         SKIPN      SHFWAT             ;
070670 / 254000,,067665          JRST        SWP2             ;
070671 / 402000,,022062         SETZM      SWPCNT             ;
070672 / 263140,,000000          POPJ    P,                   ;
                       ;XPAND SETS CONDITIONS TO GET MORE CORE FOR A JOB BY SWAPPING IT OUT
                       ;THEN BACK IN TO DESIRED AMOUNT.
                       ;JOBS POSITION IN QS NOT AFFECTED.
                       ;CALL:
                       ;	MOVE J,[JOB NO.]
                       ;	MOVE TAC,[HIGHEST LEGAL ADDRESS DESIRED]
                       ;	PUSHJ P,XPAND
                       XPAND:
070673 / 261140,,000006          PUSH    P,   DDB             ;
070674 / 200300,,000001          MOVE  DDB,000001             ;;ADDRESS TO 1K BLOCKS
070675 / 241300,,777766           ROT  DDB,777766             ;
070676 / 271300,,000001          ADDI  DDB,     1             ;
070677 / 137300,,037612           DPB  DDB, IMGIN             ;
070700 / 250040,,000006          EXCH  TAC,   DDB             ;
070701 / 242040,,000006           LSH  TAC,     6             ;
070702 / 405040,,037700          ANDI  TAC, 37700             ;
070703 / 660040,,000000           TRO  TAC,                   ;
070704 / 260140,,072423         PUSHJ    P,STAPUT             ;
070705 / 200040,,000006          MOVE  TAC,   DDB             ;
                       ;FTSTAT
070706 / 554304,,027120          HLRZ  DDB,JBTADR(J)          ;
070707 / 322300,,070717         JUMPE  DDB,070717             ;;ANY CORE IN MEMORY NOW? (NORMAL XPAND)
070710 / 332004,,021760         SKIPE        XJOB(J)          ;;EXPAND FLAG ALREADY SET?
070711 / 254000,,070714          JRST      070714             ;;YES.  DONT INCREASE XJOB COUNT.
070712 / 476004,,021760         SETOM        XJOB(J)          ;;SET EXPAND FLAG
070713 / 350000,,021760           AOS      021760             ;;INCREASE COUNT OF JOBS TO EXPAND.
                       XPAND3:
070714 / 262140,,000006           POP    P,   DDB             ;
070715 / 402000,,022062         SETZM      SWPCNT             ;
070716 / 263140,,000000          POPJ    P,                   ;
                       XPAND4:
070717 / 137300,,037613           DPB  DDB,037613             ;;CLEAR IMGOUT NOW
070720 / 205300,,002000         MOVSI  DDB,   SWP             ;
070721 / 436304,,026114          IORM  DDB,JBTSTS(J)          ;;AND MARK AS SWAPPED OUT
070722 / 254000,,070714          JRST      XPAND3             ;
                       ;XPAND1 COMPLETES ACTION REQUESTED BY XPAND.
                       ;CALLED WHEN NO INPUT TO DO OR ON SEARCH FOR OUTPUT.
                       XPAND1:
070723 / 336000,,021760         SKIPN      021760             ;;ANY JOBS TO EXPAND?
070724 / 263140,,000000          POPJ    P,                   ;;NO.
070725 / 201200,,000100         MOVEI    J,000100             ;;SCAN FOR EXPANDING JOBS.
070726 / 336004,,021760         SKIPN        XJOB(J)          ;;THIS JOB NEED TO EXPAND?
070727 / 367200,,070726          SOJG    J,070726             ;
070730 / 402004,,021760         SETZM        XJOB(J)          ;;CLEAR THIS JOB.
070731 / 322200,,070736         JUMPE    J,070736             ;;LOSE!
070732 / 370000,,021760           SOS      021760             ;;REDUCE THE COUNT.
070733 / 476000,,021633         SETOM      021633             ;;SET FLAG SO IMGIN WONT BE RESET
070734 / 402000,,022062         SETZM      SWPCNT             ;
070735 / 254000,,070425          JRST      070425             ;;GO START OUTPUT
                       XPAND2:
070736 / 260140,,000316         PUSHJ    P,PUSHIT             ;
070737 / 260140,,044320         PUSHJ    P,044320             ;
070740 / 260140,,044066         PUSHJ    P,DISMES             ;
070750 / 260140,,000341         PUSHJ    P, POPIT             ;
070751 / 263140,,000000          POPJ    P,                   ;
                       ;PUT A REQUEST IN THE SWAPPING QUEUE. ENTER AT SQIN FOR
                       ;	INPUT, SWOUT FOR OUTPUT
                       ;CALL:	MOVE TAC1,XWD -NO. OF WORDS,FIRST CORE LOC.
                       ;	HRRZ TAC,DISK BLOCK NO.
                       ;	PUSHJ PDP,SQIN/SQOUT
                       ;	RETURN HERE ALWAYS
                       ;	CONTENTS OF TAC,TAC1 LOST
                       SQIN:
070752 / 332000,,016225         SKIPE       FBACT             ;
070753 / 254000,,071105          JRST        FBIN             ;
070754 / 661040,,400000           TLO  TAC,400000             ;;SET READ INDICATOR
                       SQOUT:
070755 / 332000,,016225         SKIPE       FBACT             ;
070756 / 254000,,070776          JRST       FBOUT             ;
070757 / 202040,,022061         MOVEM  TAC,022061             ;;STORE THE BLOCK NUMBER
070760 / 202100,,022060         MOVEM TAC1,022060             ;;STORE THE IOWD
070761 / 211040,,000001         MOVNI  TAC,000001             ;;IS THE DEVICE BUSY?
070762 / 250040,,002431          EXCH  TAC,DFBUSY             ;
070763 / 326040,,037403         JUMPN  TAC,037403             ;;YES IF JUMP
                       ;START UP DEVICE WITH SWAPPING REQUEST.
                       ;IF A SWAPPER REQUEST IS WAITING(SQREQ WILL BE NON-ZERO)
070764 / 201100,,000003         MOVEI TAC1,ERATRY             ;
070765 / 202100,,022063         MOVEM TAC1,SERACT             ;
070766 / 200100,,022060          MOVE TAC1,022060             ;;*PUT IOWD INTO TAC1
070767 / 205040,,200000         MOVSI  TAC,200000             ;;*SET "SWAPPER I/O GOING" FLAG ON
070770 / 437040,,022061           ORB  TAC,022061             ;;*
070771 / 214200,,021630          MOVM ITEM,021630             ;; PICK UP JOB NUMBER FOR OUTPUT
070772 / 563000,,000004         HRROS      000004             ;; MAKE LH NEG TO FLAG SWAP OPERATION
070773 / 623040,,400000          TLZE  TAC,400000             ;;*IS THIS JOB A READ?
070774 / 364100,,101764          SOJA TAC1,101764             ;;*YES  -CALL DSKSER
070775 / 364100,,101764          SOJA TAC1,101764             ;;*NO, WRITE.
                       ; FAST-BAND SWAPPER . .  .
                       FBOUT:
152005 / 000004,,021427           XWD J,JBTSWP                ;
070776 / 200240,,152005          MOVE  DAT,152005             ;
070777 / 201440,,000040         MOVEI DSER, MAXFB             ;
                       FBOREQ:
071000 / 554520,,000005          HLRZ UCHN,@000005            ;; PICK UP SWAPPING BAND NUMBER
071001 / 326500,,071004         JUMPN UCHN,FBOUT1             ;
071002 / 201511,,000000         MOVEI UCHN,      (DSER)       ;
071003 / 254000,,071022          JRST      FBOUT3             ;
                       FBOUT1:
071004 / 564300,,000002          HLRO  DDB,  TAC1             ;
071005 / 213000,,000006         MOVNS         DDB             ;
071006 / 275300,,000001          SUBI  DDB,     1             ;
071007 / 231300,,230000         IDIVI  DDB,230000             ;
071010 / 271311,,000000          ADDI  DDB,      (DSER)       ;
071011 / 316300,,000012          CAMN  DDB,  UCHN             ;
071012 / 254000,,071037          JRST      FBOUT6             ;
071013 / 317500,,000006          CAMG UCHN,   DDB             ;
071014 / 254000,,071021          JRST      FBOUT2             ;
071015 / 260140,,113165         PUSHJ    P,113165             ;; TOO MANY BANDS. GIVE SURPLUS BACK.
071016 / 275500,,000001          SUBI UCHN,     1             ;
071017 / 506520,,000005          HRLM UCHN,@   DAT            ;
071020 / 254000,,071004          JRST      FBOUT1             ;
                       FBOUT2:
071021 / 271500,,000001          ADDI UCHN,000001             ;; NOT ENOUGH. GET MORE BANDS.
                       FBOUT3:
071022 / 260140,,113131         PUSHJ    P, FBGET             ;
071023 / 254000,,071026          JRST      FBOUT7             ;
071024 / 506520,,000005          HRLM UCHN,@   DAT            ;
071025 / 254000,,071004          JRST      FBOUT1             ;
                       FBOUT7:
071026 / 202100,,154750         MOVEM TAC1,154750             ;
152310 / 071034,,000001           XWD FBCLK,1                 ;
071027 / 200040,,152310          MOVE  TAC,152310             ;
071030 / 700600,,000400          CONO   PI, PIOFF             ;
071031 / 136040,,024117          IDPB  TAC, CLOCK             ;
071032 / 700600,,000200          CONO   PI,  PION             ;
071033 / 263140,,000000          POPJ    P,                   ;
                       FBCLK:
071034 / 214200,,021630          MOVM    J,FINISH             ;
071035 / 200100,,154750          MOVE TAC1, DIOWD             ;
071036 / 254000,,070776          JRST       FBOUT             ;
                       ; HERE WE HAVE ENOUGH BANDS, SET UP CALL
                       FBOUT6:
071037 / 201511,,000000         MOVEI UCHN,      (DSER)       ;
071040 / 550040,,000002          HRRZ  TAC,  TAC1             ;
071041 / 564700,,000002          HLRO  AC2,  TAC1             ;
071042 / 213000,,000016         MOVNS         AC2             ;
071043 / 402000,,000002         SETZM        TAC1             ;
071044 / 476000,,154747         SETOM      154747             ;
071045 / 402000,,022061         SETZM        SERA             ;
                       FBOUT4:
071046 / 307700,,230000          CAIG  AC2,230000             ;
071047 / 254000,,071075          JRST      FBOUT5             ;
071050 / 261140,,000001          PUSH    P,   TAC             ;
071051 / 261140,,000016          PUSH    P,   AC2             ;
071052 / 261140,,000011          PUSH    P,  DSER             ;
071053 / 261140,,000005          PUSH    P,   DAT             ;
071054 / 201700,,230000         MOVEI  AC2,230000             ;
071055 / 205240,,071103         MOVSI  DAT, DONE1             ;
071056 / 260140,,113223         PUSHJ    P,113223             ;
071057 / 254000,,071070          JRST      FBERR1             ;
071060 / 262140,,000005           POP    P,   DAT             ;
071061 / 262140,,000011           POP    P,  DSER             ;
071062 / 262140,,000016           POP    P,   AC2             ;
071063 / 262140,,000001           POP    P,   TAC             ;
071064 / 271040,,230000          ADDI  TAC,230000             ;
071065 / 275700,,230000          SUBI  AC2,230000             ;
071066 / 271500,,000001          ADDI UCHN,     1             ;
071067 / 254000,,071046          JRST      FBOUT4             ;
                       FBERR1:
071070 / 262140,,000005           POP    P,   DAT             ;
071071 / 262140,,000011           POP    P,  DSER             ;
071072 / 262140,,000016           POP    P,   AC2             ;
071073 / 262140,,000001           POP    P,   TAC             ;
071074 / 254000,,071154          JRST       FBERR             ;
                       FBOUT5:
071075 / 205240,,071101         MOVSI  DAT,  DONE             ;
071076 / 260140,,113223         PUSHJ    P,113223             ;
071077 / 254000,,071154          JRST       FBERR             ;
071100 / 263140,,000000          POPJ    P,                   ;
                       DONE:
071101 / 402000,,022062         SETZM      SWPCNT             ;
071102 / 402000,,154747         SETZM      SWPBSY             ;
                       DONE1:
071103 / 552240,,022061         HRRZM  DAT,  SERA             ;
071104 / 263140,,000000          POPJ    P,                   ;
                       ; LIBRASCOPE INPUT ROUTINE
                       FBIN:
152005 / 000004,,021427           XWD J,JBTSWP                ;
071105 / 200240,,152005          MOVE  DAT,152005             ;
071106 / 201440,,000040         MOVEI DSER, MAXFB             ;
                       FBIREQ:
071107 / 554520,,000005          HLRZ UCHN,@   DAT            ;
071110 / 564300,,000002          HLRO  DDB,  TAC1             ;
071111 / 213000,,000006         MOVNS         DDB             ;
071112 / 275300,,000001          SUBI  DDB,     1             ;
071113 / 231300,,230000         IDIVI  DDB,230000             ;
071114 / 271311,,000000          ADDI  DDB,      (DSER)       ;
071115 / 315500,,000006         CAMGE UCHN,   DDB             ;
071116 / 254000,,071160          JRST       FBINA             ;
071117 / 201511,,000000         MOVEI UCHN,      (DSER)       ;
071120 / 550040,,000002          HRRZ  TAC,  TAC1             ;
071121 / 564700,,000002          HLRO  AC2,  TAC1             ;
071122 / 213000,,000016         MOVNS         AC2             ;
071123 / 402000,,000002         SETZM        TAC1             ;
071124 / 476000,,154747         SETOM      SWPBSY             ;
071125 / 402000,,022061         SETZM        SERA             ;
                       FBIN2:
071126 / 307700,,230000          CAIG  AC2,230000             ;
071127 / 254000,,071150          JRST       FBIN1             ;
071130 / 261140,,000001          PUSH    P,   TAC             ;
071131 / 261140,,000016          PUSH    P,   AC2             ;
071132 / 261140,,000011          PUSH    P,  DSER             ;
071133 / 261140,,000005          PUSH    P,   DAT             ;
071134 / 201700,,230000         MOVEI  AC2,230000             ;
071135 / 205240,,071103         MOVSI  DAT, DONE1             ;
071136 / 260140,,113234         PUSHJ    P,FBREAD             ;
071137 / 254000,,071070          JRST      FBERR1             ;
071140 / 262140,,000005           POP    P,   DAT             ;
071141 / 262140,,000011           POP    P,  DSER             ;
071142 / 262140,,000016           POP    P,   AC2             ;
071143 / 262140,,000001           POP    P,   TAC             ;
071144 / 271040,,230000          ADDI  TAC,230000             ;
071145 / 275700,,230000          SUBI  AC2,230000             ;
071146 / 271500,,000001          ADDI UCHN,     1             ;
071147 / 254000,,071126          JRST       FBIN2             ;
                       FBIN1:
071150 / 205240,,071101         MOVSI  DAT,  DONE             ;
071151 / 260140,,113234         PUSHJ    P,FBREAD             ;
071152 / 254000,,071154          JRST       FBERR             ;
071153 / 263140,,000000          POPJ    P,                   ;
                       ; LIBRASCOPE SWAPPING ERROR ROUTINES
                       FBERR:
071154 / 402000,,022062         SETZM      SWPCNT             ;
071155 / 402000,,154747         SETZM      SWPBSY             ;
071156 / 476000,,022061         SETOM        SERA             ;
071157 / 254000,,067134          JRST      FINSWP             ;
                       FBINA:
071160 / 322500,,071166         JUMPE UCHN, FBINB             ;
071161 / 275511,,777777          SUBI UCHN,777777(DSER)       ;;;replaced;;SUBI UCHN,(DSER)-1
071162 / 211300,,230000         MOVNI  DDB,230000             ;
071163 / 221312,,000000         IMULI  DDB,      (UCHN)       ;
071164 / 504100,,000006           HRL TAC1,   DDB             ;
071165 / 254000,,071105          JRST        FBIN             ;
                       FBINB:
071166 / 260140,,000316         PUSHJ    P,PUSHIT             ;
071167 / 260140,,044320         PUSHJ    P,044320             ;
071170 / 260140,,044120         PUSHJ    P,DISERR             ;
071171 / 000000,,154222                                       ;
071172 / 000303,,777764        DCPQQQ      777764(P)          ;
071173 / 000000,,152275                                       ;
071174 / 777777,,777777                                       ;
071175 / 260140,,000341         PUSHJ    P, POPIT             ;
071176 / 254000,,071154          JRST      071154             ;;ERROR OUT
                       ;FIND A SERIES OF BLOCKS ON THE DISK TO SWAP ONTO. CALLED
                       ;AT CLOCK LEVEL.
                       ;CALL:	MOVEI DAT,NO. OF 1K BLOCKS DESIRED
                       ;	PUSHJ PDP,GXSAT
                       ;	ERROR EXIT	(DISK IS FULL)
                       ;	NORMAL EXIT	;C(TAC) = BLOCK NO.
                       ;CONTENTS OF ACS TAC,TAC1,DAT WILL BE LOST.
                       GXSAT:
071177 / 402000,,000001         SETZM         TAC             ;
071200 / 332000,,016225         SKIPE       FBACT             ;
071201 / 254000,,037401          JRST      CPOPJ1             ;
071202 / 200040,,000004          MOVE  TAC,000004             ;;PUT IT ON BAND NUMBER;JS
071203 / 221040,,001140         IMULI  TAC,001140             ;;CORRESPONDING TO ITS JOB NUMBER
071204 / 350003,,000000           AOS            (PDP)        ;;ALWAYS GIVE OK RETURN
                       FXSAT:
071205 / 263140,,000000          POPJ  PDP,                   ;;DONT NEED FXSAT
                       SWPINI:
071206 / 402000,,154747         SETZM      SWPBSY             ;
071207 / 402000,,022062         SETZM      SWPCNT             ;
071210 / 402000,,021632         SETZM         FIT             ;
071211 / 402000,,021631         SETZM       FORCE             ;
071212 / 402000,,021630         SETZM      FINISH             ;
071213 / 402000,,022061         SETZM        SERA             ;
071214 / 263140,,000000          POPJ  PDP,                   ;
071215 /                 ;::    BEND STANFO.SCHEDU.
071215 /               ;: SCHEDU[J17,SYS] EOF.
071215 /               ;: CORE[J17,SYS]
071215 /                 ;::   BEGIN STANFO.CORE.
                       ;LIST OF GLOBALS AFFECTED:
                       ;JBTADR,CORTAL,CORTAB,HOLEF,SHFWAT,JOBADR
                       ;ACS USED(BESIDES TAC,TAC1,JDAT,IOS,DEVDAT,AND P)
                       ;CORINI	INITIALIZE CORE TABLES
                       ;REG THIS PAGE. 1972: 22 FEB, 15 APRIL, 28 APRIL.
                       COREP:
071215 / 000000,,022075                                       ;
071215 / 441100,,022075 POINT 9,00022075,                     ;
071216 / 000000,,022075                                       ;
071216 / 331100,,022075 POINT 9,00022075,8                    ;
071217 / 000000,,022075                                       ;
071217 / 221100,,022075 POINT 9,00022075,17                   ;
071220 / 000000,,022075                                       ;
071220 / 111100,,022075 POINT 9,00022075,26                   ;
                       CORINI:
152207 / 022074,,022075           XWD CORBEG,CORBEG+1         ;
071221 / 200040,,152207          MOVE  TAC,152207             ;
071222 / 402000,,022074         SETZM      CORBEG             ;
071223 / 251040,,022203           BLT  TAC,COREND             ;
071224 / 402000,,022205         SETZM      022205             ;;NO JOB IS ATTEMPTING TO LOCK
071225 / 200040,,035407          MOVE  TAC,SYSTOP             ;
071226 / 202040,,022207         MOVEM  TAC,022207             ;;TOP OF LOCKED CORE IS SAME AS SYSTEM TOP.
071227 / 200400,,071215          MOVE  TEM,071215             ;;BYTE POINTER TO CORTAB
071230 / 201040,,000400         MOVEI  TAC,000400             ;; =256, MAXIMUM MEM SIZE
071231 / 700200,,010000          CONO  APR,010000             ;;SHUT OFF NXM FLAG
071232 / 634100,,000002          TDZA TAC1,000002             ;;BEGIN ZERO AND SKIP INCREMENT
                       CORI1:
071233 / 271100,,002000          ADDI TAC1,002000             ;;INCREMENT ADDRESS
071234 / 510242,,000000          HLLZ  DAT,      (TAC1)       ;;REFERENCE MEMORY - ZERO RIGHT SIDE OF DAT
071235 / 315100,,000573         CAMGE TAC1,000573             ;;SKIP IF ADDRESS IN SYSTEM
071236 / 664240,,000002          TROA  DAT,000002             ;;IN SYSTEM CODE WILL BE 103
071237 / 700300,,010000         CONSZ  APR,010000             ;;SKIP UNLESS NXM
071240 / 644240,,000103          TRCA  DAT,000103             ;;NXM CODE IS 103, IF SYSTEM, SET TO 101
071241 / 350000,,022177           AOS      022177             ;;THIS BLOCK OF CORE IS AVAILABLE.
071242 / 136240,,000010          IDPB  DAT,000010             ;;MARK THIS BLOCK IN CORTAB
071243 / 602240,,000002          TRNE  DAT,000002             ;;SKIP IF NO NXM
071244 / 254000,,071252          JRST      071252             ;;NXM. QUIT NOW.
071245 / 662240,,000103          TROE  DAT,000103             ;;SET NXM CODE, SKIP IF BEYOND SYSTEM
071246 / 202400,,022203         MOVEM  TEM,022203             ;;SAVE CORE2P
071247 / 367040,,071233          SOJG  TAC,071233             ;;LOOP IF STILL INSIDE POSSIBLE MEMORY
071250 / 271100,,002000          ADDI TAC1,002000             ;;FULL HOUSE.
071251 / 136240,,000010          IDPB  DAT,   TEM             ;
                       CORI2:
071252 / 202100,,022066         MOVEM TAC1,022066             ;;SAVE FIRST PHYSICAL NON-EX ADDRESS 
071253 / 202100,,022067         MOVEM TAC1,022067             ;;SETUP LOWEST ADDRESS IN FREE STORAGE
071254 / 275100,,000001          SUBI TAC1,000001             ;;DECREMENT TO MAKE SYSTEM JOBREL
071255 / 202100,,000037         MOVEM TAC1,000037             ;;SAVE SYSTEM JOBREL FOR EXEC DDT AND UEDDT
071256 / 133000,,000010           IBP      000010             ;;INCREMENT TO POINT TO 2ND NONEX DATA IN CORTAB
071257 / 202400,,022176         MOVEM  TEM,022176             ;;SAVE AS POINTER PAST ALL REAL MEMORY,
071260 / 200040,,022177          MOVE  TAC,022177             ;;GET SIZE OF USER CORE
071261 / 242040,,000012           LSH  TAC,000012             ;;TURN K INTO WORDS
071262 / 202040,,022200         MOVEM  TAC,022200             ;;SAVE AS MAX SIZE OF USER CORE
071263 / 201040,,610000         MOVEI  TAC, %SWPL             ;
071264 / 202040,,022204         MOVEM  TAC,022204             ;;SET SYSTEM SWAPLIMIT.
071265 / 263140,,000000          POPJ    P,                   ;
                       CORUUO:
071266 / 322040,,071273         JUMPE  TAC,071273             ;;IS ARGUMENT ZERO?
071267 / 350003,,000000           AOS            (P)          ;;ASSUME SUCCESS RETURN.
071270 / 260140,,072775         PUSHJ    P,072775             ;;CORE UUO WILL FORCE UNLOCK.
071271 / 260140,,071300         PUSHJ    P,071300             ;;DO IT!!
071272 / 370003,,000000           SOS            (P)          ;;BAD ASSUMPTION. FAILURE RETURN.
                       ZERCOR:
071273 / 200040,,022200          MOVE  TAC,022200             ;;GET CURRENT FREE SPACE.
071274 / 313040,,022204         CAMLE  TAC,022204             ;;MORE THERE THAN HE CAN HAVE?
071275 / 200040,,022204          MOVE  TAC,022204             ;;YES. TELL HIM MAX WE'LL ALLOW.
071276 / 240040,,777766           ASH  TAC,777766             ;;CONVERT TO BLOCKS!
071277 / 254000,,060225          JRST      060225             ;;RETURN CORMAX TO USER
                       UCORE:
071300 / 435040,,001777          IORI  TAC,001777             ;;ROUND UP TO A 1K BOUNDARY.
071301 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;;GET JOB STATUS
071302 / 607100,,001000          TLNN TAC1,001000             ;;AND SKIP IF THIS IS AN UPPER.
071303 / 254000,,071323          JRST      071323             ;;NOT AN UPPER.
071304 / 261140,,000004          PUSH    P,000004             ;;SAVE UPPER'S JOB NUMBER.
071305 / 201200,,000077         MOVEI    J,000077             ;;LOOK THRU ALL JOBS...
                       CORCSO:
071306 / 135100,,037600           LDB TAC1,037600             ;;DOES THIS GUY POINT TO ME?
071307 / 312103,,000000          CAME TAC1,      (P)          ;;SKIP IF A USER OF THIS UPPER.
071310 / 254000,,071320          JRST      071320             ;;NO.
071311 / 200100,,000004          MOVE TAC1,000004             ;;TAC ← JOB NUMBER OF THIS LOWER.
071312 / 260140,,071365         PUSHJ    P,071365             ;;GET THE SIZE OF THIS LOWER.
071313 / 271101,,000001          ADDI TAC1,     1(TAC)        ;;LOWER SIZE + MY REQUEST SIZE.
                       CORCS3:
071314 / 317100,,022200          CAMG TAC1,022200             ;;TOO BIG?
071315 / 254000,,071320          JRST      071320             ;;NOT TOO BIG. CHECK OTHER LOWERS.
071316 / 262140,,000004           POP    P,000004             ;;THIS LOWER AND ME WONT FIT
071317 / 263140,,000000          POPJ    P,                   ;;GIVE THE ERROR RETURN.
                       CORCSL:
071320 / 367200,,071306          SOJG    J,071306             ;;CONTINUE SCAN THRU ALL JOBS.
071321 / 262140,,000004           POP    P,000004             ;;RESTORE J
071322 / 254000,,071331          JRST      071331             ;;SO FAR, SO GOOD.
                       CORCS2:
071323 / 135100,,037600           LDB TAC1,037600             ;;NOT A SEGMENT. HAS IT AN UPPER?
071324 / 332240,,000002         SKIPE  DAT,000002             ;;SKIP IF NO UPPER. GET NUMBER IN DAT
071325 / 260140,,071365         PUSHJ    P,071365             ;;GET SIZE OF UPPER IN TAC1.
071326 / 271101,,000001          ADDI TAC1,     1(TAC)        ;;UPPER'S SIZE + THIS REQUEST.
071327 / 313100,,022200         CAMLE TAC1,022200             ;;DOES IT FIT?
071330 / 263140,,000000          POPJ    P,                   ;;NOPE.
                       CORXOK:
071331 / 261140,,000001          PUSH    P,000001             ;;SAVE SIZE WE WANT TO BE.
071332 / 261140,,000014          PUSH    P,000014             ;;SAVE
071333 / 261140,,000004          PUSH    P,000004             ;;SAVE J IF THIS IS A SEGMENT.
071334 / 260140,,045074         PUSHJ    P,045074             ;;WAIT FOR ALL IO TO STOP.
071335 / 254000,,071337          JRST      071337             ;
                       CORYOK:
071336 / 260140,,046124         PUSHJ    P,WSCHED             ;
071337 / 260140,,071623         PUSHJ    P,071623             ;;MAKE SURE WE CAN BE MOVED.
071340 / 254000,,071336          JRST      071336             ;;NO. WAIT UNTIL WE CAN.
071341 / 262140,,000004           POP    P,000004             ;;RESTORE J
071342 / 262140,,000014           POP    P,   UUO             ;
071343 / 262140,,000001           POP    P,000001             ;;HIGHEST REL. LOC. DESIRED
071344 / 350003,,000000           AOS            (P)          ;;SET SKIP RETURN.
                       CORUU1:
071345 / 332344,,027120         SKIPE PROG,JBTADR(J)          ;;PICK UP PROG 
                       ;COULD HAVE BEEN CLOBBERED IF IT'S AN UPPER.
071346 / 254000,,071352          JRST      071352             ;;JUMP IF WE HAVE CORE ALREADY.
071347 / 260140,,072147         PUSHJ    P,072147             ;;NO: DON'T RELEASE PREVIOUS CORE
071350 / 370003,,000000           SOS            (P)          ;;FAILURE RETURN.
071351 / 254000,,071354          JRST      CORUU3             ;
                       CORUU5:
071352 / 260140,,072110         PUSHJ    P,072110             ;;TRY TO REASSIGN CORE
071353 / 370003,,000000           SOS            (P)          ;;NOT AVAILABLE, ERROR RETURN
                       CORUU3:
071354 / 260140,,046124         PUSHJ    P,046124             ;;CALL SCHEDULER TO STOP JOB
                       ;IN CASE CORE NOW ON DISK.
071355 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;
071356 / 607100,,001000          TLNN TAC1,001000             ;;SKIP IF THIS IS AN UPPER.
071357 / 254000,,071612          JRST      071612             ;;CONTINUE SPACEWAR FOR THIS JOB
071360 / 254000,,071576          JRST      071576             ;;CONTINUE SPACEWAR FOR ALL LOWERS.
                       ;RUNCOR IS CALLED FROM SAVGET, (NOT CORUUO) (SINCE IT DOESN'T STORE ANYTHING?)
                       RUNCOR:
071361 / 350003,,000000           AOS            (P)          ;;ASSUME SUCCESS.
071362 / 260140,,072110         PUSHJ    P,072110             ;;TRY TO ASSIGN CORE.
071363 / 370003,,000000           SOS            (P)          ;;WE SET FAILURE RETURN
071364 / 254000,,046124          JRST      046124             ;;HOLD UP IF CORE IS NOW ON DISK.
                       CORSGT:
071365 / 261140,,000001          PUSH    P,000001             ;;SAVE TAC
071366 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;;GET JOB STATUS
071367 / 607040,,002000          TLNN  TAC,002000             ;;SKIP IF ON DISK,
071370 / 254000,,071374          JRST      071374             ;;HE'S IN CORE.
152102 / 000002,,021427                                       ;
152102 / 001102,,021427 POINT 9,02021427,35                   ;
071371 / 135100,,152102           LDB TAC1,152102             ;;GET THE SIZE OF THE IMAGE
071372 / 242100,,000012           LSH TAC1,000012             ;;SHIFT TO MAKE WORDS.
071373 / 254000,,037376          JRST      037376             ;;RESTORE TAC AND RETURN.
                       CORSG1:
071374 / 554102,,027120          HLRZ TAC1,JBTADR(TAC1)       ;;GET THE PROTECTION SIZE
071375 / 344100,,037376          AOJA TAC1,037376             ;;INCREMENT PROT, POP TAC AND RETURN
                       ;ROUTINE TO CHECK JOBS TO SEE IF ANY JOB CAN BE SHUFFLED
                       ;CALLED FROM THE SWAPPER WHEN THERE IS ENOUGH FREE CORE
                       ;TO FIT A JOB, BUT THERE IS NO SINGLE HOLE BIG ENOUGH.
                       ;A JOB MUST HAVE ALL DEVICES INACTIVE (SINCE SOME
                       ;OF THEM USE ABSOLUTE ADDRESSES) BEFORE IT CAN BE MOVED.
                       ;IF DEVICES ARE ACTIVE, JOB WILL BE STOPPED SO THAT IO WILL
                       ;CEASE SOON SO JOB CAN BE SHUFFLED
                       ;ALL DEVICES LOOK AT SHF BIT IN JBTSTS (ADVBFF OR ADVBFE)
                       ;TO SEE IF MONITOR IS WAITING TO SHUFFLE JOB
                       ;THIS VERSION OF THE CORE SHUFFLER WORKS AS FOLLOWS:
                       ;EVERY CLOCK TICK FOR WHICH ALL JOBS ARE SHUFFLEABLE (NOT COUNTING ACTIVE
                       ;IO DEVICES), THE JOB IMMEDIATELY ABOVE THE LOWEST HOLE
                       ;(IF ANY) WILL BE MOVED DOWN INTO HOLE.  THE HOLEF IS SET NON-ZERO
                       ;TO THE ADDRESS OF JOB IMMEDIATELY ABOVE THE LOWEST
                       ;HOLE (0 IF NONE), EVERY TIME CORE IS REASSIGNED.
                       CHKSHF:
071376 / 326540,,071401         JUMPN  PID,071401             ;
151717 / 000000,,000026                                       ;
071377 / 261140,,151717          PUSH    P,151717             ;
071400 / 262140,,036260           POP    P,036260             ;
071401 / 332200,,022201         SKIPE    J,022201             ;;DID WE STOP A JOB TO WAIT FOR IO INACTIVE?
071402 / 254000,,071541          JRST      071541             ;;YES, SEE IF IO HAS STOPPED YET
071403 / 336040,,022202         SKIPN  TAC,022202             ;;NO, DOES CORE HAVE A HOLE IN IT?
071404 / 254000,,071501          JRST      CHKSHX             ;
                       CHKSHZ:
071405 / 311040,,022067          CAML  TAC,MEMSIZ             ;
071406 / 254000,,071470          JRST      CHKERR             ;
071407 / 260140,,072571         PUSHJ    P,072571             ;;MAKE A BYTE POINTER FROM HOLEF
071410 / 134200,,000001          ILDB    J,000001             ;;GET A USE BYTE
071411 / 305200,,000100         CAIGE    J,000100             ;;VALIDITY CHECK-SKIP IF ILLEGAL
071412 / 327200,,071505         JUMPG    J,071505             ;;FOUND ONE?
                       SHFLOB:
071413 / 260140,,000316         PUSHJ    P,PUSHIT             ;
071414 / 260140,,044320         PUSHJ    P,044320             ;
071415 / 260140,,044066         PUSHJ    P,DISMES             ;
071420 / 200040,,022202          MOVE  TAC, HOLEF             ;
071421 / 260140,,044170         PUSHJ    P,DISLOC             ;
071422 / 260140,,044066         PUSHJ    P,DISMES             ;
071432 / 200440,,022202          MOVE  LOC, HOLEF             ;
071433 / 260140,,072570         PUSHJ    P,072570             ;;GET A BYTE POINTER.
071434 / 134200,,000001          ILDB    J,000001             ;;GET THE BYTE.
071435 / 301200,,000100          CAIL    J,  JOBN             ;
071436 / 254000,,071457          JRST      HOLHLP             ;
071437 / 261140,,000004          PUSH    P,     J             ;
071440 / 260140,,044104         PUSHJ    P,044104             ;;PRINT JOB NAME & NUMBER.
071441 / 260140,,044076         PUSHJ    P,044076             ;
071442 / 262140,,000001           POP    P,   TAC             ;
071443 / 550101,,027120          HRRZ TAC1,JBTADR(TAC)        ;;TAC1←BOTTOM OF JOB
071444 / 554041,,027120          HLRZ  TAC,JBTADR(TAC)        ;
071445 / 271042,,000000          ADDI  TAC,      (TAC1)       ;;TAC← TOP OF JOB.
071446 / 317100,,022202          CAMG TAC1,022202             ;;SKIP IF HOLEF BELOW THE BOTTOM
071447 / 317040,,022202          CAMG  TAC,022202             ;;SKIP IF HOLEF INSIDE THIS IMAGE.
071450 / 254000,,071452          JRST      071452             ;;WE CAN FIX THIS?
071451 / 254000,,071457          JRST      071457             ;;WE NEED HELP.
071452 / 200440,,022202          MOVE  LOC, HOLEF             ;
071453 / 260140,,072570         PUSHJ    P,CORGBP             ;
071454 / 201100,,000000         MOVEI TAC1,                   ;
071455 / 136100,,000001          IDPB TAC1,   TAC             ;
071456 / 254000,,071466          JRST      HOLFIX             ;
                       HOLHLP:
071457 / 260140,,044066         PUSHJ    P,DISMES             ;
071464 / 260140,,043761         PUSHJ    P,DISFLU             ;
071465 / 260140,,000347         PUSHJ    P,DDTCAL             ;
                       HOLFIX:
071466 / 260140,,000341         PUSHJ    P, POPIT             ;
071467 / 254000,,071501          JRST      CHKSHX             ;
                       CHKERR:
071470 / 260140,,000316         PUSHJ    P,PUSHIT             ;
071471 / 260140,,044066         PUSHJ    P,DISMES             ;
071477 / 260140,,000341         PUSHJ    P, POPIT             ;
071500 / 402000,,022202         SETZM       HOLEF             ;
                       CHKSHX:
071501 / 370003,,000000           SOS            (P)          ;;SET UP SWAPPER'S PARAMETERS AGAIN
071502 / 260140,,037464         PUSHJ    P, PWAIT             ;
071503 / 201040,,022070         MOVEI  TAC,CORCSC             ;
071504 / 254000,,072362          JRST      DIDLE4             ;
                       SHFLOA:
071505 / 550044,,027120          HRRZ  TAC,JBTADR(J)          ;
071506 / 312040,,022202          CAME  TAC, HOLEF             ;
071507 / 254000,,071413          JRST      071413             ;;LOSER!
                       ;THIS CODE DECIDES WHETHER TO SWAP INSTEAD OF SHUFFLE
071510 / 336004,,020473         SKIPN      JBTST2(J)          ;;IS THERE SPACEWAR ACTIVE FOR THIS JOB?
071511 / 337040,,021632         SKIPG  TAC,021632             ;;NO.  AND SOMEONE BEING FITTED IN?
071512 / 254000,,071541          JRST      071541             ;;SPACEWAR ACTIVE OR NO ONE BEING FITTED
071513 / 200041,,020703          MOVE  TAC,JBTPRI(TAC)        ;;PRIORITY OF JOB BEING FITTED.
071514 / 317044,,020703          CAMG  TAC,JBTPRI(J)          ;;SKIP IF SHUFFLED JOB HAS LOW PRIORITY.
071515 / 254000,,071541          JRST      071541             ;;SHUFFLED JOB HAS HIGH PRIORITY, DON'T FORCE IT
071516 / 200040,,021635          MOVE  TAC,021635             ;
152054 / 000001,,026114                                       ;
152054 / 000601,,026114 POINT 6,01026114,35                   ;
071517 / 135040,,152054           LDB  TAC,152054             ;
071520 / 306044,,000000          CAIN  TAC,      (J)          ;;IS THIS THE SEGMENT THAT SOMEONE IS WAITING FOR?
071521 / 254000,,071541          JRST      071541             ;;YES. DON'T SHOVE IT OUT!
071522 / 332000,,021631         SKIPE      021631             ;;IF FORCE IS SET THEN WE CAN'T MAKE US SWAP
071523 / 254000,,071531          JRST      071531             ;;TELL PEOPLE THAT WE HAVE LOST.
                       SHFLOX:
071524 / 254000,,071541          JRST      071541             ;;CLOBBER THIS TO JFCL TO MAKE IT SWAP INSTEAD
071525 / 205040,,002000         MOVSI  TAC,   SWP             ;
071526 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;ANNOUNCE THAT WE ARE SWAPPING THIS GUY.
071527 / 202200,,021631         MOVEM    J, FORCE             ;
071530 / 263140,,000000          POPJ    P,                   ;;TELL THEM WE WANT TO SWAP THIS USER
                       SHFLOZ:
071531 / 261140,,000004          PUSH    P,000004             ;;THIS MESSAGE IS FOR INFORMATION ONLY!
071532 / 260140,,044066         PUSHJ    P,DISMES             ;
071540 / 262140,,000004           POP    P,     J             ;
                       SHFLOP:
071541 / 321200,,037403         JUMPL    J,037403             ;;JUMP IF A JOB IS ALREADY MOVING.
071542 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;;SETUP PROG FOR CALL
071543 / 254000,,071563          JRST      071563             ;;NO CORE. HE CAN'T BE SHUFFLED, SO CLEAR SHFWAT
071544 / 554040,,000007          HLRZ  TAC,000007             ;;REASSIGN SAME AMOUNT OF CORE.
071545 / 260140,,072135         PUSHJ    P,072135             ;;IN A LOWER POSITION IN CORE
071546 / 254000,,071550          JRST      071550             ;;CANNOT ONLY IF IO IS ACTIVE
071547 / 254000,,071563          JRST      071563             ;;FINISHED SHUFFLING, CLEAN UP
                       NOTSHF:
071550 / 336000,,022202         SKIPN      022202             ;;JOB CAN'T BE MOVED.  STILL ACTIVE IO.
071551 / 254000,,071563          JRST      071563             ;;HOLE ISN'T THERE ANYMORE?
071552 / 214040,,021631          MOVM  TAC, FORCE             ;
071553 / 312200,,021632          CAME    J,   FIT             ;
071554 / 316200,,000001          CAMN    J,   TAC             ;
071555 / 254000,,071563          JRST      071563             ;;IF THIS JOB IS BEING SWAPPED, DON'T SHUFFLE
071556 / 202200,,022201         MOVEM    J,022201             ;;SET SHUFFLE WAIT FLAG WITH JOB NO.
071557 / 205040,,004000         MOVSI  TAC,004000             ;;SET SHF WAIT BIT IN JOB STATUS WORD
071560 / 336004,,020473         SKIPN      JBTST2(J)          ;;IF SPW RUNNING, LET HIM RUN TOO
071561 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;SO JOB WILL NOT BE RUN
071562 / 263140,,000000          POPJ    P,                   ;;AND IO WILL STOP SOON
                       NOTSH1:
071563 / 260140,,037464         PUSHJ    P, PWAIT             ;
071564 / 201040,,022070         MOVEI  TAC,CORCSC             ;
071565 / 402000,,022201         SETZM      022201             ;;JOB SHUFFLED, CLEAR FLAG
071566 / 205040,,004000         MOVSI  TAC,004000             ;;CLEAR SHUFFLE WAIT BIT IN CASE IT WAS ON
071567 / 413044,,026114        ANDCAB  TAC,JBTSTS(J)          ;
071570 / 336004,,027120         SKIPN      JBTADR(J)          ;
071571 / 254000,,071610          JRST      071610             ;;IF WE DON'T HAVE CORE, DON'T CONTINUE SPACEWAR
071572 / 603040,,001000          TLNE  TAC,  JSEG             ;
071573 / 254000,,071607          JRST      071607             ;;YES.
071574 / 260140,,071612         PUSHJ    P,071612             ;;THIS IS A LOWER, CONTINUE SPACEWAR FOR HIM
071575 / 254000,,071610          JRST      NOTSH4             ;
                       NOTSH9:
071576 / 201104,,000000         MOVEI TAC1,      (J)          ;;THIS IS AN UPPER, FIND OUR LOWERS.
                       ;(CALLED FROM CORE2 UUO, AND FROM NOTSH6)
071577 / 201200,,000077         MOVEI    J,000077             ;;AND CONTINUE THEIR SPACEWAR.
                       NOTSH3:
071600 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
071601 / 405040,,000077          ANDI  TAC,000077             ;;PSEGN BETTER POINT TO BITS 30-35.
071602 / 306042,,000000          CAIN  TAC,      (TAC1)       ;;IS THIS ONE OF MY LOWERS?
071603 / 260140,,071612         PUSHJ    P,071612             ;;YES. CONTINUE HIS SPACEWAR.
071604 / 367200,,071600          SOJG    J,071600             ;;LOOP LOOKING FOR ALL LOWER USERS OF THIS SEG.
071605 / 201202,,000000         MOVEI    J,      (TAC1)       ;;RESTORE J.
071606 / 263140,,000000          POPJ    P,                   ;
                       NOTSH6:
071607 / 260140,,071576         PUSHJ    P,071576             ;;CONTINUE SPACEWAR FOR LOWERS OF THIS UPPER.
                       NOTSH4:
                       NOTSH2:
071610 / 370003,,000000           SOS            (P)          ;;DIDLE SKIP RETURNS
071611 / 254000,,072362          JRST      072362             ;;RE-FORM CORE AVAIL PARAMS.
                       SPWCNT:
071612 / 336004,,020473         SKIPN      JBTST2(J)          ;;IS THERE A SPW JOB HERE??
071613 / 263140,,000000          POPJ    P,                   ;;NO.
071614 / 260140,,037464         PUSHJ    P, PWAIT             ;
071615 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
071616 / 205040,,044000         MOVSI  TAC,044000             ;
071617 / 412044,,020473        ANDCAM  TAC,JBTST2(J)          ;
071620 / 260140,,037501         PUSHJ    P, XWAIT             ;
071621 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
071622 / 263140,,000000          POPJ    P,                   ;
                       ANYACT:
071623 / 200504,,026114          MOVE UCHN,JBTSTS(J)          ;;GET JOB STATUS
071624 / 607500,,001000          TLNN UCHN,001000             ;;SKIP IF THIS IS AN UPPER
071625 / 254000,,071647          JRST      071647             ;;THIS IS A LOWER
071626 / 261140,,000007          PUSH    P,000007             ;;SAVE VITAL DATA.
071627 / 261140,,000004          PUSH    P,000004             ;;SAVE THIS JOB NUMBER.
071630 / 201200,,000077         MOVEI    J,000077             ;;SEARCH THRU ALL JOBS.
                       ANYAC1:
071631 / 135500,,037600           LDB UCHN,037600             ;;LOOKING FOR LOWERS THAT POINT HERE
071632 / 312503,,000000          CAME UCHN,      (P)          ;;DOES THIS POINT TO ME.
                       ANYA1A:
071633 / 367200,,071631          SOJG    J,071631             ;;NO. DECREMENT J AND LOOP
071634 / 323200,,071644        JUMPLE    J,071644             ;;JUMP IF WE HAVE EXHAUSTED THE LOOP
071635 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;YES. GET HIS ADDRESS
071636 / 260140,,071647         PUSHJ    P,071647             ;;CALL ROUTINE FOR A LOWER SEGMENT
071637 / 304000,,000000          CAIA                         ;
071640 / 254000,,071633          JRST      071633             ;;THIS LOWER DOESN'T CARE IF WE MOVE
071641 / 262140,,000004           POP    P,     J             ;
071642 / 262140,,000007           POP    P,  PROG             ;
071643 / 263140,,000000          POPJ    P,                   ;;FAILURE RETURN
                       ANYAC2:
071644 / 262140,,000004           POP    P,000004             ;;RESTORE JOB NUMBER
071645 / 262140,,000007           POP    P,  PROG             ;
071646 / 254000,,037401          JRST      037401             ;;SUCCESS RETURN.
                       ANYAC3:
071647 / 336004,,027120         SKIPN      JBTADR(J)          ;;ANY CORE THERE?
071650 / 254000,,037401          JRST      037401             ;;NO CORE MEANS NO IO ACTIVE.
071651 / 332004,,033165         SKIPE      JBTGLU(J)          ;;IS SOMEONE GLUEING HIM?
071652 / 263140,,000000          POPJ    P,                   ;;YES. FAKE ACTIVE DEVICE.
071653 / 201507,,000075         MOVEI UCHN,JOBJDA(JDAT)       ;;ASSUME JOB IS NOT CURRENT JOB
071654 / 316213,,024061          CAMN    J,   JOB(PID)        ;;IS IT CURRENT JOB?
071655 / 201513,,024071         MOVEI UCHN,USRJDA(PID)        ;;YES. GET DATA FROM MONITOR.
071656 / 201000,,010000         MOVEI      010000             ;;IO DEVICE ACTIVE BIT
071657 / 331712,,777775         SKIPL  AC2,JOBJMH(UCHN)       ;;GET NO. OF USER IO CHANNELS IN USE
071660 / 303700,,000017         CAILE  AC2,000017             ;;IS HIGHEST CHANNEL LEGAL?
071661 / 254000,,071774          JRST      071774             ;;SAVEGET IO ACTIVE  OR ILLEGAL CHANNEL.
071662 / 661500,,000016           TLO UCHN,000016             ;;SET TO ADD UCHN TO AC2
071663 / 205100,,000010         MOVSI TAC1,000010             ;;DEVICE IS A TTY BIT
                       ANY:
071664 / 550320,,000012          HRRZ  DDB,@000012            ;;IS A DEVICE ASSIGNED TO THIS CHANNEL?
071665 / 322300,,071673         JUMPE  DDB,071673             ;;NO.
071666 / 301300,,037375          CAIL  DDB,037375             ;;CHECK ADDRESS. SKIP IF LOW CORE
071667 / 311300,,022067          CAML  DDB,022067             ;;SKIP IF BELOW F.S. (NO NO)
071670 / 311300,,022066          CAML  DDB,022066             ;;BELOW REAL MEM? (REDUNDANT FOR LOW CORE)
071671 / 254000,,071713          JRST      071713             ;;LOSING ADDRESS
071672 / 616006,,000002          TDNN      DEVIOS(DDB)        ;;YES, IS IT ACTIVE?
                       ANY2:
071673 / 365700,,071664         SOJGE  AC2,071664             ;;NOT ACTIVE KEEP LOOKING
071674 / 321700,,071700         JUMPL  AC2,071700             ;;JUMP IF FINISHED LOOKING
071675 / 616106,,000004          TDNN TAC1,DEVMOD(DDB)        ;;NOT FINISHED, IS DEVICE TTY?
071676 / 263140,,000000          POPJ    P,                   ;;NOT TTY DEVICE ACTIVE. CANT MOVE THIS JOB
071677 / 254000,,071673          JRST      071673             ;;DEVICE IS TTY.  LOOK AT OTHER DEVICES
                       ANY4A:
071700 / 331504,,032565         SKIPL UCHN,JBTIOP(J)          ;
071701 / 254000,,072024          JRST        ANY4             ;
                       ANY4BA:
071702 / 336312,,000000         SKIPN  DDB,      (UCHN)       ;;GET DDB POINTER (SKIP FLUSHED ONES)
071703 / 254000,,071710          JRST       ANY4C             ;
071704 / 612006,,000002          TDNE      DEVIOS(DDB)        ;;IOACT ON?
071705 / 612106,,000004          TDNE TAC1,DEVMOD(DDB)        ;;YES, TTY?
071706 / 304000,,000000          CAIA                         ;
071707 / 263140,,000000          POPJ    P,                   ;;ACTIVE IO
                       ANY4C:
151763 / 000001,,000001                                       ;
071710 / 270500,,151763           ADD UCHN,151763             ;;ADVANCE TO CHANNEL NUM
071711 / 253500,,071702         AOBJN UCHN,071702             ;;ADVANCE TO NEXT DDB AND TEST
071712 / 254000,,072024          JRST        ANY4             ;
                       ANY7:
071713 / 260140,,000316         PUSHJ    P,PUSHIT             ;
071714 / 260140,,044320         PUSHJ    P,044320             ;
071715 / 260140,,044066         PUSHJ    P,DISMES             ;
071724 / 550043,,777767          HRRZ  TAC,777767(P)          ;;PICK UP ADDRESS
071725 / 260140,,044170         PUSHJ    P,044170             ;;TYPE ADDRESS IN OCTAL
071726 / 260140,,044102         PUSHJ    P,DISTAB             ;
071727 / 200203,,777765          MOVE    J,777765(P)          ;
071730 / 260140,,044104         PUSHJ    P,DISJOB             ;
071731 / 260140,,044066         PUSHJ    P,DISMES             ;
071736 / 200043,,777777          MOVE  TAC,777777(P)          ;
071737 / 260140,,044170         PUSHJ    P,DISLOC             ;
071740 / 260140,,044076         PUSHJ    P,044076             ;
071741 / 200203,,777765          MOVE    J,777765(P)          ;
                       ;	PUSHJ	P,DATERR		;FIX JOB DATA AREA.
071742 / 260140,,000341         PUSHJ    P, POPIT             ;
071743 / 402020,,000012         SETZM      @000012            ;;BLAST ILLEGAL DDB POINTER
071744 / 254000,,071673          JRST        ANY2             ;
                       ANYHCC:
071745 / 260140,,000316         PUSHJ    P,PUSHIT             ;
071746 / 260140,,044320         PUSHJ    P,DISDAT             ;
071747 / 260140,,044066         PUSHJ    P,DISMES             ;
071756 / 200203,,777765          MOVE    J,777765(P)          ;
071757 / 260140,,044104         PUSHJ    P,DISJOB             ;
071760 / 260140,,044066         PUSHJ    P,DISMES             ;
071764 / 200043,,777777          MOVE  TAC,777777(P)          ;
071765 / 260140,,044200         PUSHJ    P,DISOCT             ;
071766 / 260140,,044076         PUSHJ    P,044076             ;
071767 / 200203,,777765          MOVE    J,777765(P)          ;
                       ;	PUSHJ	P,DATERR		;FIX JOB DATA AREA
071770 / 260140,,000341         PUSHJ    P, POPIT             ;
071771 / 402012,,777775         SETZM      JOBJMH(UCHN)       ;;SET ONLY USER CHANNEL 0 IN USE.
071772 / 402012,,000000         SETZM            (UCHN)       ;;CLEAR USER CHANNEL 0.
071773 / 254000,,037401          JRST      037401             ;;FAKE SUCCESS RETURN.
                       ANY3:
071774 / 327700,,071745         JUMPG  AC2,071745             ;;JOBHCU IS CLOBBERED.
071775 / 550700,,000016          HRRZ  AC2,000016             ;;ADDRESS ONLY, PLEASE!
071776 / 301700,,037375          CAIL  AC2,037375             ;;SKIP IF IN SYSTEM LOW CORE.
071777 / 311700,,022067          CAML  AC2,022067             ;;NO. MUST BE IN FREE STORAGE.
072000 / 311700,,022066          CAML  AC2,022066             ;;IF IN F.S.  MUST BE IN REAL MEM.
072001 / 254000,,072005          JRST      072005             ;;WE LOSE.
                       ANY3A:
072002 / 616016,,000002          TDNN      DEVIOS(AC2)        ;;IS SAVEGET DEVICE STILL ACTIVE?
072003 / 350003,,000000           AOS            (P)          ;;NO
072004 / 263140,,000000          POPJ    P,                   ;;YES
                       ANYILM:
072005 / 260140,,000316         PUSHJ    P,PUSHIT             ;
072006 / 260140,,044320         PUSHJ    P,044320             ;
072007 / 260140,,044066         PUSHJ    P,DISMES             ;
072022 / 260140,,000341         PUSHJ    P, POPIT             ;
072023 / 254000,,037401          JRST      037401             ;; PRETEND SUCCESSFUL
                       ANY4:
072024 / 332004,,034165         SKIPE      JBTIIP(J)          ;; INTERRUPT IN PROGRESS
072025 / 263140,,000000          POPJ    P,                   ;;YES. CAN'T MOVE ME.
072026 / 336004,,020373         SKIPN       SP2GO(J)          ;; IS A P2 SPACEWAR JOB RUNNING?
072027 / 332004,,020273         SKIPE       SPWGO(J)          ;; OR IS A P1 SPACEWAR JOB RUNNING?
072030 / 354003,,000000          AOSA            (P)          ;;SPACEWAR ACTIVE. ASSUME SKIP RETURN!
072031 / 254000,,037401          JRST      037401             ;;WE CAN BE MOVED.
072032 / 260140,,037464         PUSHJ    P, PWAIT             ;
072033 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
072034 / 200004,,020473          MOVE      JBTST2(J)          ;
072035 / 641000,,044000           TLC      044000             ;
072036 / 647000,,044000          TLCN      044000             ;
072037 / 254000,,072044          JRST      072044             ;;SPW SUSPENDED. GIVE SKIP RETURN.
072040 / 205000,,100000         MOVSI      100000             ;;NO. MARK IT FOR SUSPENSION
072041 / 616004,,020473          TDNN      JBTST2(J)          ;;SKIP IF SUSPENSION REQUEST SET ALREADY.
072042 / 436004,,020473          IORM      JBTST2(J)          ;;SET THE BIT THAT REQUESTS SPW SUSPENSION
072043 / 370003,,000000           SOS            (P)          ;;NON-SKIP RETURN.
                       ANY4B:
072044 / 260140,,037501         PUSHJ    P, XWAIT             ;
072045 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
072046 / 263140,,000000          POPJ    P,                   ;;CANT MOVE HIM UNTIL HE'S SEEN SUSPENSION.
                       ;CORE0 IS CALLED BY THE CORE MONITOR COMMAND AND THE CORE SHUFFLER
                       ;AND RUN COMMAND
                       ;CORE SHUFFLER AND RUN COMMAND
                       ;CALL:	MOVE TAC,HIGHEST LEGAL ADDRESSABLE LOC. DESIRED
                       ;	MOVE J,JOB NUMBER
                       ;	MOVE PROG,[XWD PROT.,RELOC.]=JBTADR(J)
                       ;	PUSHJ P,CORE0
                       ;	ERROR	;EITHER JOB HAS ACTIVE IO
                       ;OR NOT ENOUGH CORE
                       ;	OK RETURN
                       ;JOB IS MOVED IF NECESSARY TO SATISFY REQUEST
                       ;PROG AND JDAT ARE SET TO NEW CORE ASSIGNMENT ON EITHER RETURN
                       ;0 MEANS NONE ASSIGNED
                       ;ENTER HERE FROM CORE CONSOLE COMMAND OR INITIAL CORE
                       ;ASSIGNMENT OF JUST A JOB DATA AREA FOR RUN COMMAND
                       ;IE ENTER WHEN DEVICES MAY BE ACTIVE OR JOB MAY HAVE NO PREVIOUS CORE
                       CORE0:
072047 / 311040,,022204          CAML  TAC,022204             ;;IS HE BEING TOO GREEDY.
072050 / 263140,,000000          POPJ    P,                   ;;FLUSH THE GREEDY BASTARD!	;JS
072051 / 326340,,072106         JUMPN PROG,072106             ;;DOES JOB HAVE CORE IN MEMORY?
072052 / 205100,,002000         MOVSI TAC1,002000             ;;NO, DOES IT HAVE CORE ON DISK?
072053 / 315040,,022200         CAMGE  TAC,022200             ;;WILL REQUEST FIT IN PHYSICAL CORE.
072054 / 616104,,026114          TDNN TAC1,JBTSTS(J)          ;;YES, IS JOB ON DISK?
072055 / 254000,,072147          JRST      072147             ;;NO, TRY TO ASSIGN MEMORY IN CORE OR DISK.
072056 / 322040,,072061         JUMPE  TAC,072061             ;;YES, IS HE REQUESTING ANY?
072057 / 242040,,777766           LSH  TAC,777766             ;;YES, CONVERT TO 1K BLOCKS
072060 / 354000,,000001          AOSA         TAC             ;
                       CORE0B:
072061 / 412104,,026114        ANDCAM TAC1,JBTSTS(J)          ;;NO, CLEAR CORE ON DISK BIT.
                       CORE0K:
072062 / 137040,,037612           DPB  TAC,037612             ;;STORE NEW CORE IMAGE BLOCK SIZE
072063 / 261140,,000001          PUSH    P,   TAC             ;
072064 / 242040,,000006           LSH  TAC,     6             ;
072065 / 405040,,037700          ANDI  TAC, 37700             ;
072066 / 660040,,000000           TRO  TAC,                   ;
072067 / 260140,,072423         PUSHJ    P,STAPUT             ;
072070 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
072071 / 261140,,000005          PUSH    P,   DAT             ;
072072 / 135240,,037613           LDB  DAT,037613             ;;SIZE ON DISC (1K BLOCKS)
072073 / 311040,,000005          CAML  TAC,000005             ;;NEW SIZE LESS THAN AMOUNT ON DISC?
072074 / 254000,,072104          JRST      072104             ;;NO, RETURN
072075 / 402000,,022062         SETZM      022062             ;;WAKE UP SWAPPER NEXT TICK
072076 / 137040,,037613           DPB  TAC,037613             ;;YES, REPLACE DISC SIZE
072077 / 274240,,000001           SUB  DAT,000001             ;;AMOUNT OF DISC TO FREE (1K BLOCKS)
072100 / 242040,,000003           LSH  TAC,000003             ;;CONVERT NEW SIZE TO DISC BLOCKS
072101 / 554104,,021427          HLRZ TAC1,JBTSWP(J)          ;;COMPUTE DISC BLOCK NUMBER FOR
072102 / 270040,,000002           ADD  TAC,000002             ;;FIRST BLOCK TO FREE.
072103 / 260140,,071205         PUSHJ    P,071205             ;;FREE THE DISC BLOCKS.
                       CORE0C:
072104 / 262140,,000005           POP    P,000005             ;;RESTORE TTY OUTPUT BYTE POINTER
072105 / 254000,,037401          JRST      037401             ;;AND SKIP RETURN
                       CORE0A:
072106 / 260140,,071623         PUSHJ    P,071623             ;;NO,ANY ACTIVE DEVICE?
072107 / 263140,,000000          POPJ    P,                   ;;YES, CANNOT ASSIGN CORE
                       ;NO, FALL INTO CORE1
                       ;ENTER HERE FROM CORE UUO OR RUN COMMAND WHEN IT REASSIGNS
                       ;PROPER AMOUNT OF CORE AFTER READING DIRECTORY
                       ;JOB MUST ALREADY HAVE CORE AND NO ACTIVE DEVICES
                       ;FIRST OLD CORE IS RETURNED TO SYSTEM
                       ;THEN NEW REQUEST IS ATTEMPTED TO BE SATISFIED IN LOWEST
                       ;POSITION POSSIBLE.  THUS CORE TENDS TO BE PACKED
                       ;IF NEW REQUEST CANNOT BE GRANTED, OLD AMOUNT IS RETAINED
                       CORE1:
072110 / 311040,,022204          CAML  TAC,022204             ;;CAN HE HAVE THIS MUCH?
072111 / 263140,,000000          POPJ    P,                   ;;NO
072112 / 260140,,037464         PUSHJ    P, PWAIT             ;
072113 / 201040,,022070         MOVEI  TAC,CORCSC             ;
072114 / 200444,,026114          MOVE  LOC,JBTSTS(J)          ;
072115 / 602440,,100000          TRNE  LOC, JLOCK             ;
072116 / 260140,,072775         PUSHJ    P,072775             ;;DRD. REG 2-14-73
072117 / 405040,,777777          ANDI  TAC,777777             ;;RIGHT SIDE ONLY
072120 / 550440,,000007          HRRZ  LOC,000007             ;;ABS. LOC. OF OLD CORE
072121 / 554640,,000007          HLRZ  BLK,000007             ;;HIGHEST LEGAL REL. ADR.
072122 / 322040,,072144         JUMPE  TAC, CORG2             ;
072123 / 303055,,000000         CAILE  TAC,      (BLK)        ;; IS HE EXPANDING?
072124 / 254000,,072144          JRST      072144             ;; YES, LET HIM
072125 / 306055,,000000          CAIN  TAC,      (BLK)        ;; NO, IS HE THE SAME?
072126 / 254000,,072304          JRST      072304             ;; YES, LEAVE NOW
072127 / 271441,,000001          ADDI  LOC,     1(TAC)        ;; OTHERWISE, SHRINK HIM IN PLACE
072130 / 275641,,000001          SUBI  BLK,     1(TAC)        ;
072131 / 504340,,000001           HRL PROG,   TAC             ;
072132 / 201500,,000000         MOVEI UCHN,                   ;
072133 / 260140,,072522         PUSHJ    P,CORSTG             ;
072134 / 254000,,072304          JRST      DIDLEA             ;
                       SHFCOR:
072135 / 260140,,071623         PUSHJ    P,ANYACT             ;
072136 / 263140,,000000          POPJ    P,                   ;
072137 / 260140,,037464         PUSHJ    P, PWAIT             ;
072140 / 201040,,022070         MOVEI  TAC,CORCSC             ;
072141 / 405040,,777777          ANDI  TAC,777777             ;;RIGHT SIDE ONLY
072142 / 550440,,000007          HRRZ  LOC,  PROG             ;
072143 / 554640,,000007          HLRZ  BLK,  PROG             ;
                       CORG2:
072144 / 201500,,000000         MOVEI UCHN,                   ;;CLEAR FOR CORSTG CALL
072145 / 260140,,072522         PUSHJ    P,072522             ;;RETURN OLD CORE TO FREE STORAGE
072146 / 254000,,072153          JRST       CORG1             ;
                       ;CORGET IS CALLED BY SWAPPER WHEN JOB IS ON DISC AND IS WANTED IN CORE.
                       CORGET:
072147 / 311040,,022204          CAML  TAC,022204             ;;CAN HE HAVE THIS MUCH?
072150 / 263140,,000000          POPJ    P,                   ;
072151 / 260140,,037464         PUSHJ    P, PWAIT             ;
072152 / 201040,,022070         MOVEI  TAC,CORCSC             ;
                       CORG1:
072153 / 403440,,000007         SETZB  LOC,000007             ;; SET NEW ASSIGNMENT TO 0 AND DIST. MOVED
072154 / 350000,,036141           AOS      036141             ;
072155 / 322040,,072341         JUMPE  TAC,072341             ;;IS ZERO CORE BEING REQUESTED?
072156 / 312200,,022201          CAME    J,022201             ;;WAITING FOR CURRENT JOB?
072157 / 336000,,022201         SKIPN      022201             ;;IF SHUFFLING, PRETEND NOT AVAIL.
072160 / 260140,,072474         PUSHJ    P,072474             ;;NO, SEARCH FOR HOLE BIG ENOUGH
072161 / 254000,,072203          JRST      072203             ;;NONE, GIVE BACK OLD AMOUNT
                       CORGT1:
072162 / 202440,,000007         MOVEM  LOC,000007             ;;SETUP NEW RELOC
072163 / 506040,,000007          HRLM  TAC,000007             ;;AND NEW PROTECT.
072164 / 201641,,000000         MOVEI  BLK,      (TAC)        ;;HIGHEST REL ADR. BEING REQUESTED
072165 / 200500,,000004          MOVE UCHN,000004             ;;SET USE BITS IN CORE TABLE
072166 / 260140,,072522         PUSHJ    P,CORSTG             ;
072167 / 200644,,027120          MOVE  BLK,JBTADR(J)          ;;OLD CORE ASSIGNMENT
072170 / 326640,,072222         JUMPN  BLK,072222             ;;WAS THERE OLD MEMORY ASSIGNED?
072171 / 260140,,072576         PUSHJ    P,072576             ;;CLEAR JOB DATA AREA
072172 / 200504,,026114          MOVE UCHN,JBTSTS(J)          ;
072173 / 603500,,002000          TLNE UCHN,002000             ;;IS JOB COMING IN FROM DISK?
072174 / 254000,,072304          JRST      DIDLEA             ;
072175 / 205500,,020000         MOVSI UCHN,020000             ;; SET ERROR BIT IN JOB STATUS WORD
072176 / 436504,,026114           ORM UCHN,JBTSTS(J)          ;
072177 / 211500,,000011         MOVNI UCHN,000011             ;; PUT JOB IN STOP QUEUE
072200 / 202504,,020574         MOVEM UCHN,JOBQUE(J)          ;
072201 / 260140,,046027         PUSHJ    P, REQUE             ;
072202 / 254000,,072304          JRST      DIDLEA             ;
                       BAKOLD:
                       ;IN SWAPPING SYSTEM STORAGE LIMIT INSTEAD OF CORE
                       ;LIMIT USED TO DETERMINE IF REQUEST IS GRANTED.
072203 / 205500,,002000         MOVSI UCHN,   SWP             ;
072204 / 616504,,026114          TDNN UCHN,JBTSTS(J)          ;;GETTING CORE FOR SWAPPER?
072205 / 254000,,072210          JRST      CORGT3             ;
072206 / 370003,,000000           SOS            (P)          ;;YES, SET FAILURE RETURN
072207 / 254000,,072362          JRST      DIDLE4             ;
                       CORGT3:
072210 / 321040,,072213         JUMPL  TAC,072213             ;; A NEGATIVE CORE AMOUNT IS AN ERROR?
072211 / 315040,,022204         CAMGE  TAC,022204             ;;GTR SWAP AREA?
072212 / 311040,,022200          CAML  TAC,022200             ;;WILL REQUEST FIT IN PHYSICAL CORE?
                       CORGT2:
072213 / 374003,,000000          SOSA            (P)          ;;NO - GIVE ERROR RETURN
072214 / 260140,,070673         PUSHJ    P,070673             ;;YES - TELL SWAPPER TO SWAP OUT
072215 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;;GIVE BACK OLD CORE.
072216 / 550444,,027120          HRRZ  LOC,JBTADR(J)          ;;RETURN OLD CORE
072217 / 606440,,777777          TRNN  LOC,777777             ;;ANY CORE TO RETURN?
072220 / 254000,,072362          JRST      072362             ;;NO.  JUST EXIT.
072221 / 254000,,072162          JRST      CORGT1             ;
                       ;MOVE OLD CORE TO NEW AREA
                       MOVCOR:
072222 / 306455,,000000          CAIN  LOC,      (BLK)        ;;IS NEW CORE IN SAME PLACE AS OLD?
072223 / 254000,,072310          JRST      072310             ;;YES, DO NOT MOVE IT
072224 / 205100,,100000         MOVSI TAC1,100000             ;; DO WE INTERRUPT THIS GUY FIRST?
072225 / 616104,,033665          TDNN TAC1,JBTIEN(J)          ;
072226 / 254000,,072243          JRST      072243             ;; NO
072227 / 436104,,033765          IORM TAC1,JBTIRQ(J)          ;; YES
072230 / 261140,,000004          PUSH    P,     J             ;
072231 / 261140,,000015          PUSH    P,   BLK             ;
072232 / 261140,,000011          PUSH    P,   LOC             ;
072233 / 261140,,000001          PUSH    P,   TAC             ;
072234 / 261140,,000007          PUSH    P,  PROG             ;
072235 / 260140,,050276         PUSHJ    P,050276             ;;MAKE INTERRUPT HAPPEN
072236 / 262140,,000007           POP    P,  PROG             ;
072237 / 262140,,000001           POP    P,   TAC             ;
072240 / 262140,,000011           POP    P,   LOC             ;
072241 / 262140,,000015           POP    P,   BLK             ;
072242 / 262140,,000004           POP    P,     J             ;
                       MOVCO1:
                       ;END OF IFN FTSHF1K
                       ISET2:
072243 / 554100,,000015          HLRZ TAC1,000015             ;;LENGTH OF OLD CORE
072244 / 303101,,000000         CAILE TAC1,      (TAC)        ;;IS OLD CORE LESS THAN NEW?
072245 / 550100,,000001          HRRZ TAC1,000001             ;;NO, MOVE THE SHORTENED NEW CORE
072246 / 272100,,026104          ADDM TAC1,026104             ;;INCREMENT TOTAL NO. WORDS SHUFFLED
072247 / 270100,,000011           ADD TAC1,000011             ;;ADD IN NEW RELOC.
072250 / 200040,,000011          MOVE  TAC,000011             ;;DEST.=NEW RELOC.
072251 / 504040,,000015           HRL  TAC,000015             ;;SOURCE=OLD RELOC.
072252 / 202640,,036121         MOVEM  BLK,036121             ;;SAVE THIS FOR PARSER.
072253 / 402004,,027120         SETZM      JBTADR(J)          ;;FLAG THAT CORE IS IN TRANSIT(TTY ROUTINES)
                       ;END OF IFN FTSHF1K
                       MOVC1:
                       ;IFN FTSHF1K
072254 / 261140,,036260          PUSH    P,HGCODE             ;
072255 / 326540,,072260         JUMPN  PID,072260             ;
151720 / 000000,,000030                                       ;
072256 / 261140,,151720          PUSH    P,151720             ;
072257 / 262140,,036260           POP    P,036260             ;
072260 / 202200,,036122         MOVEM    J,036122             ;;FOR PARSER, THE JOB BEING SHUFFLED
                       SHFBLT:
072261 / 251042,,000000           BLT  TAC,      (TAC1)       ;;LABEL THIS FOR PARSER.
072262 / 262140,,036260           POP    P,HGCODE             ;
072263 / 260140,,072310         PUSHJ    P,072310             ;; REFORM CORE PARAMETERS NOW
072264 / 255000,,000000          JFCL                         ;
072265 / 350003,,000000           AOS            (P)          ;;SET UP FOR SKIP RETURN
                       SHFDON:
072266 / 205100,,040000         MOVSI TAC1,INTSHD             ;
072267 / 616104,,033665          TDNN TAC1,JBTIEN(J)          ;
072270 / 263140,,000000          POPJ    P,                   ;
072271 / 436104,,033765          IORM TAC1,JBTIRQ(J)          ;
072272 / 261140,,000004          PUSH    P,     J             ;
072273 / 261140,,000015          PUSH    P,   BLK             ;
072274 / 261140,,000011          PUSH    P,   LOC             ;
072275 / 261140,,000007          PUSH    P,  PROG             ;
072276 / 260140,,050276         PUSHJ    P,050276             ;;RUN USER I-LEVEL FOR END OF SHUFFLE
072277 / 262140,,000007           POP    P,  PROG             ;
072300 / 262140,,000011           POP    P,   LOC             ;
072301 / 262140,,000015           POP    P,   BLK             ;
072302 / 262140,,000004           POP    P,     J             ;
072303 / 263140,,000000          POPJ    P,                   ;
                       ;IF THE SHUFFLED JOB IS IN EXEC MODE, ITS DUMP ACS
                       ;(P,PROG,JDAT SAVED IN JOB DATA AREA) MUST BE
                       ;ALTERED BY DISTANCE CORE WAS MOVED
                       ;IF THE SHUFFLED JOB IS CURRENT JOB, THE SOFTWARE STATE OF
                       ;THE MONITOR(IE SOFTWARE OF JOB) NUST BE ALTERED BY AMOUNT
                       ;CORE WAS MOVED
                       DIDLEA:
072304 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
072305 / 603040,,001000          TLNE  TAC,001000             ;;UPPER SEGMENTS TAKE 2 GIANT STEPS!
072306 / 254000,,072357          JRST      DIDLE3             ;
072307 / 254000,,072340          JRST      DIDLE1             ;
                       DIDLE:
072310 / 275455,,000000          SUBI  LOC,      (BLK)        ;;DISTANCE JOB WAS MOVED(DEST.-SOURCE)
072311 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;; IS THIS A HIGH SEGMENT?
072312 / 607040,,001000          TLNN  TAC,  JSEG             ;
072313 / 254000,,072325          JRST      DIDLE6             ;
072314 / 261140,,000004          PUSH    P,000004             ;;YES, RECALCULATE PROT-RELOC OF LOWER SEGMENT
072315 / 200200,,024061          MOVE    J,   JOB             ;
072316 / 135040,,037600           LDB  TAC, PSEGN             ;
072317 / 312043,,000000          CAME  TAC,      (P)          ;
072320 / 254000,,072323          JRST      DIDLE5             ;
072321 / 260140,,072621         PUSHJ    P, GETPR             ;
072322 / 700140,,000001         DATAO  APR,   TAC             ;
                       DIDLE5:
072323 / 262140,,000004           POP    P,     J             ;
072324 / 254000,,072357          JRST      DIDLE3             ;
                       DIDLE6:
072325 / 312213,,024061          CAME    J,   JOB(PID)        ;;IS THIS CURRENT JOB?
072326 / 334047,,000073         SKIPA  TAC, JOBPC(JDAT)       ;;NO, GET PC IN JOB DATA AREA
072327 / 200053,,024067          MOVE  TAC, USRPC(PID)        ;;YES, PC IN PROTECTED SYSTEM AREA
072330 / 603040,,010000          TLNE  TAC,010000             ;;IS JOB IN USER MODE?
072331 / 254000,,072340          JRST      072340             ;;YES, DO NOT ALTER DUMP ACS
                       ;BECAUSE THEY ARE THE USERS
072332 / 550047,,000023          HRRZ  TAC,000023(JDAT)       ;
072333 / 313040,,000573         CAMLE  TAC,000573             ;; IS THIS PDL IN USER'S AREA?
072334 / 311040,,022067          CAML  TAC,MEMSIZ             ;
072335 / 254000,,072337          JRST      072337             ;; NO
072336 / 272447,,000023          ADDM  LOC,000023(JDAT)       ;
                       ; YES, RELOCATE PDL WITH JOB
072337 / 272447,,000027          ADDM  LOC,JOBDPG(JDAT)       ;;AND ALTER PROG BY DIST. MOVED
                       DIDLE1:
072340 / 556347,,000044         HLRZM PROG,JOBREL(JDAT)       ;;ALWAYS SET JOB DATA AREA W/PROTECTION
                       DIDLE2:
072341 / 312213,,024061          CAME    J,   JOB(PID)        ;;IS THIS CURRENT JOB?
072342 / 254000,,072357          JRST      072357             ;;NO, DO NOT ALTER STATE OF MONITOR
072343 / 551043,,000000         HRRZI  TAC,      (P)          ;; SEE IF THIS PDL IS IN USER'S AREA
072344 / 313040,,000573         CAMLE  TAC,000573             ;; IS IT ABOVE TOP OF SYSTEM
072345 / 311040,,022067          CAML  TAC,022067             ;; AND BELOW FREE STORAGE AREA?
072346 / 254000,,072350          JRST      072350             ;; NO
072347 / 272440,,000003          ADDM  LOC,000003             ;; YES, RELOCATE PDL
072350 / 202353,,024063         MOVEM PROG,JOBADR(PID)        ;;SET NEW JOB ADR. FOR CURRENT JOB
072351 / 312344,,027120          CAME PROG,JBTADR(J)          ;
072352 / 260140,,072377         PUSHJ    P, CSTAT             ;
072353 / 202344,,027120         MOVEM PROG,JBTADR(J)          ;
072354 / 556353,,024065         HLRZM PROG,USRREL(PID)        ;;SET NEW PROTECTION FOR CURRETN JOB
072355 / 260140,,072621         PUSHJ    P,072621             ;; GET JOB'S PROT-RELOC IN TAC
072356 / 700140,,000001         DATAO  APR,000001             ;; AND PUT THAT OUT
                       DIDLE3:
072357 / 312344,,027120          CAME PROG,JBTADR(J)          ;
072360 / 260140,,072377         PUSHJ    P, CSTAT             ;
072361 / 202344,,027120         MOVEM PROG,JBTADR(J)          ;;STORE NEW CORE ASSIGNMENT
                       DIDLE4:
072362 / 403040,,022202         SETZB  TAC,022202             ;;CLEAR HOLE FLAG
072363 / 260140,,072474         PUSHJ    P,072474             ;;IS THERE A NON-ZERO HOLE?
072364 / 254000,,072370          JRST      072370             ;;NO
072365 / 271455,,000001          ADDI  LOC,     1(BLK)        ;;YES, FORM ADR. OF JOB JUST ABOVE HOLE
072366 / 315440,,022067         CAMGE  LOC,022067             ;;IS HOLE AT TOP OF MEMORY?
072367 / 202440,,022202         MOVEM  LOC,022202             ;;NO, FLAG WITH ADDRESS OF JOB ABOVE HOLE
                       COROK:
072370 / 201040,,777777         MOVEI  TAC,777777             ;;FIND BIGGEST HOLE
072371 / 260140,,072476         PUSHJ    P,072476             ;;ALWAYS GET ERROR RETURN
072372 / 240700,,777766           ASH  AC2,777766             ;;CONVERT TO 1K BLOCKS
072373 / 202700,,021627         MOVEM  AC2,021627             ;
072374 / 260140,,037501         PUSHJ    P, XWAIT             ;
072375 / 201040,,022070         MOVEI  TAC,CORCSC             ;
                       ;CHECK FOR CORTAB - JBTADR CONSISTENCY
072376 / 254000,,037401          JRST      037401             ;;SKIP RETURN(UNLESS ERROR)
                       ;CSTAT, STAPUT, STAPTT		STATISTICS SERVICE
                       CSTAT:
072377 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
072400 / 603040,,002000          TLNE  TAC,002000             ;;IF SWAPPER,
072401 / 254000,,072420          JRST      072420             ;;THEN IS ONLY POSITION CHANGE
072402 / 200040,,000007          MOVE  TAC,  PROG             ;
072403 / 430044,,027120           XOR  TAC,JBTADR(J)          ;
072404 / 607040,,776000          TLNN  TAC,776000             ;;CHANGE IN PROT?
072405 / 254000,,072413          JRST      CSTAT1             ;
072406 / 554040,,000007          HLRZ  TAC,  PROG             ;
072407 / 242040,,777774           LSH  TAC,777774             ;
072410 / 620040,,000077           TRZ  TAC,    77             ;
072411 / 201041,,000100         MOVEI  TAC,000100(TAC)        ;;ADD CODE AND MAKE INTO K
072412 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       CSTAT1:
072413 / 322340,,037403         JUMPE PROG,037403             ;;REPORT ONLY PROT IF CORE 0
072414 / 200040,,000007          MOVE  TAC,  PROG             ;
072415 / 430044,,027120           XOR  TAC,JBTADR(J)          ;
072416 / 606040,,776000          TRNN  TAC,776000             ;
072417 / 263140,,000000          POPJ    P,                   ;
                       CSTAT0:
072420 / 550040,,000007          HRRZ  TAC,  PROG             ;
072421 / 242040,,777774           LSH  TAC,777774             ;
072422 / 660040,,040000           TRO  TAC,CPSSTA             ;
                       STAPUT:
072423 / 435044,,000000          IORI  TAC,      (J)          ;
                       STAPTT:
072424 / 700740,,077000         CONSO   PI,077000             ;;ARE WE ON CHAN HIGHER THAN 7?
072425 / 254000,,072434          JRST      072434             ;;NO, OK
072426 / 505040,,072433          HRLI  TAC,072433             ;;YES, SEND THIS DATA UP TO CH7
072427 / 700600,,000400          CONO   PI, PIOFF             ;
072430 / 136040,,013624          IDPB  TAC,  CLKQ             ;
072431 / 700600,,000200          CONO   PI,  PION             ;
072432 / 263140,,000000          POPJ    P,                   ;
                       STACLK:
072433 / 550040,,000005          HRRZ  TAC,   DAT             ;
                       STAPOK:
072434 / 136040,,035405          IDPB  TAC,035405             ;
072435 / 200040,,035405          MOVE  TAC,035405             ;
152122 / 000000,,035264                                       ;
152122 / 002200,,035264 POINT 18,00035264,35                  ;
072436 / 312040,,152122          CAME  TAC,152122             ;
072437 / 263140,,000000          POPJ    P,                   ;
151412 / 000000,,034465                                       ;
151412 / 442200,,034465 POINT 18,00034465,                    ;
072440 / 200040,,151412          MOVE  TAC,151412             ;
072441 / 202040,,035405         MOVEM  TAC,035405             ;
072442 / 350000,,035265           AOS      035265             ;
072443 / 263140,,000000          POPJ    P,                   ;
                       GLUSTT:
072444 / 261140,,000001          PUSH    P,   TAC             ;
072445 / 200044,,033165          MOVE  TAC,JBTGLU(J)          ;
072446 / 405040,,000077          ANDI  TAC,    77             ;
072447 / 242040,,000006           LSH  TAC,     6             ;
072450 / 660040,,450000           TRO  TAC,GLUSTA             ;
072451 / 260140,,072423         PUSHJ    P,STAPUT             ;
072452 / 262140,,000001           POP    P,   TAC             ;
072453 / 263140,,000000          POPJ    P,                   ;
                       NAMSTT:
072454 / 261140,,000001          PUSH    P,   TAC             ;
072455 / 201044,,400000         MOVEI  TAC,NAMSTA(J)          ;
                       ;I HOPE WE DON'T GET INTERRUPTED BY SOMEONE ELSE STORING IN STATUS TABLE
072456 / 260140,,072424         PUSHJ    P,STAPTT             ;
072457 / 554044,,030142          HLRZ  TAC,JOBNAM(J)          ;
072460 / 260140,,072424         PUSHJ    P,STAPTT             ;
072461 / 550044,,030142          HRRZ  TAC,JOBNAM(J)          ;
072462 / 260140,,072424         PUSHJ    P,STAPTT             ;
072463 / 262140,,000001           POP    P,   TAC             ;
072464 / 263140,,000000          POPJ    P,                   ;
                       SEGSTT:
072465 / 261140,,000001          PUSH    P,   TAC             ;
072466 / 135040,,037600           LDB  TAC, PSEGN             ;
072467 / 242040,,000006           LSH  TAC,     6             ;
072470 / 660040,,430000           TRO  TAC,SEGSTA             ;
072471 / 260140,,072423         PUSHJ    P,STAPUT             ;
072472 / 262140,,000001           POP    P,   TAC             ;
072473 / 263140,,000000          POPJ    P,                   ;
                       ;FTSTAT
                       ;ROUTINE TO FIND HOLE BIG ENOUGH FOR REQUEST
                       ;CALL:	MOVE TAC,HIGHEST REL. ADR. ASKING FOR
                       ;	PUSHJ P,HOLSRC
                       ;	RETURN1	;NO HOLES BIG ENOUGH
                       ;	RETURN2	;UCHN BYTE SET TO LAST BLOCK+1 IN HOLE
                       ;		;BLK SET TO HIGHEST REL. LOC. IN THAT HOLE
                       ;		;LOC SET TO ADDRESS OF FIRST BLOCK IN HOLE
                       ;		;AC2=LARGEST HOLE SEEN
                       ;USES TAC1
                       HOLSRC:
072474 / 311040,,022200          CAML  TAC,022200             ;; IS IT A REASONABLE SIZE REQUEST?
072475 / 263140,,000000          POPJ    P,                   ;; NO, GIVE UP NOW
                       HOLE:
072476 / 200500,,022203          MOVE UCHN,022203             ;; BYTE POINTER TO FIRST BIT-1
072477 / 400700,,000000          SETZ  AC2,                   ;;LARGEST HOLE SIZE = 0
072500 / 200440,,022207          MOVE  LOC,022207             ;;HOLE LOCATION = BOTTOM OF USER SPACE.
                       CORHOL:
072501 / 634640,,000015          TDZA  BLK,000015             ;;START BLK AT 0 AND SKIP
                       CORHO0:
072502 / 271640,,002000          ADDI  BLK,002000             ;;INCREMENT HIGHEST REL LOC.
                       CORHO1:
072503 / 316500,,022176          CAMN UCHN,022176             ;;BYTE POINTER TO 1ST NON-EXISTANT BLOCK
072504 / 263140,,000000          POPJ    P,                   ;;NO MORE CORE TO SEARCH
072505 / 134100,,000012          ILDB TAC1,000012             ;;GET NEXT CORE USE BIT
072506 / 271440,,002000          ADDI  LOC,002000             ;;INCREMENT ADDRESS OF BLOCK
072507 / 322100,,072502         JUMPE TAC1,072502             ;;IS THIS BLOCK IN USE?
072510 / 322640,,072503         JUMPE  BLK,072503             ;;YES, HAVE ANY FREE BLOCKS BEEN SEEN YET?
072511 / 313640,,000016         CAMLE  BLK,000016             ;;YES, BIGGEST SO FAR?
072512 / 202640,,000016         MOVEM  BLK,000016             ;;YES, SAVE IN T1.
072513 / 317640,,000001          CAMG  BLK,   TAC             ;
                       ;YES, IS THIS HOLE EQUAL TO OR GREATER
                       ;THAN THE REQUEST?
072514 / 254000,,072501          JRST      072501             ;;NO, KEEP LOOKING FOR HOLES
072515 / 275455,,002000          SUBI  LOC,  2000(BLK)        ;;YES, SET LOC TO FIRST BLOCK IN HOLE
072516 / 275640,,000001          SUBI  BLK,000001             ;;SET BLK TO HIGHEST REL. LOC.	;JS
072517 / 315040,,022204         CAMGE  TAC,022204             ;;DOES HE WANT MORE THAN 76K?
072520 / 350003,,000000           AOS            (P)          ;;NO. GIVE IT TO HIM.	;JS
072521 / 263140,,000000          POPJ    P,                   ;;RETURN			;JS
                       ;AND RETURN
                       ;CORCHK AND CORTCK  -- CHECK CORTAL AGAINST CORTAB AND CHECK CORTAB AGAINST WORLD
                       ;IFN FTCORBUG
                       ;CALL:	MOVE UCHN,<JOB NUMBER, OR OTHER CODE>	;TO SET TABLE
                       ;	MOVEI UCHN,0	;TO CLEAR TABLE
                       ;	MOVE BLK,HIGHEST REL. LOC. IN USER AREA
                       ;	MOVE LOC,ADDRESS OF FIRST BLOCK TO SET OR CLEAR
                       CORSTG:
072522 / 261140,,000001          PUSH    P,000001             ;;SAVE HIGHEST LOC. BEING REQUESTED
072523 / 240640,,777766           ASH  BLK,777766             ;;CONVERT TO NO. OF BLOCKS-1
072524 / 271640,,000001          ADDI  BLK,000001             ;;NO. OF BLOCKS
072525 / 322500,,072527         JUMPE UCHN,072527             ;;UPDATE NO OF FREE BLOCKS
072526 / 211655,,000000         MOVNI  BLK,      (BLK)        ;;DECREASE IF SETTING BITS
072527 / 311440,,022207          CAML  LOC,022207             ;;IF THIS IS A CALL IN LOCKED CORE, LOCK AND
                       ;UNLOCK ARE RESPONSIBLE FOR DIDDLING CORTAL - REG
072530 / 272640,,022177          ADDM  BLK,022177             ;;INCREASE IF CLEARING,DECREASE IF SETTING BITS
072531 / 260140,,072570         PUSHJ    P,072570             ;;MAKE A BYTE POINTER
072532 / 214640,,000015          MOVM  BLK,000015             ;;GET MAG. OF NO. OF BLOCKS INVOLVED
                       CORST1:
072533 / 134100,,000001          ILDB TAC1,000001             ;;GET OLD BIT.
072534 / 322500,,072537         JUMPE UCHN,072537             ;;LOOK FOR CONFLICTS
072535 / 326100,,072540         JUMPN TAC1,CORST2             ;
072536 / 254000,,072565          JRST      CORSTD             ;
                       CORST9:
072537 / 326100,,072565         JUMPN TAC1,CORSTD             ;
                       CORST2:
072540 / 260140,,000316         PUSHJ    P,PUSHIT             ;
072541 / 260140,,044320         PUSHJ    P,044320             ;
072542 / 260140,,044066         PUSHJ    P,DISMES             ;
072553 / 200043,,777763          MOVE  TAC,777763(P)          ;;GET THE ARGUMENT
072554 / 260140,,044230         PUSHJ    P,044230             ;;TYPE DECIMAL WITH PERIOD
072555 / 260140,,044066         PUSHJ    P,DISMES             ;
072561 / 200043,,777773          MOVE  TAC,777773(P)          ;;GET NEW CLAIM
072562 / 260140,,044230         PUSHJ    P,044230             ;;TYPE DECIMAL W/PERIOD
072563 / 260140,,044076         PUSHJ    P,044076             ;
072564 / 260140,,000341         PUSHJ    P, POPIT             ;
                       CORSTD:
072565 / 137500,,000001           DPB UCHN,000001             ;;STORE NEW CORE USE BITS.
072566 / 367640,,072533          SOJG  BLK,CORST1             ;
                       ;MAKE SURE CORTAB AND CORTAL ARE RIGHT
072567 / 254000,,037376          JRST      037376             ;;RESTORE TAC, AND POPJ
                       CORGBP:
                       ;MAKE A BYTE POINTER TO CORTAB
072570 / 200040,,000011          MOVE  TAC,000011             ;;ADDRESS OF FIRST BLOCK
                       CORGB1:
072571 / 201100,,000000         MOVEI TAC1,                   ;;ENTER HERE WITH TAC SET UP.
072572 / 246040,,777764          LSHC  TAC,777764             ;;FORM BYTE POINTER TO BIT-1
072573 / 241100,,000002           ROT TAC1,     2             ;
072574 / 270042,,071215           ADD  TAC, COREP(TAC1)       ;;FORM BYTE POINTER
072575 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO CLEAR PART OF JOB DAT AREA(PART PROTECTED FROM USER IO)
                       ;CALLED WHEN NEW CORE ASSIGNED AND AT SYSTEM RESTART(140)
                       ;	MOVE J,JOB NO.
                       ;CALL:	MOVE JDAT,ADR. OF JOB DATA AREA
                       ;	PUSHJ	P,CLRJOB
                       CLRJB1:
072576 / 200504,,026114          MOVE UCHN,JBTSTS(J)          ;; CAN'T DO THIS IF NO JOB DATA AREA
072577 / 603500,,001000          TLNE UCHN,001000             ;; IS THIS AN UPPER SEGMENT
072600 / 263140,,000000          POPJ    P,                   ;; YES, JUST FORGET IT
072601 / 402007,,000072         SETZM      JOBPRT(JDAT)       ;;FIRST LOC. PROTECTED FROM USER
072602 / 205047,,000072         MOVSI  TAC,JOBPRT(JDAT)       ;
072603 / 541047,,000073          HRRI  TAC,JOBPR1(JDAT)       ;
072604 / 251047,,000114           BLT  TAC,JOBPFI(JDAT)       ;
072605 / 402007,,000043         SETZM      JOBENB(JDAT)       ;;ALSO CLEAR APR ENABLE WORD
072606 / 402007,,000071         SETZM      JOBINT(JDAT)       ;;AND MOORER RELOCATER
072607 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
072610 / 607040,,006000          TLNN  TAC,006000             ;; FORGET THIS IF SWAPPING REQUEST
072611 / 553004,,026620         HRRZS       UUOPC(J)          ;; AND UUO PC FLAGS
072612 / 263140,,000000          POPJ    P,                   ;;RETURN
                       CLRJOB:
072613 / 260140,,072576         PUSHJ    P,072576             ;; CLEAR JOB DATA AREA
072614 / 254000,,045621          JRST      045621             ;; GO SET JOB STATUS, SO CONT WILL
                       ;NOT WORK
                       CLRINI:
072615 / 261147,,000074          PUSH    P,JOBDDT(JDAT)       ;; ON 200 RESTARTS, SAVE JOBDDT
072616 / 260140,,072576         PUSHJ    P,CLRJB1             ;
072617 / 262147,,000074           POP    P,JOBDDT(JDAT)       ;
072620 / 254000,,045621          JRST      ESTOP2             ;
                       ; ROUTINE TO GET A JOB'S PROTECTION-RELOCATION
                       GETPR:
072621 / 261140,,000005          PUSH    P,000005             ;; SAVE SOME ACCUMULATORS
072622 / 261140,,000002          PUSH    P,  TAC1             ;
072623 / 200044,,027120          MOVE  TAC,JBTADR(J)          ;; START WITH THE MAIN PART
152116 / 001777,,001777           XWD 1777,1777               ;
072624 / 420040,,152116         ANDCM  TAC,152116             ;
072625 / 135240,,037600           LDB  DAT, PSEGN             ;
072626 / 322240,,072654         JUMPE  DAT,072654             ;; IF NO UPPER SEGMENT, WE ARE DONE
072627 / 200105,,026114          MOVE TAC1,JBTSTS(DAT)        ;; HE HAS AN UPPER, IS IT WRITE-PROTECTED?
072630 / 603100,,000001          TLNE TAC1,   JWP             ;
072631 / 661040,,000001           TLO  TAC,000001             ;; YES, SET WRITE-PROTECT BIT
072632 / 336105,,027120         SKIPN TAC1,JBTADR(DAT)        ;
072633 / 254000,,072650          JRST      GETPR1             ;
                       GETPR5:
072634 / 554244,,027120          HLRZ  DAT,JBTADR(J)          ;
072635 / 305240,,400000         CAIGE  DAT,400000             ;
072636 / 254000,,072643          JRST      GETPR3             ;
072637 / 275105,,000000          SUBI TAC1,      (DAT)        ;; FUDGE RELOCATION BY RIGHT AMOUNT
072640 / 514240,,000005          HRLZ  DAT,   DAT             ;
072641 / 270100,,000005           ADD TAC1,000005             ;; AND PROTECTION
072642 / 254000,,072644          JRST      GETPR2             ;
                       GETPR3:
072643 / 640100,,400000           TRC TAC1,400000             ;
                       GETPR2:
072644 / 661100,,400000           TLO TAC1,400000             ;
072645 / 242100,,777767           LSH TAC1,777767             ;
152066 / 000776,,000776           XWD 776,776                 ;
072646 / 404100,,152066           AND TAC1,152066             ;
072647 / 434040,,000002            OR  TAC,000002             ;; MERGE TWO RELOCATIONS
                       GETPR1:
072650 / 202053,,024064         MOVEM  TAC,LASTPR(PID)        ;; SAVE THIS AS THE LAST PROT-RELOC ISSUED
072651 / 262140,,000002           POP    P,  TAC1             ;
072652 / 262140,,000005           POP    P,   DAT             ;
072653 / 263140,,000000          POPJ    P,                   ;
                       GETPR4:
072654 / 336104,,027220         SKIPN TAC1,JBTPR2(J)          ;;IS DOING PEEK-POKE STUFF?
072655 / 254000,,072650          JRST      072650             ;;NO
072656 / 603100,,000001          TLNE TAC1,000001             ;;IS IT TO BE WRITE PROTECTED?
072657 / 661040,,000001           TLO  TAC,000001             ;;YES
072660 / 626100,,000001          TRZN TAC1,000001             ;;IS IT TO BE RELATIVE TO HIS CORE IMAGE?
072661 / 254000,,072634          JRST      GETPR5             ;
072662 / 261140,,000001          PUSH    P,000001             ;;YES, CHECK TOP OF HIS CORE IMAGE
072663 / 554040,,000002          HLRZ  TAC,000002             ;;PROTECTION HE IS REQUESTING
072664 / 435040,,001777          IORI  TAC,001777             ;;MAKE IT HONEST
072665 / 554244,,027120          HLRZ  DAT,JBTADR(J)          ;;HIS JOBS PROTECTION
072666 / 307242,,000000          CAIG  DAT,      (TAC1)       ;;IS RELOC BELOW LOWERS PROT?
072667 / 254000,,072700          JRST      GETPR6             ;
072670 / 435240,,001777          IORI  DAT,001777             ;;JUST TO BE SAFE
072671 / 275242,,000000          SUBI  DAT,      (TAC1)       ;;HOW FAR FROM NEW RELOCATION TO TOP OF CORE IMAGE.
072672 / 311240,,000001          CAML  DAT,000001             ;;IS HE REQUESTING TO MUCH?
072673 / 200240,,000001          MOVE  DAT,000001             ;;NO, USE WHAT HE GAVE US
072674 / 262140,,000001           POP    P,000001             ;;GET BACK LOWERS PROT. RELOC.
072675 / 504100,,000005           HRL TAC1,000005             ;;SET NEW PROT. FOR PR2
072676 / 271101,,000000          ADDI TAC1,      (TAC)        ;;AND RELOCATE IT
072677 / 254000,,072634          JRST      072634             ;;AND NOW IT LOOKS LIKE AN UPPER
                       GETPR6:
072700 / 262140,,000001           POP    P,   TAC             ;
072701 / 621040,,000001           TLZ  TAC,     1             ;
072702 / 254000,,072650          JRST      GETPR1             ;
                       ;THIS HERE IS A ROUTINE TO ADDRESS CHECK AND RELOCATE
                       ;A USER ADDRESS. IT MAKES USE OF UPPER SEGMENTS AND
                       ;THE PEEK-POKE FEATURE (JBTPR2).
                       ;CALLING:
                       ;	MOVE J,<NUMBER OF JOB IN QUESTION>
                       ;	MOVE TAC1,<ADDRESS TO CHECK AND RELOCATE>
                       ;	PUSHJ P,RELOCA
                       ;	<ILLEGAL ADDRESS>
                       ;	<LEGAL ADDRESS>
                       ;UPON SUCCESS RETURN TAC1 CONTAINS THE ABSOLUTE ADDRESS
                       ;THE SIGN BIT IS SET IF THIS ADDRESS IS WRITE PROTECTED
                       ;FROM THE USER (THIS INCLUDES THE PROTECTED PART FROM 0-JOBPFI).
                       ;AC1 IS NOW SET-UP FOR A CALL ON RELOCB.
                       RELOCA:
072703 / 621100,,777777           TLZ TAC1,777777             ;;CLEAR CONFUSING BITS!
072704 / 305100,,000114         CAIGE TAC1,000114             ;;BELOW PROTECTED PART?
072705 / 661100,,400000           TLO TAC1,400000             ;;SET WRITE PROTECTED ACCESS
072706 / 261140,,000001          PUSH    P,000001             ;;SAVE AN AC
072707 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;;GET PROT
072710 / 305042,,000000         CAIGE  TAC,      (TAC1)       ;;IS IT OUTSIDE LOWER?
072711 / 254000,,072715          JRST      072715             ;;YES, THIS IS HARDER
072712 / 200644,,027120          MOVE  AC1,JBTADR(J)          ;;SET-UP AC1 WITH PROT RELOC WE ARE USING
072713 / 271115,,000000          ADDI TAC1,      (AC1)        ;;DO RELOCATION THING
072714 / 254000,,037375          JRST      037375             ;;PUT BACK TAC AND SKIP
                       RELOC1:
072715 / 135640,,037600           LDB  AC1,037600             ;;CHECK FOR UPPER SEGMENT
072716 / 322640,,072724         JUMPE  AC1,072724             ;;NONE, CHECK PEEK-POKE
072717 / 205040,,000001         MOVSI  TAC,000001             ;;CHECK WRITE PROTECT
072720 / 612055,,026114          TDNE  TAC,JBTSTS(AC1)        ;
072721 / 661100,,400000           TLO TAC1,400000             ;;WRITE PROTECTED
072722 / 200655,,027120          MOVE  AC1,JBTADR(AC1)        ;;GET PROT RELOC INTO AC1
072723 / 254000,,072746          JRST      RELOC3             ;
                       RELOC2:
072724 / 336644,,027220         SKIPN  AC1,JBTPR2(J)          ;;IS HE DOING PEEK-POKE
072725 / 254000,,037376          JRST      037376             ;;RESTORE TAC AND RETURN
072726 / 663640,,000001          TLOE  AC1,000001             ;;IS HE WRITE PROTECTED(SET BIT FOR COMPARE)
072727 / 661100,,400000           TLO TAC1,400000             ;;YES
072730 / 626640,,000001          TRZN  AC1,000001             ;;IS THIS A RELATIVE MAPPING?
072731 / 254000,,072746          JRST      072746             ;;NO, (WHEW)!
072732 / 261140,,000005          PUSH    P,000005             ;;OH BOY, SAVE ANOTHER AC
072733 / 554040,,000015          HLRZ  TAC,000015             ;;GET RELOC HE IS TRYING FOR
072734 / 435040,,001777          IORI  TAC,001777             ;;MAKE IT HONEST
072735 / 554244,,027120          HLRZ  DAT,JBTADR(J)          ;;GET PROT OF LOWER
072736 / 307255,,000000          CAIG  DAT,      (AC1)        ;;IS THE RELATIVE RELOC HE WANTS TOO BIG?
072737 / 254000,,072760          JRST      072760             ;;YES, LOSE
072740 / 275255,,000000          SUBI  DAT,      (AC1)        ;;GET MAX PROT HE CAN HAVE
072741 / 311240,,000001          CAML  DAT,000001             ;;IS HE ASKING FOR MORE THAN THAT?
072742 / 200240,,000001          MOVE  DAT,000001             ;;NO, USE HIS
072743 / 270644,,027120           ADD  AC1,JBTADR(J)          ;;SET ABSOLUTE RELOCATION
072744 / 504640,,000005           HRL  AC1,000005             ;;SET PROT.
072745 / 262140,,000005           POP    P,000005             ;;GET BACK THE AC WE SAVED
                       RELOC3:
072746 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;;NOW WE CHECK TO SEE
072747 / 305040,,400000         CAIGE  TAC,400000             ;;IF HIS LOWER IS BIGGER THAN 400000
072750 / 201040,,400000         MOVEI  TAC,400000             ;;IT ISN'T, USE 400000
072751 / 274100,,000001           SUB TAC1,000001             ;;ADJUST REFERENCE
072752 / 603100,,377777          TLNE TAC1,377777             ;;UNDERFLOW?
072753 / 254000,,037376          JRST      037376             ;;YES, BETWEEN UPPER AND LOWER!
072754 / 554040,,000015          HLRZ  TAC,000015             ;;GET PROT.
072755 / 301042,,000000          CAIL  TAC,      (TAC1)       ;;TOO BIG?
072756 / 350003,,777777           AOS      777777(P)          ;;NO, SKIP
072757 / 254000,,037376          JRST      037376             ;;RESTORE TAC AND RETURN
                       RELOC4:
072760 / 262140,,000005           POP    P,   DAT             ;
072761 / 254000,,037376          JRST      037376             ;;LOSE
                       ;USE THIS ROUTINE AFTER CALLING RELOCA ONCE TO ASSURE
                       ;THAT THE ADDRESS YOU ARE CHECKING IS IN THE SAME
                       ;SEGMENT AS THE LAST ONE YOU CHECKED. DON'T CLOBBER
                       ;AC1 BETWEEN CALLS ON RELOCA AND RELOCB
                       ;CALLING:
                       ;	MOVE J,<NUMBER OF JOB IN QUESTION>
                       ;	MOVE TAC1,<ADDRESS YOU WISH CHECKED>
                       ;	PUSHJ P,RELOCB
                       ;	<ILLEGAL ADDRESS OR NOT IN SAME SEGMENT AS AC1>
                       ;	<LEGAL ADDRESS AND IN RIGHT SEGMENT>
                       RELOCB:
072762 / 261140,,000015          PUSH    P,000015             ;;SAVE PROT RELOC WE USED LAST!
072763 / 260140,,072703         PUSHJ    P,072703             ;;DO THE RELOC THING
072764 / 254000,,072772          JRST      RELOC5             ;
072765 / 262143,,000000           POP    P,      (P)          ;
072766 / 250643,,000001          EXCH  AC1,     1(P)          ;
072767 / 316643,,000001          CAMN  AC1,     1(P)          ;;DID RELOCA USE PROT RELOC WE WANTED?
072770 / 350003,,000000           AOS            (P)          ;;YES, SUCCESS
072771 / 263140,,000000          POPJ    P,                   ;
                       RELOC5:
072772 / 262140,,000015           POP    P,   AC1             ;
072773 / 263140,,000000          POPJ    P,                   ;;LOSE
                       UNLOKC:
072774 / 201205,,000000         MOVEI    J,      (DAT)        ;;CALLED FROM CLOCK RQ AT ESTOP4
                       UNLOCK:
072775 / 261140,,000001          PUSH    P,   TAC             ;
072776 / 201040,,100000         MOVEI  TAC, JLOCK             ;
072777 / 616044,,026114          TDNN  TAC,JBTSTS(J)          ;;IS JOB LOCKED IN AT ALL?
073000 / 254000,,037376          JRST      037376             ;;NO. THIS IS EASY.
073001 / 261140,,000007          PUSH    P,  PROG             ;
073002 / 412044,,026114        ANDCAM  TAC,JBTSTS(J)          ;;UNLOCK HIM.
073003 / 201040,,460000         MOVEI  TAC,LOKSTA             ;
073004 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       ;FTSTAT
073005 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;GET THE ADDRESS OF THIS JOB.
073006 / 554040,,000007          HLRZ  TAC,  PROG             ;
073007 / 435040,,001777          IORI  TAC,001777             ;;DEPT REDUNDANCY DEPT.
073010 / 271047,,000001          ADDI  TAC,     1(PROG)       ;;COMPUTE ADDRESS ABOVE THIS JOB.
073011 / 312040,,022207          CAME  TAC,022207             ;;SAME AS LOKTOP?
073012 / 254000,,073036          JRST      UNLOK4             ;
                       UNLOK0:
073013 / 261140,,000002          PUSH    P,  TAC1             ;
073014 / 201347,,000000         MOVEI PROG,      (PROG)       ;;BOTTOM OF NEW UNLOCKED AREA.
                       UNLOK1:
073015 / 201047,,776000         MOVEI  TAC,776000(PROG)       ;;LOOK 1K FURTHER DOWN.
073016 / 260140,,072571         PUSHJ    P,072571             ;;GET A BYTE POINTER
073017 / 134100,,000001          ILDB TAC1,000001             ;;LOAD CORE CODE.
073020 / 322100,,073026         JUMPE TAC1,073026             ;;CORE IS FREE. (GIVE BACK TO CORTAL)
073021 / 201040,,100000         MOVEI  TAC, JLOCK             ;
073022 / 305100,,000101         CAIGE TAC1,000101             ;;CORE IN SYSTEM?
073023 / 612042,,026114          TDNE  TAC,JBTSTS(TAC1)       ;;NO. CORE BELONGS TO UNLOCKED USER?
073024 / 254000,,073031          JRST      073031             ;;SYSTEM CORE OR LOCKED USER.
073025 / 254000,,073027          JRST      073027             ;
                       UNLOK2:
073026 / 350000,,022177           AOS      022177             ;;UNCLAIMED BLOCK: INCREMENT CORTAL
073027 / 275340,,002000          SUBI PROG,  2000             ;
073030 / 254000,,073015          JRST      UNLOK1             ;
                       UNLOK3:
073031 / 201047,,000000         MOVEI  TAC,      (PROG)       ;
073032 / 260140,,072571         PUSHJ    P,CORGB1             ;
073033 / 202040,,022203         MOVEM  TAC,022203             ;;SET FOR HOLSRC.
073034 / 202340,,022207         MOVEM PROG,LOKTOP             ;
                       ;MAKE SURE CORTAB AND CORTAL ARE CONSISTENT
073035 / 262140,,000002           POP    P,000002             ;;RESTORE AC'S
                       UNLOK4:
073036 / 262140,,000007           POP    P,  PROG             ;
073037 / 254000,,037376          JRST       TPOPJ             ;
                       LOCK0:
073040 / 265040,,043640           JSP  TAC,UUOMES             ;
                       LOCK:
073047 / 135100,,037600           LDB TAC1, PSEGN             ;
073050 / 326100,,073040         JUMPN TAC1, LOCK0             ;
073051 / 332000,,022205         SKIPE      LOCKNO             ;
073052 / 316200,,022205          CAMN    J,LOCKNO             ;
073053 / 254000,,073062          JRST       LOCK1             ;
073054 / 201040,,000036         MOVEI  TAC,000036             ;;CODE CAN'T BE REENTERED, SO
073055 / 260140,,060211         PUSHJ    P,060211             ;;LET THIS GUY WAIT.
073056 / 254000,,073047          JRST        LOCK             ;
                       LOCK0A:
073057 / 201040,,000000         MOVEI  TAC,                   ;
073060 / 260140,,060210         PUSHJ    P, SLEEP             ;
073061 / 254000,,073047          JRST        LOCK             ;
                       LOCK1:
073062 / 260140,,071623         PUSHJ    P,071623             ;;WAIT UNTIL IO STOPS.
073063 / 254000,,073057          JRST      LOCK0A             ;
                       ;NOW WE DECIDE WHERE TO PUT THIS TURKEY.
073064 / 201700,,100000         MOVEI  AC2, JLOCK             ;
073065 / 612704,,026114          TDNE  AC2,JBTSTS(J)          ;;ARE WE LOCKED ALREADY?
073066 / 260140,,072775         PUSHJ    P,072775             ;;YES. UNLOCK FIRST. (SHUFFLES IF POSSIBLE)
                       LOCK2A:
073067 / 200440,,035407          MOVE  LOC,035407             ;;LOWEST POSSIBLE LOC OF HOLE.
073070 / 311440,,022207          CAML  LOC,022207             ;;TOP OF LOCKED SPACE.
073071 / 254000,,073116          JRST      073116             ;;LOC CONTAINS ADDRESS.
073072 / 260140,,072570         PUSHJ    P,072570             ;;MAKE A BYTE POINTER
073073 / 200500,,000001          MOVE UCHN,000001             ;;BYTE POINTER IN UCHN
073074 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;;SIZE OF HOLE NEEDED.
                       LOCK1A:
073075 / 634640,,000015          TDZA  BLK,000015             ;;SIZE OF THIS HOLE.
                       LOCK1B:
073076 / 271640,,002000          ADDI  BLK,002000             ;;INCREMENT SIZE OF THIS HOLE.
                       LOCK1C:
073077 / 311440,,022207          CAML  LOC,022207             ;;PASSED THE LOCKED PART?
073100 / 254000,,073115          JRST      073115             ;;YES. SEE IF IT WAS IN A HOLE.
073101 / 134100,,000012          ILDB TAC1,000012             ;;PICKUP CORE USE BITS
073102 / 271440,,002000          ADDI  LOC,  2000             ;
073103 / 322100,,073076         JUMPE TAC1,073076             ;;JUMP IF STILL IN HOLE.
073104 / 305100,,000101         CAIGE TAC1,000101             ;;SKIP IF THIS IS NOT A JOB
073105 / 612702,,026114          TDNE  AC2,JBTSTS(TAC1)       ;;SKIP IF JOB IS UNLOCKED
073106 / 254000,,073110          JRST      073110             ;;IN SYSTEM OR IN LOCKED JOB.
073107 / 254000,,073076          JRST      073076             ;;UNLOCKED JOB IS A LOGICAL HOLE.
073110 / 322640,,073077         JUMPE  BLK,073077             ;;NOT IN HOLE. JUMP IF THERE WAS NO HOLE.
073111 / 307641,,000000          CAIG  BLK,      (TAC)        ;;SKIP IF HOLE IS BIG ENOUGH.
073112 / 254000,,073075          JRST      073075             ;;NOT BIG ENOUGH.
073113 / 275455,,002000          SUBI  LOC,  2000(BLK)        ;;COMPUTE FIRST LOCATION OF HOLE.
073114 / 254000,,073116          JRST       LOCK2             ;
                       LOCK1D:
073115 / 275455,,000000          SUBI  LOC,      (BLK)        ;;DECREASE FOR HOLE AT TOP.
                       LOCK2:
073116 / 500444,,027120           HLL  LOC,JBTADR(J)          ;;LOC HAS REL. OF IDEAL HOLE.
073117 / 202440,,022206         MOVEM  LOC,022206             ;;SAVE ADDRESS OF THE HOLE.
073120 / 316444,,027120          CAMN  LOC,JBTADR(J)          ;;SAME AS WHERE WE ARE NOW?
073121 / 254000,,073137          JRST      073137             ;;WE'RE IN LUCK. (LOCK)
073122 / 260140,,073161         PUSHJ    P,073161             ;;SEE IF WE CAN SHUFFLE TO THE RIGHT PLACE.
073123 / 254000,,073173          JRST      073173             ;;NO. LET THE CLOCK SWAP JOBS OUT.
                       ;HERE WE HAVE TO MOVE OURSELVES IN.
073124 / 260140,,037464         PUSHJ    P, PWAIT             ;
073125 / 201040,,022070         MOVEI  TAC,CORCSC             ;
073126 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
073127 / 554040,,000007          HLRZ  TAC,  PROG             ;
073130 / 550440,,000007          HRRZ  LOC,  PROG             ;
073131 / 554640,,000007          HLRZ  BLK,  PROG             ;
073132 / 201500,,000000         MOVEI UCHN,                   ;
073133 / 260140,,072522         PUSHJ    P,072522             ;;FREE OLD CORE.
073134 / 550440,,022206          HRRZ  LOC,LOKPOS             ;
073135 / 260140,,072162         PUSHJ    P,072162             ;;MAKE IT SHUFFLE
073136 / 255000,,000000          JFCL                         ;
                       LOCK4:
073137 / 201040,,460100         MOVEI  TAC,460100             ;
073140 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       ;FTSTAT
073141 / 201040,,100000         MOVEI  TAC, JLOCK             ;
073142 / 436044,,026114          IORM  TAC,JBTSTS(J)          ;;TELL THEM WE'RE LOCKED IN.
073143 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;JOB IS NOW IN THE RIGHT PLACE.
073144 / 554040,,000007          HLRZ  TAC,000007             ;;GET PROT
073145 / 435040,,001777          IORI  TAC,  1777             ;
073146 / 271047,,000001          ADDI  TAC,     1(PROG)       ;;FIRST ADDRESS ABOVE THIS JOB
073147 / 317040,,022207          CAMG  TAC,022207             ;;IS THIS GREATER THAN OLD LOKTOP?
073150 / 254000,,073155          JRST      073155             ;;NO.  THEN THERE'S NOTHING SPECIAL.
073151 / 202040,,022207         MOVEM  TAC,LOKTOP             ;
                       ;CORTAL SHOULD BE OK. JOB WAS MOVED TO CORE WHICH WASN'T LOCKED CORE AT THAT TIME.
073152 / 200440,,022207          MOVE  LOC,LOKTOP             ;
073153 / 260140,,072570         PUSHJ    P,CORGBP             ;
073154 / 202040,,022203         MOVEM  TAC,CORE2P             ;
                       LOCK99:
073155 / 260140,,071612         PUSHJ    P,071612             ;;CONTINUE HIS SPACEWARE JOB IF SUSPENDED
073156 / 402000,,022205         SETZM      022205             ;;CLEAR THIS.
073157 / 200044,,027120          MOVE  TAC,JBTADR(J)          ;
073160 / 254000,,060225          JRST      STOTAC             ;
                       LOCK5:
073161 / 550440,,022206          HRRZ  LOC,022206             ;;GET BASE LOCATION
073162 / 554740,,022206          HLRZ  AC3,022206             ;;AND THE PROTECTION.
073163 / 260140,,072570         PUSHJ    P,072570             ;;MAKE A BYTE POINTER IN TAC.
                       LOCK5A:
073164 / 134100,,000001          ILDB TAC1,000001             ;;GET CORE USE BITS
073165 / 306104,,000000          CAIN TAC1,      (J)          ;;SAME AS OUR JOB
073166 / 254000,,037401          JRST      037401             ;;YES. THEN WE CAN MOVE IN.
073167 / 326100,,037403         JUMPN TAC1,037403             ;;SOME ONE IS THERE. WE HAVE TO WORK HARD.
073170 / 275740,,002000          SUBI  AC3,  2000             ;
073171 / 327740,,073164         JUMPG  AC3,073164             ;;LOOP.
073172 / 254000,,037401          JRST      037401             ;;WE'RE ALL FREE.
                       LOCK3:
073173 / 202200,,022205         MOVEM    J,022205             ;;TELL THE SWAPPER TO FOREGO SWAPIN.
073174 / 260140,,073230         PUSHJ    P,073230             ;;PLANT CLKRQ FOR LOCK.
073175 / 211040,,000005         MOVNI  TAC,000005             ;;REQUE THIS JOB TO IOWQ
073176 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
073177 / 260140,,046124         PUSHJ    P,046124             ;;WAIT FOR REACTIVATION
073200 / 312200,,022205          CAME    J,022205             ;;AVOID ↑C CONTINUE HANGUP
073201 / 254000,,073047          JRST      073047             ;;REENTER THE LOCK RESOURCE
073202 / 200440,,022206          MOVE  LOC,LOKPOS             ;
073203 / 254000,,073067          JRST      073067             ;;SEE IF ALL GOOD THINGS HAVE HAPPENED.
                       LOCK3A:
                       ;HERE AT CLOCK LEVEL.
073204 / 335000,,022415        SKIPGE      022415             ;;FREE STORAGE DOING IT TOO?
073205 / 254000,,073230          JRST      073230             ;;YES. WAIT FOR IT TOO.
073206 / 336000,,021630         SKIPN      FINISH             ;
073207 / 332000,,021631         SKIPE       FORCE             ;
073210 / 254000,,073230          JRST      073230             ;;WAIT FOR SWAPPER TO BE IDLE.
073211 / 332200,,022205         SKIPE    J,LOCKNO             ;
073212 / 331004,,026114         SKIPL      JBTSTS(J)          ;
073213 / 254000,,073235          JRST      073235             ;;FLUSH CLOCK RQ IF JOB NOT THERE.
073214 / 260140,,073161         PUSHJ    P,073161             ;;SEE IF THERE'S A HOLE YET.
073215 / 254000,,073221          JRST      073221             ;;NOT YET.
073216 / 211040,,000015         MOVNI  TAC,    TQ             ;
073217 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;;SET JOB TO RUN AGAIN
073220 / 254000,,046027          JRST      046027             ;;REQUEUE AND DISMISS CLOCK LEVEL.
                       LOCK3B:
073221 / 201202,,000000         MOVEI    J,      (TAC1)       ;;GET JOB NUMBER OF THE GUY WE'RE FORCING
073222 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
073223 / 603040,,006000          TLNE  TAC,006000             ;;SKIP IF HE'S NOT IN MOTION ALREADY
073224 / 254000,,073230          JRST      073230             ;;WE'LL HAVE TO WAIT FOR HIM TO STOP MOVING
073225 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;
073226 / 336004,,021760         SKIPN        XJOB(J)          ;;IS HE ALREADY EXPANDING?
073227 / 260140,,070673         PUSHJ    P,070673             ;;NO. LET'S GIVE HIM A SHOVE
                       LOCKPL:
152312 / 073204,,000001                                       ;
073230 / 200040,,152312          MOVE  TAC,152312             ;;PLANT A CLOCK REQUEST.
073231 / 700600,,000400          CONO   PI, PIOFF             ;
073232 / 136040,,024117          IDPB  TAC, CLOCK             ;
073233 / 700600,,000200          CONO   PI,  PION             ;
073234 / 263140,,000000          POPJ    P,                   ;
                       LOCK3C:
073235 / 402000,,022205         SETZM      LOCKNO             ;
073236 / 263140,,000000          POPJ    P,                   ;
                       ; "AND WHO DESERVES THE CREDIT?  AND WHO DESERVES THE BLAME?
                       ; NIKCOLI IVANOVITCH LOBACHEVSKY IS HIS NAME."
                       ;		JAM - ORIGINAL FREE STORAGE SYSTEM
                       ;		REG - REVISED SYSTEM MARCH 1972
                       ;	ACCUMULATOR DEFINITIONS
                       ;THE FREE STORAGE SYSTEM ASSUMES THAT CHANNELS 1 AND 2 NEVER REQUEST
                       ;FREE STORAGE.
                       FSINIT:
073237 / 402000,,022210         SETZM       FSBEG             ;
152210 / 022210,,022211           XWD FSBEG,FSBEG+1           ;
073240 / 200040,,152210          MOVE  TAC,152210             ;
073241 / 251040,,022511           BLT  TAC, FSEND             ;
073242 / 402000,,022070         SETZM      CORCSC             ;
073243 / 402000,,022071         SETZM      022071             ;
073244 / 402000,,022072         SETZM      022072             ;
073245 / 402000,,022073         SETZM      022073             ;
073246 / 402000,,022210         SETZM       FSCSC             ;
073247 / 402000,,022211         SETZM      022211             ;
073250 / 402000,,022212         SETZM      022212             ;
073251 / 402000,,022213         SETZM      022213             ;
073252 / 200440,,022067          MOVE  LOC,022067             ;;GET THE SIZE OF USER SPACE
073253 / 316440,,022066          CAMN  LOC,022066             ;;SKIP IF WE HAVE SOME STORAGE CLAIMED
073254 / 254000,,073266          JRST      073266             ;;NO. WE HAVE NOTHING TO GIVE BACK
073255 / 260140,,072570         PUSHJ    P,072570             ;;GET A POINTER TO OUR LOWEST BLOCK
073256 / 202040,,022176         MOVEM  TAC,022176             ;;SAVE AS POINTER TO THE END OF ALL CORE
073257 / 201700,,002000         MOVEI  AC2,  2000             ;
                       FSINI1:
073260 / 136700,,022176          IDPB  AC2,022176             ;;CLEAR BLOCKS IN CORTAB
073261 / 271440,,002000          ADDI  LOC,002000             ;;ADD TO BOTTOM OF FS.
073262 / 350000,,022177           AOS      022177             ;;INCREMENT CORE COUNT
073263 / 272700,,022200          ADDM  AC2,022200             ;
                       ;INCREASE USER CORE
073264 / 312440,,022066          CAME  LOC,022066             ;;AT THE TOP YET?
073265 / 254000,,073260          JRST      073260             ;;NO LOOP
                       FSINI2:
073266 / 202440,,022067         MOVEM  LOC,022067             ;;SAVE RMEMSIZ AS MEMSIZ
073267 / 211500,,000001         MOVNI UCHN,000001             ;;NUMBER OF BLOCKS TO CLAIM NOW
073270 / 272500,,022177          ADDM UCHN,022177             ;;DECREASE USER'S SPACE
073271 / 211440,,002000         MOVNI  LOC,002000             ;;GET - NUMBER OF WORDS CLAIMED
073272 / 272440,,022200          ADDM  LOC,CORMAX             ;
                       ;DECREASE USER SPACE
073273 / 273440,,022067          ADDB  LOC,022067             ;;SET LOWER BOUND OF FS
073274 / 260140,,072570         PUSHJ    P,072570             ;
073275 / 201500,,000105         MOVEI UCHN,   105             ;
073276 / 136500,,000001          IDPB UCHN,000001             ;;CLAIM BLOCK FROM CORTAB
073277 / 200700,,000001          MOVE  AC2,000001             ;
                       FSINI3:
073300 / 316700,,022176          CAMN  AC2,022176             ;;ARE WE AT THE END YET?
073301 / 254000,,073304          JRST      073304             ;
073302 / 136500,,000016          IDPB UCHN,   AC2             ;
073303 / 254000,,073300          JRST      FSINI3             ;
                       FSINI4:
073304 / 202040,,022176         MOVEM  TAC,022176             ;;SET UP NEW TOP OF CORE POINTER
073305 / 133000,,022176           IBP      022176             ;;MAKE POINT TO 2ND UNAVAIL BLK.
152120 / 002000,,022462           XWD 2000*FSNINIT,FSAVB+2*NFSB-1 ;
073306 / 200500,,152120          MOVE UCHN,152120             ;;SIZE,,FLINK
073307 / 200700,,022066          MOVE  AC2,022066             ;;FIRST NONEX ADDRESS
073310 / 275700,,000001          SUBI  AC2,000001             ;;ADDRESS OF HI END OF FIRST BLOCK
073311 / 202516,,000000         MOVEM UCHN,      (AC2)        ;;SET SIZE,,FLINK IN TOP OF BLOCK
073312 / 552516,,777777         HRRZM UCHN,777777(AC2)        ;;SET BLINK
073313 / 202711,,000000         MOVEM  AC2,      (LOC)        ;;ADDRESS OF TOP GOES INTO BOTTOM
073314 / 400500,,000000          SETZ UCHN,                   ;
                       FSINI5:
073315 / 201752,,022424         MOVEI  AC3,022424(UCHN)       ;;GET ADDRESS OF SOMEONE
073316 / 202752,,022423         MOVEM  AC3, FSAVB(UCHN)       ;;SAVE BACK POINTER
073317 / 202752,,022424         MOVEM  AC3,022424(UCHN)       ;;SAVE FORWARD POINTER
073320 / 271500,,000002          ADDI UCHN,000002             ;;INCREMENT BY 2
073321 / 305500,,000036         CAIGE UCHN,000036             ;;ARE WE AT THE END YET?
073322 / 254000,,073315          JRST      073315             ;;NO KEEP LOOPING
073323 / 552700,,022461         HRRZM  AC2,022461             ;;SAVE BACK POINTER TO ONLY BLOCK
073324 / 552700,,022462         HRRZM  AC2,022462             ;;SAVE FORWARD POINTER TO ONLY BLOCK
073325 / 201700,,007020         MOVEI  AC2,007020             ;;NUMBER OF TICKS BETWEEN CHECKER CHECK
073326 / 202700,,022421         MOVEM  AC2,022421             ;;SAVE
073327 / 201500,,022215         MOVEI UCHN,022215             ;;GET THE START OF OUR Q SPACE
073330 / 202500,,022505         MOVEM UCHN,022505             ;;SAVE AS Q INPUT POINTER
073331 / 202500,,022506         MOVEM UCHN,022506             ;;AND Q OUTPUT POINTER
073332 / 254000,,074511          JRST      074511             ;;INITIALIZE FREE STORAGE SPARE LIST USERS
                       FSACSV:
073333 / 250243,,000000          EXCH  DAT,      (P)          ;;PUSHJ P,FSACSV TO SAVE AC'S.
073334 / 261140,,000001          PUSH    P,   TAC             ;
073335 / 261140,,000002          PUSH    P,  TAC1             ;
073336 / 261140,,000016          PUSH    P,   AC2             ;
073337 / 261140,,000017          PUSH    P,  SIZE             ;
073340 / 261140,,000010          PUSH    P,   TEM             ;
073341 / 254005,,000000          JRST            (DAT)        ;
                       FSACRS:
073342 / 262140,,000010           POP    P,000010             ;;JSP DAT,FSACRS TO RESTORE AC'S
073343 / 262140,,000017           POP    P,  SIZE             ;
073344 / 262140,,000016           POP    P,   AC2             ;
073345 / 262140,,000002           POP    P,  TAC1             ;
073346 / 262140,,000001           POP    P,   TAC             ;
073347 / 250243,,000000          EXCH  DAT,      (P)          ;
073350 / 263140,,000000          POPJ    P,                   ;
                       FSSBYP:
073351 / 000015,,000000                                       ;
073351 / 222115,,000000 POINT 17,15000000,17                  ;
                       ;POINTER TO SIZE FIELD OF BLOCK
                       FSSBP1:
073352 / 000016,,000000                                       ;
073352 / 222116,,000000 POINT 17,16000000,17                  ;
                       ;POINTER TO SIZE WHEN BLOCK TOP IN AC2
                       FSGET:
073353 / 634640,,000015          TDZA BLOCK,000015             ;;NORMAL CALL.
                       FSGETU:
073354 / 211640,,000001         MOVNI BLOCK,000001             ;;CALL AT UUO LEVEL AND NEVER WAIT.
073355 / 700700,,060000         CONSZ   PI,060000             ;;ARE WE BELOW CHANNEL 2?
073356 / 254000,,073627          JRST      073627             ;;NO. SOMEONE SHOULD KNOW BETTER.
073357 / 700740,,077400         CONSO   PI,077400             ;;ANY PI'S IN PROGRESS?
073360 / 332013,,023431         SKIPE      INTACT(PID)        ;;WE'RE AT UUO LEVEL? USER INTERRUPT?
073361 / 254000,,073363          JRST      073363             ;;EITHER PI IN PROGRESS OR USER I-LEVEL
073362 / 202640,,022510         MOVEM BLOCK,022510             ;;NORMAL UUO LEVEL. SET SPECIAL FLAG.
073363 / 350000,,036142           AOS      036142             ;;COUNT FS GETS
073364 / 260140,,073333         PUSHJ    P,073333             ;;SAVE  DAT,TEM,SIZE,AC2,TAC,TAC1
073365 / 260140,,037464         PUSHJ    P, PWAIT             ;
073366 / 201040,,022210         MOVEI  TAC, FSCSC             ;
073367 / 201757,,000002         MOVEI SIZE,     2(SIZE)       ;;GET SIZE OF REQUEST +2
073370 / 622740,,000007          TRZE SIZE,000007             ;;IS THIS EXACT MULTIPLE OF TRIVIAL?
073371 / 271740,,000010          ADDI SIZE,000010             ;;NO. ADD TRIVIAL
                       FSGETT:
073372 / 201057,,000000         MOVEI  TAC,      (SIZE)       ;;GET SIZE INTO TAC
073373 / 242040,,777776           LSH  TAC,777776             ;;SHIFT TO MAKE INDEX
073374 / 275040,,000002          SUBI  TAC,000002             ;;NORMALIZE TO ZERO INDEX
073375 / 303040,,000036         CAILE  TAC,000036             ;;ARE WE AT THE END OF THE TABLE?
073376 / 254000,,073417          JRST      073417             ;;YES. LOOK FOR A BIG BLOCK
073377 / 242040,,777777           LSH  TAC,777777             ;
073400 / 350001,,022463           AOS       FSRPQ(TAC)        ;
073401 / 242040,,000001           LSH  TAC,     1             ;
                       FSGT0:
073402 / 200100,,000001          MOVE TAC1,000001             ;;INDEX TO FIRST BASE INSPECTED
073403 / 200640,,022067          MOVE BLOCK,022067             ;;FIND BLOCK WITH A HIGHER ADDRESS
                       FSGT1:
073404 / 315642,,022424         CAMGE BLOCK,022424(TAC1)       ;;ADDRESS BIGGER THAN OUR BEST?
073405 / 200642,,022424          MOVE BLOCK,022424(TAC1)       ;;YES. REMEBER BEST ADDRESS
073406 / 271100,,000002          ADDI TAC1,000002             ;;GO ON TO NEXT LIST BASE
073407 / 350000,,036156           AOS      036156             ;;COUNT A LOOP OF TYPE1
073410 / 305100,,000040         CAIGE TAC1,000040             ;;STILL IN TABLE?
073411 / 254000,,073404          JRST      073404             ;;YES. LOOP
073412 / 317640,,022067          CAMG BLOCK,022067             ;;FOUND ANY?
073413 / 254000,,073566          JRST      073566             ;;NO WE'LL HAVE TO WAIT...
073414 / 260140,,073436         PUSHJ    P,073436             ;;CALL ROUTINE TO CLAIM AND DELINK
073415 / 254000,,073402          JRST      073402             ;;THE CLAIM FAILED. LOOK AGAIN.
073416 / 254000,,073454          JRST      073454             ;;CLAIM OK
                       FSGTBX:
073417 / 350000,,022502           AOS      022502             ;
                       FSGTB0:
073420 / 550640,,022462          HRRZ BLOCK,022462             ;;GET THE FIRST LINK
                       FSGTB1:
073421 / 350000,,036174           AOS      036174             ;;COUNT A LOOP OF TYPE 2
073422 / 307640,,022462          CAIG BLOCK,022462             ;;FLINK > ADDRESS OF LIST BASE?
073423 / 254000,,073566          JRST      073566             ;;NO. WE'LL HAVE TO WAIT.
073424 / 337715,,000000         SKIPG  AC2,      (BLOCK)      ;;SKIP IF THIS BLOCK IS NOT CLAIMED
073425 / 254000,,073420          JRST      073420             ;;HIGHER CHANNEL MUST HAVE GOT THIS ONE!
073426 / 554100,,000016          HLRZ TAC1,000016             ;;GET THE SIZE FIELD
073427 / 301117,,000000          CAIL TAC1,      (SIZE)       ;;SIZE BIG ENOUGH?
073430 / 254000,,073433          JRST      073433             ;;YES. TRY TO CLAIM IT
073431 / 201656,,000000         MOVEI BLOCK,      (AC2)        ;;LOAD NEXT FLINK
073432 / 254000,,073421          JRST      073421             ;;LOOP
                       FSGTB2:
073433 / 260140,,073436         PUSHJ    P,073436             ;;CLAIM THE BLOCK AND DELINK IT
073434 / 254000,,073420          JRST      073420             ;;CLAIM FAILED.
073435 / 254000,,073454          JRST      073454             ;;GOT IT
                       FSGCL:
073436 / 700640,,000016          CONI   PI,000016             ;;GET PI CHANNEL STATUS
073437 / 405700,,000037          ANDI  AC2,000037             ;;ONLY CHANNELS 3,4,5,6,7
073440 / 700616,,001000          CONO   PI,PICHOF(AC2)        ;;TURN OFF CHANNELS 3-7
073441 / 337115,,000000         SKIPG TAC1,      (BLOCK)      ;;FLINK INTO TAC1
073442 / 254000,,073452          JRST      073452             ;;BLOCK IS ALREADY CLAIMED!
073443 / 550055,,777777          HRRZ  TAC,777777(BLOCK)      ;;BLINK INTO TAC
073444 / 542101,,000000          HRRM TAC1,      (TAC)        ;;GO BACK AND RESET FLINK
073445 / 542042,,777777          HRRM  TAC,777777(TAC1)       ;;GO FORWARD AND RESET BLINK
073446 / 700616,,002000          CONO   PI,PICHON(AC2)        ;;RESTORE CHANNELS THAT WERE ON
073447 / 205700,,400000         MOVSI  AC2,400000             ;
073450 / 436715,,000000          IORM  AC2,      (BLOCK)      ;;TURN ON THE SIGN BIT TO CLAIM BLOCK
073451 / 254000,,037401          JRST      037401             ;;GIVE THE SKIP RETURN
                       FSGCLX:
073452 / 700616,,002000          CONO   PI,PICHON(AC2)        ;;RESTORE PI.
073453 / 263140,,000000          POPJ    P,                   ;
                       FSGTC:
073454 / 135700,,073351           LDB  AC2,073351             ;;GET THE SIZE OF THIS BLOCK
073455 / 400400,,000000          SETZ  TEM,                   ;;INITIALIZE EXCESS SIZE
073456 / 305717,,000010         CAIGE  AC2,000010(SIZE)       ;;IS BLOCK TOO BIG?
073457 / 254000,,073464          JRST      073464             ;;NO
073460 / 200400,,000016          MOVE  TEM,000016             ;;GET THE SIZE
073461 / 275417,,000000          SUBI  TEM,      (SIZE)       ;;GET EXCESS SIZE
073462 / 201717,,000000         MOVEI  AC2,      (SIZE)       ;;GET THE SIZE TO USE
073463 / 137700,,073351           DPB  AC2,073351             ;;SET SIZE
                       FSGTC1:
073464 / 513015,,000000         HLLZS            (BLOCK)      ;;CLEAR RIGHT SIDE OF TOP MARK
073465 / 276640,,000016          SUBM BLOCK,000016             ;;AC2 GETS ADDRESS BELOW LOWEST
073466 / 562656,,000001         HRROM BLOCK,     1(AC2)        ;;SET UP POINTER IN THE LOW ADDRESS
073467 / 322400,,073546         JUMPE  TEM,073546             ;;ALL DONE IF NO SPLIT
073470 / 516416,,000000         HRLZM  TEM,      (AC2)        ;;SET SIZE IN SPLIT BLOCK
073471 / 276700,,000010          SUBM  AC2,000010             ;;GET LOWEST ADDRESS OF THIS, -1
073472 / 552710,,000001         HRRZM  AC2,     1(TEM)        ;;SET UP FORWARD LINK
073473 / 554416,,000000          HLRZ  TEM,      (AC2)        ;;GET THE SIZE BACK
073474 / 305400,,000200         CAIGE  TEM,000200             ;;IS BLOCK VERY BIG?
073475 / 254000,,073535          JRST      073535             ;;NO. RETURN THE SPLIT BY THE CLOCK
073476 / 254000,,073500          JRST      FSGTC5             ;
                       FSGTC2:
073477 / 700610,,002000          CONO   PI,PICHON(TEM)        ;;TURN CHANNELS ON AGAIN
                       FSGTC5:
073500 / 337002,,000000         SKIPG            (TAC1)       ;;LOOK AHEAD
073501 / 254000,,073520          JRST      073520             ;;LOSE
073502 / 200242,,777777          MOVE  DAT,777777(TAC1)       ;;GET BLINK AHEAD
073503 / 542256,,777777          HRRM  DAT,777777(AC2)        ;;SET BLINK HERE
073504 / 542116,,000000          HRRM TAC1,      (AC2)        ;;SET FLINK HERE
073505 / 700640,,000010          CONI   PI,000010             ;;GET PI STATUS
073506 / 405400,,000037          ANDI  TEM,PICMSK             ;
073507 / 700610,,001000          CONO   PI,PICHOF(TEM)        ;;TURN OFF CHANNELS
073510 / 333002,,000000        SKIPLE            (TAC1)       ;;GRABBED FROM UNDER US?
073511 / 312242,,777777          CAME  DAT,777777(TAC1)       ;;BE SURE
073512 / 254000,,073477          JRST      073477             ;;TRY AGAIN
073513 / 542702,,777777          HRRM  AC2,777777(TAC1)       ;;SET BLINK AHEAD
073514 / 542705,,000000          HRRM  AC2,      (DAT)        ;;SET FLINK BEHIND
073515 / 700610,,002000          CONO   PI,PICHON(TEM)        ;;TURN ON PI'S AGAIN
073516 / 254000,,073546          JRST      073546             ;;RETURN FREE STORAGE.
                       FSGTC3:
073517 / 700610,,002000          CONO   PI,PICHON(TEM)        ;
                       FSGTC6:
073520 / 337241,,000000         SKIPG  DAT,      (TAC)        ;
073521 / 254000,,073535          JRST      073535             ;;LINK'S HAVE MOVED
073522 / 542256,,000000          HRRM  DAT,      (AC2)        ;;SET FLINK HERE
073523 / 542056,,777777          HRRM  TAC,777777(AC2)        ;;SET BLINK HERE
073524 / 700640,,000010          CONI   PI,   TEM             ;
073525 / 405400,,000037          ANDI  TEM,PICMSK             ;
073526 / 700610,,001000          CONO   PI,PICHOF(TEM)        ;
073527 / 312241,,000000          CAME  DAT,      (TAC)        ;;THESE GUYS STILL THE SAME?
073530 / 254000,,073517          JRST      073517             ;;LINKS HAVE MOVED. TRY AGAIN
073531 / 542705,,777777          HRRM  AC2,777777(DAT)        ;;SET BLINK AHEAD
073532 / 542701,,000000          HRRM  AC2,      (TAC)        ;;SET FLINK BEHIND
073533 / 700610,,002000          CONO   PI,PICHON(TEM)        ;
073534 / 254000,,073546          JRST      073546             ;;RETURN BLOCK
                       FSGTC4:
073535 / 205040,,400000         MOVSI  TAC,400000             ;
073536 / 436056,,000000          IORM  TAC,      (AC2)        ;
073537 / 135040,,073352           LDB  TAC,FSSBP1             ;
073540 / 276700,,000001          SUBM  AC2,   TAC             ;
073541 / 562701,,000001         HRROM  AC2,     1(TAC)        ;
073542 / 261140,,000015          PUSH    P, BLOCK             ;
073543 / 201641,,000002         MOVEI BLOCK,     2(TAC)        ;
073544 / 260140,,074343         PUSHJ    P,074343             ;;ADD BLOCK TO FSRTL.
073545 / 262140,,000015           POP    P, BLOCK             ;
                       FSGTCR:
073546 / 135040,,073351           LDB  TAC,073351             ;;GET THE SIZE
073547 / 272040,,022422          ADDM  TAC,022422             ;;ADD TO CLAIMED AMOUNT.
073550 / 275641,,777776          SUBI BLOCK,777776(TAC)        ;;COMPUTE LOWEST USABLE ADDRESS
073551 / 700740,,077000         CONSO   PI,077000             ;;SKIP IF AT HI PI CHANNEL
073552 / 336000,,022417         SKIPN      022417             ;;LOW CHANNEL. SKIP IF ANY COMING BACK
073553 / 254000,,073557          JRST      073557             ;;NOTHING TO DO OR MUST RETURN QUICK
073554 / 261140,,000015          PUSH    P, BLOCK             ;
073555 / 260140,,074064         PUSHJ    P,074064             ;;GIVE IT BACK TO THE INDIANS
073556 / 262140,,000015           POP    P, BLOCK             ;
                       FSGRT1:
073557 / 260140,,037501         PUSHJ    P, XWAIT             ;
073560 / 201040,,022210         MOVEI  TAC, FSCSC             ;
073561 / 265240,,073342           JSP  DAT,FSACRS             ;
151755 / 000000,,073353                                       ;
073562 / 261140,,151755          PUSH    P,151755             ;;IN CASE OF TROUBLE TRY AGAIN
073563 / 260140,,074077         PUSHJ    P,FSECHK             ;
073564 / 262143,,000000           POP    P,      (P)          ;;FLUSH STACK
073565 / 254000,,037401          JRST      037401             ;;AND GIVE SKIP RETURN
                       ;HERE IF WE COULDN'T FIND ANY FREE STORAGE.
                       FSGTW:
073566 / 260140,,073641         PUSHJ    P,073641             ;;WE NEED ANOTHER K, GET IT
073567 / 254000,,073572          JRST      073572             ;;CAN'T GET ANOTHER K
073570 / 260140,,073733         PUSHJ    P,073733             ;;WAKE SOMEONE WHO WAITS
073571 / 254000,,073372          JRST      073372             ;;FSGET RETRY THIS ONE
                       FSGTW5:
073572 / 700740,,077400         CONSO   PI,077400             ;;ARE WE AT I-LEVEL?
073573 / 332000,,022510         SKIPE      022510             ;;NOT I-LEVEL, WANT TO RETURN QUICK?
073574 / 254000,,073622          JRST      073622             ;;GIVE THE NON-SKIP RETURN
073575 / 332013,,023431         SKIPE      INTACT(PID)        ;;IF YOU'RE AT USER I-LEVEL YOU'LL
073576 / 254000,,046124          JRST      046124             ;;BE KICKED OUT BY WSCHED....
073577 / 350000,,036155           AOS      036155             ;;COUNT A WAIT
073600 / 261140,,000004          PUSH    P,000004             ;;SAVE J ON THE STACK
073601 / 200213,,024061          MOVE    J,   JOB(PID)        ;;GET THE JOB NUMBER
073602 / 504200,,000017           HRL    J,000017             ;;GET THE SIZE OF REQUEST
073603 / 202220,,022505         MOVEM    J,@022505            ;;SAVE IN OUR QUEUE OF JOBS
073604 / 350040,,022505           AOS  TAC,022505             ;;INCREMENT THE POINTER
073605 / 301040,,022315          CAIL  TAC,022315             ;
073606 / 201040,,022215         MOVEI  TAC,FSLIST             ;
073607 / 202040,,022505         MOVEM  TAC,FSIPTR             ;
073610 / 350000,,022214           AOS       FSCNT             ;
073611 / 260140,,037501         PUSHJ    P, XWAIT             ;
073612 / 201040,,022210         MOVEI  TAC, FSCSC             ;
073613 / 260140,,046124         PUSHJ    P,046124             ;;CALL CH7 TO RESCHEDULE JOB(PID)
073614 / 402000,,022510         SETZM      022510             ;;ZERO THIS CELL SO IF WE FAIL AGAIN, WE WAIT
073615 / 260140,,037464         PUSHJ    P, PWAIT             ;
073616 / 201040,,022210         MOVEI  TAC, FSCSC             ;
073617 / 260140,,073733         PUSHJ    P,073733             ;;WAKE SOMEONE ELSE
073620 / 262140,,000004           POP    P,000004             ;;RESTORE J, FINALLY.
073621 / 254000,,073372          JRST      073372             ;;PLAY IT AGAIN, SAM.
                       FSGFAI:
073622 / 260140,,037501         PUSHJ    P, XWAIT             ;
073623 / 201040,,022210         MOVEI  TAC, FSCSC             ;
073624 / 265240,,073342           JSP  DAT,073342             ;;RESTORE AC'S
073625 / 350000,,036171           AOS      036171             ;;COUNT A FAILURE
073626 / 263140,,000000          POPJ    P,                   ;;CRY
                       FSGLUZ:
073627 / 550643,,000000          HRRZ BLOCK,      (P)          ;;GET RETURN ADDRESS
073630 / 260140,,000316         PUSHJ    P,PUSHIT             ;
073631 / 260140,,044120         PUSHJ    P,DISERR             ;
073632 / 000000,,154707                                       ;
073633 / 000143,,777775        LOCQQQ      777775(P)          ;
073634 / 000000,,152275                                       ;
073635 / 777777,,777777                                       ;
073636 / 260140,,000341         PUSHJ    P, POPIT             ;
073637 / 322540,,037403         JUMPE  PID, CPOPJ             ;
073640 / 254200,,037403          HALT      037403             ;;STOP THE PDP-6
                       ;SWIPE 1K FROM AVAILABLE USER SPACE.
                       ;THIS CAN BE DONE ONLY AT CLOCK OR UUO LEVEL.
                       ;IT SETS THE FOLLOWING GLOBAL VALUES:
                       ; CORLST		BYTE POINTER SET TO THE SECOND UNAVAILABLE 1K BLOCK.
                       ; CORTAL		NUMBER OF 1K BLOCKS AVAILABLE TO USERS
                       ; CORMAX		MAXIMUM NUMBER OF WORDS A JOB MAY HAVE.
                       ; MEMSIZ		LOWEST LOCATION USED BY FREE STORAGE
                       FSGETK:
073641 / 326540,,037403         JUMPN  PID,037403             ;;THE PDP-6 CAN'T DO THIS
073642 / 700700,,077000         CONSZ   PI,077000             ;;ARE WE AT A HIGH CHANNEL?
073643 / 263140,,000000          POPJ    P,                   ;;YES. WE CAN'T DO THIS!
073644 / 261140,,000011          PUSH    P,   LOC             ;
073645 / 200440,,022067          MOVE  LOC,022067             ;;GET THE CURRENT MEMORY SIZE
073646 / 275440,,002000          SUBI  LOC,002000             ;;GET LOWEST ADDRESS WE WANT
073647 / 260140,,072570         PUSHJ    P,072570             ;;MAKE A BYTE POINTER TO CORTAB
073650 / 262140,,000011           POP    P,   LOC             ;
073651 / 134100,,000001          ILDB TAC1,000001             ;;PICK UP MARK BIT FOR THIS BLOCK
073652 / 326100,,073707         JUMPN TAC1,073707             ;;JUMP IF CLAIMED AND FORCE USER OUT
073653 / 201100,,000105         MOVEI TAC1,000105             ;;CLAIM THIS BLOCK!
073654 / 137100,,000001           DPB TAC1,000001             ;;STUFF OUR CLAIM BIT IN
073655 / 133000,,000001           IBP         TAC             ;
073656 / 202040,,022176         MOVEM  TAC,022176             ;;SECOND UNAVAILABLE BYTE IN CORTAB
073657 / 211040,,002000         MOVNI  TAC,002000             ;;UPDATE 4 GLOBAL CELLS
073660 / 272040,,022200          ADDM  TAC,022200             ;
                       ;MAXIMUM CORE SIZE IN WORDS
073661 / 272040,,022067          ADDM  TAC,022067             ;;BOTTOM OF FREE STORAGE
073662 / 370000,,022177           SOS      022177             ;;NUMBER OF 1K BLOCKS FOR USERS
                       ;CHECK VALIDITY OF CORE TABLES.
073663 / 261140,,000011          PUSH    P,   LOC             ;
073664 / 261140,,000012          PUSH    P,  UCHN             ;
073665 / 260140,,037464         PUSHJ    P, PWAIT             ;
073666 / 201040,,022070         MOVEI  TAC,CORCSC             ;
073667 / 260140,,072362         PUSHJ    P,072362             ;;SET UP HOLEF, BIGHOL, AND SKIP RETURN
073670 / 255000,,000000          JFCL                         ;
073671 / 262140,,000012           POP    P,  UCHN             ;
073672 / 262140,,000011           POP    P,   LOC             ;
073673 / 200640,,022067          MOVE BLOCK,022067             ;;GET THE LOW BOUND OF FS.
073674 / 271640,,001777          ADDI BLOCK,001777             ;;POINTER TO HIGH SIDE OF THIS 1K
073675 / 205040,,402000         MOVSI  TAC,402000             ;;SET UP SIZE AND USE BIT
073676 / 202055,,000000         MOVEM  TAC,      (BLOCK)      ;;STUFF IN BLOCK HEADER
073677 / 562660,,022067         HRROM BLOCK,@022067            ;;STUFF IN LOWER MARKER
073700 / 200640,,022067          MOVE BLOCK,MEMSIZ             ;
073701 / 271640,,000001          ADDI BLOCK,     1             ;
073702 / 261140,,000017          PUSH    P,  SIZE             ;
073703 / 260140,,074202         PUSHJ    P,074202             ;;GIVE BACK A 1K BLOCK (MERGES)
073704 / 262140,,000017           POP    P,  SIZE             ;
073705 / 402000,,022416         SETZM      022416             ;;FLUSH WARNING ABOUT BOTTOM K.
073706 / 254000,,037401          JRST      037401             ;;GIVE A SKIP RETURN FROM FSGETK
                       ;ROUTINE TO FORCE THE JOB AT TOP OF CORE OUT.
                       FSSWAP:
073707 / 336000,,021631         SKIPN      021631             ;;CAN WE DIDDLE THE SWAPPER NOW?
073710 / 332000,,021630         SKIPE      021630             ;;?
073711 / 254000,,073730          JRST      073730             ;;NO CAN'T BOTHER HIM JUST YET.
073712 / 261140,,000011          PUSH    P,000011             ;;SAVE LOC FOR A WHILE
073713 / 200440,,022067          MOVE  LOC,022067             ;;REMOVE 4 INSTRUCTIONS STARTING HERE.
073714 / 275440,,002000          SUBI  LOC,002000             ;;D.RED.D.
073715 / 260140,,072570         PUSHJ    P,CORGBP             ;
073716 / 262140,,000011           POP    P,   LOC             ;
073717 / 261140,,000004          PUSH    P,000004             ;;DON'T CLOBBER J
073720 / 134200,,000001          ILDB    J,000001             ;;GET JOB NUMBER OF THE GUY TO FORCE
073721 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
073722 / 603040,,006000          TLNE  TAC,006000             ;;IS HE IN MOTION?
073723 / 254000,,073727          JRST      073727             ;;CAN'T DO HIM NOW.
073724 / 554044,,027120          HLRZ  TAC,JBTADR(J)          ;
073725 / 336004,,021760         SKIPN        XJOB(J)          ;
073726 / 260140,,070673         PUSHJ    P,070673             ;;MAKE HIM GET SHOVED OUT
                       FSWP3A:
073727 / 262140,,000004           POP    P,000004             ;;RESTORE J
                       FSSWP3:
073730 / 476000,,022415         SETOM      022415             ;;TELL FSCLK TO THINK ABOUT GOBBLING
073731 / 476000,,022504         SETOM      022504             ;;TELL CLKSER TO RUN FSCLK
073732 / 263140,,000000          POPJ    P,                   ;;AND RETURN
                       ; THIS ROUTINE REQUEUES A JOB WHEN CORE IS AVAILABLE FOR HIM.
                       FSWAKE:
073733 / 700600,,000400          CONO   PI, PIOFF             ;
073734 / 333000,,022214        SKIPLE      022214             ;;ANYONE THERE?
073735 / 254000,,073741          JRST      073741             ;;YES
073736 / 402000,,022214         SETZM       FSCNT             ;
073737 / 700600,,000200          CONO   PI,  PION             ;
073740 / 263140,,000000          POPJ    P,                   ;;NO WORK FOR NO ONE
                       FSWAK1:
073741 / 370000,,022214           SOS      022214             ;;DECREASE NUMBER OF WAITERS
073742 / 700600,,000200          CONO   PI,  PION             ;
073743 / 550220,,022506          HRRZ    J,@022506            ;;GET JOB NUMBER TO REQUEUE
073744 / 350040,,022506           AOS  TAC,FSOPTR             ;
073745 / 301040,,022315          CAIL  TAC,022315             ;
073746 / 201040,,022215         MOVEI  TAC,FSLIST             ;
073747 / 202040,,022506         MOVEM  TAC,FSOPTR             ;
073750 / 331004,,026114         SKIPL      JBTSTS(J)          ;;IS THIS GUY STILL RUNABLE?
073751 / 254000,,073733          JRST      073733             ;;NO. TRY ANOTHER ONE.
073752 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
073753 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;;SET QUEUE FOR THIS JOB
073754 / 254000,,046027          JRST      046027             ;;REQUEUE THIS JOB
                       FSCLK:
073755 / 402000,,022504         SETZM      022504             ;;WE HAVE GOTTEN SERVICE. SHUT OFF FLAG.
073756 / 260140,,037464         PUSHJ    P, PWAIT             ;
073757 / 201040,,022210         MOVEI  TAC, FSCSC             ;
073760 / 260140,,074064         PUSHJ    P,074064             ;;RETURN CONTENTS OF FSRTL.
                       FSCKY:
073761 / 336000,,022415         SKIPN      022415             ;;ARE WE WAITING FOR THE SWAPPER?
073762 / 254000,,073770          JRST      073770             ;;NO. SKIP THIS MESS
073763 / 402000,,022415         SETZM      FSCLKF             ;
073764 / 260140,,073641         PUSHJ    P,073641             ;;LOOK FOR THE 1K WE WANTED.
073765 / 254000,,074043          JRST      074043             ;;THERE WASN'T ANY THERE FOR US
073766 / 260140,,073733         PUSHJ    P,073733             ;;ATTEMPT TO WAKE A WAITER.
073767 / 254000,,074043          JRST      074043             ;;AVOID ATTEMP TO GIVE BACK 1K
                       FSCLK1:
073770 / 336000,,022416         SKIPN      022416             ;;MAYBE THERE'S A 1K BLOCK TO GIVE BACK?
073771 / 254000,,074043          JRST      074043             ;;NOPE.
073772 / 402000,,022416         SETZM      FSGVKF             ;
073773 / 550660,,022067          HRRZ BLOCK,@022067            ;;POINTER TO TOP OF BOTTOM BLOCK
073774 / 135740,,073351           LDB SIZE,073351             ;;GET THE SIZE FIELD
073775 / 305740,,002000         CAIGE SIZE,002000             ;;SKIP IF BIG ENOUGH
073776 / 254000,,074043          JRST       FSCKZ             ;
073777 / 260140,,073436         PUSHJ    P,073436             ;;ATTEMPT TO CLAIM THIS BLOCK
074000 / 254000,,074043          JRST      074043             ;;LOSE
074001 / 135740,,073351           LDB SIZE,073351             ;;GET THE SIZE
074002 / 201415,,000000         MOVEI  TEM,      (BLOCK)      ;;GET THE BLOCK ADDRESS
074003 / 275417,,777777          SUBI  TEM,777777(SIZE)       ;;GET THE BOTTOM ADDRESS
074004 / 562650,,000000         HRROM BLOCK,      (TEM)        ;;CLAIM THE BOTTOM
074005 / 301740,,002000          CAIL SIZE,002000             ;;SKIP IF SMALLER THAN A BREADBOX
074006 / 312400,,022067          CAME  TEM,022067             ;;BIG ENOUGH. AT BOTTOM?
074007 / 254000,,074041          JRST      074041             ;;NO. GIVE IT ALL BACK.
074010 / 275740,,002000          SUBI SIZE,002000             ;;FIGURE SIZE OF NEW BLOCK
074011 / 322740,,074020         JUMPE SIZE,074020             ;;THERE'S NOTHING TO SPLIT
074012 / 137740,,073351           DPB SIZE,073351             ;;SET SIZE FIELD IN BLOCK
074013 / 276640,,000017          SUBM BLOCK,000017             ;;GET THE BOTTOM ADDRESS
074014 / 562657,,000001         HRROM BLOCK,     1(SIZE)       ;;SET THE BOTTOM MARK
074015 / 201657,,000002         MOVEI BLOCK,     2(SIZE)       ;;GET THE ADDRESS FOR FSGIVE
074016 / 476017,,000000         SETOM            (SIZE)       ;;MAKE HI END OF K LOOK CLAIMED.
074017 / 260140,,074202         PUSHJ    P,074202             ;;GIVE BACK THIS PART OF THE BLOCK
                       FSGVK1:
074020 / 201040,,002000         MOVEI  TAC,  2000             ;
074021 / 272040,,022067          ADDM  TAC,MEMSIZ             ;
074022 / 272040,,022200          ADDM  TAC,CORMAX             ;
074023 / 350000,,022177           AOS      CORTAL             ;
074024 / 200440,,022067          MOVE  LOC,MEMSIZ             ;
074025 / 275440,,002000          SUBI  LOC,  2000             ;
074026 / 260140,,072570         PUSHJ    P,CORGBP             ;
074027 / 400100,,000000          SETZ TAC1,                   ;
074030 / 136100,,000001          IDPB TAC1,   TAC             ;
074031 / 133000,,000001           IBP         TAC             ;
074032 / 202040,,022176         MOVEM  TAC,CORLST             ;
                       ;MAKE SURE CORTAB AND CORTAL ARE CONSISTENT
074033 / 260140,,037464         PUSHJ    P, PWAIT             ;
074034 / 201040,,022070         MOVEI  TAC,CORCSC             ;
074035 / 260140,,072362         PUSHJ    P,DIDLE4             ;
074036 / 255000,,000000          JFCL                         ;
074037 / 476000,,022416         SETOM      022416             ;;FLAG FOR NEXT TICK JUST IN CASE 
074040 / 254000,,074043          JRST       FSCKZ             ;
                       FSGVK3:
074041 / 201650,,000001         MOVEI BLOCK,     1(TEM)        ;;GET THE BOTTOM DATA WORD ADDRESS
074042 / 260140,,074202         PUSHJ    P,074202             ;;GIVE BACK THIS BLOCK!
                       FSCKZ:
074043 / 333000,,022421        SKIPLE      022421             ;;TIME TO DO CHECKERBOARD?
074044 / 254000,,074054          JRST      074054             ;;NO.
074045 / 200640,,022066          MOVE BLOCK,022066             ;
074046 / 274640,,022067           SUB BLOCK,MEMSIZ             ;
074047 / 274640,,022422           SUB BLOCK,FSBUSY             ;
074050 / 303640,,005000         CAILE BLOCK,005000             ;;SKIP IF LESS THAN 2.5 FREE
074051 / 254000,,074057          JRST      074057             ;;TOO MUCH IS FREE.
074052 / 201640,,003410         MOVEI BLOCK,003410             ;;LOOK AGAIN IN 30 SECONDS.
074053 / 202640,,022421         MOVEM BLOCK,FSCKCT             ;
                       FSCLK3:
074054 / 260140,,037501         PUSHJ    P, XWAIT             ;
074055 / 201040,,022210         MOVEI  TAC, FSCSC             ;
074056 / 263140,,000000          POPJ    P,                   ;
                       FSCLK4:
074057 / 260140,,037501         PUSHJ    P, XWAIT             ;
074060 / 201040,,022210         MOVEI  TAC, FSCSC             ;
074061 / 201640,,001130         MOVEI BLOCK,001130             ;
074062 / 202640,,022421         MOVEM BLOCK,FSCKCT             ;
074063 / 254000,,074703          JRST      074703             ;;RELEASE SPARES.
                       FSCKX:
074064 / 336000,,022417         SKIPN      022417             ;;ANY ONE ON THE RETURN LIST?
074065 / 263140,,000000          POPJ    P,                   ;;NO. RETURN
074066 / 700600,,000400          CONO   PI,000400             ;;DON'T INTERRUPT
074067 / 550640,,022417          HRRZ BLOCK,022417             ;;GET THE FORWARD LINK
074070 / 200055,,000000          MOVE  TAC,      (BLOCK)      ;;GET THE NEXT FLINK
074071 / 552040,,022417         HRRZM  TAC,022417             ;;SAVE IT HERE
074072 / 700600,,000200          CONO   PI,000200             ;;TURN ON THE PI'S
074073 / 135040,,073351           LDB  TAC,073351             ;;GET THE SIZE FIELD
074074 / 275641,,777776          SUBI BLOCK,777776(TAC)        ;;GET THE ADDRESS OF LOWEST DATA WORD
074075 / 260140,,074202         PUSHJ    P,074202             ;;ALL SET TO GIVE THE BLOCK BACK AGAIN
074076 / 254000,,074064          JRST      074064             ;;LOOK FOR MORE
                       FSECHK:
074077 / 261140,,000015          PUSH    P,000015             ;;SAVE AC'S FOR A WHILE.
074100 / 261140,,000017          PUSH    P,000017             ;;SAVE.
074101 / 315640,,022066         CAMGE BLOCK,022066             ;
074102 / 317640,,022067          CAMG BLOCK,MEMSIZ             ;
074103 / 254000,,074122          JRST      FSECK1             ;
074104 / 275640,,000001          SUBI BLOCK,     1             ;
074105 / 602640,,000007          TRNE BLOCK,000007             ;;ALL THESE BITS MUST BE OFF!
074106 / 254000,,074122          JRST      FSECK1             ;
074107 / 550655,,000000          HRRZ BLOCK,      (BLOCK)      ;;GET BOTTOM LINK
074110 / 315640,,022066         CAMGE BLOCK,022066             ;
074111 / 317640,,022067          CAMG BLOCK,MEMSIZ             ;
074112 / 254000,,074122          JRST      FSECK1             ;
074113 / 554755,,000000          HLRZ SIZE,      (BLOCK)      ;;GET 400000+SIZE
074114 / 275657,,377776          SUBI BLOCK,377776(SIZE)       ;;MAKE POINTER TO 1 ABOVE LOWEST ADR.
074115 / 312643,,777777          CAME BLOCK,777777(P)          ;;MAKE SURE THESE ARE THE SAME.
074116 / 254000,,074122          JRST      074122             ;;LOSE
074117 / 262140,,000017           POP    P,  SIZE             ;
074120 / 262140,,000015           POP    P, BLOCK             ;
074121 / 263140,,000000          POPJ    P,                   ;
                       FSECK1:
074122 / 260140,,000316         PUSHJ    P,PUSHIT             ;
074123 / 260140,,044066         PUSHJ    P,DISMES             ;
074136 / 200043,,777757          MOVE  TAC,777757(P)          ;;REACH BACK AND PULL UP STINKING MESS.
074137 / 260140,,044170         PUSHJ    P,DISLOC             ;
074140 / 260140,,044066         PUSHJ    P,DISMES             ;
074146 / 200043,,777755          MOVE  TAC,777755(P)          ;
074147 / 260140,,044170         PUSHJ    P,DISLOC             ;
074150 / 260140,,044066         PUSHJ    P,DISMES             ;
074152 / 332000,,000500         SKIPE      000500             ;;NO NEED TO DISFLUSH IF NOT DEBUGGING
074153 / 260140,,043761         PUSHJ    P,043761             ;;MAKE SURE WE CAN SEE MESSAGE.
074154 / 260140,,000341         PUSHJ    P, POPIT             ;
074155 / 332000,,000500         SKIPE      000500             ;
074156 / 260140,,000347         PUSHJ    P,000347             ;
074157 / 262140,,000017           POP    P,  SIZE             ;
074160 / 262140,,000015           POP    P, BLOCK             ;
074161 / 262143,,000000           POP    P,      (P)          ;;THROW OUT RETURN FROM FSCHEK
074162 / 263140,,000000          POPJ    P,                   ;;RETURN TO BASTARD WHO CALLED ME.
                       FSGIVE:
074163 / 201655,,000000         MOVEI BLOCK,      (BLOCK)      ;;SOME PEOPLE COME HERE WITH SHIT IN LEFT HALF
074164 / 260140,,074077         PUSHJ    P,074077             ;;CHECK FOR WINNING ADDRESSES
074165 / 350000,,036143           AOS      036143             ;;INCREMENT COUNT OF GIVES
074166 / 261140,,000015          PUSH    P,000015             ;;SAVE THIS FOR A WHILE.
074167 / 550655,,777777          HRRZ BLOCK,777777(BLOCK)      ;;GET THE TOP ADDRESS
074170 / 135640,,073351           LDB BLOCK,073351             ;;GET THE SIZE
074171 / 210640,,000015          MOVN BLOCK,000015             ;;GET -SIZE
074172 / 272640,,022422          ADDM BLOCK,022422             ;;DECREASE BUSY COUNT
074173 / 262140,,000015           POP    P,000015             ;;RESTORE BLOCK.
074174 / 700700,,077000         CONSZ   PI,077000             ;;SKIP IF WE'RE NOT IN CHANNELS 1-6
074175 / 254000,,074344          JRST      074344             ;;DO THE QUICK STUFF!
074176 / 260140,,073333         PUSHJ    P,073333             ;;SAVE AC'S
074177 / 260140,,074205         PUSHJ    P,074205             ;;NOW GO GIVE BACK FREE STORAGE
074200 / 265240,,073342           JSP  DAT,073342             ;;RESTORE AC'S
074201 / 263140,,000000          POPJ    P,                   ;;RETURN
                       FSGIVX:
074202 / 260140,,074077         PUSHJ    P,074077             ;;CHECK FOR ERROR.
074203 / 700700,,077000         CONSZ   PI,077000             ;;SKIP IF AT LOW LEVEL
074204 / 254000,,074344          JRST      074344             ;;AT HI CHANNEL GIVE BACK QUICK
                       FSGIVY:
074205 / 261140,,000015          PUSH    P,000015             ;;SAVE BLOCK
074206 / 260140,,037464         PUSHJ    P, PWAIT             ;
074207 / 201040,,022210         MOVEI  TAC, FSCSC             ;
074210 / 201715,,777776         MOVEI  AC2,777776(BLOCK)      ;;AC2 ← HIGH ADDRESS OF LOWER BLOCK
074211 / 550656,,000001          HRRZ BLOCK,     1(AC2)        ;;BLOCK SET TO TOP WORD OF THIS BLOCK
074212 / 317700,,022067          CAMG  AC2,022067             ;;NO MERGE IF WE'RE AT THE BOTTOM
074213 / 254000,,074232          JRST      074232             ;;NO. TRY A HIGH MERGE.
074214 / 261140,,000015          PUSH    P,000015             ;;SAVE BLOCK TOP!
074215 / 200640,,000016          MOVE BLOCK,000016             ;;GET THE ADDRESS OF LOWER
074216 / 260140,,073436         PUSHJ    P,073436             ;;ATTEMPT TO CLAIM LOWER
074217 / 254000,,074231          JRST      074231             ;;POP BLOCK AND FORGET ABOUT LOW MERGE
074220 / 135400,,073351           LDB  TEM,073351             ;;GET THE SIZE
074221 / 201255,,000000         MOVEI  DAT,      (BLOCK)      ;
074222 / 275250,,000000          SUBI  DAT,      (TEM)        ;;GET THE BOTTOM ADDRESS - 1
074223 / 262140,,000015           POP    P,000015             ;;GET ADDRESS OF TOP OF BIG BLOCK
074224 / 135100,,073351           LDB TAC1,073351             ;;GET SIZE OF ORIGINAL
074225 / 270400,,000002           ADD  TEM,000002             ;;SUM THEM
074226 / 137400,,073351           DPB  TEM,073351             ;;STUFF THEM IN THE ORIGINAL
074227 / 562645,,000001         HRROM BLOCK,     1(DAT)        ;;SAVE A BOUNDARY MARKER.
074230 / 254000,,074232          JRST       FSGV1             ;
                       FSGV0:
074231 / 262140,,000015           POP    P,000015             ;;GET THE TOP OF THIS BLOCK BACK.
                       FSGV1:
074232 / 201115,,000001         MOVEI TAC1,     1(BLOCK)      ;;GET ADDRESS OF GUY ABOVE
074233 / 322100,,074264         JUMPE TAC1,074264             ;;MOVEI OVERFLOW IF BLOCK=777777.
074234 / 311100,,022066          CAML TAC1,022066             ;;SKIP IF NOT THE TOP OF ALL CORE
074235 / 254000,,074264          JRST      074264             ;;THIS BLOCK IS AT THE VERY TOP!
074236 / 550115,,000001          HRRZ TAC1,     1(BLOCK)      ;;GET BOTTOM POINTER OF GUY ABOVE
074237 / 700640,,000005          CONI   PI,   DAT             ;
074240 / 405240,,000037          ANDI  DAT,PICMSK             ;
074241 / 700605,,001000          CONO   PI,PICHOF(DAT)        ;;STOP CHANNELS 3-7
074242 / 550715,,000001          HRRZ  AC2,     1(BLOCK)      ;;GET THE BOTTOM POINTER
074243 / 337056,,000000         SKIPG  TAC,      (AC2)        ;;GET THE FLINK
074244 / 254000,,074263          JRST      074263             ;;ALL A BAD IDEA.
074245 / 200116,,777777          MOVE TAC1,777777(AC2)        ;;GET THE BLINK
074246 / 542101,,777777          HRRM TAC1,777777(TAC)        ;;GO FORWARD AND STUFF BLINK
074247 / 542042,,000000          HRRM  TAC,      (TAC1)       ;;GO BACK AND SET FLINK
074250 / 700605,,002000          CONO   PI,PICHON(DAT)        ;;ALLOW INTERRUPTS AGAIN
074251 / 205240,,400000         MOVSI  DAT,400000             ;
074252 / 436256,,000000          IORM  DAT,      (AC2)        ;;CLAIM THIS BLOCK.
074253 / 135040,,073352           LDB  TAC,073352             ;;GET THE SIZE OF THIS GUY
074254 / 135740,,073351           LDB SIZE,FSSBYP             ;
074255 / 270740,,000001           ADD SIZE,   TAC             ;
074256 / 200240,,000016          MOVE  DAT,   AC2             ;
074257 / 274240,,000017           SUB  DAT,000017             ;;COMPUTE THE BOTTOM ADDRESS
074260 / 137740,,073352           DPB SIZE,FSSBP1             ;
074261 / 562705,,000001         HRROM  AC2,     1(DAT)        ;
074262 / 334640,,000016         SKIPA BLOCK,   AC2             ;
                       FSGV2:
074263 / 700605,,002000          CONO   PI,PICHON(DAT)        ;
                       FSGV2A:
074264 / 135740,,073351           LDB SIZE,FSSBYP             ;
074265 / 242740,,777776           LSH SIZE,777776             ;;SHIFT SIZE TO MAKE INDEX.
074266 / 275740,,000002          SUBI SIZE,000002             ;;FIX INDEX.
074267 / 301740,,000040          CAIL SIZE,000040             ;;REASONABLE INDEX?
074270 / 201740,,000036         MOVEI SIZE,000036             ;;NO. FIX INDEX.
074271 / 254000,,074273          JRST       FSGV6             ;
                       FSGV5:
074272 / 700602,,002000          CONO   PI,PICHON(TAC1)       ;;MAKE SURE PI'S GET RESTORED
                       FSGV6:
074273 / 201057,,022424         MOVEI  TAC,022424(SIZE)       ;;GET THE LIST BASE
                       FSGV7:
074274 / 337241,,000000         SKIPG  DAT,      (TAC)        ;;DOES THIS POINT FREE?
074275 / 254000,,074273          JRST      074273             ;;NO TRY THIS LIST ALL OVER AGAIN
074276 / 550401,,000000          HRRZ  TEM,      (TAC)        ;;GET THE FLINK
074277 / 305415,,000000         CAIGE  TEM,      (BLOCK)      ;;HAVE WE FOUND THE RIGHT PLACE?
074300 / 254000,,074305          JRST      074305             ;;YES. PREPARE TO LINK IT IN
074301 / 312241,,000000          CAME  DAT,      (TAC)        ;;IS THIS STILL THE SAME?
074302 / 254000,,074273          JRST      074273             ;;NO. TRY ALL OVER
074303 / 201050,,000000         MOVEI  TAC,      (TEM)        ;;GET THE NEXT FLINK
074304 / 254000,,074274          JRST      074274             ;;CHASE DOWN THIS LIST
                       FSGV8:
074305 / 552055,,777777         HRRZM  TAC,777777(BLOCK)      ;;SET THE BLINK
074306 / 542415,,000000          HRRM  TEM,      (BLOCK)      ;;SET THE FLINK
074307 / 135700,,073351           LDB  AC2,073351             ;;GET THE SIZE OF BLOCK
074310 / 276640,,000016          SUBM BLOCK,000016             ;;GET POINTER TO BOTTOM
074311 / 205740,,400000         MOVSI SIZE,400000             ;
074312 / 412755,,000000        ANDCAM SIZE,      (BLOCK)      ;;TURN OFF CLAIM BIT
074313 / 700640,,000002          CONI   PI,  TAC1             ;
074314 / 405100,,000037          ANDI TAC1,PICMSK             ;
074315 / 700602,,001000          CONO   PI,PICHOF(TAC1)       ;;HOLD CHANNELS 3-7
074316 / 312241,,000000          CAME  DAT,      (TAC)        ;;STILL HERE?
074317 / 254000,,074272          JRST      074272             ;;WHAT A LOSS.
074320 / 542641,,000000          HRRM BLOCK,      (TAC)        ;;STUFF IN NEW FLINK
074321 / 542650,,777777          HRRM BLOCK,777777(TEM)        ;;STUFF IN NEW BLINK
074322 / 552656,,000001         HRRZM BLOCK,     1(AC2)        ;;AND TURN OFF BOTTOM MARK
074323 / 700602,,002000          CONO   PI,PICHON(TAC1)       ;;ALLOW INTERRUPTS
074324 / 550660,,022067          HRRZ BLOCK,@022067            ;;POINTER TO BOTTOM-MOST FS BLOCK
074325 / 135740,,073351           LDB SIZE,073351             ;;GET THE SIZE OF LOW BLOCK
074326 / 331015,,000000         SKIPL            (BLOCK)      ;;SKIP IF BLOCK IS CLAIMED ALREADY
074327 / 305740,,002000         CAIGE SIZE,002000             ;;UNCLAIMED. SKIP IF BIGGER THAN 1K
074330 / 254000,,074334          JRST      074334             ;;CLAIMED OR NOT BIG ENOUGH
074331 / 336000,,022214         SKIPN      022214             ;;SKIP IF ANYONE'S WAITING
074332 / 476000,,022416         SETOM      022416             ;;SET FLAG TO LET CLOCK THINK ABOUT IT
074333 / 476000,,022504         SETOM      022504             ;;MAKE CLKSER CALL FSCLK
                       FSXPOP:
074334 / 261140,,000004          PUSH    P,000004             ;;SAVE J, CLOBBERED BY FSWAKE
074335 / 260140,,073733         PUSHJ    P,073733             ;;WAKE SOMEONE WHO WAITS.
074336 / 262140,,000004           POP    P,000004             ;;RESTORE J
                       FSPOP:
074337 / 262140,,000015           POP    P, BLOCK             ;
074340 / 260140,,037501         PUSHJ    P, XWAIT             ;
074341 / 201040,,022210         MOVEI  TAC, FSCSC             ;
074342 / 263140,,000000          POPJ    P,                   ;
                       FSQUIK:
074343 / 260140,,074077         PUSHJ    P,074077             ;;CHECK ADDRESSES
                       FSQUK1:
074344 / 261140,,000015          PUSH    P, BLOCK             ;
074345 / 261140,,000010          PUSH    P,   TEM             ;
074346 / 550655,,777777          HRRZ BLOCK,777777(BLOCK)      ;;LOAD TOP ADDRESS FROM BOTTOM
074347 / 260140,,037464         PUSHJ    P, PWAIT             ;
074350 / 201040,,022210         MOVEI  TAC, FSCSC             ;
074351 / 700600,,000400          CONO   PI,000400             ;;ADD THIS BLOCK TO THE FREE LIST
074352 / 550400,,022417          HRRZ  TEM,022417             ;;GET THE FLINK
074353 / 542415,,000000          HRRM  TEM,      (BLOCK)      ;;SAVE HERE
074354 / 552640,,022417         HRRZM BLOCK,022417             ;;RESET LIST BASE
074355 / 700600,,000200          CONO   PI,000200             ;;DONE
074356 / 476000,,022504         SETOM      FSNCLK             ;
074357 / 262140,,000010           POP    P,   TEM             ;
074360 / 254000,,074337          JRST       FSPOP             ;
                       ;GET FREE STORAGE AT UUO LEVEL.
                       UFSGET:
074361 / 260140,,073353         PUSHJ    P,073353             ;;GET FREE STORAGE AT UUO LEVEL
074362 / 254000,,074364          JRST      074364             ;;FAILURE CANNOT HAPPEN (IT SAYS HERE)
074363 / 263140,,000000          POPJ    P,                   ;;EXPECTED RETURN
074364 / 260140,,000316         PUSHJ    P,PUSHIT             ;
074365 / 260140,,044320         PUSHJ    P,044320             ;
074366 / 260140,,044066         PUSHJ    P,DISMES             ;
074376 / 700740,,077400         CONSO   PI,077400             ;;ARE THERE ANY CHANNELS ACTIVE?
074377 / 254000,,074417          JRST      074417             ;;NO.
074400 / 260140,,044066         PUSHJ    P,DISMES             ;
074410 / 200043,,777764          MOVE  TAC,777764(P)          ;
074411 / 260140,,044200         PUSHJ    P,DISOCT             ;
074412 / 260140,,044066         PUSHJ    P,DISMES             ;
074415 / 700640,,000001          CONI   PI,   TAC             ;
074416 / 260140,,044170         PUSHJ    P,DISLOC             ;
                       UFSGT1:
074417 / 260140,,044076         PUSHJ    P,044076             ;
074420 / 260140,,000341         PUSHJ    P, POPIT             ;
074421 / 265240,,043257           JSP  DAT,043257             ;;GIVE A UUO ERROR.
                       ; ROUTINES TO GET AND RELEASE THE PDL AT UUO LEVEL ONLY. - GETPDL
                       ; CALLING:
                       ;	JSP TAC,GETPDL			;TO GET A PDL
                       ;	PUSHJ P,RELPDL			;TO RELEASE A PDL
                       ; NOTE FREE STORAGE BLOCK THAT THIS PDL USES WILL BE PLACED
                       ; ON THE FREE STORAGE RETURN LIST. THE BLOCK WILL ACTUALLY
                       ; BE RETURNED THE NEXT TIME CHANNEL 7 IS ACTIVATED BY THE CLOCK.
                       ; YOU MUST FINISH USING THE PDL AT UUO LEVEL OR CHANNEL 7 LEVEL,
                       ; WHICHEVER YOU'RE PRESENTLY IN.
                       ; THE NUMBER IN J MUST BE THE CORRECT JOB NUMBER.
                       ; AND PROG MUST POINT TO THE RIGHT JOB DATA AREA
                       ;GETPDL SHOULD BE A NO-OP AFTER SYSTEM 6.09L
                       GETPDL:
074422 / 332144,,022315         SKIPE    P,JBTPDL(J)          ;
074423 / 254001,,000000          JRST            (TAC)        ;
074424 / 202647,,000045         MOVEM BLOCK,JOBTM1(JDAT)       ;;SAVE AC'S IN JOB DATA AREA
074425 / 202747,,000046         MOVEM SIZE,JOBTM2(JDAT)       ;
074426 / 201740,,000136         MOVEI SIZE,000136             ;;GET ONE THIS SIZE
074427 / 201147,,000051         MOVEI    P,000051(JDAT)       ;;MAKE A TEMPORARY PDL FOR FSGET
074430 / 505140,,777761          HRLI    P,777761             ;;THIS LONG
074431 / 260140,,073353         PUSHJ    P,073353             ;;GET SOME FREE STORAGE
074432 / 265240,,043230           JSP  DAT,043230             ;;IT CAN'T HAPPEN.
074433 / 260140,,037464         PUSHJ    P, PWAIT             ;
074434 / 201040,,026214         MOVEI  TAC,PDLCSC             ;
074435 / 336144,,022315         SKIPN    P,JBTPDL(J)          ;;HAS HE GOT ONE SOME OTHER WAY?
074436 / 254000,,074443          JRST      074443             ;;NO. WE USE THE ONE WE JUST GOT
074437 / 260140,,037501         PUSHJ    P, XWAIT             ;
074440 / 201040,,026214         MOVEI  TAC,PDLCSC             ;
074441 / 260140,,074163         PUSHJ    P,074163             ;;RETURN THE PDL WE DON'T NEED IT.
074442 / 254000,,074454          JRST      074454             ;;AND RETURN IT.
                       GETPD1:
074443 / 201155,,777777         MOVEI    P,777777(BLOCK)      ;;GET THE PDL BASE-1
074444 / 000000,,000114                                       ;
074444 / 505140,,777665          HRLI    P,777665             ;;AND THE PDL LENGTH
074445 / 202144,,022315         MOVEM    P,JBTPDL(J)          ;;SAVE PDL POINTER
074446 / 260140,,037501         PUSHJ    P, XWAIT             ;
074447 / 201040,,026214         MOVEI  TAC,PDLCSC             ;
074450 / 402003,,000001         SETZM           1(P)          ;;ZERO A CELL
074451 / 205643,,000001         MOVSI BLOCK,     1(P)          ;;MAKE A BLT POINTER
074452 / 541643,,000002          HRRI BLOCK,     2(P)          ;
074453 / 251643,,000136           BLT BLOCK,JBTPLN(P)          ;;ZERO THE ENTIRE PDL
                       GETPD2:
074454 / 200647,,000045          MOVE BLOCK,JOBTM1(JDAT)       ;;RESTORE THE AC'S WE SAVED
074455 / 200747,,000046          MOVE SIZE,JOBTM2(JDAT)       ;
074456 / 260140,,000316         PUSHJ    P,PUSHIT             ;
074457 / 260140,,044066         PUSHJ    P,DISMES             ;
074465 / 260140,,044104         PUSHJ    P,DISJOB             ;
074466 / 260140,,044076         PUSHJ    P,044076             ;
074467 / 260140,,000341         PUSHJ    P, POPIT             ;
074470 / 332000,,000500         SKIPE      DEBMOD             ;
074471 / 260140,,000347         PUSHJ    P,DDTCAL             ;
074472 / 254001,,000000          JRST            (TAC)        ;;RETURN TO CALLER.
                       RELPDL:
074473 / 550644,,022315          HRRZ BLOCK,JBTPDL(J)          ;;GET THE ADDRESS OF THE PDL
074474 / 322640,,037403         JUMPE BLOCK,037403             ;;NO PDL, CAN'T RELEASE
074475 / 550044,,022315          HRRZ  TAC,JBTPDL(J)          ;;GET THE PDL ADDRESS
074476 / 271040,,000114          ADDI  TAC,000114             ;;ADDRESS OF THE TOP IN TAC
074477 / 336001,,000000         SKIPN            (TAC)        ;;LOOK FOR A NON-ZERO CELL
074500 / 365040,,074477         SOJGE  TAC,074477             ;;LOOP.
074501 / 274040,,000015           SUB  TAC,000015             ;;SUBTRACT THE BASE ADDRESS.
074502 / 313040,,036175         CAMLE  TAC,036175             ;;BIGGER THAN OUR BIGGEST
074503 / 202040,,036175         MOVEM  TAC,036175             ;;YES. SAVE THIS NUMBER
074504 / 402004,,022315         SETZM      JBTPDL(J)          ;;CLEAR PDL CELL FOR NEXT JOB
074505 / 350000,,036143           AOS      036143             ;;COUNT THIS CELL HERE, SINCE FAKING IT
074506 / 211040,,000140         MOVNI  TAC,000140             ;;GET THE SIZE OF THIS BLOCK
074507 / 272040,,022422          ADDM  TAC,022422             ;;DECREASE BUSY COUNT TOO.
074510 / 344640,,074343          AOJA BLOCK,074343             ;;CHECK BLOCK, STUFF ON FSRTL, RETURN
                       ;SPARE LIST HANDLER FOR DPYSER & TTYSER
                       ;HERE WE SET UP THE INITIAL QUOTAS (QUOTAE?)
                       SFSINI:
074511 / 550300,,022512          HRRZ  DDB,022512             ;;THE SPARE LIST LIST
                       SFSIOL:
153042 / 331006,,000001                                       ;
074512 / 135240,,153042           LDB  DAT,153042             ;;HOW MANY DOES THIS ONE WANT?
074513 / 322240,,074527         JUMPE  DAT,074527             ;;NONE?
074514 / 550746,,000001          HRRZ  AC3,SFSIZE(DDB)        ;
074515 / 201706,,000000         MOVEI  AC2,      (DDB)        ;;INIT PNTR FOR LINKING
                       SFSIIL:
074516 / 260140,,073354         PUSHJ    P,FSGETU             ;
074517 / 254000,,074523          JRST      074523             ;;LOSE - SET TO TRY LATER (SHOULDN'T HAPPEN)
074520 / 202656,,000000         MOVEM  AC1,      (AC2)        ;;LINK IT IN
074521 / 201715,,000000         MOVEI  AC2,      (AC1)        ;
074522 / 367240,,074516          SOJG  DAT,SFSIIL             ;
074523 / 402016,,000000         SETZM            (AC2)        ;;TERMINATE LIST
074524 / 202246,,000003         MOVEM  DAT, SPFSN(DDB)        ;;SET FROM DAT IN CASE WE LOST
074525 / 331006,,000001         SKIPL      SFSIZE(DDB)        ;
074526 / 272240,,022511          ADDM  DAT,SPFSNT             ;
                       SFSI2:
074527 / 550306,,000002          HRRZ  DDB,SFLINK(DDB)        ;
074530 / 326300,,074512         JUMPN  DDB,SFSIOL             ;
074531 / 263140,,000000          POPJ    P,                   ;
                       ;WE GET HERE AT CLOCK LEVEL WHEN SPFSNT>0 TO REPLENISH OUR SPARES
                       SFSCLK:
074532 / 550300,,022512          HRRZ  DDB,SFHEAD             ;
                       SFSCL1:
074533 / 333006,,000003        SKIPLE       SPFSN(DDB)        ;;IF THIS LIST DOESN'T NEED ANY
074534 / 335006,,000001        SKIPGE      SFSIZE(DDB)        ;;OR THIS ISN'T THE CLOCK-FILLED KIND
074535 / 254000,,074551          JRST      074551             ;;TRY NEXT LIST
                       SFSCLL:
074536 / 550746,,000001          HRRZ  AC3,SFSIZE(DDB)        ;
074537 / 260140,,073353         PUSHJ    P,073353             ;;TRY TO GET ONE
074540 / 254000,,074551          JRST      074551             ;;LOSE - DON'T BOTHER WITH THIS LIST ANY MORE
074541 / 700600,,000400          CONO   PI, PIOFF             ;
074542 / 250646,,000000          EXCH  AC1,      (DDB)        ;;PUT IT IN THE LIST
074543 / 202666,,000000         MOVEM  AC1,@      (DDB)       ;
074544 / 700600,,000200          CONO   PI,  PION             ;
074545 / 370640,,022511           SOS  AC1,022511             ;;DECREMENT TOTAL
074546 / 373006,,000003         SOSLE       SPFSN(DDB)        ;;& # THIS LIST
074547 / 254000,,074536          JRST      074536             ;;STILL NEED MORE
074550 / 323640,,037403        JUMPLE  AC1,037403             ;;THIS LIST ALL SET, ANY OTHERS TO DO?
                       SFSCL2:
074551 / 550306,,000002          HRRZ  DDB,SFLINK(DDB)        ;;YES, TRY NEXT LIST
074552 / 326300,,074533         JUMPN  DDB,074533             ;;IF THERE IS ONE
074553 / 263140,,000000          POPJ    P,                   ;
                       ;VERSION OF FSGET TO USE SPARE LIST
                       ;LIKE FSGET EXCEPT AC3 HAS SPARE LIST HEADER POINTER INSTEAD OF SIZE
                       ;SIGN BIT (AC3) MEANS NO SKIP (OR FAILURE) RETURN
                       ;SFNWT BIT FORCES FAILURE RETURN EVEN AT UUO LEVEL
                       SFSGET:
074554 / 261140,,000017          PUSH    P,   AC3             ;
074555 / 335017,,000001        SKIPGE      SFSIZE(AC3)        ;
074556 / 254000,,074574          JRST      074574             ;;WANTS TO TRY SPARES FIRST
                       SFGFS:
074557 / 550757,,000001          HRRZ  AC3,SFSIZE(AC3)        ;
074560 / 260140,,073354         PUSHJ    P,FSGETU             ;
074561 / 254000,,074565          JRST      074565             ;;NO FS, TRY SPARE
                       SFSXIT:
074562 / 262140,,000017           POP    P,   AC3             ;
                       SFSWIN:
074563 / 325740,,037401        JUMPGE  AC3,037401             ;;HERE WE HAVE WON, AND GIVE THE REQUESTED SUCCESS RETURN
074564 / 263140,,000000          POPJ    P,                   ;
                       SFSGTS:
074565 / 260140,,074600         PUSHJ    P,074600             ;;TRY TO GET A SPARE
074566 / 254000,,074610          JRST      074610             ;;OOPS - NO SPARE, EITHER
                       SFSGOK:
074567 / 262140,,000017           POP    P,   AC3             ;
074570 / 350017,,000003           AOS       SPFSN(AC3)        ;;NOW WE NEED ANOTHER
074571 / 331017,,000001         SKIPL      SFSIZE(AC3)        ;;AND UNLESS WE'RE KEEPING SFSCLK OUT
074572 / 350000,,022511           AOS      022511             ;;WE SHOULD REQUEST SERVICE FROM IT
074573 / 254000,,074563          JRST      SFSWIN             ;
                       SFGSF:
074574 / 260140,,074600         PUSHJ    P,074600             ;;HERE WE TRY THE SPARES FIRST
074575 / 334743,,000000         SKIPA  AC3,      (P)          ;;LOSE - GET THE PNTR SO WE CAN GET THE SIZE FOR FSGET
074576 / 254000,,074567          JRST      074567             ;;WIN - UPDATE THINGS & EXIT
074577 / 254000,,074557          JRST      074557             ;;NOW TRY FSGET
                       SFGTS:
074600 / 201740,,000000         MOVEI  AC3,                   ;;PREPARE TO FLUSH LINK
074601 / 700600,,000400          CONO   PI,000400             ;;GET SPARE FROM LIST AT @(P)
074602 / 336663,,777777         SKIPN  AC1,@777777(P)         ;
074603 / 254000,,037402          JRST      037402             ;;NONE
074604 / 250755,,000000          EXCH  AC3,      (AC1)        ;;THIS ZEROES LINK TO TELL RELEX SOMETHING CHANGED
074605 / 202763,,777777         MOVEM  AC3,@777777(P)         ;;DELINK IT FROM THE LIST
074606 / 700600,,000200          CONO   PI,  PION             ;
074607 / 254000,,037401          JRST      CPOPJ1             ;
                       SFSLUZ:
074610 / 262140,,000017           POP    P,   AC3             ;
074611 / 350017,,000004           AOS      SFLOSS(AC3)        ;;COUNT OUR TOTAL LOSSES
074612 / 700740,,077400         CONSO   PI, 77400             ;
074613 / 254000,,074616          JRST      074616             ;;UUO LEVEL - NOT TOO BAD
074614 / 321740,,074624         JUMPL  AC3,074624             ;;IF WE CAN'T GIVE A FAILURE RETURN WE ARE IN DEEP TROUBLE
074615 / 263140,,000000          POPJ    P,                   ;;WHEW!
                       SFULUZ:
074616 / 603740,,200000          TLNE  AC3,200000             ;;IF THE CALLER DOESN'T WANT TO WAIT
074617 / 325740,,037403        JUMPGE  AC3,037403             ;;AND HE ALLOWS FAILURE, JUST RETURN
074620 / 261140,,000017          PUSH    P,   AC3             ;
074621 / 550757,,000001          HRRZ  AC3,SFSIZE(AC3)        ;
074622 / 260140,,074361         PUSHJ    P,074361             ;;OTHERWISE OFF TO FSGET TO WAIT FOR IT
074623 / 254000,,074562          JRST      SFSXIT             ;
                       ;ARRRGH! PI LEVEL AND NO FAILURE POSSIBLE! HERE WE CURL UP AND DIE
                       SFILUZ:
074624 / 554717,,000004          HLRZ  AC2,SFLOSS(AC3)        ;;MAYBE THE CONDEMNED HAS A FEW LAST WORDS
074625 / 336000,,000016         SKIPN         AC2             ;
074626 / 201700,,153240         MOVEI  AC2,153240             ;;NOPE
074627 / 260140,,000316         PUSHJ    P,PUSHIT             ;
074630 / 260140,,044320         PUSHJ    P,DISDAT             ;
074631 / 260140,,044120         PUSHJ    P,DISERR             ;
074632 / 000000,,153552                                       ;
074633 / 000023,,777776                                       ;
074634 / 000000,,153606                                       ;
074635 / 777777,,777777                                       ;
074636 / 700600,,000400          CONO   PI, PIOFF             ;
074637 / 476000,,036035         SETOM      036035             ;
074640 / 260140,,043761         PUSHJ    P,043761             ;
074641 / 260140,,000347         PUSHJ    P,000347             ;;MAYBE SOMEONE WANTS TO KNOW WHY
074642 / 254000,,000365          JRST      000365             ;;AS THE SYSTEM SINKS SLOWLY INTO THE WEST
                       ;VERSION OF FSGIVE TO THINK ABOUT PUTTING RETURNED BLOCK INTO SPARE LIST
                       ;LIKE FSGIVE BUT CALL IS FOLLOWED BY LIST HEADER ADDRESS
                       SFSGIV:
074643 / 261140,,000017          PUSH    P,   AC3             ;
074644 / 350743,,777777           AOS  AC3,777777(P)          ;;SKIP OVER ARG
074645 / 201777,,777777         MOVEI  AC3,@777777(AC3)       ;;& GET IT
074646 / 335017,,000001        SKIPGE      SFSIZE(AC3)        ;;ONLY RETURN INTO LIST IF THIS BIT IS ON
074647 / 337017,,000003         SKIPG       SPFSN(AC3)        ;;AND WE NEED SOME
153362 / 262140,,000017           POP    P,   AC3             ;
153363 / 254000,,074163          JRST      FSGIVE             ;
074650 / 254000,,153362          JRST      153362             ;;OTHERWISE GIVE IT BACK TO FS
074651 / 261140,,000015          PUSH    P,   AC1             ;
074652 / 405640,,777777          ANDI  AC1,777777             ;
074653 / 700600,,000400          CONO   PI, PIOFF             ;
074654 / 250657,,000000          EXCH  AC1,      (AC3)        ;;LINK IT IN
074655 / 202677,,000000         MOVEM  AC1,@      (AC3)       ;
074656 / 700600,,000200          CONO   PI,  PION             ;
074657 / 262140,,000015           POP    P,   AC1             ;
074660 / 370017,,000003           SOS       SPFSN(AC3)        ;;ONE FEWER NEEDED
074661 / 262140,,000017           POP    P,   AC3             ;
074662 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO DYNAMICALLY SHRINK SIZE OF SPARE LIST
                       ;CALL WITH -# TO DECREASE IN AC2, HEADER POINTER IN AC3 (CLOBBERS AC1 & AC2)
                       SFSREL:
074663 / 331017,,000001         SKIPL      SFSIZE(AC3)        ;;AS USUAL, THIS TYPE LEAVES SPFSNT ALONE
074664 / 272700,,022511          ADDM  AC2,SPFSNT             ;
074665 / 273717,,000003          ADDB  AC2, SPFSN(AC3)        ;
074666 / 325700,,037403        JUMPGE  AC2,037403             ;;LEAVE IF WE DON'T HAVE TO GIVE ANY AWAY
                       SFSRLL:
074667 / 700600,,000400          CONO   PI, PIOFF             ;
074670 / 336657,,000000         SKIPN  AC1,      (AC3)        ;;GET ONE
074671 / 254000,,037402          JRST      037402             ;;NONE
074672 / 550715,,000000          HRRZ  AC2,      (AC1)        ;
074673 / 202717,,000000         MOVEM  AC2,      (AC3)        ;;LINK IT OUT
074674 / 700600,,000200          CONO   PI,  PION             ;
074675 / 260140,,074163         PUSHJ    P,074163             ;;AND GIVE IT BACK TO THE WORLD
074676 / 331017,,000001         SKIPL      SFSIZE(AC3)        ;;THE UBIQUITOUS TEST (SIGH)
074677 / 350000,,022511           AOS      SPFSNT             ;
074700 / 355017,,000003         AOSGE       SPFSN(AC3)        ;;ONE MORE "NEEDED" (SHOULD BE GOING UP TO 0)
074701 / 254000,,074667          JRST      074667             ;;AND WE'LL KEEP AT IT UNTIL IT DOES
074702 / 263140,,000000          POPJ    P,                   ;
                       ;YES FANS, IT'S THE INFAMOUS RELEX, FORMERLY SCATTERED THROUGH TTYSER & DPYSER
                       ;THIS ONE TRIES TO SHUFFLE UP ALL THE SPARES IN THE BOTTOM 1K
                       ;BY REPLACING THEM WITH NEW ONES FROM FREE STORAGE
                       ;IT GIVES UP QUICKLY IF THE NEW ONES AREN'T ABOVE THE BOTTOM 1K
                       RELEX:
074703 / 200700,,022067          MOVE  AC2,MEMSIZ             ;
074704 / 271700,,002000          ADDI  AC2,002000             ;;THIS WILL BE OUR THRESHOLD
074705 / 311700,,022066          CAML  AC2,022066             ;;BUT LEAVE THE TOP 1K ALONE
074706 / 263140,,000000          POPJ    P,                   ;;IF THIS INSTRUCTION GETS EXECUTED SOMEONE DESERVES OUR WARMEST CONGRATULATIONS
074707 / 554300,,022512          HLRZ  DDB,022512             ;;THERE WAS ONCE A REASON FOR GOING THROUGH BACKWARDS
                       RELX1:
074710 / 201046,,000000         MOVEI  TAC,      (DDB)        ;;START THE "PREVIOUS" POINTER HERE
                       RELX2:
074711 / 550401,,000000          HRRZ  TEM,      (TAC)        ;;CONSIDER A BLOCK
074712 / 322400,,074737         JUMPE  TEM,074737             ;;GEE, WASN'T THAT EASY
074713 / 301416,,000000          CAIL  TEM,      (AC2)        ;
074714 / 254000,,074734          JRST      074734             ;;HE'S NOT IN THE BOTTOM 1K, SO WE WON'T WORRY ABOUT HIM NOW
074715 / 200110,,000000          MOVE TAC1,      (TEM)        ;;PICK UP HIS LINK
074716 / 550746,,000001          HRRZ  AC3,SFSIZE(DDB)        ;;HE MUST BE THIS BIG
074717 / 260140,,073353         PUSHJ    P,073353             ;;GET A SHINY NEW PIECE
074720 / 254000,,074737          JRST      074737             ;;OH WELL, SO MUCH FOR THIS LIST
074721 / 305656,,000000         CAIGE  AC1,      (AC2)        ;;SEE IF THE NEW ONE IS ABOVE THE BOTTOM 1K
074722 / 254000,,074736          JRST      074736             ;;TIME TO SEE THE COMPLAINT DEPARTMENT
074723 / 202115,,000000         MOVEM TAC1,      (AC1)        ;;COPY THE LINK
074724 / 700600,,000400          CONO   PI,000400             ;;NOW CLOSE OUR EYES
074725 / 316110,,000000          CAMN TAC1,      (TEM)        ;;AND IF THESE 2 POINTERS
074726 / 312401,,000000          CAME  TEM,      (TAC)        ;;STILL AGREE
153250 / 700600,,000200          CONO   PI,  PION             ;
153251 / 254000,,074736          JRST       RELXL             ;
074727 / 254000,,153250          JRST      153250             ;;CURSES! FOILED AGAIN! GIVE BACK NEW BLOCK.
074730 / 202641,,000000         MOVEM  AC1,      (TAC)        ;;QUICK! PULL THE SWITCH!
074731 / 700600,,000200          CONO   PI,000200             ;;DIDN'T SEE A THING
074732 / 250640,,000010          EXCH  AC1,000010             ;;DON'T FORGET TO TELL FSGIVE ABOUT THE SWITCH
074733 / 260140,,074163         PUSHJ    P,074163             ;;NOW GET RID OF THE LOSER
                       RELXI:
074734 / 200040,,000010          MOVE  TAC,000010             ;;THIS IS NOW THE PREVIOUS BLOCK
074735 / 254000,,074711          JRST       RELX2             ;
                       RELXL:
074736 / 260140,,074163         PUSHJ    P,074163             ;;GIVE BACK THE NEW ONE
                       RELXO:
074737 / 554306,,000002          HLRZ  DDB,SFLINK(DDB)        ;;AND TRY A NEW LIST
074740 / 326300,,074710         JUMPN  DDB,074710             ;;IF THERE'S ONE TO BE FOUND
074741 / 263140,,000000          POPJ    P,                   ;
074742 /                 ;::    BEND STANFO.CORE.
074742 /               ;: CORE[J17,SYS] EOF.
074742 /               ;: DSKSER[J17,SYS]
074742 /                 ;::   BEGIN STANFO.DSKSER.
                       ; PRELIMINARIES, STORAGE CONTROL
                       ;THIS CODE DEPENDS HEAVILY UPON:
                       ; 1) NO RESCHEDULING AT UUO LEVEL
                       ; 2) JOB NOT SHUFFLED OR SWAPPED WHEN IO ACTIVE.
                       BUFIOW:
074742 / 773340,,002553           XWD -BLKWDS,SYSBUF	         ;
                       ;167 FORMAT
                       MFDENT:
074743 / 000021,,000021                                       ;;'DIRECTORY ENTRY' FOR MFD
                       MFDEXT:
074744 / 654644,,000000                                       ;
                       MFDPRO:
074745 / 155740,,000000                                       ;;ANYONE CAN READ THE MFD
                       MFDLOC:
074746 / 000000,,000001                                       ;;DISK LOC. OF MFD
                       BAND0:
074747 / 000000,,000000                                       ;
                       SATLOC:
074750 / 000000,,000000                                       ;
                       MSGPPN:
074751 / 000022,,000022                                       ;;PPN OF MESSAGE AREA
                       ;IOS BITS,  DISPATCH TABLE
                       ;BITS IN LH IOS INDICATE FILE STATUS:
                       ;USER STATUS BITS IN RH IOS:
                       ;IDENTIFY DDB LOCATIONS FOR TVSER. LOCATIONS ARE SAME 
                       ;AS IN BLACKINGTON, FOR NO GOOD REASON.
074752 / 254000,,075063          JRST      075063             ;;GIVE BACK DDB
074753 / 254000,,075044          JRST      075044             ;;MAKE DDB
074754 / 254000,,075237          JRST      075237             ;;INITIALIZATION (SYSINI)
074755 / 254000,,075006          JRST      075006             ;;SHOULDN'T HANG
                       DSKDSP:
074756 / 254000,,076462          JRST      076462             ;;RELEASE
074757 / 254000,,076364          JRST      076364             ;;CLOSE OUTPUT
074760 / 254000,,075612          JRST      075612             ;;BUFFERED OUTPUT
074761 / 254000,,075520          JRST      075520             ;;BUFFERED INPUT
074762 / 254000,,077700          JRST      077700             ;;ENTER
074763 / 254000,,077444          JRST      077444             ;;LOOKUP
074764 / 254000,,076215          JRST      076215             ;;DUMP OUTPUT
074765 / 254000,,076041          JRST      076041             ;;DUMP INPUT
074766 / 254000,,076533          JRST      076533             ;;USETO
074767 / 254000,,076501          JRST      076501             ;;USETI
074770 / 254000,,076540          JRST      076540             ;;UGETF
074771 / 254000,,100107          JRST      100107             ;;RENAME
074772 / 254000,,076346          JRST      076346             ;;CLOSE INPUT
074773 / 263140,,000000          POPJ    P,                   ;;UTPCLR
074774 / 254000,,076574          JRST      076574             ;;MTAPE
                       ;DISKUP	DHUNG	BLAST DISK.  DISK HUNG ROUTINE
                       DISKUP:
074775 / 750600,,000020          CONO  IBM,CLRCHL             ;
074776 / 201100,,000002         MOVEI TAC1,000002             ;;MAY TAKE THIS MANY IF SCREWED UP.
                       DSKUP2:
074777 / 750600,,000001          CONO  IBM,000001             ;;.....
075000 / 750600,,000002          CONO  IBM,000002             ;;NOW RESET IBM.
075001 / 201040,,010000         MOVEI  TAC,010000             ;;...WHICH MAY TAKE A WHILE.
075002 / 367040,,075002          SOJG  TAC,075002             ;
075003 / 365100,,074777         SOJGE TAC1,DSKUP2             ;
075004 / 750200,,460016          CONO  PMP,460016             ;;ENABLE FOR RANDOM INT'S
075005 / 263140,,000000          POPJ    P,                   ;
                       ;CALLED FROM DEVCHK BY SPECIAL CALL, DDB NOT SETUP
                       DHUNG:
075006 / 260140,,074775         PUSHJ    P,074775             ;;FLUSH THE WORLD.
075007 / 750200,,000010          CONO  PMP,000010             ;;MAKE SURE CHANNEL DOESN'T INTERRUPT ANYONE
075010 / 750540,,012364         DATAO  IBM,012364             ;;NOW SEE IF HE IS LISTENING TO US
075011 / 201040,,100000         MOVEI  TAC,100000             ;;WAIT THIS LONG
075012 / 750340,,460000         CONSO  PMP,460000             ;;WAIT FOR NEW STATUS, UNEND, OR PARITY ERROR.
075013 / 367040,,075012          SOJG  TAC,075012             ;;WAIT FOR SOME STATUS
075014 / 750240,,000001          CONI  PMP,000001             ;;GET GOOD BITS
075015 / 640040,,000600           TRC  TAC,000600             ;;CHANNEL END, DEVICE END
075016 / 646040,,000600          TRCN  TAC,000600             ;;DID WE GET THEM BOTH?
075017 / 254000,,075037          JRST      075037             ;;YES.  PERHAPS THE DISK IS HAPPY NOW
075020 / 260140,,000316         PUSHJ    P,PUSHIT             ;
075021 / 260140,,044320         PUSHJ    P,044320             ;
075022 / 260140,,044066         PUSHJ    P,044066             ;
075032 / 476000,,036035         SETOM      036035             ;
075033 / 260140,,043761         PUSHJ    P,043761             ;;MAKE SURE THEY SEE IT 
075034 / 260140,,000341         PUSHJ    P, POPIT             ;
075035 / 254200,,075036          HALT      075036             ;
075036 / 260140,,074775         PUSHJ    P,074775             ;;BLAST HIM AGAIN
                       OKNOW:
075037 / 700600,,000400          CONO   PI,000400             ;;MAKE SURE WE DON'T LOSE
075040 / 476000,,012442         SETOM      012442             ;;TELL DSKINT WHY
075041 / 750200,,660016          CONO  PMP,660016             ;;MAKE AN INTERRUPT ON DISK CHANNEL
075042 / 700600,,000200          CONO   PI,  PION             ;
075043 / 263140,,000000          POPJ    P,                   ;
                       ;SETDDB CLRDDB	CORE ALLOCATION ROUTINES
                       SETDDB:
075044 / 260140,,075177         PUSHJ    P,075177             ;;POINTER IN TAC
075045 / 261140,,000002          PUSH    P,  TAC1             ;
075046 / 135100,,037577           LDB TAC1, PUNIT             ;
075047 / 332000,,000002         SKIPE        TAC1             ;
075050 / 350002,,011751           AOS      011751(TAC1)       ;;BUMP COUNT OF DDBS FOR THIS UDP
075051 / 200102,,011745          MOVE TAC1,DKDBML(TAC1)       ;;GET ADDRESS OF MODEL DDB
075052 / 541301,,000001          HRRI  DDB,DDBSKW(TAC)        ;;SAVE GOOD BITS IN LH
075053 / 505042,,777777          HRLI  TAC,777777(TAC1)       ;;SOURCE ADDRESS IN LH
075054 / 251046,,000037           BLT  TAC,DMPBUF(DDB)        ;;CLEAR, INITIALIZE DDB
075055 / 506302,,000003          HRLM  DDB,DEVSER(TAC1)       ;;NEW LINK IN DUMMY
075056 / 262140,,000002           POP    P,  TAC1             ;
075057 / 402006,,000005         SETZM      DEVLOG(DDB)        ;;CLEAR LOGICAL NAME.
075060 / 402006,,000024         SETZM      UFDPPN(DDB)        ;
075061 / 402006,,000025         SETZM      UFDADR(DDB)        ;
075062 / 254000,,076426          JRST      076426             ;;CLEAR CRUD AND RETURN
                       CLRDDB:
075063 / 260140,,076426         PUSHJ    P,DCLSDD             ;
075064 / 403006,,000002         SETZB      DEVIOS(DDB)        ;;HEAR NO EVIL
075065 / 135100,,037577           LDB TAC1,037577             ;;GET UNIT NUMBER
075066 / 322100,,075162         JUMPE TAC1,075162             ;;JUMP IF MAIN DISK
075067 / 372042,,011751          SOSE  TAC,011751(TAC1)       ;
075070 / 254000,,075103          JRST      CLRD99             ;
                       ;THERE ARE NO OTHER DDBS.  GIVE AWAY THE FS FOR THE SAT TABLE
075071 / 476002,,011750         SETOM      011750(TAC1)       ;;MAKE PUBLIC FOR NEXT INIT OR ASSIGN
075072 / 200742,,011745          MOVE  AC3,DKDBML(TAC1)       ;
075073 / 205040,,200000         MOVSI  TAC, DVDSK             ;
075074 / 436057,,000004          IORM  TAC,DEVMOD(AC3)        ;
075075 / 201040,,074756         MOVEI  TAC,DSKDSP             ;
075076 / 542057,,000003          HRRM  TAC,DEVSER(AC3)        ;
075077 / 332042,,011733         SKIPE  TAC,SATADR(TAC1)       ;
075100 / 260140,,075211         PUSHJ    P,075211             ;;GIVE AWAY THE FS BLOCK FOR SAT
075101 / 403042,,011733         SETZB  TAC,SATADR(TAC1)       ;
075102 / 664040,,075117          TROA  TAC, DMES1             ;
                       CLRD99:
075103 / 201040,,075123         MOVEI  TAC, DMES2             ;
075104 / 261140,,000006          PUSH    P,   DDB             ;
075105 / 261140,,000001          PUSH    P,000001             ;;SAVE MESSAGE
075106 / 700740,,000400         CONSO   PI,000400             ;;IN PROG ON 7?
075107 / 254000,,075132          JRST      CLRDD1             ;
075110 / 260140,,137613         PUSHJ    P,137613             ;;J SET UP FROM COMMAND DECODER WE HOPE
075111 / 261143,,777777          PUSH    P,777777(P)          ;;GET UDP DDB TO (P) FOR ERNAM
075112 / 260140,,043723         PUSHJ    P,043723             ;;TYPE "DEVICE UDPN"
075113 / 262143,,000000           POP    P,      (P)          ;
075114 / 262140,,000001           POP    P,000001             ;;SETUP MESSAGE
075115 / 260140,,042670         PUSHJ    P,CONMES             ;
075116 / 254000,,075160          JRST      075160             ;;RELEASE DDB
                       DMES1:
                       DMES2:
                       CLRDD1:
075132 / 336002,,011751         SKIPN      011751(TAC1)       ;;RELEASE BY UUO:
075133 / 254000,,075150          JRST      075150             ;;ALWAYS GIVE DMES1 IF APPROPRIATE,
075134 / 200042,,011745          MOVE  TAC,DKDBML(TAC1)       ;;BUT DON'T GIVE DMES2 IF THIS JOB HAS
                       CLRD11:
075135 / 554041,,000003          HLRZ  TAC,DEVSER(TAC)        ;; OTHER DDBS FOR THIS UDP
075136 / 322040,,075150         JUMPE  TAC,075150             ;;THIS CAN'T HAPPEN
075137 / 200101,,000000          MOVE TAC1,      (TAC)        ;
075140 / 312106,,000000          CAME TAC1,      (DDB)        ;
075141 / 254000,,075150          JRST      075150             ;;NO MORE DDBS, GIVE THE MESSAGE
153156 / 000001,,000001                                       ;
153156 / 360601,,000001 POINT 6,01000001,5                    ;
075142 / 135100,,153156           LDB TAC1,153156             ;;PJOBN
075143 / 302046,,000000          CAIE  TAC,      (DDB)        ;;THE DDB WE'RE FLUSHING DOESN'T COUNT
075144 / 312113,,024061          CAME TAC1,   JOB(PID)        ;
075145 / 254000,,075135          JRST      075135             ;;NOT OUR DDB, KEEP LOOKING
075146 / 262140,,000001           POP    P,000001             ;;OUR DDB, DON'T DO THE MESSAGE
075147 / 254000,,075160          JRST      CLRDD2             ;
                       CLRD19:
075150 / 322340,,075160         JUMPE PROG,075160             ;;NO CORE, NO MESSAGE
075151 / 260140,,137616         PUSHJ    P,TTYFUW             ;
075152 / 261143,,777777          PUSH    P,777777(P)          ;;UDP DDB TO (P) FOR ERNAM
075153 / 260140,,043723         PUSHJ    P,043723             ;;TYPE "DEVICE UDPN"
075154 / 262143,,000000           POP    P,      (P)          ;
075155 / 262140,,000001           POP    P,   TAC             ;
075156 / 260140,,042670         PUSHJ    P,CONMES             ;
075157 / 260140,,143040         PUSHJ    P, TYPGO             ;
                       CLRDD2:
075160 / 262140,,000006           POP    P,   DDB             ;
075161 / 135100,,037577           LDB TAC1, PUNIT             ;
                       CLRDD3:
075162 / 200042,,011745          MOVE  TAC,DKDBML(TAC1)       ;;SEARCH FOR THIS DDB - START AT MODEL
                       CLRDD4:
075163 / 201101,,000000         MOVEI TAC1,      (TAC)        ;
075164 / 554042,,000003          HLRZ  TAC,DEVSER(TAC1)       ;
075165 / 322040,,037403         JUMPE  TAC,037403             ;;SHOULDN'T HAPPEN
075166 / 302046,,000000          CAIE  TAC,      (DDB)        ;;RIGHT ONE YET?
075167 / 254000,,075163          JRST      075163             ;;NO. KEEP SEARCHING
075170 / 200301,,000003          MOVE  DDB,DEVSER(TAC)        ;;LINK TO ONE AFTER LOSER
075171 / 502302,,000003          HLLM  DDB,DEVSER(TAC1)       ;;SPLICE AROUND IT
075172 / 275040,,000001          SUBI  TAC,000001             ;;CALC ADDRESS OF FREE STG BLOCK
075173 / 254000,,075211          JRST      075211             ;;RETURN TO DISK FREE STG. AND POPJ
                       ;CORE ALLOCATION ROUTINES
                       GETCOR:
075174 / 260140,,075177         PUSHJ    P,075177             ;;GET DUMP MODE COMMAND BUFFER.
075175 / 206046,,000037         MOVSM  TAC,DMPBUF(DDB)        ;
075176 / 263140,,000000          POPJ    P,                   ;
                       GCOR1:
075177 / 201740,,000110         MOVEI  AC3,000110             ;;SET SIZE
075200 / 260140,,073353         PUSHJ    P,073353             ;;GET FREE STORAGE
075201 / 254000,,075204          JRST      075204             ;;HAVE TO WAIT
075202 / 201055,,000000         MOVEI  TAC,      (AC1)        ;;RETURN ADDRESS IN TAC
075203 / 263140,,000000          POPJ    P,                   ;
                       GCOR2:
152002 / 000004,,000004           XWD 4,4                     ;
075204 / 274140,,152002           SUB    P,152002             ;;CALLED FROM COMMAND DECODER
075205 / 254000,,056362          JRST      DLYCM1             ;
                       RTNCOR:
075206 / 554046,,000037          HLRZ  TAC,DMPBUF(DDB)        ;;RELEASE DUMP MODE CMD BUFFER.
075207 / 402006,,000037         SETZM      DMPBUF(DDB)        ;
075210 / 322040,,037403         JUMPE  TAC,037403             ;;IF NONE, LEAVE QUICK
                       RCOR1:
075211 / 550640,,000001          HRRZ  AC1,000001             ;;GET ADDRESS OF BLOCK
075212 / 254000,,074163          JRST      074163             ;;RETURN IT
                       ;REFRES		DISK REFRESHER (I. E., INITIALIZER)
                       DDOIT:
075213 / 260140,,102105         PUSHJ    P,102105             ;;MAKE REQUEST AND
                       XWSYNC:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
075214 / 200040,,152073          MOVE  TAC,152073             ;; SPIN TILL DONE
075215 / 612046,,000002          TDNE  TAC,DEVIOS(DDB)        ;
075216 / 254000,,075215          JRST      075215             ;
075217 / 263140,,000000          POPJ    P,                   ;
                       ;DSKINI, DSKSTP, DSKTM1 (TIME CONTROL)
                       ;TIME CONTROL. INFORMATION KEPT AS FOLLOWS:
                       ;DATE CREATED IN UFD (FILEXT) [DEC - DATE LAST WRITTEN]
                       ;TIME LAST WRITTEN IN UFD (FILPRO) [DEC - TIME CREATED]
                       ;TIME LAST REFERENCED IN FILE - DREFTM
                       ;TIME LAST DUMPED IN FILE - DDMPTM
                       ;LATTER TWO ARE ACCESSED THRU 6-WORD ENTER-LOOKUP BLOCKS IF
                       ;DMPBIT SET BY INIT.
                       DSKTM1:
075220 / 200040,,024633          MOVE  TAC,  TIME             ;
075221 / 231040,,007020         IDIVI  TAC,007020             ;;JIFFIES/MIN.
075222 / 550100,,024634          HRRZ TAC1,THSDAT             ;
152407 / 000000,,000002                                       ;
152407 / 141300,,000002 POINT 11,00000002,23                  ;
075223 / 137040,,152407           DPB  TAC,152407             ;
152374 / 000000,,024634                                       ;
152374 / 140300,,024634 POINT 3,00024634,35-12                ;
075224 / 135040,,152374           LDB  TAC,152374             ;;EXTRA BITS IN TAC - RPH/DATE75
075225 / 263140,,000000          POPJ    P,                   ;;RETURN RESULT IN TAC1.
                       ;DSKSTP CALLED FROM AUTORELOAD CODE IN OUTER TO PRESERVE THE SAT TABLE
                       DSKSTP:
075226 / 260140,,075432         PUSHJ    P,075432             ;; CLEAR QUEUE
075227 / 700600,,002202          CONO   PI,002202             ;; TURN ON PI AND CH6
                       OSAT:
075230 / 201300,,011756         MOVEI  DDB,DSKDDB             ;
075231 / 260140,,101307         PUSHJ    P,CUSATO             ;
075232 / 254000,,075214          JRST      XWSYNC             ;
                       ISAT:
075233 / 201300,,011756         MOVEI  DDB,011756             ;;HERE FROM ACISAT
075234 / 201240,,101341         MOVEI  DAT, SATIN             ;
075235 / 260140,,102137         PUSHJ    P,NENTER             ;
075236 / 254000,,075214          JRST      075214             ;;WAIT FOR DISK AND RETURN
                       ;DSKINI CALLED VIA DISPATCH FROM IOGO IN SYSINI FOR 200 RESTART.
                       DSKINI:
075237 / 260140,,075432         PUSHJ    P, DQINI             ;
075240 / 402000,,030742         SETZM      030742             ;;FORGET CUSLOC ON RESTARTS
075241 / 260140,,075456         PUSHJ    P,075456             ;;READ SAT TABLE
075242 / 200040,,011760          MOVE  TAC,011760             ;;GET IOS BITS
075243 / 602040,,300000          TRNE  TAC,300000             ;;DID IT WORK?
075244 / 254000,,075377          JRST      075377             ;;NO
075245 / 201300,,012066         MOVEI  DDB,012066             ;;LINK OUT CRUFTY OLD DISK DDB'S
075246 / 506300,,011761          HRLM  DDB,011761             ;
075247 / 402000,,011734         SETZM      011734             ;
075250 / 476000,,011751         SETOM      UDPOWN             ;
075251 / 402000,,011752         SETZM      UDPCNT             ;
075252 / 201300,,011756         MOVEI  DDB,011756             ;;MAKE SURE WE LINK TO UDPINI
075253 / 332000,,016225         SKIPE      016225             ;;SWAPPING WHERE?
075254 / 263140,,000000          POPJ    P,                   ;;ON FASTBANDS, SKIP SWAPPING PACK CRUD
                       PASCHK:
075255 / 201300,,012066         MOVEI  DDB,UDP1DD             ;;CAT(CAT(UDP,\<UPACKS>),DD)	;THE LAST UDP
075256 / 201040,,600000         MOVEI  TAC,600000             ;
075257 / 436046,,000004          IORM  TAC,DEVMOD(DDB)        ;;ASSIGN THIS UDP
152344 / 126367,,416012                                       ;
075260 / 200040,,152344          MOVE  TAC,152344             ;
075261 / 202046,,000005         MOVEM  TAC,DEVLOG(DDB)        ;;ANNOUNCE THAT UDP IS USED FOR SWAPPING
075262 / 403046,,000002         SETZB  TAC,DEVIOS(DDB)        ;
075263 / 137040,,037575           DPB  TAC,037575             ;;TO JOB 0
075264 / 402000,,011751         SETZM      011751             ;;RESERVE PRIVATE UDP FOR JOB ZERO
075265 / 402000,,002540         SETZM      002540             ;;THIS IS THE UDP WE ARE SWAPPING ON
075266 / 201240,,102716         MOVEI  DAT,102716             ;;READ PASSWORD BLOCK
075267 / 260140,,102137         PUSHJ    P,NENTER             ;
075270 / 260140,,075214         PUSHJ    P,075214             ;;WAIT FOR IT
075271 / 200046,,000002          MOVE  TAC,DEVIOS(DDB)        ;
075272 / 602040,,700000          TRNE  TAC,700000             ;
075273 / 254000,,075347          JRST      075347             ;;IO ERRORS OCCURED
151545 / 604163,,630000                                       ;
075274 / 200040,,151545          MOVE  TAC,151545             ;;IS IT INITIALIZED
075275 / 316046,,000047          CAMN  TAC,DSKDAT(DDB)        ;
075276 / 312046,,000050          CAME  TAC,000050(DDB)        ;
075277 / 254000,,075304          JRST      075304             ;;NO. IT IS GRUNGY
075300 / 332046,,000051         SKIPE  TAC,000051(DDB)        ;;PASSWORD MUST BE NULL FOR SWAPPING
152344 / 126367,,416012                                       ;
075301 / 316040,,152344          CAMN  TAC,152344             ;;SWAPPING PACK?
075302 / 254000,,075304          JRST      075304             ;;YES.
075303 / 254000,,075315          JRST      075315             ;;BARF
                       PASOK:
075304 / 201240,,102715         MOVEI  DAT,102715             ;;NOW TRY WRITING
075305 / 260140,,102137         PUSHJ    P,NENTER             ;
075306 / 260140,,075214         PUSHJ    P,XWSYNC             ;
075307 / 200046,,000002          MOVE  TAC,DEVIOS(DDB)        ;
075310 / 602040,,700000          TRNE  TAC,700000             ;
075311 / 254000,,075347          JRST      075347             ;;POSSIBLY WRITE-LOCKED
075312 / 202300,,002540         MOVEM  DDB,002540             ;;SAVE DDB ADDRESS FOR SWAP OPS
075313 / 201300,,011756         MOVEI  DDB,011756             ;;SET UP DDB FOR SYSINI?
075314 / 263140,,000000          POPJ    P,                   ;
                       PAKERR:
075315 / 260140,,000316         PUSHJ    P,PUSHIT             ;
075316 / 260140,,044066         PUSHJ    P,DISMES             ;
075324 / 260140,,044066         PUSHJ    P,DISMES             ;
                       PASTRY:
075332 / 260140,,044066         PUSHJ    P,DISMES             ;
075343 / 476000,,036035         SETOM      036035             ;
075344 / 260140,,043761         PUSHJ    P,043761             ;
075345 / 260140,,000341         PUSHJ    P, POPIT             ;
075346 / 254200,,075255          HALT      075255             ;;TRY ALL OVER AGAIN
                       PASERR:
075347 / 260140,,000316         PUSHJ    P,PUSHIT             ;
075350 / 261140,,000001          PUSH    P,   TAC             ;
075351 / 260140,,044066         PUSHJ    P,DISMES             ;
075357 / 262140,,000001           POP    P,   TAC             ;
075360 / 606040,,400000          TRNN  TAC,400000             ;;OFFLINE OR WRITE-LOCK?
075361 / 254000,,075372          JRST      075372             ;;NO.  REAL IO ERROR
075362 / 260140,,044066         PUSHJ    P,DISMES             ;
075371 / 254000,,075332          JRST      PASTRY             ;
                       PASIOE:
075372 / 260140,,044066         PUSHJ    P,DISMES             ;
075376 / 254000,,075332          JRST      PASTRY             ;
                       NOSAT:
075377 / 260140,,000316         PUSHJ    P,PUSHIT             ;
152717 / 254000,,000365          JRST      000365             ;
075400 / 200040,,152717          MOVE  TAC,152717             ;;MAKE THEM START FROM THE FRONT
075401 / 202040,,000200         MOVEM  TAC,SYSDSP             ;
075402 / 202040,,000202         MOVEM  TAC,000202             ;
152040 / 000202,,000203           XWD SYSDSP+2,SYSDSP+3       ;
075403 / 200040,,152040          MOVE  TAC,152040             ;
075404 / 251040,,000207           BLT  TAC,000207             ;
075405 / 200040,,024635          MOVE  TAC,UPTIME             ;
075406 / 202040,,026103         MOVEM  TAC,026103             ;;DON'T DO A 200 RESTART
075407 / 260140,,044320         PUSHJ    P,044320             ;
075410 / 260140,,044066         PUSHJ    P,DISMES             ;
075426 / 476000,,036035         SETOM      036035             ;
075427 / 260140,,043761         PUSHJ    P,043761             ;
075430 / 260140,,000341         PUSHJ    P, POPIT             ;
075431 / 254200,,000365          HALT      000365             ;
                       DQINI:
075432 / 402000,,002356         SETZM      002356             ;;INITIALIZE DISK SUBR QUEUE.
075433 / 205040,,002410         MOVSI  TAC,002410             ;;START OF THE UDP QUEUE
075434 / 556040,,002422         HLRZM  TAC,002422             ;
075435 / 556040,,002424         HLRZM  TAC,002424             ;
075436 / 205040,,002356         MOVSI  TAC,002356             ;;START OF THE DISK QUEUE
075437 / 556040,,002421         HLRZM  TAC, MIPTR             ;
075440 / 556040,,002423         HLRZM  TAC, MOPTR             ;
075441 / 402000,,002432         SETZM      002432             ;;NUMBER OF TASKS IN DISK QUEUE
075442 / 541040,,002357          HRRI  TAC,002357             ;
075443 / 251040,,002420           BLT  TAC,002420             ;;CLEAR OUT REQUEST QUEUE
075444 / 260140,,074775         PUSHJ    P,074775             ;;MAKE IBM LISTEN TO US
                       IJOB:
075445 / 402000,,002431         SETZM      DFBUSY             ;
075446 / 402000,,022060         SETZM       SQREQ             ;
075447 / 513000,,000675         HLLZS      IOPCON             ;
075450 / 402000,,002545         SETZM         DXB             ;
075451 / 402000,,002536         SETZM      DSKEDD             ;
075452 / 402000,,002541         SETZM      ERRBIT             ;
075453 / 402000,,002542         SETZM      DSKERB             ;
075454 / 402000,,007253         SETZM        BKIN             ;
075455 / 263140,,000000          POPJ    P,                   ;
                       ACISAT:
075456 / 700600,,000200          CONO   PI,000200             ;;CERTAINLY ISN'T ON YET
075457 / 336000,,007255         SKIPN      007255             ;;READ IF -1.(FIRST TIME ONLY)
075460 / 254000,,075230          JRST      075230             ;;ELSE WRITE (POPJ FROM OSAT)
075461 / 200040,,007260          MOVE  TAC,007260             ;;MAKE SURE COPIES OF SATID AGREE
075462 / 202040,,012553         MOVEM  TAC,SATID1             ;
075463 / 202040,,012554         MOVEM  TAC,SATID2             ;
075464 / 260140,,075233         PUSHJ    P,075233             ;;GET SAT IN
075465 / 200040,,007260          MOVE  TAC,007260             ;;NOW COPY GOOD SATID
075466 / 202040,,012553         MOVEM  TAC,SATID1             ;
075467 / 202040,,012554         MOVEM  TAC,SATID2             ;
075470 / 402000,,007255         SETZM      007255             ;;FROM NOW ON, WRITE THE SAT TABLE
                       ;ENTER HERE FROM SATGET AT UUO LEVEL FOR NEW STYLE UDP SERVICE
                       ACISTT:
075471 / 135740,,037577           LDB  AC3,037577             ;;GET THE DISK UNIT NUMBER
075472 / 200057,,011747          MOVE  TAC,LSTBTB(AC3)        ;;NUMBER OF BITS IN THIS SAT TABLE
075473 / 271040,,000043          ADDI  TAC,    43             ;
075474 / 231040,,000044         IDIVI  TAC,    44             ;
075475 / 221040,,000044         IMULI  TAC,000044             ;;CALC NUMBER OF WORDS IN SAT TABLE
075476 / 200757,,011733          MOVE  AC3,SATADR(AC3)        ;;ADDRESS OF SAT TABLE
151364 / 000017,,000071                                       ;
151364 / 440117,,000071 POINT 1,17000071,                     ;
075477 / 200100,,151364          MOVE TAC1,151364             ;;PREPARE TO COUNT SAT BITS!
075500 / 403657,,000005         SETZB  AC1,BADCHK(AC3)        ;;BIT COUNT, BAD TRACK CHECKSUM
075501 / 134700,,000002          ILDB  AC2,000002             ;;LOAD A BIT
075502 / 271656,,000000          ADDI  AC1,      (AC2)        ;;SEE THE CLEVER PROGRAMMER COUNT BITS
075503 / 365040,,075501         SOJGE  TAC,075501             ;;COUNT THEM ALL
075504 / 202657,,000000         MOVEM  AC1,      (AC3)        ;;SET HONEST DSKUSE
075505 / 337717,,000004         SKIPG  AC2,BADCNT(AC3)        ;;ANY BAD TRACKS TO TURN ON?
075506 / 263140,,000000          POPJ    P,                   ;;NO.
075507 / 303700,,000055         CAILE  AC2,BADMAX             ;
075510 / 201700,,000055         MOVEI  AC2,BADMAX             ;
075511 / 525716,,777777         HRLOI  AC2,777777(AC2)        ;
075512 / 445717,,000006          EQVI  AC2,BADTRK(AC3)        ;;FORM AOBJN POINTER
                       MRKITB:
075513 / 200056,,000000          MOVE  TAC,      (AC2)        ;
075514 / 272057,,000005          ADDM  TAC,BADCHK(AC3)        ;;ACCUMULATE CHECKSUM
075515 / 260140,,101564         PUSHJ    P,101564             ;;MARK BAD TRACK SO IT WON'T GET USED
075516 / 253700,,075513         AOBJN  AC2,MRKITB             ;
075517 / 263140,,000000          POPJ    P,                   ;
                       ; BUFFERED I/O
                       ;BUFFERED INPUT
                       DBUFI:
075520 / 607000,,340000          TLNN      340000             ;
075521 / 254000,,102423          JRST      102423             ;;NO LOOKUP
075522 / 602000,,300000          TRNE      300000             ;;ERROR LAST TIME?
075523 / 263140,,000000          POPJ    P,                   ;;YES
075524 / 603000,,000200          TLNE      000200             ;;BAD RETRIEVAL?
075525 / 254000,,102442          JRST      102442             ;;YES PRINT MESSAGE
075526 / 205000,,000020         MOVSI          IO             ;
075527 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;MARK AS READING
075530 / 265640,,075535           JSP  AC1,075535             ;;RETURN NOW IF PAST EOF
075531 / 254000,,075610          JRST       DIEOF             ;
075532 / 201240,,075543         MOVEI  DAT,DIBUFI             ;
075533 / 260140,,102105         PUSHJ    P,102105             ;;QUEUE TASK. USER PGM CAN PROCEED
075534 / 263140,,000000          POPJ    P,                   ;
                       TSTEOF:
075535 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;;GET USET POINTER
075536 / 275040,,000001          SUBI  TAC,     1             ;
075537 / 240040,,000007           ASH  TAC,000007             ;;RECORD NUMBER * 200 = WORD NUMBER
075540 / 315046,,000016         CAMGE  TAC,FILLNG(DDB)        ;;PAST EOF?
075541 / 254015,,000001          JRST           1(AC1)        ;;NO.  OK TO READ MORE
075542 / 254015,,000000          JRST            (AC1)        ;;PAST EOF
                       ;***INTERRUPT SUBR***
                       DIBUFI:
075543 / 260140,,101205         PUSHJ    P,101205             ;;GET BLOCK INTO SYSBUF
075544 / 322040,,075761         JUMPE  TAC,075761             ;;NON EX = BAD RETRIEVAL
075545 / 260140,,101162         PUSHJ    P,101162             ;;DID WE GET THE RIGHT FILE?
                       DIBFI1:
075546 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
075547 / 274046,,000057           SUB  TAC,DGRP1R(DDB)        ;
075550 / 231040,,000022         IDIVI  TAC,RCPBLK             ;
075551 / 240100,,000007           ASH TAC1,000007             ;;7
075552 / 550046,,000007          HRRZ  TAC,DEVIAD(DDB)        ;;GET REL. ADDR. OF USER BUFFER
075553 / 554240,,000007          HLRZ  DAT,  PROG             ;
075554 / 307045,,000000          CAIG  TAC,      (DAT)        ;;ILL. ADR.?
075555 / 254000,,075562          JRST      075562             ;;NO, RELOCATE BY PROG
075556 / 135240,,037600           LDB  DAT,037600             ;;YES, CHECK FOR UPPER SEGMENT
075557 / 550245,,027120          HRRZ  DAT,JBTADR(DAT)        ;
075560 / 271045,,400000          ADDI  TAC,400000(DAT)        ;
075561 / 254000,,075563          JRST      DIBFI4             ;
                       DIBFI3:
075562 / 271047,,000000          ADDI  TAC,      (PROG)       ;;RELOCATE INTO LOWER
                       DIBFI4:
075563 / 505242,,002613          HRLI  DAT,SYSDTA(TAC1)       ;
075564 / 541241,,000002          HRRI  DAT,     2(TAC)        ;
075565 / 251241,,000201           BLT  DAT,000201(TAC)        ;;INTO USER'S BUFF
075566 / 350106,,000021           AOS TAC1, USETP(DDB)        ;
075567 / 275100,,000001          SUBI TAC1,     1             ;
075570 / 240100,,000007           ASH TAC1,RECWSH             ;
075571 / 274106,,000016           SUB TAC1,FILLNG(DDB)        ;
075572 / 201240,,000200         MOVEI  DAT,000200             ;;SET UP WORD COUNT
075573 / 321100,,075576         JUMPL TAC1,075576             ;;IF NOT PAST EOF
075574 / 661000,,000040           TLO      000040             ;;EOF; TELL USER
075575 / 274240,,000002           SUB  DAT,000002             ;;ADJUST WORD COUNT
                       DIBFI2:
075576 / 542241,,000001          HRRM  DAT,     1(TAC)        ;;GIVE WD CT TO USER.
075577 / 260140,,044454         PUSHJ    P,ADVBFF             ;
075600 / 263140,,000000          POPJ    P,                   ;;NO MORE BUFFERS EMPTY.
075601 / 603000,,000040          TLNE      000040             ;;QUIT IF END OF FILE
075602 / 263140,,000000          POPJ    P,                   ;
075603 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
075604 / 274046,,000057           SUB  TAC,DGRP1R(DDB)        ;
075605 / 231040,,000022         IDIVI  TAC,RCPBLK             ;
075606 / 326100,,075546         JUMPN TAC1,075546             ;;DO MORE IF BLK NOT DONE
075607 / 263140,,000000          POPJ    P,                   ;;QUIT.
                       DIEOF:
075610 / 661000,,000040           TLO       IOEND             ;
075611 / 254000,,077645          JRST      077645             ;;STORE IOS, AND POPJ.
                       ;BUFFERED OUTPUT
                       DBUFO:
075612 / 607000,,140000          TLNN      140000             ;
075613 / 254000,,102414          JRST      ENOENT             ;
075614 / 205000,,000020         MOVSI          IO             ;
075615 / 437006,,000002          IORB      DEVIOS(DDB)        ;;FLAG OUTPUT FOR UUOCON
075616 / 603300,,001000          TLNE  DDB,001000             ;;CALLED BY CLOSE?
075617 / 254000,,075637          JRST      075637             ;;YES, DO OUTPUT NOW
                       DBUFOA:
075620 / 602000,,300000          TRNE      300000             ;;ERROR RECENTLY
075621 / 263140,,000000          POPJ    P,                   ;;YES, TELL HIM
075622 / 603000,,000200          TLNE      000200             ;;OR BAD RETRIEVAL
075623 / 254000,,102442          JRST      102442             ;;YES
075624 / 544046,,000006           HLR  TAC,DEVBUF(DDB)        ;;PTR TO OBUFF HDR
151445 / 540041,,000000           HRR  TAC,      (TAC)        ;
075625 / 256200,,151445          XCTR   XR,151445             ;;GET PTR TO NEXT FREE BFR
153052 / 331101,,000000         SKIPL TAC1,      (TAC)        ;
075626 / 256200,,153052          XCTR   XR,153052             ;
075627 / 254000,,075634          JRST      075634             ;;NEXT BUFFER IS FREE.
075630 / 606000,,010000          TRNN      010000             ;;NEXT BUFFER IS FULL.
075631 / 260140,,075637         PUSHJ    P,075637             ;;IF NOT ACTIVE, START OUTPUT.
075632 / 260140,,046176         PUSHJ    P,046176             ;;WAIT FOR OUTPUT TO HAPPEN.
075633 / 254000,,075620          JRST      075620             ;;RETURN OR START NEXT OUTPUT.
                       DBFOGO:
153070 / 335002,,000000        SKIPGE            (TAC1)       ;
075634 / 256200,,153070          XCTR   XR,153070             ;;CHECK ONE AFTER.
075635 / 602000,,010000          TRNE      010000             ;;IT'S FULL, OUTPUT ALREADY GOING?
075636 / 263140,,000000          POPJ    P,                   ;;YES, LET USER RUN.
                       DBUFO1:
075637 / 260140,,101061         PUSHJ    P,101061             ;;ENTER A TRANSFER IN QUEUE.
075640 / 201240,,075643         MOVEI  DAT,075643             ;;CALL INT LEVEL SUBR
075641 / 260140,,102105         PUSHJ    P,102105             ;;USER PGM CAN PROCEED
075642 / 263140,,000000          POPJ    P,                   ;
                       ;*** INTERRUPT SUBR ***
                       DIBUFO:
075643 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;;LOAD SYSBUF & OUTPUT
075644 / 202046,,000043         MOVEM  TAC,DSKFAD(DDB)        ;
075645 / 274046,,000057           SUB  TAC,DGRP1R(DDB)        ;
075646 / 231040,,000022         IDIVI  TAC,RCPBLK             ;
075647 / 240100,,000007           ASH TAC1,RECWSH             ;
075650 / 201042,,002613         MOVEI  TAC,SYSDTA(TAC1)       ;;DATA AREA OF SYSBUF
075651 / 202046,,000045         MOVEM  TAC,CORFAD(DDB)        ;
075652 / 202046,,000046         MOVEM  TAC,CORLAD(DDB)        ;
                       DIBFO1:
075653 / 550046,,000010          HRRZ  TAC,DEVOAD(DDB)        ;
075654 / 554100,,000007          HLRZ TAC1,  PROG             ;
075655 / 307042,,000000          CAIG  TAC,      (TAC1)       ;
075656 / 254000,,075663          JRST      DIBFO2             ;
075657 / 135100,,037600           LDB TAC1, PSEGN             ;
075660 / 550102,,027120          HRRZ TAC1,JBTADR(TAC1)       ;
075661 / 271042,,400002          ADDI  TAC,400002(TAC1)       ;
075662 / 254000,,075664          JRST      DIBFO3             ;
                       DIBFO2:
075663 / 271047,,000002          ADDI  TAC,     2(PROG)       ;
                       DIBFO3:
075664 / 337641,,777777         SKIPG  AC1,777777(TAC)        ;;ANY WORDS IN THIS BUFFER
075665 / 254000,,075763          JRST      075763             ;;NO, SKIP OVER IT
075666 / 207000,,000001         MOVSS         TAC             ;
075667 / 540046,,000046           HRR  TAC,CORLAD(DDB)        ;
075670 / 201101,,000200         MOVEI TAC1,RECSIZ(TAC)        ;
075671 / 202106,,000046         MOVEM TAC1,CORLAD(DDB)        ;
075672 / 251042,,777777           BLT  TAC,777777(TAC1)       ;;COPY USRBUF TO SYSBUF
075673 / 350006,,000021           AOS       USETP(DDB)        ;
075674 / 260140,,044366         PUSHJ    P,ADVBFE             ;
075675 / 254000,,075702          JRST      075702             ;;NO MORE BUFFERS READY
075676 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
075677 / 274046,,000057           SUB  TAC,DGRP1R(DDB)        ;
075700 / 231040,,000022         IDIVI  TAC,RCPBLK             ;
075701 / 326100,,075653         JUMPN TAC1,075653             ;;BLOCK NOT DONE, DO MORE
                       DIBOFT:
075702 / 200046,,000045          MOVE  TAC,CORFAD(DDB)        ;;PICK UP STARTING ADDRESS
075703 / 311046,,000046          CAML  TAC,CORLAD(DDB)        ;;BEFORE FINISHING ADDRESS
075704 / 263140,,000000          POPJ    P,                   ;;NO, NOTHING TO DO.
075705 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;;DID FILE GROW?
075706 / 275040,,000002          SUBI  TAC,000002             ;;-1 FOR AOS ABOVE, -1 FOR LAST RECORD,
075707 / 240040,,000007           ASH  TAC,000007             ;;WHICH WILL BE COUNTED BY WC BELOW
075710 / 303640,,000200         CAILE  AC1,RECSIZ             ;
075711 / 201640,,000200         MOVEI  AC1,000200             ;;AVOID BUMPING WC BY TOO MUCH
075712 / 271055,,000000          ADDI  TAC,      (AC1)        ;;ADD WC FROM LAST RECORD WRITTEN
075713 / 317046,,000016          CAMG  TAC,FILLNG(DDB)        ;
075714 / 254000,,075717          JRST      075717             ;;NO, GO DO OUTPUT.
075715 / 202046,,000016         MOVEM  TAC,FILLNG(DDB)        ;;YES, MARK IT SO
                       ;	MOVEI TAC,1
                       ;	CAME TAC,DGRP1R(DEVDAT)	;IF BEYOND FIRST GROUP,
                       ;	TLOA IOS,HDRDIF!PNTDIF		;UPDATE RTVL AT CLOSE.
075716 / 661000,,002004           TLO      002004             ;
                       DIBOFW:
075717 / 200046,,000045          MOVE  TAC,CORFAD(DDB)        ;;IF RTVL NOT CONTIGUOUS,
075720 / 306040,,002613          CAIN  TAC,002613             ;;CAN'T WRITE IT NOW.
075721 / 607000,,002000          TLNN      PNTDIF             ;
075722 / 254000,,075743          JRST      075743             ;;UPDATING RTVL NOT RQD
075723 / 260140,,101152         PUSHJ    P,AUDINF             ;
075724 / 505046,,000047          HRLI  TAC,DSKDAT(DDB)        ;;BLT RTVL FROM DDB...
075725 / 541040,,002553          HRRI  TAC,002553             ;;TO SYSBUF
075726 / 251040,,002612           BLT  TAC,002612             ;
                       ;	PUSHJ P,SPREDT		;FIRST UPDATE PRIOR RTVL.
075727 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;;SET UP TRANSFER
075730 / 260140,,101265         PUSHJ    P,LR2BLK             ;
075731 / 322040,,075761         JUMPE  TAC,075761             ;;NON EX = BAD RETRIEVAL
075732 / 260140,,101302         PUSHJ    P,BK2SEC             ;
075733 / 135740,,037577           LDB  AC3, PUNIT             ;
075734 / 270057,,011741           ADD  TAC,BFSETS(AC3)        ;;ADD IN OFFSET
075735 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
075736 / 200046,,000045          MOVE  TAC,CORFAD(DDB)        ;
075737 / 274046,,000046           SUB  TAC,CORLAD(DDB)        ;
152125 / 002553,,777740                                       ;
075740 / 270040,,152125           ADD  TAC,152125             ;
075741 / 206046,,000041         MOVSM  TAC,TFRIOW(DDB)        ;;WRITE ONLY THE RETRIEVAL AND VALID DATA
075742 / 254000,,075756          JRST      075756             ;;GO DO OUTPUT.
                       DIBOFN:
075743 / 200046,,000045          MOVE  TAC,CORFAD(DDB)        ;;HERE IF RTVL IS OUT
075744 / 274046,,000046           SUB  TAC,CORLAD(DDB)        ;;GET -WORD COUNT
075745 / 504046,,000045           HRL  TAC,CORFAD(DDB)        ;
075746 / 206046,,000041         MOVSM  TAC,TFRIOW(DDB)        ;
075747 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;;STARTING RECORD NO.
075750 / 260140,,101265         PUSHJ    P,LR2BLK             ;
075751 / 322040,,075761         JUMPE  TAC,075761             ;;NON EX = BAD RETRIEVAL
075752 / 260140,,101303         PUSHJ    P, BKMAP             ;
075753 / 135640,,037577           LDB  AC1, PUNIT             ;
075754 / 270055,,011741           ADD  TAC,BFSETS(AC1)        ;
075755 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
                       RERITE:
075756 / 201040,,000106         MOVEI  TAC,000106             ;
075757 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
075760 / 254000,,102316          JRST      102316             ;;WRITE OUT DATA
                       SETLOS:
152041 / 000240,,020000                                       ;
075761 / 670000,,152041           TDO      152041             ;;SCREW THE BASTARD
075762 / 254000,,077645          JRST      077645             ;;STO IOS AND GO UP ONE LEVEL
                       DIBFO4:
075763 / 260140,,044366         PUSHJ    P,044366             ;;ADVANCE THE BUFFERS
075764 / 254000,,075702          JRST      075702             ;;NONE LEFT, DO TRANSFER IF ANY WORDS TO TRANSFER
075765 / 254000,,075653          JRST      075653             ;;LOOK AT ANOTHER BUFFER
                       ; DUMP MODE I/O
                       ;COMMAND LIST IN IOWD FORMAT: (-WDCT)SA-1
                       ;GETS CONVERTED TO 167 FORMAT: (-WDCT)SA
                       ; RETURNS STARTING ADDRESS IN TAC1 AND -WD CT IN TAC
                       DMPCMD:
075766 / 201640,,000114         MOVEI  AC1,000114             ;;LOWER LIMIT
075767 / 200044,,026620          MOVE  TAC, UUOPC(J)          ;
075770 / 607040,,010000          TLNN  TAC,010000             ;;MONITOR OP?
075771 / 201640,,000073         MOVEI  AC1,000073             ;;YES
075772 / 554700,,000007          HLRZ  AC2,000007             ;;UPPER LIMIT=PROTECTION
075773 / 135740,,037600           LDB  AC3, PSEGN             ;
075774 / 322740,,075777         JUMPE  AC3,075777             ;;AC3 ← HIGH SEGEMENT PROTECT ADDR
075775 / 554757,,027120          HLRZ  AC3,JBTADR(AC3)        ;
075776 / 271740,,400000          ADDI  AC3,400000             ;;UPPER SEGMENT ADDRESSES ARE O.K.
                       DMPGET:
                       DMPGT1:
153110 / 336114,,000000         SKIPN TAC1,      (UUO)        ;
075777 / 256200,,153110          XCTR   XR,153110             ;;GET NEXT COMMAND WORD
076000 / 254000,,037376          JRST      037376             ;;ZERO TERMINATES
                       DMPGT2:
076001 / 574040,,000002          HLRE  TAC,000002             ;;NEGATIVE WORD COUNT
076002 / 405100,,777777          ANDI TAC1,777777             ;;FIRST ADDRESS-1
076003 / 322040,,076021         JUMPE  TAC,076021             ;;JUMP IF THIS IS A JUMP COMMAND
076004 / 271100,,000001          ADDI TAC1,000001             ;;REAL STARTING ADDRESS
076005 / 305115,,000000         CAIGE TAC1,      (AC1)        ;;ABOVE MINUMUM PROTECT ADDRESS?
076006 / 265240,,043211           JSP  DAT,043211             ;;NO. LOSE.
076007 / 261140,,000002          PUSH    P,000002             ;;SAVE STARTING ADDRESS
076010 / 560040,,000001          HRRO  TAC,000001             ;;IN CASE HUGE WD CT
076011 / 274100,,000001           SUB TAC1,000001             ;;CALCULATE LAST ADDR
076012 / 307116,,000001          CAIG TAC1,     1(AC2)        ;;IS IT WITHIN LOWER?
076013 / 254000,,076017          JRST      076017             ;;YES.  WIN.
076014 / 307117,,000001          CAIG TAC1,     1(AC3)        ;;BENEATH TOP OF UPPER?
076015 / 606100,,400000          TRNN TAC1,400000             ;;YES. IN UPPER AT ALL.
076016 / 265240,,043211           JSP  DAT,043211             ;;NO TO ONE OF ABOVE
                       T1POPJ:
076017 / 262140,,000002           POP    P,000002             ;;GET STARTING ADDRESS BACK
076020 / 263140,,000000          POPJ    P,                   ;;WIN
                       DMPTCH:
076021 / 540600,,000002           HRR  UUO,000002             ;;SET ADDRESS OF NEXT COMMAND
076022 / 307115,,000000          CAIG TAC1,      (AC1)        ;;ABOVE PROTECTED AREA?
076023 / 265240,,043211           JSP  DAT,043211             ;;NO. LOSE
076024 / 307116,,000000          CAIG TAC1,      (AC2)        ;;ADDRESS OK?
076025 / 254000,,075777          JRST      075777             ;;YES.
076026 / 307117,,000001          CAIG TAC1,     1(AC3)        ;;BENEATH TOP OF UPPER?
076027 / 606100,,400000          TRNN TAC1,400000             ;;YES. IN UPPER AT ALL?
076030 / 265240,,043211           JSP  DAT,043211             ;;NO TO ONE OF ABOVE
076031 / 254000,,075777          JRST      DMPGET             ;
                       DDCALC:
076032 / 200646,,000021          MOVE  AC1, USETP(DDB)        ;;LOCATE END OF BLOCK
076033 / 271640,,000021          ADDI  AC1,000021             ;;CONTAINING USETP
076034 / 201240,,000022         MOVEI  DAT,RCPBLK             ;
076035 / 232640,,000005         IDIVM  AC1,000005             ;;SEE US CLEVERLY AVOID A REMAINDER !
076036 / 221240,,000022         IMULI  DAT,RCPBLK             ;
076037 / 242240,,000007           LSH  DAT,000007             ;;CONVERT TO WORD COUNT.
076040 / 263140,,000000          POPJ    P,                   ;
                       ;DUMP MODE INPUT
                       DDMPI:
076041 / 607000,,340000          TLNN      340000             ;
076042 / 254000,,102423          JRST      ENOLUK             ;
076043 / 265640,,075535           JSP  AC1,075535             ;;SEE IF IMMEDIATE EOF
076044 / 254000,,076154          JRST      076154             ;;YES. TELL LOSER.
076045 / 621000,,000020           TLZ      000020             ;;FLAG INPUT
076046 / 661000,,400000           TLO      400000             ;;MAKE US UNSTOPPABLE.
076047 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
076050 / 260140,,076056         PUSHJ    P,DDICOM             ;
                       DDXIT:
076051 / 260140,,075206         PUSHJ    P,075206             ;;RETURN COMMAND BUFFER TO FREE STG
076052 / 606000,,300000          TRNN      300000             ;;IF DATA OR DEVICE ERROR, LET USER SEE IT!
076053 / 607000,,000200          TLNN      000200             ;;ELSE IF BAD RETRIEVAL PRINT MESSAGE
076054 / 254000,,077605          JRST       DPOPJ             ;
076055 / 254000,,102442          JRST       EGARB             ;
                       DDICOM:
076056 / 260140,,075174         PUSHJ    P,075174             ;;GET CORE FOR COMMAND LIST NOW
076057 / 260140,,101044         PUSHJ    P,101044             ;;GET GROUP DIRECTORY
076060 / 254000,,075761          JRST      075761             ;;BAD RETRIEVAL
                       DDICO2:
076061 / 260140,,075766         PUSHJ    P,075766             ;;GET AN IOWD
076062 / 202106,,000045         MOVEM TAC1,CORFAD(DDB)        ;;SAVE STARTING ADDRESS
076063 / 200646,,000021          MOVE  AC1, USETP(DDB)        ;
076064 / 275640,,000001          SUBI  AC1,     1             ;
076065 / 240640,,000007           ASH  AC1,000007             ;;7
076066 / 202646,,000043         MOVEM  AC1,DSKFAD(DDB)        ;
076067 / 274640,,000001           SUB  AC1,000001             ;;CALC DISK LAST ADDR
076070 / 317646,,000016          CAMG  AC1,FILLNG(DDB)        ;
076071 / 254000,,076074          JRST      DDICO3             ;
076072 / 661000,,000040           TLO       IOEND             ;
076073 / 200646,,000016          MOVE  AC1,FILLNG(DDB)        ;;STOP AT EOF
                       DDICO3:
076074 / 202646,,000044         MOVEM  AC1,DSKLAD(DDB)        ;
                       DDIC0:
076075 / 547006,,000037          HLRS      DMPBUF(DDB)        ;
                       DDIC1:
076076 / 260140,,076032         PUSHJ    P,076032             ;;FIND BLOCK END.
076077 / 313246,,000044         CAMLE  DAT,DSKLAD(DDB)        ;;COMPARE WORD COUNTS.
076100 / 200246,,000044          MOVE  DAT,DSKLAD(DDB)        ;
076101 / 274246,,000043           SUB  DAT,DSKFAD(DDB)        ;;THIS GIVES TFR WORD COUNT.
076102 / 210040,,000005          MOVN  TAC,   DAT             ;
076103 / 540106,,000045           HRR TAC1,CORFAD(DDB)        ;
076104 / 554400,,000007          HLRZ  TEM,  PROG             ;
076105 / 307110,,000000          CAIG TAC1,      (TEM)        ;
076106 / 254000,,076114          JRST       DDIC2             ;
076107 / 135400,,037600           LDB  TEM, PSEGN             ;
076110 / 550410,,027120          HRRZ  TEM,JBTADR(TEM)        ;
076111 / 620100,,400000           TRZ TAC1,400000             ;;FOR 256K IT MUST BE DONE-RPH 4-17-72
076112 / 271110,,000000          ADDI TAC1,      (TEM)        ;
076113 / 254000,,076115          JRST       DDIC3             ;
                       DDIC2:
076114 / 271107,,000000          ADDI TAC1,      (PROG)       ;;RELOCATE
                       DDIC3:
076115 / 504100,,000001           HRL TAC1,000001             ;;PUT IN -WD COUNT
076116 / 350406,,000037           AOS  TEM,DMPBUF(DDB)        ;
076117 / 202110,,777777         MOVEM TAC1,777777(TEM)        ;;ENTER IN COMMAND LIST
076120 / 272246,,000045          ADDM  DAT,CORFAD(DDB)        ;;BUMP FIRST ADDR BY WD CT
076121 / 273246,,000043          ADDB  DAT,DSKFAD(DDB)        ;
076122 / 271240,,000377          ADDI  DAT,000377             ;;ROUND UP TO RECORD
076123 / 240240,,777771           ASH  DAT,777771             ;
076124 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
076125 / 202246,,000021         MOVEM  DAT, USETP(DDB)        ;
076126 / 260140,,101265         PUSHJ    P,LR2BLK             ;
076127 / 322040,,075761         JUMPE  TAC,075761             ;;NON EX = BAD RETRIEVAL
076130 / 260140,,101303         PUSHJ    P, BKMAP             ;
076131 / 202050,,000000         MOVEM  TAC,      (TEM)        ;
076132 / 350406,,000037           AOS  TEM,DMPBUF(DDB)        ;;BUMP COMMAND POINTER
076133 / 554040,,000010          HLRZ  TAC,000010             ;;END CHECK COMMAND LIST
076134 / 305050,,777700         CAIGE  TAC,777700(TEM)        ;
076135 / 254000,,102470          JRST      102470             ;;ILL FMT COMMAND LIST.
076136 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;
076137 / 312046,,000044          CAME  TAC,DSKLAD(DDB)        ;;SEE IF REQUEST COMPLETED
076140 / 260140,,101052         PUSHJ    P,101052             ;;START XFER IF GRP OFLOW
076141 / 254000,,076143          JRST      076143             ;;RTVL NOT IN MEANS GRP OFLOW
076142 / 254000,,076076          JRST      076076             ;;NO OFLOW YET, DO MORE
                       DDIGO:
076143 / 201240,,076156         MOVEI  DAT,076156             ;;START I-LEVEL SUBR
076144 / 260140,,102104         PUSHJ    P,QEWAIT             ;
076145 / 602000,,300000          TRNE      300000             ;;IF DEVICE SCREW-UP
076146 / 263140,,000000          POPJ    P,                   ;;QUIT NOW!
076147 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;
076150 / 312046,,000044          CAME  TAC,DSKLAD(DDB)        ;
076151 / 254000,,076075          JRST      076075             ;;WORDS LEFT; DO ANOTHER GROUP
076152 / 607000,,000040          TLNN      000040             ;;END FILE?
076153 / 344600,,076061          AOJA  UUO,076061             ;;NO, DO NEXT IOWD
                       DDMIEF:
152023 / 000040,,020000           XWD IOEND,IODEND            ;
076154 / 434000,,152023           IOR      152023             ;
076155 / 254000,,077645          JRST      077645             ;;STORE IOS, AND POPJ.
                       ;*** INTERRUPT SUBR ***
                       DIDMPI:
076156 / 200406,,000037          MOVE  TEM,DMPBUF(DDB)        ;
076157 / 547000,,000010          HLRS         TEM             ;
076160 / 201100,,000006         MOVEI TAC1,IOPCHN             ;
076161 / 206106,,000042         MOVSM TAC1,TFRCTL(DDB)        ;
076162 / 135640,,037577           LDB  AC1, PUNIT             ;
                       DIDMI1:
076163 / 200110,,000000          MOVE TAC1,      (TEM)        ;;WCMA FROM COMMAND LIST
076164 / 202106,,000041         MOVEM TAC1,TFRIOW(DDB)        ;
076165 / 200110,,000001          MOVE TAC1,     1(TEM)        ;
076166 / 270115,,011741           ADD TAC1,BFSETS(AC1)        ;
076167 / 202106,,000040         MOVEM TAC1,TFRSEC(DDB)        ;
076170 / 260140,,102316         PUSHJ    P,TSTART             ;
076171 / 271400,,000002          ADDI  TEM,     2             ;
076172 / 315406,,000037         CAMGE  TEM,DMPBUF(DDB)        ;
076173 / 254000,,076163          JRST      DIDMI1             ;
                       DIDMI2:
076174 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;
076175 / 316046,,000044          CAMN  TAC,DSKLAD(DDB)        ;;IF LAST TFR,JUST RETURN
076176 / 263140,,000000          POPJ    P,                   ;
076177 / 336046,,000060         SKIPN  TAC,DNXTGP(DDB)        ;;ELSE GET RTVL FOR NEXT GRP.
076200 / 254000,,076213          JRST      076213             ;;FLAG END
076201 / 260140,,101302         PUSHJ    P,BK2SEC             ;
076202 / 135100,,037577           LDB TAC1, PUNIT             ;
076203 / 270042,,011741           ADD  TAC,BFSETS(TAC1)       ;
076204 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
076205 / 201046,,000047         MOVEI  TAC,DSKDAT(DDB)        ;;READ RIGHT INTO DDB
076206 / 505040,,777740          HRLI  TAC,777740             ;
076207 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;
076210 / 260140,,102316         PUSHJ    P,TSTART             ;
076211 / 260140,,101162         PUSHJ    P,AUDCHK             ;
076212 / 263140,,000000          POPJ    P,                   ;
                       DMIEF1:
076213 / 661000,,000040           TLO       IOEND             ;
076214 / 263140,,000000          POPJ    P,                   ;
                       ;DUMP MODE OUTPUT
                       DDMPO:
076215 / 607000,,140000          TLNN      140000             ;
076216 / 254000,,102414          JRST      ENOENT             ;
076217 / 661000,,400020           TLO      400020             ;;FLAG OUTPUT
076220 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
076221 / 260140,,076223         PUSHJ    P,DDOCOM             ;
076222 / 254000,,076051          JRST       DDXIT             ;
                       DDOCOM:
076223 / 260140,,075174         PUSHJ    P,075174             ;;GET BUFFER FOR COMMAND LIST
                       DDOCO2:
076224 / 260140,,075766         PUSHJ    P,075766             ;;GET IOWD
076225 / 202106,,000045         MOVEM TAC1,CORFAD(DDB)        ;
076226 / 200646,,000021          MOVE  AC1, USETP(DDB)        ;
076227 / 275640,,000001          SUBI  AC1,     1             ;
076230 / 240640,,000007           ASH  AC1,RECWSH             ;
076231 / 202646,,000043         MOVEM  AC1,DSKFAD(DDB)        ;
076232 / 274640,,000001           SUB  AC1,000001             ;;TAC: -WD CT
076233 / 202646,,000044         MOVEM  AC1,DSKLAD(DDB)        ;
076234 / 317646,,000016          CAMG  AC1,FILLNG(DDB)        ;;DID FILE GROW?
076235 / 254000,,076241          JRST       DDOC0             ;
076236 / 202646,,000016         MOVEM  AC1,FILLNG(DDB)        ;
076237 / 661000,,000004           TLO      000004             ;;INDICATE NEW FILLNG TO SPREAD.
076240 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;GET IT INTO THE DDB
                       DDOC0:
076241 / 547006,,000037          HLRS      DMPBUF(DDB)        ;
                       DDOC1:
076242 / 260140,,101061         PUSHJ    P,MAKBLK             ;
076243 / 322040,,075761         JUMPE  TAC,075761             ;;NON EX = BAD RETRIEVAL
076244 / 260140,,076032         PUSHJ    P,076032             ;;LOCATE BLOCK'S END.
076245 / 313246,,000044         CAMLE  DAT,DSKLAD(DDB)        ;;COMPARE WORD COUNTS.
076246 / 200246,,000044          MOVE  DAT,DSKLAD(DDB)        ;
076247 / 274246,,000043           SUB  DAT,DSKFAD(DDB)        ;;THIS GIVES TFR WORD COUNT.
076250 / 210040,,000005          MOVN  TAC,   DAT             ;
076251 / 540106,,000045           HRR TAC1,CORFAD(DDB)        ;
076252 / 504100,,000001           HRL TAC1,000001             ;;PUT IN -WD COUNT
076253 / 350406,,000037           AOS  TEM,DMPBUF(DDB)        ;
076254 / 202110,,777777         MOVEM TAC1,777777(TEM)        ;;ENTER IN COMMAND LIST
076255 / 272246,,000045          ADDM  DAT,CORFAD(DDB)        ;;UPDATE STARTING ADDRESSES
076256 / 273246,,000043          ADDB  DAT,DSKFAD(DDB)        ;
076257 / 271240,,000377          ADDI  DAT,000377             ;
076260 / 240240,,777771           ASH  DAT,777771             ;
076261 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
076262 / 202246,,000021         MOVEM  DAT, USETP(DDB)        ;
076263 / 260140,,101265         PUSHJ    P,LR2BLK             ;
076264 / 322040,,075761         JUMPE  TAC,075761             ;;NON EX = BAD RETRIEVAL
076265 / 260140,,101303         PUSHJ    P, BKMAP             ;
076266 / 202050,,000000         MOVEM  TAC,      (TEM)        ;
076267 / 350406,,000037           AOS  TEM,DMPBUF(DDB)        ;
076270 / 554040,,000010          HLRZ  TAC,   TEM             ;
076271 / 305050,,777700         CAIGE  TAC,777700(TEM)        ;;END CHK COMND LIST
076272 / 254000,,102470          JRST      102470             ;;ILL FMT COMMAND LIST.
076273 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;
076274 / 316046,,000044          CAMN  TAC,DSKLAD(DDB)        ;;ALL WORDS ACCOUNTED FOR?
076275 / 254000,,076304          JRST      076304             ;;YES, DO OUTPUT
076276 / 260140,,101052         PUSHJ    P,101052             ;;RTVL NOT IN MEANS GRP OFLOW
076277 / 254000,,076301          JRST      076301             ;;GRP OFLOW, DO OUTPUT
076300 / 254000,,076242          JRST      076242             ;;NO OFLOW, DO NEXT BLOCK
                       DDMPO3:
076301 / 332006,,000060         SKIPE      DNXTGP(DDB)        ;;NEXT GROUP EXIST?
076302 / 254000,,076304          JRST      076304             ;;YES, OUTPUT THIS BLOCK.
076303 / 260140,,101102         PUSHJ    P,101102             ;;NO, SET IT UP.
                       DDMPO4:
076304 / 201240,,076314         MOVEI  DAT,076314             ;;WRITE THIS GROUP OUT.
076305 / 260140,,102104         PUSHJ    P,QEWAIT             ;
076306 / 602000,,300000          TRNE      300000             ;
076307 / 263140,,000000          POPJ    P,                   ;;QUIT NOW IF ERROR!
076310 / 200046,,000043          MOVE  TAC,DSKFAD(DDB)        ;
076311 / 312046,,000044          CAME  TAC,DSKLAD(DDB)        ;
076312 / 254000,,076241          JRST      076241             ;;WORDS LEFT, DO ANOTHER GROUP
076313 / 344600,,076224          AOJA  UUO,076224             ;;GET NEXT IOWD
                       ;***INTERRUPT SUBR***
                       DIDMPO:
076314 / 623000,,002000          TLZE      PNTDIF             ;
076315 / 260140,,101125         PUSHJ    P,SPREAD             ;
076316 / 200406,,000037          MOVE  TEM,DMPBUF(DDB)        ;
076317 / 547000,,000010          HLRS         TEM             ;
076320 / 201100,,000106         MOVEI TAC1,000106             ;
076321 / 206106,,000042         MOVSM TAC1,TFRCTL(DDB)        ;
                       DIDMO1:
076322 / 200110,,000000          MOVE TAC1,      (TEM)        ;
076323 / 554240,,000007          HLRZ  DAT,  PROG             ;
076324 / 301242,,000000          CAIL  DAT,      (TAC1)       ;
076325 / 254000,,076333          JRST      DIDMO2             ;
076326 / 135240,,037600           LDB  DAT, PSEGN             ;
076327 / 620100,,400000           TRZ TAC1,400000             ;;BELIEVE ME FRED THIS IS THE ONLY WAY!
076330 / 550245,,027120          HRRZ  DAT,JBTADR(DAT)        ;;RPH 4-17-72
076331 / 271105,,000000          ADDI TAC1,      (DAT)        ;;RELOCATE TO UPPER
076332 / 254000,,076334          JRST      DIDMO3             ;
                       DIDMO2:
076333 / 271107,,000000          ADDI TAC1,      (PROG)       ;
                       DIDMO3:
076334 / 202106,,000041         MOVEM TAC1,TFRIOW(DDB)        ;
076335 / 200110,,000001          MOVE TAC1,     1(TEM)        ;
076336 / 135240,,037577           LDB  DAT, PUNIT             ;
076337 / 270105,,011741           ADD TAC1,BFSETS(DAT)        ;
076340 / 202106,,000040         MOVEM TAC1,TFRSEC(DDB)        ;
076341 / 260140,,102316         PUSHJ    P,TSTART             ;
076342 / 271400,,000002          ADDI  TEM,     2             ;
076343 / 315406,,000037         CAMGE  TEM,DMPBUF(DDB)        ;
076344 / 254000,,076322          JRST      DIDMO1             ;
076345 / 263140,,000000          POPJ    P,                   ;
                       ;BOTH INPUT & OUTPUT CLOSE ARE ALWAYS CALLED FROM UUOCON.
                       ;CLOSE INPUT.
                       DCLOSI:
076346 / 603000,,000400          TLNE       IOSET             ;
076347 / 254000,,077645          JRST      077645             ;;FAKE FOR USETI, RETURN.
076350 / 623000,,200000          TLZE       READB             ;
076351 / 627000,,010000          TLZN      010000             ;;DELETE FILE (SUBSEQUENT ENTER)?
076352 / 254000,,077645          JRST      077645             ;;NO, JUST RETURN.
076353 / 265640,,100422           JSP  AC1,100422             ;;IS ANYONE ELSE READING?
076354 / 254000,,077645          JRST      077645             ;;YES, DON'T DELETE.
076355 / 255000,,000000          JFCL                         ;
076356 / 260140,,077644         PUSHJ    P,077644             ;;MAKE US UNSTOPPABLE.
076357 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;;NO ONE ELSE LOOKING, SO...
076360 / 260140,,101722         PUSHJ    P,101722             ;;DELETE FILE.
076361 / 260140,,101307         PUSHJ    P,101307             ;;OUT SAT IF NEEDED.
076362 / 260140,,046176         PUSHJ    P,046176             ;;WAIT FOR IT
076363 / 254000,,077605          JRST       DPOPJ             ;
                       ;CLOSE OUTPUT
                       DCLOSO:
076364 / 607000,,140000          TLNN      140000             ;
076365 / 254000,,076426          JRST      076426             ;;NO ENTER, BLAST DDB
076366 / 260140,,077644         PUSHJ    P, GOSET             ;
076367 / 607300,,004200          TLNN  DDB,004200             ;;ANY OUTPUT BUFFERS SET UP?
076370 / 254000,,076374          JRST      076374             ;;NO.  NOTHING TO FLUSH  --ME
076371 / 135040,,037574           LDB  TAC,037574             ;;#-EATING APRSER SHOULD DO THIS
076372 / 305040,,000016         CAIGE  TAC,    DR             ;
076373 / 260140,,065347         PUSHJ    P,065347             ;;LAST OUTPUT FOR BUFFERED MODES
                       DCLSO3:
076374 / 260140,,046160         PUSHJ    P,046160             ;;FINISH IT 
076375 / 603000,,000400          TLNE      000400             ;;WERE WE CALLED FROM USETO?
076376 / 254000,,077605          JRST      077605             ;;YES. CLEAR GOBIT AND RETURN.
076377 / 201240,,076444         MOVEI  DAT, DCLOI             ;
076400 / 603000,,002004          TLNE      002004             ;;RTVL CORRECT?
076401 / 260140,,102136         PUSHJ    P,102136             ;;NO, GO FIX
076402 / 260140,,075206         PUSHJ    P,075206             ;;IF OUTPUT ABORTED
                       ;FILE & POINTERS NOW OUT; FIX UP UFD
                       DCLSO1:
076403 / 607000,,004000          TLNN      004000             ;;CHANGE UFD?
076404 / 254000,,076424          JRST      076424             ;;NO, NEW FILE; UFD POINTS TO IT
                       DCLSO9:
076405 / 621000,,010000           TLZ      010000             ;;NEW VERSION OF OLD FILE.
076406 / 205700,,010000         MOVSI  AC2,DELETB             ;
076407 / 265640,,100422           JSP  AC1,100422             ;;MARK READERS OF OLD FILE...
076410 / 254000,,076441          JRST      076441             ;;TO DELETE IT WHEN THRU
076411 / 254000,,102432          JRST      102432             ;;SHOULD BE JUST US WRITING
076412 / 260140,,100544         PUSHJ    P,100544             ;;GET UFD RTVL
076413 / 201240,,100273         MOVEI  DAT,100273             ;;USE RENAME CODE TO...
076414 / 260140,,102104         PUSHJ    P,102104             ;;CHANGE UFD TO NEW FILE
076415 / 623000,,010000          TLZE      010000             ;;WAS ANYONE READING?
076416 / 254000,,076424          JRST      076424             ;;YES, DON'T DELETE NOW
                       DCLSOC:
076417 / 200046,,000035          MOVE  TAC,SRCLOC(DDB)        ;;OLD FILE LOCATION
                       DCLSOD:
076420 / 260140,,101722         PUSHJ    P,101722             ;;DELETE IT
076421 / 135040,,037577           LDB  TAC, PUNIT             ;
076422 / 602000,,600000          TRNE      600000             ;
076423 / 326040,,101327         JUMPN  TAC,101327             ;;WRITE LOCKED UDP
                       DCLSO2:
076424 / 260140,,101307         PUSHJ    P,101307             ;;OUT SAT IF NEEDED
076425 / 260140,,046176         PUSHJ    P,046176             ;;WAIT FOR IT
                       DCLSDD:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
076426 / 612000,,152073          TDNE      152073             ;
076427 / 403006,,000002         SETZB      DEVIOS(DDB)        ;;THIS SHOULDN'T HAPPEN, BUT IT DOES.
076430 / 205040,,400000         MOVSI  TAC,DEVIBF             ;
076431 / 412046,,777777        ANDCAM  TAC,DEVCMR(DDB)        ;
076432 / 260140,,075206         PUSHJ    P,RTNCOR             ;
076433 / 402006,,000026         SETZM      ACCNAM(DDB)        ;
076434 / 505046,,000026          HRLI  TAC,ACCNAM(DDB)        ;
076435 / 541046,,000027          HRRI  TAC,000027(DDB)        ;
076436 / 251046,,000106           BLT  TAC,000106(DDB)        ;
076437 / 405000,,000617          ANDI      000617             ;
076440 / 254000,,077605          JRST       DPOPJ             ;
                       DCLSOR:
076441 / 436701,,000002          IORM  AC2,DEVIOS(TAC)        ;;FOUND READER, MARK TO DELETE
076442 / 661000,,010000           TLO      010000             ;;FLAG FILE STILL IN USE
076443 / 254000,,100425          JRST      100425             ;;KEEP LOOKING
                       ; *** INTERRUPT LEVEL ROUTINE ***
                       ; UPDATE FIRST RTVL (LENGTH) &∨ LAST (PTRS).
                       DCLOI:
076444 / 627000,,000004          TLZN      000004             ;;HEADER PTRS OK?
076445 / 254000,,076455          JRST      076455             ;;YES, FIX LAST PTRS
076446 / 201040,,000001         MOVEI  TAC,000001             ;;HEADER IS WRONG
076447 / 316046,,000057          CAMN  TAC,DGRP1R(DDB)        ;;LOOKING AT HEADER?
076450 / 254000,,076455          JRST      076455             ;;YES, GO FIX IT
                       ;	TLNN IOS,PNTDIF		;LAST POINTERS OK?
076451 / 260140,,076455         PUSHJ    P,076455             ;;NO, FIX THEM TOO
076452 / 201040,,000001         MOVEI  TAC,     1             ;
076453 / 202046,,000021         MOVEM  TAC, USETP(DDB)        ;
076454 / 260140,,101231         PUSHJ    P,101231             ;;GET HEADER POINTERS
                       DCLSO5:
076455 / 260140,,101152         PUSHJ    P,101152             ;;FIX UP
                       DCLSO4:
076456 / 260140,,101125         PUSHJ    P,101125             ;;OUTPUT POINTERS
076457 / 603000,,000004          TLNE      000004             ;;WERE BLOCKS REASSIGNED AT INTERRUPT LEVEL?
076460 / 254000,,076444          JRST      076444             ;;YES.
076461 / 263140,,000000          POPJ    P,                   ;
                       ;RELEASE UUO, CALL RESET, AND CALL EXIT
                       DRELES:
076462 / 260140,,046160         PUSHJ    P,046160             ;;MAKE SURE RESET WAITS FOR DISK TO STOP
076463 / 260140,,076346         PUSHJ    P,076346             ;;MAYBE DELETE FILE WE READ.
076464 / 607000,,100000          TLNN      100000             ;;IS A PARTIALLY WRITTEN FILE?
076465 / 254000,,076426          JRST      076426             ;;NO, CLEAR DDB.
076466 / 260140,,077644         PUSHJ    P,077644             ;;WE GET HERE ON RESET ONLY.
076467 / 201240,,076444         MOVEI  DAT,076444             ;;MAKE SURE RETRIEVAL IS OUT.
076470 / 260140,,102104         PUSHJ    P,QEWAIT             ;
076471 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;
076472 / 603000,,004000          TLNE      NTRUFD             ;
076473 / 254000,,076420          JRST      076420             ;;OLD FILE EXISTS, DELETE NEW
076474 / 260140,,100544         PUSHJ    P,100544             ;;NEW FILE, DELETE NAME
076475 / 402006,,000026         SETZM      ACCNAM(DDB)        ;
076476 / 201240,,100273         MOVEI  DAT,DRAUFD             ;
076477 / 260140,,102104         PUSHJ    P,QEWAIT             ;
076500 / 254000,,076417          JRST      076417             ;;THEN DELETE FILE.
                       ;USETI, USETO, UGETF.
                       DSETI:
076501 / 607000,,200000          TLNN       READB             ;
076502 / 254000,,102423          JRST      ENOLUK             ;
076503 / 261140,,000014          PUSH    P,000014             ;;SAVE THIS FOR LATER
076504 / 541600,,000001          HRRI  UUO,000001             ;;DON'T AFFECT OUTPUT
                       DSETC0:
076505 / 260140,,076563         PUSHJ    P,076563             ;;FLUSH BUFFERS, FINISH IO
076506 / 262140,,000002           POP    P,  TAC1             ;
076507 / 570100,,000002          HRRE TAC1,  TAC1             ;
076510 / 270106,,000066           ADD TAC1,DOFFST(DDB)        ;;ADD OFFSET
076511 / 337000,,000002         SKIPG      000002             ;;IF LESS THAN 1
076512 / 201100,,000001         MOVEI TAC1,000001             ;;MAKE IT 1 (LOSERS)
076513 / 260140,,076555         PUSHJ    P,076555             ;;GET RECORD EOF+1
076514 / 313040,,000002         CAMLE  TAC,000002             ;;SET TO END IF NOT IN FILE
076515 / 334040,,000002         SKIPA  TAC,000002             ;;IT'S OK - USE IT
                       DSETC1:
152023 / 000040,,020000           XWD IOEND,IODEND            ;
076516 / 674000,,152023          TDOA      152023             ;;OFF END
152023 / 000040,,020000           XWD IOEND,IODEND            ;
076517 / 630000,,152023           TDZ      152023             ;;INSIDE FILE, NO EOF
076520 / 202046,,000021         MOVEM  TAC, USETP(DDB)        ;;STORE NEW POINTER
076521 / 603000,,140000          TLNE      140000             ;;COULD HE BE WRITING?
076522 / 336106,,000057         SKIPN TAC1,DGRP1R(DDB)        ;;AND DO WE HAVE ANY RETRIEVAL?
076523 / 254000,,077645          JRST      077645             ;;NOTHING TO DO
076524 / 305042,,001100         CAIGE  TAC,RCPGRP(TAC1)       ;
076525 / 305042,,000000         CAIGE  TAC,      (TAC1)       ;;IS NEW RECORD IN CURRENT RETRIEVAL?
076526 / 627000,,002000          TLZN      002000             ;;NO, POINTERS NEED UPDATE?
076527 / 254000,,077645          JRST      077645             ;;NO UPDATE!
076530 / 201240,,076455         MOVEI  DAT,DCLSO5             ;
076531 / 260140,,102136         PUSHJ    P,102136             ;;GO
076532 / 254000,,077645          JRST      077645             ;;STO IOS AND RETURN
                       DSETO:
076533 / 607000,,140000          TLNN      140000             ;
076534 / 254000,,102414          JRST      ENOENT             ;
076535 / 261140,,000014          PUSH    P,   UUO             ;
076536 / 541600,,000002          HRRI  UUO,000002             ;;LEAVE INPUT ALONE
076537 / 254000,,076505          JRST      DSETC0             ;
                       DGETF:
076540 / 261140,,000014          PUSH    P,   UUO             ;
076541 / 201600,,000003         MOVEI  UUO,000003             ;
076542 / 603000,,200000          TLNE       READB             ;
076543 / 620600,,000002           TRZ  UUO, CLSIN             ;
076544 / 603000,,140000          TLNE      140000             ;
076545 / 620600,,000001           TRZ  UUO,CLSOUT             ;
076546 / 260140,,076563         PUSHJ    P,076563             ;;FLUSH BUFFERS, FINISH IO
076547 / 262140,,000014           POP    P,   UUO             ;
076550 / 260140,,076555         PUSHJ    P,076555             ;;NOW GET END OF FILE
076551 / 200100,,000001          MOVE TAC1,000001             ;;SAVE COPY
076552 / 274106,,000066           SUB TAC1,DOFFST(DDB)        ;;UN-OFFSET FOR LOSER
151457 / 542114,,000000          HRRM TAC1,      (UUO)        ;
076553 / 256240,,151457          XCTR  XRW,151457             ;;GIVE TO USER
076554 / 254000,,076516          JRST      076516             ;;AND USETP TO THERE
                       DGETL:
076555 / 200046,,000016          MOVE  TAC,FILLNG(DDB)        ;;FIND NEXT FREE RECORD
                       DGETL1:
076556 / 271040,,000177          ADDI  TAC,000177             ;;ROUND UP TO NEXT FULL RECORD
076557 / 421040,,000177        ANDCMI  TAC,000177             ;
076560 / 240040,,777771           ASH  TAC,777771             ;
076561 / 271040,,000001          ADDI  TAC,     1             ;
076562 / 263140,,000000          POPJ    P,                   ;
                       DSETC:
076563 / 205000,,000400         MOVSI      000400             ;;FLAG FOR CLOSE
076564 / 437006,,000002          IORB      DEVIOS(DDB)        ;;FOR WAIT1 AT CLSOUT (UUOCON)
076565 / 261140,,000006          PUSH    P,   DDB             ;
076566 / 260140,,064156         PUSHJ    P,064156             ;;TO FLAG BUFFERS EMPTY.
076567 / 262140,,000006           POP    P,000006             ;;RE-OPEN
076570 / 621000,,000400           TLZ      000400             ;;MAKE SURE THIS IS OFF!
076571 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
076572 / 502312,,024071          HLLM  DDB,USRJDA(UCHN)       ;;AND REPLACE IN USER TABLE
076573 / 263140,,000000          POPJ    P,                   ;
                       ;MTAPE UUO -- BY R. HELLIWELL -- 16 JAN 72
                       ;	IF FIRST WORD = SIXBIT/GODMOD/	:
                       ;		THEN SECOND WORD IS DISPATCH INTO GODDIS
                       ;		SEE ROUTINE FOR FURTHER DESCRIPTION
                       ;	ANYTHING ELSE IN FIRST WORD GETS THE USET POINTER!
                       DGETW:
076574 / 260140,,046160         PUSHJ    P,046160             ;;FINISH ANYTHING IN PROGRESS
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
076575 / 256200,,152455          XCTR   XR,152455             ;;PICK UP FIRST ARG!!!
151674 / 777777,,777777                                       ;
076576 / 316040,,151674          CAMN  TAC,151674             ;;OLD MTAPE?
076577 / 254000,,043340          JRST      043340             ;;YES: OLD FORM OF MTAPE NO LONGER EXISTS
151427 / 475744,,555744                                       ;
076600 / 312040,,151427          CAME  TAC,151427             ;;REQUESTING NEW GOD MODE
076601 / 254000,,076646          JRST      076646             ;;NO. GET THE USET POINTER
076602 / 271600,,000001          ADDI  UUO,     1             ;
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
076603 / 256200,,152455          XCTR   XR,152455             ;
076604 / 301040,,000024          CAIL  TAC,000024             ;;OFF END OF TABLE?
076605 / 254000,,043340          JRST      043340             ;;YES, TELL HIM HE LOST
076606 / 331001,,076622         SKIPL      GODDIS(TAC)        ;;PROTECTED MTAPE?
076607 / 254000,,076613          JRST      076613             ;;NO, DISPATCH
076610 / 200104,,027420          MOVE TAC1,JBTPRV(J)          ;;YES, CHECK PRIV.
076611 / 607100,,000020          TLNN TAC1,000020             ;;USE THIS PRIVILEGE
076612 / 254000,,043340          JRST      043340             ;;LOSER
                       DGETW1:
076613 / 200101,,076622          MOVE TAC1,GODDIS(TAC)        ;;IN CASE UDP, SEE IF WE NEED SAT IN
076614 / 607100,,200000          TLNN TAC1,200000             ;;DEPENDS ON WHICH MTAPE
076615 / 254021,,076622          JRST      @GODDIS(TAC)       ;;NO, JUST DISPATCH
076616 / 261140,,000001          PUSH    P,000001             ;;YES, DO IT
076617 / 260140,,101417         PUSHJ    P,SATGET             ;
076620 / 262140,,000001           POP    P,   TAC             ;
076621 / 254021,,076622          JRST      @GODDIS(TAC)       ;
                       ;IF SIGN BIT ON IN TABLE, MUST HAVE INFPRV TO DO THIS UUO!!!!!!!!
                       ;200000,,0 BIT MEANS UDP SAT TABLE MUST BE IN CORE
                       GODDIS:
076622 / 000000,,076646                                       ;;0	GET USET POINTER
076623 / 400000,,076663                                       ;;1	READ DISK BLOCK
076624 / 000000,,076656                                       ;;2	WRITE DISK BLOCK
076625 / 200000,,076752                                       ;;3	SET SAT BIT
076626 / 200000,,076753                                       ;;4	CLEAR SAT BIT
076627 / 200000,,076771                                       ;;5	READ WORDS FROM SAT TABLE
076630 / 200000,,076762                                       ;;6	WRITE WORDS IN SAT TABLE
076631 / 200000,,077027                                       ;;7	FORCE OUT SAT
076632 / 400000,,077033                                       ;;10	READ 5 WORDS OF FILE INFO
076633 / 000000,,077052                                       ;;11	WRITE 5 WORDS OF FILE INFO
076634 / 000000,,077226                                       ;;12	DIAGNOSTIC LOAD
076635 / 000000,,077251                                       ;;13	DIAGNOSTIC WRITE
076636 / 000000,,077310                                       ;;14	GET FILE RETRIEVAL DATA
076637 / 000000,,077353                                       ;;15	COMPARE A WORD IN DQINFO
076640 / 000000,,077366                                       ;;16	FIX RETRIEVAL TO INCLUDE AN EXISTING BLOCK
076641 / 000000,,077416                                       ;;17	UPDATE ALL POINTERS AND HEADER INFO
076642 / 000000,,077220                                       ;;20	READ FILE RECORD OFFSET
076643 / 000000,,077154                                       ;;21	SET FILE RECORD OFFSET
076644 / 200000,,077423                                       ;;22	HOW MANY FREE TRACKS LEFT
076645 / 200000,,077437                                       ;;23	TELL USER THE SATID
                       ;	MTAPE CHN,[	≠-1 ∧ ≠SIXBIT/GODMOD/	]
                       ;  OR
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			0		];POINTER COMES BACK HERE
                       GETPNT:
076646 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;;GET USET POINTER
076647 / 274046,,000066           SUB  TAC,DOFFST(DDB)        ;;DO OFFSET
152550 / 202054,,000000         MOVEM  TAC,      (UUO)        ;
076650 / 256040,,152550          XCTR   XW,152550             ;;AND GIVE IT TO USER
076651 / 263140,,000000          POPJ    P,                   ;
                       ;CHECK DISK ABSOLUTE WRITE PRIVILEGE
                       DGODZ:
076652 / 205640,,200000         MOVSI  AC1,DAWPRV             ;
076653 / 616644,,027420          TDNN  AC1,JBTPRV(J)          ;;SKIP IF DISK ABSOLUTE WRITE PRIV
076654 / 254000,,043340          JRST      043340             ;;LOSER
076655 / 263140,,000000          POPJ    P,                   ;
                       ;	GDWRIT, GDREAD
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			1=READ 2=WRITE
                       ;			IOWD WC,MA
                       ;			XWD S <RECORD #>,<DISK BLOCK ADDRESS>	]
                       ;	IO ERROR RETURN
                       ;	SUCCESS RETURN
                       ;IF THE SIGN BIT (S) IS ON IN THE 4TH WORD THEN THIS TRANSFER WILL BE
                       ;TO ONE OF THE EXTRA TRACKS AT THE END OF PACK 0.  THE BLOCK ADDRESS
                       ;SHOULD BE RELATIVE TO THE END OF THE PACK.
                       GDWRIT:
151473 / 550054,,000002          HRRZ  TAC,     2(UUO)        ;
076656 / 256200,,151473          XCTR   XR,151473             ;;MUST NOT WRITE SAT DIRECTLY
153044 / 331014,,000002         SKIPL           2(UUO)        ;
076657 / 256200,,153044          XCTR   XR,153044             ;;DON'T BE FAKED OUT BY XTRA CYL WRITE
076660 / 322040,,043217         JUMPE  TAC,043217             ;;(DON'T BE FOOLED BT A RECORD # - REG)
076661 / 260140,,076652         PUSHJ    P,076652             ;;IS HE LEGAL?
151730 / 000000,,000106                                       ;
076662 / 334040,,151730         SKIPA  TAC,151730             ;;MAKE IT A WRITE
                       GDREAD:
076663 / 201040,,000006         MOVEI  TAC,000006             ;;READ
076664 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;;WHICH DIRECTION
151521 / 554054,,000001          HLRZ  TAC,     1(UUO)        ;
076665 / 256200,,151521          XCTR   XR,151521             ;;MAKE SURE ITS NOT TIC
076666 / 322040,,043217         JUMPE  TAC,043217             ;;LOSE?
076667 / 260140,,076726         PUSHJ    P,076726             ;;CHECK AND RELOCATE IOWD!
076670 / 135100,,037577           LDB TAC1,037577             ;;GET UNIT (DSK OR UDP?)
153073 / 335054,,000002        SKIPGE  TAC,     2(UUO)        ;
076671 / 256200,,153073          XCTR   XR,153073             ;;PICK UP DISK ADDRESS
076672 / 254000,,076746          JRST      076746             ;;XTRA CYL TRANSFER
076673 / 405040,,777777          ANDI  TAC,777777             ;
076674 / 313042,,011743         CAMLE  TAC,LSTRKT(TAC1)       ;;MUST BE IN RANGE FOR THIS DEVICE
076675 / 263140,,000000          POPJ    P,                   ;;LET THE USER FIGURE OUT WHAT'S WRONG. (REG)
                       GDRD2:
076676 / 242040,,000006           LSH  TAC,000006             ;;POSITION FOR TRACK ADDRESS
076677 / 270042,,011741           ADD  TAC,BFSETS(TAC1)       ;
152650 / 000014,,000002                                       ;
152650 / 220614,,000002 POINT 6,14000002,17                   ;
152361 / 135100,,152650           LDB TAC1,152650             ;
076700 / 256040,,152361          XCTR  XLB,152361             ;;GET RECORD #
076701 / 303100,,000022         CAILE TAC1,000022             ;;LEGAL RECORD?
076702 / 254000,,043217          JRST      UADRER             ;
076703 / 434040,,000002           IOR  TAC,000002             ;;MERGE ADDRESS
153071 / 335014,,000002        SKIPGE           2(UUO)        ;
076704 / 256200,,153071          XCTR   XR,153071             ;
076705 / 661040,,200000           TLO  TAC,200000             ;;MARK AS XTRA CYL PACK 0 OP
076706 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;;STUFF INTO DDB
151530 / 564054,,000001          HLRO  TAC,     1(UUO)        ;
076707 / 256200,,151530          XCTR   XR,151530             ;;GET WC AGAIN
076710 / 221100,,000200         IMULI TAC1,RECSIZ             ;
076711 / 332000,,000002         SKIPE        TAC1             ;
076712 / 275100,,000140          SUBI TAC1,000140             ;
076713 / 274100,,000001           SUB TAC1,000001             ;;AND "ADD" WC
076714 / 303100,,004440         CAILE TAC1,004440             ;;RUN OFF END OF BLOCK?
076715 / 254000,,043217          JRST      UADRER             ;
076716 / 260140,,077644         PUSHJ    P,077644             ;;MAKE US UNSTOPPABLE
076717 / 476006,,000053         SETOM       DDLOC(DDB)        ;;DISABLE DSKQCK
076720 / 201240,,102316         MOVEI  DAT,102316             ;;JUST DO OP
076721 / 260140,,102104         PUSHJ    P,102104             ;;DO IT
076722 / 402006,,000053         SETZM       DDLOC(DDB)        ;
                       DEPOPJ:
076723 / 602000,,300000          TRNE      300000             ;;ANY ERRORS?
076724 / 254000,,077605          JRST      077605             ;;YES, NO SKIP
076725 / 254000,,077604          JRST      077604             ;;NO, SKIP RETURN
                       MTPACK:
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
076726 / 256200,,151477          XCTR   XR,151477             ;;PICK UP ADDRESS
076727 / 271100,,000001          ADDI TAC1,000001             ;;MAKE IT HONEST
076730 / 260140,,072703         PUSHJ    P,072703             ;;ADDRESS CHECK AND RELOCATE
076731 / 254000,,043217          JRST      UADRER             ;
076732 / 542106,,000041          HRRM TAC1,TFRIOW(DDB)        ;;SAVE IN DDB
076733 / 200046,,000042          MOVE  TAC,TFRCTL(DDB)        ;;GET MAGIC BIT
076734 / 607040,,000100          TLNN  TAC,000100             ;;IS IT WRITE?
076735 / 321100,,043217         JUMPL TAC1,043217             ;;NO, MUST HAVE WRITE (IN CORE) PERMISSION
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
076736 / 256200,,151477          XCTR   XR,151477             ;
151530 / 564054,,000001          HLRO  TAC,     1(UUO)        ;
076737 / 256200,,151530          XCTR   XR,151530             ;
076740 / 274100,,000001           SUB TAC1,000001             ;;COMPUTE LAST ADDRESS OF TRANSFER
076741 / 260140,,072762         PUSHJ    P,072762             ;;ADDRESS CHECK, RELOCATE AND TEST SAME SEGMENT
076742 / 254000,,043217          JRST      UADRER             ;
151442 / 510114,,000001          HLLZ TAC1,     1(UUO)        ;
076743 / 256200,,151442          XCTR   XR,151442             ;
076744 / 502106,,000041          HLLM TAC1,TFRIOW(DDB)        ;;SAVE IN DDB
076745 / 263140,,000000          POPJ    P,                   ;;OK
                       GDRD1:
076746 / 405040,,777777          ANDI  TAC,777777             ;
076747 / 305040,,000321         CAIGE  TAC,000321             ;
076750 / 322100,,076676         JUMPE TAC1,076676             ;;LEGAL, BUT NOT FOR UDPS
076751 / 254000,,043217          JRST      UADRER             ;
                       ;	SETSAT, CLRSAT
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			3=SET BIT	4=CLEAR BIT
                       ;			DISK ADDRESS]
                       ;	CLEAR OR SET SAT BIT CORRESPONDING TO DISK ADDRESS
                       SETSAT:
151757 / 000000,,101564                                       ;
076752 / 334700,,151757         SKIPA  AC2,151757             ;
                       CLRSAT:
076753 / 201700,,101543         MOVEI  AC2,RTNBLK             ;
076754 / 260140,,076652         PUSHJ    P,076652             ;;MUST BE GOD TO TWIDDLE BITS
076755 / 135100,,037577           LDB TAC1, PUNIT             ;
153066 / 333054,,000001        SKIPLE  TAC,     1(UUO)        ;
076756 / 256200,,153066          XCTR   XR,153066             ;;GET BLOCK ADDRESS
076757 / 313042,,011747         CAMLE  TAC,LSTBTB(TAC1)       ;;IN SAT TABLE?
076760 / 254000,,043217          JRST      043217             ;;NO
076761 / 254016,,000000          JRST            (AC2)        ;;SET OR CLEAR A BIT, AND POPJ
                       ;	SATWRT, SATRD, SATFRC
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			5=READ  6=WRITE
                       ;			IOWD WC,MA
                       ;			RELATIVE ADDRESS IN SAT TABLE]
                       ; ADDRESS IS RELATIVE TO SATTAB, NOT SATBIT!!!!!
                       ; READ OR WRITE PORTIONS OF SAT TABLE IN CORE!
                       SATWRT:
076762 / 260140,,076652         PUSHJ    P,076652             ;;CHECK FOR GOD
076763 / 260140,,076776         PUSHJ    P,076776             ;;SAT SET UP
076764 / 255000,,000000          JFCL                         ;
076765 / 207000,,000001         MOVSS      000001             ;;SWAP POINTERS TO BLT INTO SYSTEM
076766 / 271101,,777777          ADDI TAC1,777777(TAC)        ;;GET LAST LOC
076767 / 251042,,000000           BLT  TAC,      (TAC1)       ;;AND DO BLT
076770 / 263140,,000000          POPJ    P,                   ;
                       SATRD:
076771 / 260140,,076776         PUSHJ    P,076776             ;;SAT SET UP
076772 / 254000,,043217          JRST      043217             ;;WRITE PROT, LOSE
076773 / 271101,,777777          ADDI TAC1,777777(TAC)        ;;GET LAST LOC
076774 / 251042,,000000           BLT  TAC,      (TAC1)       ;;GIVE INFO TO LOSER!
076775 / 263140,,000000          POPJ    P,                   ;
                       SATSUP:
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
076776 / 256200,,151477          XCTR   XR,151477             ;;PICKUP USER ADDRESS
076777 / 271100,,000001          ADDI TAC1,000001             ;;MAKE IT HONEST
077000 / 260140,,072703         PUSHJ    P,072703             ;;ADDRESS CHECK AND RELOCATE
077001 / 254000,,043217          JRST      UADRER             ;
077002 / 321100,,077004         JUMPL TAC1,077004             ;;SKIP AOS IF WRITE PROT
077003 / 350003,,000000           AOS            (P)          ;;SKIP RETURN
077004 / 200040,,000002          MOVE  TAC,000002             ;;SAVE IN TAC
151537 / 574714,,000001          HLRE  AC2,     1(UUO)        ;
077005 / 256200,,151537          XCTR   XR,151537             ;;GET WC
077006 / 213000,,000016         MOVNS      000016             ;;MAKE IT POS!
077007 / 323700,,043217        JUMPLE  AC2,043217             ;;MUST NOW BE POS!
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
077010 / 256200,,151477          XCTR   XR,151477             ;;GET MA AGAIN
077011 / 270100,,000016           ADD TAC1,000016             ;;COMPUTE LAST ADDRESS
077012 / 260140,,072762         PUSHJ    P,072762             ;;ADDRESS CHECK AND RELOCATE
077013 / 254000,,043217          JRST      UADRER             ;
153076 / 335654,,000002        SKIPGE  AC1,     2(UUO)        ;
077014 / 256200,,153076          XCTR   XR,153076             ;;GET RELATIVE SAT ADDRESS
077015 / 254000,,043217          JRST      UADRER             ;
077016 / 200100,,000016          MOVE TAC1,   AC2             ;
077017 / 270700,,000015           ADD  AC2,000015             ;;GET RELATIVE END OF SAT
077020 / 135740,,037577           LDB  AC3,037577             ;;GET UNIT AS INDEX TO SAT TAB TABLES
077021 / 313717,,011735         CAMLE  AC2,TSATSZ(AC3)        ;;INSIDE SAT?
077022 / 254000,,043217          JRST      043217             ;;NO
077023 / 200757,,011733          MOVE  AC3,SATADR(AC3)        ;;ORIGIN OF SAT FOR THIS DEVICE
077024 / 271755,,000000          ADDI  AC3,      (AC1)        ;;FIRST WORD TO TRANSFER
077025 / 505057,,000000          HRLI  TAC,      (AC3)        ;;PUT CORE ADDRESS OF FIRST WORD IN TAC
077026 / 263140,,000000          POPJ    P,                   ;;RETURN TO DO BLT
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			7		]
                       ;FORCE SAT TABLE TO BE WRITTEN OUT!
                       SATFRC:
077027 / 135040,,037577           LDB  TAC, PUNIT             ;
077030 / 476001,,011753         SETOM      SATMOD(TAC)        ;;LET ANYBODY FORCE SAT OUT
077031 / 260140,,101307         PUSHJ    P,101307             ;;PUTS OUT THE RIGHT SAT TABLE
077032 / 254000,,046176          JRST      046176             ;;WAIT FOR IT
                       ;	FILINF, WRTINF
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD
                       ;			10
                       ;			ADDRESS TO PUT INFO (5 WORDS)	]
                       ;	ERROR RETURN, NO LOOKUP DONE
                       ;	SUCCESS RETURN
                       FILINF:
077033 / 607000,,200000          TLNN      200000             ;;LOOKUP DONE?
077034 / 263140,,000000          POPJ    P,                   ;;NO
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077035 / 256200,,152470          XCTR   XR,152470             ;
077036 / 271100,,000003          ADDI TAC1,000003             ;;CHECK END OF TRANSFER FIRST
077037 / 260140,,072703         PUSHJ    P,RELOCA             ;
077040 / 254000,,043217          JRST      UADRER             ;
077041 / 321100,,043217         JUMPL TAC1,UADRER             ;
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077042 / 256200,,152470          XCTR   XR,152470             ;
077043 / 260140,,072762         PUSHJ    P,RELOCB             ;
077044 / 254000,,043217          JRST      UADRER             ;
077045 / 321100,,043217         JUMPL TAC1,UADRER             ;
077046 / 505106,,000062          HRLI TAC1,DQINFO(DDB)        ;;GET INFO FROM HERE
077047 / 550040,,000002          HRRZ  TAC,  TAC1             ;
077050 / 251101,,000003           BLT TAC1,000003(TAC)        ;
077051 / 254000,,037401          JRST      CPOPJ1             ;
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			11
                       ;			ADDRESS OF 5 WORDS TO WRITE INTO RETRIEVAL	]
                       ;	ERROR RETURN
                       ;	SUCCESS RETURN
                       WRTINF:
077052 / 260140,,076652         PUSHJ    P, DGODZ             ;
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
077053 / 612000,,152073          TDNE      152073             ;
077054 / 260140,,046160         PUSHJ    P, WAIT1             ;
077055 / 332006,,000011         SKIPE      FILNAM(DDB)        ;;NO FILE TO RENAME?
077056 / 603000,,010000          TLNE      010000             ;;OR GOING AWAY?
077057 / 263140,,000000          POPJ    P,                   ;;LOSSAGE RETURN
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077060 / 256200,,152470          XCTR   XR,152470             ;
077061 / 271100,,000003          ADDI TAC1,000003             ;
077062 / 260140,,072703         PUSHJ    P,RELOCA             ;
077063 / 254000,,043217          JRST      UADRER             ;
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077064 / 256200,,152470          XCTR   XR,152470             ;
077065 / 260140,,072762         PUSHJ    P,RELOCB             ;
077066 / 254000,,043217          JRST      UADRER             ;
077067 / 506103,,000000          HRLM TAC1,      (P)          ;;SAVE USER ADDRESS FOR BLT'S
077070 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;
077071 / 603100,,100000          TLNE TAC1,100000             ;;DON'T PRINT THIS FOR LOGIN/OUT
077072 / 254000,,077115          JRST      LINOUT             ;
077073 / 135100,,037577           LDB TAC1, PUNIT             ;
077074 / 326100,,077115         JUMPN TAC1,077115             ;;NOR FOR UDP
077075 / 260140,,044320         PUSHJ    P,044320             ;
077076 / 260140,,044120         PUSHJ    P,DISERR             ;
077077 / 000000,,153542                                       ;
077100 / 000244,,027720        SIXQQQ      PRJPRG(J)          ;
077101 / 000000,,153462                                       ;
077102 / 000244,,030142        SIXQQQ      JOBNAM(J)          ;
077103 / 000000,,153314                                       ;
077104 / 000144,,027320        LOCQQQ      JBTLIN(J)          ;
077105 / 000000,,153260                                       ;
077106 / 000246,,000011        SIXQQQ      FILNAM(DDB)        ;
077107 / 000000,,152773                                       ;
077110 / 000246,,000012        SIXQQQ      FILEXT(DDB)        ;
151516 / 554000,,000000                                       ;
077111 / 000000,,151516                                       ;;;replaced;;[ASCIZ/[/]
077112 / 000246,,000014        SIXQQQ      FILPPN(DDB)        ;
                       ;;replaced	[ASCIZ/]
                       ;;replaced
                       ;;replaced /] with
153246 / 564321,,206424                                       ;
153247 / 000000,,000000                                       ;
077113 / 000000,,153246                                       ;;; ASCIZ right-square-bracket CRLF CRLF
                       ;;`2013-02-21 bgbaumgart@mac.com'
077114 / 777777,,777777                                       ;
                       LINOUT:
077115 / 201740,,000004         MOVEI  AC3,000004             ;;GET BLOCK OF FREE STORAGE
077116 / 260140,,074361         PUSHJ    P,074361             ;;GET IT
077117 / 261140,,000015          PUSH    P,   AC1             ;
077120 / 510103,,777777          HLLZ TAC1,777777(P)          ;;GET SAVED USER ADDR
077121 / 540100,,000015           HRR TAC1,000015             ;;SYSTEM ADDR
077122 / 251115,,000004           BLT TAC1, DQLEN(AC1)        ;;SAVE WORDS IN FREE STORAGE
077123 / 260140,,077416         PUSHJ    P,077416             ;;FORCE OUT POINTERS IF NECESSARY
077124 / 262146,,000036           POP    P,SRCTMP(DDB)        ;;SAVE ADDRESS
077125 / 620000,,300000           TRZ      300000             ;;NO ERRORS YET!
077126 / 661000,,020000           TLO      020000             ;;LOCK UP FILE WHILE WE'RE IN IT
077127 / 260140,,077644         PUSHJ    P,077644             ;;LEST WE GET STOPPED
077130 / 261146,,000021          PUSH    P, USETP(DDB)        ;;SAVE CURRENT USET
077131 / 201240,,077140         MOVEI  DAT,077140             ;;I SUBR
077132 / 260140,,102136         PUSHJ    P,NEWAIT             ;
077133 / 262146,,000021           POP    P, USETP(DDB)        ;;RESTORE USET
077134 / 200646,,000036          MOVE  AC1,SRCTMP(DDB)        ;
077135 / 260140,,074163         PUSHJ    P,074163             ;;RETURN BLOCK
077136 / 621000,,020000           TLZ      020000             ;;UNLOCK FILE
077137 / 254000,,076723          JRST      DEPOPJ             ;
                       ;***** I-SUBR FOR SMEARING OUT 5 WORD CHANGE TO DQINFO *****
                       WRTINS:
077140 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;;HERE IS WHERE WE START
077141 / 260140,,101177         PUSHJ    P,101177             ;;INITIALIZE FILE
                       WRTIN1:
077142 / 260140,,101231         PUSHJ    P,101231             ;;GET RETRIEVAL IN
077143 / 514106,,000036          HRLZ TAC1,SRCTMP(DDB)        ;;GET FREE STORAGE ADDRESS
077144 / 541106,,000062          HRRI TAC1,DQINFO(DDB)        ;;AND DDB ADDRESS
077145 / 251106,,000065           BLT TAC1,000065(DDB)        ;;BLT IN 5 WORDS
077146 / 260140,,101125         PUSHJ    P,101125             ;;SPREAD RET. OVER GROUP
077147 / 336006,,000060         SKIPN      DNXTGP(DDB)        ;;ANOTHER TO GO?
077150 / 263140,,000000          POPJ    P,                   ;
077151 / 201040,,001100         MOVEI  TAC,001100             ;;INC USET TO NEXT GROUP
077152 / 272046,,000021          ADDM  TAC, USETP(DDB)        ;
077153 / 254000,,077142          JRST      077142             ;;AND LOOP
                       ;	WRTOFF, RDOFF
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			21
                       ;			NEW FIRST RECORD	]
                       ;	ERROR RETURN
                       ;	SUCCESS RETURN
                       WRTOFF:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
077154 / 612000,,152073          TDNE      152073             ;
077155 / 260140,,046160         PUSHJ    P, WAIT1             ;
077156 / 332006,,000011         SKIPE      FILNAM(DDB)        ;;NO FILE TO RENAME?
077157 / 603000,,010000          TLNE      010000             ;;OR GOING AWAY?
077160 / 263140,,000000          POPJ    P,                   ;;LOSSAGE RETURN
077161 / 603000,,100000          TLNE      100000             ;;ALREADY WRITING?
077162 / 254000,,077167          JRST      077167             ;;YES, OK
077163 / 205240,,100000         MOVSI  DAT,100000             ;;CHANGE; IS IT LEGAL?
077164 / 200706,,000014          MOVE  AC2,FILPPN(DDB)        ;
077165 / 200746,,000013          MOVE  AC3,FILPRO(DDB)        ;
077166 / 265640,,100472           JSP  AC1,PROTEK             ;
                       WOFFOK:
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077167 / 256200,,152470          XCTR   XR,152470             ;;GET USER OFFSET REQUEST
077170 / 361100,,037403          SOJL TAC1,037403             ;;NORMALIZE AND TEST FOR TO SMALL
077171 / 261140,,000002          PUSH    P,  TAC1             ;
077172 / 260140,,077416         PUSHJ    P,077416             ;;MAKE SURE POINTERS ARE OK
                       ;BEFORE DIDLING THEM
077173 / 262146,,000036           POP    P,SRCTMP(DDB)        ;
077174 / 620000,,300000           TRZ      300000             ;;NO ERRORS YET!
077175 / 661000,,020000           TLO      020000             ;;LOCK UP FILE WHILE WE'RE IN IT
077176 / 260140,,077644         PUSHJ    P,077644             ;;LEST WE GET STOPPED
077177 / 261146,,000021          PUSH    P, USETP(DDB)        ;;SAVE CURRENT USET
077200 / 201240,,077205         MOVEI  DAT,077205             ;;I SUBR
077201 / 260140,,102136         PUSHJ    P,NEWAIT             ;
077202 / 262146,,000021           POP    P, USETP(DDB)        ;;RESTORE USET
077203 / 621000,,020000           TLZ      020000             ;;UNLOCK FILE
077204 / 254000,,076723          JRST      DEPOPJ             ;
                       ;***** I-SUBR FOR SMEARING OUT DOFFST CHANGE *****
                       WRTOFS:
077205 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;;HERE IS WHERE WE START
077206 / 260140,,101177         PUSHJ    P,101177             ;;INITIALIZE FILE
                       WRTOF1:
077207 / 260140,,101231         PUSHJ    P,101231             ;;GET RETRIEVAL IN
077210 / 200106,,000036          MOVE TAC1,SRCTMP(DDB)        ;;GET NEW OFFSET
077211 / 202106,,000066         MOVEM TAC1,DOFFST(DDB)        ;;SET INTO RETRIEVAL
077212 / 260140,,101125         PUSHJ    P,101125             ;;SPREAD RET. OVER GROUP
077213 / 336006,,000060         SKIPN      DNXTGP(DDB)        ;;ANOTHER TO GO?
077214 / 263140,,000000          POPJ    P,                   ;
077215 / 201040,,001100         MOVEI  TAC,001100             ;;INC USET TO NEXT GROUP
077216 / 272046,,000021          ADDM  TAC, USETP(DDB)        ;
077217 / 254000,,077207          JRST      077207             ;;AND LOOP
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			20
                       ;			RECORD OFFSET STORED HERE
                       ;			ACTUAL FILE LENGTH	]
                       ;	ERROR RETURN
                       ;	SUCCESS RETURN
                       RDOFF:
077220 / 200046,,000066          MOVE  TAC,DOFFST(DDB)        ;
077221 / 271040,,000001          ADDI  TAC,     1             ;
152551 / 202054,,000001         MOVEM  TAC,     1(UUO)        ;
077222 / 256040,,152551          XCTR   XW,152551             ;;REPORT STARTING RECORD #
077223 / 200046,,000016          MOVE  TAC,FILLNG(DDB)        ;
152552 / 202054,,000002         MOVEM  TAC,     2(UUO)        ;
077224 / 256040,,152552          XCTR   XW,152552             ;;REPORT ACTUAL FILE LENGTH
077225 / 263140,,000000          POPJ    P,                   ;
                       ;	DIAGL, DIAGW
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			12
                       ;			ADDRESS TO PUT DIAGNOSTIC (MUST BE 200 WORDS)
                       ;			FLOPPY DISK ADDRESS	]
                       ;	IO ERROR RETURN
                       ;	SUCCESS RETURN
                       DIAGL:
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077226 / 256200,,152470          XCTR   XR,152470             ;;PICK UP ADDRESS OF 200 WORD BUFFER
077227 / 260140,,072703         PUSHJ    P,RELOCA             ;
077230 / 254000,,043217          JRST      UADRER             ;
077231 / 321100,,043217         JUMPL TAC1,043217             ;;MUST HAVE WRITE PERMISSION
077232 / 552106,,000041         HRRZM TAC1,TFRIOW(DDB)        ;
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
077233 / 256200,,151477          XCTR   XR,151477             ;
077234 / 271100,,000177          ADDI TAC1,   177             ;
077235 / 260140,,072762         PUSHJ    P,RELOCB             ;
077236 / 254000,,043217          JRST      UADRER             ;
152457 / 200054,,000002          MOVE  TAC,     2(UUO)        ;
077237 / 256200,,152457          XCTR   XR,152457             ;;PICK UP FLOPPY DISK ADDRESS
077240 / 303040,,000377         CAILE  TAC,000377             ;;MUST BE ONE BYTE
077241 / 254000,,043217          JRST      UADRER             ;
153134 / 000006,,000040                                       ;
153134 / 341006,,000040 POINT 8,06000040,7                    ;
077242 / 137040,,153134           DPB  TAC,153134             ;;PUT IN PLACE FOR PICK UP BY CHANNEL
077243 / 205040,,000006         MOVSI  TAC,000006             ;;KLUDGE TO INDICATE READ
                       LWMERG:
077244 / 202046,,000042         MOVEM  TAC,TFRCTL(DDB)        ;
077245 / 260140,,077644         PUSHJ    P,077644             ;;LOCK HIM IN FOR THIS
077246 / 201240,,077275         MOVEI  DAT,LWSTRT             ;
077247 / 260140,,102104         PUSHJ    P,102104             ;;START OP AND WAIT FOR IT
077250 / 254000,,076723          JRST      076723             ;;CHECK ERRORS AND UNLOCK
                       ;CALL:
                       ;	MTAPE CHN,[	SIXBIT/GODMOD/
                       ;			13
                       ;			ADDRESS TO GET DIAGNOSTIC FROM (MUST BE 200 WORDS)
                       ;			ADDRESS TO PUT ERROR CODE (4 WORDS)	]
                       ;	IO ERROR RETURN
                       ;	SUCCESS RETURN
                       DIAGW:
077251 / 260140,,076652         PUSHJ    P, DGODZ             ;
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077252 / 256200,,152470          XCTR   XR,152470             ;
077253 / 260140,,072703         PUSHJ    P,RELOCA             ;
077254 / 254000,,043217          JRST      UADRER             ;
077255 / 552106,,000040         HRRZM TAC1,TFRSEC(DDB)        ;
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
077256 / 256200,,152470          XCTR   XR,152470             ;
077257 / 271040,,000177          ADDI  TAC,   177             ;
077260 / 260140,,072762         PUSHJ    P,RELOCB             ;
077261 / 254000,,043217          JRST      UADRER             ;
152471 / 200114,,000002          MOVE TAC1,     2(UUO)        ;
077262 / 256200,,152471          XCTR   XR,152471             ;
077263 / 260140,,072703         PUSHJ    P,RELOCA             ;
077264 / 254000,,043217          JRST      UADRER             ;
077265 / 321100,,043217         JUMPL TAC1,043217             ;;LOSE IF WRITE PROTECTED
077266 / 552106,,000041         HRRZM TAC1,TFRIOW(DDB)        ;
152471 / 200114,,000002          MOVE TAC1,     2(UUO)        ;
077267 / 256200,,152471          XCTR   XR,152471             ;
077270 / 271040,,000003          ADDI  TAC,     3             ;
077271 / 260140,,072762         PUSHJ    P,RELOCB             ;
077272 / 254000,,043217          JRST      UADRER             ;
077273 / 205040,,000106         MOVSI  TAC,000106             ;
077274 / 254000,,077244          JRST      LWMERG             ;
                       ;DIAGNOSTIC I-SUBR ************
                       LWSTRT:
077275 / 202300,,002545         MOVEM  DDB,   DXB             ;
077276 / 202200,,002547         MOVEM    J,   DXJ             ;
077277 / 202140,,002550         MOVEM    P,   DXP             ;
077300 / 620000,,300000           TRZ      300000             ;
077301 / 200046,,000040          MOVE  TAC,TFRSEC(DDB)        ;
077302 / 202040,,002551         MOVEM  TAC,   DXS             ;
077303 / 200046,,000041          MOVE  TAC,TFRIOW(DDB)        ;
077304 / 202040,,002552         MOVEM  TAC,   DXW             ;
077305 / 554046,,000042          HLRZ  TAC,TFRCTL(DDB)        ;
077306 / 202040,,002546         MOVEM  TAC,   DXC             ;
077307 / 254000,,102745          JRST      102745             ;;DISPATCH TO DEVICE DEPENDENT SUBR
                       ;	GETRTR
                       ;CALL:	
                       ;	MTAPE	CHN,['GODMOD'
                       ;			14
                       ;		     IOWD WC,MA]	;WC≤40
                       ;	<ERROR - NO LOOKUP OR ENTER>
                       ;PLACE UP TO 40 WORDS OF FILE RETRIEVAL AT USER'S ADR.
                       ;RETRIEVAL IS COPIED FROM THE DDB FOR THIS CHANNEL.
                       ;USER MUST HAVE A FILE LOOKED UP SUCESSFULLY ALREADY.
                       ;REG THIS PAGE
                       GETRTR:
077310 / 607000,,340000          TLNN      340000             ;;LOOKUP OR ENTER DONE?
077311 / 263140,,000000          POPJ    P,                   ;;NO
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
077312 / 256200,,151477          XCTR   XR,151477             ;;GET HIS ADDRESS
151530 / 564054,,000001          HLRO  TAC,     1(UUO)        ;
077313 / 256200,,151530          XCTR   XR,151530             ;;AND THE WC
151664 / 777777,,777740                                       ;
077314 / 315040,,151664         CAMGE  TAC,151664             ;
077315 / 254000,,043217          JRST      UADRER             ;
077316 / 274100,,000001           SUB TAC1,000001             ;;COMPUTE LAST ADDRESS OF TRANSFER
077317 / 260140,,072703         PUSHJ    P,072703             ;;
077320 / 254000,,043217          JRST      UADRER             ;
077321 / 321100,,043217         JUMPL TAC1,UADRER             ;
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
077322 / 256200,,151477          XCTR   XR,151477             ;;GET THE ADDRESS HE SAID
077323 / 271100,,000001          ADDI TAC1,000001             ;;MAKE IT HONEST
077324 / 260140,,072762         PUSHJ    P,RELOCB             ;
077325 / 254000,,043217          JRST      UADRER             ;
077326 / 321100,,043217         JUMPL TAC1,UADRER             ;
077327 / 505106,,000047          HRLI TAC1, DDNAM(DDB)        ;;GET INFO FROM HERE
151530 / 564054,,000001          HLRO  TAC,     1(UUO)        ;
077330 / 256200,,151530          XCTR   XR,151530             ;;GET -WC
077331 / 210040,,000001          MOVN  TAC,000001             ;;+WC
077332 / 200700,,000001          MOVE  AC2,000001             ;;REMEMBER THE WC
077333 / 271042,,000000          ADDI  TAC,      (TAC1)       ;;ADD BEGINNING ADDRESS
077334 / 201642,,000000         MOVEI  AC1,      (TAC1)       ;;SAVE USER'S ADDRESS
077335 / 251101,,777777           BLT TAC1,777777(TAC)        ;;MOVE DATA
077336 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;;GET THIS GUY'S PRIVILEGES
077337 / 303700,,000013         CAILE  AC2,000013             ;;DID THIS USER READ SPECIAL STUFF?
077340 / 603040,,000020          TLNE  TAC,000020             ;;IS HE ALLOWED TO SEE ALL RETRIEVAL?
077341 / 254000,,037401          JRST      037401             ;;PRIVILEGED OR DIDN'T ATTEMPT TO READ DQINFO
077342 / 402015,,000013         SETZM      000013(AC1)        ;;ZERO DQINFO
077343 / 205115,,000013         MOVSI TAC1,000013(AC1)        ;;SOURCE
077344 / 541115,,000014          HRRI TAC1,000014(AC1)        ;;DESTINATION OF BLT
077345 / 303700,,000017         CAILE  AC2,000017             ;;DOES WC EXCEED SPECIAL AREA?
077346 / 201700,,000017         MOVEI  AC2,000017             ;;YES. MAKE IT SMALLER.
077347 / 271715,,777777          ADDI  AC2,777777(AC1)        ;;ADD TO MAKE LAST ADDRESS TO ZERO
077350 / 301702,,000000          CAIL  AC2,      (TAC1)       ;;IS THIS A NULL BLT?
077351 / 251116,,000000           BLT TAC1,      (AC2)        ;;REAL BLT TO ZERO CORE.
077352 / 254000,,037401          JRST      037401             ;;RETURN.
                       ;	INFCOM, ADDBLK, FILEUP, TKSFRE, DSKRES
                       ;CALL:	
                       ;	MTAPE	CHN,['GODMOD'
                       ;			15
                       ;			0-4		;WHICH WORD TO COMPARE WITH
                       ;		       DATA  ]		;DATA TO BE COMPARED
                       ;	<NO LOOKUP OR ENTER OR COMPARE NOT EQUAL>
                       ;THIS IS A UUO TO COMPARE A WORD FROM THE USER WITH ONE FROM
                       ;THE SPECIAL 5 WORD RETRIEVAL BLOCK IN A FILE
                       INFCOM:
077353 / 607000,,340000          TLNN      340000             ;
077354 / 263140,,000000          POPJ    P,                   ;
152456 / 200054,,000001          MOVE  TAC,     1(UUO)        ;
077355 / 256200,,152456          XCTR   XR,152456             ;;PICK UP INDEX INTO 5 WORD RETRIEVAL BLOCK
077356 / 321040,,043217         JUMPL  TAC,043217             ;;CHECK IT
077357 / 301040,,000004          CAIL  TAC, DQLEN             ;
077360 / 254000,,043217          JRST      UADRER             ;
077361 / 271046,,000062          ADDI  TAC,DQINFO(DDB)        ;;CALC ADDR OF WORD
077362 / 200041,,000000          MOVE  TAC,      (TAC)        ;;PICK IT UP
153024 / 316054,,000002          CAMN  TAC,     2(UUO)        ;
077363 / 256200,,153024          XCTR   XR,153024             ;;EQUAL TO LOSERS WORD?
077364 / 350003,,000000           AOS            (P)          ;;YES, SKIP
077365 / 263140,,000000          POPJ    P,                   ;
                       ;CALL:
                       ;	MTAPE	CHN,['GODMOD'
                       ;			16
                       ;		     RECORD # (REAL, NOT OFFSET)]
                       ;	<NO LOOKUP OR ENTER OR NON-EX BLOCK>
                       ;THIS UUO ALLOWS THE USER(LOSER) TO INCLUDE AN
                       ;EXISTING BLOCK IN HIS WORD COUNT!
                       ADDBLK:
077366 / 607000,,340000          TLNN      340000             ;;FILE OPEN SOMEHOW?
077367 / 263140,,000000          POPJ    P,                   ;
153116 / 337054,,000001         SKIPG  TAC,     1(UUO)        ;
077370 / 256200,,153116          XCTR   XR,153116             ;;PICK UP LOSERS REC. NO.
077371 / 263140,,000000          POPJ    P,                   ;;AVOID CONFUSION
077372 / 261146,,000021          PUSH    P, USETP(DDB)        ;;SAVE OLD USET POINTER IN CASE HE LOSES
077373 / 270046,,000066           ADD  TAC,DOFFST(DDB)        ;;DO OFFSET
077374 / 202046,,000021         MOVEM  TAC, USETP(DDB)        ;
077375 / 260140,,077644         PUSHJ    P,077644             ;;MAKE US UNSTOPPABLE IN CASE BAD POINTER
077376 / 260140,,101044         PUSHJ    P,101044             ;;GET RETRIEVAL FOR RECORD
077377 / 254000,,077414          JRST      077414             ;;NO SUCH GROUP
077400 / 260140,,101265         PUSHJ    P,101265             ;;THE GROUP EXISTS, DOES THE BLOCK?
077401 / 322040,,077414         JUMPE  TAC,077414             ;;0 MEANS NO SUCH BLOCK
151763 / 000001,,000001                                       ;
077402 / 274140,,151763           SUB    P,151763             ;;BLOCK EXISTS, LOSE OLD USETP
077403 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;;NOW INCLUDE THIS BLOCK IN WC
077404 / 242040,,000007           LSH  TAC,000007             ;;MAKE IT WORDS
077405 / 317046,,000016          CAMG  TAC,FILLNG(DDB)        ;
077406 / 254000,,077604          JRST      077604             ;;ALREADY IN WC
077407 / 202046,,000016         MOVEM  TAC,FILLNG(DDB)        ;;UPDATE FILE LENGTH
077410 / 603000,,140000          TLNE      140000             ;;WRITING?
077411 / 661000,,000004           TLO      000004             ;;YES, MAKE SURE IT GETS WRITTEN OUT LATER
152023 / 000040,,020000                                       ;
077412 / 630000,,152023           TDZ      152023             ;;CAN'T BE EOF ANY MORE
077413 / 254000,,077604          JRST      DPOPJ1             ;
                       ADDLOS:
077414 / 262146,,000021           POP    P, USETP(DDB)        ;;NO SUCH RECORD, GET BACK OLD ONE
077415 / 254000,,077605          JRST      077605             ;;AND GIVE ERROR RETURN
                       ;CALL
                       ;	MTAPE	CHN,['GODMOD'
                       ;			17   ]
                       FILEUP:
077416 / 603000,,140000          TLNE      140000             ;;FILE OPEN?
077417 / 607000,,002004          TLNN      002004             ;;YES, ANYTHING TO DO?
077420 / 263140,,000000          POPJ    P,                   ;;NO, NO-OP
077421 / 201240,,076444         MOVEI  DAT, DCLOI             ;
077422 / 254000,,102137          JRST      102137             ;;ENTER REQUEST AND RETURN TO USER
                       ;MTAPE TO FIND OUT NUMBER OF FREE TRACKS ON A STRUCTURE
                       ;CALL
                       ;	MTAPE	CHN,['GODMOD'
                       ;			22
                       ;			ADDRESS	TO STORE RESULT]
                       TKSFRE:
077423 / 135100,,037577           LDB TAC1,037577             ;;FIND OUT THE ANSWER
077424 / 260140,,077427         PUSHJ    P,077427             ;;RESULT IN TAC
152561 / 202074,,000001         MOVEM  TAC,@     1(UUO)       ;
077425 / 256440,,152561          XCTR  XEW,152561             ;;RETURN RESULT TO THE USER
077426 / 263140,,000000          POPJ    P,                   ;
                       DSKRES:
077427 / 200042,,011747          MOVE  TAC,LSTBTB(TAC1)       ;;CALC RESOURCES FOR UNIT IN TAC1
077430 / 336102,,011733         SKIPN TAC1,SATADR(TAC1)       ;;(CLOBBERS TAC1!)
077431 / 254000,,077435          JRST      077435             ;;NO SAT, NO TRACKS!
077432 / 200102,,000000          MOVE TAC1,      (TAC1)       ;;THIS IS THE NUMBER IN USE
077433 / 275042,,000310          SUBI  TAC,000310(TAC1)       ;;MINUS MAGIC BUFFER
077434 / 325040,,037403        JUMPGE  TAC, CPOPJ             ;
                       DKRES1:
077435 / 201040,,000000         MOVEI  TAC,                   ;
077436 / 263140,,000000          POPJ    P,                   ;
                       ;MTAPE TO FIND OUT SATID OF A STRUCTURE
                       ;CALL
                       ;	MTAPE	CHN,['GODMOD'
                       ;			23
                       ;			ADDRESS	TO STORE RESULT]
                       VOLID:
077437 / 135100,,037577           LDB TAC1,037577             ;;TELL USER THE SATID
077440 / 332042,,011733         SKIPE  TAC,SATADR(TAC1)       ;
077441 / 200041,,000002          MOVE  TAC, SATID(TAC)        ;;IT SAYS HERE THERE HAS TO BE A SAT
152561 / 202074,,000001         MOVEM  TAC,@     1(UUO)       ;
077442 / 256440,,152561          XCTR  XEW,152561             ;
077443 / 263140,,000000          POPJ    P,                   ;
                       ;LOOKUP
                       DLOOK:
077444 / 621000,,200020           TLZ      200020             ;
077445 / 603000,,100000          TLNE      WRITEB             ;
077446 / 254000,,102353          JRST      102353             ;;THIS DDB IS ALREADY WRITING
077447 / 402006,,000011         SETZM      FILNAM(DDB)        ;;DISABLE RENAME.
077450 / 265640,,100375           JSP  AC1,ACCENT             ;
077451 / 336006,,000026         SKIPN      ACCNAM(DDB)        ;;WAS THE SPECIFIED NAME BLANK?
077452 / 254000,,102346          JRST      102346             ;;YES. LOSE.
077453 / 260140,,077644         PUSHJ    P, GOSET             ;
077454 / 260140,,101417         PUSHJ    P,101417             ;;MAKE SURE SAT TABLE IS IN (FOR UDP)
077455 / 265640,,100422           JSP  AC1,100422             ;;CHECK WHO'S DIDDLING FILE
077456 / 254000,,077473          JRST      077473             ;;READ ENTRY - BORROW DATA
077457 / 254000,,077470          JRST      077470             ;;WRITE ENTRY
077460 / 260140,,100536         PUSHJ    P,100536             ;;SEARCH DIRECTORY FOR FILE
077461 / 337006,,000036         SKIPG      SRCTMP(DDB)        ;
077462 / 254000,,102346          JRST      102346             ;;NOT FOUND, LOSE
077463 / 200046,,000033          MOVE  TAC,SRCEXT(DDB)        ;
077464 / 202046,,000027         MOVEM  TAC,ACCEXT(DDB)        ;
077465 / 200046,,000034          MOVE  TAC,SRCPRO(DDB)        ;
077466 / 202046,,000030         MOVEM  TAC,ACCPRO(DDB)        ;
077467 / 254000,,077506          JRST      077506             ;;GO CHECK PROTECTION.
                       DLK2:
077470 / 607100,,004000          TLNN TAC1,004000             ;;WRITING; IS THERE AN OLD FILE?
077471 / 254000,,102346          JRST      102346             ;;JUST NEW ONE, REPORT NON EX
077472 / 254000,,100425          JRST      100425             ;;THERE IS AN OLD ONE, SEEK IT
                       DLK1:
077473 / 200101,,000012          MOVE TAC1,FILEXT(TAC)        ;;READ ENTRY FOUND. - BORROW DATA
077474 / 202106,,000033         MOVEM TAC1,SRCEXT(DDB)        ;
077475 / 202106,,000027         MOVEM TAC1,ACCEXT(DDB)        ;
077476 / 200101,,000013          MOVE TAC1,FILPRO(TAC)        ;;STEAL DATA
077477 / 202106,,000034         MOVEM TAC1,SRCPRO(DDB)        ;
077500 / 202106,,000030         MOVEM TAC1,ACCPRO(DDB)        ;
077501 / 336101,,000015         SKIPN TAC1,FILLOC(TAC)        ;
077502 / 200101,,000035          MOVE TAC1,SRCLOC(TAC)        ;
077503 / 202106,,000035         MOVEM TAC1,SRCLOC(DDB)        ;
077504 / 200101,,000022          MOVE TAC1,UFDPRO(TAC)        ;
077505 / 202106,,000022         MOVEM TAC1,UFDPRO(DDB)        ;
                       DLK3:
077506 / 205240,,200000         MOVSI  DAT,200000             ;
077507 / 265640,,100532           JSP  AC1,100532             ;;CHECK READ ACCESS TO UFD
077510 / 205240,,200000         MOVSI  DAT,200000             ;;CHECK READ PROTECTION.
077511 / 265640,,100470           JSP  AC1,PROTEC             ;
077512 / 661000,,200000           TLO       READB             ;
077513 / 260140,,100456         PUSHJ    P,100456             ;;OK, ACCESS ESTABLISHED
077514 / 135240,,037577           LDB  DAT, PUNIT             ;
077515 / 333046,,000035        SKIPLE  TAC,SRCLOC(DDB)        ;;REASONABLE ADDRESS?
077516 / 313045,,011747         CAMLE  TAC,LSTBTB(DAT)        ;;IF NOT,
077517 / 254000,,102356          JRST      102356             ;;UFD HAS BAD POINTER IN IT.
077520 / 201240,,077647         MOVEI  DAT, LOOKI             ;
077521 / 260140,,102104         PUSHJ    P,102104             ;;UPDATE TIMES, GET LENTGH
077522 / 603000,,000200          TLNE      LOSBIG             ;
077523 / 254000,,102357          JRST      102357             ;;WRONG FILE FOUND AT LOC.
                       DRPT:
077524 / 201654,,000003         MOVEI  AC1,     3(UUO)        ;;END ADDRESS
077525 / 602000,,000400          TRNE      000400             ;;UNLESS DMPBIT SET
077526 / 271640,,000002          ADDI  AC1,000002             ;;THEN 2 LONGER
077527 / 554040,,000007          HLRZ  TAC,  PROG             ;
077530 / 301055,,000000          CAIL  TAC,      (AC1)        ;;ADDRESS IN LOWER?
077531 / 254000,,077547          JRST      077547             ;;ENDS IN LOWER
077532 / 606600,,400000          TRNN  UUO,400000             ;;UPPER STARTING ADDRESS?
077533 / 254000,,043211          JRST      043211             ;;NO
077534 / 135100,,037600           LDB TAC1, PSEGN             ;
077535 / 322100,,043211         JUMPE TAC1,ADRERR             ;
077536 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;
077537 / 603040,,000001          TLNE  TAC,000001             ;;WRITE PROTECTED?
077540 / 254000,,043211          JRST      043211             ;;YES, LOSE
077541 / 554042,,027120          HLRZ  TAC,JBTADR(TAC1)       ;
077542 / 305055,,400000         CAIGE  TAC,400000(AC1)        ;;END IN UPPER?
077543 / 254000,,043211          JRST      043211             ;;NO, LOSE
077544 / 550042,,027120          HRRZ  TAC,JBTADR(TAC1)       ;
077545 / 275040,,400000          SUBI  TAC,400000             ;
077546 / 254000,,077550          JRST       DRPT1             ;
                       DRPT2:
077547 / 550040,,000007          HRRZ  TAC,  PROG             ;
                       DRPT1:
077550 / 271054,,000000          ADDI  TAC,      (UUO)        ;;REPORT DATA TO USER
077551 / 261046,,000012          PUSH  TAC,FILEXT(DDB)        ;
077552 / 261046,,000013          PUSH  TAC,FILPRO(DDB)        ;
077553 / 210106,,000054          MOVN TAC1, DDLNG(DDB)        ;
077554 / 603000,,040000          TLNE      040000             ;;ARE WE GETTING INTO ALTER MODE?
077555 / 210106,,000016          MOVN TAC1,FILLNG(DDB)        ;;YES, USE HONEST FILE LENGTH!
077556 / 212106,,000016         MOVNM TAC1,FILLNG(DDB)        ;
077557 / 200646,,000066          MOVE  AC1,DOFFST(DDB)        ;
077560 / 242640,,000007           LSH  AC1,000007             ;;MAKE IT WORDS
077561 / 270100,,000015           ADD TAC1,000015             ;;REPORT ADJUSTED SIZE TO USER
077562 / 333000,,000002        SKIPLE        TAC1             ;
077563 / 400100,,000000          SETZ TAC1,                   ;;ACCOUNT FOR DOFFST BEING EOF
077564 / 207000,,000002         MOVSS        TAC1             ;
077565 / 261040,,000002          PUSH  TAC,  TAC1             ;
077566 / 200106,,000055          MOVE TAC1,DREFTM(DDB)        ;;BEGIN RPH 3-8-73
077567 / 202106,,000017         MOVEM TAC1,REFTIM(DDB)        ;;UPDATE THIS CRUFT
077570 / 602000,,000400          TRNE      DMPBIT             ;
077571 / 261040,,000002          PUSH  TAC,  TAC1             ;
077572 / 200106,,000056          MOVE TAC1,DDMPTM(DDB)        ;
077573 / 202106,,000020         MOVEM TAC1,DMPTIM(DDB)        ;
077574 / 602000,,000400          TRNE      DMPBIT             ;
077575 / 261040,,000002          PUSH  TAC,000002             ;;END RPH
                       DLOK:
077576 / 260140,,076555         PUSHJ    P, DGETL             ;
077577 / 200106,,000066          MOVE TAC1,DOFFST(DDB)        ;
077600 / 271100,,000001          ADDI TAC1,000001             ;;INIT USETP POINTER TO OFFSET
077601 / 313040,,000002         CAMLE  TAC,000002             ;;DOFFST INSIDE FILE?
077602 / 200040,,000002          MOVE  TAC,000002             ;;OK, USE DOFFST
077603 / 202046,,000021         MOVEM  TAC, USETP(DDB)        ;
                       DPOPJ1:
077604 / 350003,,000000           AOS            (P)          ;
                       DPOPJ:
077605 / 621000,,400000           TLZ       GOBIT             ;
077606 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
077607 / 700700,,077400         CONSZ   PI,077400             ;;ARE WE AT UUO LEVEL?
077610 / 263140,,000000          POPJ    P,                   ;;NO, CAN'T DO ANYTHING HERE!
077611 / 261140,,000017          PUSH    P,   AC3             ;
077612 / 200213,,024061          MOVE    J,   JOB(PID)        ;
077613 / 200744,,027320          MOVE  AC3,JBTLIN(J)          ;
151674 / 777777,,777777                                       ;
077614 / 316740,,151674          CAMN  AC3,151674             ;;DETACHED?
077615 / 254000,,077640          JRST      DPJRA3             ;
077616 / 261140,,000016          PUSH    P,   AC2             ;
077617 / 261140,,000015          PUSH    P,   AC1             ;
077620 / 205640,,200000         MOVSI  AC1,DLYBIT             ;
077621 / 205700,,400000         MOVSI  AC2,COMBIT             ;
077622 / 700600,,001004          CONO   PI,001004             ;;KEEP SCANNER OUT.
077623 / 616657,,032347          TDNN  AC1,TTYTAB(AC3)        ;;SKIP IF COMMAND DELAYED
077624 / 254000,,077642          JRST      077642             ;;NO DELAYED COMMAND
077625 / 412657,,032347        ANDCAM  AC1,TTYTAB(AC3)        ;;TURN OFF DELAY BIT
077626 / 612717,,032347          TDNE  AC2,TTYTAB(AC3)        ;;ANOTHER COMMAND ALREADY IN?
077627 / 254000,,077642          JRST      077642             ;;YES.
077630 / 350000,,026105           AOS      026105             ;;COUNT ANOTHER TTY NEED SCANNING
077631 / 436717,,032347          IORM  AC2,TTYTAB(AC3)        ;;TURN ON COMMAND BIT
077632 / 260140,,137150         PUSHJ    P,COMBCK             ;
077633 / 260140,,137063         PUSHJ    P,137063             ;;MAKE SURE ALL IS WELL
077634 / 700600,,002004          CONO   PI, SCNON             ;
077635 / 260140,,046124         PUSHJ    P,WSCHED             ;
                       DPJRST:
077636 / 262140,,000015           POP    P,   AC1             ;
077637 / 262140,,000016           POP    P,   AC2             ;
                       DPJRA3:
077640 / 262140,,000017           POP    P,   AC3             ;
077641 / 263140,,000000          POPJ    P,                   ;
                       DPJRSC:
077642 / 700600,,002004          CONO   PI, SCNON             ;
077643 / 254000,,077636          JRST      DPJRST             ;
                       GOSET:
077644 / 661000,,400000           TLO       GOBIT             ;
                       DSIOS:
077645 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
077646 / 263140,,000000          POPJ    P,                   ;
                       ;*** INTERRUPT SUBR ***
                       LOOKI:
077647 / 200046,,000035          MOVE  TAC,SRCLOC(DDB)        ;;GET RTVL INTO DDB
077650 / 202046,,000015         MOVEM  TAC,FILLOC(DDB)        ;
077651 / 260140,,101177         PUSHJ    P,NEWFIL             ;
077652 / 260140,,101205         PUSHJ    P,GETBLK             ;
077653 / 260140,,101162         PUSHJ    P,AUDCHK             ;
077654 / 602000,,000400          TRNE      000400             ;;MAKE THIS TRNE IF REFTIM REQUIRED
077655 / 263140,,000000          POPJ    P,                   ;
077656 / 200100,,024634          MOVE TAC1,024634             ;;USE DATE ONLY FOR REFERENCE TIME
077657 / 317106,,000055          CAMG TAC1,DREFTM(DDB)        ;;DON'T UPDATE MORE THAN ONCE A DAY
077660 / 263140,,000000          POPJ    P,                   ;
077661 / 336000,,017714         SKIPN      017714             ;;IN MAINTMODE, DON'T WRITE 
077662 / 332000,,000567         SKIPE      MAINTM             ;
077663 / 263140,,000000          POPJ    P,                   ;
077664 / 202106,,000017         MOVEM TAC1,REFTIM(DDB)        ;
077665 / 202106,,000055         MOVEM TAC1,DREFTM(DDB)        ;
077666 / 202100,,002561         MOVEM TAC1,002561             ;
151642 / 777740,,002553           XWD -40,SYSBUF              ;
077667 / 200040,,151642          MOVE  TAC,151642             ;
077670 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;;DON'T REWRITE WHOLE BLK.
077671 / 135100,,037577           LDB TAC1,037577             ;;UDP?
077672 / 322100,,075756         JUMPE TAC1,075756             ;;NO.
077673 / 602000,,600000          TRNE      600000             ;
077674 / 263140,,000000          POPJ    P,                   ;;ERRORS ALREADY. DON'T REWRITE
077675 / 260140,,075756         PUSHJ    P,RERITE             ;
152037 / 000200,,600000                                       ;
077676 / 630000,,152037           TDZ      152037             ;;DON'T REPORT WRITE LOCK.
077677 / 263140,,000000          POPJ    P,                   ;
                       ;ENTER
                       DENTER:
077700 / 265640,,100375           JSP  AC1,ACCENT             ;
077701 / 336006,,000026         SKIPN      ACCNAM(DDB)        ;
077702 / 254000,,102346          JRST      102346             ;;BLANK NAME LOSES
077703 / 603000,,200000          TLNE      200000             ;;HAS LOOKUP BEEN DONE?
077704 / 254000,,100062          JRST      100062             ;;YES, IS ALTER
077705 / 402006,,000011         SETZM      FILNAM(DDB)        ;;DISABLE RENAME.
077706 / 476006,,000036         SETOM      SRCTMP(DDB)        ;;INITIALIZE FLAG
077707 / 265640,,100422           JSP  AC1,100422             ;;SEE WHO'S LOOKING
077710 / 254000,,100046          JRST      100046             ;;READ - SAVE DATA (XCTED IN ACCESS)
077711 / 254000,,102351          JRST      102351             ;;WRITE - LOSE (XCTED IN ACCESS)
077712 / 661000,,500020           TLO      500020             ;
077713 / 260140,,100456         PUSHJ    P,100456             ;;ACCESS OURS (ACCXXX → FILXXX)
077714 / 260140,,101417         PUSHJ    P,101417             ;;MAKE SURE SAT TABLE IN (FOR UDP)
077715 / 337006,,000036         SKIPG      SRCTMP(DDB)        ;;WAS SOMEONE READING?
077716 / 260140,,100536         PUSHJ    P,100536             ;;NO, GET DATA
077717 / 621000,,104000           TLZ      104000             ;;TURN OFF IN CASE PROTECTION CHECK
077720 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;   FAILS
077721 / 205240,,100000         MOVSI  DAT,100000             ;
077722 / 265640,,100532           JSP  AC1,UPROTC             ;
077723 / 337006,,000036         SKIPG      SRCTMP(DDB)        ;;THIS NAME IN USE?
077724 / 254000,,077734          JRST      077734             ;;NO FILE FOUND
077725 / 205240,,100000         MOVSI  DAT,100000             ;;FOUND, CHECK PROTECTION.
077726 / 265640,,100470           JSP  AC1,100470             ;;WRITE ACCESS REQUIRED.
153055 / 000006,,000013                                       ;
153055 / 331106,,000013 POINT 9,06000013,8                    ;
077727 / 135640,,153055           LDB  AC1,153055             ;
077730 / 326640,,077733         JUMPN  AC1,077733             ;;JUMP IF USER SPECIFIED PROTECTION
153056 / 000006,,000034                                       ;
153056 / 331106,,000034 POINT 9,06000034,8                    ;
077731 / 135640,,153056           LDB  AC1,153056             ;;USE OLD FILE'S PROT
153055 / 000006,,000013                                       ;
153055 / 331106,,000013 POINT 9,06000013,8                    ;
077732 / 137640,,153055           DPB  AC1,153055             ;;...AS NEW FILE'S PROTECTION
                       DENT1A:
077733 / 665000,,104000          TLOA      104000             ;;INDICATE CHANGE UFD AT CLOSE.
                       DENT1:
077734 / 665000,,100000          TLOA      100000             ;;NEW NAME. PUT IN UFD NOW.
077735 / 334106,,000033         SKIPA TAC1,SRCEXT(DDB)        ;;USE OLD CREATION DATE AS DEFAULT
077736 / 200100,,024634          MOVE TAC1,024634             ;;USE CURRENT DATE AS DEFAULT
152115 / 000006,,000027                                       ;
152115 / 001706,,000027 POINT 15,06000027,35                  ;
077737 / 135040,,152115           LDB  TAC,152115             ;;BELIEVE ANY CREATE DATE
077740 / 326040,,077743         JUMPN  TAC,077743             ;;USER TELLS US.
077741 / 200040,,000002          MOVE  TAC,  TAC1             ;
152115 / 000006,,000027                                       ;
152115 / 001706,,000027 POINT 15,06000027,35                  ;
077742 / 137040,,152115           DPB  TAC,152115             ;
                       DENT4:
152114 / 000006,,000012                                       ;
152114 / 001706,,000012 POINT 15,06000012,35                  ;
077743 / 137040,,152114           DPB  TAC,152114             ;
                       DENT2:
077744 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
077745 / 602000,,000400          TRNE      DMPBIT             ;
077746 / 254000,,077775          JRST      077775             ;;DON'T INIT TIME IF DUMPER
077747 / 402006,,000056         SETZM      DDMPTM(DDB)        ;;NEW FILE NEVER DUMPED.
077750 / 402006,,000020         SETZM      DMPTIM(DDB)        ;
077751 / 200100,,024634          MOVE TAC1,024634             ;;REFERENCE DATE
077752 / 202106,,000017         MOVEM TAC1,REFTIM(DDB)        ;
077753 / 202106,,000055         MOVEM TAC1,DREFTM(DDB)        ;
077754 / 260140,,075220         PUSHJ    P,075220             ;;GET DATE AND TIME LAST WRITTEN
152442 / 000006,,000027                                       ;
152442 / 170306,,000027 POINT 3,06000027,20                   ;
077755 / 137040,,152442           DPB  TAC,152442             ;;STORE EXTRA BITS
152441 / 000006,,000012                                       ;
152441 / 170306,,000012 POINT 3,06000012,20                   ;
077756 / 137040,,152441           DPB  TAC,152441             ;
077757 / 205040,,777000         MOVSI  TAC,777000             ;;USE SPECIFIED PROTECTION
077760 / 404046,,000013           AND  TAC,FILPRO(DDB)        ;;GET PROTECTION THUS FAR
077761 / 326040,,077767         JUMPN  TAC,077767             ;;JUMP IF THERE'S NON-ZERO ALREADY
077762 / 603000,,004000          TLNE      004000             ;;SKIP IF NEW FILE.
077763 / 254000,,077767          JRST      077767             ;;REPLACING OLD FILE - KEEP 0 PROT
                       ;HERE WE USE UFD'S DEFAULT PROTECTION WORD FOR PROTECTION OF THIS NEW FILE
077764 / 201040,,777000         MOVEI  TAC,777000             ;
077765 / 404046,,000023           AND  TAC,UFDPR1(DDB)        ;;DEFAULT PROTECTION VALUE FROM UFD
077766 / 205041,,000000         MOVSI  TAC,      (TAC)        ;
                       DENT2A:
077767 / 434100,,000001            OR TAC1,   TAC             ;
152776 / 000000,,000002                                       ;
152776 / 270400,,000002 POINT 4,00000002,12                   ;
077770 / 137000,,152776           DPB      152776             ;;DATA MODE
077771 / 202106,,000013         MOVEM TAC1,FILPRO(DDB)        ;
077772 / 202106,,000030         MOVEM TAC1,ACCPRO(DDB)        ;
077773 / 205000,,000004         MOVSI      HDRDIF             ;
077774 / 437006,,000002          IORB      DEVIOS(DDB)        ;;MAKE SURE DATE GOES OUT EVENTUALLY
                       DENT3:
077775 / 603000,,040000          TLNE      ALTERB             ;
077776 / 254000,,100057          JRST      100057             ;;PUT OUT DATE IF ALTER MODE
077777 / 135040,,037577           LDB  TAC, PUNIT             ;
100000 / 326040,,100004         JUMPN  TAC,DENT3A             ;
100001 / 200040,,007256          MOVE  TAC,007256             ;;SEE IF ANY SPACE LEFT
100002 / 303040,,130527         CAILE  TAC,130527             ;;SOFT STOP WITH 200K DISK LEFT.
100003 / 254000,,102372          JRST      102372             ;;GIVE NO ROOM MESSAGE. ERROR RETURN
                       DENT3A:
100004 / 260140,,101353         PUSHJ    P,101353             ;;GET SPACE FOR NEW FILE
100005 / 202046,,000015         MOVEM  TAC,FILLOC(DDB)        ;
100006 / 200046,,000053          MOVE  TAC, DDLOC(DDB)        ;;UFD LOCN FOR DIRINS
100007 / 202046,,000035         MOVEM  TAC,SRCLOC(DDB)        ;
100010 / 607000,,004000          TLNN      NTRUFD             ;
100011 / 260140,,100653         PUSHJ    P,100653             ;;NEW FILE TO UFD NOW.
100012 / 402006,,000016         SETZM      FILLNG(DDB)        ;
100013 / 402006,,000062         SETZM      DQINFO(DDB)        ;;INITIALIZE MAGIC FILE INFO
100014 / 402006,,000063         SETZM      000063(DDB)        ;
100015 / 554046,,000012          HLRZ  TAC,FILEXT(DDB)        ;
100016 / 302040,,654644          CAIE  TAC,UFDEXT             ;
100017 / 254000,,100026          JRST      100026             ;;NOT ENTERING A UFD
100020 / 200046,,000014          MOVE  TAC,FILPPN(DDB)        ;
100021 / 312040,,037615          CAME  TAC,SYSPPN             ;
100022 / 254000,,100026          JRST      NENUFD             ;
100023 / 402006,,000064         SETZM      000064(DDB)        ;;CLEAR WORDS WHEN ENTERING A UFD
100024 / 402006,,000065         SETZM      000065(DDB)        ;
100025 / 254000,,100032          JRST      WENUFD             ;
                       NENUFD:
100026 / 200044,,030142          MOVE  TAC,JOBNAM(J)          ;;UPDATE PPN AND JOB OF WRITER
100027 / 202046,,000064         MOVEM  TAC,000064(DDB)        ;
100030 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;
100031 / 202046,,000065         MOVEM  TAC,000065(DDB)        ;
                       WENUFD:
100032 / 402006,,000066         SETZM      DOFFST(DDB)        ;;INIT OFFSET
100033 / 260140,,101152         PUSHJ    P,AUDINF             ;
100034 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;
100035 / 260140,,101200         PUSHJ    P,NEWFI1             ;
100036 / 260140,,101103         PUSHJ    P,101103             ;;SET UP RTVL
100037 / 201240,,101125         MOVEI  DAT,SPREAD             ;
100040 / 607000,,004000          TLNN      004000             ;;IF NEW FILE,
100041 / 260140,,102104         PUSHJ    P,102104             ;;PUT RTVL OUT.
100042 / 135040,,037577           LDB  TAC, PUNIT             ;
100043 / 602000,,600000          TRNE      600000             ;;UDP IN WRITE LOCK?
100044 / 326040,,101327         JUMPN  TAC,101327             ;;REPORT DATA TO USER.
100045 / 254000,,077524          JRST        DRPT             ;
                       DENT0:
100046 / 200101,,000013          MOVE TAC1,FILPRO(TAC)        ;;READER FOUND, SAVE PROTECTION.
100047 / 202106,,000034         MOVEM TAC1,SRCPRO(DDB)        ;
100050 / 200101,,000012          MOVE TAC1,FILEXT(TAC)        ;
100051 / 542106,,000033          HRRM TAC1,SRCEXT(DDB)        ;
100052 / 200101,,000022          MOVE TAC1,UFDPRO(TAC)        ;
100053 / 202106,,000022         MOVEM TAC1,UFDPRO(DDB)        ;
100054 / 201100,,000001         MOVEI TAC1,000001             ;;SET FLAG: ITEM FOUND
100055 / 202106,,000036         MOVEM TAC1,SRCTMP(DDB)        ;
100056 / 254000,,100425          JRST      100425             ;;KEEP LOOKING FOR WRITERS
                       ENTREN:
100057 / 260140,,100172         PUSHJ    P,100172             ;;WRITE DATE INTO UFD
100060 / 255000,,000000          JFCL                         ;
100061 / 254000,,077524          JRST      077524             ;;RETURN LOOKUP INFO
                       DALTER:
100062 / 663000,,040000          TLOE      ALTERB             ;
100063 / 254000,,102351          JRST      102351             ;;ALREADY ALTERING
100064 / 200046,,000011          MOVE  TAC,FILNAM(DDB)        ;;SAME FILE?
100065 / 312046,,000026          CAME  TAC,ACCNAM(DDB)        ;
100066 / 254000,,102354          JRST      EANAME             ;
100067 / 510046,,000012          HLLZ  TAC,FILEXT(DDB)        ;
100070 / 510106,,000027          HLLZ TAC1,ACCEXT(DDB)        ;
100071 / 312040,,000002          CAME  TAC,  TAC1             ;
100072 / 254000,,102354          JRST      EANAME             ;
100073 / 200706,,000014          MOVE  AC2,FILPPN(DDB)        ;
100074 / 312706,,000031          CAME  AC2,ACCPPN(DDB)        ;
100075 / 254000,,102354          JRST      EANAME             ;
100076 / 205240,,100000         MOVSI  DAT,100000             ;
100077 / 265640,,100532           JSP  AC1,100532             ;;SEE IF UFD ALLOWS THIS ACCESS
100100 / 205240,,100000         MOVSI  DAT,100000             ;;NEEDS WRITE ACCESS
100101 / 200746,,000013          MOVE  AC3,FILPRO(DDB)        ;
100102 / 265640,,100472           JSP  AC1,PROTEK             ;
100103 / 265640,,100422           JSP  AC1,100422             ;;IS ANYONE USING FILE?
100104 / 254000,,102351          JRST      102351             ;;IF SO, LOSE
100105 / 254000,,102351          JRST      EFWRIT             ;
100106 / 254000,,077744          JRST      077744             ;;STORE IOS & SKIP RETURN.
                       ;RENAME
                       DRENAM:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
100107 / 612000,,152073          TDNE      152073             ;
100110 / 260140,,046160         PUSHJ    P,046160             ;;FINISH CURRENT BUSINESS
100111 / 336006,,000011         SKIPN      FILNAM(DDB)        ;
100112 / 254000,,102353          JRST      102353             ;;LOSE IF NO ACCESSED FILE.
100113 / 603000,,014000          TLNE      014000             ;;IF FILE TO BE DELETED,
                       ;OR OVERWRITING AND NO CLOSE
100114 / 254000,,102346          JRST      102346             ;;CAN'T RENAME.
100115 / 607000,,200000          TLNN      200000             ;;IF READING, TEST UNIQUE ACCESS.
100116 / 254000,,100123          JRST      100123             ;;OTHERWISE, ALREADY UNIQUE.
152522 / 200714,,000000          MOVE  AC2,      (UUO)        ;
100117 / 256200,,152522          XCTR   XR,152522             ;;NEW FILE NAME
100120 / 265640,,100422           JSP  AC1,100422             ;;IS ANYONE ELSE RENAMING FILE?
100121 / 326700,,102351         JUMPN  AC2,102351             ;;LOSE UNLESS DELETING
100122 / 255000,,000000          JFCL                         ;
                       DRE0:
100123 / 260140,,077416         PUSHJ    P,077416             ;;FORCE RETRIEVAL SO WE DON'T MUNG IT
100124 / 260140,,077644         PUSHJ    P, GOSET             ;
100125 / 602000,,000400          TRNE      DMPBIT             ;
100126 / 254000,,100131          JRST      100131             ;;DON'T INIT TIME IF DUMPER
100127 / 200100,,024634          MOVE TAC1,024634             ;;GET REFERENCE DATE
100130 / 202106,,000017         MOVEM TAC1,REFTIM(DDB)        ;;UPDATE REFTIM FOR RANDOM LOSER
                       DRE0A:
100131 / 265640,,100375           JSP  AC1,100375             ;;JUST US. PICK UP UUO ARGS.
100132 / 336046,,000026         SKIPN  TAC,ACCNAM(DDB)        ;
100133 / 254000,,100174          JRST      100174             ;;DELETING, CHECK WRITE PROT
100134 / 200046,,000030          MOVE  TAC,ACCPRO(DDB)        ;
100135 / 430046,,000013           XOR  TAC,FILPRO(DDB)        ;;PROTECTION CHANGE?
100136 / 607040,,777000          TLNN  TAC,777000             ;
100137 / 254000,,100160          JRST      100160             ;;NO CHANGE
100140 / 200706,,000014          MOVE  AC2,FILPPN(DDB)        ;
100141 / 312700,,037615          CAME  AC2,SYSPPN             ;
100142 / 254000,,100153          JRST      100153             ;;NOT ACCESS TO A UFD
100143 / 200706,,000011          MOVE  AC2,FILNAM(DDB)        ;;UFD ACCESS.  TO MFD?
100144 / 316700,,037615          CAMN  AC2,SYSPPN             ;
100145 / 254000,,102350          JRST      102350             ;;CHANGE PROT OF MFD NOT ALLOWED
100146 / 200644,,027420          MOVE  AC1,JBTPRV(J)          ;
100147 / 607640,,100000          TLNN  AC1,100000             ;;PRIVILEGED?
100150 / 316704,,027720          CAMN  AC2,PRJPRG(J)          ;;NO. BUT ACCESS TO OWN UFD OK
100151 / 254000,,100160          JRST        DRE1             ;
100152 / 254000,,102350          JRST       EPROT             ;
                       DRE0B:
100153 / 205240,,400000         MOVSI  DAT,400000             ;
100154 / 265640,,100533           JSP  AC1,100533             ;;LEGAL TO CHANGE IN THIS UFD?
100155 / 205240,,400000         MOVSI  DAT,400000             ;
100156 / 200746,,000013          MOVE  AC3,FILPRO(DDB)        ;
100157 / 265640,,100472           JSP  AC1,100472             ;;LEGAL TO CHANGE THIS FILE?
                       DRE1:
100160 / 200046,,000011          MOVE  TAC,FILNAM(DDB)        ;
100161 / 312046,,000026          CAME  TAC,ACCNAM(DDB)        ;
100162 / 254000,,100174          JRST      100174             ;;NAME CHANGE.
100163 / 510106,,000012          HLLZ TAC1,FILEXT(DDB)        ;
100164 / 430106,,000027           XOR TAC1,ACCEXT(DDB)        ;
100165 / 603100,,777777          TLNE TAC1,777777             ;;EXT CHANGE?
100166 / 254000,,100174          JRST       DRNMC             ;
100167 / 200106,,000014          MOVE TAC1,FILPPN(DDB)        ;
100170 / 312106,,000031          CAME TAC1,ACCPPN(DDB)        ;;NEW PROJ.-PROG?
100171 / 254000,,100174          JRST      100174             ;;YES, NEW PPN
                       ALTREN:
100172 / 260140,,100536         PUSHJ    P,100536             ;;LITTLE OR NO CHANGE. GET RTVL IN.
100173 / 254000,,100222          JRST        DRE2             ;
                       DRNMC:
100174 / 205240,,100000         MOVSI  DAT,100000             ;;NAME CHANGE REQUIRES WRITE ACCESS
100175 / 200706,,000014          MOVE  AC2,FILPPN(DDB)        ;
100176 / 265640,,100533           JSP  AC1,100533             ;;UFD ALLOWS WRITE ACCESS?
100177 / 205240,,100000         MOVSI  DAT,100000             ;
100200 / 200746,,000013          MOVE  AC3,FILPRO(DDB)        ;
100201 / 265640,,100472           JSP  AC1,100472             ;;FILE ALLOWS WRITE ACCESS?
100202 / 322040,,100264         JUMPE  TAC,100264             ;;0 = DELETE.
100203 / 265640,,100422           JSP  AC1,100422             ;;NEW NAME; SEE IF IN USE.
100204 / 254000,,102352          JRST      EDNAME             ;
100205 / 254000,,102352          JRST      102352             ;;YES, LOSE.
100206 / 661000,,020000           TLO      020000             ;;ESTABLISH UNIQUE ACCESS NOW!
100207 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
100210 / 200746,,000022          MOVE  AC3,UFDPRO(DDB)        ;;THIS GETS CLOBBERED BY FILSRC
100211 / 202746,,000023         MOVEM  AC3,UFDPR1(DDB)        ;
100212 / 260140,,100536         PUSHJ    P,100536             ;;SEE IF IN DIRECTORY.
100213 / 621000,,020000           TLZ      020000             ;;IN CASE OF ACCIDENT, RELEASE ACCESS
100214 / 200746,,000023          MOVE  AC3,UFDPR1(DDB)        ;;GET BACK PROTECTION OF SOURCE UFD
100215 / 250746,,000022          EXCH  AC3,UFDPRO(DDB)        ;;DESTINATION UFD PROTECTION IN AC3
100216 / 333046,,000036        SKIPLE  TAC,SRCTMP(DDB)        ;;DOES FILE NAME EXIST?
100217 / 254000,,102352          JRST      102352             ;;FILE NAME IS IN USE. (STORES IOS)
100220 / 606000,,000400          TRNN      DMPBIT             ;
100221 / 402006,,000020         SETZM      DMPTIM(DDB)        ;;CLEAR DUMP DATE, UNLESS DUMPER
                       DRE2:
100222 / 661000,,020000           TLO      020000             ;;KEEP HACKERS OUT WHILE...
100223 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;CHANGING THINGS.
100224 / 200046,,000053          MOVE  TAC, DDLOC(DDB)        ;;POINTS TO DESTINATION UFD ALWAYS
100225 / 202046,,000035         MOVEM  TAC,SRCLOC(DDB)        ;;TELL DIRSRC WHERE TO LOOK.
100226 / 200046,,000031          MOVE  TAC,ACCPPN(DDB)        ;;COMPARE PPN
100227 / 316046,,000014          CAMN  TAC,FILPPN(DDB)        ;
100230 / 254000,,100254          JRST      100254             ;;SAME PPN, CHANGE 1 UFD
100231 / 205240,,100000         MOVSI  DAT,100000             ;;REQUIRES WRITE ACCESS TO OTHER UFD
100232 / 200706,,000031          MOVE  AC2,ACCPPN(DDB)        ;;GET PPN OF DESTINATION. AC3 SETUP
100233 / 265640,,100474           JSP  AC1,100474             ;;SEE IF ACCESS ALLOWED.
100234 / 200046,,000012          MOVE  TAC,FILEXT(DDB)        ;;COPY CREATION DATE FROM RETRIEVAL
152115 / 000006,,000027                                       ;
152115 / 001706,,000027 POINT 15,06000027,35                  ;
100235 / 137040,,152115           DPB  TAC,152115             ;;INTO USERS VARIABLES
                       ;(WILL BE COPIED BACK LATER)
100236 / 602040,,700000          TRNE  TAC,700000             ;;CHECK THIS PART OF DATE
100237 / 254000,,100250          JRST      100250             ;;USER IS SPECIFYING DATE & TIME
100240 / 200046,,000030          MOVE  TAC,ACCPRO(DDB)        ;
152067 / 000777,,777777                                       ;
100241 / 612040,,152067          TDNE  TAC,152067             ;;ANY DATE AND TIME?
100242 / 254000,,100250          JRST      100250             ;;YES, USE IT
100243 / 200046,,000013          MOVE  TAC,FILPRO(DDB)        ;;NO, USE THOSE FROM RETRIEVAL
100244 / 621040,,777000           TLZ  TAC,777000             ;;CLEAR PROT.
100245 / 436046,,000030          IORM  TAC,ACCPRO(DDB)        ;
152441 / 000006,,000012                                       ;
152441 / 170306,,000012 POINT 3,06000012,20                   ;
100246 / 135040,,152441           LDB  TAC,152441             ;
152442 / 000006,,000027                                       ;
152442 / 170306,,000027 POINT 3,06000027,20                   ;
100247 / 137040,,152442           DPB  TAC,152442             ;
                       DRE3:
100250 / 260140,,100653         PUSHJ    P,100653             ;;CHANGE 2 UFD'S. INSERT NEW
100251 / 201406,,000011         MOVEI  TEM,FILNAM(DDB)        ;
100252 / 260140,,100550         PUSHJ    P,100550             ;;FIND OLD UFD
151756 / 000000,,100366                                       ;
100253 / 334240,,151756         SKIPA  DAT,151756             ;;AND REMOVE OUR ENTRY
                       DREC1:
100254 / 201240,,100334         MOVEI  DAT,100334             ;;CHANGE 1 UFD ONLY
100255 / 200646,,000016          MOVE  AC1,FILLNG(DDB)        ;
100256 / 303640,,144000         CAILE  AC1,144000             ;
100257 / 254000,,100262          JRST        DRE8             ;
100260 / 260140,,102104         PUSHJ    P,QEWAIT             ;
100261 / 254000,,100263          JRST        DRE7             ;
                       DRE8:
100262 / 260140,,102136         PUSHJ    P,NEWAIT             ;
                       DRE7:
100263 / 625000,,020000          TLZA      020000             ;;SEE US SAVE A WORD OF CODE.
                       DRDEL:
100264 / 260140,,076405         PUSHJ    P,076405             ;;ARRANGE TO DELETE FILE.
100265 / 135040,,037577           LDB  TAC, PUNIT             ;
100266 / 602000,,600000          TRNE      600000             ;;WRITE ERROR?
100267 / 326040,,101327         JUMPN  TAC,101327             ;;LOSE. WRITE LOCKED UDP
100270 / 254000,,077604          JRST      077604             ;;RETURN TO USER
                       ;***INTERRUPT LEVEL SUBRS***
                       DRAUFX:
100271 / 350000,,012227           AOS      DRAUFO             ;
100272 / 263140,,000000          POPJ    P,                   ;
                       DRAUFD:
100273 / 336046,,000011         SKIPN  TAC,FILNAM(DDB)        ;;FIND ENTRY FOR OLD NAME
100274 / 254000,,100271          JRST      100271             ;;NULL NAME? RETURN NO FILE FOUND.
100275 / 202046,,000032         MOVEM  TAC,SRCNAM(DDB)        ;;(UFD WAS FOUND BY FILSRC)
100276 / 200046,,000012          MOVE  TAC,FILEXT(DDB)        ;
100277 / 512046,,000033         HLLZM  TAC,SRCEXT(DDB)        ;
100300 / 260140,,100727         PUSHJ    P,100727             ;;FIND UFD ENTRY
100301 / 337006,,000036         SKIPG      SRCTMP(DDB)        ;
100302 / 254000,,100271          JRST      100271             ;;NO OLD FILE FOUND!
100303 / 200046,,000026          MOVE  TAC,ACCNAM(DDB)        ;;CHANGE IT
100304 / 202042,,002613         MOVEM  TAC,002613(TAC1)       ;;(ALSO USED FOR DELETE)
100305 / 200046,,000027          MOVE  TAC,ACCEXT(DDB)        ;
100306 / 502042,,002614          HLLM  TAC,002614(TAC1)       ;
100307 / 200042,,002614          MOVE  TAC,002614(TAC1)       ;;NOW COPY CREATION DATE BACK
152115 / 000006,,000027                                       ;
152115 / 001706,,000027 POINT 15,06000027,35                  ;
100310 / 137040,,152115           DPB  TAC,152115             ;;RPH/DATE75
152442 / 000006,,000027                                       ;
152442 / 170306,,000027 POINT 3,06000027,20                   ;
100311 / 135400,,152442           LDB  TEM,152442             ;;GET DATE
100312 / 200046,,000030          MOVE  TAC,ACCPRO(DDB)        ;;AND TIME
152067 / 000777,,777777                                       ;
100313 / 616040,,152067          TDNN  TAC,152067             ;;DID HE SPECIFY ANY?
100314 / 322400,,100316         JUMPE  TEM,100316             ;;CHECK IT ALL
100315 / 254000,,100323          JRST      100323             ;;USER SPECIFYING DATE AND TIME
                       UOLDAT:
152441 / 000006,,000012                                       ;
152441 / 170306,,000012 POINT 3,06000012,20                   ;
100316 / 135400,,152441           LDB  TEM,152441             ;;COPY 3 EXTRA BITS
152442 / 000006,,000027                                       ;
152442 / 170306,,000027 POINT 3,06000027,20                   ;
100317 / 137400,,152442           DPB  TEM,152442             ;
100320 / 200046,,000013          MOVE  TAC,FILPRO(DDB)        ;;NOW REST OF DATE AND TIME
152127 / 000006,,000030                                       ;
152127 / 002706,,000030 POINT 23,06000030,35                  ;
100321 / 137040,,152127           DPB  TAC,152127             ;
100322 / 200046,,000030          MOVE  TAC,ACCPRO(DDB)        ;
                       UNEWDA:
152440 / 000002,,002614                                       ;
152440 / 170302,,002614 POINT 3,02002614,20                   ;
100323 / 137400,,152440           DPB  TEM,152440             ;;STORE BITS IN UFD ENTRY
100324 / 202042,,002615         MOVEM  TAC,002615(TAC1)       ;;AND THE REST TOO
100325 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;;NEW FILE LOCATION.
100326 / 250042,,002616          EXCH  TAC,002616(TAC1)       ;;OLD ONE USED BY CLOSE OUTPUT.
100327 / 202046,,000035         MOVEM  TAC,SRCLOC(DDB)        ;
                       REWRIT:
100330 / 201040,,000106         MOVEI  TAC,000106             ;
100331 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
100332 / 260140,,102316         PUSHJ    P,102316             ;;WRITE IT BACK OUT.
100333 / 263140,,000000          POPJ    P,                   ;
                       DRINT:
100334 / 260140,,100273         PUSHJ    P,DRAUFD             ;
                       DRINT1:
100335 / 200046,,000012          MOVE  TAC,FILEXT(DDB)        ;
100336 / 260140,,100457         PUSHJ    P,100457             ;;UPDATE NAME.
100337 / 542046,,000012          HRRM  TAC,FILEXT(DDB)        ;;RESTORE TIME
100340 / 200046,,000015          MOVE  TAC,FILLOC(DDB)        ;;PREPARE TO SPREAD IT
100341 / 260140,,101177         PUSHJ    P,NEWFIL             ;
                       DRINL:
100342 / 260140,,101231         PUSHJ    P,101231             ;;WRITE NEW NAME OVER FILE
100343 / 607000,,040000          TLNN      040000             ;;ARE WE ENTERING R-A MODE,
100344 / 254000,,100357          JRST      100357             ;;UPDATE JOB AND PPN OF CULPRIT
100345 / 554046,,000012          HLRZ  TAC,FILEXT(DDB)        ;;EXCEPT FOR UFDS
100346 / 302040,,654644          CAIE  TAC,UFDEXT             ;
100347 / 254000,,100353          JRST      DRINL1             ;
100350 / 200046,,000014          MOVE  TAC,FILPPN(DDB)        ;
100351 / 316040,,037615          CAMN  TAC,SYSPPN             ;
100352 / 254000,,100357          JRST      DRINL2             ;
                       DRINL1:
100353 / 200044,,030142          MOVE  TAC,JOBNAM(J)          ;
100354 / 202046,,000064         MOVEM  TAC,000064(DDB)        ;
100355 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;
100356 / 202046,,000065         MOVEM  TAC,000065(DDB)        ;
                       DRINL2:
100357 / 260140,,101152         PUSHJ    P,101152             ;;COPY NEW INFO IN RETRIEVAL AREA
100360 / 260140,,101125         PUSHJ    P,SPREAD             ;
100361 / 336006,,000060         SKIPN      DNXTGP(DDB)        ;
100362 / 263140,,000000          POPJ    P,                   ;;END FILE, RETURN
100363 / 201040,,001100         MOVEI  TAC,RCPGRP             ;
100364 / 272046,,000021          ADDM  TAC, USETP(DDB)        ;
100365 / 254000,,100342          JRST       DRINL             ;
                       ; WE GET HERE TO DELETE ENTRY IN OLD UFD
                       ; PPN CHANGE ONLY
                       ; ENTRY HAS ALREADY (SUPPOSEDLY) BEEN INSERTED IN NEW UFD
                       DR2INT:
100366 / 260140,,100727         PUSHJ    P,100727             ;;FIND ENTRY IN OLD UFD
100367 / 337006,,000036         SKIPG      SRCTMP(DDB)        ;;IS IT REALLY THERE?
100370 / 254000,,100271          JRST      100271             ;;NO, LOSE LOSE
100371 / 402002,,002613         SETZM      002613(TAC1)       ;;DELETE ENTRY IN UFD
100372 / 402002,,002614         SETZM      002614(TAC1)       ;
100373 / 260140,,100330         PUSHJ    P,REWRIT             ;
100374 / 254000,,100335          JRST      100335             ;;SPREAD RETRIEVAL
                       ;FILE ACCESS CONTROL.
                       ACCENT:
100375 / 200213,,024061          MOVE    J,   JOB(PID)        ;
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
100376 / 256200,,152455          XCTR   XR,152455             ;;NAME
100377 / 202046,,000026         MOVEM  TAC,ACCNAM(DDB)        ;
152456 / 200054,,000001          MOVE  TAC,  UEXT(UUO)        ;
100400 / 256200,,152456          XCTR   XR,152456             ;;EXT
100401 / 202046,,000027         MOVEM  TAC,ACCEXT(DDB)        ;
152457 / 200054,,000002          MOVE  TAC,  UPRO(UUO)        ;
100402 / 256200,,152457          XCTR   XR,152457             ;;PROT
100403 / 202046,,000030         MOVEM  TAC,ACCPRO(DDB)        ;
153106 / 336054,,000003         SKIPN  TAC,  UPPN(UUO)        ;
100404 / 256200,,153106          XCTR   XR,153106             ;;PPN
100405 / 332044,,030020         SKIPE  TAC,DSKPPN(J)          ;;PICK UP DISK ALIAS PPN IF ANY
100406 / 304000,,000000          CAIA                         ;
                       ;FTDSKPPN
100407 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;;USE USER'S PPN IF BLANK
100410 / 603300,,000100          TLNE  DDB,000100             ;;SYS?
100411 / 200040,,037617          MOVE  TAC,037617             ;;YES, USE CUSP PPN
100412 / 202046,,000031         MOVEM  TAC,ACCPPN(DDB)        ;
100413 / 606000,,000400          TRNN      DMPBIT             ;
100414 / 254015,,000000          JRST            (AC1)        ;
152461 / 200054,,000004          MOVE  TAC,     4(UUO)        ;
100415 / 256200,,152461          XCTR   XR,152461             ;
100416 / 202046,,000017         MOVEM  TAC,REFTIM(DDB)        ;
152462 / 200054,,000005          MOVE  TAC,     5(UUO)        ;
100417 / 256200,,152462          XCTR   XR,152462             ;
100420 / 202046,,000020         MOVEM  TAC,DMPTIM(DDB)        ;
100421 / 254015,,000000          JRST            (AC1)        ;
                       ACCESS:
100422 / 135040,,037577           LDB  TAC, PUNIT             ;
100423 / 200041,,011745          MOVE  TAC,DKDBML(TAC)        ;;FIRST DDB IS DUMMY
100424 / 510246,,000027          HLLZ  DAT,ACCEXT(DDB)        ;;IN CASE RH NOT 0.
                       ACCES1:
100425 / 554041,,000003          HLRZ  TAC,DEVSER(TAC)        ;;GET NEXT DDB
100426 / 200101,,000000          MOVE TAC1,      (TAC)        ;;GET DEVICE NAME
100427 / 312106,,000000          CAME TAC1,      (DDB)        ;;IS IT SAME AS US
100430 / 254015,,000002          JRST           2(AC1)        ;;NO, ALL DONE, RETURN
100431 / 306046,,000000          CAIN  TAC,      (DDB)        ;;DON'T LOOK AT OWN DDB
100432 / 254000,,100425          JRST      ACCES1             ;
100433 / 200101,,000011          MOVE TAC1,FILNAM(TAC)        ;;COMPARE NAME
100434 / 312106,,000026          CAME TAC1,ACCNAM(DDB)        ;
100435 / 254000,,100425          JRST      ACCES1             ;
100436 / 510101,,000012          HLLZ TAC1,FILEXT(TAC)        ;
100437 / 312100,,000005          CAME TAC1,   DAT             ;
100440 / 254000,,100425          JRST      ACCES1             ;
100441 / 200101,,000014          MOVE TAC1,FILPPN(TAC)        ;
100442 / 312106,,000031          CAME TAC1,ACCPPN(DDB)        ;
100443 / 254000,,100425          JRST      ACCES1             ;
100444 / 200101,,000002          MOVE TAC1,DEVIOS(TAC)        ;;FOUND ONE, SEE WHAT IT'S DOING
100445 / 603100,,010000          TLNE TAC1,DELETB             ;
100446 / 254000,,100425          JRST      100425             ;;IGNORE IF TO BE DELETED.
100447 / 603100,,060000          TLNE TAC1,060000             ;;ALTERING?
100450 / 254000,,102351          JRST      102351             ;;YES, LOSE
100451 / 603100,,200000          TLNE TAC1,200000             ;;READING?
100452 / 256015,,000000           XCT            (AC1)        ;;YES
100453 / 603100,,100000          TLNE TAC1,100000             ;;WRITING?
100454 / 256015,,000001           XCT           1(AC1)        ;;YES
100455 / 254000,,100425          JRST      100425             ;;OK, LOOK FOR MORE.
                       ACCEST:
100456 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;ACCESS ESTABLISHED
                       ACCST1:
100457 / 200106,,000026          MOVE TAC1,ACCNAM(DDB)        ;
100460 / 202106,,000011         MOVEM TAC1,FILNAM(DDB)        ;
100461 / 200106,,000027          MOVE TAC1,ACCEXT(DDB)        ;
100462 / 202106,,000012         MOVEM TAC1,FILEXT(DDB)        ;
100463 / 200106,,000030          MOVE TAC1,ACCPRO(DDB)        ;
100464 / 202106,,000013         MOVEM TAC1,FILPRO(DDB)        ;
100465 / 200106,,000031          MOVE TAC1,ACCPPN(DDB)        ;
100466 / 202106,,000014         MOVEM TAC1,FILPPN(DDB)        ;
100467 / 263140,,000000          POPJ    P,                   ;
                       PROTEC:
100470 / 200706,,000031          MOVE  AC2,ACCPPN(DDB)        ;
100471 / 200746,,000034          MOVE  AC3,SRCPRO(DDB)        ;
                       PROTEK:
100472 / 316700,,037615          CAMN  AC2,037615             ;;ACCESS TO A UFD?
100473 / 254000,,100512          JRST      100512             ;;YES.
                       PROT0:
100474 / 316704,,027720          CAMN  AC2,PRJPRG(J)          ;;OWNER ACCESS TO FILE?
100475 / 254000,,100506          JRST      100506             ;;YES.  DO OWNER ACCESS TESTS
100476 / 242740,,000003           LSH  AC3,000003             ;;NOT OWNER. SHIFT TO LOCAL-USER BITS
100477 / 200104,,027420          MOVE TAC1,JBTPRV(J)          ;;
100500 / 607100,,000001          TLNN TAC1,000001             ;;LOCAL USER?
100501 / 242740,,000003           LSH  AC3,000003             ;;NO. SHIFT TO REMOTE-USER FIELD
100502 / 242100,,000002           LSH TAC1,000002             ;;SHIFT PRIVILEGE BITS TO CHECK PRIV ACCESS
100503 / 612100,,000005          TDNE TAC1,000005             ;;IS ACCESS ALLOWED BY PRIVILEGE?
100504 / 254015,,000000          JRST            (AC1)        ;;YES. PRIV. ACCESS TO FILE
100505 / 254000,,100507          JRST      100507             ;;CHECK NON-OWNER ACCESS
                       PROT1:
100506 / 621240,,600000           TLZ  DAT,600000             ;;OWNER CAN READ OR RENAME
                       PROT2:
100507 / 616240,,000017          TDNN  DAT,   AC3             ;
100510 / 254015,,000000          JRST            (AC1)        ;;OK
100511 / 254000,,102350          JRST      102350             ;;LOSE
                       PROT3:
100512 / 603240,,500000          TLNE  DAT,500000             ;;WRITE OR RENAME ACCESS TO UFD?
100513 / 254000,,100516          JRST      100516             ;;YES. THIS IS USUALLY ILLEGAL
100514 / 200706,,000026          MOVE  AC2,ACCNAM(DDB)        ;;USE THE NAME INSTEAD OF PPN FOR LEGALITY
100515 / 254000,,100474          JRST      100474             ;;OTHERWISE, CONSIDER OTHER CLASS OF USERS
                       PROT4:
100516 / 325240,,100522        JUMPGE  DAT,100522             ;;JUMP UNLESS 400000 ACCESS REQUESTED
100517 / 200106,,000011          MOVE TAC1,FILNAM(DDB)        ;;GET NAME OF THIS UFD
100520 / 316104,,027720          CAMN TAC1,PRJPRG(J)          ;;BELONGS TO US?
100521 / 254015,,000000          JRST            (AC1)        ;;YES.  PROTECTION CHANGE IS OK.
                       PROT5:
100522 / 200104,,027420          MOVE TAC1,JBTPRV(J)          ;;WRITE OR RENAME ACCESS TO UFD
100523 / 242100,,000002           LSH TAC1,     2             ;
100524 / 616100,,000005          TDNN TAC1,   DAT             ;
100525 / 254000,,102350          JRST       EPROT             ;
100526 / 321255,,000000         JUMPL  DAT,      (AC1)        ;;LEGAL FOR PRIV' USER TO CHANGE PROT
100527 / 336006,,000026         SKIPN      ACCNAM(DDB)        ;;WRITE IS LEGAL ONLY IF DELETING
100530 / 254015,,000000          JRST            (AC1)        ;
100531 / 254000,,102350          JRST       EPROT             ;
                       ;HERE TO CHECK ACCESS TO A UFD
                       UPROTC:
100532 / 200706,,000031          MOVE  AC2,ACCPPN(DDB)        ;
                       UPROTK:
100533 / 332746,,000022         SKIPE  AC3,UFDPRO(DDB)        ;
100534 / 254000,,100474          JRST       PROT0             ;
100535 / 254015,,000000          JRST            (AC1)        ;;AVOID WORK IF THIS IS A UFD ACCESS
                       ;SEARCH MFD AND UFD FOR FILE.
                       ;PUT DIRECTORY DATA IN SRCNAM,SRCEXT,SRCPRO,SRCLOC.
                       ;FLAG IS LEFT IN SRCTMP.
                       ; MFD, UFD FORMAT:
                       ;	NAME
                       ;	EXT, DATE CREATED
                       ;	PROT, MODE, TIME LAST WRITTEN
                       ;	LOCATION (LOGICAL BLOCK NO.)
                       FILSRC:
100536 / 260140,,100547         PUSHJ    P,  SRCH             ;
100537 / 332000,,000005         SKIPE      000005             ;;WANT MFD?
100540 / 260140,,102104         PUSHJ    P,102104             ;;NO, READ DIRECTORY
100541 / 603000,,000200          TLNE      LOSBIG             ;
100542 / 254000,,102441          JRST      EGARPJ             ;
100543 / 263140,,000000          POPJ    P,                   ;
                       UFDSRC:
100544 / 260140,,100547         PUSHJ    P,  SRCH             ;
100545 / 326240,,037403         JUMPN  DAT,037403             ;;RETURN
100546 / 254000,,102461          JRST      102461             ;;ILLEG MFD OP.
                       SRCH:
100547 / 201406,,000026         MOVEI  TEM,ACCNAM(DDB)        ;
                       SRCH1:
100550 / 200240,,074746          MOVE  DAT,MFDLOC             ;
100551 / 202246,,000035         MOVEM  DAT,SRCLOC(DDB)        ;
100552 / 200050,,000003          MOVE  TAC,  UPPN(TEM)        ;
100553 / 205100,,654644         MOVSI TAC1,UFDEXT             ;
100554 / 510750,,000001          HLLZ  AC3,  UEXT(TEM)        ;
100555 / 312040,,037615          CAME  TAC,037615             ;;LOOKING FOR [1,1] FILE?
100556 / 254000,,100572          JRST      100572             ;;NO, GO SEARCH MFD FOR UFD
100557 / 316100,,000017          CAMN TAC1,000017             ;;IT IS [1,1], IS IT UFD?
100560 / 312050,,000000          CAME  TAC,      (TEM)        ;;IS UFD, IS IT MFD?
100561 / 254000,,100645          JRST      100645             ;;NO, SEARCH MFD FOR IT
100562 / 202246,,000036         MOVEM  DAT,SRCTMP(DDB)        ;;YES, PLUG IN MFD STUFF
100563 / 200240,,074744          MOVE  DAT,MFDEXT             ;
100564 / 202246,,000033         MOVEM  DAT,SRCEXT(DDB)        ;
100565 / 200240,,074745          MOVE  DAT,MFDPRO             ;
100566 / 202246,,000034         MOVEM  DAT,SRCPRO(DDB)        ;
100567 / 202246,,000022         MOVEM  DAT,UFDPRO(DDB)        ;;DEFINE ACCESS ALLOWED TO MFD
100570 / 201240,,000000         MOVEI  DAT,                   ;;MFD FLAG
100571 / 263140,,000000          POPJ    P,                   ;
                       SRCHM:
100572 / 202046,,000032         MOVEM  TAC,SRCNAM(DDB)        ;
100573 / 202106,,000033         MOVEM TAC1,SRCEXT(DDB)        ;
100574 / 316046,,000024          CAMN  TAC,UFDPPN(DDB)        ;;IS PTR TO THIS UFD IN THE DDB?
100575 / 336106,,000025         SKIPN TAC1,UFDADR(DDB)        ;;YES, JUST GOBBLE IT
100576 / 254000,,100600          JRST      100600             ;
100577 / 254000,,100613          JRST      CUSSRC             ;
100600 / 135100,,037577           LDB TAC1, PUNIT             ;
100601 / 326100,,100615         JUMPN TAC1,100615             ;;DON'T KNOW WHERE ANYTHING IS IF UDP
100602 / 316040,,037617          CAMN  TAC,037617             ;;IS THIS THE BLOODY CUSP?
100603 / 336100,,030742         SKIPN TAC1,030742             ;;YES, DO WE REMEMBER WHERE IT IS?
100604 / 304000,,000000          CAIA                         ;
100605 / 254000,,100613          JRST      100613             ;;YES, GO SEARCH IT
100606 / 336104,,030020         SKIPN TAC1,DSKPPN(J)          ;
100607 / 200104,,027720          MOVE TAC1,PRJPRG(J)          ;
100610 / 316040,,000002          CAMN  TAC,000002             ;;HIS OWN UFD?
                       ;FTDSKPPN
100611 / 336104,,030642         SKIPN TAC1,JBTUFD(J)          ;;DO WE KNOW WHERE IT IS?
100612 / 254000,,100615          JRST      100615             ;;NO. LOOK IN MFD FOR ITS LOC.
                       CUSSRC:
100613 / 552106,,000035         HRRZM TAC1,SRCLOC(DDB)        ;;TRY HERE.
100614 / 254000,,100645          JRST      100645             ;;GO GET UFD (BYPASS MFD SEARCH)
                       SRCHM1:
100615 / 201240,,100727         MOVEI  DAT,100727             ;;LOOK IN MFD FOR USER'S UFD
100616 / 260140,,102104         PUSHJ    P,QEWAIT             ;
100617 / 603000,,000200          TLNE      LOSBIG             ;
100620 / 254000,,102440          JRST      EGARJ2             ;
100621 / 337006,,000036         SKIPG      SRCTMP(DDB)        ;;FOUND IT?
100622 / 254000,,102343          JRST      102343             ;;NO, LOSE
100623 / 200106,,000035          MOVE TAC1,SRCLOC(DDB)        ;;SAVE MOST RECENT UFD ADDR IN DDB
100624 / 135040,,037577           LDB  TAC, PUNIT             ;
100625 / 326040,,100631         JUMPN  TAC,100631             ;;IF DSK, DON'T SAVE IF IN JBTUFD
100626 / 312104,,030642          CAME TAC1,JBTUFD(J)          ;
100627 / 316100,,030742          CAMN TAC1,CUSLOC             ;
100630 / 254000,,100634          JRST      SRCHM3             ;
                       SRCHM2:
100631 / 200046,,000032          MOVE  TAC,SRCNAM(DDB)        ;
100632 / 202046,,000024         MOVEM  TAC,UFDPPN(DDB)        ;
100633 / 202106,,000025         MOVEM TAC1,UFDADR(DDB)        ;
                       SRCHM3:
100634 / 135040,,037577           LDB  TAC, PUNIT             ;
100635 / 326040,,100645         JUMPN  TAC,100645             ;;SKIP THIS STUFF IF UDP
100636 / 200046,,000032          MOVE  TAC,SRCNAM(DDB)        ;;DID WE JUST LOOK AT GUY'S OWN UFD?
100637 / 336244,,030020         SKIPN  DAT,DSKPPN(J)          ;
100640 / 200244,,027720          MOVE  DAT,PRJPRG(J)          ;
100641 / 316040,,000005          CAMN  TAC,000005             ;
                       ;FTDSKPPN
100642 / 202104,,030642         MOVEM TAC1,JBTUFD(J)          ;
100643 / 316040,,037617          CAMN  TAC,CUSPPN             ;
100644 / 202100,,030742         MOVEM TAC1,CUSLOC             ;
                       SRCHU:
100645 / 510110,,000001          HLLZ TAC1,  UEXT(TEM)        ;
100646 / 202106,,000033         MOVEM TAC1,SRCEXT(DDB)        ;
100647 / 200050,,000000          MOVE  TAC,      (TEM)        ;;LOOK IN UFD FOR FILE
100650 / 202046,,000032         MOVEM  TAC,SRCNAM(DDB)        ;
100651 / 201240,,100727         MOVEI  DAT,DIRSRC             ;
100652 / 263140,,000000          POPJ    P,                   ;
                       ;INSERT A FILE NAME IN UFD.
                       ;UFD RTVL MUST BE IN DDB.
                       DIRINS:
100653 / 201240,,100663         MOVEI  DAT,100663             ;;TRY TO PUT NEW NAME IN
100654 / 260140,,102104         PUSHJ    P,102104             ;;WITHOUT EXTENDING UFD.
100655 / 336006,,000036         SKIPN      SRCTMP(DDB)        ;;SUCCESSFUL?
100656 / 263140,,000000          POPJ    P,                   ;;YES, RETURN
100657 / 260140,,101061         PUSHJ    P,101061             ;;NO ROOM, GET NEW BLOCK
100660 / 201240,,100707         MOVEI  DAT, DIRI2             ;
100661 / 260140,,102104         PUSHJ    P,102104             ;;WRITE NEW NAME IN IT
100662 / 263140,,000000          POPJ    P,                   ;
                       ;*** INTERRUPT SUBRS ***
                       DIRI1:
100663 / 402006,,000032         SETZM      SRCNAM(DDB)        ;
100664 / 260140,,100727         PUSHJ    P,100727             ;;LOOK FOR A HOLE.
100665 / 331006,,000036         SKIPL      SRCTMP(DDB)        ;;FOUND ONE?
100666 / 254000,,100700          JRST      100700             ;;YES, GO USE IT.
100667 / 336640,,002560         SKIPN  AC1,002560             ;;UFD WD CT
100670 / 254000,,100710          JRST      100710             ;;ZERO LENGTH FILE MUST HAVE ROOM
100671 / 231640,,004400         IDIVI  AC1,004400             ;;ROOM IN THIS BLOCK?
100672 / 307700,,004374          CAIG  AC2,004374             ;
100673 / 326700,,100710         JUMPN  AC2,100710             ;;YES, GO FIX UNLESS INTEGRAL
                       ;NUMBER OF BLOCKS
100674 / 476006,,000036         SETOM      SRCTMP(DDB)        ;;FLAG MORE SPACE NEEDED
100675 / 201240,,000022         MOVEI  DAT,RCPBLK             ;
100676 / 272246,,000021          ADDM  DAT, USETP(DDB)        ;
100677 / 263140,,000000          POPJ    P,                   ;;BACK TO UUO LVL TO GET IT.
                       DIRIHF:
100700 / 201102,,002612         MOVEI TAC1,002612(TAC1)       ;
100701 / 261106,,000026          PUSH TAC1,ACCNAM(DDB)        ;
100702 / 261106,,000027          PUSH TAC1,ACCEXT(DDB)        ;
100703 / 261106,,000030          PUSH TAC1,ACCPRO(DDB)        ;
100704 / 261106,,000015          PUSH TAC1,FILLOC(DDB)        ;
100705 / 402006,,000036         SETZM      SRCTMP(DDB)        ;;FLAG SUCCESSFUL.
100706 / 254000,,100330          JRST      100330             ;;SPIT IT BACK OUT
                       DIRI2:
100707 / 201100,,000000         MOVEI TAC1,                   ;
                       DIRI1W:
100710 / 261140,,000002          PUSH    P,  TAC1             ;
100711 / 201240,,000004         MOVEI  DAT,     4             ;
100712 / 272246,,000054          ADDM  DAT, DDLNG(DDB)        ;; EXTEND UFD
100713 / 260140,,101125         PUSHJ    P,SPREAD             ;
151611 / 773400,,002613           XWD -BKDSIZ,SYSDTA          ;
100714 / 200040,,151611          MOVE  TAC,151611             ;;RTVL OUT, JUST WRITE DATA!
100715 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;
100716 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
100717 / 260140,,101265         PUSHJ    P,LR2BLK             ;
153354 / 262140,,000002           POP    P,000002             ;;0 MEANS BAD RETRIEVAL!
153355 / 254000,,075761          JRST      SETLOS             ;
100720 / 322040,,153354         JUMPE  TAC,153354             ;
100721 / 260140,,101303         PUSHJ    P,101303             ;;FINISH MAPPING
100722 / 135740,,037577           LDB  AC3, PUNIT             ;
100723 / 270057,,011741           ADD  TAC,BFSETS(AC3)        ;
100724 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
100725 / 262140,,000002           POP    P,  TAC1             ;
100726 / 254000,,100700          JRST      DIRIHF             ;
                       ;*** I-SUBR TO READ DIRECTORY INTO SYSBUF & SEARCH.
                       ;RETURNS FLAG IN SRCTMP: -1 IF NOT FOUND
                       ;	0 IF DIFFERS IN EXT AND SPECIFIED EXT WAS 0
                       ;	+N IF EXACT MATCH FOUND
                       DIRSRC:
100727 / 200046,,000035          MOVE  TAC,SRCLOC(DDB)        ;;LOCATION OF UFD FILE
100730 / 260140,,101177         PUSHJ    P,NEWFIL             ;
100731 / 402006,,000036         SETZM      SRCTMP(DDB)        ;
100732 / 260140,,101205         PUSHJ    P,GETBLK             ;
100733 / 200040,,002556          MOVE  TAC,002556             ;;BLOCK SHOULD LOOK LIKE UFD.
100734 / 510100,,002554          HLLZ TAC1,002554             ;
100735 / 316040,,037615          CAMN  TAC,SYSPPN             ;
100736 / 312100,,074744          CAME TAC1,MFDEXT             ;
100737 / 260140,,101173         PUSHJ    P,101173             ;;IT DOESN'T.
100740 / 200040,,074746          MOVE  TAC,MFDLOC             ;
100741 / 200100,,002565          MOVE TAC1,002565             ;;GET SATID OF CURRENT UFD.
100742 / 135240,,037577           LDB  DAT, PUNIT             ;
100743 / 200245,,011733          MOVE  DAT,SATADR(DAT)        ;
100744 / 316046,,000035          CAMN  TAC,SRCLOC(DDB)        ;;IS THIS THE MFD ?
100745 / 316105,,000002          CAMN TAC1, SATID(DAT)        ;;YES. AGREES WITH MASTER COPY?
100746 / 254000,,100775          JRST      100775             ;;YES
100747 / 312240,,011733          CAME  DAT,011733             ;;IS THIS THE MAIN DISK?
100750 / 254000,,101173          JRST      101173             ;;NO. SOMEONE SWAPPED PACKS!
100751 / 250105,,000002          EXCH TAC1, SATID(DAT)        ;;MAKE IT GOOD, WE HOPE
100752 / 200045,,000002          MOVE  TAC, SATID(DAT)        ;;MAKE LIFE EASIER IN TYPEOUT
100753 / 260140,,000316         PUSHJ    P,PUSHIT             ;
100754 / 260140,,044320         PUSHJ    P,044320             ;
100755 / 260140,,044120         PUSHJ    P,DISERR             ;
100756 / 000000,,154204                                       ;
100757 / 000103,,777762        OCTQQQ      777762(P)          ;
100760 / 000000,,153562                                       ;
100761 / 000103,,777761        OCTQQQ      777761(P)          ;
100762 / 000000,,154462                                       ;
100763 / 777777,,777777                                       ;
100764 / 200040,,007260          MOVE  TAC,007260             ;;MAKE SURE ALL THE SATID'S AGREE
100765 / 202040,,012553         MOVEM  TAC,SATID1             ;
100766 / 202040,,012554         MOVEM  TAC,SATID2             ;
100767 / 700600,,000400          CONO   PI, PIOFF             ;
100770 / 476000,,036035         SETOM      036035             ;;FORCE TYPEOUT
100771 / 260140,,043761         PUSHJ    P,043761             ;
100772 / 260140,,000341         PUSHJ    P, POPIT             ;
100773 / 700600,,000200          CONO   PI,  PION             ;
100774 / 260140,,000347         PUSHJ    P,000347             ;;MAKE HIM DO A CPOPJ$G
                       DIRSA:
100775 / 200100,,002571          MOVE TAC1,002571             ;;GET DEFAULT FILE PROTECTION
100776 / 546106,,000023          HLRM TAC1,UFDPR1(DDB)        ;;ICK!
100777 / 205100,,777000         MOVSI TAC1,777000             ;
101000 / 404100,,002555           AND TAC1,002555             ;
101001 / 202106,,000022         MOVEM TAC1,UFDPRO(DDB)        ;;SAVE PROTECTION OF THIS UFD
101002 / 400100,,000000          SETZ TAC1,                   ;
101003 / 210400,,002560          MOVN  TEM,002560             ;;GET -WORD COUNT
101004 / 322400,,101040         JUMPE  TEM,101040             ;;EMPTY DIRECTORY
                       DIRS1:
101005 / 201100,,000000         MOVEI TAC1,                   ;
                       DIRS2:
101006 / 200242,,002613          MOVE  DAT,SYSDTA(TAC1)       ;
101007 / 312246,,000032          CAME  DAT,SRCNAM(DDB)        ;
101010 / 254000,,101023          JRST      101023             ;;NOT THIS ONE
101011 / 322240,,101037         JUMPE  DAT,101037             ;;LOOKING FOR HOLE, FOUND ONE
101012 / 200242,,002614          MOVE  DAT,002614(TAC1)       ;;NAME SAME, SAVE STUFF ...
101013 / 202246,,000036         MOVEM  DAT,SRCTMP(DDB)        ;;FOR EXT CHECK.
101014 / 200042,,002615          MOVE  TAC,002615(TAC1)       ;
101015 / 202046,,000034         MOVEM  TAC,SRCPRO(DDB)        ;
101016 / 200042,,002616          MOVE  TAC,002616(TAC1)       ;;FILE LOCN (MUST BE +)
101017 / 202046,,000035         MOVEM  TAC,SRCLOC(DDB)        ;
101020 / 430246,,000033           XOR  DAT,SRCEXT(DDB)        ;;COMPARE EXTENSION
101021 / 607240,,777777          TLNN  DAT,777777             ;
101022 / 254000,,101041          JRST      101041             ;;MATCHES, THIS IS IT.
                       DIRSX:
101023 / 271400,,000004          ADDI  TEM,000004             ;;INDEXING.
101024 / 271100,,000004          ADDI TAC1,     4             ;
101025 / 325400,,101034        JUMPGE  TEM,101034             ;;OUT OF ENTRIES, RETURN FAIL.
101026 / 305100,,004400         CAIGE TAC1,BKDSIZ             ;
101027 / 254000,,101006          JRST       DIRS2             ;
101030 / 201100,,000022         MOVEI TAC1,RCPBLK             ;
101031 / 272106,,000021          ADDM TAC1, USETP(DDB)        ;
101032 / 260140,,101205         PUSHJ    P,101205             ;;GET NEXT BLOCK OF DIRECTORY FILE
101033 / 254000,,101005          JRST       DIRS1             ;
                       DIRSF:
101034 / 336006,,000036         SKIPN      SRCTMP(DDB)        ;;ANY PARTIAL MATCH?
101035 / 254000,,101040          JRST      101040             ;;NO, RETURN FAIL
101036 / 336006,,000033         SKIPN      SRCEXT(DDB)        ;;BLANK EXT SPECIFIED?
                       DIRSRZ:
101037 / 634040,,000001          TDZA  TAC,000001             ;;RETURN MAYBE, IF SO.
                       DIRSN:
101040 / 476000,,000001         SETOM      000001             ;;NO, RETURN FAILURE
                       DIRSE:
101041 / 250046,,000036          EXCH  TAC,SRCTMP(DDB)        ;;ENDFILE OR ENTRY FOUND
101042 / 202046,,000033         MOVEM  TAC,SRCEXT(DDB)        ;;RETURN BEST BET
101043 / 263140,,000000          POPJ    P,                   ;
                       ; RETRIEVAL SUBRS
                       GETRET:
101044 / 201240,,101231         MOVEI  DAT,101231             ;;GET RTVL IN IF IT IS NOT
101045 / 260140,,101052         PUSHJ    P,101052             ;;IS IT?
101046 / 260140,,102104         PUSHJ    P,102104             ;;NO, GO GET IT
101047 / 260140,,101052         PUSHJ    P,101052             ;;IS IT REALLY HERE?
101050 / 263140,,000000          POPJ    P,                   ;;NO, GIVE ERROR RETURN
101051 / 254000,,037401          JRST      037401             ;;YES, SUCCESS.
                       TSTRET:
101052 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;;SKIP IF RTVL IS IN.
101053 / 336106,,000057         SKIPN TAC1,DGRP1R(DDB)        ;
101054 / 263140,,000000          POPJ    P,                   ;;NOT IN, RETURN
101055 / 305042,,001100         CAIGE  TAC,RCPGRP(TAC1)       ;
101056 / 305042,,000000         CAIGE  TAC,      (TAC1)       ;
101057 / 263140,,000000          POPJ    P,                   ;;LOSE, WRONG GROUP IN
101060 / 254000,,037401          JRST      037401             ;;IN, SKIP
                       MAKBLK:
101061 / 260140,,101044         PUSHJ    P,101044             ;;GET GROUP RETRIEVAL IN!
101062 / 260140,,101102         PUSHJ    P,101102             ;;NO SUCH GROUP, MAKE ONE
101063 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
101064 / 260140,,101265         PUSHJ    P,101265             ;;LOOK UP BLOCK IN RTVL.
101065 / 326040,,037403         JUMPN  TAC,037403             ;;IT EXISTS, RETURN
101066 / 260140,,101353         PUSHJ    P,101353             ;;IT DOESN'T, GET ONE FROM SAT
101067 / 661000,,002000           TLO      002000             ;;NOTE RTVL NOT OUT!!!
101070 / 200646,,000021          MOVE  AC1, USETP(DDB)        ;;MAKE RTVL ENTRY
101071 / 274646,,000057           SUB  AC1,DGRP1R(DDB)        ;;PUT ABS BLK PTR IN CORR HALFWD.
101072 / 231640,,000022         IDIVI  AC1,RCPBLK             ;
101073 / 246640,,777777          LSHC  AC1,777777             ;
101074 / 271646,,000067          ADDI  AC1,  DPTR(DDB)        ;
101075 / 321700,,101100         JUMPL  AC2, MAKB3             ;
101076 / 506055,,000000          HRLM  TAC,      (AC1)        ;;EVEN IN LEFT HALF
101077 / 263140,,000000          POPJ    P,                   ;
                       MAKB3:
101100 / 542055,,000000          HRRM  TAC,      (AC1)        ;;ODD IN RIGHT HALF
101101 / 263140,,000000          POPJ    P,                   ;
                       ;ASSIGN A BLOCK FOR A NEW GROUP.
                       ASNGRP:
101102 / 260140,,101353         PUSHJ    P,101353             ;;GET BLOCK FROM SAT
                       ASNGR1:
101103 / 202046,,000060         MOVEM  TAC,DNXTGP(DDB)        ;;PUT INTO LINK
101104 / 201240,,101125         MOVEI  DAT,101125             ;;SMEAR EXISTING RTVL OUT...
101105 / 332006,,000057         SKIPE      DGRP1R(DDB)        ;;IF THERE IS A CURRENT GROUP.
101106 / 260140,,102104         PUSHJ    P,QEWAIT             ;
101107 / 402000,,000001         SETZM         TAC             ;
101110 / 250046,,000060          EXCH  TAC,DNXTGP(DDB)        ;;NEW BLOCK...
101111 / 516046,,000067         HRLZM  TAC,  DPTR(DDB)        ;;IS FIRST OF NEW GRP.
101112 / 402006,,000070         SETZM      000070(DDB)        ;;CLEAR OUT REST OF RTVL.
101113 / 505106,,000070          HRLI TAC1,000070(DDB)        ;
101114 / 541106,,000071          HRRI TAC1,000071(DDB)        ;
101115 / 251106,,000106           BLT TAC1,000106(DDB)        ;
101116 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
101117 / 202046,,000057         MOVEM  TAC,DGRP1R(DDB)        ;
101120 / 661000,,002000           TLO      002000             ;;NOTE NEW RTVL NOT OUT.
101121 / 263140,,000000          POPJ    P,                   ;
                       ;SPREAD UPDATED RTVL OVER BLOCKS IN CURRENT GROUP.
                       ;NORMALLY WRITES FROM DDB
                       SPREDT:
101122 / 200706,,000021          MOVE  AC2, USETP(DDB)        ;;OUT RTVL UP TO CURR BLOCK.
101123 / 275700,,000022          SUBI  AC2,RCPBLK             ;
101124 / 254000,,101127          JRST      SPREDF             ;
                       SPREAD:
101125 / 200706,,000057          MOVE  AC2,DGRP1R(DDB)        ;;OUT RTVL OVER WHOLE GROUP
101126 / 271700,,001056          ADDI  AC2,001056             ;
                       SPREDF:
101127 / 201106,,000047         MOVEI TAC1,DSKDAT(DDB)        ;
                       SPREDD:
101130 / 505100,,777740          HRLI TAC1,777740             ;
101131 / 336406,,000057         SKIPN  TEM,DGRP1R(DDB)        ;
101132 / 263140,,000000          POPJ    P,                   ;;NO RTVL TO SPREAD.
101133 / 202106,,000041         MOVEM TAC1,TFRIOW(DDB)        ;
101134 / 201100,,000106         MOVEI TAC1,000106             ;
101135 / 206106,,000042         MOVSM TAC1,TFRCTL(DDB)        ;
                       SPREDL:
101136 / 313400,,000016         CAMLE  TEM,   AC2             ;
101137 / 263140,,000000          POPJ    P,                   ;;DONE WITH GROUP
                       SPREDR:
101140 / 200040,,000010          MOVE  TAC,000010             ;
101141 / 260140,,101265         PUSHJ    P,LR2BLK             ;
101142 / 322040,,101150         JUMPE  TAC,101150             ;;NON EX BLOCK
101143 / 260140,,101302         PUSHJ    P,BK2SEC             ;
101144 / 135740,,037577           LDB  AC3, PUNIT             ;
101145 / 270057,,011741           ADD  TAC,BFSETS(AC3)        ;
101146 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
101147 / 260140,,102316         PUSHJ    P,TSTART             ;
                       SPREDI:
101150 / 271400,,000022          ADDI  TEM,RCPBLK             ;
101151 / 254000,,101136          JRST      SPREDL             ;
                       AUDINF:
101152 / 205106,,000011         MOVSI TAC1,FILNAM(DDB)        ;
101153 / 541106,,000047          HRRI TAC1,DSKDAT(DDB)        ;;BLT AUDIT INFO INTO RTVL
101154 / 251106,,000056           BLT TAC1,000056(DDB)        ;
101155 / 135100,,037577           LDB TAC1, PUNIT             ;
101156 / 200102,,011733          MOVE TAC1,SATADR(TAC1)       ;
101157 / 200102,,000002          MOVE TAC1, SATID(TAC1)       ;
101160 / 202106,,000061         MOVEM TAC1,DSATID(DDB)        ;
101161 / 263140,,000000          POPJ    P,                   ;
                       AUDCHK:
101162 / 200046,,000011          MOVE  TAC,FILNAM(DDB)        ;
101163 / 312046,,000047          CAME  TAC, DDNAM(DDB)        ;
101164 / 661000,,000200           TLO      LOSBIG             ;
101165 / 510046,,000012          HLLZ  TAC,FILEXT(DDB)        ;
101166 / 510106,,000050          HLLZ TAC1, DDEXT(DDB)        ;
101167 / 312040,,000002          CAME  TAC,  TAC1             ;
101170 / 661000,,000200           TLO      LOSBIG             ;
101171 / 200046,,000014          MOVE  TAC,FILPPN(DDB)        ;
101172 / 312046,,000052          CAME  TAC, DDPPN(DDB)        ;
                       AUDHAK:
101173 / 661000,,000200           TLO      LOSBIG             ;
101174 / 603000,,000200          TLNE      LOSBIG             ;
101175 / 202300,,002537         MOVEM  DDB,002537             ;;SAVE LOSER FOR DEBUGGING
101176 / 263140,,000000          POPJ    P,                   ;
                       ;SET UP GGRETI TO READ A NEW FILE, WHOSE RTVL ISN'T IN.
                       NEWFIL:
101177 / 312046,,000053          CAME  TAC, DDLOC(DDB)        ;;IS RIGHT RTVL IN?
                       NEWFI1:
101200 / 402006,,000057         SETZM      DGRP1R(DDB)        ;;NO, FORCE IT TO BE READ
101201 / 202046,,000053         MOVEM  TAC, DDLOC(DDB)        ;
101202 / 201100,,000001         MOVEI TAC1,     1             ;
101203 / 202106,,000021         MOVEM TAC1, USETP(DDB)        ;
101204 / 263140,,000000          POPJ    P,                   ;
                       ; GET BLOCK CONTAINING USETP INTO SYSBUF. 
                       GETBLK:
101205 / 260140,,101231         PUSHJ    P,101231             ;;GET RTVL IN
101206 / 322040,,037403         JUMPE  TAC,037403             ;;NON EX=EOF
101207 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
101210 / 336006,,000041         SKIPN      TFRIOW(DDB)        ;;DID GGRETI READ?
101211 / 254000,,101215          JRST      101215             ;;NO, GO READ BLOCK
101212 / 200106,,000057          MOVE TAC1,DGRP1R(DDB)        ;;FIRST GROUP OF BLOCK
101213 / 305042,,000022         CAIGE  TAC,RCPBLK(TAC1)       ;;IS ONE WE WANT IN IN THIS BLOCK?
101214 / 263140,,000000          POPJ    P,                   ;;YES, RETURN.
                       GETBK1:
101215 / 260140,,101265         PUSHJ    P,LR2BLK             ;
101216 / 322040,,037403         JUMPE  TAC,037403             ;;NON EX = EOF
101217 / 260140,,101302         PUSHJ    P,BK2SEC             ;
101220 / 135740,,037577           LDB  AC3, PUNIT             ;
101221 / 270057,,011741           ADD  TAC,BFSETS(AC3)        ;
101222 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;;READ IT INTO SYSBUF
101223 / 200040,,074742          MOVE  TAC,BUFIOW             ;
101224 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;
101225 / 201040,,000006         MOVEI  TAC,IOPCHN             ;
101226 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
101227 / 260140,,102316         PUSHJ    P,TSTART             ;
101230 / 263140,,000000          POPJ    P,                   ;
                       ; GET RTVL FOR GROUP INTO DDB IF NOT ALREADY THERE. 
                       GGRETI:
101231 / 402006,,000041         SETZM      TFRIOW(DDB)        ;;FLAG FOR GETBLK.
101232 / 336106,,000057         SKIPN TAC1,DGRP1R(DDB)        ;;IF NO RTVL IN,
101233 / 254000,,101241          JRST      101241             ;;GET BLOCK 1.
101234 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
101235 / 301042,,001100          CAIL  TAC,RCPGRP(TAC1)       ;;USETP IN CURRENT GROUP?
101236 / 254000,,101242          JRST      101242             ;;BEYOND, TRY SUCCESSOR
101237 / 301042,,000000          CAIL  TAC,      (TAC1)       ;
101240 / 263140,,000000          POPJ    P,                   ;;IN THIS ONE.
                       GGBLK1:
101241 / 334046,,000053         SKIPA  TAC, DDLOC(DDB)        ;;START AT BEGINNING.
                       GGNXT:
101242 / 200046,,000060          MOVE  TAC,DNXTGP(DDB)        ;;GO ON TO NEXT GROUP
101243 / 322040,,037403         JUMPE  TAC,037403             ;;RETURN IF EOF
101244 / 260140,,101302         PUSHJ    P,BK2SEC             ;
101245 / 135740,,037577           LDB  AC3, PUNIT             ;
101246 / 270057,,011741           ADD  TAC,BFSETS(AC3)        ;
101247 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
101250 / 200040,,074742          MOVE  TAC,074742             ;;READ ENTIRE BLOCK...
101251 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;
101252 / 201040,,000006         MOVEI  TAC,IOPCHN             ;
101253 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
101254 / 260140,,102316         PUSHJ    P,102316             ;;IN CASE SOMEONE WANTS IT.
101255 / 505040,,002553          HRLI  TAC,002553             ;;GOT CORRECT GRP. BLT RTVL
101256 / 541046,,000047          HRRI  TAC,DSKDAT(DDB)        ;;AND AUDIT TO DDB.
101257 / 251046,,000106           BLT  TAC,000106(DDB)        ;
101260 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
101261 / 200100,,002563          MOVE TAC1,002563             ;
101262 / 301042,,001100          CAIL  TAC,RCPGRP(TAC1)       ;;IN THIS GROUP?
101263 / 254000,,101242          JRST       GGNXT             ;
101264 / 263140,,000000          POPJ    P,                   ;
                       ;LOGICAL RECORD TO BLOCK. CORRECT GROUP IS ASSUMED.
                       LR2BLK:
101265 / 274046,,000057           SUB  TAC,DGRP1R(DDB)        ;
101266 / 301040,,000000          CAIL  TAC,                   ;
101267 / 301040,,001100          CAIL  TAC,RCPGRP             ;
101270 / 201040,,000001         MOVEI  TAC,000001             ;;WRONG GROUP.DEFAULT SELECT REC1.
101271 / 231040,,000022         IDIVI  TAC,RCPBLK             ;
101272 / 201742,,000001         MOVEI  AC3,     1(TAC1)       ;;PHYSICAL RECORD WITHIN BLOCK (INCL RTRVL)
101273 / 246040,,777777          LSHC  TAC,777777             ;
101274 / 271046,,000067          ADDI  TAC,  DPTR(DDB)        ;
101275 / 200041,,000000          MOVE  TAC,      (TAC)        ;
101276 / 331000,,000002         SKIPL        TAC1             ;
101277 / 547000,,000001          HLRS         TAC             ;
101300 / 553000,,000001         HRRZS         TAC             ;
101301 / 263140,,000000          POPJ    P,                   ;
                       ;CONVERT BLOCK NO. TO DISK ADDRESS OF FIRST RECORD OF BLOCK
                       BK2SEC:
101302 / 400740,,000000          SETZ  AC3,                   ;
                       ;MAPPING BLOCK NO. AND RECORD NO. TO DISK ADDRESS
                       BKMAP:
101303 / 242040,,000006           LSH  TAC,000006             ;;TO STOP LATER.
101304 / 405740,,000077          ANDI  AC3,000077             ;;IGNORE IMPOSSIBLE RECORD NOS.
101305 / 434040,,000017           IOR  TAC,   AC3             ;
101306 / 263140,,000000          POPJ    P,                   ;
                       ; SAT TABLE OPERATIONS
                       CUSATO:
101307 / 135040,,037577           LDB  TAC, PUNIT             ;
101310 / 332001,,011753         SKIPE      SATMOD(TAC)        ;;SAT OUT FROM UUO LEVEL, IF CHANGED.
101311 / 337101,,011733         SKIPG TAC1,SATADR(TAC)        ;;ADDRESS OF SAT TABLE
101312 / 263140,,000000          POPJ    P,                   ;;NO CHANGE, RETURN
101313 / 200240,,024633          MOVE  DAT,024633             ;;GET CURRENT TIME
101314 / 202242,,000064         MOVEM  DAT, DTIME(TAC1)       ;;SAVE IN SAT TABLE
101315 / 200240,,024634          MOVE  DAT,THSDAT             ;
101316 / 202242,,000065         MOVEM  DAT, DDATE(TAC1)       ;;AND CURRENT DATE
101317 / 201240,,101340         MOVEI  DAT,SATOUT             ;
101320 / 322040,,102137         JUMPE  TAC,102137             ;;IF MAIN DISK, QUEUE THIS AND POPJ
101321 / 505100,,777036          HRLI TAC1,777036             ;
101322 / 202106,,000041         MOVEM TAC1,TFRIOW(DDB)        ;;SET THIS FOR USATOUT
101323 / 201240,,101454         MOVEI  DAT,101454             ;
101324 / 260140,,102137         PUSHJ    P,NENTER             ;
101325 / 606000,,600000          TRNN      600000             ;
101326 / 263140,,000000          POPJ    P,                   ;
                       SATGLZ:
101327 / 260140,,102502         PUSHJ    P,102502             ;;UN-INITIALIZED UDP.
101330 / 265040,,043571           JSP  TAC,ERRPTU             ;
101337 / 254000,,043656          JRST      EXCALP             ;
                       ;*** I-SUBR
                       SATOUT:
151730 / 000000,,000106                                       ;
101340 / 334040,,151730         SKIPA  TAC,151730             ;;WRITE SAT
                       SATIN:
101341 / 201040,,000006         MOVEI  TAC,000006             ;;READ SAT
101342 / 661000,,000100           TLO       SATOP             ;
101343 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
151612 / 775324,,007256           XWD -SATSIZ,SATTAB          ;
101344 / 200040,,151612          MOVE  TAC,151612             ;
101345 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;;IOWD FOR THIS TRANSFER
101346 / 402006,,000040         SETZM      TFRSEC(DDB)        ;
101347 / 260140,,102316         PUSHJ    P,TSTART             ;
101350 / 402000,,011753         SETZM      SATMOD             ;
101351 / 621000,,000100           TLZ       SATOP             ;
101352 / 263140,,000000          POPJ    P,                   ;
                       ASNBLK:
101353 / 260140,,101477         PUSHJ    P,101477             ;;ASSIGN SUITABLE BLOCK
101354 / 261140,,000001          PUSH    P,   TAC             ;
101355 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;;SAVE HERE FOR I SUBR
101356 / 201240,,101364         MOVEI  DAT,101364             ;;READ BEFORE WRITE CHECKER
101357 / 260140,,102104         PUSHJ    P,QEWAIT             ;
101360 / 262140,,000001           POP    P,   TAC             ;
101361 / 336006,,000041         SKIPN      TFRIOW(DDB)        ;;SUCCESS?
101362 / 254000,,101353          JRST      101353             ;;NO, ASSIGN ANOTHER BLOCK
101363 / 263140,,000000          POPJ    P,                   ;
                       ; READ BEFORE WRITE CHECKER ** I SUBR
                       RB4WCK:
101364 / 336046,,000040         SKIPN  TAC,TFRSEC(DDB)        ;;GET LOGICAL DISK ADDRESS
101365 / 254000,,101412          JRST      101412             ;;LOSE IF ADDRESS IS 0
101366 / 260140,,101302         PUSHJ    P,101302             ;;CONVERT TO PHYSICAL ADDRESS
101367 / 135740,,037577           LDB  AC3, PUNIT             ;
101370 / 270057,,011741           ADD  TAC,BFSETS(AC3)        ;
101371 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;;AND PUT IT BACK
151643 / 777740,,007213           XWD -SECSIZ,QBUF            ;
101372 / 200040,,151643          MOVE  TAC,151643             ;
101373 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;
101374 / 201040,,000006         MOVEI  TAC,IOPCHN             ;
101375 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;;READ OP
101376 / 260140,,102316         PUSHJ    P,TSTART             ;
101377 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
101400 / 602000,,300000          TRNE      300000             ;;LOSE ON READ?
101401 / 254000,,101413          JRST      101413             ;;YES, USE ANOTHER
101402 / 332000,,007213         SKIPE      007213             ;;NULL FILE NAME?
101403 / 336000,,007216         SKIPN      007216             ;;OR PPN?
101404 / 263140,,000000          POPJ    P,                   ;;YES, OK TO WRITE HERE
101405 / 135040,,037577           LDB  TAC, PUNIT             ;
101406 / 200041,,011733          MOVE  TAC,SATADR(TAC)        ;
101407 / 200041,,000002          MOVE  TAC, SATID(TAC)        ;;GET SATID FROM CORE
101410 / 312040,,007225          CAME  TAC,007225             ;;SAME AS ON DISK?
101411 / 263140,,000000          POPJ    P,                   ;;NO. INVALID SATID MEANS WE CAN WRITE HERE
                       RB4WLS:
101412 / 350000,,012330           AOS      012330             ;;COUNT OVERWRITE CHECK
                       RB4WER:
101413 / 402006,,000041         SETZM      TFRIOW(DDB)        ;;FLAG ILLEGAL BLOCK
101414 / 263140,,000000          POPJ    P,                   ;
                       ;MANIPULATE THE UDP SAT TABLE
                       SATGT0:
101415 / 201240,,037403         MOVEI  DAT,037403             ;;WAIT IN DISK QUEUE AND DO NOTHING!
101416 / 260140,,102136         PUSHJ    P,NEWAIT             ;
                       SATGET:
101417 / 135100,,037577           LDB TAC1, PUNIT             ;
101420 / 333742,,011733        SKIPLE  AC3,SATADR(TAC1)       ;;IS THE SAT IN FOR THIS DEVICE?
101421 / 263140,,000000          POPJ    P,                   ;;YES.
101422 / 321740,,101415         JUMPL  AC3,101415             ;;JUMP IF SOMEONE ELSE BRINGING IT IN
101423 / 476002,,011733         SETOM      SATADR(TAC1)       ;;FLAG WE SHALL BRING IT IN.
101424 / 201740,,000742         MOVEI  AC3,000742             ;;SIZE OF SAT TABLE
101425 / 260140,,074361         PUSHJ    P,074361             ;;GET FS. WAIT IF NEEDED
101426 / 505640,,777036          HRLI  AC1,777036             ;;FORM WCMA
101427 / 202646,,000041         MOVEM  AC1,TFRIOW(DDB)        ;;SET IT IN THE DDB
101430 / 201240,,101455         MOVEI  DAT,USATIN             ;
101431 / 260140,,102136         PUSHJ    P,102136             ;;CAUSE SAT TO BE READ AND WAIT FOR IT.
101432 / 602000,,600000          TRNE      600000             ;;ERROR?
101433 / 254000,,101451          JRST      101451             ;;YES.  GIVE BACK FREE STG
101434 / 135040,,037577           LDB  TAC, PUNIT             ;
101435 / 200101,,011733          MOVE TAC1,SATADR(TAC)        ;
101436 / 200642,,000063          MOVE  AC1, IDSAT(TAC1)       ;
151554 / 634164,,514400                                       ;
101437 / 316640,,151554          CAMN  AC1,151554             ;
101440 / 254000,,075471          JRST      075471             ;;FORM DSKUSE, BADCHK, ETC,
101441 / 260140,,102502         PUSHJ    P,102502             ;;UN-INITIALIZED UDP.
101442 / 265040,,043571           JSP  TAC,ERRPTU             ;
101450 / 254000,,043656          JRST      EXCALP             ;
                       ;LOST TRYING TO READ IN SATTAB.  PROBABLY NO PACK MOUNTED
                       ;GIVE BACK FREE STORAGE AND GIVE OFFLINE COMPLAINT
                       SATGL1:
101451 / 550646,,000041          HRRZ  AC1,TFRIOW(DDB)        ;;ADDRESS OF WOULD BE SATTAB
101452 / 260140,,074163         PUSHJ    P,074163             ;;RETURN THE BLOCK
101453 / 254000,,101327          JRST      SATGLZ             ;
                       ;*** I-LEVEL SUBR
                       ;TFRIOW SETUP BY CALLER!
                       USATOU:
151730 / 000000,,000106                                       ;
101454 / 334040,,151730         SKIPA  TAC,151730             ;
                       USATIN:
101455 / 201040,,000006         MOVEI  TAC,IOPCHN             ;
101456 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;;SET READ/WRITE MODE
101457 / 661000,,000100           TLO       SATOP             ;
101460 / 135040,,037577           LDB  TAC, PUNIT             ;
101461 / 200041,,011737          MOVE  TAC, BFSET(TAC)        ;;DISK ADDRESS OF SAT TABLE
101462 / 260140,,101302         PUSHJ    P,101302             ;;CONVERT BLOCK TO SECTOR
101463 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
101464 / 260140,,102316         PUSHJ    P,TSTART             ;
101465 / 621000,,000100           TLZ       SATOP             ;
101466 / 135040,,037577           LDB  TAC, PUNIT             ;
101467 / 402001,,011753         SETZM      SATMOD(TAC)        ;
101470 / 602000,,700000          TRNE      700000             ;
101471 / 634100,,000002          TDZA TAC1,000002             ;;SATTAB DIDN'T MAKE IT IN
101472 / 550106,,000041          HRRZ TAC1,TFRIOW(DDB)        ;
101473 / 202101,,011733         MOVEM TAC1,SATADR(TAC)        ;;SET SATADR - RACE FREE!
101474 / 263140,,000000          POPJ    P,                   ;
                       ;IASNBK
                       ;THIS CODE BLOWS HORNY TOADS, SOMEONE OUGHT TO FIX IT. - REG
                       ASNST1:
101475 / 700600,,002002          CONO   PI,002002             ;;TURN IOP BACK ON
101476 / 260140,,102375         PUSHJ    P,102375             ;;"DISK IS FULL" MESSAGE
                       ;LET HIM TRY AGAIN, IF HE SAYS CONTINUE
                       IASNBK:
101477 / 135740,,037577           LDB  AC3, PUNIT             ;
101500 / 200757,,011733          MOVE  AC3,SATADR(AC3)        ;;ADDRESS OF SAT TABLE FOR THIS DEV
101501 / 200717,,000001          MOVE  AC2,LSTBLK(AC3)        ;;LAST PLACE WE ASSIGNED BLOCK
101502 / 344700,,101504          AOJA  AC2,101504             ;;START BEYOND THAT
                       ASNSL1:
101503 / 700600,,002002          CONO   PI,002002             ;;LET THE IOP IN FOR A QUICK LOOK.
                       ASNSL2:
101504 / 700600,,001002          CONO   PI,IOPOFF             ;
101505 / 135040,,037577           LDB  TAC, PUNIT             ;
101506 / 311701,,011747          CAML  AC2,LSTBTB(TAC)        ;;OFF THE END YET?
101507 / 201700,,000001         MOVEI  AC2,000001             ;;YES. START OVER.
101510 / 316717,,000001          CAMN  AC2,LSTBLK(AC3)        ;;WRAP TO WHERE WE STARTED?
101511 / 254000,,101475          JRST      101475             ;;YES. ICK. THERE'S NO DISK LEFT
101512 / 200040,,000016          MOVE  TAC,000016             ;;CONVERT BLOCK NUMBER TO BIT AND WORD #
101513 / 231040,,000044         IDIVI  TAC,000044             ;;WORD NUMBER IN TAC, BIT NUMBER IN TAC1
101514 / 201640,,000001         MOVEI  AC1,000001             ;;MAKE A BIT MASK
101515 / 241642,,000000           ROT  AC1,      (TAC1)       ;
101516 / 271057,,000000          ADDI  TAC,      (AC3)        ;
101517 / 612641,,000071          TDNE  AC1,SATBIT(TAC)        ;;THIS BLOCK IN USE?
101520 / 344700,,101503          AOJA  AC2,101503             ;;YES, KEEP LOOKING
101521 / 436641,,000071          IORM  AC1,SATBIT(TAC)        ;;MARK IN USE
101522 / 135040,,037577           LDB  TAC, PUNIT             ;
101523 / 476001,,011753         SETOM      SATMOD(TAC)        ;;FLAG SAT TABLE IS BEING CHANGED
101524 / 432657,,000003          XORM  AC1,SATCHK(AC3)        ;;UPDATE CHECKSUM.
101525 / 700600,,002002          CONO   PI,002002             ;;LET THEM BACK IN
101526 / 202717,,000001         MOVEM  AC2,LSTBLK(AC3)        ;;REMEMBER THE LAST BLOCK THAT WAS USED
101527 / 350040,,000016           AOS  TAC,000016             ;;RETURN EXCESS 1 IN TAC.  (AVOID 0)
101530 / 350017,,000000           AOS            (AC3)        ;;COUNT ANOTHER BLOCK IN USE
101531 / 337657,,000004         SKIPG  AC1,BADCNT(AC3)        ;
101532 / 263140,,000000          POPJ    P,                   ;
101533 / 303640,,000055         CAILE  AC1,BADMAX             ;
101534 / 201640,,000055         MOVEI  AC1,BADMAX             ;
101535 / 525655,,777777         HRLOI  AC1,777777(AC1)        ;
101536 / 445657,,000000          EQVI  AC1,      (AC3)        ;;-BADCNT,,ADDRESS OF SAT TABLE
101537 / 316055,,000006          CAMN  TAC,BADTRK(AC1)        ;;SKIP UNLESS THIS BLOCK IS BAD
101540 / 254000,,101477          JRST      101477             ;;ASSIGN SOME OTHER BLOCK.
101541 / 253640,,101537         AOBJN  AC1,101537             ;
101542 / 263140,,000000          POPJ    P,                   ;
                       RTNBLK:
101543 / 135640,,037577           LDB  AC1, PUNIT             ;
101544 / 317055,,011747          CAMG  TAC,LSTBTB(AC1)        ;;SKIP IF INVALID BLOCK.
101545 / 365040,,101547         SOJGE  TAC,101547             ;;REMOVE EXCESS 1 AND JUMP IF VALID
101546 / 263140,,000000          POPJ    P,                   ;;INVALID BLOCK
101547 / 231040,,000044         IDIVI  TAC,    44             ;
101550 / 270055,,011733           ADD  TAC,SATADR(AC1)        ;
101551 / 201640,,000001         MOVEI  AC1,     1             ;
101552 / 241642,,000000           ROT  AC1,      (TAC1)       ;
101553 / 616641,,000071          TDNN  AC1,SATBIT(TAC)        ;
101554 / 263140,,000000          POPJ    P,                   ;;ALREADY OFF!
101555 / 412641,,000071        ANDCAM  AC1,SATBIT(TAC)        ;
101556 / 135040,,037577           LDB  TAC, PUNIT             ;
101557 / 476001,,011753         SETOM      SATMOD(TAC)        ;;FLAG SAT TABLE NEEDS OUTPUT
101560 / 200041,,011733          MOVE  TAC,SATADR(TAC)        ;
101561 / 432641,,000003          XORM  AC1,SATCHK(TAC)        ;;UPDATE CHECKSUM.
101562 / 370001,,000000           SOS            (TAC)        ;;DECREASE COUNT
101563 / 263140,,000000          POPJ    P,                   ;
                       MRKBLK:
101564 / 135640,,037577           LDB  AC1, PUNIT             ;
101565 / 317055,,011747          CAMG  TAC,LSTBTB(AC1)        ;;SKIP IF INVALID BLOCK.
101566 / 365040,,101570         SOJGE  TAC,101570             ;;REMOVE EXCESS 1 AND JUMP IF VALID
101567 / 263140,,000000          POPJ    P,                   ;;INVALID BLOCK
101570 / 231040,,000044         IDIVI  TAC,    44             ;
101571 / 270055,,011733           ADD  TAC,SATADR(AC1)        ;
101572 / 201640,,000001         MOVEI  AC1,     1             ;
101573 / 241642,,000000           ROT  AC1,      (TAC1)       ;
101574 / 612641,,000071          TDNE  AC1,SATBIT(TAC)        ;
101575 / 263140,,000000          POPJ    P,                   ;;ALREADY OFF!
101576 / 436641,,000071          IORM  AC1,SATBIT(TAC)        ;
101577 / 135040,,037577           LDB  TAC, PUNIT             ;
101600 / 476001,,011753         SETOM      SATMOD(TAC)        ;;FLAG SAT TABLE NEEDS OUTPUT
101601 / 200041,,011733          MOVE  TAC,SATADR(TAC)        ;
101602 / 432641,,000003          XORM  AC1,SATCHK(TAC)        ;;UPDATE CHECKSUM.
101603 / 350001,,000000           AOS            (TAC)        ;;DECREASE COUNT
101604 / 263140,,000000          POPJ    P,                   ;
                       CSATID:
101605 / 135040,,037577           LDB  TAC, PUNIT             ;
101606 / 326040,,037403         JUMPN  TAC,037403             ;;DON'T BOTHER CHECKING SATID FOR UDPS
101607 / 200040,,007260          MOVE  TAC,007260             ;
101610 / 316040,,012553          CAMN  TAC,SATID1             ;
101611 / 312040,,012554          CAME  TAC,SATID2             ;
101612 / 304000,,000000          CAIA                         ;
101613 / 263140,,000000          POPJ    P,                   ;
101614 / 260140,,000316         PUSHJ    P,PUSHIT             ;
101615 / 260140,,044320         PUSHJ    P,DISDAT             ;
101616 / 260140,,044120         PUSHJ    P,DISERR             ;
101617 / 000000,,154123                                       ;
101620 / 000100,,007260        OCTQQQ      007260             ;
101621 / 000000,,153424                                       ;
101622 / 000100,,012553        OCTQQQ      SATID1             ;
101623 / 000000,,153427                                       ;
101624 / 000100,,012554        OCTQQQ      SATID2             ;
101625 / 000000,,154516                                       ;
101626 / 777777,,777777                                       ;
101627 / 476000,,036035         SETOM      036035             ;
101630 / 260140,,043761         PUSHJ    P,043761             ;
101631 / 260140,,000341         PUSHJ    P, POPIT             ;
101632 / 260140,,000347         PUSHJ    P,DDTCAL             ;
101633 / 254000,,101605          JRST      CSATID             ;
                       ;CALLED FROM ERROR2 IN DSKERR INSIDE PUSHACS
                       MRKBAD:
101634 / 335040,,012224        SKIPGE  TAC,012224             ;;LOGICAL NO. OF THIS TRACK
                       ;	CAILE	TAC,LSTBIT		;DON'T BAD TRACK UDP!!(NOT ANYMORE)
101635 / 263140,,000000          POPJ    P,                   ;;IF SAT OR SWAP IGNORE.
                       ;GUARANTEED FILE SYSTEM OP IF DSKLRN < 0 (I THINK THEY MEAN > --BH)
101636 / 200300,,002443          MOVE  DDB,002443             ;
101637 / 135640,,037577           LDB  AC1, PUNIT             ;
101640 / 336655,,011733         SKIPN  AC1,SATADR(AC1)        ;;DOUBLE CHECK THAT THERE'S A SAT
101641 / 263140,,000000          POPJ    P,                   ;;ELSE RESTORE ACS
101642 / 336115,,000004         SKIPN TAC1,BADCNT(AC1)        ;;GET NUMBER OF ENTRIES IN TABLE
101643 / 254000,,101653          JRST      101653             ;;NONE YET
101644 / 303100,,000055         CAILE TAC1,000055             ;;ONLY CHECK EXISTING TABLE
101645 / 201100,,000055         MOVEI TAC1,BADMAX             ;
                       MRKBD0:
101646 / 201715,,000000         MOVEI  AC2,      (AC1)        ;
101647 / 271702,,000000          ADDI  AC2,      (TAC1)       ;
101650 / 316056,,000005          CAMN  TAC,000005(AC2)        ;;IS THIS BAND ALREADY IN TBL ?
101651 / 263140,,000000          POPJ    P,                   ;;YES. DON'T ENTER IT AGAIN.
101652 / 367100,,101646          SOJG TAC1,MRKBD0             ;
                       MRKBD1:
101653 / 350115,,000004           AOS TAC1,BADCNT(AC1)        ;;INC. NO. OF BAD TRACKS IN TABLE.
101654 / 305100,,000055         CAIGE TAC1,000055             ;;TOO MANY FOR ONE UNIVERSE ?
101655 / 254000,,101676          JRST      101676             ;;NO, GO ON
101656 / 260140,,044066         PUSHJ    P,DISMES             ;
101673 / 476000,,036035         SETOM      036035             ;
101674 / 260140,,043761         PUSHJ    P,043761             ;
101675 / 254200,,037403          HALT       CPOPJ             ;
                       MRKBD2:
101676 / 271115,,000000          ADDI TAC1,      (AC1)        ;
101677 / 202042,,000005         MOVEM  TAC,000005(TAC1)       ;;ADD CURRENT TRACK TO BAD TRACK TABLE.
101700 / 272055,,000005          ADDM  TAC,BADCHK(AC1)        ;;UPDATE THE CHECKSUM.
101701 / 261155,,000004          PUSH    P,BADCNT(AC1)        ;;(MRKBLK CLOBBERS AC1)
101702 / 260140,,101564         PUSHJ    P,101564             ;;MARK TRACK IN SAT TABLE, SO IT WON'T GET USED
101703 / 260140,,044066         PUSHJ    P,DISMES             ;
101712 / 262140,,000001           POP    P,   TAC             ;
101713 / 260140,,044230         PUSHJ    P,DISDCP             ;
101714 / 260140,,044066         PUSHJ    P,DISMES             ;
101717 / 201040,,000055         MOVEI  TAC,BADMAX             ;
101720 / 260140,,044230         PUSHJ    P,DISDCP             ;
101721 / 254000,,044076          JRST      044076             ;
                       ;DELETE A FILE, FREE DISK BLOCKS
                       DELETE:
101722 / 260140,,101177         PUSHJ    P,101177             ;;SET UP RTVL FETCH
101723 / 201240,,101730         MOVEI  DAT,DELFIL             ;
101724 / 200646,,000016          MOVE  AC1,FILLNG(DDB)        ;
101725 / 303640,,144000         CAILE  AC1,144000             ;
101726 / 254000,,102136          JRST      102136             ;;MARK ALL BLOCKS EMPTY, CLEAR RTVL
101727 / 254000,,102104          JRST      QEWAIT             ;
                       ;*** INTERRUPT SUBR ***
                       DELFIL:
101730 / 260140,,101747         PUSHJ    P,DELBLK             ;
101731 / 622000,,100000          TRZE      100000             ;;WAS THERE AN ERROR ?
101732 / 254000,,077645          JRST       DSIOS             ;
101733 / 200046,,000021          MOVE  TAC, USETP(DDB)        ;
                       DELF2:
101734 / 260140,,101265         PUSHJ    P,101265             ;;RETURN BLOCKS TO SAT
101735 / 322040,,101737         JUMPE  TAC,101737             ;;NO SUCH BLOCK
101736 / 260140,,101543         PUSHJ    P,RTNBLK             ;
101737 / 201040,,000022         MOVEI  TAC,RCPBLK             ;
101740 / 273046,,000021          ADDB  TAC, USETP(DDB)        ;
101741 / 200106,,000057          MOVE TAC1,DGRP1R(DDB)        ;
101742 / 305042,,001100         CAIGE  TAC,RCPGRP(TAC1)       ;;HAVE WE GOT TO NXT GRP?
101743 / 254000,,101734          JRST      101734             ;;STILL IN THIS ONE, CONTINUE
                       DELF3:
101744 / 332006,,000060         SKIPE      DNXTGP(DDB)        ;;IS THERE A NEXT GROUP?
101745 / 254000,,101730          JRST      101730             ;;YES, DO IT
101746 / 263140,,000000          POPJ    P,                   ;
                       DELBLK:
101747 / 260140,,101231         PUSHJ    P,101231             ;;GET INTO CORE
101750 / 260140,,101162         PUSHJ    P,AUDCHK             ;
101751 / 623000,,000200          TLZE      LOSBIG             ;
101752 / 254000,,101762          JRST      DELBK1             ;
101753 / 135700,,037575           LDB  AC2,037575             ;;GET JOB # OF LOSER DELETING FILE
101754 / 200656,,030142          MOVE  AC1,JOBNAM(AC2)        ;;NOW REMEMBER SOMETHING ABOUT HIM
101755 / 202646,,000064         MOVEM  AC1,000064(DDB)        ;
101756 / 200656,,027720          MOVE  AC1,PRJPRG(AC2)        ;
101757 / 202646,,000065         MOVEM  AC1,000065(DDB)        ;
101760 / 402006,,000061         SETZM      DSATID(DDB)        ;;JUST CLEAR SATID TO FREE THIS BLOCK
101761 / 254000,,101125          JRST      101125             ;;AND POOT IT BACK OUT
                       DELBK1:
101762 / 660000,,100000           TRO      IODTER             ;
101763 / 254000,,077645          JRST       DSIOS             ;
                       ; SWAPPER INTERFACE
                       ;	EXTERNAL SERACT,JOBDAC,MJOBCK,FINISH,JBTCHK,SERA
                       ;	INTERNAL DFWRT,DFRED
                       ;ENTER HERE FROM SWAPPER TO START SWAP (DISK IDLE.)
                       ;TAC=DISK ADDR=SERA; TAC1=IOWD=SQREQ.
                       DFWRT:
                       DFRED:
101764 / 700600,,001002          CONO   PI,001002             ;;JUST FOR SAFETY.
101765 / 260140,,101772         PUSHJ    P,DSSTRT             ;
101766 / 205740,,001527         MOVSI   17,001527             ;;RETURN HERE AFTER STARTING XFER
101767 / 251740,,000017           BLT   17,000017             ;;RELOAD CH7 AC'S (ESP. P)
101770 / 700600,,002002          CONO   PI,002002             ;;SAFE NOW
101771 / 263140,,000000          POPJ    P,                   ;;GO TO SWPXIT
                       DSSTRT:
101772 / 262140,,002434           POP    P,INTRTN             ;
101773 / 264000,,002525           JSR      002525             ;;SET UP CH6 PDL.
101774 / 260140,,102007         PUSHJ    P,102007             ;;RETURNS HERE WHEN XFER DONE
101775 / 254000,,102162          JRST      102162             ;;GO DO NEXT I-SUBR.
                       ;ENTER HERE FROM DISK QUEUE SERVICE AFTER FINISHING I-SUBR.
                       SQGOA:
101776 / 201100,,000001         MOVEI TAC1, TRIES             ;
101777 / 202100,,022063         MOVEM TAC1,SERACT             ;
102000 / 205040,,200000         MOVSI  TAC,200000             ;;PUT IN A BIT...
102001 / 437040,,022061           ORB  TAC,022061             ;;TO INDICATE SWAP OP.
102002 / 200100,,022060          MOVE TAC1, SQREQ             ;
102003 / 214200,,021630          MOVM    J,FINISH             ;
102004 / 560200,,000004          HRRO    J,000004             ;;NEG TO INDICATE SWAPPER
102005 / 260140,,102010         PUSHJ    P,102010             ;;DO SWAP OP.
102006 / 254000,,102162          JRST      102162             ;;GO DO NEXT I-SUBR.
                       ;SET UP SWAP OPERATION AND EXECUTE IT.
                       ;ENTER WITH TAC=DISK ADDR=SERA; +1B0 IF INCOMING.
                       ;TAC1=IOWD=SQREQ.
                       SQGOX1:
102007 / 271100,,000001          ADDI TAC1,000001             ;;CONVERT IOWD TO 167 FORMAT
                       SQGOX:
102010 / 200300,,002540          MOVE  DDB,002540             ;;GET THE RIGHT DDB
102011 / 202106,,000041         MOVEM TAC1,TFRIOW(DDB)        ;
102012 / 201240,,000006         MOVEI  DAT,IOPCHN             ;
102013 / 331000,,022061         SKIPL        SERA             ;
102014 / 660240,,000100           TRO  DAT,DWRITE             ;
102015 / 206246,,000042         MOVSM  DAT,TFRCTL(DDB)        ;
102016 / 260140,,102070         PUSHJ    P,102070             ;;SPECIAL BLOCK TO SECTOR
102017 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
                       SQGO2:
102020 / 403006,,000002         SETZB      DEVIOS(DDB)        ;;MAKE SURE THERE ARE NO ERROR BITS ON!
102021 / 260140,,045233         PUSHJ    P,SETACT             ;
102022 / 260140,,102330         PUSHJ    P,102330             ;;ZORCH
102023 / 201000,,010000         MOVEI       IOACT             ;
102024 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
102025 / 602000,,400000          TRNE      400000             ;;IMMEDIATE ERROR?
102026 / 254000,,102032          JRST      SWPLUZ             ;
102027 / 602000,,300000          TRNE      300000             ;
102030 / 254000,,102057          JRST      SWPERR             ;
102031 / 254000,,102062          JRST      102062             ;;NO ERRORS
                       SWPLUZ:
102032 / 260140,,000316         PUSHJ    P,PUSHIT             ;
102033 / 260140,,044066         PUSHJ    P,DISMES             ;
102053 / 476000,,036035         SETOM      036035             ;
102054 / 260140,,043761         PUSHJ    P,043761             ;
102055 / 260140,,000341         PUSHJ    P, POPIT             ;
102056 / 254200,,102020          HALT       SQGO2             ;
                       SWPERR:
102057 / 373000,,022063         SOSLE      022063             ;;COUNT DOWN
102060 / 254000,,102020          JRST      102020             ;;TRY AGAIN
102061 / 660000,,200000           TRO      200000             ;;TRIED ENOUGH, DIE
                       SNOERR:
102062 / 200040,,000000          MOVE  TAC,                   ;
102063 / 405040,,300000          ANDI  TAC,300000             ;;GET ERROR BITS, IF ANY.
102064 / 202040,,022061         MOVEM  TAC,022061             ;;GIVE TO SWAPPER.
102065 / 402000,,022060         SETZM       SQREQ             ;
102066 / 402000,,022062         SETZM      022062             ;;WAKE UP SWAPPER.
102067 / 263140,,000000          POPJ    P,                   ;
                       ;MORE MISC: CONVERT SWPSER BLOCK ADDRESS TO DISC ADDRESS.
                       ;COURTESY J. SAUTER
                       SBK2SC:
102070 / 550040,,000001          HRRZ  TAC,   TAC             ;
102071 / 231040,,001140         IDIVI  TAC,001140             ;;↑D1216/2
102072 / 242040,,000014           LSH  TAC,000014             ;;MAKE BAND NO.
102073 / 661040,,400000           TLO  TAC,400000             ;;INDICATE SWAP OP
102074 / 263140,,000000          POPJ    P,                   ;
                       ;ENTER HERE FOR HIGH PRIORITY TRANSFER (CURRENTLY ONLY UDP IO).
                       UEWAIT:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
102075 / 632000,,152073          TDZE      152073             ;
102076 / 260140,,046176         PUSHJ    P, WSYNC             ;
102077 / 205640,,400000         MOVSI  AC1,DEVIBF             ;
102100 / 412646,,777777        ANDCAM  AC1,DEVCMR(DDB)        ;
102101 / 260140,,045233         PUSHJ    P,SETACT             ;
102102 / 260140,,102113         PUSHJ    P,102113             ;;MERGE WITH Q-ENTER CODE
102103 / 254000,,046176          JRST      046176             ;;AND WAIT FOR FINISH
                       ;ENTER I-SUBR CALL IN QUEUE FROM UUO LEVEL.
                       QEWAIT:
102104 / 261140,,102135          PUSH    P,102135             ;;QUEUE REQUEST. RETURN TO WSYNC TO WAIT
                       QENTER:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
102105 / 632000,,152073          TDZE      152073             ;
102106 / 260140,,046176         PUSHJ    P,046176             ;;JUST IN CASE SOMEBODY GOOFED.
102107 / 205640,,400000         MOVSI  AC1,DEVIBF             ;
102110 / 412646,,777777        ANDCAM  AC1,DEVCMR(DDB)        ;
102111 / 260140,,045233         PUSHJ    P,045233             ;;STORES IOS
                       QE1:
102112 / 634640,,000015          TDZA  AC1,000015             ;;SELECT NORMAL DISK QUEUE
                       QUE1:
102113 / 201640,,000001         MOVEI  AC1,000001             ;;SELECT UDP QUEUE
102114 / 332035,,002421         SKIPE      @ MIPTR(AC1)       ;
102115 / 254000,,102114          JRST      102114             ;;CRASH IF QUEUE FULL
102116 / 700600,,001002          CONO   PI,001002             ;;INTS OFF UNTIL IACTIV:
102117 / 506335,,002421          HRLM  DDB,@ MIPTR(AC1)       ;;DDB ADDR...
102120 / 542275,,002421          HRRM  DAT,@ MIPTR(AC1)       ;;AND SUBROUTINE ADDR.
102121 / 350255,,002421           AOS  DAT, MIPTR(AC1)        ;;BUMP QUEUE POINTER
102122 / 350000,,002432           AOS      002432             ;;ANOTHER LOSER INTO QUEUE
102123 / 311255,,002425          CAML  DAT, MQEND(AC1)        ;
102124 / 200255,,002427          MOVE  DAT, MQBEG(AC1)        ;
102125 / 202255,,002421         MOVEM  DAT, MIPTR(AC1)        ;
102126 / 211240,,000001         MOVNI  DAT,     1             ;
102127 / 250240,,002431          EXCH  DAT,DFBUSY             ;
102130 / 326240,,102134         JUMPN  DAT,102134             ;;RETURN IF INT PGM RUNNING.
102131 / 260140,,102146         PUSHJ    P,102146             ;;SAVE UUO AC'S, START I-LEVEL
                       INSRTN:
102132 / 205740,,001527         MOVSI   17,001527             ;;RELOAD UUO AC'S FROM INT. SAVE.
102133 / 251740,,000017           BLT   17,000017             ;;CH6 INTS INHIBITED UNTIL THIS DONE.
                       IACTIV:
102134 / 700600,,002002          CONO   PI, IOPON             ;
                       PWSYNC:
102135 / 263140,,046176          POPJ    P,046176             ;;RETURN TO UUO CALLER.
                       NEWAIT:
102136 / 261140,,102135          PUSH    P,102135             ;;RETURN FROM NENTER TO WSYNC
                       NENTER:
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
102137 / 632000,,152073          TDZE      152073             ;
102140 / 260140,,046176         PUSHJ    P, WSYNC             ;
102141 / 205640,,400000         MOVSI  AC1,DEVIBF             ;
102142 / 436646,,777777           ORM  AC1,DEVCMR(DDB)        ;
102143 / 661000,,001000           TLO      DEVSBB             ;
102144 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
102145 / 254000,,102112          JRST         QE1             ;
                       ;RETURN HERE FROM TSTART WITH I-AC'S SAVED.
                       DIGO:
102146 / 262140,,002434           POP    P,002434             ;;ARRANGE I-LEVEL DISMISS
102147 / 264000,,002525           JSR      002525             ;;SAVE UUO AC'S IN CH6 AREA.  MUST NOT HAVE
                       ;CH6 INTERRUPT UNTIL THESE ARE RESTORED.
                       ;SET UP I-LEVEL PDL (OTHER AC'S NOT NEEDED)
102150 / 254000,,102160          JRST      102160             ;;GO CALL SUBR
                       ;I-LEVEL SUBRS RETURN HERE WHEN DONE TO START ANOTHER REQUEST.
                       DNXTRQ:
102151 / 200640,,002407          MOVE  AC1,  QALT             ;
102152 / 402035,,002424         SETZM      @002424(AC1)       ;;WIPE OUT RQ JUST FINISHED
102153 / 350055,,002424           AOS  TAC,002424(AC1)        ;;ADVANCE POINTER
102154 / 370000,,002432           SOS      002432             ;;ONE LESS LOSER IN QUEUE
102155 / 311055,,002426          CAML  TAC,002426(AC1)        ;
102156 / 200055,,002430          MOVE  TAC,002430(AC1)        ;
102157 / 202055,,002424         MOVEM  TAC,002424(AC1)        ;
                       DNSTRT:
102160 / 332000,,022060         SKIPE      022060             ;;IF SWAPPER WANTS SOMETHING,
102161 / 254000,,101776          JRST      101776             ;;GO SEE ABOUT IT.
                       DNSTR1:
102162 / 463640,,002407        SETCMB  AC1,002407             ;;SELECT A QUEUE
102163 / 336075,,002424         SKIPN  TAC,@002424(AC1)       ;;GET NEXT REQUEST.
102164 / 254000,,102167          JRST      102167             ;;NONE PENDING, FLAG IDLE
102165 / 260140,,102174         PUSHJ    P,102174             ;;COMMON SETUP AND DISPATCH
                       ISRTN:
102166 / 254000,,102151          JRST      DNXTRQ             ;
                       DFSTOP:
102167 / 450640,,000015         SETCA  AC1,   AC1             ;
102170 / 332035,,002424         SKIPE      @002424(AC1)       ;
102171 / 254000,,102160          JRST      102160             ;;OTHER QUEUE HAS SOMETHING.  DO IT
102172 / 402000,,002431         SETZM      DFBUSY             ;
102173 / 254020,,002434          JRST      @002434            ;;RESTORE USER AC'S, DISMISS
                       DSETUP:
102174 / 554300,,000001          HLRZ  DDB,   TAC             ;
102175 / 403340,,007253         SETZB PROG,007253             ;;FLAG SYSBUF EMPTY
102176 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
102177 / 135200,,037575           LDB    J, PJOBN             ;
102200 / 205640,,400000         MOVSI  AC1,DEVIBF             ;
102201 / 612646,,777777          TDNE  AC1,DEVCMR(DDB)        ;
102202 / 254000,,102212          JRST      DNSTR2             ;
102203 / 623000,,001000          TLZE      DEVSBB             ;
102204 / 260140,,102240         PUSHJ    P, MESS2             ;
102205 / 332000,,000004         SKIPE           J             ;
102206 / 332344,,027120         SKIPE PROG,JBTADR(J)          ;
102207 / 666000,,010000          TRON       IOACT             ;
102210 / 260140,,102255         PUSHJ    P, MESS3             ;
102211 / 254000,,102216          JRST      DNSTR3             ;
                       DNSTR2:
102212 / 622000,,010000          TRZE       IOACT             ;
102213 / 260140,,102267         PUSHJ    P, MESS4             ;
102214 / 667000,,001000          TLON      DEVSBB             ;
102215 / 260140,,102303         PUSHJ    P, MESS5             ;
                       DNSTR3:
102216 / 260141,,000000         PUSHJ    P,      (TAC)        ;;CALL SUBR
                       DRQDN:
102217 / 205640,,400000         MOVSI  AC1,DEVIBF             ;
102220 / 412646,,777777        ANDCAM  AC1,DEVCMR(DDB)        ;
152073 / 001000,,010000           XWD DEVSBB,IOACT            ;
102221 / 636000,,152073          TDZN      152073             ;;MOST SUBRS POPJ, THEN
102222 / 260140,,102226         PUSHJ    P,102226             ;;IOACT OFF AT....
102223 / 623000,,000001          TLZE      000001             ;;DO THIS RITUAL TO...
102224 / 260140,,046107         PUSHJ    P,046107             ;;GET OUT OF IO WAIT
102225 / 254000,,077645          JRST      077645             ;;STORE IOS!
                       MESS1:
102226 / 260140,,000316         PUSHJ    P,PUSHIT             ;
102227 / 260140,,044320         PUSHJ    P,044320             ;
102230 / 260140,,044066         PUSHJ    P,DISMES             ;
102236 / 260140,,000341         PUSHJ    P, POPIT             ;
102237 / 254000,,077645          JRST       DSIOS             ;
                       MESS2:
102240 / 260140,,000316         PUSHJ    P,PUSHIT             ;
102241 / 260140,,044320         PUSHJ    P,044320             ;
102242 / 260140,,044066         PUSHJ    P,DISMES             ;
102253 / 260140,,000341         PUSHJ    P, POPIT             ;
102254 / 254000,,077645          JRST       DSIOS             ;
                       MESS3:
102255 / 260140,,000316         PUSHJ    P,PUSHIT             ;
102256 / 260140,,044320         PUSHJ    P,044320             ;
102257 / 260140,,044066         PUSHJ    P,DISMES             ;
102265 / 260140,,000341         PUSHJ    P, POPIT             ;
102266 / 254000,,077645          JRST       DSIOS             ;
                       MESS4:
102267 / 260140,,000316         PUSHJ    P,PUSHIT             ;
102270 / 260140,,044320         PUSHJ    P,044320             ;
102271 / 260140,,044066         PUSHJ    P,DISMES             ;
102301 / 260140,,000341         PUSHJ    P, POPIT             ;
102302 / 254000,,077645          JRST       DSIOS             ;
                       MESS5:
102303 / 260140,,000316         PUSHJ    P,PUSHIT             ;
102304 / 260140,,044320         PUSHJ    P,044320             ;
102305 / 260140,,044066         PUSHJ    P,DISMES             ;
102314 / 260140,,000341         PUSHJ    P, POPIT             ;
102315 / 254000,,077645          JRST       DSIOS             ;
                       ;I-LEVEL SUBRS PUSHJ HERE TO START A TRANSFER.
                       TSTART:
102316 / 201040,,000001         MOVEI  TAC, TRIES             ;
102317 / 542046,,000042          HRRM  TAC,TFRCTL(DDB)        ;
                       TREDO:
102320 / 260140,,102330         PUSHJ    P,   TGO             ;
                       TFSRTN:
102321 / 606000,,300000          TRNN      300000             ;;ANY ERRORS?
102322 / 263140,,000000          POPJ    P,                   ;;NO, OK RETURN.
102323 / 370046,,000042           SOS  TAC,TFRCTL(DDB)        ;;COUNT DOWN
102324 / 602040,,777777          TRNE  TAC,777777             ;;TRIED ENOUGH?
102325 / 254000,,102320          JRST      102320             ;;NO, TRY AGAIN.
102326 / 661000,,000200           TLO      000200             ;;INFORM THE HIGHER-UPS.
102327 / 263140,,000000          POPJ    P,                   ;;RETURN LOSSAGE.
                       TGO:
102330 / 202300,,002545         MOVEM  DDB,   DXB             ;
102331 / 202200,,002547         MOVEM    J,   DXJ             ;
102332 / 202140,,002550         MOVEM    P,   DXP             ;
102333 / 620000,,300000           TRZ      300000             ;;WE HAVEN'T LOST YET.
102334 / 200046,,000040          MOVE  TAC,TFRSEC(DDB)        ;
102335 / 202040,,002551         MOVEM  TAC,   DXS             ;
102336 / 200046,,000041          MOVE  TAC,TFRIOW(DDB)        ;
102337 / 202040,,002552         MOVEM  TAC,   DXW             ;
102340 / 554046,,000042          HLRZ  TAC,TFRCTL(DDB)        ;
102341 / 202040,,002546         MOVEM  TAC,   DXC             ;
102342 / 254000,,103022          JRST      GO2314             ;
                       ;	ERROR HANDLING
                       ;ERRORS, CLASS 1. ENTER, ETC. RETURN CODES IN E+1
                       ENOUFD:
102343 / 262140,,000001           POP    P,000001             ;;ADJUST STACK
102344 / 262140,,000001           POP    P,   TAC             ;
102345 / 254000,,102347          JRST      ENOUF1             ;
                       ENOFIL:
102346 / 265040,,102364           JSP  TAC,102364             ;;0 - ZERO FILE NAME
                       ENOUF1:
102347 / 265040,,102364           JSP  TAC,102364             ;;1 - NO UFD
                       EPROT:
102350 / 265040,,102364           JSP  TAC,102364             ;;2 - PROTECT VIOLATION
                       EFWRIT:
102351 / 265040,,102364           JSP  TAC,102364             ;;3 - FILE BEING WRITTEN
                       EDNAME:
102352 / 265040,,102364           JSP  TAC,102364             ;;4 - NAME IN USE
                       EXFIL:
102353 / 265040,,102364           JSP  TAC,102364             ;;5 - NO LOOKUP OR ENTER - RENAME
                       EANAME:
102354 / 265040,,102364           JSP  TAC,102364             ;;6 - ENTER (ALTER) NAME DISAGREES
                       ENODEV:
102355 / 265040,,102364           JSP  TAC,102364             ;;7 - NO DEVICE (NO INIT)
                       EGARB1:
102356 / 265040,,102361           JSP  TAC,102361             ;;10 - GARBAGED UFD (POINTER OUT OF RANGE)
                       ; - AND OLD UDPS ACCESSED BY NEW UDPSER
                       EGARB2:
102357 / 265040,,102361           JSP  TAC,102361             ;;11 - GARBAGED FILE (POINTER WRONG)
                       EFULLZ:
102360 / 265040,,102364           JSP  TAC,102364             ;;12 - DISK IS FULL, TRY AGAIN LATER
                       ERRC2:
102361 / 606000,,000200          TRNN      000200             ;;SUPPRESS "BAD RTVL" MESSAGE??
102362 / 254000,,102442          JRST      102442             ;;NO. NOT A SPECIAL PERSON.
102363 / 260140,,102502         PUSHJ    P,102502             ;;HOLD ALL FURTHER I/O.
                       ERRC1:
102364 / 275040,,102347          SUBI  TAC,102347             ;;GET ERROR CODE
151455 / 542054,,000001          HRRM  TAC,ERRBOX(UUO)        ;
102365 / 256240,,151455          XCTR  XRW,151455             ;;STUFF ERROR CODE
102366 / 405040,,777777          ANDI  TAC,777777             ;
102367 / 302040,,000011          CAIE  TAC,000011             ;;ALLOW RENAME OF FILE WITH BAD RETRIEVAL
102370 / 402006,,000011         SETZM      FILNAM(DDB)        ;;DISABLE RENAME.
102371 / 254000,,102502          JRST      102502             ;;DISABLE I/O. DOES NOT RETURN.
                       ;ERRORS, CLASS 2. FLUSH USER, GO TO SYSTEM.
                       ENTFUL:
102372 / 260140,,102360         PUSHJ    P,102360             ;;GIVE FUNNY ERROR CODE
102373 / 602000,,000200          TRNE      000200             ;;IS HE ENABLED FOR DIRECT RETURN?
102374 / 263140,,000000          POPJ    P,                   ;;YES. DO IT
                       EDFULL:
102375 / 261140,,000000          PUSH    P,                   ;;SAVE THE RELEVANT ACS
102376 / 260140,,077605         PUSHJ    P,077605             ;;CLEAR GOBIT IF SET AND SAVE ITS STATE
102377 / 261140,,000006          PUSH    P,   DDB             ;
102400 / 260140,,137616         PUSHJ    P,137616             ;;FIND TTY
102401 / 260140,,042676         PUSHJ    P,INLMES             ;
102406 / 260140,,042713         PUSHJ    P,042713             ;;TYPE CRLF ↑C
102407 / 260140,,137704         PUSHJ    P,137704             ;;SET TTY INTO COMMAND MODE.
102410 / 260140,,045672         PUSHJ    P,045672             ;;STOP THE JOB
102411 / 262140,,000006           POP    P,   DDB             ;
102412 / 262140,,000000           POP    P,                   ;; RESTORE THE ACCUMULATORS
102413 / 263140,,000000          POPJ    P,                   ;; AND RETURN TO SENDER.
                       ENOENT:
102414 / 265040,,043571           JSP  TAC,ERRPTU             ;
102422 / 254000,,043656          JRST      EXCALP             ;
                       ENOLUK:
102423 / 265040,,043571           JSP  TAC,ERRPTU             ;
102431 / 254000,,043656          JRST      EXCALP             ;
                       ELOSE:
102432 / 265040,,043571           JSP  TAC,ERRPTU             ;
102437 / 254000,,043656          JRST      EXCALP             ;
                       EGARJ2:
102440 / 262140,,000001           POP    P,   TAC             ;
                       EGARPJ:
102441 / 262140,,000001           POP    P,000001             ;;FIX UP STACK
                       EGARB:
102442 / 260140,,102502         PUSHJ    P,102502             ;;HOLD ALL I/O.
102443 / 602000,,300000          TRNE      300000             ;;MACHINE OR DATA ERRORS?
102444 / 254000,,102452          JRST      102452             ;;2314 SCREW-UP
102445 / 265040,,043571           JSP  TAC,ERRPTU             ;
102451 / 254000,,043656          JRST      EXCALP             ;
                       EGARC:
102452 / 265040,,043571           JSP  TAC,ERRPTU             ;
102460 / 254000,,043656          JRST      EXCALP             ;
                       EACMFD:
102461 / 265040,,043571           JSP  TAC,ERRPTU             ;
102467 / 254000,,043656          JRST      EXCALP             ;
                       EDMPLS:
102470 / 265040,,043571           JSP  TAC,ERRPTU             ;
102501 / 254000,,043656          JRST      EXCALP             ;
                       ERZIOS:
102502 / 621000,,740200           TLZ      740200             ;
102503 / 254000,,077605          JRST      077605             ;;TUCK IOS AWAY. DON'T LET USER DO ANYTHING.
                       ; USER DISK PACK SERVICE
                       ;SYSTEM INITIALIZATION:
                       ; CLEAR DEVIOS FOR EACH UDP
                       ; SET DVDSK IN DEVMOD - DEFAULT NEW STYLE
                       ; LINK MODEL DDBS TOGETHER, LINKING OUT COPIED DDBS THAT WERE IN FREE STG
                       UDPINI:
102504 / 205100,,200000         MOVSI TAC1, DVDSK             ;
102505 / 201040,,074756         MOVEI  TAC,DSKDSP             ;
102506 / 402000,,012070         SETZM      012070             ;
102507 / 436100,,012072          IORM TAC1,012072             ;;INITIALLY DVDSK IN UDP DDBS
102510 / 505040,,017175          HRLI  TAC,PTRDDB             ;
102511 / 202040,,012071         MOVEM  TAC,012071             ;;;replaced;;MOVEM TAC,DEVSER+CAT(CAT(UDP,\UPACKS),DD)
102512 / 263140,,000000          POPJ    P,                   ;
102513 / 254000,,075063          JRST      075063             ;;GIVE BACK DDB
102514 / 254000,,075044          JRST      075044             ;;MAKE DDB
102515 / 254000,,102504          JRST      102504             ;;INITIALIZE
102516 / 254000,,075006          JRST      075006             ;;HUNG TIMEOUT
                       UDPDSP:
102517 / 254000,,102502          JRST      102502             ;;RELEASE, DISABLE WRITE
102520 / 254000,,102502          JRST      102502             ;;CLOSE OUTPUT, SAME
102521 / 254000,,043340          JRST      043340             ;;BUFFERED OUTPUT
102522 / 254000,,043340          JRST      043340             ;;BUFFERED INPUT
102523 / 254000,,102650          JRST      102650             ;;ENTER, CHECK PASS WORD
102524 / 254000,,043340          JRST      043340             ;;LOOKUP
102525 / 254000,,102540          JRST      102540             ;;DUMP OUTPUT
102526 / 254000,,102536          JRST      102536             ;;DUMP INPUT
102527 / 254000,,043340          JRST      043340             ;;USETO
102530 / 254000,,043340          JRST      043340             ;;USETI
102531 / 254000,,043340          JRST      043340             ;;UGETF
102532 / 254000,,102664          JRST      102664             ;;RENAME, SET PASS WORD
102533 / 263140,,000000          POPJ    P,                   ;;CLOSE INPUT
102534 / 263140,,000000          POPJ    P,                   ;;UTPCLR
102535 / 254000,,043340          JRST      043340             ;;MTAPE
                       UDPIN:
102536 / 201100,,000006         MOVEI TAC1,IOPCHN             ;
102537 / 254000,,102543          JRST      UDPSER             ;
                       UDPOUT:
102540 / 607000,,100000          TLNN      100000             ;;ENTER DONE?
102541 / 254000,,102414          JRST      102414             ;;NO
102542 / 201100,,000106         MOVEI TAC1,000106             ;
                       UDPSER:
102543 / 206106,,000042         MOVSM TAC1,TFRCTL(DDB)        ;
102544 / 550640,,000014          HRRZ  AC1,000014             ;;CHECK EVERY ADDRESS IN SIGHT.
102545 / 260140,,044504         PUSHJ    P,044504             ;;FOR LEGAL ADDRESS RANGE.
102546 / 271640,,000001          ADDI  AC1,     1             ;
102547 / 260140,,044504         PUSHJ    P,044504             ;;CHECK LAST CL WORD TOO.
153043 / 331014,,000000         SKIPL            (UUO)        ;
102550 / 256200,,153043          XCTR   XR,153043             ;;THIS IS BECAUSE DMPCMD DOES BRANCHING!
102551 / 254000,,043211          JRST      043211             ;;ONLY IOWD'S ALLOWED
102552 / 260140,,075766         PUSHJ    P,075766             ;;CHECK FOR LEGAL IOWD
102553 / 202106,,000045         MOVEM TAC1,CORFAD(DDB)        ;
152467 / 200114,,000000          MOVE TAC1,      (UUO)        ;
102554 / 256200,,152467          XCTR   XR,152467             ;;GET IOWD
102555 / 135240,,037600           LDB  DAT,037600             ;;UPPER (IF ANY)
102556 / 322240,,102561         JUMPE  DAT,102561             ;;NONE, MUST BE IN LOWER
102557 / 550245,,027120          HRRZ  DAT,JBTADR(DAT)        ;;RELOC OF UPPER
102560 / 626100,,400000          TRZN TAC1,400000             ;;IN UPPER?
                       UDPS1:
102561 / 550240,,000007          HRRZ  DAT,000007             ;;AFTER ALL THAT ITS IN THE LOWER
102562 / 271105,,000001          ADDI TAC1,     1(DAT)        ;;RELOCATE AND MAKE IT XWD -WC,ADDRESS
102563 / 202106,,000041         MOVEM TAC1,TFRIOW(DDB)        ;;GOD ONLY KNOWS WHAT MCGUIRE WILL DO WITH THIS
151477 / 550114,,000001          HRRZ TAC1,     1(UUO)        ;
102564 / 256200,,151477          XCTR   XR,151477             ;;GET UDP BLOCK ADDR.
102565 / 135240,,037577           LDB  DAT, PUNIT             ;
152256 / 000005,,002354                                       ;
152256 / 044005,,002354 POINT 32,05002354,31                  ;
102566 / 135240,,152256           LDB  DAT,152256             ;;NUMBER OF CYLS ON THIS PACK
102567 / 221240,,000023         IMULI  DAT,000023             ;;MULTIPLY TO GET TOTAL NUMBER OF BLOCKS
102570 / 301105,,000000          CAIL TAC1,      (DAT)        ;;TOO BIG?
102571 / 254000,,043217          JRST      043217             ;;NO GOOD.
102572 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
102573 / 607040,,010000          TLNN  TAC,010000             ;;LET DUMPER(1,2) GET AT LAST BLOCK
102574 / 302105,,777777          CAIE TAC1,777777(DAT)        ;;LAST LOGICAL BLOCK
102575 / 304000,,000000          CAIA                         ;
102576 / 254000,,043217          JRST      UADRER             ;
102577 / 135040,,037577           LDB  TAC,037577             ;;GET UNIT NUMBER
102600 / 270101,,011737           ADD TAC1, BFSET(TAC)        ;;KLUGE UP START ADDR OF UDP.
102601 / 242100,,000006           LSH TAC1,000006             ;;PRETEND RECORD ZERO.
151521 / 554054,,000001          HLRZ  TAC,     1(UUO)        ;
102602 / 256200,,151521          XCTR   XR,151521             ;
102603 / 303040,,000022         CAILE  TAC,000022             ;;LEGAL RECORD NUMBER?
102604 / 254000,,043217          JRST      UADRER             ;
102605 / 434100,,000001           IOR TAC1,000001             ;;OR IT IN
102606 / 202106,,000040         MOVEM TAC1,TFRSEC(DDB)        ;
102607 / 260140,,077644         PUSHJ    P, GOSET             ;
102610 / 476006,,000053         SETOM       DDLOC(DDB)        ;
102611 / 201240,,102316         MOVEI  DAT,TSTART             ;
102612 / 260140,,102075         PUSHJ    P,UEWAIT             ;
102613 / 402006,,000053         SETZM       DDLOC(DDB)        ;
102614 / 254000,,077605          JRST       DPOPJ             ;
                       ;UDP PASS WORD STUFF
                       GPASIN:
102615 / 201240,,102716         MOVEI  DAT,102716             ;;READ PASSWORD BLOCK
102616 / 260140,,102136         PUSHJ    P,NEWAIT             ;
102617 / 602000,,300000          TRNE      300000             ;;ERRORS?
102620 / 254000,,102356          JRST      102356             ;;YES
151545 / 604163,,630000                                       ;
102621 / 200040,,151545          MOVE  TAC,151545             ;;CHECK FOR INITIALIZATION
102622 / 316046,,000047          CAMN  TAC,DSKDAT(DDB)        ;
102623 / 312046,,000050          CAME  TAC,000050(DDB)        ;
102624 / 254000,,037401          JRST      037401             ;;NOT INITIALIZED. LET HIM IN
                       ;HERE WE SHOULD VERIFY THAT IDSAT IN BLOCK 0 ISN'T USED
102625 / 135040,,037577           LDB  TAC, PUNIT             ;
102626 / 200640,,074742          MOVE  AC1,074742             ;;USE SYSBUF
102627 / 202646,,000041         MOVEM  AC1,TFRIOW(DDB)        ;;SET IT IN THE DDB
102630 / 201240,,102733         MOVEI  DAT,CHKSAT             ;
102631 / 260140,,102136         PUSHJ    P,102136             ;;CAUSE SAT TO BE READ AND WAIT FOR IT.
102632 / 200040,,002636          MOVE  TAC,002636             ;
151554 / 634164,,514400                                       ;
102633 / 312040,,151554          CAME  TAC,151554             ;
102634 / 263140,,000000          POPJ    P,                   ;
102635 / 265040,,043640           JSP  TAC,UUOMES             ;
                       PASSIT:
102650 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
102651 / 603040,,010000          TLNE  TAC,010000             ;;LET DUMPER THROUGH (1,2)
102652 / 254000,,102661          JRST      PASSI1             ;
102653 / 621000,,100000           TLZ      100000             ;;LOSE FOR NOW
102654 / 260140,,102615         PUSHJ    P,102615             ;;READ PASSWORD BLOCK. SKIP IF NONE THERE
102655 / 336046,,000051         SKIPN  TAC,000051(DDB)        ;;MAY NOT BE NECESSARY
102656 / 254000,,102661          JRST      102661             ;;BLANK PASSWORD, OR NO PASS BLOCK
152344 / 126367,,416012                                       ;
102657 / 312040,,152344          CAME  TAC,152344             ;;ALLOW WRITE ACCESS TO SCRATCH PACK
153023 / 316054,,000000          CAMN  TAC,      (UUO)        ;
102660 / 256200,,153023          XCTR   XR,153023             ;;GET PASSWORD FROM USER
                       PASSI1:
102661 / 665000,,100000          TLOA      100000             ;;ALLOW WRITE ACCESS
102662 / 254000,,102350          JRST      102350             ;;PROTECTION FAILURE
102663 / 254000,,077604          JRST      DPOPJ1             ;
                       PASSET:
102664 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
102665 / 603040,,010000          TLNE  TAC,010000             ;;LET DUMPER IN ALWAYS(1,2)
102666 / 254000,,102676          JRST      PASSE1             ;
102667 / 627000,,100000          TLZN      100000             ;;CAN HE DO THIS?
102670 / 254000,,102414          JRST      102414             ;;NO
102671 / 260140,,102615         PUSHJ    P,GPASIN             ;
102672 / 334046,,000051         SKIPA  TAC,000051(DDB)        ;
102673 / 254000,,102676          JRST      102676             ;;NO PASSBLOCK - LET'S MAKE ONE
152344 / 126367,,416012                                       ;
102674 / 316040,,152344          CAMN  TAC,152344             ;
102675 / 254000,,102350          JRST      102350             ;;CAN'T CHANGE PASSWORD OF SWAPPING PACK
                       PASSE1:
151545 / 604163,,630000                                       ;
102676 / 200040,,151545          MOVE  TAC,151545             ;
102677 / 202046,,000047         MOVEM  TAC,DSKDAT(DDB)        ;
102700 / 202046,,000050         MOVEM  TAC,000050(DDB)        ;
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
102701 / 256200,,152455          XCTR   XR,152455             ;;GET NEW PASS WORD!
102702 / 202046,,000051         MOVEM  TAC,000051(DDB)        ;
102703 / 402006,,000052         SETZM      000052(DDB)        ;
102704 / 541046,,000052          HRRI  TAC,000052(DDB)        ;
102705 / 504040,,000001           HRL  TAC,   TAC             ;
102706 / 271040,,000001          ADDI  TAC,     1             ;
102707 / 251046,,000106           BLT  TAC,000106(DDB)        ;;CLEAR THE REST
102710 / 201240,,102715         MOVEI  DAT,102715             ;;WRITE IN PASS WORD BLOCK
102711 / 260140,,102136         PUSHJ    P,NEWAIT             ;
102712 / 602000,,300000          TRNE      300000             ;;ERRORS?
102713 / 254000,,102356          JRST      EGARB1             ;
102714 / 254000,,102661          JRST      102661             ;;OK
                       ;****** I-LEVEL SUBR ******
                       PASOUT:
151730 / 000000,,000106                                       ;
102715 / 334040,,151730         SKIPA  TAC,151730             ;;WRITE
                       PASSIN:
102716 / 201040,,000006         MOVEI  TAC,000006             ;;READ
102717 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
151641 / 777740,,000047           XWD -SECSIZ,DSKDAT          ;
102720 / 200040,,151641          MOVE  TAC,151641             ;
102721 / 271046,,000000          ADDI  TAC,      (DDB)        ;
102722 / 202046,,000041         MOVEM  TAC,TFRIOW(DDB)        ;
102723 / 135100,,037577           LDB TAC1, PUNIT             ;
152255 / 000002,,002354                                       ;
152255 / 044002,,002354 POINT 32,02002354,31                  ;
102724 / 135040,,152255           LDB  TAC,152255             ;
102725 / 221040,,000023         IMULI  TAC,000023             ;
102726 / 275040,,000001          SUBI  TAC,     1             ;
102727 / 270042,,011737           ADD  TAC, BFSET(TAC1)       ;;ADD BASE ADDRESS
102730 / 242040,,000006           LSH  TAC,000006             ;;RECORD 0
102731 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
102732 / 254000,,102316          JRST      102316             ;;DO IT
                       CHKSAT:
102733 / 201040,,000006         MOVEI  TAC,000006             ;;READ
102734 / 206046,,000042         MOVSM  TAC,TFRCTL(DDB)        ;
102735 / 661000,,000100           TLO       SATOP             ;
102736 / 135040,,037577           LDB  TAC, PUNIT             ;
102737 / 200041,,011737          MOVE  TAC, BFSET(TAC)        ;;DISK ADDRESS OF SAT TABLE
102740 / 260140,,101302         PUSHJ    P,101302             ;;CONVERT BLOCK TO SECTOR
102741 / 202046,,000040         MOVEM  TAC,TFRSEC(DDB)        ;
102742 / 260140,,102316         PUSHJ    P,TSTART             ;
102743 / 621000,,000100           TLZ       SATOP             ;
102744 / 263140,,000000          POPJ    P,                   ;
102745 /               ;: DSKSER[J17,SYS] EOF.
102745 /               ;: DSKINT[J17,SYS]
102745 /                 ;::   BEGIN STANFO.DSKSER.DSKINT.
                       ; DEVICE DEPENDENT ROUTINE FOR THE 3330
                       ;THIS ONE RECOVERS FROM ERRORS AS MUCH AS POSSIBLE.
                       ;HUNG COUNT FOR DISK IN SECONDS
                       ;BITS FOR CONO/CONI 500: CONDITION MASKS.
                       ;LEFT HALF
                       ;RIGHT HALF
                       ;BITS FOR CONO 504.
                       ;STATUS BITS IN CONI PMP (500)
                       ;THE FOLLOWING BITS ARE FOUND IN THE FIRST 2 SENSE BYTES
                       ;THESE ARE FOUND IN SENSE BYTE 7
                       ;HERE IS THE 3330 CODE FOR DIAGNOSTIC LOAD AND WRITE
                       WLDIAG:
102745 / 202740,,002454         MOVEM   17,002454             ;
102746 / 201740,,002435         MOVEI   17,DSKACS             ;
102747 / 251740,,002453           BLT   17,002453             ;
102750 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
102751 / 400040,,000000          SETZ  TAC,                   ;
153007 / 000000,,012551                                       ;
153007 / 300300,,012551 POINT 3,00012551,11                   ;
102752 / 137040,,153007           DPB  TAC,153007             ;;SO WE DON'T GET ASYNC INT'S
102753 / 200040,,002546          MOVE  TAC,   DXC             ;
102754 / 201040,,000074         MOVEI  TAC,000074             ;;DIAGS TAKE QUITE A WHILE
102755 / 202040,,012226         MOVEM  TAC,DHNGST             ;
102756 / 202040,,012225         MOVEM  TAC,DSKHNG             ;
102757 / 476000,,012432         SETOM      012432             ;;FLAG DISK ACTIVE!
102760 / 476000,,012437         SETOM      012437             ;;TELL THEM WHO IT IS
102761 / 260140,,103514         PUSHJ    P,103514             ;;CLEAR ERROR COUNTS
                       WLRTRY:
102762 / 750200,,460016          CONO  PMP,460016             ;
102763 / 750600,,004600          CONO  IBM,004600             ;;COME HERE TO TRY AGAIN
102764 / 200040,,002546          MOVE  TAC,   DXC             ;
102765 / 606040,,000100          TRNN  TAC,000100             ;;THIS TELLS US IF THIS IS
102766 / 254000,,102777          JRST      102777             ;;A LOAD OR WRITE
151735 / 000000,,012371                                       ;
102767 / 750140,,151735         DATAO  PMP,151735             ;
102770 / 750540,,012366         DATAO  IBM,012366             ;;SET FILE MASK COMMAND
102771 / 260140,,103547         PUSHJ    P, ISYNC             ;
102772 / 254000,,102762          JRST      WLRTRY             ;
102773 / 254000,,103017          JRST       WLERR             ;
102774 / 750140,,002551         DATAO  PMP,002551             ;;WRITE, ADDRESS OF DIAGNOSTIC
102775 / 750540,,012365         DATAO  IBM,012365             ;;IS IN DXS
102776 / 254000,,103002          JRST      WLWAIT             ;
                       LDIAG1:
102777 / 750600,,000400          CONO  IBM,000400             ;;CLEAR ACTIVE
151733 / 000000,,002551                                       ;
103000 / 750140,,151733         DATAO  PMP,151733             ;;POINT TO ADDRESS BYTE
103001 / 750540,,012367         DATAO  IBM, DLCMD             ;
                       WLWAIT:
103002 / 260140,,103547         PUSHJ    P, ISYNC             ;
103003 / 254000,,102762          JRST      WLRTRY             ;
103004 / 254000,,103017          JRST       WLERR             ;
103005 / 200040,,012223          MOVE  TAC,PMPCNI             ;
103006 / 606040,,000200          TRNN  TAC,DEVEND             ;
103007 / 254000,,103002          JRST      WLWAIT             ;
103010 / 750600,,000400          CONO  IBM,ACTCLR             ;
103011 / 750140,,002552         DATAO  PMP,   DXW             ;
103012 / 750540,,012370         DATAO  IBM,RD1CMD             ;
103013 / 260140,,103547         PUSHJ    P, ISYNC             ;
103014 / 254000,,102762          JRST      WLRTRY             ;
103015 / 254000,,103017          JRST       WLERR             ;
103016 / 254000,,103065          JRST      103065             ;;RETORE ACS, AND LEAVE
                       WLERR:
103017 / 260140,,103743         PUSHJ    P,DSKERR             ;
103020 / 254000,,102762          JRST      WLRTRY             ;
103021 / 254000,,103065          JRST       NOLUZ             ;
                       ;ENTER HERE TO DO A TRANSFER.
                       GO2314:
103022 / 202740,,002454         MOVEM   17,002454             ;
103023 / 201740,,002435         MOVEI   17,DSKACS             ;
103024 / 251740,,002453           BLT   17,002453             ;
103025 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
103026 / 350000,,012230           AOS      012230             ;;COUNT TOTAL DSK OPS.
103027 / 333040,,002547        SKIPLE  TAC,002547             ;;GET JOB NUMBER OF USER
103030 / 350001,,012230           AOS      DSKOPS(TAC)        ;;COUNT A DISK ACCESS FOR THIS USER
103031 / 332000,,002551         SKIPE      002551             ;;NOT ON SATOP
103032 / 260140,,101605         PUSHJ    P,101605             ;;CHECK SATID (ROUTINE IS IN DSKSER)
103033 / 476000,,012432         SETOM      012432             ;;FLAG DISK ACTIVE NOW!
103034 / 201040,,000005         MOVEI  TAC,DHNGCT             ;
103035 / 202040,,012226         MOVEM  TAC,DHNGST             ;
103036 / 202040,,012225         MOVEM  TAC,012225             ;;ENABLE HANG CODE
103037 / 200040,,002546          MOVE  TAC,   DXC             ;
103040 / 602040,,000100          TRNE  TAC,000100             ;;WRITE OP?
103041 / 337040,,002551         SKIPG  TAC,002551             ;;AND FILE OP
103042 / 254000,,103051          JRST      103051             ;;NO
103043 / 200100,,002443          MOVE TAC1,002443             ;
103044 / 606040,,000077          TRNN  TAC,000077             ;;RECORD 0?
103045 / 335002,,000053        SKIPGE       DDLOC(TAC1)       ;;AND NOT GOD?
103046 / 254000,,103051          JRST      103051             ;;NO
103047 / 260140,,103107         PUSHJ    P,103107             ;;YES, TO ALL OF THESE, DO OVERWRITE CHECK!
103050 / 254000,,103065          JRST      103065             ;;BLEW UP COMPLETELY!
                       NOCHK:
103051 / 260140,,103330         PUSHJ    P,103330             ;;DO ALL THE SETUP CRUD
103052 / 254000,,103065          JRST      103065             ;;ILL ADDR
103053 / 476000,,012432         SETOM      012432             ;;SET DISK ACTIVE FLAG
103054 / 201040,,000005         MOVEI  TAC,DHNGCT             ;
103055 / 202040,,012226         MOVEM  TAC,DHNGST             ;
103056 / 202040,,012225         MOVEM  TAC,DSKHNG             ;
103057 / 260140,,103525         PUSHJ    P,103525             ;;CALL D2CHN
103060 / 336000,,012544         SKIPN       D2LUZ             ;
103061 / 254000,,103065          JRST       NOLUZ             ;
103062 / 200040,,002443          MOVE  TAC,002443             ;;GET DDB ADDRESS
103063 / 201100,,200000         MOVEI TAC1,200000             ;;GIVE ERROR BIT FOR ILLEGAL WRAP
103064 / 436101,,000002          IORM TAC1,DEVIOS(TAC)        ;
                       NOLUZ:
103065 / 402000,,012432         SETZM      012432             ;;CLEAR DISK ACTIVE FLAG
103066 / 402000,,012225         SETZM      012225             ;;TELL DEVCHK NOT ACTIVE
103067 / 750200,,460016          CONO  PMP,460016             ;
103070 / 750600,,004600          CONO  IBM,004600             ;
103071 / 700600,,001040          CONO   PI,001040             ;;DEACTIVATE HIGH PRIORITY CHANNEL
103072 / 332000,,002551         SKIPE      002551             ;;IF NOT SAT TABLE,
103073 / 260140,,101605         PUSHJ    P,101605             ;;CHECK SATID AGAIN (ROUTINE IS IN DSKSER)
103074 / 200040,,012331          MOVE  TAC,012331             ;;RESTORE THE SAVED ACS.
103075 / 200100,,012332          MOVE TAC1, STAC1             ;
103076 / 200140,,012335          MOVE    P,  SAVP             ;
103077 / 200740,,012333          MOVE  AC3,  SAC3             ;
103100 / 200240,,012334          MOVE  DAT,  SDAT             ;
103101 / 264000,,002525           JSR      002525             ;;NOW SAVE THEM ALL.
103102 / 262140,,002434           POP    P,002434             ;;SET DISMISS ADDR.
103103 / 205740,,002435         MOVSI   17,002435             ;;NOW RESTORE RAS'S ACS.
103104 / 251740,,000017           BLT   17,    17             ;
103105 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;;GET CURRENT STATUS.
103106 / 263140,,000000          POPJ    P,                   ;
                       DOCHK:
103107 / 261140,,002552          PUSH    P,002552             ;;SAVE A COUPLE OF THINGS
103110 / 261140,,002546          PUSH    P,   DXC             ;
151643 / 777740,,007213           XWD -SECSIZ,QBUF            ;
103111 / 200040,,151643          MOVE  TAC,151643             ;
103112 / 202040,,002552         MOVEM  TAC,   DXW             ;
103113 / 201040,,000006         MOVEI  TAC,DSKCHN             ;
103114 / 202040,,002546         MOVEM  TAC,   DXC             ;
103115 / 260140,,103330         PUSHJ    P,103330             ;;SETUP OVERWRITE CHECK ADDRESS
153501 / 262140,,002546           POP    P,   DXC             ;
153502 / 262140,,002552           POP    P,   DXW             ;
153503 / 263140,,000000          POPJ    P,                   ;
103116 / 254000,,153501          JRST      153501             ;;LOSE BIG, ILLEGAL ADDRESS
103117 / 262140,,002546           POP    P,   DXC             ;
103120 / 262140,,002552           POP    P,   DXW             ;
103121 / 337000,,012224         SKIPG      012224             ;;MAKE SURE WE MUST CHECK
103122 / 254000,,037401          JRST      037401             ;;NOT FILE OP AFTER ALL, SAY CHECK DONE!
103123 / 260140,,103525         PUSHJ    P,103525             ;;READ RETRIEVAL IN
103124 / 200100,,002443          MOVE TAC1,002443             ;
103125 / 201040,,300000         MOVEI  TAC,300000             ;
103126 / 332000,,012544         SKIPE      012544             ;;ANY GROSS ERRORS?
103127 / 436042,,000002          IORM  TAC,DEVIOS(TAC1)       ;;YES, SET ERROR BITS
103130 / 612042,,000002          TDNE  TAC,DEVIOS(TAC1)       ;;NOW TEST FOR ERRORS
103131 / 263140,,000000          POPJ    P,                   ;;YES, GO AWAY NOW
152350 / 000002,,000001                                       ;
152350 / 130702,,000001 POINT 7,02000001,35-PUNITP            ;
103132 / 135040,,152350           LDB  TAC,152350             ;
103133 / 200041,,011733          MOVE  TAC,SATADR(TAC)        ;;GET POINTER TO SAT FOR THIS DEVICE
103134 / 200041,,000002          MOVE  TAC, SATID(TAC)        ;;GET NAME OF CURRENT GENERATION OF FILES.
103135 / 316040,,007225          CAMN  TAC,007225             ;;IS BLOCK WE'RE WRITING ON CURRENT ?
103136 / 336740,,007213         SKIPN  AC3,007213             ;;FILENAME OF 0 MEANS NOT IN USE.
103137 / 254000,,037401          JRST      037401             ;;THE BLOCK WE'RE WRITING ON IS NOT IN USE.
103140 / 200040,,007214          MOVE  TAC,007214             ;;GET EXTENSION.
103141 / 430042,,000012           XOR  TAC,FILEXT(TAC1)       ;;TAC1 POINTS AT DDB FOR CURRENT OP.
103142 / 316742,,000011          CAMN  AC3,FILNAM(TAC1)       ;
103143 / 603040,,777777          TLNE  TAC,777777             ;
103144 / 336000,,007216         SKIPN      007216             ;;IF PPN IS 0, OR IF
103145 / 254000,,037401          JRST      037401             ;;SAME FILENAME AND EXTENSION. WRITE IS OK.
                       DSKQK1:
103146 / 261140,,000010          PUSH    P,   TEM             ;
103147 / 550400,,002552          HRRZ  TEM,002552             ;;THIS POINTS TO THE RETRIEVAL WE ARE REWRITING
103150 / 200040,,007216          MOVE  TAC,007216             ;;CHECK PPN
103151 / 316750,,000000          CAMN  AC3,      (TEM)        ;;SAME FILNAME?
103152 / 312050,,000003          CAME  TAC,     3(TEM)        ;;AND PPN?
103153 / 254000,,103162          JRST      103162             ;;NO
103154 / 200040,,007214          MOVE  TAC,007214             ;;EXT
103155 / 430050,,000001           XOR  TAC,     1(TEM)        ;
103156 / 603040,,777777          TLNE  TAC,777777             ;
103157 / 254000,,103162          JRST      DSKQKP             ;
103160 / 262140,,000010           POP    P,   TEM             ;
103161 / 254000,,037401          JRST      CPOPJ1             ;
                       DSKQKP:
103162 / 262140,,000010           POP    P,   TEM             ;
                       DSKQK2:
103163 / 316742,,000032          CAMN  AC3,SRCNAM(TAC1)       ;;OR PERHAPS RENAMING THE FILE ?
103164 / 254000,,037401          JRST      037401             ;;NOTHING CAN GO WRONGWRONGWRONGWRON
103165 / 550040,,002552          HRRZ  TAC,002552             ;;GET STARTING ADDR. OF XFER.
103166 / 261140,,000001          PUSH    P,000001             ;;SIGH.  NO ACS FOR VARIABLE SATTAB LOCATION...
152350 / 000002,,000001                                       ;
152350 / 130702,,000001 POINT 7,02000001,35-PUNITP            ;
103167 / 135040,,152350           LDB  TAC,152350             ;
103170 / 200041,,011733          MOVE  TAC,SATADR(TAC)        ;
103171 / 331002,,000053         SKIPL       DDLOC(TAC1)       ;;IS IT (A) GOD ?
103172 / 316043,,000000          CAMN  TAC,      (P)          ;;IF WE ARE WRITING OUT THE SAT TABLE,
103173 / 254000,,037375          JRST      037375             ;;...THEN ALL IS WELL (?)
103174 / 262140,,000001           POP    P,   TAC             ;
103175 / 260140,,000316         PUSHJ    P,PUSHIT             ;
103176 / 260140,,044320         PUSHJ    P,044320             ;
103177 / 200600,,002443          MOVE  UUO,002443             ;
103200 / 260140,,044120         PUSHJ    P,DISERR             ;
103201 / 000000,,153701                                       ;
103202 / 000140,,012224        LOCQQQ      DSKLRN             ;
103203 / 000000,,153566                                       ;
103204 / 000254,,000011        SIXQQQ      FILNAM(UUO)        ;
103205 / 000000,,152773                                       ;
103206 / 000254,,000012        SIXQQQ      FILEXT(UUO)        ;
151516 / 554000,,000000                                       ;
103207 / 000000,,151516                                       ;;;replaced;;[ASCIZ/[/]
103210 / 000254,,000014        SIXQQQ      FILPPN(UUO)        ;
103211 / 000000,,153405                                       ;
103212 / 000154,,000053        LOCQQQ       DDLOC(UUO)        ;
103213 / 000000,,153556                                       ;
103214 / 000240,,007213        SIXQQQ      007213             ;
103215 / 000000,,152773                                       ;
103216 / 000240,,007214        SIXQQQ      007214             ;
151516 / 554000,,000000                                       ;
103217 / 000000,,151516                                       ;;;replaced;;[ASCIZ/[/]
103220 / 000240,,007216        SIXQQQ      007216             ;
103221 / 000000,,153405                                       ;
103222 / 000140,,007217        LOCQQQ      007217             ;
103223 / 000000,,153254                                       ;
103224 / 777777,,777777                                       ;
103225 / 336000,,000500         SKIPN      DEBMOD             ;
103226 / 254000,,103231          JRST      103231             ;
103227 / 476000,,036035         SETOM      036035             ;
103230 / 260140,,043761         PUSHJ    P,043761             ;
103231 / 260140,,000341         PUSHJ    P, POPIT             ;
103232 / 332000,,000500         SKIPE      DEBMOD             ;
103233 / 260140,,000347         PUSHJ    P,000347             ;
                       NOOSTP:
103234 / 350000,,012330           AOS      012330             ;;COUNT OVERWRITE ATTEMPTS.
103235 / 205040,,002004         MOVSI  TAC,002004             ;;INDICATE THAT RETRIEVAL MUST BE SPREAD AGAIN.
103236 / 436042,,000002          IORM  TAC,DEVIOS(TAC1)       ;
103237 / 200740,,000002          MOVE  AC3,000002             ;;SAVE PTR. TO TABLE OF BLOCK LOCATIONS IN DDB.
103240 / 261140,,000015          PUSH    P,   AC1             ;
103241 / 261140,,000016          PUSH    P,   AC2             ;
103242 / 260140,,101477         PUSHJ    P,101477             ;;ASSIGN A NEW BLOCK TO REPLACE THE ONE WE DON'T
                       ; WANT TO CLOBBER.
151413 / 000017,,000067                                       ;
151413 / 442217,,000067 POINT 18,17000067,                    ;
103243 / 200100,,151413          MOVE TAC1,151413             ;;BYTE PTR. TO TABLE OF BLOCKS IN FILE.
103244 / 201700,,000040         MOVEI  AC2,000040             ;;LENGTH OF TABLE FOR ONE 32K GROUP OF FILE.
103245 / 134640,,000002          ILDB  AC1,000002             ;;SEARCH FOR BLOCK WE WERE WRITING ON.
103246 / 312640,,012224          CAME  AC1,012224             ;;DSKLRN IS BLOCK WE WERE WRITING ON.
103247 / 367700,,103245          SOJG  AC2,103245             ;
103250 / 327700,,103254         JUMPG  AC2,103254             ;;DID WE FIND BLOCK IN TABLE ?
103251 / 262140,,000016           POP    P,   AC2             ;
103252 / 262140,,000015           POP    P,   AC1             ;
103253 / 254000,,103271          JRST       DSKQY             ;
                       DSKQK3:
103254 / 137040,,000002           DPB  TAC,000002             ;;REPLACE OLD BLOCK WITH NEW ONE IN TABLE.
103255 / 262140,,000016           POP    P,   AC2             ;
103256 / 262140,,000015           POP    P,   AC1             ;
152666 / 000017,,000067                                       ;
152666 / 222217,,000067 POINT 18,17000067,17                  ;
103257 / 312100,,152666          CAME TAC1,152666             ;;WAS IT FIRST BLOCK OF THIS GROUP ?
103260 / 254000,,103274          JRST      103274             ;;NO.
103261 / 205100,,004000         MOVSI TAC1,004000             ;;YES. MAKE CLOSE UPDATE UFD ENTRY.
103262 / 436117,,000002          IORM TAC1,DEVIOS(AC3)        ;
103263 / 201100,,000001         MOVEI TAC1,000001             ;;YES. IS THIS GROUP 1 OF THE FILE ?
103264 / 312117,,000057          CAME TAC1,DGRP1R(AC3)        ;
103265 / 254000,,103271          JRST      103271             ;
103266 / 552057,,000015         HRRZM  TAC,FILLOC(AC3)        ;;YES. NEW BLOCK IS NEW LOCATION OF FILE.
103267 / 552057,,000053         HRRZM  TAC, DDLOC(AC3)        ;;ALSO PUT IT HERE.
103270 / 254000,,103274          JRST       DSKQZ             ;
                       DSKQY:
103271 / 201100,,200000         MOVEI TAC1,200000             ;;NO. THERE IS NOTHING REASONABLE WE CAN DO.
103272 / 436117,,000002          IORM TAC1,DEVIOS(AC3)        ;;GIVE THE LOSER LOSSAGE BIT.
103273 / 263140,,000000          POPJ    P,                   ;;SKIP RETURN TO DSKINT.
                       DSKQZ:
103274 / 260140,,101302         PUSHJ    P,101302             ;;NOW UPDATE DISK ADDR. OF CURRENT XFER TO BE NEW BLOCK.
103275 / 202040,,002551         MOVEM  TAC,   DXS             ;
103276 / 254000,,103107          JRST       DOCHK             ;
                       ;CADDR	CASWAP
                       CASWAP:
103277 / 621040,,400000           TLZ  TAC,400000             ;;CLEAR SWAP OP BIT!
103300 / 242040,,777764           LSH  TAC,777764             ;;GET JOB NUMBER(WE HOPE)!
103301 / 000000,,000355                                       ;
103301 / 221040,,000355         IMULI  TAC,000355             ;;DIVIDE SWAPPING PACK AMONG
                       ;ALL POSSIBLE JOBS
103302 / 200100,,002540          MOVE TAC1,SWPDDB             ;
152350 / 000002,,000001                                       ;
152350 / 130702,,000001 POINT 7,02000001,35-PUNITP            ;
103303 / 135100,,152350           LDB TAC1,152350             ;;UNIT NUMBER
103304 / 270042,,011737           ADD  TAC, BFSET(TAC1)       ;;ADD OFFSET TO MAKE DISK ADDRESS
103305 / 562040,,012224         HRROM  TAC,012224             ;;DISABLE MRKBAD
103306 / 205100,,002000         MOVSI TAC1,      (<BYTE(8)1>) ;;WRAP TO RECORD 1 ON 3330
103307 / 202100,,012540         MOVEM TAC1, XWRAP             ;
103310 / 201100,,000001         MOVEI TAC1,000001             ;;AND START AT RECORD 1
103311 / 254000,,103360          JRST      103360             ;;TAC=TRACK NUMBER, TAC1= RECORD NUMBER = 1
                       CADDR1:
103312 / 200740,,002546          MOVE  AC3,   DXC             ;
103313 / 602740,,000100          TRNE  AC3,000100             ;;SAT TABLE, IS IT WRITE?
103314 / 326100,,103414         JUMPN TAC1,103414             ;;YES, BETTER BE RECORD 0
103315 / 476000,,012224         SETOM      012224             ;;DISABLE MRKBAD
103316 / 254000,,103357          JRST      103357             ;;TAC=0, TAC1=RECORD NUMBER (=0 FOR WRITE)
                       ;TAC HAS RELATIVE BLOCK NUMBER
                       CAXTRA:
103317 / 231040,,000100         IDIVI  TAC,000100             ;;TAC ← REL BLOCK #, TAC1 ← REC
103320 / 301040,,000321          CAIL  TAC,000321             ;
103321 / 254000,,103414          JRST      103414             ;;WE DON'T HAVE THAT MANY EXTRA TRACKS
103322 / 301100,,000023          CAIL TAC1,RCPTRK             ;
103323 / 254000,,103414          JRST      103414             ;;RECORD NUMBER TOO BIG
103324 / 403740,,012540         SETZB  AC3,012540             ;;PACK 0, WRAP AROUND TO RECORD 0
103325 / 476000,,012224         SETOM      012224             ;;DISABLE MRKBAD
103326 / 271040,,035540          ADDI  TAC,035540             ;;OFFSET TO END OF PACK 0
103327 / 254000,,103371          JRST        CDXE             ;
                       CADDR:
103330 / 200040,,002552          MOVE  TAC,   DXW             ;
103331 / 514100,,002546          HRLZ TAC1,   DXC             ;
103332 / 607100,,000100          TLNN TAC1,000100             ;;READ OR RIGHT?
103333 / 664100,,777777          TROA TAC1,777777             ;;FLAG READ
151762 / 000001,,000000                                       ;
103334 / 274040,,151762           SUB  TAC,151762             ;;CAUSES CHNL TO NOT STOP XFER TOO SOON
103335 / 202040,,012535         MOVEM  TAC, XWCMA             ;
103336 / 200042,,012344          MOVE  TAC,  WCMD(TAC1)       ;;PICKUP COMMAND
103337 / 202040,,012547         MOVEM  TAC,  XCMD             ;
103340 / 200042,,012350          MOVE  TAC,ENDTAB(TAC1)       ;;PICKUP INSTRUCTION FOR ENDING TEST ON WC
103341 / 202040,,012537         MOVEM  TAC,012537             ;;AND STUFF IT AWAY
152761 / 264000,,012450           JSR       D2INT             ;
103342 / 200040,,152761          MOVE  TAC,152761             ;;MAKE SURE D2CHN KNOWS WHERE TO GO
103343 / 202040,,000144         MOVEM  TAC,000144             ;
103344 / 335040,,002551        SKIPGE  TAC,   DXS             ;
103345 / 254000,,103277          JRST      103277             ;;SIGN BIT MEANS SWAP OP, WITH SHIFTED JOB NUMBER
103346 / 623040,,200000          TLZE  TAC,200000             ;
103347 / 254000,,103317          JRST      103317             ;;200000 BIT MEANS XTRA CYL PACK 0 OP
103350 / 231040,,000100         IDIVI  TAC,000100             ;;TRACK INTO TAC, RECORD INTO TAC1
103351 / 322040,,103312         JUMPE  TAC,103312             ;;JUMP IF SAT TABLE OPERATION
103352 / 202040,,012224         MOVEM  TAC,012224             ;;SAVE LOGICAL BLOCK NUMBER IN CASE OF ERROR
103353 / 200740,,002443          MOVE  AC3,002443             ;;FIND OUT IF IT'S A FILE OP OR OLD UDP OP
103354 / 200757,,000004          MOVE  AC3,DEVMOD(AC3)        ;
103355 / 607740,,200000          TLNN  AC3,200000             ;;FILE OP?
                       ;	CAILE TAC,LSTBIT		;FILE OP? (HOW IT USED TO CHECK--;ED OUT!)
103356 / 563000,,012224         HRROS      012224             ;;NO, DISABLE MRKBAD
                       CDX3S:
103357 / 402000,,012540         SETZM      012540             ;;WRAP TO RECORD ZERO ON OVERFLOW
                       CDX3:
103360 / 305100,,000023         CAIGE TAC1,000023             ;;RECORD OK?
103361 / 303040,,166577         CAILE  TAC,166577             ;;OFF END OF WORLD?
103362 / 254000,,103414          JRST      103414             ;;LOSER
103363 / 205740,,777774         MOVSI  AC3,777774             ;;SEARCH FOR THE PACK CONTAINING THIS TRACK
                       CDXL:
103364 / 313057,,002346         CAMLE  TAC,PACKAD(AC3)        ;
103365 / 253740,,103364         AOBJN  AC3,  CDXL             ;
103366 / 325740,,103414        JUMPGE  AC3,103414             ;;THIS IS TOO HORRIBLE TO THINK ABOUT.
103367 / 274057,,002345           SUB  TAC,002345(AC3)        ;
103370 / 275040,,000001          SUBI  TAC,000001             ;;AC3=PACK, TAC=TRACK NUMBER ON THAT PACK
                       CDXE:
103371 / 241100,,777770           ROT TAC1,777770             ;;PUT RECORD BYTE IN LEFT BYTE
103372 / 202100,,012534         MOVEM TAC1,012534             ;;STUFF AWAY
103373 / 231040,,000023         IDIVI  TAC,000023             ;;STRIP OFF HEAD NUMBER
152702 / 000000,,012532                                       ;
152702 / 241000,,012532 POINT 8,00012532,15                   ;
103374 / 137100,,152702           DPB TAC1,152702             ;;STUFF HEAD NUMBER
152250 / 000000,,012533                                       ;
152250 / 042000,,012533 POINT 16,00012533,31                  ;
103375 / 137100,,152250           DPB TAC1,152250             ;
152247 / 000000,,012531                                       ;
152247 / 042000,,012531 POINT 16,00012531,31                  ;
103376 / 137040,,152247           DPB  TAC,152247             ;;STUFF CYLINDER NUMBER
152713 / 000000,,012533                                       ;
152713 / 242000,,012533 POINT 16,00012533,15                  ;
103377 / 137040,,152713           DPB  TAC,152713             ;
152423 / 000000,,012337                                       ;
152423 / 160300,,012337 POINT 3,00012337,21                   ;
103400 / 137740,,152423           DPB  AC3,152423             ;;STUFF PACK NUMBER
152424 / 000000,,012341                                       ;
152424 / 160300,,012341 POINT 3,00012341,21                   ;
103401 / 137740,,152424           DPB  AC3,152424             ;
152431 / 000000,,012547                                       ;
152431 / 160300,,012547 POINT 3,00012547,21                   ;
103402 / 137740,,152431           DPB  AC3,152431             ;
152430 / 000000,,012364                                       ;
152430 / 160300,,012364 POINT 3,00012364,21                   ;
103403 / 137740,,152430           DPB  AC3,152430             ;
152425 / 000000,,012351                                       ;
152425 / 160300,,012351 POINT 3,00012351,21                   ;
103404 / 137740,,152425           DPB  AC3,152425             ;
152427 / 000000,,012363                                       ;
152427 / 160300,,012363 POINT 3,00012363,21                   ;
103405 / 137740,,152427           DPB  AC3,152427             ;
152426 / 000000,,012362                                       ;
152426 / 160300,,012362 POINT 3,00012362,21                   ;
103406 / 137740,,152426           DPB  AC3,152426             ;
153007 / 000000,,012551                                       ;
153007 / 300300,,012551 POINT 3,00012551,11                   ;
103407 / 137740,,153007           DPB  AC3,153007             ;
103410 / 402000,,012545         SETZM      012545             ;;NO LAST ERROR YET!
103411 / 402000,,012546         SETZM       LSTOP             ;
103412 / 476000,,012536         SETOM      012536             ;;FOR SAFETY, FLAG XWCMA & SCDAT ARE NEXT OP TO DO
103413 / 254000,,037401          JRST      CPOPJ1             ;
                       CDX4:
103414 / 202040,,012434         MOVEM  TAC,012434             ;;STUFF AWAY HERE FOR NOW
103415 / 202100,,012447         MOVEM TAC1,DSKFLG             ;
103416 / 260140,,000316         PUSHJ    P,PUSHIT             ;
103417 / 260140,,044120         PUSHJ    P,DISERR             ;
103420 / 000000,,154005                                       ;
103421 / 000100,,002551        OCTQQQ         DXS             ;
103422 / 000000,,153266                                       ;
103423 / 000140,,012434        LOCQQQ      TYPANY             ;
103424 / 000000,,153310                                       ;
103425 / 000140,,012447        LOCQQQ      DSKFLG             ;
103426 / 000000,,153262                                       ;
103427 / 777777,,777777                                       ;
103430 / 550200,,002547          HRRZ    J,   DXJ             ;
103431 / 322200,,103433         JUMPE    J,103433             ;
103432 / 260140,,044104         PUSHJ    P,DISJOB             ;
103433 / 331000,,002551         SKIPL         DXS             ;
103434 / 254000,,103441          JRST       NOGOD             ;
103435 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NOGOD:
103441 / 260140,,044066         PUSHJ    P,DISMES             ;
103443 / 260140,,000341         PUSHJ    P, POPIT             ;
103444 / 200040,,002443          MOVE  TAC,002443             ;
103445 / 201100,,200000         MOVEI TAC1,IODERR             ;
103446 / 436101,,000002          IORM TAC1,DEVIOS(TAC)        ;
103447 / 263140,,000000          POPJ    P,                   ;
                       ICALLA:
103450 / 335040,,012536        SKIPGE  TAC,012536             ;;NEED BACKUP?
103451 / 254000,,103475          JRST      103475             ;;NO, XWCMA & SCDAT ARE NEXT OP TO DO
103452 / 476000,,012536         SETOM      012536             ;;NOTE WE ARE BACKED UP
103453 / 250040,,012534          EXCH  TAC,012534             ;;BACKUP RECORD
103454 / 313040,,012534         CAMLE  TAC,012534             ;;DO WE BACK UP A TRACK?
103455 / 254000,,103472          JRST      103472             ;;NO
103456 / 777777,,777777                                       ;
103456 / 205040,,777774         MOVSI  TAC,      (<BYTE(16)<-1>>)     ;;GET SOMETHING TO DECREMENT HEAD ADDR
103457 / 273040,,012532          ADDB  TAC,012532             ;;DECREMENT HEAD ADDR
103460 / 325040,,103465        JUMPGE  TAC,103465             ;;CYLINDER OK?
103461 / 211040,,000020         MOVNI  TAC,000020             ;
103462 / 273040,,012531          ADDB  TAC,012531             ;;DECREMENT CYLINDER
103463 / 205040,,000110         MOVSI  TAC,      (<BYTE(16)TRKCYL-1>)         ;
103464 / 202040,,012532         MOVEM  TAC,012532             ;;SET HEAD TO LAST TRACK OF CYLINDER
                       COK:
103465 / 554040,,012532          HLRZ  TAC,012532             ;;NOW COMPUTE SCDAT FROM SKDAT
103466 / 242040,,000004           LSH  TAC,     4             ;
103467 / 504040,,012531           HRL  TAC, SKDAT             ;
103470 / 242040,,777776           LSH  TAC,777776             ;
103471 / 202040,,012533         MOVEM  TAC,012533             ;;STORE UPDATED SEARCH LOC
                       TOK:
153132 / 000000,,012534                                       ;
153132 / 341000,,012534 POINT 8,00012534,7                    ;
103472 / 135040,,153132           LDB  TAC,153132             ;;USE RECORD NUMBER,
103473 / 210041,,105164          MOVN  TAC,RCLTAB(TAC)        ;;TO GET VALUE TO,
103474 / 272040,,012535          ADDM  TAC,012535             ;;BACKUP XWCMA BY
                       ICALLN:
103475 / 550040,,012466          HRRZ  TAC,012466             ;;GET LOC OF LAST JSR +1
152777 / 777777,,777777                                       ;
152777 / 270437,,777777 POINT 4,777777777777,12               ;
103476 / 135040,,152777           LDB  TAC,152777             ;;GET CODE FROM AC FIELD OF JSR
103477 / 200100,,012547          MOVE TAC1,012547             ;;SET FOR DSKERR CODE AS LAST OP IN PROGRESS
103500 / 602100,,000001          TRNE TAC1,000001             ;;WRITE OP?
103501 / 302040,,000002          CAIE  TAC,000002             ;;YES, IF LAST OP IN PROGRESS WAS READ OR WRITE,
103502 / 304000,,000000          CAIA                         ;
103503 / 271040,,000001          ADDI  TAC,000001             ;;SET CODE FOR WRITE
103504 / 202040,,012437         MOVEM  TAC,ERRCMD             ;
103505 / 200100,,012535          MOVE TAC1,012535             ;;GET ERROR WCMA
103506 / 316040,,012546          CAMN  TAC,012546             ;;SAME COMMAND IN ERROR?
103507 / 312100,,012545          CAME TAC1,012545             ;;AND SAME WCMA
103510 / 304000,,000000          CAIA                         ;
103511 / 263140,,000000          POPJ    P,                   ;;NO, DON'T RESET COUNTS
103512 / 202040,,012546         MOVEM  TAC, LSTOP             ;
103513 / 202100,,012545         MOVEM TAC1,012545             ;;REMEMBER LAST ERROR
                       ERRCLR:
                       ;ENTER HERE TO CLEAR ERROR COUNTS
                       ;;replaced;;FOR @!X←0,4<
                       ;;replaced;;SETZM ERRCL!X>
103514 / 402000,,012372         SETZM      ERRCL0             ;
103515 / 402000,,012373         SETZM      ERRCL1             ;
103516 / 402000,,012374         SETZM      ERRCL2             ;
103517 / 402000,,012375         SETZM      ERRCL3             ;
103520 / 402000,,012376         SETZM      012376             ;
103521 / 476000,,012402         SETOM      SHADPE             ;
103522 / 263140,,000000          POPJ    P,                   ;
                       ICALLC:
103523 / 332000,,012544         SKIPE       D2LUZ             ;
103524 / 263140,,000000          POPJ    P,                   ;;EOD, RETURN NOW!!!!!
                       ICALL:
103525 / 402000,,012543         SETZM      012543             ;;NOT SUCCESSFUL YET!
103526 / 402000,,012544         SETZM      012544             ;;HAVEN'T LOST YET
103527 / 476000,,012443         SETOM      012443             ;;MAKE SURE WE DON'T INTERPRET RANDOM ERRORS AS LOSING SEARCHES
103530 / 201040,,105043         MOVEI  TAC,105043             ;;START D2CHN HERE
103531 / 202040,,012466         MOVEM  TAC,   D2X             ;
103532 / 700600,,002040          CONO   PI,002040             ;;TURN ON HIGH PRIORITY CHANNEL
103533 / 750600,,004220          CONO  IBM,004220             ;;MAKE SURE AN INT WILL HAPPEN
103534 / 750200,,660012          CONO  PMP,660012             ;;DOWN TO CHANNEL 2
103535 / 260140,,103556         PUSHJ    P,103556             ;;WAIT TILL DONE OR ERROR
103536 / 254000,,103545          JRST      103545             ;;RETRY, START D2CHN OVER
103537 / 356000,,012543          AOSN      012543             ;;SUCCESSFUL OP?
103540 / 263140,,000000          POPJ    P,                   ;;YES, JUST RETURN
103541 / 260140,,103450         PUSHJ    P,103450             ;;GRONK PARMS
103542 / 260140,,103743         PUSHJ    P,103743             ;;ERROR, CALL ROUTINE
103543 / 254000,,103523          JRST      103523             ;;TRY AGAIN
103544 / 263140,,000000          POPJ    P,                   ;;QUIT, ERRORS ALREADY POSTED
                       ICALLB:
103545 / 260140,,103450         PUSHJ    P,ICALLA             ;
103546 / 254000,,103523          JRST      ICALLC             ;
                       ISYNC:
103547 / 260140,,103556         PUSHJ    P,103556             ;;WAIT FOR OP TO HAPPEN
103550 / 263140,,000000          POPJ    P,                   ;;TRY AGAIN RETURN
103551 / 350003,,000000           AOS            (P)          ;;AT LEAST ONE SKIP
103552 / 200040,,012223          MOVE  TAC,012223             ;;GET CONI BITS
103553 / 602040,,456040          TRNE  TAC,456040             ;;ANY ERRORS?
103554 / 263140,,000000          POPJ    P,                   ;;YES, RETURN
103555 / 254000,,037401          JRST      037401             ;;NO ERRORS
                       ESYNC:
103556 / 202140,,012336         MOVEM    P,INTPDL             ;
103557 / 402000,,012442         SETZM      012442             ;;ALWAYS CLEAR HUNG FLAG HERE!
103560 / 254020,,002434          JRST      @INTRTN            ;
                       IXINT:
103561 / 202040,,012331         MOVEM  TAC,012331             ;;ENTER HERE FROM LOW-PRIORITY CHANNEL
103562 / 202100,,012332         MOVEM TAC1, STAC1             ;
103563 / 202740,,012333         MOVEM  AC3,  SAC3             ;
103564 / 202240,,012334         MOVEM  DAT,  SDAT             ;
103565 / 202140,,012335         MOVEM    P,  SAVP             ;
103566 / 200140,,012336          MOVE    P,INTPDL             ;
103567 / 201040,,103720         MOVEI  TAC,IXINT2             ;
103570 / 202040,,002434         MOVEM  TAC,INTRTN             ;
103571 / 750240,,000001          CONI  PMP,   TAC             ;
103572 / 202040,,012223         MOVEM  TAC,PMPCNI             ;
103573 / 602040,,440000          TRNE  TAC,440000             ;;UNUSUAL END?
103574 / 750600,,000020          CONO  IBM,000020             ;;YES, CLEAR ANY WAITING COMMANDS
103575 / 750600,,004200          CONO  IBM,004200             ;;CLEAR NEWST AND UNEND WHEN STATUS GOBBLED
103576 / 336000,,012432         SKIPN      012432             ;;IS DISK ACTIVE AT ALL?
103577 / 254000,,103615          JRST      103615             ;;NO
103600 / 200100,,012226          MOVE TAC1,012226             ;;THIS IS DISK HUNG TIME COUNT IN SECONDS
103601 / 202100,,012225         MOVEM TAC1,012225             ;;THIS IS WHERE IT IS COUNTED DOWN
103602 / 606040,,020000          TRNN  TAC,020000             ;;IS THIS DEVICE STATUS?
103603 / 254000,,037401          JRST      037401             ;;NO, MUST BE END OF TRANSFER, RETURN
103604 / 602040,,002000          TRNE  TAC,002000             ;;CUEND ALONE?
103605 / 263140,,000000          POPJ    P,                   ;;INDICATE TRY AGAIN
103606 / 640040,,005000           TRC  TAC,005000             ;
103607 / 646040,,005000          TRCN  TAC,005000             ;;CU BUSY?
103610 / 254000,,103726          JRST      103726             ;;YES
103611 / 430040,,012551           XOR  TAC,TSTXOR             ;
103612 / 607040,,037700          TLNN  TAC,037700             ;;WRONG ADDRESS?
103613 / 254000,,103734          JRST      103734             ;;NO, CHECK RETRY
103614 / 254000,,103623          JRST      103623             ;;USE STACK WE HAVE
                       ASYNC:
103615 / 200040,,012331          MOVE  TAC,012331             ;;RESTORE STATE OF AC'S
103616 / 200100,,012332          MOVE TAC1, STAC1             ;
103617 / 200740,,012333          MOVE  AC3,  SAC3             ;
103620 / 200240,,012334          MOVE  DAT,  SDAT             ;
103621 / 200140,,012335          MOVE    P,  SAVP             ;
103622 / 264000,,001035           JSR      001035             ;;NOW SAVE THEM ALL!
                       ASYNC0:
103623 / 750600,,000020          CONO  IBM,CLRCHL             ;
103624 / 260140,,000316         PUSHJ    P,PUSHIT             ;
103625 / 260140,,044320         PUSHJ    P,044320             ;
152264 / 000000,,012223                                       ;
152264 / 051000,,012223 POINT 8,00012223,30                   ;
103626 / 135040,,152264           LDB  TAC,152264             ;
103627 / 306040,,000004          CAIN  TAC,000004             ;;JUST DEVEND?
103630 / 254000,,103643          JRST      103643             ;;YES, SHORT MES.
103631 / 260140,,044066         PUSHJ    P,DISMES             ;
103642 / 254000,,103655          JRST       SWAIT             ;
                       DEVRDY:
103643 / 260140,,044066         PUSHJ    P,DISMES             ;
153005 / 000000,,012223                                       ;
153005 / 300300,,012223 POINT 3,00012223,11                   ;
103647 / 135040,,153005           LDB  TAC,153005             ;
103650 / 260140,,044170         PUSHJ    P,DISLOC             ;
103651 / 260140,,044066         PUSHJ    P,DISMES             ;
                       SWAIT:
103655 / 260140,,044120         PUSHJ    P,DISERR             ;
103656 / 000000,,153374                                       ;
103657 / 000100,,012223        OCTQQQ      PMPCNI             ;
103660 / 000000,,152275                                       ;
103661 / 777777,,777777                                       ;
103662 / 750340,,020000         CONSO  PMP, NEWST             ;
103663 / 254000,,103667          JRST       SDONE             ;
103664 / 750240,,012223          CONI  PMP,PMPCNI             ;
103665 / 750600,,004200          CONO  IBM,004200             ;
103666 / 254000,,103655          JRST       SWAIT             ;
                       SDONE:
103667 / 336000,,012432         SKIPN      012432             ;;ARE WE ACTIVE?
103670 / 254000,,103701          JRST      SDONE0             ;
103671 / 260140,,044066         PUSHJ    P,DISMES             ;
153007 / 000000,,012551                                       ;
153007 / 300300,,012551 POINT 3,00012551,11                   ;
103677 / 135040,,153007           LDB  TAC,153007             ;
103700 / 260140,,044170         PUSHJ    P,DISLOC             ;
                       SDONE0:
103701 / 260140,,044066         PUSHJ    P,DISMES             ;
103703 / 260140,,000341         PUSHJ    P, POPIT             ;
103704 / 260140,,105033         PUSHJ    P,105033             ;;WAIT FOR IDLE THEN RESET
103705 / 332000,,012432         SKIPE      012432             ;;IS DISK REALLY ACTIVE?
103706 / 254000,,103712          JRST      103712             ;;GIVE TRY AGAIN RETURN!
103707 / 750200,,460016          CONO  PMP,460016             ;;WE AREN'T ACTIVE, SET TO QUIET STATE
103710 / 750600,,000400          CONO  IBM,ACTCLR             ;
103711 / 263140,,000000          POPJ    P,                   ;;THIS WILL RESTORE AC'S AND JEN
                       UCHKTS:
103712 / 200040,,012223          MOVE  TAC,PMPCNI             ;
103713 / 606040,,004000          TRNN  TAC,004000             ;;IF STATUS MODIFIER
103714 / 606040,,000100          TRNN  TAC,000100             ;;OR NOT UNIT CHECK
103715 / 263140,,000000          POPJ    P,                   ;;THEN GIVE TRY AGAIN RETURN
103716 / 402000,,012543         SETZM      012543             ;;MAKE SURE ERROR ROUTINE IS CALLED
103717 / 254000,,037401          JRST      037401             ;;GIVE DONE RETURN
                       IXINT2:
103720 / 200040,,012331          MOVE  TAC,  STAC             ;
103721 / 200100,,012332          MOVE TAC1, STAC1             ;
103722 / 200740,,012333          MOVE  AC3,  SAC3             ;
103723 / 200240,,012334          MOVE  DAT,  SDAT             ;
103724 / 200140,,012335          MOVE    P,  SAVP             ;
103725 / 254520,,000666           JEN      @DSKCHL            ;
                       CKBUSY:
103726 / 402000,,012543         SETZM      012543             ;;MAKE SURE WE DON'T LOOK DONE!
                       ;	EXCH DDB,DXB
                       ;	LDB TAC1,PDVTIM			;MAKE SURE LOSER DOSEN'T HANG
                       ;	DPB TAC1,PDVCNT
                       ;	EXCH DDB,DXB
103727 / 602040,,002000          TRNE  TAC,002000             ;;CUEND ALREADY?
103730 / 263140,,000000          POPJ    P,                   ;;TRY AGAIN
                       WAIT:
103731 / 750200,,460016          CONO  PMP,460016             ;
103732 / 750600,,000400          CONO  IBM,ACTCLR             ;
103733 / 254000,,103720          JRST      103720             ;;WAIT FOR CUEND
                       CHKRTY:
103734 / 640040,,004100           TRC  TAC,004100             ;
103735 / 642040,,004100          TRCE  TAC,004100             ;
103736 / 254000,,037401          JRST      CPOPJ1             ;
103737 / 402000,,012543         SETZM      D2DONE             ;
103740 / 606040,,000200          TRNN  TAC,DEVEND             ;
103741 / 254000,,103731          JRST        WAIT             ;
103742 / 254000,,037401          JRST      CPOPJ1             ;
                       ;DSKERR		INTERFACE ERRORS
                       DSKERR:
103743 / 260140,,000316         PUSHJ    P,PUSHIT             ;
103744 / 750600,,000020          CONO  IBM,CLRCHL             ;
103745 / 750600,,004200          CONO  IBM,004200             ;;FROM HERE ON CHANNEL SHOULD BE IDLE
103746 / 402000,,012434         SETZM      012434             ;;NO TYPE OUT YET
103747 / 402000,,012435         SETZM      SNSTYP             ;
103750 / 402000,,012436         SETZM       CSTOP             ;
103751 / 402000,,012433         SETZM       DEATH             ;
103752 / 402000,,012446         SETZM      HAFLAG             ;
103753 / 402000,,012447         SETZM      012447             ;;HAVEN'T FOUND OUT WHY YET
103754 / 200600,,012223          MOVE  UUO,012223             ;;GET ERROR BITS
103755 / 202600,,012440         MOVEM  UUO,012440             ;;AND SAVE THEM IN A SAFE PLACE
103756 / 750440,,012441         DATAI  IBM,012441             ;;GET CURRENT MA
103757 / 607600,,040000          TLNN  UUO,040000             ;;IF SELECT ERROR, CHECK IF OFF LINE
103760 / 254000,,104011          JRST      104011             ;;NO
103761 / 750600,,000001          CONO  IBM,000001             ;;EXTRA RESET FOR SELERR
103762 / 260140,,105033         PUSHJ    P, BLAST             ;
103763 / 260140,,000341         PUSHJ    P, POPIT             ;
103764 / 750600,,004600          CONO  IBM,004600             ;
103765 / 750200,,460016          CONO  PMP,460016             ;
103766 / 750540,,012364         DATAO  IBM,NOPCMD             ;
103767 / 260140,,103547         PUSHJ    P, ISYNC             ;
103770 / 254000,,103766          JRST      103766             ;;TRY AGAIN?
103771 / 255000,,000000          JFCL                         ;
103772 / 260140,,000316         PUSHJ    P,PUSHIT             ;
103773 / 200040,,012223          MOVE  TAC,PMPCNI             ;
103774 / 607040,,040000          TLNN  TAC,040000             ;;STILL SELECT ERROR?
103775 / 254000,,104007          JRST      NOSELA             ;
103776 / 750600,,000001          CONO  IBM,CRESET             ;
103777 / 260140,,105033         PUSHJ    P, BLAST             ;
104000 / 260140,,044066         PUSHJ    P,DISMES             ;
104006 / 350000,,012436           AOS       CSTOP             ;
                       NOSELA:
104007 / 260140,,104624         PUSHJ    P,ERROR1             ;
104010 / 200600,,012440          MOVE  UUO,CNISAV             ;
                       NOSEL:
104011 / 335000,,012443        SKIPGE      012443             ;;TOO MANY LOSING SEARCHES?
104012 / 254000,,104044          JRST      104044             ;;NO
104013 / 260140,,044066         PUSHJ    P,DISMES             ;
104022 / 350000,,012434           AOS      TYPANY             ;
104023 / 260140,,104623         PUSHJ    P,ERROR0             ;
104024 / 554040,,012532          HLRZ  TAC,012532             ;;THIS IS A BUG TRAP!!!!*******
104025 / 242040,,000004           LSH  TAC,     4             ;
104026 / 504040,,012531           HRL  TAC, SKDAT             ;
104027 / 242040,,777776           LSH  TAC,777776             ;
104030 / 250040,,012533          EXCH  TAC, SCDAT             ;
104031 / 316040,,012533          CAMN  TAC, SCDAT             ;
104032 / 254000,,104044          JRST      NOLSRC             ;
104033 / 261140,,000001          PUSH    P,   TAC             ;
104034 / 260140,,044120         PUSHJ    P,DISERR             ;
104035 / 000000,,154213                                       ;
104036 / 000103,,777777        OCTQQQ      777777(P)          ;
104037 / 000000,,153421                                       ;
104040 / 000100,,012533        OCTQQQ       SCDAT             ;
104041 / 000000,,152275                                       ;
104042 / 777777,,777777                                       ;
104043 / 262140,,000001           POP    P,000001             ;;END BUG TRAP!!!!*********
                       NOLSRC:
104044 / 336000,,012442         SKIPN      012442             ;;DOES SOMEONE THINK WE'RE HUNG?
104045 / 254000,,104055          JRST      104055             ;;NO
104046 / 350000,,012447           AOS      DSKFLG             ;
104047 / 350000,,012434           AOS      TYPANY             ;
104050 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NOHUNG:
152315 / 100000,,011040                                       ;
104055 / 612600,,152315          TDNE  UUO,152315             ;;DATA CHAIN ERROR?
104056 / 260140,,104623         PUSHJ    P,104623             ;;CLASS 0 ERROR
104057 / 607600,,200000          TLNN  UUO,200000             ;;NXM?
104060 / 254000,,104070          JRST       NONXM             ;
104061 / 260140,,044120         PUSHJ    P,DISERR             ;
104062 / 000000,,153771                                       ;
104063 / 000140,,012441        LOCQQQ      XDSKMA             ;
104064 / 000000,,152275                                       ;
104065 / 777777,,777777                                       ;
104066 / 260140,,104624         PUSHJ    P,104624             ;;ERROR, CLASS ONE
104067 / 350000,,012434           AOS      012434             ;;ALWAYS TYPE
                       NONXM:
104070 / 607600,,000020          TLNN  UUO,000020             ;;CORE PARITY ERROR?
104071 / 254000,,104114          JRST        BPAR             ;
104072 / 200040,,012441          MOVE  TAC,XDSKMA             ;
104073 / 317040,,022066          CAMG  TAC,022066             ;
104074 / 305040,,000020         CAIGE  TAC,    20             ;
104075 / 352000,,012402          AOSE      SHADPE             ;
104076 / 254000,,104103          JRST      104103             ;;AW, LOOK, WE'VE BEEN ALL THROUGH THIS BEFORE
104077 / 260140,,037412         PUSHJ    P, ZSHAD             ;
104100 / 255000,,000000          JFCL                         ;
104101 / 350000,,012447           AOS      DSKFLG             ;
104102 / 254000,,104117          JRST      104117             ;;IGNORE IT FOR NOW
                       REALPE:
104103 / 260140,,044120         PUSHJ    P,DISERR             ;
104104 / 000000,,154322                                       ;
104105 / 000140,,012441        LOCQQQ      XDSKMA             ;
104106 / 000000,,152275                                       ;
104107 / 777777,,777777                                       ;
104110 / 334040,,022066         SKIPA  TAC,022066             ;;LOOK AT ALL OF CORE FOR ERROR
104111 / 330001,,000000          SKIP            (TAC)        ;
104112 / 365040,,104111         SOJGE  TAC,104111             ;
104113 / 350000,,012434           AOS      012434             ;;TELL THEM WHO LOST
                       BPAR:
104114 / 606600,,400000          TRNN  UUO,400000             ;;PARITY ERROR
104115 / 254000,,104117          JRST      104117             ;;NO
104116 / 260140,,104624         PUSHJ    P,104624             ;;ERROR, CLASS ONE
                       ;		DISK ERRORS
                       NOPAR:
104117 / 602600,,020000          TRNE  UUO,020000             ;;WILL UCHK BE HONEST?
104120 / 606600,,000100          TRNN  UUO,000100             ;;YES, WAS THERE A UNIT CHECK?
104121 / 254000,,104322          JRST      104322             ;;NO, CHECK TYPEOUT AND ERROR FLAGS
104122 / 260140,,000341         PUSHJ    P, POPIT             ;
104123 / 260140,,105015         PUSHJ    P,105015             ;;DO SENSE
104124 / 304000,,000000          CAIA                         ;
104125 / 254000,,104140          JRST      SNSDON             ;
104126 / 260140,,000316         PUSHJ    P,PUSHIT             ;
104127 / 260140,,044066         PUSHJ    P,DISMES             ;
104134 / 350000,,012436           AOS      012436             ;;INDICATE COLD STOP
104135 / 350000,,012434           AOS      TYPANY             ;
104136 / 260140,,104624         PUSHJ    P,104624             ;;THIS IS CLASS 1 ERROR
104137 / 254000,,104322          JRST       TYPE0             ;
                       SNSDON:
104140 / 260140,,000316         PUSHJ    P,PUSHIT             ;
104141 / 350000,,012435           AOS      012435             ;;INDICATE TYPEOUT OF SENSE DATA
152710 / 000000,,012353                                       ;
152710 / 242000,,012353 POINT 16,00012353,15                  ;
104142 / 135600,,152710           LDB  UUO,152710             ;;GET FIRST TWO BYTES OF SENSE
104143 / 606600,,100000          TRNN  UUO,100000             ;;COMMAND REJECT?
104144 / 254000,,104156          JRST      104156             ;;NO
104145 / 602600,,000002          TRNE  UUO,000002             ;;WRITE INHIBITED?
104146 / 254000,,104156          JRST      104156             ;;YES, CATCH IT AT CLASS 5
152244 / 000000,,012354                                       ;
152244 / 041000,,012354 POINT 8,00012354,31                   ;
104147 / 135040,,152244           LDB  TAC,152244             ;;PICK UP BYTE 7
104150 / 302040,,000100          CAIE  TAC,000100             ;;INVALID DATA?
104151 / 306040,,000320          CAIN  TAC,000320             ;;DIAGNOSTIC WRITE ERROR?
104152 / 331000,,012437         SKIPL      012437             ;;IS IT REALLY US?
104153 / 304000,,000000          CAIA                         ;
153515 / 350000,,012433           AOS       DEATH             ;
153516 / 350000,,012447           AOS      012447             ;;KILL THE BUM
153517 / 254000,,104156          JRST      NORJCT             ;
104154 / 254000,,153515          JRST      153515             ;
104155 / 260140,,104623         PUSHJ    P,104623             ;;OTHERWISE ERROR CLASS 0
                       NORJCT:
104156 / 602600,,000155          TRNE  UUO,000155             ;;OTHER CLASS 0 ERROR?
104157 / 260140,,104623         PUSHJ    P,104623             ;;ERROR, CLASS 0
104160 / 602600,,020000          TRNE  UUO,020000             ;;BUS OUT PARITY IS
104161 / 260140,,104624         PUSHJ    P,104624             ;;ERROR, CLASS 1
104162 / 606600,,010000          TRNN  UUO,010000             ;;EQUIPMENT CHECK IS CLASS 1 OR 3
104163 / 254000,,104202          JRST      NOCL13             ;
152244 / 000000,,012354                                       ;
152244 / 041000,,012354 POINT 8,00012354,31                   ;
104164 / 135040,,152244           LDB  TAC,152244             ;;GET SENSE BYTE 7
104165 / 302040,,000032          CAIE  TAC,000032             ;;SEEK CHECK
104166 / 306040,,000033          CAIN  TAC,000033             ;;OR SEEK INCOMPLETE
104167 / 254000,,104176          JRST      104176             ;;ARE CLASS 3
104170 / 306040,,000006          CAIN  TAC,000006             ;;COMMAND RETRY ABORTED?
153340 / 260140,,104750         PUSHJ    P,104750             ;;ERROR, CLASS 4
153341 / 254000,,104202          JRST      NOCL13             ;
104171 / 254000,,153340          JRST      153340             ;
104172 / 602600,,000200          TRNE  UUO,000200             ;;REAL EQUIPMENT CHECK, IS IT PERMANENT?
104173 / 350000,,012436           AOS      012436             ;;YES, COLD STOP
104174 / 260140,,104624         PUSHJ    P,104624             ;;ALL ELSE IS CLASS 1
104175 / 254000,,104202          JRST      NOCL13             ;
                       SKCHKA:
104176 / 260140,,000341         PUSHJ    P, POPIT             ;
104177 / 260140,,104652         PUSHJ    P,ERROR3             ;
104200 / 260140,,000316         PUSHJ    P,PUSHIT             ;
152710 / 000000,,012353                                       ;
152710 / 242000,,012353 POINT 16,00012353,15                  ;
104201 / 135600,,152710           LDB  UUO,152710             ;;RELOAD UUO
                       NOCL13:
104202 / 602600,,004000          TRNE  UUO,004000             ;;DATA CHECK?
104203 / 260140,,104640         PUSHJ    P,104640             ;;ERROR, CLASS 2
104204 / 602600,,002000          TRNE  UUO,002000             ;;OVERRUN?
104205 / 260140,,104750         PUSHJ    P,104750             ;;ERROR, CLASS 4
104206 / 602600,,040002          TRNE  UUO,040002             ;;INT. REQ. OR WRITE LOCK?
104207 / 260140,,104752         PUSHJ    P,104752             ;;ERROR, CLASS 5
                       ;		ERROR/USAGE STATISTICS
152406 / 000000,,012353                                       ;
152406 / 141000,,012353 POINT 8,00012353,23                   ;
104210 / 135040,,152406           LDB  TAC,152406             ;;PICK-UP BYTE 2
104211 / 606040,,000020          TRNN  TAC,000020             ;;ERROR-USAGE DATA?
104212 / 254000,,104322          JRST       TYPE0             ;
104213 / 350000,,012447           AOS      DSKFLG             ;
104214 / 260140,,044320         PUSHJ    P,044320             ;
104215 / 260140,,044066         PUSHJ    P,DISMES             ;
104225 / 260140,,104607         PUSHJ    P,104607             ;;PRINT DRIVE ID
104226 / 260140,,044066         PUSHJ    P,DISMES             ;
153006 / 000000,,012542                                       ;
153006 / 300300,,012542 POINT 3,00012542,11                   ;
104231 / 135040,,153006           LDB  TAC,153006             ;
104232 / 260140,,044170         PUSHJ    P,DISLOC             ;
104233 / 260140,,044066         PUSHJ    P,DISMES             ;
152254 / 000000,,012355                                       ;
152254 / 044000,,012355 POINT 32,00012355,31                  ;
104237 / 135040,,152254           LDB  TAC,152254             ;;BYTES 8-11 TOTAL BYTES
104240 / 260140,,044233         PUSHJ    P,044233             ;;IN DECIMAL
152711 / 000000,,012356                                       ;
152711 / 242000,,012356 POINT 16,00012356,15                  ;
104241 / 135600,,152711           LDB  UUO,152711             ;;BYTES 12-13 CORRECTABLE DATA CHECKS
104242 / 322600,,104251         JUMPE  UUO, ERRU1             ;
104243 / 260140,,044066         PUSHJ    P,DISMES             ;
104247 / 200040,,000014          MOVE  TAC,   UUO             ;
104250 / 260140,,044233         PUSHJ    P,DISDEC             ;
                       ERRU1:
152246 / 000000,,012356                                       ;
152246 / 042000,,012356 POINT 16,00012356,31                  ;
104251 / 135600,,152246           LDB  UUO,152246             ;;BYTES 14-15 RETRY DATA CHECKS
104252 / 322600,,104261         JUMPE  UUO, ERRU2             ;
104253 / 260140,,044066         PUSHJ    P,DISMES             ;
104257 / 200040,,000014          MOVE  TAC,   UUO             ;
104260 / 260140,,044233         PUSHJ    P,DISDEC             ;
                       ERRU2:
104261 / 260140,,044066         PUSHJ    P,DISMES             ;
152712 / 000000,,012357                                       ;
152712 / 242000,,012357 POINT 16,00012357,15                  ;
104265 / 135040,,152712           LDB  TAC,152712             ;;BYTES 16-17 NUMBER OF SEEKS
104266 / 260140,,044233         PUSHJ    P,DISDEC             ;
152245 / 000000,,012357                                       ;
152245 / 041000,,012357 POINT 8,00012357,31                   ;
104267 / 135600,,152245           LDB  UUO,152245             ;;BYTE 19 NUMBER OF ERROR SEEKS
104270 / 322600,,104277         JUMPE  UUO, ERRU3             ;
104271 / 260140,,044066         PUSHJ    P,DISMES             ;
104275 / 200040,,000014          MOVE  TAC,   UUO             ;
104276 / 260140,,044233         PUSHJ    P,DISDEC             ;
                       ERRU3:
153131 / 000000,,012360                                       ;
153131 / 341000,,012360 POINT 8,00012360,7                    ;
104277 / 135600,,153131           LDB  UUO,153131             ;;BYTE 20 COMMAND OVERRUNS
104300 / 322600,,104307         JUMPE  UUO, ERRU4             ;
104301 / 260140,,044066         PUSHJ    P,DISMES             ;
104305 / 200040,,000014          MOVE  TAC,   UUO             ;
104306 / 260140,,044233         PUSHJ    P,DISDEC             ;
                       ERRU4:
152701 / 000000,,012360                                       ;
152701 / 241000,,012360 POINT 8,00012360,15                   ;
104307 / 135600,,152701           LDB  UUO,152701             ;;BYTE 21 DATA OVERRUNS
104310 / 322600,,104317         JUMPE  UUO, ERRU5             ;
104311 / 260140,,044066         PUSHJ    P,DISMES             ;
104315 / 200040,,000014          MOVE  TAC,   UUO             ;
104316 / 260140,,044233         PUSHJ    P,DISDEC             ;
                       ERRU5:
104317 / 260140,,044066         PUSHJ    P,DISMES             ;
                       ;		ERROR PRINT
                       TYPE0:
104322 / 332000,,012447         SKIPE      DSKFLG             ;
104323 / 254000,,104330          JRST       TYPE1             ;
104324 / 350000,,012434           AOS      TYPANY             ;
104325 / 260140,,044066         PUSHJ    P,DISMES             ;
                       TYPE1:
104330 / 336000,,012434         SKIPN      012434             ;;TYPE ANYTHING?
104331 / 254000,,104554          JRST      104554             ;;NO, END OF TYPE CHECKING
104332 / 260140,,044066         PUSHJ    P,DISMES             ;
104336 / 260140,,044320         PUSHJ    P,DISDAT             ;
104337 / 200600,,002443          MOVE  UUO,002443             ;
104340 / 331000,,012224         SKIPL      012224             ;;FILE OP?
104341 / 336014,,000011         SKIPN      FILNAM(UUO)        ;;ANY FILE?
104342 / 254000,,104365          JRST      104365             ;;NO, DON'T PRINT CRUD
104343 / 260140,,044066         PUSHJ    P,DISMES             ;
104346 / 200114,,000011          MOVE TAC1,FILNAM(UUO)        ;
104347 / 260140,,044246         PUSHJ    P,DISSIX             ;
104350 / 510114,,000012          HLLZ TAC1,FILEXT(UUO)        ;
104351 / 322100,,104356         JUMPE TAC1, NOEXT             ;
104352 / 201400,,000056         MOVEI  TEM,000056             ;
104353 / 260140,,044024         PUSHJ    P,DISTYO             ;
104354 / 510114,,000012          HLLZ TAC1,FILEXT(UUO)        ;
104355 / 260140,,044246         PUSHJ    P,DISSIX             ;
                       NOEXT:
104356 / 201400,,000133         MOVEI  TEM,000133             ;
104357 / 260140,,044024         PUSHJ    P,DISTYO             ;
104360 / 200114,,000014          MOVE TAC1,FILPPN(UUO)        ;
104361 / 260140,,044246         PUSHJ    P,DISSIX             ;
104362 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NOFIL:
104365 / 200600,,012437          MOVE  UUO,ERRCMD             ;
104366 / 271600,,000001          ADDI  UUO,000001             ;;OFFSET SO DIAG WORKS
104367 / 260140,,044120         PUSHJ    P,DISERR             ;
                       ;-1
104370 / 000014,,153763                                       ;;3
104371 / 000000,,153332                                       ;
104372 / 777777,,777777                                       ;
104373 / 200040,,012224          MOVE  TAC,DSKLRN             ;
151674 / 777777,,777777                                       ;
104374 / 316040,,151674          CAMN  TAC,151674             ;
104375 / 254000,,104421          JRST      SATPNT             ;
151673 / 777777,,777776                                       ;
104376 / 316040,,151673          CAMN  TAC,151673             ;;THIS IS SET FOR ASYNC ERRORS
104377 / 254000,,104424          JRST       NSWAP             ;
104400 / 260140,,044066         PUSHJ    P,DISMES             ;
104403 / 550040,,002547          HRRZ  TAC,   DXJ             ;
104404 / 260140,,044230         PUSHJ    P,DISDCP             ;
104405 / 331000,,002547         SKIPL         DXJ             ;
104406 / 254000,,104412          JRST      NSWAP1             ;
104407 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NSWAP1:
104412 / 260140,,044120         PUSHJ    P,DISERR             ;
104413 / 000000,,153304                                       ;
104414 / 000100,,002551        OCTQQQ         DXS             ;
104415 / 000000,,153306                                       ;
104416 / 000100,,002552        OCTQQQ         DXW             ;
104417 / 777777,,777777                                       ;
104420 / 254000,,104424          JRST       NSWAP             ;
                       SATPNT:
104421 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NSWAP:
104424 / 260140,,044120         PUSHJ    P,DISERR             ;
104425 / 000000,,153410                                       ;
104426 / 000100,,012440        OCTQQQ      CNISAV             ;
104427 / 000000,,152275                                       ;
104430 / 777777,,777777                                       ;
104431 / 260140,,044066         PUSHJ    P,DISMES             ;
153006 / 000000,,012542                                       ;
153006 / 300300,,012542 POINT 3,00012542,11                   ;
104434 / 135040,,153006           LDB  TAC,153006             ;;GET DEVICE ADDRESS
104435 / 260140,,044170         PUSHJ    P,DISLOC             ;
104436 / 260140,,044066         PUSHJ    P,DISMES             ;
152247 / 000000,,012531                                       ;
152247 / 042000,,012531 POINT 16,00012531,31                  ;
104441 / 135040,,152247           LDB  TAC,152247             ;
104442 / 260140,,044170         PUSHJ    P,DISLOC             ;
104443 / 260140,,044066         PUSHJ    P,DISMES             ;
152702 / 000000,,012532                                       ;
152702 / 241000,,012532 POINT 8,00012532,15                   ;
104446 / 135040,,152702           LDB  TAC,152702             ;
104447 / 260140,,044170         PUSHJ    P,DISLOC             ;
104450 / 260140,,044066         PUSHJ    P,DISMES             ;
153132 / 000000,,012534                                       ;
153132 / 341000,,012534 POINT 8,00012534,7                    ;
104453 / 135040,,153132           LDB  TAC,153132             ;
104454 / 260140,,044170         PUSHJ    P,DISLOC             ;
104455 / 260140,,044066         PUSHJ    P,DISMES             ;
104457 / 336000,,012446         SKIPN      012446             ;;HOME ADDRESS TO PRINT?
104460 / 254000,,104476          JRST        NOHA             ;
104461 / 260140,,044066         PUSHJ    P,DISMES             ;
152410 / 000000,,012220                                       ;
152410 / 142000,,012220 POINT 16,00012220,23                  ;
104464 / 135040,,152410           LDB  TAC,152410             ;
104465 / 260140,,044170         PUSHJ    P,DISLOC             ;
104466 / 260140,,044066         PUSHJ    P,DISMES             ;
153130 / 000000,,012221                                       ;
153130 / 341000,,012221 POINT 8,00012221,7                    ;
104472 / 135040,,153130           LDB  TAC,153130             ;
104473 / 260140,,044170         PUSHJ    P,DISLOC             ;
104474 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NOHA:
104476 / 201600,,000000         MOVEI  UUO,                   ;;START WITH CLASS 0
                       CLLOP:
104477 / 336014,,012372         SKIPN      ERRCL0(UUO)        ;;ANY ERRORS OF THIS CLASS
104500 / 254000,,104510          JRST      104510             ;;NO
104501 / 260140,,044120         PUSHJ    P,DISERR             ;
104502 / 000000,,151353                                       ;
104503 / 000200,,000014        DECQQQ         UUO             ;
104504 / 000000,,152541                                       ;
104505 / 000214,,012372        DECQQQ      ERRCL0(UUO)        ;
104506 / 000000,,152533                                       ;
104507 / 777777,,777777                                       ;
                       NOCL:
104510 / 305600,,000004         CAIGE  UUO,000004             ;;HIGHEST COUNTING CLASS?
104511 / 344600,,104477          AOJA  UUO, CLLOP             ;
104512 / 336000,,012433         SKIPN       DEATH             ;
104513 / 254000,,104517          JRST       NODIE             ;
104514 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NODIE:
104517 / 260140,,044066         PUSHJ    P,DISMES             ;
104521 / 336000,,012435         SKIPN      SNSTYP             ;
104522 / 254000,,104551          JRST      104551             ;;NO SENSE DATA, GO CHECK FOR ERRORS
104523 / 260140,,104607         PUSHJ    P,104607             ;;PRINT DRIVE ID
104524 / 260140,,044066         PUSHJ    P,DISMES             ;
151410 / 000000,,012353                                       ;
151410 / 441000,,012353 POINT 8,00012353,                     ;
104531 / 200600,,151410          MOVE  UUO,151410             ;
151675 / 000000,,000000                                       ;
104532 / 261140,,151675          PUSH    P,151675             ;
                       SNSLOP:
104533 / 134040,,000014          ILDB  TAC,   UUO             ;
104534 / 322040,,104545         JUMPE  TAC,NULSNS             ;
104535 / 261140,,000001          PUSH    P,   TAC             ;
104536 / 260140,,044120         PUSHJ    P,DISERR             ;
104537 / 000203,,777776        DECQQQ      777776(P)          ;
104540 / 000000,,152541                                       ;
104541 / 000143,,777777        LOCQQQ      777777(P)          ;
104542 / 000000,,152275                                       ;
104543 / 777777,,777777                                       ;
104544 / 262143,,000000           POP    P,      (P)          ;
                       NULSNS:
104545 / 350043,,000000           AOS  TAC,      (P)          ;
104546 / 305040,,000030         CAIGE  TAC,SNSLEN             ;
104547 / 254000,,104533          JRST      SNSLOP             ;
104550 / 262143,,000000           POP    P,      (P)          ;
                       TYPDON:
104551 / 260140,,044066         PUSHJ    P,DISMES             ;
                       ERRGO:
104554 / 336000,,012436         SKIPN       CSTOP             ;
104555 / 254000,,104574          JRST      NOSTOP             ;
104556 / 260140,,044066         PUSHJ    P,DISMES             ;
104571 / 476000,,036035         SETOM      036035             ;
104572 / 260140,,043761         PUSHJ    P,043761             ;
104573 / 254200,,104574          HALT      104574             ;
                       NOSTOP:
104574 / 260140,,000341         PUSHJ    P, POPIT             ;
104575 / 260140,,105033         PUSHJ    P,105033             ;;MAKE SURE ERROR GOES AWAY!
104576 / 336000,,012433         SKIPN       DEATH             ;
104577 / 263140,,000000          POPJ    P,                   ;;DIDN'T DIE, TRY AGAIN RETURN
104600 / 200100,,002443          MOVE TAC1,002443             ;;GET DDB ADDRESS
104601 / 201740,,200000         MOVEI  AC3,200000             ;;START WITH DEVICE ERROR
104602 / 200040,,012374          MOVE  TAC,012374             ;;GET DATA ERROR COUNT
104603 / 311040,,012405          CAML  TAC,012405             ;;OVER MAX LIMIT?
104604 / 660740,,100000           TRO  AC3,100000             ;;YES, GIVE DATA ERROR ALSO
104605 / 436742,,000002          IORM  AC3,DEVIOS(TAC1)       ;
104606 / 254000,,037401          JRST      037401             ;;GIVE ERROR RETURN
                       DRIVEP:
104607 / 260140,,044066         PUSHJ    P,DISMES             ;
153126 / 000000,,012354                                       ;
153126 / 340600,,012354 POINT 6,00012354,7                    ;
104612 / 135400,,153126           LDB  TEM,153126             ;
104613 / 326400,,104620         JUMPN  TEM,104620             ;;UNKNOWN?
104614 / 260140,,044066         PUSHJ    P,044066             ;;YES
104617 / 263140,,000000          POPJ    P,                   ;
                       ISKNWN:
104620 / 405400,,000007          ANDI  TEM,000007             ;;JUST THE IMPORTANT BITS
104621 / 271400,,000101          ADDI  TEM,000101             ;
104622 / 254000,,044024          JRST      DISTYO             ;
                       ;ERROR CLASS DESCRIPTIONS
                       ;CLASS 0:		       BYTE    BIT
                       ;	INVALID TRACK FORMAT	1	1
                       ;	END OF CYLINDER		1	2
                       ;	NO RECORD FOUND		1	4
                       ;	FILE MASK VIOLATION	1	5
                       ;	OPERATION INCOMPLETE	1	7
                       ;	TOO MANY LOSING SEARCHES
                       ;	DATA CHAIN ERROR (CHANNEL CONI)
                       ;	ATTENTION (STATUS BYTE)
                       ;	BUSY (STATUS BYTE)
                       ;	UNIT EXCEPTION (STATUS BYTE)
                       ;	COMMAND REJECT		0	0
                       ;		AND NOT:
                       ;			WRITE INHIBITED
                       ;			DIAG LOAD INVALID DATA
                       ;			DIAG WRITE ERROR
                       ;CLASS 1:
                       ;	BUS OUT PARITY		BYTE 0 BIT 2
                       ;	SELECT ERROR (CHANNEL CONI)
                       ;	NXM (CHANNEL CONI)
                       ;	PARITY ERROR (CHANNEL CONI, CORE TO DISK)
                       ;	SENSE FAILED (ERROR ON SENSE AFTER UNIT CHECK)
                       ;	EQUIPMENT CHECK		BYTE 0 BIT 3
                       ;		AND NOT:
                       ;			SEEK CHECK
                       ;			RETRY ABORTED
                       ;CLASS 2:
                       ;	DATA CHECK		BYTE 0 BIT 4
                       ;CLASS 3:
                       ;	SEEK CHECK		BYTE 0 BIT 3  BYTE 7 = 32 OR 33 (OCTAL)
                       ;CLASS 4:
                       ;	OVERRUN			BYTE 0 BIT 5
                       ;	RETRY ABORTED		BYTE 0 BIT 3  BYTE 7 = 6
                       ;ERROR CLASS HANDLERS
                       ERROR0:
104623 / 634100,,000002          TDZA TAC1,000002             ;;CLASS 0
                       ERROR1:
104624 / 201100,,000001         MOVEI TAC1,000001             ;;CLASS 1
                       ERRORX:
104625 / 350000,,012447           AOS      012447             ;;INDICATE ERROR SEEN
104626 / 350002,,012420           AOS      TOTCL0(TAC1)       ;
104627 / 350042,,012372           AOS  TAC,ERRCL0(TAC1)       ;
104630 / 315042,,012403         CAMGE  TAC,MAXCL0(TAC1)       ;;TOO MANY?
104631 / 254000,,104634          JRST       TYTST             ;
104632 / 350000,,012433           AOS       DEATH             ;
104633 / 254000,,104636          JRST       TYPIT             ;
                       TYTST:
104634 / 612042,,012413          TDNE  TAC,TYMSK0(TAC1)       ;;SHOULD WE TYPE THIS ONE?
104635 / 332002,,012425         SKIPE      TYPCL0(TAC1)       ;;OR MAYBE ALL OF THEM?
                       TYPIT:
104636 / 350000,,012434           AOS      012434             ;;TYPE OUT
104637 / 263140,,000000          POPJ    P,                   ;
                       ERROR2:
104640 / 350000,,012447           AOS      DSKFLG             ;
104641 / 350000,,012422           AOS      TOTCL2             ;
104642 / 350040,,012374           AOS  TAC,ERRCL2             ;
104643 / 311040,,012405          CAML  TAC,MAXCL2             ;
104644 / 254000,,104647          JRST        TBAD             ;
104645 / 201100,,000002         MOVEI TAC1,000002             ;;CLASS 2
104646 / 254000,,104634          JRST       TYTST             ;
                       TBAD:
104647 / 350000,,012433           AOS       DEATH             ;
104650 / 350000,,012434           AOS      TYPANY             ;
104651 / 254000,,101634          JRST      101634             ;;JUMP TO DSKSER TO MARK A BAD TRACK
                       ERROR3:
104652 / 201100,,000003         MOVEI TAC1,000003             ;;CLASS 3
104653 / 260140,,104625         PUSHJ    P,104625             ;;COUNT AND TEST DEATH AND TYPING
104654 / 402000,,012400         SETZM      012400             ;;NOW SETUP FOR READ HA AND RECAL.
104655 / 402000,,012401         SETZM      ERRRCL             ;
                       REHA:
104656 / 260140,,105033         PUSHJ    P,105033             ;;CLEAR CHANNEL FOR READ HA
104657 / 750600,,004600          CONO  IBM,004600             ;
104660 / 750200,,460016          CONO  PMP,460016             ;
151734 / 000000,,012220                                       ;
104661 / 750140,,151734         DATAO  PMP,151734             ;
104662 / 750540,,012363         DATAO  IBM,RDHACM             ;
104663 / 260140,,103547         PUSHJ    P, ISYNC             ;
104664 / 254000,,104656          JRST        REHA             ;
104665 / 304000,,000000          CAIA                         ;
104666 / 254000,,104707          JRST      DORCLA             ;
104667 / 750600,,000002          CONO  IBM,     2             ;
104670 / 350040,,012400           AOS  TAC, ERRHA             ;
104671 / 315040,,012411         CAMGE  TAC, MAXHA             ;
104672 / 254000,,104656          JRST        REHA             ;
104673 / 350000,,012434           AOS      TYPANY             ;
104674 / 350000,,012436           AOS       CSTOP             ;
104675 / 260140,,000316         PUSHJ    P,PUSHIT             ;
104676 / 260140,,044066         PUSHJ    P,DISMES             ;
104705 / 260140,,000341         PUSHJ    P, POPIT             ;
104706 / 263140,,000000          POPJ    P,                   ;
                       DORCLA:
104707 / 476000,,012446         SETOM      HAFLAG             ;
                       DORCL:
104710 / 260140,,105033         PUSHJ    P, BLAST             ;
104711 / 750600,,004600          CONO  IBM,004600             ;
104712 / 750200,,460016          CONO  PMP,460016             ;
104713 / 750540,,012362         DATAO  IBM,RCALCM             ;
104714 / 260140,,103547         PUSHJ    P, ISYNC             ;
104715 / 254000,,104710          JRST       DORCL             ;
104716 / 254000,,104731          JRST      ERRCAL             ;
104717 / 200040,,012223          MOVE  TAC,PMPCNI             ;
104720 / 602040,,000200          TRNE  TAC,000200             ;;DEVICE END YET?
104721 / 263140,,000000          POPJ    P,                   ;;YES, DONE
104722 / 750600,,000400          CONO  IBM,000400             ;;GO AWAY
104723 / 260140,,103547         PUSHJ    P, ISYNC             ;
104724 / 254000,,104710          JRST       DORCL             ;
104725 / 254000,,104731          JRST      ERRCAL             ;
104726 / 200040,,012223          MOVE  TAC,PMPCNI             ;
104727 / 602040,,000200          TRNE  TAC,000200             ;;BETTER HAVE IT NOW
104730 / 263140,,000000          POPJ    P,                   ;
                       ERRCAL:
104731 / 750600,,000002          CONO  IBM,     2             ;
104732 / 350040,,012401           AOS  TAC,ERRRCL             ;
104733 / 315040,,012412         CAMGE  TAC,MAXRCL             ;
104734 / 254000,,104710          JRST       DORCL             ;
104735 / 350000,,012434           AOS      TYPANY             ;
104736 / 350000,,012436           AOS       CSTOP             ;
104737 / 260140,,000316         PUSHJ    P,PUSHIT             ;
104740 / 260140,,044066         PUSHJ    P,DISMES             ;
104746 / 260140,,000341         PUSHJ    P, POPIT             ;
104747 / 263140,,000000          POPJ    P,                   ;
                       ERROR4:
104750 / 201100,,000004         MOVEI TAC1,     4             ;
104751 / 254000,,104625          JRST      ERRORX             ;
                       ERROR5:
104752 / 350000,,012447           AOS      DSKFLG             ;
153006 / 000000,,012542                                       ;
153006 / 300300,,012542 POINT 3,00012542,11                   ;
104753 / 135040,,153006           LDB  TAC,153006             ;
104754 / 307040,,000002          CAIG  TAC,000002             ;
104755 / 254000,,104763          JRST      SYSLOS             ;
104756 / 350000,,012433           AOS      012433             ;;ERROR BIT TO LOSER!!!!
104757 / 201040,,400000         MOVEI  TAC,400000             ;;USE IMPROPER MODE BIT TO INDICATE OFF LINE OR WRITE LOCK
104760 / 200100,,002443          MOVE TAC1,002443             ;
104761 / 436042,,000002          IORM  TAC,DEVIOS(TAC1)       ;
104762 / 263140,,000000          POPJ    P,                   ;
                       SYSLOS:
104763 / 606600,,000002          TRNN  UUO,000002             ;;WRITE INHIBITED?
104764 / 254000,,104776          JRST      104776             ;;NO, MUST BE OFF LINE
104765 / 260140,,044066         PUSHJ    P,DISMES             ;
                       SYSLOZ:
104773 / 350000,,012434           AOS      TYPANY             ;
104774 / 350000,,012436           AOS       CSTOP             ;
104775 / 263140,,000000          POPJ    P,                   ;
                       SYSLOX:
153126 / 000000,,012354                                       ;
153126 / 340600,,012354 POINT 6,00012354,7                    ;
104776 / 135040,,153126           LDB  TAC,153126             ;;DRIVE ID
104777 / 322040,,105006         JUMPE  TAC,SYSLOY             ;
105000 / 260140,,044066         PUSHJ    P,DISMES             ;
105005 / 254000,,104773          JRST      SYSLOZ             ;
                       SYSLOY:
105006 / 260140,,044066         PUSHJ    P,DISMES             ;
105014 / 254000,,104773          JRST      SYSLOZ             ;
                       SENSE:
105015 / 402000,,012377         SETZM      ERRSNS             ;
                       SENSE1:
105016 / 260140,,105033         PUSHJ    P, BLAST             ;
105017 / 750600,,004600          CONO  IBM,004600             ;
105020 / 750200,,460016          CONO  PMP,460016             ;
105021 / 750140,,012352         DATAO  PMP,SNWCMA             ;
105022 / 750540,,012351         DATAO  IBM,SNSCMD             ;
105023 / 260140,,103547         PUSHJ    P, ISYNC             ;
105024 / 254000,,105016          JRST      SENSE1             ;
105025 / 304000,,000000          CAIA                         ;
105026 / 254000,,037401          JRST      CPOPJ1             ;
105027 / 350040,,012377           AOS  TAC,ERRSNS             ;
105030 / 311040,,012410          CAML  TAC,012410             ;;TOO MANY?
105031 / 263140,,000000          POPJ    P,                   ;;LOSE BIG
105032 / 254000,,105016          JRST      SENSE1             ;
                       BLAST:
105033 / 201040,,010000         MOVEI  TAC, 10000             ;
105034 / 750340,,100000         CONSO  PMP,100000             ;;TRY TO WAIT FOR PMP TO BECOME IDLE!
105035 / 367040,,105034          SOJG  TAC,105034             ;
105036 / 750600,,004601          CONO  IBM,004601             ;;NOW RESET CHANNEL
105037 / 201040,,001000         MOVEI  TAC,001000             ;;LET HIM COOL OFF
105040 / 367040,,105040          SOJG  TAC,105040             ;
105041 / 263140,,000000          POPJ    P,                   ;;LET'S HOPE THAT'S ENOUGH
                       ;HIGH PRIORITY INTERRUPT CODE (HPIC)
105042 / 264000,,012466           JSR      012466             ;;DUMMY FOR FUNNY ERRORS
                       D2IGO:
105043 / 750140,,012340         DATAO  PMP,012340             ;;ISSUE SEEK COMMAND
105044 / 750540,,012337         DATAO  IBM, SKCMD             ;
                       SKSRCH:
105045 / 211040,,000066         MOVNI  TAC,000066             ;
105046 / 202040,,012443         MOVEM  TAC,012443             ;;INITIALIZE LOSING SEARCH COUNT
105047 / 476000,,012536         SETOM      012536             ;;NO BACKUP FROM HERE
105050 / 750140,,012342         DATAO  PMP,SCWCMA             ;
105051 / 750540,,012341         DATAO  IBM, SCCMD             ;
105052 / 264000,,012466           JSR         D2X             ;
                       DOCMD:
105053 / 750140,,012535         DATAO  PMP, XWCMA             ;
105054 / 750540,,012547         DATAO  IBM,  XCMD             ;
105055 / 264040,,012466           JSR    1,   D2X             ;
105056 / 606040,,004000          TRNN  TAC,004000             ;;SUCCESSFUL SEARCH?
105057 / 254000,,105134          JRST      105134             ;;NO
105060 / 350000,,012445           AOS      012445             ;;INC WINNING SEARCHES
                       READDN:
                       ;ENTER HERE FROM READ AFTER READ
153132 / 000000,,012534                                       ;
153132 / 341000,,012534 POINT 8,00012534,7                    ;
105061 / 135040,,153132           LDB  TAC,153132             ;;GET LAST RECORD NUMBER
105062 / 200041,,105164          MOVE  TAC,RCLTAB(TAC)        ;;GET WCMA INCREMENT FOR THIS RECORD.
105063 / 270040,,012535           ADD  TAC,012535             ;;INC WCMA
105064 / 256000,,012537           XCT      012537             ;;CHECK FOR WC COUNTED OUT
105065 / 254000,,105126          JRST      105126             ;;IT'S OUT. WE'RE DONE
105066 / 202040,,012535         MOVEM  TAC,012535             ;;ONLY AFTER IT'S NOT THE END, STORE XWCMA
105067 / 200040,,012534          MOVE  TAC,012534             ;;GET RECORD NUMBER FROM SEARCH COMMAND
105070 / 202040,,012536         MOVEM  TAC,012536             ;;LAST SUCCESSFUL RECORD
105071 / 205040,,002000         MOVSI  TAC,      (<BYTE(8)1>) ;
105072 / 273040,,012534          ADDB  TAC,012534             ;;INCREMENT RECORD NUMBER FOR SEARCH
105073 / 317040,,152253          CAMG  TAC,152253             ;;TRACK OVERFLOW?
105074 / 254000,,105154          JRST      105154             ;;SAME TRACK. CHAIN TO READ OF NEXT RECORD
105075 / 331000,,012224         SKIPL      DSKLRN             ;
105076 / 254000,,105125          JRST      105125             ;;FILE SYSTEM - NOT ALLOWED TO WRAP AROUND
105077 / 200040,,012540          MOVE  TAC,012540             ;;THIS IS RECORD TO WRAP TO (SET UP AT CADDR)
105100 / 202040,,012534         MOVEM  TAC,012534             ;
105101 / 200040,,152001          MOVE  TAC,152001             ;;PREPARE TO INC HEAD BY 1
105102 / 273040,,012532          ADDB  TAC,012532             ;
105103 / 317040,,152033          CAMG  TAC,152033             ;;OVERFLOW CYLINDER?
105104 / 254000,,105114          JRST      105114             ;;NO, START SEEK
105105 / 201040,,000020         MOVEI  TAC,000020             ;;INC CYLINDER ADDRESS
105106 / 272040,,012531          ADDM  TAC, SKDAT             ;
105107 / 402000,,012532         SETZM      012532             ;;WRAP TO HEAD 0
152423 / 000000,,012337                                       ;
152423 / 160300,,012337 POINT 3,00012337,21                   ;
105110 / 135040,,152423           LDB  TAC,152423             ;;PACK NUMBER
105111 / 200041,,002352          MOVE  TAC,NCYLSH(TAC)        ;;<NUMBER CYLS THIS PACK>⊗4
105112 / 317040,,012531          CAMG  TAC,012531             ;;OFF END OF PACK?
105113 / 254000,,105125          JRST      105125             ;;YES, ALWAYS ERROR
                       SKOK:
105114 / 554040,,012532          HLRZ  TAC,012532             ;
105115 / 242040,,000004           LSH  TAC,     4             ;
105116 / 504040,,012531           HRL  TAC, SKDAT             ;
105117 / 242040,,777776           LSH  TAC,777776             ;
105120 / 202040,,012533         MOVEM  TAC,012533             ;;SET UP SCDAT FROM CYL IN SKDAT AND HD IN +1
105121 / 750140,,012340         DATAO  PMP,SKWCMA             ;
105122 / 750540,,012337         DATAO  IBM, SKCMD             ;
105123 / 264100,,012466           JSR    2,   D2X             ;
105124 / 254000,,105045          JRST      SKSRCH             ;
                       ;MORE HPIC
                       D2EOD:
105125 / 476000,,012544         SETOM       D2LUZ             ;
                       D2FIN:
105126 / 750540,,012364         DATAO  IBM,NOPCMD             ;
105127 / 264100,,012466           JSR    2,   D2X             ;
105130 / 476000,,012543         SETOM      012543             ;;FLAG OP COMPLETE TO DSKCHN
                       LSRCH:
105131 / 750200,,460016          CONO  PMP,460016             ;
105132 / 264100,,012466           JSR    2,   D2X             ;
105133 / 254000,,012504          JRST      D2BARF             ;
                       RESRCH:
105134 / 750540,,012364         DATAO  IBM,012364             ;;SEND NOOP TO STOP CHAINING AFTER FAILING SEARCH
105135 / 350000,,012444           AOS         LCT             ;
105136 / 351000,,012443          AOSL          CT             ;
105137 / 254000,,105131          JRST      105131             ;;TOO MANY LOSING SEARCHES!
105140 / 750140,,012342         DATAO  PMP,SCWCMA             ;
105141 / 750540,,012341         DATAO  IBM, SCCMD             ;
105142 / 264040,,012466           JSR    1,012466             ;;LAST OP WAS SEARCH
105143 / 476000,,012536         SETOM      012536             ;;RETRYING SEARCH, NO BACKUP
105144 / 254000,,105053          JRST       DOCMD             ;
                       ;OLD CODE, DO SEARCH AFTER WRITE
                       SRCLUP:
105145 / 211040,,000066         MOVNI  TAC,000066             ;
105146 / 202040,,012443         MOVEM  TAC,    CT             ;
105147 / 750140,,012342         DATAO  PMP,SCWCMA             ;
105150 / 750540,,012341         DATAO  IBM, SCCMD             ;
105151 / 264100,,012466           JSR    2,012466             ;;LAST OP WAS WRITE
105152 / 476000,,012536         SETOM      012536             ;;READ DONE, NO BACKUP
105153 / 254000,,105053          JRST       DOCMD             ;
                       ;NEW CODE, CHAIN READ FROM READ
                       READON:
105154 / 200040,,012547          MOVE  TAC,012547             ;;READ OR WRITE?
105155 / 602040,,000001          TRNE  TAC,     1             ;
105156 / 254000,,105145          JRST      105145             ;;WRITE. MUST ALWAYS CHAIN WRITE FROM SEARCH
105157 / 750140,,012535         DATAO  PMP,012535             ;;BUT, READ CAN BE CHAINED FROM READ
105160 / 750540,,012547         DATAO  IBM,  XCMD             ;
105161 / 264100,,012466           JSR    2,012466             ;;LAST OP WAS READ
105162 / 476000,,012536         SETOM      012536             ;;READ DONE, NO BACKUP
105163 / 254000,,105061          JRST      105061             ;;LEAP IN HERE
                       ;TABLE OF WCMA INCREMENTS CORRESPONDING TO EACH RECORD OF A TRACK.
                       RCLTAB:
105164 / 000040,,000040                                       ;
105165 / 000200,,000200                                       ;
105166 / 000200,,000200                                       ;
105167 / 000200,,000200                                       ;
105170 / 000200,,000200                                       ;
105171 / 000200,,000200                                       ;
105172 / 000200,,000200                                       ;
105173 / 000200,,000200                                       ;
105174 / 000200,,000200                                       ;
105175 / 000200,,000200                                       ;
105176 / 000200,,000200                                       ;
105177 / 000200,,000200                                       ;
105200 / 000200,,000200                                       ;
105201 / 000200,,000200                                       ;
105202 / 000200,,000200                                       ;
105203 / 000200,,000200                                       ;
105204 / 000200,,000200                                       ;
105205 / 000200,,000200                                       ;
105206 / 000200,,000200                                       ;
105207 /                 ;::    BEND STANFO.DSKSER.DSKINT.
105207 /                 ;::    BEND STANFO.DSKSER.
105207 /               ;: DSKINT[J17,SYS] EOF.
105207 /               ;: DTCSER[J17,SYS]
105207 /                 ;::   BEGIN STANFO.DTCSER.
                       ;SPECIAL I/O STATUS BITS
                       ;INIT OR SETSTS. CLEARED BY SETSTS OR RELEASE.
                       ;CONO BITS FOR UTC
                       ;DECTAPE DISPATCH TABLE
105207 / 254000,,105230          JRST      105230             ;;INITILIZE
105210 / 254000,,106216          JRST      106216             ;;DEVICE HUNG TIME OUT, STOP TAPE, AND JOB
                       DTCDSP:
105211 / 254000,,105705          JRST      105705             ;;RELEASE
105212 / 254000,,105656          JRST      105656             ;;CLOSE
105213 / 254000,,105455          JRST      105455             ;;OUTPUT - BUFFERED
105214 / 254000,,105526          JRST      105526             ;;INPUT - BUFFERED
105215 / 254000,,105302          JRST      105302             ;;ENTER FILE NAME IN DIRECTORY
105216 / 254000,,105267          JRST      105267             ;;LOOKUP FILE NAME IN DIRECTORY
105217 / 254000,,105374          JRST      105374             ;;OUTPUT - DUMP MODE
105220 / 254000,,105404          JRST      105404             ;;INPUT - DUMP MODE
105221 / 254000,,105733          JRST      105733             ;;USETO - SET NEXT OUTPUT BLOCK NO.
105222 / 254000,,105724          JRST      105724             ;;USETI - SET NEXT INPUT BLOCK NO.
105223 / 254000,,105746          JRST      105746             ;;UGETF - GET NEXT FREE BLOCK NO.
105224 / 254000,,105234          JRST      105234             ;;RENAME - CALL NEW ROUTINE - RPH
105225 / 263140,,000000          POPJ  PDP,                   ;;CLOSE - INPUT
105226 / 254000,,105670          JRST      105670             ;;UTPCLR - CLEAR DIRECTORY (CALL [SIXBIT /UTPCLR/]
105227 / 263140,,000000          POPJ  PDP,                   ;;MTAPE - IGNORE ON DECTAPE
                       ;INITIALIZE DECTAPE
                       DTCINI:
105230 / 721200,,000000          CONO  DTC,                   ;;CLEAR CONTROL
105231 / 513000,,000633         HLLZS      000633             ;;CLEAR CONSO FLAGS
105232 / 720200,,000000          CONO   DC,                   ;;CLEAR DATA CONTROL
105233 / 263140,,000000          POPJ  PDP,                   ;
                       ;RENAME UUO ROUTINE
                       DTCREN:
105234 / 602000,,000100          TRNE      000100             ;;SUPPRESSING DIRECTORY?
105235 / 254000,,037401          JRST      037401             ;;YES, GIVE SUCCESS RETURN
105236 / 332046,,000013         SKIPE  TAC,CURENT(DDB)        ;;PICK UP CURRENT ENTRY POINTER AND CHECK
105237 / 336001,,000000         SKIPN            (TAC)        ;;AND MAKE SURE ITS THERE
105240 / 263140,,000000          POPJ    P,                   ;;ERROR RETURN
105241 / 205000,,000200         MOVSI      000200             ;;MAKE SURE DIRECTORY GETS OUT
105242 / 437006,,000002          IORB      DEVIOS(DDB)        ;
153101 / 336014,,000000         SKIPN            (UUO)        ;
105243 / 256200,,153101          XCTR   XR,153101             ;;DELETING?
105244 / 254000,,105256          JRST      105256             ;;YES
152467 / 200114,,000000          MOVE TAC1,      (UUO)        ;
105245 / 256200,,152467          XCTR   XR,152467             ;
105246 / 202101,,000000         MOVEM TAC1,      (TAC)        ;
152470 / 200114,,000001          MOVE TAC1,     1(UUO)        ;
105247 / 256200,,152470          XCTR   XR,152470             ;
105250 / 502101,,000001          HLLM TAC1,     1(TAC)        ;
152471 / 200114,,000002          MOVE TAC1,     2(UUO)        ;
105251 / 256200,,152471          XCTR   XR,152471             ;
105252 / 202101,,000002         MOVEM TAC1,     2(TAC)        ;
152472 / 200114,,000003          MOVE TAC1,     3(UUO)        ;
105253 / 256200,,152472          XCTR   XR,152472             ;
105254 / 202101,,000003         MOVEM TAC1,     3(TAC)        ;
105255 / 254000,,037401          JRST      CPOPJ1             ;
                       DTCDEL:
105256 / 402006,,000013         SETZM      CURENT(DDB)        ;;CLEAR CURRENT ENTRY POINTER SINCE WE ARE DELETING IT
105257 / 505041,,000004          HRLI  TAC,     4(TAC)        ;;PREPARE TO BLT DOWN OVER THIS ENTRY
105260 / 550106,,000015          HRRZ TAC1,  UDIR(DDB)        ;;ADDR OF DIRECTORY
105261 / 251042,,000177           BLT  TAC,   177(TAC1)       ;;BLT DIR DOWN
105262 / 402002,,000177         SETZM         177(TAC1)       ;;CLEAR END IN CASE WASN'T 0
105263 / 402002,,000176         SETZM         176(TAC1)       ;
105264 / 402002,,000175         SETZM         175(TAC1)       ;
105265 / 402002,,000174         SETZM         174(TAC1)       ;
105266 / 254000,,037401          JRST      CPOPJ1             ;
                       ;LOOKUP UUO ROUTINE
                       ;CALL:	LOOKUP D,E
                       ;	NOT FOUND IN DIRECTORY RETURN
                       ;	FOUND
                       ;C(E)=LEFT JUSTIFIED SIXBIT FILE NAME
                       ;C(E+1)=LH=LEFT JUSTIFIED 3 CHAR. SIXBIT FILE NAME EXTENSION
                       ;  RH=FIRST BLOCK NO. IN FILE
                       ;C(E+2)=RIGHT 12 BITS=DATE FILE WAS CREATED
                       ;C(E+3)=BLKI POINTER FOR DUMPE SAVE-GET FILES
                       ULOOK:
105267 / 602000,,000100          TRNE      000100             ;;SUPPRESSING DIRECTORY?
105270 / 254000,,037401          JRST      037401             ;;YES.
105271 / 402006,,000013         SETZM      CURENT(DDB)        ;;CLEAR CURRENT ENTRY POINTER
105272 / 260140,,105350         PUSHJ  PDP,105350             ;;NO. SEARCH DIRECTORY
105273 / 263140,,000000          POPJ  PDP,                   ;;NOT FOUND ERROR RETURN
105274 / 540241,,000001           HRR  DAT,     1(TAC)        ;;FIRST BLOCK OF FILE
105275 / 552046,,000013         HRRZM  TAC,CURENT(DDB)        ;;SAVE REL ADDR OF CURRENT ENTRY
105276 / 542246,,000011          HRRM  DAT,DTNEXT(DEVDAT)     ;;SET NEXT INPUT BLOCK NO.
105277 / 621040,,777777           TLZ  TAC,777777             ;;CLEAR INDEX FIELD, DIRECTORY IS ABSOLUTE
105300 / 200240,,000014          MOVE  DAT,000014             ;;SETUP DESTINATION POINTER
105301 / 254000,,105336          JRST      105336             ;;BLOCK TRANSFER 4 WORD ENTRY
                       ;ENTER UUO ROUTINE
                       UENTER:
105302 / 602000,,000100          TRNE      000100             ;;SUPPRESSING DIRECTORY?
105303 / 254000,,037401          JRST      037401             ;;YES. GIVE SUCCESSFUL RETURN
105304 / 402006,,000013         SETZM      CURENT(DDB)        ;;CLEAR CURRENT ENTRY POINTER
105305 / 336020,,000014         SKIPN      @000014            ;;NO. NULL NAME?
105306 / 263140,,000000          POPJ  PDP,                   ;;YES. ERROR
105307 / 260140,,105350         PUSHJ  PDP,105350             ;;NO. SEARCH DIRECTORY.
105310 / 254000,,105325          JRST      105325             ;;NOT IN DIRECTORY.
105311 / 331001,,000003         SKIPL           3(TAC)        ;;IN DIRECTORY. IS IT A DUMP FILE?
105312 / 254000,,105325          JRST      105325             ;;NO
105313 / 271600,,000003          ADDI  UUO,000003             ;;YES, GET NEW BLKO POINTER
105314 / 200120,,000014          MOVE TAC1,@   UUO            ;
105315 / 275600,,000003          SUBI  UUO,     3             ;
105316 / 325100,,105325        JUMPGE TAC1,105325             ;;IS THIS A LEGITIMATE BLKO POINTER?
105317 / 315101,,000003         CAMGE TAC1,     3(TAC)        ;;YES. IS NEW FILE SHORTER THAN OLD.
105320 / 254000,,105325          JRST      105325             ;;NO.IT'S LONGER. PUT IT AT END OF TAPE
105321 / 550241,,000001          HRRZ  DAT,     1(TAC)        ;;YES. RE-SAVE AT SAME SPOT ON TAPE
105322 / 312101,,000003          CAME TAC1,     3(TAC)        ;;SAME SIZE BLOCK?
105323 / 661000,,000200           TLO      000200             ;;NO. SET UDIREN SO DIRECTORY WILL BE
                       ;WRITTEN ON RELEASE.
105324 / 254000,,105327          JRST      UENTE2             ;
                       UENTE1:
105325 / 661000,,001600           TLO      001600             ;;FILE GOES AT END OF TAPE
105326 / 350246,,000014           AOS  DAT, UFREE(DEVDAT)     ;;GET FIRST FREE BLOCK
                       UENTE2:
105327 / 350000,,000014           AOS      000014             ;;POINT TO SECOND DIRECTORY WORD IN USER AREA
105330 / 552046,,000013         HRRZM  TAC,CURENT(DDB)        ;;SAVE CURRENT ENTRY POINTER
105331 / 542260,,000014          HRRM  DAT,@000014            ;;STORE FIRST BLOCK NO. OF FILE
105332 / 506246,,000011          HRLM  DAT,DTNEXT(DEVDAT)     ;;STORE NEXT BLOCK TO WRITE
105333 / 550240,,000001          HRRZ  DAT,000001             ;;SET DESTINATION IN CORE DIRECTORY AREA
105334 / 370040,,000014           SOS  TAC,000014             ;;SET SOURCE TO USER AREA
105335 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
                       ;ROUTINE TO MOVE 4 WORD DIRECTORY ENTRY FROM USER
                       ;AREA TO MONITOR OR VICE VERSA
                       ;SOURCE IN AC TAC, DESTINATION IN AC DAT
                       BLTENT:
105336 / 205120,,000001         MOVSI TAC1,@000001            ;;SETUP ABS. SOURCE POINTER
105337 / 541120,,000005          HRRI TAC1,@000005            ;;SETUP ABS. DESTINATION POINTER
105340 / 201260,,000005         MOVEI  DAT,@000005            ;;ABS. STOP ADDRESS
105341 / 251105,,000003           BLT TAC1,     3(DAT)        ;
105342 / 201060,,000001         MOVEI  TAC,@000001            ;;ABS. SOURCE ADDR.
152110 / 000001,,000002                                       ;
152110 / 001401,,000002 POINT 12,01000002,35                  ;
105343 / 135100,,152110           LDB TAC1,152110             ;;GET SOURCE DATE
105344 / 326100,,105347         JUMPN TAC1,105347             ;;IS IT ALREADY SET?
105345 / 200100,,024634          MOVE TAC1,024634             ;;NO, USE TODAYS DATE
152111 / 000005,,000002                                       ;
152111 / 001405,,000002 POINT 12,05000002,35                  ;
105346 / 137100,,152111           DPB TAC1,152111             ;;AND SET DESTINATION DATE
                       BLTEN1:
105347 / 254000,,037401          JRST      037401             ;;SKIP RETURN TO USER
                       ;ROUTINE TO SEARCH DIRECTORY FOR ENTER AND LOOKUP
                       ;CALL:	PUSHJ PDP,UDIRSH
                       ;	NOT IN DIRECTORY RETURN
                       ;	NORMAL RETURN WHEN ENTRY IS FOUND
                       ;	NEVER RETURNS IF DIRECTORY FULL
                       UDIRSH:
105350 / 201654,,000003         MOVEI  AC1,     3(UUO)        ;;IS LAST WORD IF ENTRY IN BOUNDS?
105351 / 260140,,044504         PUSHJ  PDP,044504             ;;NEVER RETURN IF OUT OF BOUNDS
105352 / 260140,,105637         PUSHJ  PDP,105637             ;;CHECK IF DIRECTORY IN CORE
105353 / 550046,,000015          HRRZ  TAC,  UDIR(DEVDAT)     ;;LOC. OF DIRECTORY
105354 / 550101,,000000          HRRZ TAC1,      (TAC)        ;;REL. ADR. OF 1ST ENTRY
105355 / 505042,,777603          HRLI  TAC,777603(TAC1)       ;;ENTRY COUNTER
105356 / 272100,,000001          ADDM TAC1,000001             ;;START OF FIRST ENTRY
                       UDIR2:
105357 / 336101,,000000         SKIPN TAC1,      (TAC)        ;;FIRST WORD OF NEXT ENTRY
105360 / 263140,,000000          POPJ  PDP,                   ;;FILE NOT IN DIRECTORY RETURN
105361 / 316120,,000014          CAMN TAC1,@000014            ;;CHECK IF EQUAL TO USER AREA
105362 / 344600,,105366          AOJA  UUO,105366             ;;IS IS CHECK FILE EXTENSION
                       UDIR3:
152002 / 000004,,000004           XWD 4,4                     ;
105363 / 270040,,152002           ADD  TAC,152002             ;
105364 / 321040,,105357         JUMPL  TAC,105357             ;;FINISHED YET?
105365 / 254000,,037376          JRST      037376             ;;YES ERROR RETURN TO USER(POP,POPJ)
                       UDIR4:
105366 / 554120,,000014          HLRZ TAC1,@   UUO            ;
105367 / 370000,,000014           SOS         UUO             ;
                       ;	JUMPE TAC1,CPOPJ1	;MATCH IF USER EXT. IS ZERO
105370 / 554241,,000001          HLRZ  DAT,     1(TAC)        ;;EXTENSION IN DIRECTORY
105371 / 302242,,000000          CAIE  DAT,      (TAC1)       ;;EXTENSION MATCH?
105372 / 254000,,105363          JRST      105363             ;;NO, KEEP LOOKING
105373 / 254000,,037401          JRST      037401             ;;YES, SETUP RETURN
                       ;DUMP OUTPUT UUO ROUTINE
                       ;CALL:	OUTPUT D,ADR
                       ;WHERE ADR IS START OF A COMMAND LIST OF FOLLOWING FORM:
                       ;	IOWD N,LOC	;ARBITRARY NO OF THESE
                       ;	XWD 0,LOC1	;ARBITRARYNO OF THESE
                       ;	0
                       UOUTD:
105374 / 661000,,002020           TLO      002020             ;;FLAG OUTPUT AND DUMP-OUTPUT
105375 / 201040,,106030         MOVEI  TAC,106030             ;;DISPATCH ADR. WHEN BLOCK NO. FOUND
105376 / 260140,,105614         PUSHJ  PDP,105614             ;;CHECK INTERLOCK AND INITIALIZE
105377 / 554046,,000011          HLRZ  TAC,DTNEXT(DEVDAT)     ;;NEXT OUTPUT BLOCK NO.
105400 / 606000,,000100          TRNN      000100             ;;SUPPRESSING DIRECTORY?
105401 / 303040,,000001         CAILE  TAC,000001             ;;TRYING TO WRITE BLOCK 0 OR BLOCK 1
105402 / 254000,,105411          JRST      105411             ;;NO.
105403 / 254000,,105577          JRST      105577             ;;YES, STOP TAPE AND PRINT ERROR MESSAGE
                       ;DUMP INPUT UUO ROUTINE
                       ;CALL:	INPUT D,ADR
                       UIND:
105404 / 621000,,000020           TLZ      000020             ;;FLAG INPUT IN PROGRESS
105405 / 661000,,004000           TLO      004000             ;;AND INPUT DUMP
105406 / 201040,,106037         MOVEI  TAC,106037             ;;DISPATCH ADR. WHEN BLOCK NO. FOUND
105407 / 260140,,105614         PUSHJ  PDP,105614             ;;CHECK INTERLOCK
105410 / 550046,,000011          HRRZ  TAC,DTNEXT(DEVDAT)     ;;BLOCK NO. TO BE READ
                       DFILL:
105411 / 542040,,016004          HRRM  TAC,016004             ;;STORE FIRST BLOCK NO(LAST WILL BE CHECKED)
152766 / 264000,,016021           JSR      DMPADV             ;
105412 / 200100,,152766          MOVE TAC1,152766             ;
105413 / 202120,,016024         MOVEM TAC1,@016024            ;;WHERE TO GO WHEN BLKO/BLKI FINISHED
105414 / 201100,,000016         MOVEI TAC1,000016             ;;SET ERROR FLAGS(ALL EXCEPT INCOMPLETE BLOCK)
105415 / 542100,,016006          HRRM TAC1,CONSZ1             ;
105416 / 552340,,016001         HRRZM PROG,016001             ;;STORE JUST USER RELOCATION(FOR DMPADV)
105417 / 260140,,044540         PUSHJ  PDP,044540             ;;CHECK ENTIRE DUMP COMMAND LIST
105420 / 254000,,105453          JRST      105453             ;;ADDRESS CHECK
105421 / 336020,,000014         SKIPN      @000014            ;;IS COMMAND LIST EMPTY?
105422 / 254000,,106216          JRST      106216             ;;YES, STOP TAPE AND RETURN
105423 / 370000,,000005           SOS         DAT             ;
105424 / 240240,,777771           ASH  DAT,777771             ;;CONVERT TO BLOCK COUNT-1
105425 / 271260,,016004          ADDI  DAT,@016004            ;;ADD FIRST BLOCKNO.
105426 / 602000,,000100          TRNE      000100             ;;NON-STANDARD TAPE?
105427 / 254000,,105432          JRST      105432             ;;YES, DON'T CHECK BLOCK NO.
105430 / 303240,,001101         CAILE  DAT,001101             ;;LAST BLOCK TOO HIGH?
105431 / 254000,,105577          JRST      105577             ;;YES
105432 / 607000,,000020          TLNN      000020             ;;OUTPUT?
105433 / 344240,,105443          AOJA  DAT,105443             ;;NO, SET DAT TO NEXT BLOCK AFTER FILE
105434 / 550046,,000014          HRRZ  TAC, UFREE(DEVDAT)     ;
105435 / 315240,,000001         CAMGE  DAT,000001             ;;YES, GREATER THAN CURRENT FREE BLOCK?
105436 / 254000,,105444          JRST      105444             ;;NO
105437 / 542246,,000014          HRRM  DAT, UFREE(DEVDAT)     ;;YES, SET LAST BLOCK USED
105440 / 350000,,000005           AOS      000005             ;;SET DAT TO BLOCK NO. AFTER FILE
105441 / 506246,,000011          HRLM  DAT,DTNEXT(DEVDAT)     ;;SET NEXT BLOCK TO WRITE(AFTER THIS)
105442 / 665000,,000400          TLOA      000400             ;;FLAG AS MODIFIED
                       UMPIN:
105443 / 542246,,000011          HRRM  DAT,DTNEXT(DEVDAT)     ;;SET NEXT BLOCK TO READ
                       IMPOT:
105444 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
105445 / 201060,,000014         MOVEI  TAC,@000014            ;;ABS. ADR. OF FIRST COMMAND
105446 / 202040,,015767         MOVEM  TAC,015767             ;;STORE
105447 / 200060,,015767          MOVE  TAC,@015767            ;;GET FIRST BLK POINTER
105450 / 271047,,000000          ADDI  TAC,      (PROG)       ;;RELOCATE IOWD ADDRESS
105451 / 202040,,015766         MOVEM  TAC,015766             ;;SET DUMP BLKI/BLKO POINTER
105452 / 254000,,105546          JRST      105546             ;;GO START TAPE(FIRST BLOCK NO ALREADY STORED)
                       ADRER:
105453 / 260140,,106216         PUSHJ  PDP,106216             ;;GO RELEASE TAPE
105454 / 254000,,043211          JRST      043211             ;;STOP JOB AND PRINT ADDRESS CHECK MESSAGE
                       ;OUTPUT UUO ROUTINE -BUFFERED
                       UOUT:
105455 / 201066,,000010         MOVEI  TAC,@DEVOAD(DEVDAT)    ;
105456 / 336001,,000001         SKIPN           1(TAC)        ;;WORD COUNT ZERO?
105457 / 254000,,105510          JRST      105510             ;;YES.
105460 / 621000,,003000           TLZ      003000             ;;CLEAR OUTPUT DUMP BIT
                       ;AND LINKED TO FREE STORAGE
105461 / 661000,,000020           TLO      000020             ;;FLAG THAT OUTPUT IS BEING DONE
105462 / 554106,,000011          HLRZ TAC1,DTNEXT(DEVDAT)     ;;OUTPUT BLOCK NO. TO WIRTE
105463 / 602000,,000100          TRNE      000100             ;;SUPPRESSING DIRECTORY?
105464 / 254000,,105467          JRST      105467             ;;YES
105465 / 306100,,000001          CAIN TAC1,000001             ;;TRYING TO WRITE BLOCK 1?
105466 / 254000,,105513          JRST      105513             ;;YES, COPY INTO MONITOR DIR. AREA
                       UOUT2:
105467 / 201040,,106053         MOVEI  TAC,106053             ;;SETUP DISPATCH WHEN CURRENT BLOCK NO. FOUND
105470 / 260140,,105614         PUSHJ  PDP,105614             ;;CHECK INTERLOCK
                       ;HERE AT INTERRUPT LEVEL IF NEXT BUFFER READY WITH DATA TO GO OUT
                       UOUTGO:
105471 / 201066,,000010         MOVEI  TAC,@DEVOAD(DEVDAT)    ;;ABS. ADR. OF USER OUTPUT BUFFER
105472 / 202040,,015776         MOVEM  TAC,  UBUF             ;
105473 / 621000,,001000           TLZ      001000             ;;FLAG THIS BLOCK NOT LINKED TO FREE STORAGE
105474 / 554101,,000001          HLRZ TAC1,     1(TAC)        ;;BLOCK TIE FROM BUFFER(NEXT BLOCK)
105475 / 326100,,105500         JUMPN TAC1,105500             ;;USE BLOCK NO.INDICATED IF NON ZERO
105476 / 661000,,001400           TLO      001400             ;;FLAG LINKED TO FREE STORAGE
105477 / 350106,,000014           AOS TAC1, UFREE(DEVDAT)     ;;NEXT FREE BLOCK
                       UOUT1:
105500 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
                       ;STORE WHETHER THIS BLOCK
                       ;LINKED TO FREE STORAGE
                       ;AND FREE BLOCK POINTER
                       ;MODIFIED.
105501 / 621100,,777777           TLZ TAC1,777777             ;;GET UFREE ALONE
105502 / 306100,,000001          CAIN TAC1,000001             ;;IF 1, THIS IS LAST BLOCK(SET BY CLOSE)
105503 / 201100,,000000         MOVEI TAC1,                   ;;SET BLOCK TIE TO 0
105504 / 506101,,000001          HRLM TAC1,     1(TAC)        ;;IN USER BUFFER
105505 / 554046,,000011          HLRZ  TAC,DTNEXT(DEVDAT)     ;;BLOCK TO WRITE NOW
105506 / 506106,,000011          HRLM TAC1,DTNEXT(DEVDAT)     ;;STORE BLOCK TO WRITE NEXT
105507 / 254000,,105541          JRST      105541             ;;GO START TAPE
                       DTNOPO:
105510 / 260140,,044366         PUSHJ  PDP,044366             ;;WORD COUNT WAS ZERO. IGNORE BUFFER
105511 / 255000,,000000          JFCL                         ;
105512 / 263140,,000000          POPJ  PDP,                   ;;RETURN TO UUOCON
                       ;WRITE BLOCK 1 - COPY USER BUFFER INTO EXEC DIRECTORY CORE BUFFER
                       UOUT4:
105513 / 201126,,000010         MOVEI TAC1,@DEVOAD(DEVDAT)    ;;ABS. ADR. OF USER BUFFER
105514 / 205102,,000001         MOVSI TAC1,     1(TAC1)       ;;SOURCE IS THIRD WORD OF USER BUFFER
105515 / 540106,,000015           HRR TAC1,  UDIR(DEVDAT)     ;;ADR. OF DIRECTORY BUFFER IN EXEC
105516 / 200040,,000002          MOVE  TAC,  TAC1             ;
105517 / 251101,,000177           BLT TAC1,   177(TAC)        ;;MOVE 200 WORDS FROM USER TO EXEC
105520 / 402006,,000013         SETZM      CURENT(DDB)        ;;THIS MAY NOT BE TRUE NOW!
105521 / 661000,,000200           TLO      000200             ;;FLAG. DIR. ENTERED INTO
105522 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
105523 / 260140,,044366         PUSHJ  PDP,ADVBFE             ;
105524 / 255000,,000000          JFCL                         ;
105525 / 254000,,105651          JRST      105651             ;;SET DVDIREN AND UFREE
                       ;INPUT UUO ROUTINE - RING BUFFERED
                       UIN:
105526 / 621000,,004020           TLZ      004020             ;;CLEAR INPUT DUMP BIT AND FLAG AS INPUT
105527 / 550046,,000011          HRRZ  TAC,DTNEXT(DEVDAT)     ;;NEXT BLOCK TO READ
105530 / 602000,,000100          TRNE      000100             ;;SUPPRESSING DIRECTORY?
105531 / 254000,,105534          JRST      105534             ;;YES
105532 / 306040,,000001          CAIN  TAC,000001             ;;TRYING TO READ DIRECTORY?
105533 / 254000,,105601          JRST      105601             ;;YES, COPY CORE INTO USER AREA
                       UIN3:
105534 / 201040,,106065         MOVEI  TAC,106065             ;;SETUP DISPATCH WHEN BLOCK NO. FOUND
105535 / 260140,,105614         PUSHJ  PDP,105614             ;;NO,CHECK DECTAPE AND DATA CONTROL INTERLOCK
                       ;HERE AT INTERRUPT LEVEL IF NEXT INPUT BUFFER READY FOR DATA
                       UINGO:
105536 / 201066,,000007         MOVEI  TAC,@DEVIAD(DEVDAT)    ;;ABS ADR OF USER BUFFER
105537 / 202040,,015776         MOVEM  TAC,  UBUF             ;
105540 / 550046,,000011          HRRZ  TAC,DTNEXT(DEVDAT)     ;;NEXT BLOCK TO READ
                       ;HERE FROM OUTPUT UUO ALSO - BLOCK TO READ OR WRITE IN TAC
                       FILL:
105541 / 542040,,016004          HRRM  TAC,016004             ;;STORE BLOCK NO.TO READ OR WRITE
105542 / 602000,,000100          TRNE      000100             ;;NON-STANDARD TAPE?
105543 / 254000,,105546          JRST      105546             ;;YES. DON'T CHECK BLOCK NO.
105544 / 301040,,001102          CAIL  TAC,001102             ;;IS IT TOO LARGE?
105545 / 254000,,105577          JRST      105577             ;;YES,ILLEGAL BLOCK NO.
                       FILL1:
105546 / 402000,,015777         SETZM      015777             ;;CLEAR NO. OF ERRORS FOR THIS OPERATION
105547 / 402000,,015774         SETZM      015774             ;;CLEAR DC DATA MISSED FLAG
                       FILLER:
152762 / 264000,,016007           JSR        RDBN             ;
105550 / 200040,,152762          MOVE  TAC,152762             ;;SETUP TO READ BLOCK NOS.
105551 / 202060,,016023         MOVEM  TAC,@016023            ;;IN EVEN DC PI LOC
105552 / 260140,,045243         PUSHJ  PDP,045243             ;;STORE IOS AND RESET HUNG DEVICE COUNT
105553 / 201040,,000020         MOVEI  TAC,000020             ;;NUMBER OF REVERSALS WE WILL ALLOW
105554 / 202040,,015775         MOVEM  TAC,RBNCNT             ;
105555 / 200040,,015773          MOVE  TAC,015773             ;;GET UNIT NO + DTC CHANNEL
105556 / 720200,,004011          CONO   DC,004011             ;;SET TO READ BLOCK NOS FROM DECTAPE
105557 / 700600,,002100          CONO   PI,002100             ;;TURN DC PI CHANNEL ON
105560 / 721300,,020000         CONSZ  DTC,020000             ;;IS TAPE MOVING? (IE ARE WE AT INTERRUPT LEVEL)
105561 / 254000,,105573          JRST      105573             ;;YES
105562 / 607000,,010000          TLNN      010000             ;;NO, WAS LAST DIRECTION REVERSE?
105563 / 435040,,010000          IORI  TAC,010000             ;;NO,REVERSE THIS TIME
105564 / 505040,,000017          HRLI  TAC,000017             ;;CONSZ TEST FLAGS
105565 / 435040,,323200          IORI  TAC,323200             ;;CONO FLAGS
105566 / 700600,,000400          CONO   PI, PIOFF             ;
105567 / 546040,,000633          HLRM  TAC,DTCCON             ;
105570 / 721201,,000000          CONO  DTC,      (TAC)        ;
105571 / 700600,,000200          CONO   PI,  PION             ;
105572 / 263140,,000000          POPJ  PDP,                   ;;RETURN
                       FILLC:
105573 / 721300,,010000         CONSZ  DTC,010000             ;;TAPE ALREADY MOVING, GOING BACKWARD?
105574 / 435040,,002000          IORI  TAC,002000             ;;YES,TURN AROUND DELAY
105575 / 721201,,320200          CONO  DTC,320200(TAC)        ;;MAKE GO FORWARD ALWAYS
105576 / 263140,,000000          POPJ  PDP,                   ;;RETURN AT UUO LEVEL OR DISMISS INTERRUPT
                       ;ILLEGAL BLOCK NO.
                       UTBERR:
105577 / 660000,,040000           TRO      040000             ;;SET IOBKTL TO INDICATE ILLEGAL BLOCK NO.
105600 / 254000,,106216          JRST      106216             ;;STOP TAPE AND DESELECT
                       ;COPY CORE IF TRYING TO READ BLOCK 1
                       UIN2:
105601 / 260140,,105637         PUSHJ  PDP,105637             ;;CHECK IF DIRECTORY IN CORE
105602 / 200106,,000014          MOVE TAC1, UFREE(DEVDAT)     ;;PLACE FREE BLOCK POINTER
105603 / 506126,,000015          HRLM TAC1,@  UDIR(DEVDAT)    ;;IN DIRECTORY
105604 / 201066,,000007         MOVEI  TAC,@DEVIAD(DEVDAT)    ;;ABS. OF 2ND WORD OF BUFFER
105605 / 201101,,000001         MOVEI TAC1,     1(TAC)        ;;BUFFER ADDRESS DESTINATION
105606 / 504106,,000015           HRL TAC1,  UDIR(DEVDAT)     ;;SOURCE
105607 / 251101,,000200           BLT TAC1,   200(TAC)        ;;MOVE DIRECTORY TO BUFFER
105610 / 260140,,044454         PUSHJ  PDP,044454             ;;ADVANCE INPUT BUFFER
105611 / 255000,,000000          JFCL                         ;
105612 / 263140,,000000          POPJ  PDP,                   ;
                       ;COMMON ROUTINE TO CHECK INTERLOCK, INITIALIZE
                       ;CALLED ONLY AT UUO LEVEL
                       ;BITS IN IOS HAVE BEEN SET BUT NOT STORED
                       ;TAC CONTAINS DISPATCH ADR. WHEN BLOCK NO. FOUND
                       ;(READ,WRITE,DREAD,DWRITE)
                       DINTER:
105613 / 665000,,020000          TLOA      020000             ;;FLAG DIRECTORY OPERATION
                       UINTER:
105614 / 621000,,020000           TLZ      020000             ;;CLEAR DIRECTORY OPERATION BIT
105615 / 260140,,046055         PUSHJ  PDP,046055             ;;GET DATA CONTROL AND DECTAPE CONTROL
105616 / 352000,,021655          AOSE      021655             ;;ARGUMENT EXECUTED BY GETDCDT
105617 / 720200,,000000          CONO   DC,                   ;;TURN OFF DATA CONTROL
105620 / 542040,,016005          HRRM  TAC,016005             ;;STORE DISPATCH ADR. WHEN BLOCK NO. FOUND
105621 / 135040,,037577           LDB  TAC,037577             ;;UNIT NO. OF THIS DECTAPE
105622 / 242040,,000003           LSH  TAC,000003             ;;SHIFT TO UNIT POSITION
105623 / 435040,,000004          IORI  TAC,000004             ;;OR IN DT CHANNEL
105624 / 202040,,015773         MOVEM  TAC,015773             ;;SAVE
105625 / 201040,,000116         MOVEI  TAC,   116             ;
105626 / 542040,,016006          HRRM  TAC,CONSZ1             ;
105627 / 574046,,000014          HLRE  TAC, UFREE(DEVDAT)     ;;RESET BLOCK QUANTUM ALLOTMENT
105630 / 202040,,016003         MOVEM  TAC,016003             ;;LET THIS JOB READ THIS MANY BLOCKS
                       ;BEFORE SWITCHING TO ANOTHER JOB
                       ;AS LONG AS TAPE KEEPS MOVING
152765 / 264000,,016015           JSR        ENPT             ;
105631 / 200040,,152765          MOVE  TAC,152765             ;;SETUP END FOR NON-DUMP DC OPERATIONS
105632 / 202060,,016024         MOVEM  TAC,@016024            ;;IN PI TRAP LOC+1
105633 / 260140,,045233         PUSHJ  PDP,045233             ;;SET DEV. ACTIVE FLAG AND STORE
                       ;IOS. ALSO RESET HUNG DEVICE TIME COUNT
105634 / 202300,,016002         MOVEM DEVDAT,016002             ;;SAVE ADR. OF DEVICE DATA BLOCK
105635 / 202340,,016000         MOVEM PROG,016000             ;;SAVE ABS.LOC. OF USER AREA
105636 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO CHECK IF DIRECTORY IN CORE
                       ;IF NOT, IT IS READ IN
                       DIRCHK:
105637 / 606000,,000100          TRNN      000100             ;;DIRECTORY BEING SUPPRESSED?
105640 / 335006,,000004        SKIPGE      DEVMOD(DEVDAT)     ;;NO. DIRECTORY IN CORE?
105641 / 263140,,000000          POPJ  PDP,                   ;;YES
105642 / 201040,,106065         MOVEI  TAC,106065             ;;DISPATCH ADR. WHEN BLOCK NO. FOUND
105643 / 260140,,105713         PUSHJ  PDP,105713             ;;READ DIR. AND RETURN WHEN FINISHED
105644 / 550066,,000015          HRRZ  TAC,@  UDIR(DEVDAT)    ;;CHECK REL. POINTER TO FIRST DIR. ENTRY
105645 / 322040,,106336         JUMPE  TAC,106336             ;;BAD IF ZERO
105646 / 301040,,000174          CAIL  TAC,   174             ;
105647 / 254000,,106336          JRST      106336             ;;PRINT BAD DIRECTORY AND DO NOT RETURN
105650 / 621000,,001600           TLZ      001600             ;;BUT NOT ENTERED INTO, LINKED TO FREE
                       ;STORAGE, OR FREE BLOCK POINTER CHANGED
                       DIRCH1:
105651 / 205040,,400000         MOVSI  TAC,400000             ;;SET DIRECTORY IN CORE BIT. CLEARED BY ASSIGN
105652 / 436046,,000004          IORM  TAC,DEVMOD(DEVDAT)     ;
105653 / 554066,,000015          HLRZ  TAC,@  UDIR(DEVDAT)    ;;LAST BLOCK WRITTEN
105654 / 542046,,000014          HRRM  TAC, UFREE(DEVDAT)     ;;SAVE IN DEVICE DATA BLOCK
105655 / 263140,,000000          POPJ  PDP,                   ;
                       ;CLOSE UUO
                       ;CALLED ONLY IF THIS USER CHANNEL HAS DONE OUTPUT
                       UTPCLS:
105656 / 402006,,000013         SETZM      CURENT(DDB)        ;;CLEAR CURRENT ENTRY POINTER
105657 / 135040,,037574           LDB  TAC,037574             ;;GET DATA MODE?
105660 / 305040,,000016         CAIGE  TAC,000016             ;;IS IT DR OR D(DUMP MODE)?
105661 / 607000,,001000          TLNN      001000             ;;NO, NOT LINKED TO FREE STORAGE?
105662 / 263140,,000000          POPJ  PDP,                   ;;YES, DO NOT WRITE OUT LAST BUFFERFUL
105663 / 200046,,000010          MOVE  TAC,DEVOAD(DEVDAT)     ;;ADR. OF USER OUTPUT BUFFER
105664 / 350000,,000001           AOS      000001             ;;ADDRESS THIRD WORD
105665 / 201100,,000001         MOVEI TAC1,000001             ;;SET LINK TO 1 IN LH OF THIRD WORD
105666 / 506120,,000001          HRLM TAC1,@000001            ;;IN USER AREA(FLAG AS LAST BLOCK)
105667 / 254000,,065347          JRST      065347             ;;DO OUTPUT
                       ;UTPCLR UUO - CLEAR DECTAPE DIRECTORY
                       UTPCLR:
105670 / 602000,,000100          TRNE      000100             ;;DIRECTORY BEING SUPPRESSED?
105671 / 263140,,000000          POPJ  PDP,                   ;;YES
105672 / 661000,,000600           TLO      000600             ;;NO. FLAG DIR. ENTERED INTO AND UFREE MODIF.
105673 / 200046,,000015          MOVE  TAC,  UDIR(DEVDAT)     ;;INITIALIZE EXEC CORE DIRECTORY
151765 / 000001,,000005           XWD 1,5                     ;
105674 / 200100,,151765          MOVE TAC1,151765             ;;SET FIRST WORD IN DIRECTORY
105675 / 202101,,000000         MOVEM TAC1,      (TAC)        ;;LH=LAST BLOCK USED,RH=FIRST 
                       ;FREE REL. DIR. ENTRY.
105676 / 504040,,000001           HRL  TAC,   TAC             ;
105677 / 253040,,105700         AOBJN  TAC,105700             ;;INCREMENT BOTH HALVES
105700 / 402001,,000000         SETZM            (TAC)        ;;CLEAR SECOND WORD
105701 / 200100,,000001          MOVE TAC1,   TAC             ;
105702 / 350000,,000001           AOS         TAC             ;
105703 / 251042,,000176           BLT  TAC,   176(TAC1)       ;;CLEAR REST OF 200 WORD DIRECTORY
105704 / 260140,,105651         PUSHJ  PDP,105651             ;;SET DVDIRIN AND UFREE
                       ;ALWAYS WIRITE TAPE
                       ;RELEASE UUO
                       ;WRITE DIRECTORY IF CORE VERSION DIFFERS FROM TAPE VERSION(BLOCK 1)
                       UTPREL:
105705 / 622000,,000100          TRZE      000100             ;;SUPPRESSING DIRECTORY?
105706 / 254000,,105731          JRST      105731             ;;YES, STORE IOS AND RETURN
105707 / 337006,,000004         SKIPG      DEVMOD(DEVDAT)     ;;HAS ASSIGN COMMAND BEEN TYPED
                       ;SINCE DIRECTORY READ IN?
105710 / 627000,,000600          TLZN      000600             ;;NO, DIR. ENTERED INTO OR
                       ;FREE BLOCK POINTER MODIFIED?
105711 / 263140,,000000          POPJ  PDP,                   ;;NO, DO NOT WRITE DIRECTORY
105712 / 201040,,106053         MOVEI  TAC,106053             ;;DISPATCH ADR. WHEN BLOCK NO. FOUND
                       UTPRL1:
105713 / 260140,,105613         PUSHJ  PDP,105613             ;;CHECK INTERLOCK AND FLAG DIRECT. OPER.
105714 / 200046,,000014          MOVE  TAC, UFREE(DEVDAT)     ;;NEW FREE BLOCK POINTER
105715 / 506066,,000015          HRLM  TAC,@  UDIR(DEVDAT)    ;;STORE IN LH OF FIRST WORD OF DIR.
105716 / 550046,,000015          HRRZ  TAC,  UDIR(DEVDAT)     ;;ADD. OF EXEC DIR. CORE BUFFER
105717 / 370000,,000001           SOS      000001             ;;ADRRESS-1
105720 / 202040,,015776         MOVEM  TAC,015776             ;;STORE BUFFER ADR.
105721 / 201040,,000001         MOVEI  TAC,000001             ;;WRITE (OR READ) BLOCK 1
105722 / 260140,,105541         PUSHJ  PDP,105541             ;;GO START TAPE
105723 / 254000,,046160          JRST      046160             ;;WAIT BEFORE RETURNING TO USER
                       ;USETI UUO - SET NEXT INPUT BLOCK NO TO READ
                       SETI:
105724 / 260140,,105737         PUSHJ  PDP,105737             ;;CHECK FOR ILLEGAL BLOCK NO.
105725 / 260140,,046160         PUSHJ  PDP,046160             ;;WAIT TILL ALL BUFFERS FILLED.
105726 / 621000,,000040           TLZ      000040             ;;CLEAR END OF FILE BIT
105727 / 620000,,020000           TRZ      020000             ;;SYSTEM AND USER
105730 / 542606,,000011          HRRM  UUO,DTNEXT(DEVDAT)     ;;STORE NEXT BLOCK TO READ IN DDB
                       SETI1:
105731 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
105732 / 263140,,000000          POPJ  PDP,                   ;
                       ;USETO UUO - SET NEXT OUTPUT BLOCK NO. TO WRITE
                       SETO:
105733 / 260140,,105737         PUSHJ  PDP,105737             ;;CHECK FOR LILLEGAL BLOCK NO.
105734 / 260140,,046160         PUSHJ  PDP,046160             ;;WAIT TILL ALL BUFFERS EMPTIED.
105735 / 506606,,000011          HRLM  UUO,DTNEXT(DEVDAT)     ;;SET NEXT BLOCK NO. IN DEVICE DATA BLOCK
105736 / 263140,,000000          POPJ  PDP,                   ;
                       ;ROUTINE TO CHECK FOR ILLEGAL BLOCK NUMBER
                       ;CALL MOVE UUO,BLOCK #
                       ;	PUSHJ PDP,BLKCHK
                       ;	RETURN IF BLOCK NO. OK
                       ;IF NON-STANDARD TAPE (UDSD=1), ALL BLOCK NOS. ARE LEGAL
                       ;OTHERWISE, IF UUO>1101, SETS IOBKTL AND RETURNS TO USER.
                       BLKCHK:
105737 / 621600,,777777           TLZ  UUO,777777             ;;CLEAR LEFT HALF UUO FOR COMPARE.
105740 / 602000,,000100          TRNE      000100             ;;NON-STANDARD TAPE?
105741 / 263140,,000000          POPJ  PDP,                   ;;YES
105742 / 307600,,001101          CAIG  UUO,001101             ;;NO. LEGAL BLOCK NUMBER?
105743 / 263140,,000000          POPJ  PDP,                   ;;YES
105744 / 660000,,040000           TRO      040000             ;;NO. SET IOBKTL, STORE IOS
105745 / 254000,,105731          JRST      105731             ;;AND RETURN TO USER.
                       ;UGETF UUO - GET NEXT FREE BLOCK NO.
                       ;IF DIRECTORY IS SUPPRESSED, RETURN XWD NEXT BLOCK TO WRITE,NEXT
                       ; BLOCK TO READ.
                       GETF:
105746 / 260140,,046160         PUSHJ  PDP,046160             ;;WAIT TILL DEVICE INACTIVE
105747 / 200046,,000011          MOVE  TAC,DTNEXT(DEVDAT)     ;
105750 / 602000,,000100          TRNE      000100             ;;IS DIRECTORY BEING SUPPRESSED?
105751 / 254000,,060225          JRST      060225             ;;YES
105752 / 260140,,105637         PUSHJ  PDP,105637             ;;CHECK TO SEE IF DIRECTORY IN CORE
105753 / 661000,,000400           TLO      000400             ;;FLAG FREE BLOCK POINTER ALTERED
105754 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
105755 / 350046,,000014           AOS  TAC, UFREE(DEVDAT)     ;;GET FREE BLOCK POINTER
105756 / 506046,,000011          HRLM  TAC,DTNEXT(DEVDAT)     ;;SET NEXT BLOCK TO WRITE
105757 / 621040,,777777           TLZ  TAC,777777             ;
105760 / 254000,,060225          JRST      060225             ;;STORE TAC IN USER AREA
                       ;READ BLOCK NOS.
                       RDBN1:
105761 / 202040,,015772         MOVEM  TAC, DTTAC             ;
105762 / 250300,,016002          EXCH DEVDAT,016002             ;;RESET HUNG DEVICE TIME COUNT
105763 / 135040,,037610           LDB  TAC,037610             ;;TIME IN SECONDS
105764 / 137040,,037611           DPB  TAC,037611             ;;COUNT DOWN TO 0 BEFORE HUNG
105765 / 250300,,016002          EXCH DEVDAT, USVDB             ;
105766 / 720040,,000001         DATAI   DC,000001             ;;READ IN BLOCK NO. JUST READ
105767 / 405040,,007777          ANDI  TAC,007777             ;; FOR PDP-8 FORMAT TAPE, MASK OUT CRAP
105770 / 275060,,016004          SUBI  TAC,@016004            ;;COMPARE WITH DESIRED ONE
105771 / 322060,,016005         JUMPE  TAC,@016005            ;;IS IT EQUAL?
105772 / 370000,,016003           SOS      016003             ;;DECREMENT COUNT OF BLOCKS READ
105773 / 321040,,106004         JUMPL  TAC,106004             ;;NO,IS IT LESS THAN DESIRED?
105774 / 200040,,015773          MOVE  TAC,015773             ;;NO, UNIT NO.+DT CHANNEL
105775 / 721300,,010000         CONSZ  DTC,010000             ;;IS TAPE GOING BACKWARD?
105776 / 254000,,106002          JRST      BAKWRD             ;
105777 / 375000,,015775         SOSGE      015775             ;;ANOTHER REVERESAL
106000 / 254000,,106016          JRST      106016             ;;TOO MANY!
106001 / 435040,,002000          IORI  TAC,002000             ;;NO,ADD IN DELAY TO CHANGE DIRECTION
                       BAKWRD:
106002 / 721201,,330200          CONO  DTC,330200(TAC)        ;;MAKE TAPE GO BACKWARD
106003 / 254000,,106013          JRST        DXIT             ;
                       LOW:
106004 / 200040,,015773          MOVE  TAC,015773             ;;POSITION IS BEFORE DESIRED
106005 / 721340,,010000         CONSO  DTC,010000             ;;IS TAPE GOING FORWARD
106006 / 254000,,106012          JRST       ISLOW             ;
106007 / 375000,,015775         SOSGE      015775             ;;ANOTHER REVERSAL
106010 / 254000,,106016          JRST      106016             ;;TOO MANY!
106011 / 435040,,002000          IORI  TAC,002000             ;;NO, ADD IN DELAY TO CHANGE DIRECTION
                       ISLOW:
106012 / 721201,,320200          CONO  DTC,320200(TAC)        ;;MAKE TAPE GO FORWARD
                       DXIT:
106013 / 200040,,015772          MOVE  TAC, DTTAC             ;
106014 / 720200,,004011          CONO   DC,004011             ;;SET DATA CONTROL TO READ BLOCK NOS.
106015 / 254520,,016007           JEN      @  RDBN            ;
                       RBNLOS:
106016 / 720200,,000000          CONO   DC,                   ;;SHUT OFF DATA CONTROL
106017 / 700600,,001100          CONO   PI,001100             ;;TELL PI ABOUT SHUTTING OFF DECTAPE
106020 / 721201,,247000          CONO  DTC,247000(TAC)        ;;SELECT, TURN OFF, SET DELAY, INTERRUPT AT END
106021 / 201040,,000004         MOVEI  TAC,000004             ;;MAKE SURE THAT WE
106022 / 202040,,015777         MOVEM  TAC,015777             ;;DON'T TRY AGAIN
106023 / 201040,,000020         MOVEI  TAC,000020             ;;TURN ON A BIT
106024 / 436040,,000633          IORM  TAC,000633             ;;WHERE CH.4 GETS TO TEST IT
106025 / 476000,,015774         SETOM      015774             ;;MAKE SURE IT LOOKS LIKE AN ERROR!
106026 / 200040,,015772          MOVE  TAC,015772             ;;RESTORE TAC
106027 / 254520,,016007           JEN      @016007            ;;DISMISS
                       ;HERE WHEN BLOCK NO.FOUND FOR DUMP OUTPUT
                       DWRITE:
106030 / 200040,,015773          MOVE  TAC,015773             ;;UNIT+DT CHANNEL
106031 / 721300,,010000         CONSZ  DTC,010000             ;;TAPE GOING IN REVERSE?
106032 / 254000,,106002          JRST      106002             ;;YES, MAKE IT GO BACKWARD ONE MORE BLOCK
106033 / 720200,,003411          CONO   DC,003411             ;;SET DATA CONTROL TO WRITE ON DC CHANNEL
106034 / 721201,,360700          CONO  DTC,360700(TAC)        ;
151577 / 720100,,015765          BLKO   DC,BLKPTR             ;
106035 / 200040,,151577          MOVE  TAC,151577             ;;IO INSTR. FOR PI LOC
106036 / 254000,,106044          JRST       DEXIT             ;
                       ;HERE WHEN BLOCK NO. FOUND FOR DUMP INPUT
                       DREAD:
106037 / 200040,,015773          MOVE  TAC,015773             ;;UNIT + DT CHANNEL
106040 / 721300,,010000         CONSZ  DTC,010000             ;;GOING BACKWARDS?
106041 / 254000,,106002          JRST      106002             ;;YES, MAKE IT GO BACKWARD ONE MORE BLOCK.
106042 / 721201,,360300          CONO  DTC,360300(TAC)        ;;NO, SET TO READ(JOB DONE ENABLED)
151575 / 720000,,015765          BLKI   DC,BLKPTR             ;
106043 / 200040,,151575          MOVE  TAC,151575             ;
                       DEXIT:
106044 / 202060,,016023         MOVEM  TAC,@016023            ;;STORE BLKI/BLKO IN EVEN DC CHANNEL LOC.
106045 / 250300,,016002          EXCH DEVDAT,016002             ;;SET HUNG DEVICE COUNT TO 60 SECONDS
106046 / 201040,,000074         MOVEI  TAC,000074             ;;SINCE DUMP MODE CAN TAKE A LONG TIME
106047 / 137040,,037611           DPB  TAC,PDVCNT             ;
106050 / 250300,,016002          EXCH DEVDAT, USVDB             ;
106051 / 200040,,015766          MOVE  TAC,015766             ;;SETUP DUMP BLKI OR BLKO POINTER
106052 / 254000,,106103          JRST      BNEXIT             ;
                       ;HERE WHEN BLOCK NUMBER FOUND FOR BUFFERED WRITING
                       WRITE:
106053 / 720200,,003411          CONO   DC,003411             ;;SET DC FOR WRITING ON DC CHANNEL
106054 / 200040,,015773          MOVE  TAC,015773             ;;DT UNIT+DT CHANNEL
106055 / 721340,,010000         CONSO  DTC,010000             ;;GOING BACKWARD?
106056 / 254000,,106062          JRST      106062             ;;NO,WRITE FORWARD
106057 / 721201,,370700          CONO  DTC,370700(TAC)        ;;YES, SET TO WRTIE REVERSED
152763 / 264000,,016011           JSR        WTRV             ;
106060 / 200040,,152763          MOVE  TAC,152763             ;;PLACE TO GE FOR EVERY WORD
106061 / 254000,,106072          JRST      106072             ;;SET BLKPTR FOR REVERSE
                       WRFORW:
106062 / 721201,,360700          CONO  DTC,360700(TAC)        ;;WRITE FORWARD(JOB DONE ENABLED)
151577 / 720100,,015765          BLKO   DC,BLKPTR             ;
106063 / 200040,,151577          MOVE  TAC,151577             ;;BLKO POINTER FOR INTERRUPT LOCATION
106064 / 254000,,106100          JRST      106100             ;;SET BLKPTR FOR FORWARD
                       ;HERE WHEN BLOCK NUMBER FOUND FOR BUFFERED INPUT
                       READ:
106065 / 200040,,015773          MOVE  TAC,015773             ;;UNIT+UTC CHANNEL
106066 / 721340,,010000         CONSO  DTC,010000             ;;GOING BACKWARD?
106067 / 254000,,106076          JRST      106076             ;;NO,READ FORWARD
106070 / 721201,,370300          CONO  DTC,370300(TAC)        ;;YES, READ BACKWARD(JOB DONE ENB.)
152764 / 264000,,016013           JSR        RDRV             ;
106071 / 200040,,152764          MOVE  TAC,152764             ;;PLACE TO GO FOR EACH WORD
                       REVBLK:
106072 / 202060,,016023         MOVEM  TAC,@016023            ;;STORE JSR FOR REVERSE INTERRUPT ON EACH WORD
106073 / 200040,,015776          MOVE  TAC,015776             ;;ADDRESS OF BUFFER-1(SECOND WORD)
106074 / 271040,,000177          ADDI  TAC,000177             ;;LAST ADDRESS OF 200 WORD BUFFER
106075 / 254000,,106102          JRST      106102             ;;STORE BLKI/BLKO POINTER
                       RDFORW:
106076 / 721201,,360300          CONO  DTC,360300(TAC)        ;;READ FORWARD(JOB DONE ENABLED)
151575 / 720000,,015765          BLKI   DC,BLKPTR             ;
106077 / 200040,,151575          MOVE  TAC,151575             ;;BLKI POINTER
                       FORBLK:
106100 / 202060,,016023         MOVEM  TAC,@016023            ;;STORE BLKI/BLKO IN INTERRUPT LOC.
106101 / 200040,,015776          MOVE  TAC,015776             ;;ADDRESS OF BUFFER
                       BLKXIT:
106102 / 505040,,777600          HRLI  TAC,777600             ;;WORD COUNT FOR 1 BLOCK
                       BNEXIT:
106103 / 202040,,015765         MOVEM  TAC,015765             ;;SOTRE BLKI OR BLKO POINTER
106104 / 200040,,015772          MOVE  TAC,015772             ;;RESTORE TAC
106105 / 254520,,016007           JEN      @016007            ;;DISMISS DC CHANNEL INTERRUPT
                       ;WRITE 1 BLOCK IN REVERSE DIRECTION
                       WTRV1:
106106 / 720100,,015765          BLKO   DC,BLKPTR             ;
106107 / 264000,,016017           JSR       ENPT1             ;
106110 / 370000,,015765           SOS      BLKPTR             ;
106111 / 370000,,015765           SOS      BLKPTR             ;
106112 / 254520,,016011           JEN      @  WTRV            ;
                       ;READ 1 BLOCK IN REVERSE DIRECTION
                       RDRV1:
106113 / 720000,,015765          BLKI   DC,BLKPTR             ;
106114 / 264000,,016017           JSR       ENPT1             ;
106115 / 370000,,015765           SOS      BLKPTR             ;
106116 / 370000,,015765           SOS      BLKPTR             ;
106117 / 254520,,016013           JEN      @  RDRV            ;
                       ENPT0:
106120 / 264000,,016017           JSR       ENPT1             ;
106121 / 254520,,016015           JEN      @  ENPT            ;
                       ;END OF BLKI OR BLKO BUFFERED IO
                       ;OR END OF DUMP MODE COMAND LIST
                       ENPT2:
106122 / 720300,,010000         CONSZ   DC,010000             ;;DATA MISSED?
106123 / 476000,,015774         SETOM      015774             ;;YES,SET FLAG
106124 / 721340,,000400         CONSO  DTC,000400             ;;WRITING?
106125 / 720200,,000000          CONO   DC,                   ;;NO,READING TURN OFF DATA CONTROL
106126 / 700600,,001100          CONO   PI,001100             ;;TURN OFF DATA CONTROL CHANNEL
106127 / 254020,,016017          JRST      @ ENPT1            ;
                       ;END OF BLKI OR BLKO DUMP MODE READING OR WRITING
                       DMPA0:
106130 / 202040,,015772         MOVEM  TAC, DTTAC             ;
106131 / 354040,,015767          AOSA  TAC,DMPLST             ;
                       DMPA1:
106132 / 552040,,015767         HRRZM  TAC,DMPLST             ;
106133 / 336041,,000000         SKIPN  TAC,      (TAC)        ;
106134 / 254000,,106142          JRST       DMPA3             ;
106135 / 270040,,016001           ADD  TAC,016001             ;;ADD XWD 0,USER RELOCATION
106136 / 325040,,106132        JUMPGE  TAC, DMPA1             ;
106137 / 202040,,015765         MOVEM  TAC,015765             ;;SETUP DUMP MODE BLKI/BLKO POINTER
                       DMPA2:
106140 / 200040,,015772          MOVE  TAC, DTTAC             ;
106141 / 254520,,016021           JEN      @DMPADV            ;
                       DMPA3:
106142 / 264000,,016017           JSR       ENPT1             ;
106143 / 254000,,106140          JRST       DMPA2             ;
                       ;HERE ON INTERRUPTS ON DECTAPE CONTROL AFTER DATA TRANSMITTED
                       DTCINT:
106144 / 264000,,001011           JSR      001011             ;;SAVE REGISTERS.
106145 / 721340,,040000         CONSO  DTC,040000             ;;JOB DONE ENABLED
                       ;(IE, READ-WRITING DATA OR WAITING
                       ;FOR TIME FLAG)
106146 / 254000,,106263          JRST      106263             ;;NO,MUST BE READING BLOCK NOS.
106147 / 721340,,004000         CONSO  DTC,004000             ;;TIME FLAG ENABLED?
106150 / 254000,,106156          JRST      106156             ;;NO GO TURN OFF DATA CONTROL
106151 / 331000,,015775         SKIPL      015775             ;;BLOCK NUMBER TRIES EXHAUSTED?
106152 / 254000,,106274          JRST      106274             ;;NOPE, HONEST TIME FLAG ENABLING
106153 / 402000,,015775         SETZM      015775             ;;SO WE DON'T GO THIS WAY AGAIN
106154 / 201040,,000020         MOVEI  TAC,000020             ;;SHUT OFF BIT THAT RBNLOS SET
106155 / 412040,,000633        ANDCAM  TAC,000633             ;;SHUT OFF BIT
                       DCCONO:
106156 / 720200,,000000          CONO   DC,                   ;;NO,TURN OFF DATA CONTROL
106157 / 200300,,016002          MOVE DEVDAT,016002             ;;SETUP DEVICE DATA BLOCK ADDRESS
106160 / 200340,,016000          MOVE PROG,016000             ;;USER RELOC, AND PROTECTION
106161 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;;IO STATUS
106162 / 721760,,016006         CONSO  DTS,@016006            ;;ANY ERRORS?(16 FOR DUMP MODE)
106163 / 332000,,015774         SKIPE      015774             ;;NO,DATA CONTROL MISS DATA?
106164 / 254000,,106301          JRST      106301             ;;YES,REDO OPERATION
106165 / 623000,,000001          TLZE      000001             ;;NO, JOB IN IO WAIT?
106166 / 260140,,046107         PUSHJ  PDP,046107             ;;YES,SET JOB TO RUN AGAIN
106167 / 623000,,020000          TLZE      020000             ;;READING DIRECTORY?
106170 / 254000,,106216          JRST      106216             ;;YES
106171 / 607000,,000020          TLNN      000020             ;;NO,OUTPUT?
106172 / 254000,,106201          JRST      106201             ;;NO
106173 / 607000,,002000          TLNN      002000             ;;YES,OUTPUT DUMP MODE?
106174 / 260140,,044366         PUSHJ  PDP,044366             ;;NO,IS NEXT OUTPUT BUFFER NOT READY YET?
106175 / 254000,,106216          JRST      106216             ;;YES,STOP TAPE
106176 / 260140,,106255         PUSHJ  PDP,106255             ;;DECREMENT QUANTUM BLOCK COUNT.
                       ;FINISHED QUANTUM?
106177 / 254000,,105471          JRST      105471             ;;NO, GO OUTPUT NEXT BLOCK
106200 / 254000,,106216          JRST      106216             ;;YES, STOP TAPE AND LET OTHER USER HAVE IT
                       UIN1:
106201 / 603000,,004000          TLNE      004000             ;;INPUT DUMP MODE?
106202 / 254000,,106216          JRST      106216             ;;YES, STOP TAPE
106203 / 201066,,000007         MOVEI  TAC,@DEVIAD(DEVDAT)    ;;NO,GET ABS. ADR OF 
                       ;BUFFER JUST READ INTO
106204 / 554101,,000001          HLRZ TAC1,     1(TAC)        ;;GET LINK TO NEXT BLOCK
106205 / 542106,,000011          HRRM TAC1,DTNEXT(DEVDAT)     ;;STORE NEXT BLOCK TO READ
106206 / 326100,,106210         JUMPN TAC1,106210             ;;WAS THIS LAST BLOCK
106207 / 661000,,000040           TLO      000040             ;;YES,SET END OF FILE
106210 / 260140,,044454         PUSHJ  PDP,044454             ;;ADVANCE INPUT BUFFER
106211 / 254000,,106216          JRST      106216             ;;NOT EMPTIED BY USER YET,STOP TAPE
106212 / 603000,,000040          TLNE      000040             ;;WAS THIS LAST BLOCK?
106213 / 254000,,106216          JRST      106216             ;;YES, STOP TAPE
106214 / 260140,,106255         PUSHJ  PDP,106255             ;;NO, REDUCE QUANTUM BLOCK COUNT.
                       ;FINISHED QUANTUM?
106215 / 254000,,105536          JRST      105536             ;;NO, GO READ IN NEXT BLOCK
                       ;YES, STOP TAPE AND SCHEDULER WILL RUN WAITING JOB
                       ;STOP TAPE AND DESELECT THIS UNIT BEFORE GOING TO ANOTHER UNIT
                       DTC1:
106216 / 721340,,020000         CONSO  DTC,020000             ;;IS TAPE MOVING? I.E., AT INTERRUPT LEVEL?
106217 / 254000,,106245          JRST      106245             ;;NO.
106220 / 337040,,016003         SKIPG  TAC,016003             ;;RESTORE BLOCK COUNT
106221 / 201040,,000062         MOVEI  TAC,BLKQNT             ;
106222 / 506046,,000014          HRLM  TAC, UFREE(DEVDAT)     ;
106223 / 201040,,000004         MOVEI  TAC,000004             ;;DTC PI CHANNEL
106224 / 661000,,010000           TLO      010000             ;;REMEMBER DIRECTION, SET REVERSE BIT
106225 / 721340,,010000         CONSO  DTC,010000             ;;TAPE GOING FORWARDS?
106226 / 625000,,010000          TLZA      010000             ;;YES, CLEAR REVERSE BIT
106227 / 660040,,010000           TRO  TAC,010000             ;;NO, PRESERVE DIRECTION FOR STOP CONO
106230 / 201100,,000020         MOVEI TAC1,000020             ;;ENABLE SOFTWARE FOR TIME FLAG ONLY
106231 / 542100,,000633          HRRM TAC1,DTCCON             ;
106232 / 721201,,045000          CONO  DTC,045000(TAC)        ;;STOP TAPE AND ENABLE
                       ;TIME FLAG AND JOB DONE(AS A FLAG ONLY)
                       ;SO WONT THINK READING BLOCK NOS. AT
                       ;DTCINT+1 CONSO INSTRUCTION
                       DTC3:
106233 / 371000,,021656          SOSL      021656             ;;DECREMENT DATA CONTROL REQUEST COUNT
106234 / 476000,,021651         SETOM      DCAVAL             ;
106235 / 260140,,045242         PUSHJ  PDP,045242             ;;CLEAR DEVICE ACTIVE FLAG, STORE IOS
106236 / 135200,,037575           LDB ITEM, PJOBN             ;
106237 / 607300,,000100          TLNN DEVDAT,000100             ;;SYSTEM TAPE?
106240 / 263140,,000000          POPJ  PDP,                   ;;NO
106241 / 554044,,026114          HLRZ  TAC,JBTSTS(ITEM)       ;;YES
106242 / 606040,,200000          TRNN  TAC,200000             ;;DELAY ↑C?
106243 / 263140,,000000          POPJ  PDP,                   ;;NO
106244 / 254000,,065541          JRST      065541             ;;YES. RELEASE SYSTEM TAPE.
                       DTC2:
106245 / 260140,,106233         PUSHJ  PDP,106233             ;;FREE DC AND SYSTEM TAPE
106246 / 371000,,021655          SOSL       DTREQ             ;
106247 / 476000,,021650         SETOM      DTAVAL             ;
106250 / 720200,,000000          CONO   DC,                   ;
106251 / 700600,,001100          CONO   PI,DCTOFF             ;
106252 / 721200,,000000          CONO  DTC,                   ;
106253 / 513000,,000633         HLLZS      DTCCON             ;
106254 / 263140,,000000          POPJ  PDP,                   ;
                       ;CHECK BLKCNT. IF IT IS < 0 AND SOMEONE IS WAITING FOR THE
                       ;DATA CONTROL OR DECTAPE CONTROL, STOP THE TAPE.
                       ;CALL	PUSHJ PDP,CHKCNT
                       ;	CONTINUEα;	STOP TAPE
                       CHKCNT:
106255 / 373000,,016003         SOSLE      016003             ;;COUNT RUN OUT?
106256 / 263140,,000000          POPJ  PDP,                   ;;NO. CONTINUE
106257 / 336000,,021656         SKIPN      021656             ;;YES. IS SOMEONE WAITING FOR DATA CONTROL?
106260 / 332000,,021655         SKIPE      021655             ;;NO. DECTAPE CONTROL?
106261 / 350003,,000000           AOS            (PDP)        ;;YES. STOP TAPE.
106262 / 263140,,000000          POPJ  PDP,                   ;
                       ;INTERRUPT ON DT CHANNEL WHILE READING BLOCK NOS. ON DC CHANNEL
                       BN:
106263 / 721700,,000002         CONSZ  DTS,000002             ;;END OF TAPE FLAG?
106264 / 254000,,106266          JRST      106266             ;;YES,REVERSE DIRECTION
                       ;MUST BE AN ERROR FLAG OF SOME SORT.
106265 / 254000,,106156          JRST      106156             ;;YES, STOP TAPE
                       ENDZON:
106266 / 200040,,015773          MOVE  TAC,015773             ;;MUST BE READING BLOCK NOS.
106267 / 721340,,010000         CONSO  DTC,010000             ;;GOING BACKWARDS?
106270 / 435040,,010000          IORI  TAC,010000             ;;NO, MAKE IT GO BACKWARDS.
106271 / 721201,,322200          CONO  DTC,322200(TAC)        ;;KEEP READING BLOCK NOS.
106272 / 720200,,004011          CONO   DC,004011             ;;SET DC TO READ BLOCK NOS. AGAIN.
106273 / 263140,,000000          POPJ  PDP,                   ;
                       ;INTERRUPT FROM TIME FLAG AFTER STOP DEVICE
                       UTIME:
106274 / 371000,,021655          SOSL      021655             ;;YES, REDUCE DECTAPE CONTROL REQUEST COUNT
106275 / 476000,,021650         SETOM      021650             ;;SOME OTHER JOB WAITING, SET AVAILABLE FLAG
                       ;FOR SCHEDULER
106276 / 721200,,000000          CONO  DTC,                   ;;CLEAR CONTROL(AND UTS)
106277 / 513000,,000633         HLLZS      000633             ;;CLEAR CONSO UTS, FLAGS
106300 / 263140,,000000          POPJ  PDP,                   ;;DISMISS INTERRUPT.
                       ;HERE ON EACH OF 5 TYPES OF HARDWARE DETECTED ERRORS
                       ;EACH OPERATION CAUSING AN ERROR IS TRIED "DTTRY" TIMES AS
                       ;DEFINED ON THE CONFIGURATION
                       ;A "FATAL ERROR" IS ONE WHICH FAILS DTTRY TIMES IN A ROW
                       ;   THEN AND ONLY THEN THE IOS WORD IS SET APPROPRIATELY
                       ;   TO INDICATE TO THE USER THAT AN ERROR HAS OCCURRED
                       ;A RECORD OF ALL ERRORS(FATAL AND NON-FATAL) IS KEPT FOR
                       ;ALL DRIVES COMBINED
                       ;A RECORD OF EACH FATAL ERROR IS ALSO KEPT FOR EACH
                       ;DRIVE AS WELL AS FOR ALL DRIVES COMBINED
                       ;THE ERROR COUNT IS SPLIT INTO 5 FIELDS TO MAKE A TOTAL
                       ;IF 36 BITS:
                       ;THE 5 TYPES IF ERRORS ARE:
                       ;ERROR COUNT	;IOS BIT	;DESCRIPTION
                       ;OR MARK TRACK ERROR, BOTH DETECTED
                       ;WHILE READING BLOCK NOS.(IMPROPER MODE)
                       DTREDO:
106301 / 332040,,015774         SKIPE  TAC,015774             ;;CLEAR ERROR COUNT,DID DC MISS DATA?
106302 / 201040,,200001         MOVEI  TAC,200001             ;;YES, CLEAR TAC,SET DEVICE ERROR 
                       ;FLAG, ERROR COUNT POSITION
106303 / 721700,,000010         CONSZ  DTS,000010             ;;NO, PARITY ERROR?
106304 / 660040,,101000           TRO  TAC,101000             ;;YES, SET DATA ERROR FLAG+COUNT
106305 / 721700,,000100         CONSZ  DTS,000100             ;;NO, INCOMPLETE BLOCK?
151771 / 000001,,040000           XWD ECBKTL,IOBKTL           ;
106306 / 670040,,151771           TDO  TAC,151771             ;;YES, SET BLOCK TOO LARGE+COUNT
106307 / 721740,,000004         CONSO  DTS,000004             ;;NO, ILLEGAL OPERATION?
106310 / 254000,,106315          JRST      106315             ;;NO
106311 / 660040,,400000           TRO  TAC,400000             ;;YES, FLAG AS IMPROPER MODE
106312 / 721340,,040000         CONSO  DTC,040000             ;;READING BLOCK NOS.(JOB DONE NOT ENABLED)?
106313 / 665040,,000100          TLOA  TAC,000100             ;;YES, 2 UNITS MUST BE DIALED THE SAME
106314 / 661040,,010000           TLO  TAC,010000             ;;NO, MUST BE WRITE LOCKED
                       ERSTOP:
106315 / 200100,,000001          MOVE TAC1,000001             ;;INCREMENT ERROR COUNT
106316 / 620100,,740000           TRZ TAC1,740000             ;;CLEAR OUT IOS ERROR BITS
106317 / 272100,,015770          ADDM TAC1,015770             ;;ADD TO TOTAL ERROR COUNT FOR ALL UNITS
106320 / 350240,,015777           AOS  DAT,015777             ;;INCREMENT ERROR COUNT
106321 / 305240,,000004         CAIGE  DAT,000004             ;;EQUAL TO DTTRY YET?
106322 / 254000,,106342          JRST      106342             ;;NO, TRY AGAIN
106323 / 272100,,015771          ADDM TAC1,015771             ;;ADD TO TOTAL FATAL ERROR COUNT
106324 / 272106,,000012          ADDM TAC1, DTERR(DEVDAT)     ;;ADD TO FATAL COUNT FOR THIS UNIT
106325 / 620040,,001001           TRZ  TAC,001001             ;;CLEAR RH COUNT BITS
106326 / 602000,,400000          TRNE      400000             ;;HAS USER BEEN TOLD ABOUT BAD OPERATION?
106327 / 621000,,020000           TLZ      020000             ;;YES. CLEAR URDIR SO WILL RETURN TO USER
106330 / 660001,,000000           TRO            (TAC)        ;;SET ERROR BITS IN IO STATUS WORD
106331 / 623000,,000001          TLZE      000001             ;;JOB IN IO WAIT?
106332 / 260140,,046107         PUSHJ  PDP,046107             ;;YES, START JOB UP AGAIN
106333 / 627000,,020000          TLZN      020000             ;;DIRECTORY ERROR?
106334 / 254000,,106216          JRST      106216             ;;NO, STOP TAPE WITHOUT SETTING BUFFER USE BIT
106335 / 260140,,106216         PUSHJ  PDP,  DTC1             ;
                       DIRERR:
106336 / 205040,,400000         MOVSI  TAC,400000             ;;YES, CLEAR DIRECTORY IN CORE BIT
106337 / 412046,,000004        ANDCAM  TAC,DEVMOD(DEVDAT)     ;
106340 / 135200,,037575           LDB ITEM,037575             ;;LOAD JOB NUMBER INTO ITEM.
106341 / 254000,,043505          JRST      043505             ;;PRINT BAD DIRECTORY AND STOP JOB
                       DTRED1:
106342 / 135100,,037574           LDB TAC1,PIOMOD             ;
106343 / 305100,,000016         CAIGE TAC1,000016             ;;DUMP MODE?
106344 / 254000,,105550          JRST      105550             ;;NO
106345 / 602040,,300000          TRNE  TAC,300000             ;;YES. PARITY OR DATA MISSED?
106346 / 370000,,015767           SOS      015767             ;;YES. BACK UP POINTER
106347 / 254000,,105550          JRST      FILLER             ;
106350 /                 ;::    BEND STANFO.DTCSER.
106350 /               ;: DTCSER[J17,SYS] EOF.
106350 /               ;: MTCSER[J17,SYS]
106350 /                 ;::   BEGIN STANFO.MTCSER.
                       ;	25-JUL-68 FROM DEC MTCSR6 OF 7-MAY-68
                       ;STATUS BITS IN MTS.  * MEANS CAUSES INTERRUPT WHEN ENABLED.
                       ;NAMES ARE TAKEN FROM "MAGNETIC TAPE CONTROL 516 INSTRUCTION MANUAL" H-516
                       ;     WRITE OR WEF ON A WRITE-LOCKED TAPE
                       ;     BACKSPACE RECORD, BACKSPACE FILE, OR READ
                       ;	BACKWARDS WHILE AT BEGINNING OF TAPE
                       ;     ANY OPERATION ON A TRANSPORT BEING USED
                       ;	BY THE OTHER COMPUTER
                       ;MTC CONO BITS:
                       ;BITS 33-35	ARE PI CHANNEL ASSIGNMENT (=MTCCHN)
                       ;BITS 29-31	ARE UNIT SELECT, BYTE POINTER IS PUNIT
                       ;BIT 28		IS "DO NOT RETURN TO POOL" (NOT USED)
                       ;BITS 24-27	ARE "FUNCTION".  THEY ARE AS FOLLOWS:
                       ;			00=NO OPERATION (UNUSED)
                       ;			01=REWIND
                       ;			02=WRITE
                       ;			03=WRITE END-OF-FILE
                       ;			04=READ-COMPARE (NOT USED)
                       ;			05=READ
                       ;			06=SPACE FORWARD RECORD
                       ;			07=BACKSPACE RECORD
                       ;			10=NO OPERATION (NOT USED)
                       ;			11=REWIND AND UNLOAD (SAME AS REWIND AT STANFORD)
                       ;			12=READ ACROSS RECORD (NOT USED)
                       ;			13=WRITE THREE INCHES (APPROX) OF MAG TAPE
                       ;			14=WRITE WITH LONG EOR (NOT USED)
                       ;			15=READ BACKWARD (NOT USED)
                       ;			16=SPACE FORWARD FILE
                       ;			17=BACKSPACE FILE
                       ;BITS 22-23	SPECIFY DENSITY:
                       ;			0=200 BPI
                       ;			1=556 BPI
                       ;			2=800 BPI
                       ;			3=556 BPI
                       ;BIT 21		SPECIFIES PARITY
                       ;			0=EVEN
                       ;			1=ODD
                       ;BIT 20		SPECIFIES SLICE LEVEL
                       ;			0=HIGH (NORMAL)
                       ;			1=LOW
                       ;IS ATTEMPTED ON SAME UNIT. MUST BE SIGN BIT.
                       ;MAG TAPE SERVICE DISPATCH
106350 / 254000,,106651          JRST      106651             ;;INITIALIZATION
106351 / 254000,,037401          JRST      037401             ;;MTA HUNG TIMEOUT. RELEASE DATA CONTROL,
                       ;MAGTAPE CONTROL, PRINT ERROR AND STOP JOB
                       MTCDSP:
106352 / 254000,,046160          JRST      046160             ;;RELEASE - WAIT FOR IOACT TO BE OFF.
106353 / 254000,,106632          JRST      106632             ;;CLOSE OUTPUT
106354 / 254000,,106574          JRST      106574             ;;OUTPUT
106355 / 254000,,106564          JRST      106564             ;;INPUT
106356 / 254000,,037401          JRST      037401             ;;ENTER IN DIRECTORY
106357 / 254000,,037401          JRST      037401             ;;LOOKUP IN DIRECTORY
106360 / 254000,,107230          JRST      107230             ;;DUMP OUTPUT
106361 / 254000,,107261          JRST      107261             ;;DUMP INPUT
106362 / 263140,,000000          POPJ    P,                   ;;SETO
106363 / 263140,,000000          POPJ    P,                   ;;SETI
106364 / 263140,,000000          POPJ    P,                   ;;GETF
106365 / 254000,,037401          JRST      037401             ;;RENAME
106366 / 263140,,000000          POPJ    P,                   ;;CLOSE INPUT
106367 / 263140,,000000          POPJ    P,                   ;;UTPCLR
106370 / 254000,,106371          JRST      106371             ;;MTAPE UUO
                       ;	MTAPE UUO
                       ;THE FOLLOWING MTAPES ARE LEGAL:
                       MTAPEU:
106371 / 201200,,000001         MOVEI ITEM,000001             ;;CHECK FOR LEGAL MTAPE UUO
106372 / 242214,,000000           LSH ITEM,      (UUO)        ;;SHIFT BIT ACCORDING TO THE USER'S UUO
106373 / 606200,,145713          TRNN ITEM,145713             ;;DID HE SPECIFY A LEGAL CODE ?
106374 / 254000,,043340          JRST      043340             ;;NO--TYPE MONITOR ERROR MESSAGE.
106375 / 362200,,106525          SOJE ITEM,106525             ;;CHECK FOR MTAPE 0 (SPECIAL SYNC WAIT NO-OP)
106376 / 260140,,106471         PUSHJ    P,106471             ;;MAKE SURE SYSTEM IS AVAILABLE.
106377 / 620000,,776000           TRZ      776000             ;;CLEAR ERROR BITS: IOF, IOACT, IOBOT AND IOTEND.
106400 / 334200,,000014         SKIPA ITEM,000014             ;;CALL MTAPE2
                       MTAPE:
106401 / 260140,,106471         PUSHJ    P,106471             ;;CHECK IF MAG TAPE CONTROL AVAIL.
                       MTAPE2:
152157 / 014000,,010000           XWD IODT!IOSEOF,IOACT       ;
106402 / 630000,,152157           TDZ      152157             ;
106403 / 606200,,000040          TRNN ITEM,000040             ;;SET SLICE LEVEL THIS UUO?
106404 / 254000,,106410          JRST      106410             ;;NO
106405 / 621000,,020000           TLZ      020000             ;;YES, CLEAR LEVEL
106406 / 602200,,000020          TRNE ITEM,000020             ;;SET TO 1?
106407 / 661000,,020000           TLO      020000             ;;YES
                       NOSET:
106410 / 242200,,000010           LSH ITEM,000010             ;;MOVE CODE TO MT FUNCTION POSITION
106411 / 405200,,007400          ANDI ITEM,007400             ;;LEAVE ONLY THE FUNCTION BITS
106412 / 306200,,004000          CAIN ITEM,004000             ;;LOGICAL EOT?
106413 / 254000,,107214          JRST      107214             ;;YES.
106414 / 722740,,004000         CONSO  MTS,004000             ;;AT LOAD POINT?
106415 / 254000,,106423          JRST      106423             ;;NOT AT LOAD POINT.
106416 / 302200,,003400          CAIE ITEM,003400             ;;YES, BACKSPACE RECORD?
106417 / 306200,,000400          CAIN ITEM,000400             ;;NO, REW?
106420 / 254000,,107014          JRST      107014             ;;AVOID BACKWARDS MOTION WHEN AT LOAD POINT
106421 / 306200,,007400          CAIN ITEM,007400             ;;NO. BACKSPACE FILE?
106422 / 254000,,107014          JRST      107014             ;;YES. AVOID BACKWARDS MOTION FROM LOAD POINT.
                       MTGO1:
106423 / 135040,,037577           LDB  TAC,037577             ;;IN, OUT, MTAPE UUOS & INTERRUPT FOR NEXT RECORD
152243 / 000000,,000004                                       ;
152243 / 040300,,000004 POINT 3,00000004,31                   ;
106424 / 137040,,152243           DPB  TAC,152243             ;;FROM COMMAND IN ITEM. STORE UNIT NUMBER.
152304 / 000000,,000000                                       ;
152304 / 070300,,000000 POINT 3,00000000,28                   ;
106425 / 135040,,152304           LDB  TAC,152304             ;;DENSITY PARITY
106426 / 606040,,000007          TRNN  TAC,000007             ;;NO DENSITY OR PARITY SPECIFIED?
106427 / 435040,,000002          IORI  TAC,000002             ;;YES, USE STANDARD
106430 / 431040,,000005          XORI  TAC,000005             ;;ODD, 556
152373 / 000000,,000004                                       ;
152373 / 140300,,000004 POINT 3,00000004,23                   ;
106431 / 137040,,152373           DPB  TAC,152373             ;
106432 / 201044,,000004         MOVEI  TAC,MTCCHN(ITEM)       ;;ADD PI CHANNEL TO COMMAND
106433 / 603000,,020000          TLNE      020000             ;;SLICE LEVEL A 1?
106434 / 660040,,100000           TRO  TAC,100000             ;;YES, SET COMMAND.
106435 / 402000,,020146         SETZM      020146             ;;CLEAR EOF FLAG
106436 / 542300,,020147          HRRM  DDB, MTDEV             ;
106437 / 506040,,020147          HRLM  TAC,020147             ;;COMMAND,,DDB ADDRESS INTO MTDEV
106440 / 201100,,107005         MOVEI TAC1,107005             ;;ASSUME NON-DATA TRANSFER
106441 / 607000,,010000          TLNN      010000             ;;IS THIS A DATA TRANSFER OPERATION  REQUIRING DC?
106442 / 254000,,106447          JRST      106447             ;;NO, MUST BE SPACING OPERATION
106443 / 720220,,020160          CONO   DC,@020160            ;;YES, ATTACH DC TO MAGTAPE
106444 / 700600,,002100          CONO   PI,002100             ;;TURN DC PI CHANNEL ON
106445 / 402000,,020153         SETZM      020153             ;;CLEAR DATA MISSED FLAG
106446 / 201100,,106673         MOVEI TAC1,106673             ;;ON INTERRUPT, GO TO MTXNC
                       MTGO2:
106447 / 202100,,020161         MOVEM TAC1,020161             ;;STORE DISPATCH ADDRESS FOR INTERRUPT
106450 / 261140,,000001          PUSH    P,   TAC             ;
106451 / 260140,,045243         PUSHJ    P,STOIOS             ;
106452 / 262140,,000001           POP    P,   TAC             ;
106453 / 505040,,040000          HRLI  TAC,   XNC             ;
106454 / 700600,,000400          CONO   PI,000400             ;;DISABLE INTERRUPTS
106455 / 722201,,000000          CONO  MTC,      (TAC)        ;;ISSUE OPERATION TO CONTROLLER
106456 / 546040,,000635          HLRM  TAC,000635             ;;ENABLE SOFTWARE FOR XNC
106457 / 722600,,040000          CONO  MTS,040000             ;;ENABLE HARDWARE FOR XNC
106460 / 700600,,000200          CONO   PI,000200             ;;ENABLE INTERRUPTS
106461 / 263140,,000000          POPJ    P,                   ;;EXIT
                       ;IS SYSTEM AVAILABLE
                       MTCHEK:
106462 / 260140,,046055         PUSHJ    P,046055             ;;GET DATA AND MAG TAPE CONTROLS
106463 / 352000,,021657          AOSE      021657             ;;ARGUMENT
106464 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
106465 / 661000,,010000           TLO      010000             ;;FLAG DATA TRANSFER
106466 / 260140,,106477         PUSHJ    P,106477             ;;WAIT FOR REWIND
106467 / 254000,,106462          JRST      106462             ;;GET DC & MT AGAIN
106470 / 254000,,045233          JRST      045233             ;;SET DEV. ACTIVE BIT
                       MTCHK2:
106471 / 352000,,021657          AOSE      021657             ;;GET MAGTAPE CONTROL ONLY-SPACING OPERATION.
106472 / 260140,,046075         PUSHJ    P,MTWAIT             ;
106473 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
106474 / 260140,,106477         PUSHJ    P,106477             ;;CHECK STATUS
106475 / 254000,,106471          JRST      106471             ;;GET MT AGAIN
106476 / 263140,,000000          POPJ    P,                   ;
                       MTCHK4:
106477 / 661000,,040000           TLO      040000             ;;THIS JOB NOW HAS MTC
106500 / 623000,,000002          TLZE      000002             ;;FIRST OPERATION AFTER INIT 
106501 / 621000,,020000           TLZ      020000             ;;YES, SET SLICE LEVEL TO 0.
106502 / 621000,,400000           TLZ      400000             ;;CLEAR MAG TAPE REWINDING
106503 / 260140,,106546         PUSHJ    P,106546             ;;CHECK IF REWINDING?
106504 / 254000,,037401          JRST      037401             ;;NO - STATUS OK
106505 / 254000,,106522          JRST      106522             ;;QUERY STATUS
106506 / 260140,,106526         PUSHJ    P,106526             ;;REWINDING- DETACH MTC, DC AND TURN OFF IODT & HASMT
106507 / 661000,,400001           TLO      400001             ;;SET REWIND WAIT, IO WAIT
106510 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;STORE IOS
106511 / 357000,,020155          AOSG      020155             ;;ADD 1 TO REWIND WAIT COUNT SKIP IF CLREQ IN
106512 / 260140,,107071         PUSHJ    P,107071             ;;MAKE A CLOCK REQUEST. THIS IS ONLY UNIT REWINDING
106513 / 261140,,000004          PUSH    P,000004             ;;SAVE J
106514 / 135200,,037575           LDB    J,037575             ;;GET THE JOB NUMBER OF TAPE OWNER
106515 / 211640,,000005         MOVNI  AC1,000005             ;;REQUE THIS GUY
106516 / 202644,,020574         MOVEM  AC1,JOBQUE(J)          ;;TO IOWQ UNTIL MT REWINDS
106517 / 260140,,046027         PUSHJ    P,046027             ;;
106520 / 262140,,000004           POP    P,000004             ;;RESTORE J
106521 / 254000,,046124          JRST      046124             ;;WAIT...
                       QSTAT:
106522 / 260140,,106526         PUSHJ    P,106526             ;;DETACH MTC AND DC
106523 / 135200,,037575           LDB    J,037575             ;;LOAD UP JOB NUMBER
106524 / 254000,,043522          JRST      043522             ;;CHECK STATUS (PULL FINGERS OUT, ETC)
                       ;MTAPE 0 WAITS UNTIL THE CONTROL IS FREE
                       ;THUS MTAPE 0 PROVIDES THE ONLY WAY FOR A USER TO WAIT UNTIL A SPACING OPERATION
                       ; (I.E., SKIP, BACKSPACE, OR REWIND) IS COMPLETED.
                       MTP0:
106525 / 260140,,106471         PUSHJ  PDP,106471             ;;WAIT FOR CONTROL TO BECOME FREE,
                       ; THEN GIVE IT BACK IMMEDIATELY,
                       ; AND RETURN TO THE USER.
                       ;DETMDC-
                       ;	DETACH MTC, AND TURN OFF HASMT.
                       ;	THEN (IFF IODT ON)
                       ;	TURN OFF IODT AND DETACH DC
                       DETMDC:
106526 / 627000,,040000          TLZN      040000             ;;THIS JOB HAS MTC?
106527 / 254000,,045243          JRST      045243             ;;NO
106530 / 371000,,021657          SOSL      021657             ;;YES- ANYONE ELSE WAITING FOR IT?
106531 / 476000,,021652         SETOM      021652             ;;YES- FLAG AS JUST BECOME AVAILABLE
                       DETDC:
106532 / 627000,,010000          TLZN      010000             ;;DOES JOB HAVE DATA CONTROL?
106533 / 254000,,045243          JRST      045243             ;;NO- EXIT
106534 / 371000,,021656          SOSL      021656             ;;ANYONE ELSE WAITING FOR IT?
106535 / 476000,,021651         SETOM      021651             ;;YES- FLAG AS JUST BECOME AVAILABLE
106536 / 254000,,045243          JRST      045243             ;;AND EXIT
                       MTHUNG:
106537 / 607000,,040000          TLNN       HASMT             ;
106540 / 263140,,000000          POPJ    P,                   ;;HOW DID WE GET HERE IF HE DIDN'T HAVE IT?
106541 / 722600,,400000          CONO  MTS,400000             ;;FLUSH CURRENT COMMAND
106542 / 722200,,000000          CONO  MTC,                   ;;GRONK DELAYS
106543 / 603000,,010000          TLNE      010000             ;;DOES HE HAVE THE DATA CONTROL?
106544 / 720200,,000000          CONO   DC,                   ;;HOLD DATA CONTROL
106545 / 254000,,106526          JRST      106526             ;;DEATCH EVERYTHING.
                       ;ROUTINE TO SEE IF UNIT IS REWINDING
                       ;CALL	MOVE DEVDAT,ADDRESS OF DDB
                       ;	PUSHJ PDP,REWCK
                       ;	UNIT READY
                       ;	UNIT OFF
                       ;	UNIT REWINDING
                       REWCK:
106546 / 135040,,037577           LDB  TAC, PUNIT             ;
106547 / 241040,,000004           ROT  TAC,     4             ;
106550 / 722201,,000004          CONO  MTC,MTCCHN(TAC)        ;
106551 / 722600,,000002          CONO  MTS,000002             ;;JAM UNIT INTO COMMAND BUFFER
106552 / 722700,,020000         CONSZ  MTS,020000             ;;SKIP IF REWIND MOTION OFF
106553 / 254000,,037400          JRST      037400             ;;RETURN TO CALL+2 IF TAPE REWINDING
106554 / 722740,,001000         CONSO  MTS,001000             ;;OTHER COMPUTER USING TRANSPORT, OR IN LOCAL?
106555 / 722740,,000002         CONSO  MTS,000002             ;;IS UNIT READY?
106556 / 254000,,037401          JRST      037401             ;;UNIT UNREADY OR UNAVAILABLE
106557 / 722700,,004000         CONSZ  MTS,004000             ;;UNIT READY AND AVAILABLE IS IT AT LOAD POINT?
106560 / 435000,,004000          IORI      004000             ;;YES.
106561 / 722700,,010000         CONSZ  MTS,010000             ;;END POINT?
106562 / 435000,,002000          IORI      002000             ;;YES.
106563 / 263140,,000000          POPJ  PDP,                   ;;UNIT HAPPY. DIRECT RETURN
                       ;READ AND WRITE
                       MTIN:
106564 / 260140,,106462         PUSHJ    P,106462             ;;IS SYSTEM AVAILABLE?
106565 / 621000,,000020           TLZ      000020             ;;READING.
                       MTIN1:
106566 / 460066,,000007         SETCM  TAC,@DEVIAD(DDB)       ;;-SIZE-1
106567 / 541066,,000007          HRRI  TAC,@DEVIAD(DDB)       ;;BUFFER ADDRESS,PROG INCLUDED
151773 / 000002,,000001           XWD 2,1                     ;
106570 / 270040,,151773           ADD  TAC,151773             ;;-SIZE+1,BUFFER+1
106571 / 201200,,002400         MOVEI ITEM,002400             ;;READ
151574 / 000000,,000020                                       ;
151574 / 720000,,004021          BLKI   DC,004021             ;
106572 / 200100,,151574          MOVE TAC1,151574             ;
106573 / 254000,,106607          JRST      MTINDC             ;
                       MTOUT:
106574 / 260140,,106462         PUSHJ    P,MTCHEK             ;
106575 / 661000,,000020           TLO      000020             ;;WRITING
106576 / 722700,,000200         CONSZ  MTS,000200             ;;IS FILE PROTECT RING IN?
106577 / 254000,,106621          JRST      106621             ;;NO, ERROR CANT WRITE. CROCK!!
                       MTOUT1:
106600 / 201066,,000010         MOVEI  TAC,@DEVOAD(DDB)       ;;BUFFER ADDRESS, PROG INCLUDED
106601 / 210101,,000001          MOVN TAC1,     1(TAC)        ;;-WD COUNT
106602 / 322100,,106623         JUMPE TAC1,106623             ;;IF WC=0, DONT DO ANYTHING
106603 / 504040,,000002           HRL  TAC,000002             ;;-WD CMT,BUFFER
106604 / 271040,,000001          ADDI  TAC,000001             ;;BUFFER+1
151576 / 000000,,000020                                       ;
151576 / 720100,,003421          BLKO   DC,003421             ;
106605 / 200100,,151576          MOVE TAC1,151576             ;
106606 / 201200,,001000         MOVEI ITEM,001000             ;;WRITE
                       MTINDC:
106607 / 700600,,001100          CONO   PI,001100             ;;TURN DATA CONTROL PI CHANNEL OFF
106610 / 202040,,020150         MOVEM  TAC,020150             ;;BLKO POINTER
106611 / 202040,,020151         MOVEM  TAC, DCWRD             ;
106612 / 552100,,020160         HRRZM TAC1,020160             ;;SAVE DC COMMAND
106613 / 541100,,020151          HRRI TAC1, DCWRD             ;
106614 / 202120,,016023         MOVEM TAC1,@016023            ;;BLK COMMAND
152767 / 264000,,020162           JSR      MTDCND             ;
106615 / 200100,,152767          MOVE TAC1,152767             ;
106616 / 202120,,016024         MOVEM TAC1,@DCLOC1            ;
106617 / 435000,,010000          IORI      010000             ;;SET IOACT
106620 / 254000,,106423          JRST      106423             ;;GO START OPERATION
                       MTOUTE:
106621 / 660000,,400000           TRO      400000             ;;WRITE LOCK, DEVICE ERROR
106622 / 254000,,106625          JRST      106625             ;;DETACH DATA CONTROL AND MAG TAPE. RETURN TO UUOCON
                       MTNOPO:
106623 / 260140,,044366         PUSHJ    P,044366             ;;ADVANCE OVER THE EMPTY BUFFER
106624 / 255000,,000000          JFCL                         ;
                       MTNOP1:
106625 / 260140,,107057         PUSHJ    P,107057             ;;JUST IN CASE
106626 / 623000,,000001          TLZE      000001             ;;UNWAIT THE JOB
106627 / 260140,,046107         PUSHJ    P,SETIOD             ;
106630 / 260140,,045242         PUSHJ    P,CLRACT             ;
106631 / 254000,,106526          JRST      106526             ;;DETACH EVERYTHING AND RETURN
                       ;CLOSE OUTPUT
                       MTCLSO:
106632 / 607300,,004000          TLNN  DDB,004000             ;;HAS AN OUTPUT BEEN DONE?
106633 / 263140,,000000          POPJ    P,                   ;;NO. DONT WRITE ON TAPE.
106634 / 135040,,037574           LDB  TAC,037574             ;;DUMP MODE?
106635 / 305040,,000016         CAIGE  TAC,    DR             ;
106636 / 260140,,065347         PUSHJ    P,065347             ;;BUFFERED MODE: OUTPUT LAST PARTIAL BUFFER
106637 / 260140,,046176         PUSHJ    P,046176             ;;WAIT FOR OUTPUT TO FINISH
106640 / 261140,,000004          PUSH    P,000004             ;;DON'T CLOBBER J!!!
106641 / 201200,,000003         MOVEI ITEM,000003             ;;WRITE EOF
106642 / 260140,,106401         PUSHJ    P, MTAPE             ;
106643 / 201200,,000003         MOVEI ITEM,000003             ;;WRITE EOF
106644 / 260140,,106401         PUSHJ    P, MTAPE             ;
106645 / 201200,,000007         MOVEI ITEM,000007             ;;BSP
106646 / 260140,,106401         PUSHJ    P, MTAPE             ;
106647 / 262140,,000004           POP    P,000004             ;;RESTORE J
106650 / 263140,,000000          POPJ    P,                   ;
                       MTCINI:
106651 / 476000,,020155         SETOM      020155             ;;SET CLOCK REQUEST COUNT TO -1
106652 / 201040,,000042         MOVEI  TAC,000042             ;
106653 / 700300,,000040         CONSZ  APR,000040             ;; MA TRAP OFFSET?
106654 / 271040,,000100          ADDI  TAC,000100             ;; YES, OFFSET ADDRESS
106655 / 202040,,016023         MOVEM  TAC, DCLOC             ;
106656 / 271040,,000001          ADDI  TAC,     1             ;
106657 / 202040,,016024         MOVEM  TAC,DCLOC1             ;
106660 / 254000,,107021          JRST      MTNIO1             ;
                       ;BLK COUNTED OUT
                       MTDCN1:
106661 / 700600,,001100          CONO   PI,001100             ;;SHUT OFF DC CHANNEL
106662 / 720300,,010000         CONSZ   DC,010000             ;;DATA MISSED?
106663 / 476000,,020153         SETOM      020153             ;;YES. OOPS
106664 / 254520,,020162           JEN      @020162            ;;DISMISS INTERRUPT.
                       ;INTERRUPTS FROM MAG TAPE CONTROL ARE SENT HERE FROM IOINIT
                       MTCINT:
106665 / 264000,,001011           JSR      001011             ;;SAVE AC'S
106666 / 550300,,020147          HRRZ  DDB,020147             ;;SET UP DDB POINTER
106667 / 135340,,037575           LDB PROG,037575             ;;JOB NUMBER
106670 / 200347,,027120          MOVE PROG,JBTADR(PROG)       ;
106671 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
106672 / 254020,,020161          JRST      @020161            ;;DISPATCH TO WHOEVER WANTS INTERRUPT.
                       ;HERE ON FIRST INTERRUPT FROM DATA TRANSFER OPERATION (XNC)
                       MTXNC:
106673 / 201040,,000004         MOVEI  TAC,000004             ;;ENABLE SOFTWARE FOR ERF
106674 / 542040,,000635          HRRM  TAC,MTCCON             ;
106675 / 201040,,106701         MOVEI  TAC,106701             ;;SET DISPATCH ADDRESS TO MTEOR
106676 / 202040,,020161         MOVEM  TAC,MTIDSP             ;
106677 / 722600,,000004          CONO  MTS,000004             ;;ENABLE HARDWARE FOR ERF
106700 / 263140,,000000          POPJ    P,                   ;;DISMISS INTERRUPT
                       ;HERE ON ERF INTERRUPT FROM DATA TRANSFER OPERATION
                       MTEOR:
106701 / 700600,,001100          CONO   PI,001100             ;;TURN OFF DC IN CASE BLKI/BLKO DIDNT OVERFLOW
106702 / 720300,,010000         CONSZ   DC,010000             ;;DATA MISS?
106703 / 476000,,020153         SETOM      020153             ;;YES.
106704 / 722700,,000400         CONSZ  MTS,000400             ;;END-OF-FILE?
106705 / 476000,,020146         SETOM      020146             ;;YES. SET FLAG
106706 / 200200,,020151          MOVE ITEM,020151             ;;GET THE IOWD
106707 / 603000,,000020          TLNE      000020             ;;SKIP IF INPUT
106710 / 607200,,777777          TLNN ITEM,777777             ;;OUTPUT. SKIP IF WORDS REMAIN IN THE IOWD
106711 / 254000,,106714          JRST      106714             ;;INPUT OR IOWD EXHAUSTED.
106712 / 476000,,020153         SETOM      020153             ;;SET DATA MISSED. - OUTPUT FAILED TO EXHAUST IOWD
106713 / 254000,,107114          JRST      107114             ;;ERROR.
                       MTEOR0:
106714 / 720340,,160000         CONSO   DC,160000             ;;DATA REMAINING IN DC?
106715 / 254000,,106734          JRST      106734             ;;NO.
106716 / 607000,,000020          TLNN      000020             ;;OUTPUT?
106717 / 332000,,020153         SKIPE      020153             ;;NO.  DATA MISSED?
106720 / 254000,,107114          JRST      107114             ;;YES.  ERROR.
106721 / 720240,,000002          CONI   DC,000002             ;;FETCH DC STATUS BITS
106722 / 242100,,777763           LSH TAC1,777763             ;;SHIFT CHARACTER COUNT TO LSBITS
106723 / 221100,,777772         IMULI TAC1,777772             ;;-NO OF BITS TOO FAR RIGHT
106724 / 720220,,020160          CONO   DC,@020160            ;;?? IF DON SAYS SO, WELL, OK (JUST)
106725 / 720040,,000001         DATAI   DC,000001             ;;FETCH LAST PART-WORD OF DATA
106726 / 242042,,000044           LSH  TAC,    44(TAC1)       ;;SHIFT LAST CHARACTERS TO LEFT END
106727 / 327200,,106734         JUMPG ITEM,MTEOR1             ;
106730 / 253200,,106731         AOBJN ITEM,106731             ;;BUMP DATA POINTER
106731 / 202044,,000000         MOVEM  TAC,      (ITEM)       ;;STORE LAST WORD
106732 / 202200,,020151         MOVEM ITEM,020151             ;;LET LOSER SEE LAST WORD, PLS! (DWP 3 MAY 71)
106733 / 720200,,000000          CONO   DC,                   ;;SHUT DOWN DC.
                       MTEOR1:
106734 / 722700,,400130         CONSZ  MTS,400130             ;
                       ;IF END OF RECORD, CHECK
                       ;PARITY,DATA MISSED,  AND ILLEGAL FLAG
106735 / 254000,,107114          JRST      107114             ;;IF ERROR CAUSE INTERRUPT TO
                       ;ERROR ROUTIE VIA ICR
                       MTPDUN:
106736 / 350006,,000012           AOS      MTCBKN(DDB)        ;;COUNT NR. OF BLOCKS READ OR WRITTEN FOR THIS DRIVE
106737 / 135040,,037574           LDB  TAC,PIOMOD             ;
106740 / 301040,,000016          CAIL  TAC,    DR             ;
106741 / 254000,,106760          JRST      106760             ;;DUMP
106742 / 603000,,000020          TLNE          IO             ;
106743 / 254000,,107077          JRST      107077             ;;WRITING
106744 / 332000,,020146         SKIPE      020146             ;;NOT EOF?
106745 / 254000,,106772          JRST       MTEOF             ;
106746 / 201066,,000007         MOVEI  TAC,@DEVIAD(DDB)       ;;BUFFER ADDRESS
106747 / 322040,,106774         JUMPE  TAC,106774             ;;JUMP IF RELEASE HAS WIPED OUT BUFFERS
106750 / 210100,,020150          MOVN TAC1,020150             ;;WD CNT-1
106751 / 253100,,106752         AOBJN TAC1,106752             ;;WD CNT
106752 / 510100,,000002          HLLZ TAC1,000002             ;;CLR RT HALF
106753 / 270100,,020151           ADD TAC1,020151             ;;ADD CURRENT COUNT=NO. OF WDS
106754 / 546101,,000001          HLRM TAC1,     1(TAC)        ;;STORE AT WORD COUNT
106755 / 260140,,044454         PUSHJ    P,ADVBFF             ;
106756 / 254000,,106774          JRST      106774             ;;NEXT BUFFER FULL
106757 / 254000,,107101          JRST      107101             ;;CONTINUE MODE
                       DMPDUN:
106760 / 607000,,000020          TLNN      000020             ;;INPUT OR OUTPUT?
106761 / 336000,,020146         SKIPN      020146             ;;ONLY CHECK EOF ON INPUT
106762 / 334000,,000000         SKIPA                         ;
106763 / 660000,,020000           TRO      020000             ;;INPUT+EOF
106764 / 402000,,020146         SETZM      020146             ;;RESET EOF FLAG IN CASE SET.
106765 / 260140,,107057         PUSHJ  PDP,107057             ;;CHECK FOR EOT
106766 / 350040,,020156           AOS  TAC,020156             ;;NEXT ITEM IN COMMAND LIST.
106767 / 607000,,000020          TLNN      000020             ;;READING OR WRITING?
106770 / 254000,,107275          JRST      107275             ;;READING
106771 / 254000,,107302          JRST      107302             ;;WRITING.
                       MTEOF:
106772 / 661000,,000040           TLO       IOEND             ;
106773 / 402000,,020146         SETZM      020146             ;;CLEAR EOF FLAG
                       ;AND FALL INTO MTEND1
                       MTEND1:
106774 / 720200,,000000          CONO   DC,                   ;;TURN OFF DATA CONTROL
106775 / 700600,,001100          CONO   PI,DCTOFF             ;
106776 / 260140,,106532         PUSHJ    P,106532             ;;DETACH DC (IF ASSIGNED)
106777 / 260140,,107057         PUSHJ    P,107057             ;;CHECK FOR END OF TAPE (FOR DUMP MODE OUT)
107000 / 260140,,045242         PUSHJ    P,045242             ;;CLEAR IOACT, STORE IOS
107001 / 201040,,107014         MOVEI  TAC,107014             ;;SET DISPATCH ADDRESS TO MTFIN
107002 / 202040,,020161         MOVEM  TAC,MTIDSP             ;
107003 / 552300,,020147         HRRZM  DDB,020147             ;;STORE DDB ADDTRESS (DUMP MODE)
107004 / 254000,,107200          JRST      107200             ;;RETURN WHEN ICR
                       ;HERE ON XNC INTERRUPT FROM NON-DATA TRANSFER.
                       MTNIO2:
107005 / 260140,,107177         PUSHJ    P,107177             ;;RETURN WHEN ICR
107006 / 554040,,020147          HLRZ  TAC,020147             ;;COMMAND
107007 / 405040,,007400          ANDI  TAC, 17B27             ;
107010 / 302040,,003000          CAIE  TAC,003000             ;;NO. SPACING ONE RECORD?
107011 / 254000,,107014          JRST      107014             ;;YES, EXIT
107012 / 722700,,000400         CONSZ  MTS,000400             ;;EOF?
152133 / 004000,,020000           XWD IOSEOF,IODEND           ;
107013 / 670000,,152133           TDO      152133             ;
                       MTFIN:
                       MTNIO:
107014 / 623000,,000001          TLZE      000001             ;;CLEAR WAIT
107015 / 260140,,046107         PUSHJ    P,SETIOD             ;
107016 / 260140,,106526         PUSHJ    P,106526             ;;DETACH MTC (IF HASMT SET) AND DC (IF IODT)
107017 / 260140,,107057         PUSHJ    P,107057             ;;CHECK FOR END OF TAPE
107020 / 260140,,045242         PUSHJ    P,045242             ;;RESTORE BITS,CLEAR IOACT
                       ;AND FALL INTO MTNIO1
                       MTNIO1:
107021 / 722600,,000000          CONO  MTS,                   ;;CLEAR MAG TAPE ENABLES.
107022 / 722200,,000004          CONO  MTC,000004             ;;CLEAR MAG TAPE CONTROL.
107023 / 513000,,000635         HLLZS      000635             ;;CLEAR THE INTERRUPT MASK BITS.
107024 / 211040,,000012         MOVNI  TAC,000012             ;;REPEAT COUNTER
107025 / 202040,,020154         MOVEM  TAC,MTERCN             ;
107026 / 335000,,020155        SKIPGE      020155             ;;SOME OTHER UNIT REWINDING WITH A COMMAND HELD UP?
107027 / 263140,,000000          POPJ    P,                   ;;NO, DISMISS INTERRUPT
                       ;SOME UNIT IS REWINDING AND HAS HAD ANOTHER COMMAND HELD UP.
                       ;CHECK ALL UNITS
                       MTREWW:
107030 / 476000,,020155         SETOM      020155             ;;SET COUNT TO NO. UNITS IN REW WAIT
107031 / 261140,,000006          PUSH    P,   DDB             ;
107032 / 201300,,020133         MOVEI  DDB,020133             ;;GET BEGINNING OF MT DATA BLOCK CHAIN
                       REWLP:
107033 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
107034 / 325000,,107050        JUMPGE      107050             ;;IS UNIT IN A REW WAIT?
107035 / 260140,,106546         PUSHJ  PDP,106546             ;;YES,SEE IF FINISHED REW.
107036 / 254000,,107041          JRST      107041             ;;HAS FINISHED REWINDING
107037 / 254000,,107041          JRST      107041             ;;OFF- WAKE JOB AND LET HIM LOSE.
107040 / 254000,,107046          JRST      107046             ;;STILL REWINDING
151325 / 400000,,010000           XWD IOREW,IOACT             ;
107041 / 630000,,151325           TDZ      151325             ;;GET JOB OUT OF IO WAIT
107042 / 623000,,000001          TLZE         IOW             ;
107043 / 260140,,046107         PUSHJ    P,046107             ;;START JOB UP AGAIN
107044 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
107045 / 254000,,107050          JRST        REW2             ;
                       REW0:
107046 / 260140,,045243         PUSHJ    P,045243             ;;RESET HUNG COUNT IF STILL REWINDING
                       REW1:
107047 / 350000,,020155           AOS      020155             ;;INCREMENT COUNT OF REW WAIT UNITS
                       REW2:
107050 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;;LINK TO NEXT DDB
107051 / 322300,,107055         JUMPE  DDB,107055             ;;LAST DDB?
107052 / 554246,,000000          HLRZ  DAT,      (DDB)        ;;NO. GET LH OF NAME.
107053 / 306240,,556441          CAIN  DAT,556441             ;;IS THIS A MAGTAPE?
107054 / 254000,,107033          JRST      107033             ;;YES. CONTINUE
                       REW3:
107055 / 262140,,000006           POP    P,   DDB             ;
107056 / 263140,,000000          POPJ    P,                   ;;YES, DISMISS INTERRUPT OR RETURN TO MTCLOK
                       ETCHK:
107057 / 722700,,010000         CONSZ  MTS,010000             ;;EOT SEEN?
107060 / 435000,,402000          IORI      402000             ;;YES- SET FLAGS	;THIS IS A CROCK!
151324 / 400000,,004000           XWD IOREW,IOBOT             ;
107061 / 630000,,151324           TDZ      151324             ;;NO LONGER REWINDING
107062 / 722700,,024000         CONSZ  MTS,024000             ;;UNLESS
107063 / 660000,,004000           TRO      004000             ;;IS REALLY REWINDING
107064 / 263140,,000000          POPJ    P,                   ;;EXIT
                       ;ROUTINE CALLED AT CLOCK LEVEL TO SEE IF ANY UNITS WHICH ARE IN A
                       ;REW WAIT HAVE FINISHED REWIND.
                       MTCLOK:
107065 / 335000,,021657        SKIPGE      021657             ;;IS ANY JOB USING ANY UNIT NOW?
107066 / 260140,,107030         PUSHJ    P,107030             ;;NO, CHECK ALL MAG TAPE
                       ;UNITS TO SEE IF JUST FINISHED
                       ;REWINDING(WHICH WERE IN REW WAIT)
107067 / 335000,,020155        SKIPGE      020155             ;;YES,ARE ANY UNITS STILL IN REW WAIT?
107070 / 263140,,000000          POPJ    P,                   ;;NO, RETURN TO CLOCK ROUTINE WITHOUT
                       ;PUTTING IN CLOCK REQUEST
                       ;ROUTINE TO PUT IN A CLOCK REQUEST
                       MTCLK:
107071 / 201100,,000036         MOVEI TAC1,000036             ;;CHECK EVERY HALF SECOND
107072 / 505100,,107065          HRLI TAC1,107065             ;;DISPATCH ADDRESS
107073 / 700600,,000400          CONO   PI,000400             ;;TURN OFF PI
107074 / 136100,,024117          IDPB TAC1,024117             ;;STORE CLOCK REQUEST
107075 / 700600,,000200          CONO   PI,000200             ;;TURN ON PI
107076 / 263140,,000000          POPJ    P,                   ;
                       MTNOTI:
107077 / 260140,,044366         PUSHJ    P,044366             ;;WRITING
107100 / 254000,,106774          JRST      MTEND1             ;
                       MTCONN:
107101 / 722700,,011000         CONSZ  MTS,011000             ;;END OF TAPE OR IN LOCAL?
107102 / 254000,,106774          JRST      106774             ;;STOP TAPE
107103 / 720200,,000000          CONO   DC,                   ;;CLEAR DATA CONTROL
107104 / 623000,,000001          TLZE         IOW             ;
107105 / 260140,,046107         PUSHJ    P,SETIOD             ;
107106 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
107107 / 211040,,000012         MOVNI  TAC,MTREDO             ;
107110 / 202040,,020154         MOVEM  TAC,MTERCN             ;
107111 / 607000,,000020          TLNN      000020             ;;INPUT OR OUTPUT?
107112 / 254000,,106566          JRST      106566             ;;CALL INPUT SUBROUTINE
107113 / 254000,,106600          JRST      106600             ;;CALL OUTPUT SUBROUTINE
                       MTEOR2:
107114 / 332000,,020146         SKIPE      020146             ;;END-OF-FILE?
107115 / 254000,,106736          JRST      106736             ;;YES. IGNORE ERRORS.
                       MTERR:
107116 / 201200,,000000         MOVEI ITEM,                   ;
107117 / 722700,,000020         CONSZ  MTS,000020             ;;LONGITUDINAL PARITY ERROR?
107120 / 661200,,001000           TLO ITEM,001000             ;;YES, COUNT IN QUARTER 1
107121 / 722700,,000010         CONSZ  MTS,000010             ;;LATERAL PARITY ERROR?
107122 / 661200,,000001           TLO ITEM,000001             ;;YES, COUNT IN QUARTER 2
107123 / 722700,,400000         CONSZ  MTS,400000             ;;ILLEGAL OP?
107124 / 660200,,001000           TRO ITEM,001000             ;;YES, COUNT IN QUARTER 3
107125 / 332000,,020153         SKIPE      020153             ;;DATA MISSED?
107126 / 660200,,000001           TRO ITEM,000001             ;;YES, COUNT IN QUARTER 4
107127 / 272206,,000011          ADDM ITEM,MTCENT(DEVDAT)     ;;ADD TO ERROR COUNTS FOR THIS DRIVE
107130 / 602000,,000100          TRNE      000100             ;;DOES USER WANT TO SUPPRESS ERROR HANDLING?
107131 / 254000,,107152          JRST      107152             ;;YES, GIVE HIM HIS ERROR BITS
107132 / 260140,,107177         PUSHJ    P,107177             ;;RETURN ON ICR
107133 / 351000,,020154          AOSL      020154             ;;ENOUGH ERRORS?
107134 / 254000,,107150          JRST      107150             ;;YES.
107135 / 554040,,020147          HLRZ  TAC,020147             ;;COMMAND
107136 / 421040,,007400        ANDCMI  TAC, 17B27             ;
107137 / 201041,,003400         MOVEI  TAC,  7B27(TAC)        ;;BSP
107140 / 260140,,107204         PUSHJ    P,107204             ;;INITIATE THE OPERATION
107141 / 260140,,107177         PUSHJ    P,107177             ;;RETURN WHEN OPERATION COMPLETE.
                       ;COME HERE AFTER ERROR BACKSPACE OR WRITE BLANK TAPE
                       ;TO RE-ISSUE THE READ OR WRITE COMMAND.
                       MRETRY:
107142 / 135040,,037574           LDB  TAC,037574             ;;GET MODE.
107143 / 301040,,000016          CAIL  TAC,000016             ;;DUMP MODE?
107144 / 254000,,107325          JRST      107325             ;;YES.
107145 / 603000,,000020          TLNE      000020             ;;INPUT OR OUTPUT?
107146 / 254000,,106600          JRST      106600             ;;OUTPUT
107147 / 254000,,106566          JRST      106566             ;;INPUT
                       ;COME HERE AFTER ENOUGH RETRIES.  ASSUME ERROR
                       ;IS PERMANENT.
                       MTERR2:
107150 / 603000,,000020          TLNE      000020             ;;WRITING?
107151 / 254000,,107160          JRST      107160             ;;YES. ERASE BAD SPOT.
                       MTERR3:
107152 / 722740,,400100         CONSO  MTS,400100             ;;SET IODERR IF ILLEG OR MISSED CHAR FLAGS
107153 / 332000,,020153         SKIPE      020153             ;;SET IODERR IF DATA MISSED
107154 / 660000,,200000           TRO      IODERR             ;
107155 / 722700,,000030         CONSZ  MTS,000030             ;;SET IODTER IF LONG OR LAT PARITY
107156 / 660000,,100000           TRO      IODTER             ;
107157 / 254000,,106736          JRST      MTPDUN             ;
                       ;THIS ROUTINE BACKSPACES OVER ONE RECORD (A BAD ONE) THEN
                       ;WRITES 3" OF BLANK TAPE WHICH WILL BE SKIPPED OVER ON
                       ;INPUT (LOOKS LIKE A LONG INTER-RECORD GAP).  THE PROCESS
                       ;CONTINUES UNTIL NO ERRORS ARE ENCOUNTERED OR EOT IS REACHED.
                       WRBLNK:
107160 / 722700,,010000         CONSZ  MTS,010000             ;;EOT?
107161 / 254000,,107014          JRST      107014             ;;YES. GIVE UP.
107162 / 554040,,020147          HLRZ  TAC,020147             ;;LAST COMMAND
107163 / 421040,,007400        ANDCMI  TAC,007400             ;;MASK OUT IRREVALENCIES
107164 / 201041,,003400         MOVEI  TAC,  7B27(TAC)        ;;BSP
107165 / 260140,,107204         PUSHJ    P,107204             ;;INITIATE THE OPERATION
107166 / 260140,,107177         PUSHJ    P,107177             ;;RETURN WHEN BSR DONE.
107167 / 554040,,020147          HLRZ  TAC,020147             ;;GET BACK COMMAND
107170 / 421040,,007400        ANDCMI  TAC, 17B27             ;
107171 / 201041,,005400         MOVEI  TAC, 13B27(TAC)        ;;WRITE 3" OF BLANK TAPE
107172 / 260140,,107204         PUSHJ    P,107204             ;;START THE WRITE
107173 / 211040,,000012         MOVNI  TAC,000012             ;;RESET ERROR COUNT.
107174 / 572040,,020154         HRREM  TAC,MTERCN             ;
107175 / 260140,,107177         PUSHJ    P,107177             ;;WAIT FOR WBT.
107176 / 254000,,107142          JRST      107142             ;;GO RE-ISSUE READ OR WRITE.
                       MTERST:
107177 / 262140,,020161           POP    P,020161             ;;STORE RETURN ADDRESS.
                       MTIGN:
107200 / 201040,,000001         MOVEI  TAC,000001             ;;RETURN ON ICR
107201 / 542040,,000635          HRRM  TAC,MTCCON             ;
107202 / 722600,,000001          CONO  MTS,000001             ;;ENABLE HARDWARE FOR ICR
107203 / 263140,,000000          POPJ    P,                   ;;DISMISS INTERRUPT
                       ;INITIATE THE EXECUTION OF AN MTAPE FOR THE 
                       ;   ERROR ROUTINES.  MUST BE CALLED FROM INTERRUPT LEVEL
                       ;   WITH INTERFACE AND CONTROL READY (ICR)
                       MTXCT:
107204 / 262140,,020161           POP    P,020161             ;;STORE RETURN ADDRESS
107205 / 201100,,040000         MOVEI TAC1,040000             ;;RETURN ON XNC
107206 / 700600,,000400          CONO   PI, PIOFF             ;
107207 / 722201,,000000          CONO  MTC,      (TAC)        ;;ISSUE THE OPERATION
107210 / 722600,,040000          CONO  MTS,040000             ;;ENABLE THE HARDWARE
107211 / 542100,,000635          HRRM TAC1,000635             ;;AND THE SOFTWARE
107212 / 700600,,000200          CONO   PI,000200             ;;ALLOW INTERRUPTS AGAIN
107213 / 263140,,000000          POPJ    P,                   ;;DISMISS INTERRUPT
                       ;LOGICAL END OF TAPE LOOP
                       MTLEOT:
107214 / 201200,,000007         MOVEI ITEM,000007             ;;BACKSPACE
107215 / 260140,,106402         PUSHJ    P,MTAPE2             ;
107216 / 260140,,106471         PUSHJ    P,106471             ;;CALL INTERLOCK. PICKUP IOS
                       ;AFTER PREVIOS TASK FINISHED.
                       MTEOT2:
107217 / 201200,,000016         MOVEI ITEM,000016             ;;SPACE ONE FILE
107220 / 260140,,106402         PUSHJ    P,MTAPE2             ;
107221 / 201200,,000006         MOVEI ITEM,000006             ;;SPACE ONE RECORD
107222 / 260140,,106401         PUSHJ    P, MTAPE             ;
107223 / 260140,,106471         PUSHJ    P,106471             ;;CALL INTERLOCK. 
                       ;RETURN WHEN SPACING DONE WITH NEW IOS
107224 / 607000,,004000          TLNN      004000             ;;WAS EOF DETECTED?
107225 / 254000,,107217          JRST      107217             ;;NO, RESUME SPACING.
107226 / 201200,,000007         MOVEI ITEM,000007             ;;PREPARE FOR BACKSPACE MTAPE
107227 / 254000,,106402          JRST      106402             ;;BACKSPACE, LOGICAL EOT FOUND RETURN TO CALLER
                       ;DEVICE DEPENDENT DUMP MODES. MODE 16.
                       ;OUTPUT:
                       MTDMPO:
107230 / 260140,,044540         PUSHJ    P,COMCHK             ;
107231 / 254000,,043211          JRST      ADRERR             ;
107232 / 260140,,106462         PUSHJ    P,106462             ;;IS SYSTEM AVAILABLE
107233 / 661000,,000020           TLO      000020             ;;WRITING
107234 / 722700,,000200         CONSZ  MTS,000200             ;;WRITE LOCK?
107235 / 254000,,106621          JRST      106621             ;;YES.
151576 / 000000,,000020                                       ;
151576 / 720100,,003421          BLKO   DC,003421             ;
107236 / 200100,,151576          MOVE TAC1,151576             ;
                       ;BLKO AND DATA CONTROL COMMAND
107237 / 550040,,000014          HRRZ  TAC,000014             ;; COMMAND LIST POINTER
107240 / 201200,,001000         MOVEI ITEM,001000             ;;WRITING COMMAND
                       MTDMP1:
107241 / 505040,,000007          HRLI  TAC,000007             ;;ACTUAL ADDRESS OF COMMAND LIST
107242 / 202040,,020156         MOVEM  TAC,020156             ;;COMMAND POINTER
107243 / 336060,,000001         SKIPN  TAC,@000001            ;;COMMAND WORD
107244 / 254000,,106774          JRST      MTEND1             ;
107245 / 607040,,777777          TLNN  TAC,777777             ;
107246 / 254000,,107241          JRST      107241             ;;CHANGE COMMAND SEQUENCE
107247 / 566040,,020157         HLROM  TAC,020157             ;;SAVE COUNTER
107250 / 201041,,000000         MOVEI  TAC,      (TAC)        ;;GET ADDRESS ALONE
107251 / 274040,,020157           SUB  TAC,020157             ;;GET LAST ADDRESS
107252 / 303040,,000114         CAILE  TAC,000114             ;;ABOVE PROTECTED PART OF JOB DATA AREA?
107253 / 313053,,024065         CAMLE  TAC,USRREL(PID)        ;;LESS THAN END?
107254 / 254000,,107273          JRST      107273             ;;OUT OF BOUNDS
107255 / 200060,,020156          MOVE  TAC,@020156            ;;PICK UP POINTER AGAIN
107256 / 271047,,000000          ADDI  TAC,      (PROG)       ;;GET ACTUAL ADDRESS
107257 / 260140,,106607         PUSHJ    P,106607             ;;MOVE TAPE
107260 / 254000,,046160          JRST       WAIT1             ;
                       ;INPUT
                       MTDMPI:
107261 / 260140,,044540         PUSHJ    P,COMCHK             ;
107262 / 254000,,043211          JRST      ADRERR             ;
107263 / 260140,,106462         PUSHJ    P,MTCHEK             ;
107264 / 621000,,000020           TLZ      000020             ;;READING
107265 / 602000,,020000          TRNE      020000             ;;END-OF-FILE?
107266 / 254000,,106774          JRST      106774             ;;YES. GIVE BACK MAG TAPE.
151574 / 000000,,000020                                       ;
151574 / 720000,,004021          BLKI   DC,004021             ;
107267 / 200100,,151574          MOVE TAC1,151574             ;
                       ;BLKI AND DATA CONTROL COMMAND
107270 / 550040,,000014          HRRZ  TAC,000014             ;;GET COMMAND LIST POINTER
107271 / 201200,,002400         MOVEI ITEM,002400             ;;READ COMMAND
107272 / 254000,,107241          JRST      107241             ;;DUMP
                       ;ADDRESS ERROR
                       MTDMP2:
107273 / 260140,,106774         PUSHJ    P,MTEND1             ;
107274 / 254000,,043211          JRST      ADRERR             ;
                       MTDPI1:
107275 / 602000,,020000          TRNE      020000             ;;EOF?
107276 / 254000,,106774          JRST      106774             ;;YES.
107277 / 201200,,002400         MOVEI ITEM,002400             ;;READ COMMAND
151574 / 000000,,000020                                       ;
151574 / 720000,,004021          BLKI   DC,004021             ;
107300 / 200100,,151574          MOVE TAC1,151574             ;
107301 / 254000,,107306          JRST      MTDMP3             ;
                       MTDPO1:
107302 / 722700,,010000         CONSZ  MTS,010000             ;;AT EOT?
107303 / 254000,,106774          JRST      106774             ;;YES.
107304 / 201200,,001000         MOVEI ITEM,001000             ;;WRITE COMMAND.
151576 / 000000,,000020                                       ;
151576 / 720100,,003421          BLKO   DC,003421             ;
107305 / 200100,,151576          MOVE TAC1,151576             ;
                       MTDMP3:
107306 / 505040,,000007          HRLI  TAC,000007             ;;FOLLOW COMMAND LIST.
107307 / 202040,,020156         MOVEM  TAC,MTCMDP             ;
107310 / 336060,,000001         SKIPN  TAC,@   TAC            ;
107311 / 254000,,106774          JRST      106774             ;;END OF LIST.
107312 / 325040,,107306        JUMPGE  TAC,107306             ;;CHANGE OF LIST.
107313 / 566040,,020157         HLROM  TAC,SVCNTR             ;
107314 / 553000,,000001         HRRZS         TAC             ;
107315 / 274040,,020157           SUB  TAC,SVCNTR             ;
107316 / 554240,,000007          HLRZ  DAT,  PROG             ;
107317 / 303040,,000114         CAILE  TAC,JOBPFI             ;
107320 / 313040,,000005         CAMLE  TAC,   DAT             ;
107321 / 254000,,107273          JRST      MTDMP2             ;
107322 / 200060,,020156          MOVE  TAC,@MTCMDP            ;
107323 / 271047,,000000          ADDI  TAC,      (PROG)       ;
107324 / 254000,,106607          JRST      106607             ;;GO DO BLKO/BLKI
                       MDRTRY:
107325 / 200060,,020156          MOVE  TAC,@020156            ;;RETRY LAST OPERATION
107326 / 271047,,000000          ADDI  TAC,      (PROG)       ;
107327 / 607000,,000020          TLNN      000020             ;;INPUT?
107330 / 254000,,107334          JRST      107334             ;;YES.
151576 / 000000,,000020                                       ;
151576 / 720100,,003421          BLKO   DC,003421             ;
107331 / 200100,,151576          MOVE TAC1,151576             ;
107332 / 201200,,001000         MOVEI ITEM,001000             ;;WRITE COMMAND.
107333 / 254000,,106607          JRST      MTINDC             ;
                       MDRT1:
151574 / 000000,,000020                                       ;
151574 / 720000,,004021          BLKI   DC,004021             ;
107334 / 200100,,151574          MOVE TAC1,151574             ;
107335 / 201200,,002400         MOVEI ITEM,002400             ;;READ COMMAND
107336 / 254000,,106607          JRST      106607             ;;START TAPE AND DISMISS INTERRUPT.
107337 /                 ;::    BEND STANFO.MTCSER.
107337 /               ;: MTCSER[J17,SYS] EOF.
107337 /               ;: XGPSER[J17,SYS]
107337 /                 ;::   BEGIN STANFO.XGPSER.
                       ;R. E. GORIN JANUARY, 1973
                       ;BITS FOR THE XGP:
                       ;CONO XGP,
                       ;	BLANK←←40		;IGNORE BUFFER DATA
                       ;THIS IS USUAL CONO WHILE SENDING DATA
                       ;CONI XGP,
                       ;	VIDENB←←40		;VIDEO DATA IS HAPPENING RIGHT NOW.
                       ;LH BITS IN XGPIOS
                       ;	DISPATCH FOR XGPSERVICE
107337 / 254000,,107543          JRST      107543             ;;SYSTEM INITIALIZATION
107340 / 254000,,110440          JRST      110440             ;;HUNG TIME OUT
                       XGPDSP:
107341 / 254000,,107576          JRST      107576             ;;RELEASE
107342 / 254000,,110002          JRST      110002             ;;CLOSE OUTPUT
107343 / 254000,,110012          JRST      110012             ;;BUFFERED OUTPUT
107344 / 254000,,043267          JRST      043267             ;;INPUT ILLEGAL
107345 / 254000,,037401          JRST      037401             ;;ENTER
107346 / 254000,,037401          JRST      037401             ;;LOOKUP
107347 / 254000,,107614          JRST      107614             ;;DUMP MODE OUTPUT
107350 / 254000,,043267          JRST      043267             ;;DUMP INPUT
107351 / 263140,,000000          POPJ    P,                   ;;USETO
107352 / 263140,,000000          POPJ    P,                   ;;USETI
107353 / 263140,,000000          POPJ    P,                   ;;UGETF
107354 / 254000,,037401          JRST      037401             ;;RENAME
107355 / 263140,,000000          POPJ    P,                   ;;CLOSE INPUT
107356 / 263140,,000000          POPJ    P,                   ;;UTPCLR
107357 / 254000,,107363          JRST      107363             ;;MTAPE
                       DWCNT:
107360 / 000000,,016617                                       ;
107360 / 000600,,016617 POINT 6,00016617,35                   ;
                       ;WORD COUNT
                       LNSKIP:
107361 / 000000,,016617                                       ;
107361 / 301300,,016617 POINT 11,00016617,11                  ;
                       COLSKP:
107362 / 000000,,016617                                       ;
107362 / 141400,,016617 POINT 12,00016617,23                  ;
                       ;	MTAPE UUO for the XGP.
                       ;	MTAPE UUO
                       XMTAPE:
153046 / 331054,,000000         SKIPL  TAC,      (UUO)        ;
107363 / 256200,,153046          XCTR   XR,153046             ;;N.B. THIS ADDRESS CHECKS BEGINNING OF DATA
107364 / 301040,,000007          CAIL  TAC,XMTTLN             ;
107365 / 211040,,000001         MOVNI  TAC,     1             ;
107366 / 337001,,107400         SKIPG      XMTTAB(TAC)        ;;SKIP UNLESS WE NEED A CLOSE FIRST.
152073 / 001000,,010000                                       ;
107367 / 616000,,152073          TDNN      152073             ;;DEVICE MUST NOT BE ACTIVE.
107370 / 254021,,107400          JRST      @XMTTAB(TAC)       ;;DISPATCH
107371 / 261140,,000014          PUSH    P,   UUO             ;
107372 / 201600,,000000         MOVEI  UUO,                   ;;MAKE THE EFFECTIVE ADDRESS 0 FOR CLOSE.
107373 / 260140,,110002         PUSHJ    P,110002             ;;FORCE A CLOSE FIRST
107374 / 262140,,000014           POP    P,   UUO             ;
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
107375 / 256200,,152455          XCTR   XR,152455             ;;GET DISPATCH AGAIN  (CAN'T BE WRONG)
107376 / 254021,,107400          JRST      @XMTTAB(TAC)       ;
107377 / 000000,,037403                                       ;
                       XMTTAB:
107400 / 000000,,107407                                       ;
107401 / 400000,,107421          SETZ       XMTP1             ;
107402 / 000000,,107443                                       ;
107403 / 400000,,107454          SETZ       XMTP3             ;
107404 / 000000,,107477                                       ;
107405 / 000000,,110001                                       ;;FORCE DATA TRANSMISSION, PSEUDO CLOSE.
107406 / 400000,,107504          SETZ      107504             ;;SET NODE COUNTS
                       XMTP0:
152461 / 200054,,000004          MOVE  TAC,     4(UUO)        ;
107407 / 256200,,152461          XCTR   XR,152461             ;;ADDRESS CHECK LAST WORD (FIRST WORD IS OK)
107410 / 541114,,000001          HRRI TAC1,     1(UUO)        ;;DESTINATION
107411 / 260140,,072703         PUSHJ    P,072703             ;;RELOCATE DESTINATION
107412 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK
107413 / 321100,,043211         JUMPL TAC1,043211             ;;WRITE PROTECTED
107414 / 505100,,016736          HRLI TAC1,016736             ;;SOURCE
107415 / 201042,,000003         MOVEI  TAC,     3(TAC1)       ;
107416 / 251101,,000000           BLT TAC1,      (TAC)        ;
107417 / 402000,,016736         SETZM      016736             ;;CLEAR ERROR COUNT
107420 / 263140,,000000          POPJ    P,                   ;
                       XMTP1:
152461 / 200054,,000004          MOVE  TAC,     4(UUO)        ;
107421 / 256200,,152461          XCTR   XR,152461             ;;ADDRESS CHECK THE END OF THE TRANSFER
107422 / 201114,,000001         MOVEI TAC1,     1(UUO)        ;;RELATIVE FIRST LOC OF SOURCE
107423 / 260140,,072703         PUSHJ    P,RELOCA             ;
107424 / 254000,,043211          JRST      ADRERR             ;
107425 / 205042,,000000         MOVSI  TAC,      (TAC1)       ;;SWAP TO SOURCE
107426 / 541040,,016661          HRRI  TAC,016661             ;;DESTINATION
107427 / 251040,,016664           BLT  TAC,016664             ;
107430 / 201040,,000002         MOVEI  TAC,000002             ;;OP CODE FOR FONT COMPILER.
107431 / 202040,,016660         MOVEM  TAC,XGPNST             ;
107432 / 260140,,110213         PUSHJ    P, FCREQ             ;
107433 / 263140,,000000          POPJ    P,                   ;;LOSE ERROR CODE WILL BE SET ALREADY
107434 / 200040,,016640          MOVE  TAC,016640             ;;GET OLD STATUS
107435 / 302040,,000002          CAIE  TAC,000002             ;;EXPECTED REPLY IS YESSIR
107436 / 254000,,107537          JRST      107537             ;;OOPS FC REPLIED WRONG.
107437 / 200040,,016641          MOVE  TAC,016641             ;;GET RELATIVE ADDRESS OF FONT TABLE
107440 / 200100,,016664          MOVE TAC1,016664             ;;GET FONT NUMBER THAT WE TOLD THE FC.
107441 / 202042,,016706         MOVEM  TAC,XFTADR(TAC1)       ;
107442 / 254000,,037401          JRST      CPOPJ1             ;
                       XMTP2:
152463 / 200054,,000006          MOVE  TAC,     6(UUO)        ;
107443 / 256200,,152463          XCTR   XR,152463             ;;ADDRESS CHECK LAST WORD (FIRST WORD IS OK)
107444 / 201114,,000001         MOVEI TAC1,     1(UUO)        ;;DESTINATION
107445 / 260140,,072703         PUSHJ    P,RELOCA             ;
107446 / 254000,,043211          JRST      ADRERR             ;
107447 / 321100,,043211         JUMPL TAC1,ADRERR             ;
107450 / 505100,,017152          HRLI TAC1,017152             ;;SOURCE
107451 / 201042,,000005         MOVEI  TAC,     5(TAC1)       ;;LAST WORD OF DESTINATION
107452 / 251101,,000000           BLT TAC1,      (TAC)        ;
107453 / 263140,,000000          POPJ    P,                   ;
                       XMTP3:
107454 / 201100,,000000         MOVEI TAC1,                   ;
                       XMTP3A:
152456 / 200054,,000001          MOVE  TAC,     1(UUO)        ;
107455 / 256200,,152456          XCTR   XR,152456             ;
107456 / 405040,,037777          ANDI  TAC, 37777             ;
107457 / 202042,,017152         MOVEM  TAC,XGPPS1(TAC1)       ;
107460 / 271600,,000001          ADDI  UUO,     1             ;
107461 / 305100,,000002         CAIGE TAC1,     2             ;
107462 / 344100,,107455          AOJA TAC1,XMTP3A             ;
152456 / 200054,,000001          MOVE  TAC,     1(UUO)        ;
107463 / 256200,,152456          XCTR   XR,152456             ;;LEFT MARGIN
107464 / 405040,,003777          ANDI  TAC,  3777             ;
107465 / 202040,,017155         MOVEM  TAC,XGPLMR             ;
152457 / 200054,,000002          MOVE  TAC,     2(UUO)        ;
107466 / 256200,,152457          XCTR   XR,152457             ;;RIGHT MARGIN
107467 / 405040,,007777          ANDI  TAC,  7777             ;
107470 / 317040,,017155          CAMG  TAC,XGPLMR             ;
107471 / 201040,,007777         MOVEI  TAC,  7777             ;
107472 / 202040,,017156         MOVEM  TAC,XGPRMR             ;
152460 / 200054,,000003          MOVE  TAC,     3(UUO)        ;
107473 / 256200,,152460          XCTR   XR,152460             ;
107474 / 405040,,003777          ANDI  TAC,  3777             ;
107475 / 202040,,017157         MOVEM  TAC,XGPILS             ;
107476 / 263140,,000000          POPJ    P,                   ;
                       XMTP4:
107477 / 200000,,016566          MOVE      XGPIOS             ;
152543 / 202014,,000001         MOVEM           1(UUO)        ;
107500 / 256040,,152543          XCTR   XW,152543             ;
107501 / 200040,,017003          MOVE  TAC,XGPIGO             ;
152552 / 202054,,000002         MOVEM  TAC,     2(UUO)        ;
107502 / 256040,,152552          XCTR   XW,152552             ;
107503 / 263140,,000000          POPJ    P,                   ;
                       XMTP6:
153116 / 337054,,000001         SKIPG  TAC,     1(UUO)        ;
107504 / 256200,,153116          XCTR   XR,153116             ;;GET THE TEXT NODE COUNT
107505 / 201040,,000020         MOVEI  TAC,NTNODE             ;
107506 / 202040,,017160         MOVEM  TAC,XNTNOD             ;
153117 / 337054,,000002         SKIPG  TAC,     2(UUO)        ;
107507 / 256200,,153117          XCTR   XR,153117             ;
107510 / 201040,,000144         MOVEI  TAC,NVNODE             ;
107511 / 202040,,017161         MOVEM  TAC,XNVNOD             ;
107512 / 263140,,000000          POPJ    P,                   ;
                       ;	SET ERROR CODE ROUTINES.
                       XERR1:
107513 / 265040,,107527           JSP  TAC,107527             ;;FC LOSSAGE: JOB CAPACITY EXCEEDED
                       XERR2:
107514 / 265040,,107527           JSP  TAC,107527             ;;FC LOSSAGE: NO INITIAL RESPONSE.
                       XERR3:
107515 / 265040,,107527           JSP  TAC,107527             ;;FC LOSSAGE: NO INTERMEDIATE RESPONSE.
                       XERR4:
107516 / 265040,,107527           JSP  TAC,107527             ;;FC LOSSAGE: ILLEGAL RESPONSE.
                       XERR5:
107517 / 265040,,107527           JSP  TAC,107527             ;;I-LEVEL  DATA MISSED. - BUFFERED MODE.
                       XERR6:
107520 / 265040,,107527           JSP  TAC,107527             ;;XGP IS HUNG - HUNG TIMEOUT.
                       XERR7:
107521 / 265040,,107527           JSP  TAC,107527             ;;ILLEGAL MODE.
                       XERR10:
107522 / 265040,,107527           JSP  TAC,107527             ;;LINE COMPILER ERROR. LINE TOO COMPLEX.
                       XERR11:
107523 / 265040,,107527           JSP  TAC,107527             ;;OUT OF ORDER
                       XERR12:
107524 / 265040,,107527           JSP  TAC,107527             ;;I MISSED IT!
                       XERR13:
107525 / 265040,,107527           JSP  TAC,107527             ;;PAGE TOO LONG
                       XERR14:
107526 / 265040,,107527           JSP  TAC,107527             ;;ILLEGAL VECTOR PARAMETERS
                       XERRC:
107527 / 332000,,016736         SKIPE      016736             ;;ONLY LET ONE ERROR THROUGH
107530 / 263140,,000000          POPJ    P,                   ;;
107531 / 275040,,107513          SUBI  TAC, XERR1             ;
107532 / 552040,,016736         HRRZM  TAC,016736             ;;SET ERROR CODE FOR USER.
                       XERRCL:
107533 / 402000,,016737         SETZM      016737             ;;AND CLEAR EXTRA ERROR WORDS.
107534 / 402000,,016740         SETZM      016740             ;
107535 / 402000,,016741         SETZM      016741             ;
107536 / 263140,,000000          POPJ    P,                   ;
                       FCERRX:
107537 / 260140,,107516         PUSHJ    P,107516             ;;SET ERROR CODE.
152170 / 016640,,016737                                       ;
107540 / 200040,,152170          MOVE  TAC,152170             ;;GET FC STATUS
107541 / 251040,,016741           BLT  TAC,016741             ;;STORE FC STATUS AS 3 EXTRA ERROR WORDS.
107542 / 263140,,000000          POPJ    P,                   ;
                       ;	INITIALIZATION, RELEASE.
                       XGPINI:
107543 / 402000,,016600         SETZM      XGPCSC             ;
107544 / 402000,,016601         SETZM      016601             ;
107545 / 402000,,016602         SETZM      016602             ;
107546 / 402000,,016603         SETZM      016603             ;
107547 / 402000,,017070         SETZM      017070             ;;FLAPPER COUNT
107550 / 402000,,017067         SETZM      017067             ;;FLAPPER BITS
107551 / 402000,,017066         SETZM      017066             ;;MORE FLAPPER BITS
107552 / 402000,,017071         SETZM       XCUTQ             ;
152140 / 000000,,017070                                       ;
152140 / 004400,,017070 POINT 36,00017070,35                  ;
107553 / 200040,,152140          MOVE  TAC,152140             ;
107554 / 202040,,017151         MOVEM  TAC,XCUTBP             ;
107555 / 402000,,016633         SETZM      016633             ;;THERE IS NO INTERNAL BUFFER FOR DEVICE.
                       XCPIN1:
107556 / 402000,,016626         SETZM      016626             ;;NO ONE READY TO XFER DATA.
107557 / 402000,,016744         SETZM      016744             ;;ZERO HEADER IOWD
107560 / 402000,,017001         SETZM      XGPAT2             ;
107561 / 402000,,016614         SETZM      016614             ;;INITIALIZE DUMP MODE STUFF
107562 / 402000,,016615         SETZM      016615             ;
107563 / 402000,,016613         SETZM      XGPBIG             ;
107564 / 402000,,016612         SETZM      XGPIWD             ;
107565 / 402000,,016736         SETZM      016736             ;;CLEAR ERROR CODE.
152173 / 017163,,017152                                       ;
107566 / 200040,,152173          MOVE  TAC,152173             ;
107567 / 251040,,017162           BLT  TAC,XGPBLN             ;
107570 / 254000,,107533          JRST      107533             ;;CLEAR MINOR ERROR CODES AND RETURN
                       XGPIN2:
107571 / 205000,,000200         MOVSI      XPAPER             ;
107572 / 260140,,107773         PUSHJ    P,XGPCLR             ;
107573 / 402000,,000725         SETZM      000725             ;;SO XGPP2 WILL START XGP NOW.
107574 / 476000,,016605         SETOM      016605             ;;LET CLOCK LEVEL START US.
107575 / 254000,,110467          JRST      110467             ;;RUN OUR CLOCK LEVEL AND RETURN TO SYSINI
                       XGPREL:
107576 / 476000,,016611         SETOM      XGPKIL             ;
107577 / 260140,,110347         PUSHJ    P,110347             ;;KILL THE FONT COMPILER
107600 / 332640,,016633         SKIPE  AC1, XIBUF             ;
107601 / 260140,,074163         PUSHJ    P,FSGIVE             ;
107602 / 402000,,016633         SETZM       XIBUF             ;
107603 / 260140,,107776         PUSHJ    P,107776             ;;
107604 / 402000,,016625         SETZM      016625             ;;TELL PDP-6 THAT WE DON'T HAVE ANY MORE.
152113 / 001443,,750000                                       ;
107605 / 200000,,152113          MOVE      152113             ;
107606 / 412000,,016566        ANDCAM      XGPIOS             ;
107607 / 260140,,107770         PUSHJ    P,107770             ;;RELEASE SYNCHRONIZER
107610 / 254000,,107556          JRST      XCPIN1             ;
                       ;	DUMP MODE OUTPUT UUO.
                       XDMPO2:
107611 / 602000,,740000          TRNE      ERRMSK             ;
107612 / 263140,,000000          POPJ    P,                   ;;DON'T WAIT IF HE'S GOT ERROR BITS ON.
107613 / 260140,,046176         PUSHJ    P,046176             ;;STOP FOR A WHILE. (SETS IOW)
                       XDMPO:
107614 / 332000,,016615         SKIPE      016615             ;;IS THERE A 'NEXT' COMMAND ALREADY?
107615 / 254000,,107611          JRST      107611             ;;YES. WAIT UNTIL THERE ISN'T ONE
107616 / 260140,,044540         PUSHJ    P,044540             ;;CHECK COMMAND LIST
107617 / 254000,,043211          JRST      043211             ;;ADDRESS ERROR IN COMMAND.
107620 / 200213,,024061          MOVE    J,   JOB(PID)        ;;FIX J, CLOBBERED BY COMCHK
                       ;UUO POINTS TO FIRST COMMAND IOWD OR 0.
107621 / 550040,,000014          HRRZ  TAC,000014             ;;COMMAND LIST POINTER
107622 / 505040,,000007          HRLI  TAC,  PROG             ;
107623 / 336020,,000001         SKIPN      @000001            ;;GET ACTUAL COMMAND WORD.
107624 / 263140,,000000          POPJ    P,                   ;;NULL COMMAND LIST. DO NOTHING.
107625 / 202040,,016615         MOVEM  TAC,016615             ;;POINTER TO COMMAND SAVED AS 'NEXT COMMAND'
107626 / 332000,,016614         SKIPE      016614             ;;IS THERE A CURRENT MAIN POINTER?
107627 / 254000,,107633          JRST      107633             ;;YES.
107630 / 402000,,016615         SETZM      016615             ;;XGP IS IDLE, CLEAR NEXT
107631 / 275040,,000001          SUBI  TAC,     1             ;
107632 / 202040,,016614         MOVEM  TAC,016614             ;;AND SET MAIN.
                       XDMPO5:
107633 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107634 / 200000,,016566          MOVE      XGPIOS             ;
107635 / 623000,,000002          TLZE      000002             ;;IF IOBEG,
107636 / 260140,,107724         PUSHJ    P,107724             ;;SET I-LEVEL DATA DISPATCH.
107637 / 602000,,740000          TRNE      ERRMSK             ;
107640 / 254000,,107770          JRST      107770             ;;IN CASE OF ERROR, DESYNCHRONIZE AND RETURN
107641 / 260140,,107770         PUSHJ    P,XSYNCX             ;
107642 / 260140,,107662         PUSHJ    P,107662             ;;START THE XGP. (DON'T CLOBBER J,PROG)
107643 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107644 / 200000,,016566          MOVE      XGPIOS             ;
107645 / 602000,,740000          TRNE      ERRMSK             ;
107646 / 254000,,107770          JRST      107770             ;;FLUSH ERRORS.
107647 / 202340,,016616         MOVEM PROG,016616             ;;SET UP FOR XADV
107650 / 260140,,045233         PUSHJ    P,SETACT             ;
107651 / 260140,,107770         PUSHJ    P,XSYNCX             ;
107652 / 476000,,016626         SETOM      016626             ;;TELL PDP-6 TO START DOING DATA.
107653 / 602000,,000100          TRNE      000100             ;;CONTINUOUS MODE?
107654 / 254000,,037376          JRST      037376             ;;AVOID CALLING WSYNC IN UUOCON
                       XDMPO8:
107655 / 260140,,046160         PUSHJ    P,046160             ;;RETURN WHEN IOACT OFF.
                       XDMPO1:
107656 / 402000,,016626         SETZM       XGPGO             ;
107657 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107660 / 402000,,016625         SETZM      XGPBIT             ;
107661 / 254000,,107770          JRST      XSYNCX             ;
                       ;	START THE XGP FROM THE PDP-10
                       XGPSTR:
107662 / 402000,,016611         SETZM      016611             ;;HERE TO START THE XGP
107663 / 402000,,016624         SETZM      016624             ;;
                       XGSTR1:
107664 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107665 / 476000,,016610         SETOM      016610             ;;IF PAPER IS MOVING, I-LEVEL JUMPS TO PAPOON.
107666 / 476000,,016625         SETOM      016625             ;;TELL PDP-6 WE WANT PAPER MOTION.
107667 / 135040,,037610           LDB  TAC,PDVTIM             ;
107670 / 137040,,037611           DPB  TAC,PDVCNT             ;
107671 / 200000,,016566          MOVE      016566             ;;GET CURRENT STATE OF AFFAIRS
152073 / 001000,,010000                                       ;
107672 / 612000,,152073          TDNE      152073             ;;IS THE BEAST RUNNING NOW?
107673 / 254000,,107711          JRST      107711             ;;YES. RETURN QUICK
107674 / 260140,,107716         PUSHJ    P,107716             ;;SET IOS RIGHT.
107675 / 260140,,107770         PUSHJ    P,XSYNCX             ;
107676 / 135200,,037575           LDB    J, PJOBN             ;
107677 / 211000,,000006         MOVNI      000006             ;;REQUEUE TO DIOW TO ALLOW SYNC.
107700 / 202004,,020574         MOVEM      JOBQUE(J)          ;
                       XGSTR2:
107701 / 260140,,046124         PUSHJ    P,046124             ;;RESCHEDULE.
107702 / 200000,,016566          MOVE      XGPIOS             ;
107703 / 603000,,000001          TLNE      000001             ;;DID THE RIGHT GUY BRING ME OUT?
107704 / 254000,,107701          JRST      107701             ;;NO. WAIT SOME MORE.
107705 / 602000,,740000          TRNE      740000             ;;ANY ERRORS?
107706 / 263140,,000000          POPJ    P,                   ;;YES. RETURN THEM
107707 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107710 / 260140,,107716         PUSHJ    P,107716             ;;SET SOME GOOD BITS IN XGPIOS.
                       XGSTR4:
107711 / 661000,,000021           TLO      000021             ;
107712 / 602000,,000100          TRNE      000100             ;;OVERLAPPED MODE?
107713 / 621000,,000001           TLZ      000001             ;;YES. THEN NOT REALLY IN IOW.
107714 / 202000,,016566         MOVEM      XGPIOS             ;
107715 / 254000,,107770          JRST      107770             ;;RETURN. PAPER IN MOTION.
                       XSIOS:
107716 / 205000,,001021         MOVSI      001021             ;;ASSUME BUFFERED MODE
107717 / 200040,,016563          MOVE  TAC,016563             ;
107720 / 607040,,400000          TLNN  TAC,400000             ;;SKIP IF REALLY BUFFERED MODE
152073 / 001000,,010000                                       ;
107721 / 650000,,152073           TDC      152073             ;;FLUSH DEVSBB, TURN ON IOACT FOR DUMP MODE.
107722 / 437000,,016566          IORB      016566             ;;SET THOSE BITS.
107723 / 263140,,000000          POPJ    P,                   ;
                       ;	SET I-LEVEL DISPATCH AT FIRST UUO.
                       SETXIO:
107724 / 135040,,037574           LDB  TAC,PIOMOD             ;
107725 / 200041,,107746          MOVE  TAC,XIODSP(TAC)        ;
107726 / 602000,,000100          TRNE      000100             ;;SPECIAL MODE?
107727 / 204040,,000001          MOVS  TAC,   TAC             ;
107730 / 552040,,016622         HRRZM  TAC,016622             ;;
107731 / 602040,,777777          TRNE  TAC,777777             ;;SKIP IF ZERO DISPATCH
107732 / 254000,,107735          JRST      SETXI1             ;
107733 / 660000,,400000           TRO      400000             ;;ILLEGAL.
107734 / 260140,,107521         PUSHJ    P, XERR7             ;
                       SETXI1:
107735 / 202000,,016566         MOVEM      XGPIOS             ;
107736 / 135040,,037574           LDB  TAC,PIOMOD             ;
107737 / 200000,,016563          MOVE      016563             ;
107740 / 301040,,000017          CAIL  TAC,     D             ;
107741 / 625000,,400000          TLZA      400000             ;;NO INTERNAL BUFFER IN DUMP MODE
107742 / 661000,,400000           TLO      400000             ;;INTERNAL BUFFER IN BUFFERED MODE.
107743 / 202000,,016563         MOVEM      016563             ;
107744 / 200000,,016566          MOVE      XGPIOS             ;
107745 / 263140,,000000          POPJ    P,                   ;
                       XIODSP:
107746 / 000000,,111134                                       ;;MODE 0
107747 / 000000,,111134                                       ;;MODE 1
107750 / 000000,,000000                                       ;;MODE 2
107751 / 000000,,000000                                       ;;MODE 3
107752 / 000000,,000000                                       ;;MODE 4
107753 / 000000,,000000                                       ;;MODE 5
107754 / 000000,,000000                                       ;;MODE 6
107755 / 000000,,000000                                       ;;MODE 7
107756 / 000000,,000000                                       ;;MODE 10
107757 / 000000,,000000                                       ;;MODE 11
107760 / 000000,,000000                                       ;;MODE 12
107761 / 000000,,111134                                       ;;MODE 13 - SAME AS MODE 0
107762 / 000000,,000000                                       ;;MODE 14
107763 / 000000,,000000                                       ;;MODE 15
107764 / 000000,,000000                                       ;;MODE 16
107765 / 110714,,110714                                       ;;MODE 17 
                       XGPSET:
107766 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107767 / 437000,,016566          IORB      XGPIOS             ;
                       XSYNCX:
107770 / 260140,,037501         PUSHJ    P, XWAIT             ;
107771 / 201040,,016600         MOVEI  TAC,XGPCSC             ;
107772 / 263140,,000000          POPJ    P,                   ;
                       XGPCLR:
107773 / 260140,,107776         PUSHJ    P,PSYNCX             ;
107774 / 413000,,016566        ANDCAB      XGPIOS             ;
107775 / 254000,,107770          JRST      XSYNCX             ;
                       PSYNCX:
107776 / 260140,,037464         PUSHJ    P, PWAIT             ;
107777 / 201040,,016600         MOVEI  TAC,XGPCSC             ;
110000 / 263140,,000000          POPJ    P,                   ;
                       ;	XGP BUFFERED MODE OUTPUT UUO, CLOSE UUO
                       XCLSP:
110001 / 201600,,000000         MOVEI  UUO,                   ;;KLUDGE FOR MTAPE 5.
                       XCLSO:
110002 / 205000,,000040         MOVSI      000040             ;;FLAG CLOSE UUO.
110003 / 260140,,107766         PUSHJ    P,XGPSET             ;
110004 / 135040,,037574           LDB  TAC,037574             ;;GET THE MODE.
110005 / 301040,,000015          CAIL  TAC,000015             ;;IS THIS A DUMP MODE?
110006 / 254000,,107655          JRST      107655             ;;YES. WAIT FOR ALL IO AND STOP XGP
110007 / 260140,,065347         PUSHJ    P,065347             ;;DO ONE MORE OUTPUT.
110010 / 205000,,000002         MOVSI      000002             ;;NOW, READY TO INITIALIZE AGAIN.
110011 / 254000,,107766          JRST      107766             ;;SET IOBEG IN DEVIOS AND RETURN.
                       XOUT:
110012 / 201000,,740000         MOVEI      740000             ;;CLEAR ANY ERRORS
110013 / 260140,,107773         PUSHJ    P,107773             ;;...
110014 / 607000,,000002          TLNN      000002             ;;FIRST OPERATION?
110015 / 254000,,110036          JRST      110036             ;;NO.
110016 / 200740,,017162          MOVE  AC3,XGPBLN             ;
110017 / 336640,,016633         SKIPN  AC1,016633             ;;IN CASE SOMEONE LEFT IT HERE
110020 / 260140,,074361         PUSHJ    P,074361             ;;GET A BLOCK OF FREE STORAGE.
110021 / 202640,,016633         MOVEM  AC1,016633             ;;FIRST LOC OF BUFFER.
110022 / 202640,,016631         MOVEM  AC1,016631             ;;TAKE POINTER
110023 / 202640,,016632         MOVEM  AC1,016632             ;;PUT POINTER
110024 / 402000,,016635         SETZM      016635             ;;BUFFER COUNT.
110025 / 270640,,017162           ADD  AC1,XGPBLN             ;
110026 / 202640,,016634         MOVEM  AC1,016634             ;;END OF BUFFER+1
110027 / 260140,,110372         PUSHJ    P,110372             ;;IF WE NEED A FONT, GET ONE.
110030 / 254000,,110436          JRST      110436             ;;(N.B. DON'T CLEAR IOBEG!)
110031 / 260140,,107776         PUSHJ    P,PSYNCX             ;
110032 / 200000,,016566          MOVE      016566             ;;ONCE THIS IS SET UP,...
110033 / 621000,,000002           TLZ      000002             ;;NOW, NO LONGER THE BEGINNING
110034 / 260140,,107724         PUSHJ    P,SETXIO             ;
110035 / 260140,,107770         PUSHJ    P,XSYNCX             ;
                       XOUT1:
110036 / 200000,,016566          MOVE      016566             ;;IF ERRORS, REPORT THEM TO USER
110037 / 602000,,740000          TRNE      740000             ;;DON'T TRY TO GO ON.
110040 / 263140,,000000          POPJ    P,                   ;
110041 / 260140,,045307         PUSHJ    P,045307             ;;SET UP TO PROCESS THIS BUFFER
110042 / 254000,,110107          JRST      110107             ;;BUFFER IS ALREADY EMPTY?
110043 / 313700,,017162         CAMLE  AC2,017162             ;;COULD IT EVER FIT?
110044 / 254000,,110133          JRST      110133             ;;NO. FLUSH LOSER.
110045 / 322700,,110104         JUMPE  AC2,110104             ;;TAKE 2 GIANT STEPS IF EMPTY BUFFER
110046 / 200040,,017162          MOVE  TAC,XGPBLN             ;
110047 / 274040,,016635           SUB  TAC,016635             ;;TAC←SPACE REMAINING.
110050 / 303701,,000000         CAILE  AC2,      (TAC)        ;;IS THERE SPACE ENOUGH?
110051 / 254000,,110121          JRST      110121             ;;NO ROOM. WE HAVE TO WAIT
110052 / 200040,,016632          MOVE  TAC,  XPUT             ;
110053 / 315040,,016631         CAMGE  TAC, XTAKE             ;
110054 / 254000,,110072          JRST      110072             ;;PUT<TAKE DATA FITS FROM PUT TO TAKE
                       ;WE NEED TO DO ONLY ONE BLT.
110055 / 200100,,016634          MOVE TAC1,016634             ;;POINTER TO THE END OF THE BUFFER+1
110056 / 275101,,000000          SUBI TAC1,      (TAC)        ;;CALCULATE SPACE TO THE END.
110057 / 301116,,000000          CAIL TAC1,      (AC2)        ;;COMPARE WITH DATA SIZE...
110060 / 254000,,110072          JRST      110072             ;;ONE BLT WILL SUFFICE.
110061 / 505057,,000000          HRLI  TAC,      (AC3)        ;;S,,D FOR BLT
110062 / 200640,,016634          MOVE  AC1,016634             ;;END OF THE BLT+1
110063 / 251055,,777777           BLT  TAC,777777(AC1)        ;;FROM USER THRU THE END OF THE BUFFER.
110064 / 200040,,016633          MOVE  TAC,016633             ;;NEW XPUT INTO TAC.
110065 / 271742,,000000          ADDI  AC3,      (TAC1)       ;;MAKE NEW POINTER TO USER.
110066 / 275702,,000000          SUBI  AC2,      (TAC1)       ;;MAKE NEW COUNT.
110067 / 260140,,107776         PUSHJ    P,PSYNCX             ;
110070 / 272100,,016635          ADDM TAC1,016635             ;;INCREMENT THE BUFFER USE COUNT.
110071 / 260140,,107770         PUSHJ    P,XSYNCX             ;
                       XOUT2:
110072 / 505057,,000000          HRLI  TAC,      (AC3)        ;;DATA WILL FIT UPWARDS FROM PUT.
110073 / 201641,,000000         MOVEI  AC1,      (TAC)        ;;S,,D IN TAC.  D IN AC1.
110074 / 271656,,000000          ADDI  AC1,      (AC2)        ;;COMPUTE LAST DESTINATION OF BLT+1
110075 / 251055,,777777           BLT  TAC,777777(AC1)        ;;MOVE DATA.
110076 / 311640,,016634          CAML  AC1,016634             ;;IS POINTER AT THE END NOW?
110077 / 200640,,016633          MOVE  AC1,016633             ;;YES. WRAP BACK TO FRONT.
110100 / 202640,,016632         MOVEM  AC1,016632             ;;SAVE THE NEW PUT POINTER.
110101 / 260140,,107776         PUSHJ    P,PSYNCX             ;
110102 / 272700,,016635          ADDM  AC2,016635             ;;INCREMENT BUFFER SIZE.
110103 / 260140,,107770         PUSHJ    P,XSYNCX             ;
                       XOUT2A:
110104 / 260140,,044366         PUSHJ    P,044366             ;;ADVANCE THE OUTPUT BUFFER
110105 / 254000,,110107          JRST      110107             ;;NO MORE DATA THERE.
110106 / 254000,,110036          JRST      110036             ;;PROCESS NEXT BUFFER FULL.
                       XOUT3:
                       ;HERE IF SYSTEM BUFFER IS NOT FULL.
110107 / 603000,,000040          TLNE      000040             ;;IS THIS THE LAST UUO?
110110 / 337000,,016635         SKIPG      016635             ;;LAST UUO. IS THERE DATA TO SEND?
110111 / 263140,,000000          POPJ    P,                   ;;NO DATA OR NOT LAST (LET USER ADD MORE).
110112 / 402000,,016636         SETZM      016636             ;;ZERO WAITING SIZE ⊃ LAST UUO.
                       ;XGP WILL RESDUCE XBFCNT TO 0 BEFORE
                       ;REACTIVATING P1.
110113 / 260140,,110135         PUSHJ    P,110135             ;;YES. START XGP AND WAIT.
110114 / 254000,,110436          JRST      110436             ;;FONT COMPILER LOSES
110115 / 263140,,000000          POPJ    P,                   ;;HERE WE LOST WITH XGP ERROR.
110116 / 205000,,000040         MOVSI      000040             ;;NO LONGER LAST UUO.
110117 / 260140,,107773         PUSHJ    P,107773             ;;CLEAR BIT.
110120 / 254000,,107656          JRST      107656             ;;CLEAR OUT REMAINING BITS AND CELLS.
                       XOUT4:
                       ;HERE IF SYSTEM BUFFER TOO FULL.
110121 / 274700,,017162           SUB  AC2,XGPBLN             ;
110122 / 212700,,016636         MOVNM  AC2,016636             ;;WHEN XBFCNT≤XGPWSZ, P2 REACTIVATES P1.
                       ;SPACE THAT WE'LL NEED.
110123 / 607000,,000040          TLNN      000040             ;;LAST UUO?
110124 / 260140,,045301         PUSHJ    P,045301             ;;NOT LAST. CHECK BUFFER RING USE BIT.
110125 / 254000,,110127          JRST      110127             ;;USER HAS NO FREE BUFFERS. OR CLOSE UUO
110126 / 263140,,000000          POPJ    P,                   ;;WAIT UNTIL USER FILLS ALL HIS BUFFERS.
                       XOUT5:
110127 / 260140,,110135         PUSHJ    P,110135             ;;USER HAS NO FREE BUFFERS. START XGP. WAIT.
110130 / 254000,,110436          JRST      110436             ;;FONT COMPILER LOSES
110131 / 263140,,000000          POPJ    P,                   ;;WE LOST WITH XGP HUNG.
110132 / 254000,,110036          JRST      110036             ;;SYSTEM BUFFER ¬FULL. GOBBLE USER BUFFER.
                       XBTLRR:
110133 / 476000,,016611         SETOM      016611             ;;STOP THE XGP. GRIND. ARRGH.
110134 / 254000,,043300          JRST      043300             ;;GIVE USER A MESSAGE.
                       ;	XGPIOW	START XGP AND WAIT UNTIL IT EMPTIES THE BUFFER
                       XGPIOW:
110135 / 332000,,016625         SKIPE      016625             ;;ARE WE TELLING PDP-6 WE WANT PAPER?
110136 / 254000,,110147          JRST      110147             ;;YES. THEN PAPER MUST BE GOING.
                       ;NO IT'S TIME TO START XGP.
110137 / 337000,,016703         SKIPG      016703             ;;DOES FC EXIST?
110140 / 254000,,110143          JRST      110143             ;;NO SO DON'T LOCK IT
110141 / 260140,,110340         PUSHJ    P,FCLOCK             ;
110142 / 263140,,000000          POPJ    P,                   ;
                       XGPIO0:
110143 / 260140,,107662         PUSHJ    P,107662             ;;START THE XGP.
110144 / 200000,,016566          MOVE      XGPIOS             ;
110145 / 602000,,740000          TRNE      ERRMSK             ;
110146 / 254000,,037401          JRST      037401             ;;ERRORS.  TELL LOSER.
                       XGPIO1:
110147 / 205000,,001001         MOVSI      001001             ;;IOWAIT, SYSTEM BUFFER BUSY
110150 / 260140,,107766         PUSHJ    P,XGPSET             ;
110151 / 476000,,016626         SETOM      016626             ;;DATA IS IN CORE (SYSTEM) AND READY.
110152 / 211040,,000006         MOVNI  TAC,000006             ;;REQUE TO DEVICE WAIT...
110153 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
110154 / 260140,,046124         PUSHJ    P,WSCHED             ;
110155 / 200000,,016566          MOVE      XGPIOS             ;
110156 / 603000,,000001          TLNE      000001             ;;REALLY DONE?
110157 / 254000,,110147          JRST      110147             ;;NO
110160 / 254000,,037400          JRST      037400             ;;YES
                       ;	XGPUUO	COMMUNICATE TO/FROM THE FONT COMPILER
                       ;	CALLED BY CALL AC,['XGPUUO']
                       ;	AC LEFT POINTS TO FC CURRENT STATUS BLOCK. (20 WORDS)
                       ;	AC RIGHT POINTS TO FC NEW STATUS BLOCK.(20 WORDS)
                       ;	IF THERE IS NO NEW STATUS, JOB WILL BE REQUEUED TO WAIT.
                       XGPUUO:
110161 / 200044,,027420          MOVE  TAC,JBTPRV(J)          ;
110162 / 607040,,000002          TLNN  TAC,XGPPRV             ;
110163 / 263140,,000000          POPJ    P,                   ;;WRONG CREDENTIALS.
110164 / 402000,,016640         SETZM      016640             ;;ASSUME BY DEFALT, NULL OLD STATUS.
151520 / 554052,,000000          HLRZ  TAC,      (UCHN)       ;
110165 / 256200,,151520          XCTR   XR,151520             ;;GET THE OLD SATAUS ADDRESS.
110166 / 322040,,110175         JUMPE  TAC,110175             ;;JUMP IF THERE IS NO OLD STATUS
110167 / 201101,,000017         MOVEI TAC1,    17(TAC)        ;;CHECK ENDING ADDRESS FOR LEGALITY
152464 / 200102,,000000          MOVE TAC1,      (TAC1)       ;
110170 / 256200,,152464          XCTR   XR,152464             ;;WE LOSE CONTROL ON ADDRESS CHECK.
110171 / 271047,,000000          ADDI  TAC,      (PROG)       ;;ADDRESS OF NEW STATUS.
110172 / 205041,,000000         MOVSI  TAC,      (TAC)        ;;SOURCE
110173 / 541040,,016640          HRRI  TAC,016640             ;;OLD STATUS BLOCK
110174 / 251040,,016657           BLT  TAC,016657             ;;GOBBLE OLD STATUS
                       XGPUU1:
110175 / 260140,,110303         PUSHJ    P,110303             ;;REPORT OLD STATUS TO ONE WHO WAITS.
110176 / 260140,,110317         PUSHJ    P,110317             ;;AND PUT US TO BED.
151470 / 550052,,000000          HRRZ  TAC,      (UCHN)       ;
110177 / 256200,,151470          XCTR   XR,151470             ;;GET THE NEW STATUS ADDRESS.
110200 / 322040,,110207         JUMPE  TAC,110207             ;;JUMP IF NO NEW STATUS BLOCK.
110201 / 201101,,000017         MOVEI TAC1,    17(TAC)        ;;CHECK ENDING ADDRESS FOR LEGALITY
152464 / 200102,,000000          MOVE TAC1,      (TAC1)       ;
110202 / 256200,,152464          XCTR   XR,152464             ;
110203 / 505040,,016660          HRLI  TAC,016660             ;;NEW STATUS BLOCK
110204 / 271047,,000000          ADDI  TAC,      (PROG)       ;
110205 / 201101,,000017         MOVEI TAC1,    17(TAC)        ;
110206 / 251042,,000000           BLT  TAC,      (TAC1)       ;
                       XGPUU2:
110207 / 263140,,000000          POPJ    P,                   ;
                       ;	FONT COMPILER ROUTINES.  FCREQ, FCWAIT, XWAKE, XPAUSE,FCWAKE
                       ;	NEW STATUS FOR XGP HAS TO BE SET UP BEFORE CALL.
                       FCREQX:
110210 / 262140,,000004           POP    P,     J             ;
110211 / 200344,,027120          MOVE PROG,JBTADR(J)          ;
110212 / 254000,,107513          JRST      107513             ;;LOSE BECAUSE OF JOB CAPACITY EXCEEDED
                       FCREQ:
110213 / 332000,,016703         SKIPE      016703             ;;DOES FC EXIST?
110214 / 254000,,110246          JRST      110246             ;;YES. JUST WAKE IT UP.
110215 / 261140,,000004          PUSH    P,000004             ;;CREATE A FONT COMPILER
110216 / 260140,,051066         PUSHJ    P,051066             ;;ATTEMPT TO GLOM A JOB SLOT
110217 / 254000,,110210          JRST      110210             ;;NONE AVAILABLE
110220 / 254000,,110210          JRST      110210             ;;WAIT FOR FREE STORAGE. (CAN'T HAPPEN).
151571 / 704760,,637163                                       ;
110221 / 200740,,151571          MOVE  AC3,151571             ;;PPN OF FONT COMPILER.
110222 / 202744,,027720         MOVEM  AC3,PRJPRG(J)          ;
110223 / 202744,,030442         MOVEM  AC3,JOBPPN(J)          ;
151603 / 731546,,431575                                       ;
110224 / 200640,,151603          MOVE  AC1,151603             ;;NAME OF FONT COMPILER.
110225 / 202644,,030142         MOVEM  AC1,JOBNAM(J)          ;
110226 / 260140,,072454         PUSHJ    P,NAMSTT             ;
110227 / 205640,,000002         MOVSI  AC1,XGPPRV             ;
110230 / 202644,,027420         MOVEM  AC1,JBTPRV(J)          ;
110231 / 202644,,027520         MOVEM  AC1,JB2PRV(J)          ;;ALSO PASSIVE ONES
110232 / 205640,,040000         MOVSI  AC1,   JNA             ;
110233 / 436644,,026114          IORM  AC1,JBTSTS(J)          ;
110234 / 202200,,016703         MOVEM    J, XFCJN             ;
110235 / 242200,,000014           LSH    J,000014             ;
152260 / 047451,,000001                                       ;
110236 / 270200,,152260           ADD    J,152260             ;;PLANT CLOCK REQUEST.
110237 / 700600,,000400          CONO   PI, PIOFF             ;
110240 / 136200,,024117          IDPB    J, CLOCK             ;
110241 / 700600,,000200          CONO   PI,  PION             ;
110242 / 262140,,000004           POP    P,000004             ;;RESTORE J AND WAIT.
110243 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;RESET THIS
110244 / 260140,,110255         PUSHJ    P,110255             ;;AND WAIT FOR IT TO TELL US 'READY'
110245 / 254000,,107514          JRST      107514             ;;OOPS.
                       FCREQ1:
110246 / 200044,,027720          MOVE  TAC,PRJPRG(J)          ;
110247 / 202040,,016677         MOVEM  TAC,016677             ;;SET USER PPN AS PART OF NEW STATUS
110250 / 202200,,016676         MOVEM    J,016676             ;;AND USER JOB NUMBER TOO.
110251 / 260140,,110327         PUSHJ    P,110327             ;;WAKE THE FONT COMPILER.  GIVE IT NEW STATUS
110252 / 260140,,110255         PUSHJ    P,110255             ;;WAIT FOR FC TO RESPOND
110253 / 254000,,107515          JRST      107515             ;;OOPS.
110254 / 254000,,037401          JRST      037401             ;;CALLER WILL INSPECT FC STATUS.
                       FCWAIT:
110255 / 200040,,016702          MOVE  TAC,XCLKNM             ;
110256 / 242040,,000014           LSH  TAC,000014             ;
152330 / 110300,,007020                                       ;
110257 / 270040,,152330           ADD  TAC,152330             ;
110260 / 700600,,000400          CONO   PI, PIOFF             ;
110261 / 136040,,024117          IDPB  TAC, CLOCK             ;
110262 / 700600,,000200          CONO   PI,  PION             ;
                       ;HERE XGPSER WAITS FOR FC (OR TIMEOUT)
110263 / 476000,,016700         SETOM      016700             ;;FLAG THAT WE ARE WAITING FOR FC
110264 / 402000,,016704         SETZM      016704             ;;INITIALLY, NO ERROR.
                       FCWAT1:
110265 / 211040,,000005         MOVNI  TAC,  IOWQ             ;
110266 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
110267 / 260140,,046124         PUSHJ    P,046124             ;;DELAY
110270 / 332000,,016700         SKIPE      016700             ;;IS THIS WAKEUP LEGITIMATE?
110271 / 254000,,110265          JRST      110265             ;;NO. WAIT MORE.
110272 / 332000,,016704         SKIPE      016704             ;;CLOCK TIME OUT?
110273 / 263140,,000000          POPJ    P,                   ;;YES. FAILURE. (OOPS)
110274 / 350040,,016702           AOS  TAC,016702             ;;CANCEL THE CLOCK REQUEST.
110275 / 303040,,000077         CAILE  TAC,    77             ;
110276 / 402000,,016702         SETZM      XCLKNM             ;
110277 / 254000,,037401          JRST      037401             ;;RETURN SUCCESS.
                       FCRQCK:
110300 / 312040,,016702          CAME  TAC,XCLKNM             ;
110301 / 263140,,000000          POPJ    P,                   ;
110302 / 476000,,016704         SETOM      016704             ;;CLOCK ERROR
                       ;HERE FC (OR TIMEOUT) WAKES XGPSER
                       XWAKE:
110303 / 402000,,016700         SETZM      016700             ;;XGP NOT WAITING FOR FC ANY MORE.
110304 / 261140,,000004          PUSH    P,     J             ;
110305 / 201300,,016564         MOVEI  DDB,XGPDDB             ;
110306 / 135200,,037575           LDB    J, PJOBN             ;
110307 / 322200,,110315         JUMPE    J,XWAKE1             ;
110310 / 331004,,026114         SKIPL      JBTSTS(J)          ;;DON'T START HIM IF HE CANT RUN
110311 / 254000,,110315          JRST      XWAKE1             ;
110312 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
110313 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
110314 / 260140,,046027         PUSHJ    P, REQUE             ;
                       XWAKE1:
110315 / 262140,,000004           POP    P,     J             ;
110316 / 263140,,000000          POPJ    P,                   ;
                       ;HERE THE FC WAITS FOR XGPSER
                       XPAUSE:
110317 / 476000,,016701         SETOM      016701             ;;FC WAITS FOR SYSTEM
110320 / 552340,,016705         HRRZM PROG,016705             ;;SAVE REL ADDRESS OF FC
110321 / 211040,,000005         MOVNI  TAC,  IOWQ             ;
110322 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
110323 / 260140,,046124         PUSHJ    P,WSCHED             ;
110324 / 332000,,016701         SKIPE      XGPFC2             ;
110325 / 254000,,110317          JRST      110317             ;;WOKEN FOR THE WRONG REASON
110326 / 263140,,000000          POPJ    P,                   ;
                       ;HERE XGPSER WAKES UP THE FC
                       FCWAKE:
110327 / 261140,,000004          PUSH    P,000004             ;;WAKE UP FC
110330 / 402000,,016701         SETZM      016701             ;;FC NOT WAITING FOR SYSTEM ANY MORE
110331 / 333200,,016703        SKIPLE    J,016703             ;;SKIP IF THERE'S NO SUCH JOB
110332 / 331004,,026114         SKIPL      JBTSTS(J)          ;;JOB EXISTS. SKIP IF IT CAN BE RUN
110333 / 254000,,110315          JRST      110315             ;;CANT RUN OR NO SUCH JOB
110334 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
110335 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
110336 / 260140,,046027         PUSHJ    P, REQUE             ;
110337 / 254000,,110315          JRST      XWAKE1             ;
                       ;	MORE ROUTINES FOR FC
                       FCLOCK:
110340 / 201040,,000003         MOVEI  TAC,     3             ;
110341 / 202040,,016660         MOVEM  TAC,XGPNST             ;
110342 / 260140,,110213         PUSHJ    P, FCREQ             ;
110343 / 263140,,000000          POPJ    P,                   ;;TIME OUT.  ERROR CODE IS SET ALREADY
110344 / 332000,,016640         SKIPE      016640             ;;EXPECTED REPLY IS 'READY'
110345 / 254000,,107537          JRST      107537             ;;BARF! SET EXTENDED ERRORS
110346 / 254000,,037401          JRST      CPOPJ1             ;
                       FCKILL:
110347 / 402000,,016660         SETZM      XGPNST             ;
110350 / 402000,,016706         SETZM      016706             ;;CLEAR OUT OUR MEMORY OF OLD FONTS
152171 / 016706,,016707                                       ;
110351 / 200040,,152171          MOVE  TAC,152171             ;
110352 / 251040,,016725           BLT  TAC,016725             ;
110353 / 337040,,016703         SKIPG  TAC,016703             ;;GET OLD JOB NUMBER
110354 / 263140,,000000          POPJ    P,                   ;
110355 / 205100,,000002         MOVSI TAC1,XGPPRV             ;
                       ;IFE FTSTAT
110356 / 616101,,027420          TDNN TAC1,JBTPRV(TAC)        ;
110357 / 254000,,110365          JRST      $FCKIL             ;
110360 / 402001,,030142         SETZM      JOBNAM(TAC)        ;
110361 / 261140,,000004          PUSH    P,     J             ;
110362 / 200200,,000001          MOVE    J,   TAC             ;
110363 / 260140,,072454         PUSHJ    P,NAMSTT             ;
110364 / 262140,,000004           POP    P,     J             ;
                       $FCKIL:
                       ;FTSTAT
110365 / 412101,,027420        ANDCAM TAC1,JBTPRV(TAC)        ;;CLEAR OUT PRIVILEGES
110366 / 260140,,110327         PUSHJ    P,110327             ;;WAKE HIM UP TO DIE.
110367 / 402000,,016703         SETZM       XFCJN             ;
110370 / 263140,,000000          POPJ    P,                   ;
                       XBIDSP:
110371 / 000000,,004001                                       ;;BITS ON FOR MODES THAT NEED FONTS
                       NFONT:
110372 / 135040,,037574           LDB  TAC,037574             ;;GET THE MODE AGAIN
110373 / 201100,,000001         MOVEI TAC1,     1             ;
110374 / 242101,,000000           LSH TAC1,      (TAC)        ;
110375 / 616100,,110371          TDNN TAC1,110371             ;;NEEDING A FONT?
110376 / 254000,,037401          JRST      037401             ;;NO.
110377 / 201040,,000001         MOVEI  TAC,000001             ;;ALLOCATE COMMAND
110400 / 202040,,016660         MOVEM  TAC,XGPNST             ;
110401 / 200040,,017160          MOVE  TAC,017160             ;;NUMBER OF TEXT NODES
110402 / 221040,,000100         IMULI  TAC,000100             ;;TIMES THEIR SIZE
110403 / 202040,,016661         MOVEM  TAC,016661             ;;STORE
110404 / 200040,,017161          MOVE  TAC,017161             ;;NUMBER OF VECTOR NODES
110405 / 221040,,000005         IMULI  TAC,000005             ;;TIMES THEIR SIZE
110406 / 272040,,016661          ADDM  TAC,016661             ;;ADD TO TEXT NODE SPACE, TOTAL NODE SPACE NEEDED
110407 / 260140,,110213         PUSHJ    P,110213             ;;REQUEST ALLOCATION FROM FC
110410 / 263140,,000000          POPJ    P,                   ;;LOSE.
110411 / 200040,,016640          MOVE  TAC,XGPOST             ;
110412 / 302040,,000001          CAIE  TAC,000001             ;;EXPECTED RESPONSE IS 'ALLOCATION MADE'
110413 / 254000,,107537          JRST      107537             ;;UNEXPECTED RESPONSE.
110414 / 200040,,016641          MOVE  TAC,016641             ;
110415 / 202040,,017042         MOVEM  TAC,017042             ;;SAVE ADDRESS OF THE ALLOCATION.
110416 / 332000,,016706         SKIPE      016706             ;;YES. WE NEED A FONT. SKIP UNLESS WE HAVE ONE.
110417 / 254000,,037401          JRST      037401             ;;NO. MAKES THINGS EASY.
110420 / 402000,,016661         SETZM      016661             ;
110421 / 402000,,016662         SETZM      016662             ;
110422 / 402000,,016663         SETZM      016663             ;
110423 / 402000,,016664         SETZM      016664             ;
110424 / 201040,,000002         MOVEI  TAC,     2             ;
110425 / 202040,,016660         MOVEM  TAC,XGPNST             ;
110426 / 260140,,110213         PUSHJ    P, FCREQ             ;
110427 / 263140,,000000          POPJ    P,                   ;;TIME OUT. ERROR CODE IS SET ALREADY.
110430 / 200040,,016640          MOVE  TAC,XGPOST             ;
110431 / 302040,,000002          CAIE  TAC,     2             ;
110432 / 254000,,107537          JRST      107537             ;;ERROR. UNEXPECTED RESPONSE.  SET EXTENDED ERROR
110433 / 200040,,016641          MOVE  TAC,016641             ;
110434 / 202040,,016706         MOVEM  TAC,016706             ;;STOW FONT ADDRESS
110435 / 254000,,037401          JRST      CPOPJ1             ;
                       F_LOSE:
110436 / 201000,,100000         MOVEI      100000             ;;USE THIS BIT FOR FC LOSSAGE
110437 / 254000,,107766          JRST      107766             ;;SET BIT IN IOS AND RETURN TO UUOCON.
                       ;	INTERPROCESSOR COMMUNICATION AT CLOCK LEVEL. HUNG TIMEOUT
                       HUNG:
110440 / 336000,,016624         SKIPN      016624             ;;IS THE MAJIC CELL SET?
110441 / 254000,,110446          JRST      110446             ;;NO.. IT MUST REALLY BE HUNG
110442 / 402000,,016624         SETZM      XGPAOK             ;
110443 / 135040,,037610           LDB  TAC,PDVTIM             ;
110444 / 137040,,037611           DPB  TAC,037611             ;;RESET HUNG TIME..
110445 / 254000,,037401          JRST      037401             ;;THE XGP IS STILL THERE.
                       HUNG1:
110446 / 476000,,016611         SETOM      016611             ;;KILL THE XGP
110447 / 201000,,400000         MOVEI      400000             ;;TELL HIM AN ERROR.
110450 / 260140,,107766         PUSHJ    P,107766             ;;SET BITS
110451 / 260140,,107520         PUSHJ    P,107520             ;;SET ERROR CODE
110452 / 602000,,000200          TRNE      000200             ;;IS USER ENABLED TO HANDLE HUNG XGP?
110453 / 350003,,000000           AOS            (P)          ;;YES.  DON'T GIVE HIM HUNG DEVICE THEN.
110454 / 260140,,107656         PUSHJ    P,107656             ;;SHUT OFF XGPGO, XGPBIT
152073 / 001000,,010000                                       ;
110455 / 200000,,152073          MOVE      152073             ;
110456 / 260140,,107773         PUSHJ    P,107773             ;;CLEAR IOACT AND KICK THE PDP-10
                       ;PDP-10 HERE 
                       XGPP1:
110457 / 402000,,016604         SETZM      016604             ;;CLEAR REQUEST SET BY P2.
110460 / 201300,,016564         MOVEI  DDB,016564             ;;DDB ADDRESS FOR STTIOD
110461 / 260140,,107776         PUSHJ    P,PSYNCX             ;
110462 / 200000,,016566          MOVE      XGPIOS             ;
110463 / 623000,,000001          TLZE      000001             ;;WAS HE IN WAIT?
110464 / 260140,,046105         PUSHJ    P,046105             ;;YES, GET HIM OUT FAST
110465 / 202000,,016566         MOVEM      XGPIOS             ;
110466 / 254000,,107770          JRST      107770             ;;UNSYNCHRONIZE AND POPJ
                       ;	PDP-6 HERE EVERY SECOND TO MAKE SURE THAT XGP IS RUNNING.
                       XGPP2:
110467 / 201040,,000074         MOVEI  TAC,JIFSEC             ;
110470 / 202040,,016605         MOVEM  TAC,016605             ;;BACK HERE IN 1 SECOND.
110471 / 201040,,000000         MOVEI  TAC,                   ;;
110472 / 250040,,000725          EXCH  TAC,000725             ;;
110473 / 326040,,037403         JUMPN  TAC,037403             ;;XGP HAS INTERRUPTED.
110474 / 744300,,000100         CONSZ  XGP,000100             ;;IS THE XGP STILL HAPPY?
110475 / 263140,,000000          POPJ    P,                   ;;NO. WELL, WHAT CAN I DO?
110476 / 700600,,001040          CONO   PI,001040             ;;SNEAK IN.
110477 / 744200,,160102          CONO  XGP,160102             ;;ASSIGN PI CHANNEL. WAIT FOR INTERRUPT.
110500 / 260140,,110671         PUSHJ    P,110671             ;;SET UP TO RESYNCHRONIZE.
110501 / 700600,,002040          CONO   PI,002040             ;;MAKE SURE CHANNEL IS LISTENING.
110502 / 263140,,000000          POPJ    P,                   ;;RETURN TO CLOCK LEVEL.
                       ;	User Programming for the XGP
                       ;	INTERRUPT LEVEL ROUTINES
                       ;LOCATIONS MARKED WITH *1 ARE FIRST LEVEL DISPATCH TARGETS.
                       ;LOCATIONS MARKED WITH *2 ARE SECOND LEVEL DISPATCH TARGETS.
                       ;LOCATIONS MARKED WITH *4 ARE DISPATCH TARGETS AT PI CHANNEL 4. (TEXT MODE)
                       SDISP1:
110503 / 202040,,016620         MOVEM  TAC,016620             ;;JSP TAC,SDISP1 TO SET NEW DISPATCH ADDRESS
110504 / 263140,,000000          POPJ    P,                   ;;JSR XGPSAV MUST HAVE BEEN DONE ALREADY.
                       XGPINT:
110505 / 744200,,160112          CONO  XGP,160112             ;;CLEAR DONE. SET DONE ENABLE, ETC.
110506 / 373000,,017070         SOSLE      017070             ;;DECREMENT FLAPPER COUNT
110507 / 254000,,110523          JRST      XGINT1             ;
110510 / 202040,,016627         MOVEM  TAC,016627             ;;SAVE TAC
110511 / 201040,,000144         MOVEI  TAC,000144             ;
110512 / 202040,,017070         MOVEM  TAC,017070             ;;SET UP FLAPPER COUNT
110513 / 200040,,017066          MOVE  TAC,017066             ;;WORD 1
110514 / 250100,,017067          EXCH TAC1,017067             ;;WORD 2
110515 / 246040,,000001          LSHC  TAC,000001             ;;SHIFT THEM BOTH
110516 / 202040,,017066         MOVEM  TAC,017066             ;;STORE 1
110517 / 250100,,017067          EXCH TAC1,017067             ;;AND 2
110520 / 602040,,001000          TRNE  TAC,001000             ;;TIME TO FLAP?
152012 / 000020,,000000                                       ;
110521 / 750140,,152012         DATAO  500,152012             ;;YES: FLAP THE FLAPPER
110522 / 200040,,016627          MOVE  TAC,XGPTMP             ;
                       XGINT1:
110523 / 372000,,017071          SOSE      017071             ;;TIME TO CUT NOW?
110524 / 254000,,110533          JRST      110533             ;;NO.
110525 / 744200,,170002          CONO  XGP,170002             ;
110526 / 370000,,017151           SOS      XCUTBP             ;
110527 / 202040,,016627         MOVEM  TAC,XGPTMP             ;
152172 / 017072,,017071                                       ;
110530 / 200040,,152172          MOVE  TAC,152172             ;
110531 / 251040,,017147           BLT  TAC,017147             ;;MOVE QUEUE NODES DOWN
110532 / 200040,,016627          MOVE  TAC,XGPTMP             ;
                       XGINT2:
110533 / 744300,,000100         CONSZ  XGP,000100             ;;IS THE XGP STILL ALIVE?
110534 / 254000,,110654          JRST      110654             ;;INTERFACE REPORTS XGP LOSSAGE.
110535 / 476000,,016624         SETOM      016624             ;;TELL PDP-10 THAT WE STILL SEE INTERRUPTS.
110536 / 744200,,140000          CONO  XGP,  SETX             ;
110537 / 744200,,170004          CONO  XGP,170004             ;
110540 / 744200,,140000          CONO  XGP,  SETX             ;
110541 / 254020,,016620          JRST      @016620            ;;DISPATCH LEVEL1
                       ;*1	HERE TO ESTABLISH XGP SYNCHRONIZATION.
                       XGSYNC:
110542 / 402000,,017003         SETZM      XGPIGO             ;
110543 / 373000,,016606         SOSLE      016606             ;;COUNT BUFFER SWITCHES.
110544 / 254520,,000725           JEN      @000725            ;;DISMISS INTERRUPT
110545 / 264000,,001561           JSR      XGPSAV             ;
110546 / 201040,,010000         MOVEI  TAC,010000             ;
110547 / 202040,,016606         MOVEM  TAC,XYNCNT             ;
                       XGIDLE:
110550 / 265040,,110503           JSP  TAC,110503             ;;WE ARE NOW IN SYNC. -SET TO IDLE
                       ;*1	HERE TO MAINTAIN SYNCHRONIZATION.
110551 / 202040,,016627         MOVEM  TAC,XGPTMP             ;
110552 / 200040,,016625          MOVE  TAC,XGPBIT             ;
110553 / 326040,,110556         JUMPN  TAC,110556             ;;IS THE PDP-10 REQUESTING ACTION?
110554 / 200040,,016627          MOVE  TAC,XGPTMP             ;
110555 / 254520,,000725           JEN      @000725            ;;KEEP IDLING.
                       XGSYGO:
110556 / 200040,,016627          MOVE  TAC,XGPTMP             ;
110557 / 264000,,001561           JSR      XGPSAV             ;
110560 / 201040,,001130         MOVEI  TAC,001130             ;;SET UP COUNT
110561 / 202040,,016607         MOVEM  TAC,XGPCNT             ;
110562 / 265040,,110503           JSP  TAC,110503             ;;SET NEW DISPATCH AND DISMISS
                       ;*1 	RUN THE PAPER FOR 600 LINES UNTIL IT'S GOING FAST ENOUGH.
110563 / 744200,,160132          CONO  XGP,160132             ;;START THE PAPER.
110564 / 373000,,016607         SOSLE      XGPCNT             ;
110565 / 254520,,000725           JEN      @XGPCHL            ;
110566 / 264000,,001561           JSR      XGPSAV             ;
110567 / 205000,,000200         MOVSI      XPAPER             ;
110570 / 260140,,107776         PUSHJ    P,107776             ;;SET A BIT IN IOS,
110571 / 436000,,016566          IORM      XGPIOS             ;
110572 / 200000,,016625          MOVE      016625             ;;THIS CELL HOLDS THE PDP-10'S DESIRES.
110573 / 322000,,110575         JUMPE      110575             ;
                       PAPOON:
110574 / 476000,,016604         SETOM      016604             ;;TELL PDP-10 TO LOOK.
152073 / 001000,,010000                                       ;
110575 / 200000,,152073          MOVE      152073             ;
110576 / 412000,,016566        ANDCAM      XGPIOS             ;
110577 / 260140,,107770         PUSHJ    P,XSYNCX             ;
110600 / 265040,,110503           JSP  TAC,110503             ;;SET NEW DISPATCH.
                       ;*1	HERE WE WAIT UNTIL PDP-10 SAYS DATAREADY
110601 / 744200,,160132          CONO  XGP,SETALL             ;
110602 / 264000,,001561           JSR      XGPSAV             ;
110603 / 200000,,016611          MOVE      XGPKIL             ;
110604 / 326000,,110620         JUMPN      110620             ;;JUMP IF PDP-10 IS KILLING THIS TRANSFER.
110605 / 200000,,016626          MOVE       XGPGO             ;
110606 / 322000,,037403         JUMPE       CPOPJ             ;
110607 / 265040,,110503           JSP  TAC,110503             ;;SET NEW DISPATCH AND DISMISS.
                       ;*1	HERE FOR INTERRUPT AND WE WANT TO SEND DATA.
                       XMITIN:
                       ;DATA TRANSMIT INTERRUPT.
110610 / 476000,,017003         SETOM      017003             ;;I-LEVEL DATA TRANSFER IN PROGRESS.
110611 / 744200,,160132          CONO  XGP,160132             ;;CLEAR DONE, SET DONE ENABLE,PI, AND PAPER
110612 / 264000,,001561           JSR      001561             ;;SAVE ALL AC'S FOR I LEVEL CODE.
110613 / 200040,,016611          MOVE  TAC,016611             ;;LOOK TO SEE IF PDP-10 HAS TIMED OUT
110614 / 326040,,110620         JUMPN  TAC,110620             ;;PDP-10 THINKS WE'RE HUNG. STOP QUICK.
110615 / 260160,,016622         PUSHJ    P,@016622            ;;DISPATCH ACCORDING TO DATA MODE.
110616 / 263140,,000000          POPJ    P,                   ;;NORMAL RETURN. DISMISS.
110617 / 254000,,110621          JRST      110621             ;;END OF TRANSFER.
                       XMITFF:
110620 / 260140,,110700         PUSHJ    P,110700             ;;FORCED END. CUT PAPER.
                       XMITFG:
110621 / 201540,,001216         MOVEI  PID,001216             ;;MAKE SURE PID IS RIGHT.
110622 / 260140,,107776         PUSHJ    P,PSYNCX             ;
152073 / 001000,,010000                                       ;
110623 / 200000,,152073          MOVE      152073             ;
110624 / 412000,,016566        ANDCAM      XGPIOS             ;
110625 / 402000,,016625         SETZM      016625             ;;CLEAR XGPBIT SO IF THE 10 HANGS, WE DONT
110626 / 402000,,017003         SETZM      017003             ;;I-LEVEL DATA XFER IDLE.
110627 / 476000,,016604         SETOM      016604             ;;TELL PDP-10 THAT DATA XFER COMPLETE
                       ;TRANSMISSION DONE. COUNT AS THE PAPER RUNS OUT 5000 LINES.
                       ;CUT THE PAPER EVERY 2200 LINES (11 INCHES) SO THE STACKER WILL NOT HAVE
                       ;20 INCH PAGES TO CONTEND WITH.
110630 / 201040,,000020         MOVEI  TAC,000020             ;
110631 / 202040,,016610         MOVEM  TAC,016610             ;;16 TIMES 263 LINES
                       XMITD1:
110632 / 260140,,107770         PUSHJ    P,107770             ;;RELEASE INTERLOCK
110633 / 201040,,000423         MOVEI  TAC,000423             ;
110634 / 202040,,016607         MOVEM  TAC,XGPCNT             ;
110635 / 265040,,110503           JSP  TAC,SDISP1             ;
                       ;*1	HERE AFTER COMMAND LIST HAS RUN OUT. COUNT PAPER FEED.
110636 / 373000,,016607         SOSLE      016607             ;;COUNT PAPER FEED
110637 / 254520,,000725           JEN      @XGPCHL            ;
110640 / 264000,,001561           JSR      XGPSAV             ;
110641 / 260140,,107776         PUSHJ    P,PSYNCX             ;
110642 / 373040,,016610         SOSLE  TAC,XGPCNY             ;
110643 / 606040,,000007          TRNN  TAC,     7             ;
110644 / 260140,,110677         PUSHJ    P,110677             ;;QUEUE CUT (MARK PAPER TOO SO WE DON'T FORGET)
110645 / 327040,,110632         JUMPG  TAC,110632             ;;TIME TO STOP COUNTING THE PAPER?
110646 / 205000,,000200         MOVSI      000200             ;;WE WANT TO CLEAR THIS.
110647 / 200040,,016625          MOVE  TAC,016625             ;;DOES PDP-10 HAVE THIS BIT ON?
110650 / 326040,,110574         JUMPN  TAC,110574             ;;YES. THEN DON'T CLEAR IT!
110651 / 412000,,016566        ANDCAM      XGPIOS             ;
110652 / 260140,,107770         PUSHJ    P,XSYNCX             ;
110653 / 254000,,110550          JRST      110550             ;;SET IDLE DISPATCH.
                       ;	HERE FOR 'NOT XGPOK'	ALSO, QUEUE CUT MARKS.
                       XIHUNG:
110654 / 264000,,001561           JSR      XGPSAV             ;
110655 / 200040,,016625          MOVE  TAC,016625             ;;ARE WE SUPPOSED TO BE DOING SOMETHING?
110656 / 205000,,000200         MOVSI      000200             ;;
110657 / 616000,,016566          TDNN      016566             ;;
110660 / 322040,,110671         JUMPE  TAC,110671             ;;WE HAVE BEEN IDLE.
110661 / 260140,,107776         PUSHJ    P,PSYNCX             ;
110662 / 402000,,016625         SETZM      016625             ;;WE ARE GOING TO BE IDLE.
110663 / 201040,,200000         MOVEI  TAC,200000             ;;SET ERROR FLAG.
110664 / 436040,,016566          IORM  TAC,XGPIOS             ;
110665 / 413000,,016566        ANDCAB      016566             ;;TURN OFF XPAPER IN XGPIOS.
110666 / 260140,,107520         PUSHJ    P,107520             ;;XGP IS NOT OK.
110667 / 476000,,016604         SETOM      016604             ;;TELL THE PDP-10 WE LOST.
110670 / 260140,,107770         PUSHJ    P,XSYNCX             ;
                       XIHNG0:
110671 / 201040,,010000         MOVEI  TAC,010000             ;
110672 / 202040,,016606         MOVEM  TAC,XYNCNT             ;
110673 / 201040,,110542         MOVEI  TAC,110542             ;;SET DISPATCH TO RESYNCHRONIZE XGP.
110674 / 202040,,016620         MOVEM  TAC,016620             ;;
110675 / 202040,,017003         MOVEM  TAC,017003             ;;NOT IN DATA PORTION OF I-LEVEL
110676 / 263140,,000000          POPJ    P,                   ;;(POSITIVE DENOTES UNHAPPY!)
                       QCUT0:
110677 / 744200,,170001          CONO  XGP,170001             ;;MARK PAPER TOO (SO WE DON'T FORGET)
                       QCUT:
110700 / 261140,,000001          PUSH    P,   TAC             ;
110701 / 261140,,000002          PUSH    P,  TAC1             ;
110702 / 201040,,017071         MOVEI  TAC,017071             ;;GET THE ADDRESS OF THE CUT QUEUE
110703 / 201100,,011052         MOVEI TAC1,011052             ;;THIS IS THE CUT DELAY (TWIDDLE)
                       QCUT1:
110704 / 303060,,017151         CAILE  TAC,@017151            ;;ARE WE STILL IN THE LIST?
110705 / 254000,,110710          JRST      110710             ;;NO. (DONE)
110706 / 274101,,000000           SUB TAC1,      (TAC)        ;;DECREMENT
110707 / 344040,,110704          AOJA  TAC,110704             ;;LOOK FOR MORE
                       QCUT2:
110710 / 303100,,000144         CAILE TAC1,000144             ;;CUT TOO SMALL?
110711 / 136100,,017151          IDPB TAC1,017151             ;;NO. ADD IT TO THE QUEUE
110712 / 262140,,000002           POP    P,  TAC1             ;
110713 / 254000,,037376          JRST      037376             ;;RESTORE TAC AND RETURN
                       ;	MODE 17 I-LEVEL
                       ;XGPIWD HAS ABSOLUTE AOBJN POINTER
                       ;XGPMDP HAS PROG,,REL ADDRESS OF THIS IOWD.
                       ;XGPROG HAS RELOCATION OF CURRENT JOB.
                       ;*2	HERE AT FIRST LINE OF TRANSFER, OR FIRST LINE OF PAGE
                       XDI:
110714 / 402000,,016735         SETZM      016735             ;;COUNT SCAN-LINES.
110715 / 201040,,110721         MOVEI  TAC,XDILIN             ;
110716 / 202040,,016622         MOVEM  TAC,XDISP2             ;
110717 / 254000,,110721          JRST      XDILIN             ;
                       XDI4:
110720 / 265740,,111032           JSP  AC3,111032             ;;HERE TO ADVANCE TO NEXT COMMAND
                       ;*2	HERE WE KNOW THAT WE ARE ON A NEW SCAN LINE.
                       XDILIN:
110721 / 200040,,016612          MOVE  TAC,016612             ;;GET CURRENT IOWD
110722 / 325040,,110720        JUMPGE  TAC,110720             ;;JUMP IF IT HAS RUN OUT.
                       XDI0:
110723 / 200241,,000000          MOVE  DAT,      (TAC)        ;;GET GROUP COMMAND WORD.
110724 / 202240,,016617         MOVEM  DAT,016617             ;;SAVE IT.
110725 / 135240,,107361           LDB  DAT,107361             ;;GET THE LINE SKIP COUNT
110726 / 272240,,016735          ADDM  DAT,016735             ;;COUNT SCAN-LINES
110727 / 363240,,110737         SOJLE  DAT,110737             ;;JUMP IF THERE ARE NO LINES TO SKIP.
110730 / 202240,,016607         MOVEM  DAT,016607             ;;SAVE COUNT
110731 / 264000,,016622           JSR      016622             ;;SET DISPATCH AND DISMISS INTERRUPT.
                       ;*2	HERE TO SKIP LINES FOR A WHILE.
110732 / 373000,,016607         SOSLE      016607             ;;DECREMENT COUNT OF LINES TO SKIP.
110733 / 263140,,000000          POPJ    P,                   ;;DISMISS
110734 / 201240,,110721         MOVEI  DAT,110721             ;;RESET INTERRUPT DISPATCH
110735 / 202240,,016622         MOVEM  DAT,XDISP2             ;
110736 / 200040,,016612          MOVE  TAC,016612             ;;REFORM AC'S.
                       XDI1:
110737 / 135240,,107362           LDB  DAT,107362             ;;HOW FAR TO SKIP?
110740 / 744205,,140000          CONO  XGP,  SETX(DAT)        ;;SET X POSITION IN XGP
110741 / 253040,,110742         AOBJN  TAC,110742             ;;ADVANCE AOBJN POINTER.
110742 / 202040,,016612         MOVEM  TAC,XGPIWD             ;
                       XDI1A:
110743 / 564100,,000001          HLRO TAC1,000001             ;;GET -(COUNT REMAINING)
110744 / 214100,,000002          MOVM TAC1,000002             ;;GET (COUNT REMAINING)
110745 / 135640,,107360           LDB  AC1,107360             ;;GET DATA COUNT FROM USER
110746 / 201315,,000000         MOVEI  DDB,      (AC1)        ;;A COPY.
110747 / 303642,,000000         CAILE  AC1,      (TAC1)       ;;DATA COUNT SHOULD BE SMALLER
110750 / 201642,,000000         MOVEI  AC1,      (TAC1)       ;;SET TO MAX ALLOWED COUNT.
110751 / 275315,,000000          SUBI  DDB,      (AC1)        ;;REMAINDER AFTER OVERFLO.
110752 / 137300,,107360           DPB  DDB,107360             ;;SAVE REMAINDER.
110753 / 201115,,000000         MOVEI TAC1,      (AC1)        ;;AND THIS IS HOW WE FIX IOWD
110754 / 505102,,000000          HRLI TAC1,      (TAC1)       ;
110755 / 272100,,016612          ADDM TAC1,016612             ;;FIX AOBJN POINTER.
110756 / 322640,,111011         JUMPE  AC1,111011             ;;POSSIBLE ZERO DATA WORDS.
110757 / 211655,,000000         MOVNI  AC1,      (AC1)        ;;AND FORM AOBJN POINTER IN TAC
110760 / 505055,,000000          HRLI  TAC,      (AC1)        ;
110761 / 200640,,000001          MOVE  AC1,000001             ;;AOBJN POINTER IN AC1
110762 / 202140,,016627         MOVEM    P,016627             ;;SAVE PUSHDOWN POINTER
110763 / 205540,,110766         MOVSI   13,110766             ;;SOURCE,,DESTINATION
110764 / 251540,,000013           BLT   13,000013             ;;STUFF CODE IN AC'S
110765 / 254000,,000000          JRST                         ;;JUMP INTO THE START
                       ;RUN THE INNER LOOP IN THE AC'S.
                       XDI2:
                       XDI2A:
110766 / 200755,,000000          MOVE  AC3,      (AC1)        ;;0 GET 36 BITS OF VIDEO DATA.
110767 / 201700,,000000         MOVEI  AC2,                   ;;1
110770 / 246700,,000020          LSHC  AC2,000020             ;;2
110771 / 744140,,000016         DATAO  XGP,000016             ;;3 SEND 16 BITS
110772 / 201700,,000000         MOVEI  AC2,                   ;;4
110773 / 246700,,000020          LSHC  AC2,000020             ;;5
110774 / 744140,,000016         DATAO  XGP,000016             ;;6 ANOTHER 16
110775 / 246700,,000020          LSHC  AC2,000020             ;;7
110776 / 435700,,200004          IORI  AC2,200004             ;;10 OR BITS FOR SPECIAL MODE, WIDTH 4.
110777 / 744140,,000016         DATAO  XGP,000016             ;;11 SEND DATA
111000 / 253640,,000000         AOBJN  AC1,                   ;;12 LOOP.
111001 / 254000,,111002          JRST      111002             ;;13
                       XDI2B:
111002 / 200140,,016627          MOVE    P,016627             ;;RESTORE P
111003 / 201540,,001216         MOVEI  PID,001216             ;;RESTORE PID
111004 / 135040,,107360           LDB  TAC, DWCNT             ;
111005 / 322040,,111011         JUMPE  TAC,111011             ;;JUMP IF NO IOWD OVERFLOW.
111006 / 265740,,111032           JSP  AC3,111032             ;;ADVANCE TO NEW IOWD.
111007 / 200040,,016612          MOVE  TAC,016612             ;;GET A NEW AOBJN POINTER.
111010 / 254000,,110743          JRST      110743             ;;PROCESS MORE VIDEO.
                       XDI3:
111011 / 335000,,016617        SKIPGE      XGPGCW             ;
111012 / 260140,,111020         PUSHJ    P,111020             ;;MAKE PAPER GET CUT
111013 / 331040,,016612         SKIPL  TAC,016612             ;;PEEKING AT NEXT GCW
111014 / 263140,,000000          POPJ    P,                   ;;IOWD RAN OUT-NO NEXT GCW
153016 / 000001,,000000                                       ;
153016 / 301301,,000000 POINT 11,01000000,11                  ;
111015 / 135240,,153016           LDB  DAT,153016             ;;GET THE LINE SKIP FROM NEXT GCW
111016 / 322240,,110723         JUMPE  DAT,110723             ;;IF COUNT=0, DO MORE ON THIS LINE.
111017 / 263140,,000000          POPJ    P,                   ;;RETURN. DONE WITH LINE.
                       XDICUT:
111020 / 260140,,110700         PUSHJ    P,110700             ;;QUEUE A PAPER CUT
111021 / 201040,,110714         MOVEI  TAC,   XDI             ;
111022 / 202040,,016622         MOVEM  TAC,XDISP2             ;
111023 / 200040,,016735          MOVE  TAC,XSCNLN             ;
111024 / 301040,,003720          CAIL  TAC,003720             ;
111025 / 303040,,004230         CAILE  TAC,004230             ;
111026 / 263140,,000000          POPJ    P,                   ;;PAGE SIZE IS UNUSUAL
111027 / 201040,,000001         MOVEI  TAC,     1             ;
111030 / 436040,,017067          IORM  TAC,017067             ;;FLAP THE FLAPPER (LATER)
111031 / 263140,,000000          POPJ    P,                   ;;
                       ;	XADV	ADVANCE IOWD AT I-LEVEL
                       XADV:
111032 / 332100,,016613         SKIPE TAC1,016613             ;;PART OF A BIG TRANSFER LEFT?
111033 / 254000,,111060          JRST      111060             ;;YES. SKIP SOME CODE
111034 / 200340,,016616          MOVE PROG,016616             ;;HERE THE IOWD RAN OUT.
111035 / 336000,,016614         SKIPN      016614             ;;IS THERE A COMMAND IN PROGRESS?
111036 / 254000,,111063          JRST      111063             ;;NO. GET THE NEW COMMAND IF ANY.
111037 / 350100,,016614           AOS TAC1,016614             ;;GET RELATIVE POINTER AND INCREMENT
                       XADV1:
111040 / 505100,,000007          HRLI TAC1,  PROG             ;
111041 / 202100,,016614         MOVEM TAC1,XGPMDP             ;
111042 / 200120,,000002          MOVE TAC1,@  TAC1            ;
111043 / 322100,,111063         JUMPE TAC1,111063             ;;COMMAND HAS RUN OUT. SEE IF ANOTHER
111044 / 607100,,777777          TLNN TAC1,777777             ;
111045 / 254000,,111040          JRST      111040             ;;FOLLOW JUMPS
111046 / 271107,,000001          ADDI TAC1,     1(PROG)       ;;MAKE IT ABSOLUTE AOBJN WORD.
111047 / 202100,,016612         MOVEM TAC1,016612             ;;STORE AOBJN WORD.
111050 / 321117,,000000         JUMPL TAC1,      (AC3)        ;;RETURN IF SMALL AOBJN WORD.
111051 / 641100,,400000           TLC TAC1,400000             ;;MAKE COUNT 400000 SMALLER.
111052 / 202100,,016612         MOVEM TAC1,016612             ;;SAVE THE SMALL PART TO DO FIRST
111053 / 574340,,000002          HLRE PROG,000002             ;;GET - COUNT OF FIRST PART
111054 / 274100,,000007           SUB TAC1,000007             ;;CALC FIRST ADDR OF SECOND PART
111055 / 505100,,400000          HRLI TAC1,400000             ;;THIS IS HOW MANY WORDS
111056 / 202100,,016613         MOVEM TAC1,016613             ;;FLAG MORE TO DO
111057 / 254017,,000000          JRST            (AC3)        ;
                       XADV2:
111060 / 202100,,016612         MOVEM TAC1,XGPIWD             ;
111061 / 402000,,016613         SETZM      016613             ;;ONLY ONCE
111062 / 254017,,000000          JRST            (AC3)        ;
                       XADV3:
111063 / 200100,,016615          MOVE TAC1,016615             ;;SWAP ZERO FOR THE NEW COMMAND
111064 / 322100,,111070         JUMPE TAC1,111070             ;;FINISHED IF NO NEW COMMAND
111065 / 402000,,016615         SETZM      016615             ;;CLEAR NEW COMMAND
111066 / 476000,,016604         SETOM      016604             ;;KICK THE PDP-10
111067 / 254000,,111040          JRST      111040             ;;AND PROCESS THE NEW COMMAND
                       XADV4:
111070 / 402000,,016614         SETZM      016614             ;;NO MAJOR COMMAND
111071 / 350003,,000000           AOS            (P)          ;;WE SHALL STOP XGP ON RETURN
111072 / 260140,,107776         PUSHJ    P,PSYNCX             ;
111073 / 200000,,016566          MOVE      XGPIOS             ;
111074 / 602000,,000100          TRNE      000100             ;;OVERLAPPED MODE?
111075 / 603000,,000040          TLNE      000040             ;;YES.  CLOSE UUO DONE YET?
111076 / 254000,,107770          JRST      107770             ;;NOT OVERLAPPED OR CLOSE DONE.
                       ;RELEASE SYNCHRONIZER AND STOP XGP.
111077 / 201000,,002000         MOVEI      002000             ;;OVERLAPPED MODE, END OF DATA AND NO CLOSE.
111100 / 436000,,016566          IORM      016566             ;;TURN ON ERROR BIT
111101 / 254000,,107770          JRST      107770             ;;RELEASE SYNCHRONIZER.
                       ;	BUFFER ADVANCE AT I-LEVEL
                       ;BFOSET IS CALLED AT THE BEGINNING OF EACH SCAN LINE TO CALCULATE AN
                       ;AOBJN POINTER TO THE SYSTEM BUFFER. POINTER IS RETURNED IN TAC.
                       ;BFNSET IS CALLED AT THE END OF EACH SCAN LINE TO ADJUST THE BUFFER COUNTS
                       ;AND THINGS. ARGUMENT IS TAC, THE REMAINDER OF THE AOBJN POINTER.
                       ;IF THE AOBJN POINTER RUNS OUT IN THE MIDDLE OF A SCAN LINE IT MAY BE DUE
                       ;TO EITHER WRAP AROUND OR LACK OF DATA. CALL BFNSET TO REFORM PARAMETERS
                       ;FOLLOWED BY BFOSET TO GET A NEW POINTER.  IN CASES OF NO DATA LEFT IN THE
                       ;BUFFER, TAC WILL COME BACK AS A POSITIVE QUANTITY.
                       BFOSET:
111102 / 210640,,016635          MOVN  AC1,016635             ;;GET -DATA COUNT IN BUFFER.
111103 / 200040,,016631          MOVE  TAC,016631             ;;GET TAKE POINTER
111104 / 274040,,016634           SUB  TAC,016634             ;;MAKE -COUNT FROM TAKE TO THE END.
111105 / 315640,,000001         CAMGE  AC1,000001             ;;SKIP IF DATA DOESN'T WRAP.
111106 / 200640,,000001          MOVE  AC1,000001             ;;WRAP AROUND. DO THE REST LATER.
111107 / 200040,,016631          MOVE  TAC, XTAKE             ;
111110 / 505055,,000000          HRLI  TAC,      (AC1)        ;;FORM AOBJN POINTER IN TAC
111111 / 202040,,016612         MOVEM  TAC,016612             ;;SAVE HERE TOO.
111112 / 254017,,000000          JRST            (AC3)        ;;RETURN.
                       BFNSET:
111113 / 200640,,016631          MOVE  AC1, XTAKE             ;
111114 / 275641,,000000          SUBI  AC1,      (TAC)        ;;COMPUTE -COUNT OF WORDS USED UP.
111115 / 501040,,000000          HLLI  TAC,                   ;;CLEAR TAC LEFT.
111116 / 311040,,016634          CAML  TAC,016634             ;;DID WE WRAP AROUND?
111117 / 200040,,016633          MOVE  TAC,016633             ;;YES. RESET TAKER
111120 / 202040,,016631         MOVEM  TAC, XTAKE             ;
111121 / 260140,,107776         PUSHJ    P,PSYNCX             ;
111122 / 273640,,016635          ADDB  AC1,016635             ;;DECREASE COUNT OF SPACE IN USE.
111123 / 317640,,016636          CAMG  AC1,016636             ;;IS IT PROPER TO REACTIVATE PDP-10?
111124 / 336000,,016636         SKIPN      016636             ;;YES. SPECIAL FLAG FOR CLOSE?
111125 / 254000,,111132          JRST      111132             ;;NOT TIME YET, OR CLOSE IN PROGRESS
111126 / 205000,,001000         MOVSI      DEVSBB             ;
111127 / 412000,,016566        ANDCAM      016566             ;;SYSTEM BUFFER NOT BUSY.
111130 / 476000,,016636         SETOM      016636             ;;DON'T REACTIVATE AGAIN SOON.
111131 / 476000,,016604         SETOM      016604             ;;ACTIVATE PDP-10
                       BFNST1:
111132 / 260140,,107770         PUSHJ    P,XSYNCX             ;
111133 / 254017,,000000          JRST            (AC3)        ;
                       ;	Character Mode for the XGP
                       ;	MODE 0	COMMENTS ABOUT INTERNAL STRUCTURE.
                       ;	MODE 0  CHANNEL 2 INTERRUPTS
                       ;*2	HERE ON FIRST INTERRUPT TO SEND DATA.
                       XCIBEG:
111134 / 201040,,111545         MOVEI  TAC,111545             ;;INITIAL DISPATCH FOR THE COMPILER
111135 / 202040,,000752         MOVEM  TAC,000752             ;;SET FOR CHANNEL 4.
111136 / 402000,,017014         SETZM      017014             ;;NO PENDING LIST.
111137 / 201040,,017014         MOVEI  TAC,XPENDH             ;
111140 / 202040,,017015         MOVEM  TAC,017015             ;;TAIL OF THE PENDING LIST POINTS TO HEAD.
111141 / 402000,,017012         SETZM      017012             ;;NO ACTIVE LISTS.
111142 / 402000,,017013         SETZM      XALVLH             ;
111143 / 402000,,017011         SETZM       XATLH             ;
111144 / 476000,,016735         SETOM      016735             ;;MORE INITIALIZATION
111145 / 260140,,110700         PUSHJ    P,110700             ;;MAKE A CUT HERE.
111146 / 000000,,000003                                       ;
111146 / 000000,,000010                                       ;
111146 / 700600,,004010          CONO   PI,004010             ;;MAKE AN INTERRUPT ON CH4
152721 / 254000,,000742          JRST      P2CH4S             ;
111147 / 200040,,152721          MOVE  TAC,152721             ;
111150 / 202040,,000760         MOVEM  TAC,000760             ;;CLOBBER CHANNEL 4 EXIT ROUTINES.
111151 / 264000,,016622           JSR      016622             ;;SET DISPATCH FOR ALL OTHER INTERRUPTS.
                       ;*2	HERE ON NORMAL, CH 2 DATA TRANSFER INTERRUPT.
                       XCW:
111152 / 402000,,017037         SETZM      017037             ;;NO NEED TO KICK CH4 YET.
111153 / 350640,,016735           AOS  AC1,016735             ;;INCREMENT PAGE POSITION.
                       XCW1:
111154 / 332700,,017014         SKIPE  AC2,017014             ;;ANY PENDING NODES?
111155 / 315656,,000001         CAMGE  AC1,     1(AC2)        ;;YES.  TIME YET?
111156 / 254000,,111300          JRST      111300             ;;NONE PENDING OR NOT YET.
111157 / 317656,,000001          CAMG  AC1,     1(AC2)        ;;DID WE MISS IT?
111160 / 254000,,111171          JRST      111171             ;;NO. RIGHT ON TIME
152046 / 000400,,200000                                       ;
111161 / 200000,,152046          MOVE      152046             ;;SET ERROR BIT FOR USER. WE CONTINUE
111162 / 260140,,107766         PUSHJ    P,107766             ;;UNTIL THE END OF THE NEXT LINE IN CH4
111163 / 332000,,016736         SKIPE      016736             ;;ERROR CODE SET YET?
111164 / 254000,,111171          JRST      111171             ;;AVOID DOING IT AGAIN
111165 / 260140,,107524         PUSHJ    P,107524             ;;I MISSED IT!
111166 / 202640,,016737         MOVEM  AC1,016737             ;;SAVE CURRENT SCANLINE NUMBER FOR LOSER
111167 / 200756,,000001          MOVE  AC3,     1(AC2)        ;;GET Y0 OF NEXT NODE
111170 / 202740,,016740         MOVEM  AC3,016740             ;;GIVE THAT TO THE LOSER TOO.
                       XCW1X:
111171 / 200756,,000000          MOVE  AC3,      (AC2)        ;;GET OLD LINK OUT.
111172 / 202740,,017014         MOVEM  AC3,017014             ;;SET OLD LINK OUT INTO LIST HEAD.
111173 / 326740,,111176         JUMPN  AC3,111176             ;;JUMP UNLESS LIST IS EMPTY.
111174 / 201740,,017014         MOVEI  AC3,017014             ;;ADDRESS OF LIST HEAD.
111175 / 202740,,017015         MOVEM  AC3,017015             ;;TAIL POINTS TO LIST HEAD.
                       XCW1A:
111176 / 335756,,000002        SKIPGE  AC3,     2(AC2)        ;;GET X0,,N
111177 / 254000,,111217          JRST      111217             ;;THIS IS A TEXT NODE.
111200 / 552756,,000001         HRRZM  AC3,     1(AC2)        ;;STORE N TO CLOBBER Y0.
111201 / 421740,,777777        ANDCMI  AC3,777777             ;;LEFT SIDE ONLY IS X0
111202 / 331016,,000004         SKIPL           4(AC2)        ;;DON'T BUGGER X0 IF DX<0 6/12/73
111203 / 274756,,000004           SUB  AC3,     4(AC2)        ;;X0-DX
111204 / 202756,,000002         MOVEM  AC3,     2(AC2)        ;;CLOBBER X0 WITH X0-DX.
111205 / 337756,,000003         SKIPG  AC3,     3(AC2)        ;;GET THE WIDTH FIELD.
111206 / 254000,,111223          JRST      111223             ;;THIS IS A PAGE NODE.  CUT THE PAPER.
111207 / 303740,,150310         CAILE  AC3,150310             ;;IS IT SMALL ENOUGH TO GET DONE QUICK?
111210 / 254000,,111214          JRST      111214             ;;NO. THIS GOES IN THE WIDE VECTOR LIST.
111211 / 250700,,017012          EXCH  AC2,017012             ;;STORE POINTER IN ACTIVE NARROW V. LIST HEAD
111212 / 202720,,017012         MOVEM  AC2,@017012            ;;STORE OLD LIST IN NEWLY ACTIVATED.
111213 / 254000,,111154          JRST      111154             ;;LOOK FOR MORE NEWLY ACTIVATED
                       XCW1B:
111214 / 250700,,017013          EXCH  AC2,017013             ;;STORE POINTER IN ACTIVE WIDE V. LIST HEAD
111215 / 202720,,017013         MOVEM  AC2,@017013            ;;STORE OLD LIST IN NEWLY ACTIVATED.
111216 / 254000,,111154          JRST      111154             ;;LOOK FOR MORE NEWLY ACTIVATED
                       XCW1C:
111217 / 202656,,000001         MOVEM  AC1,     1(AC2)        ;;SET STARTING LINE NUMBER.
111220 / 250700,,017011          EXCH  AC2,017011             ;;SET ACTIVE TEXT HEADER
111221 / 202720,,017011         MOVEM  AC2,@017011            ;;LINK NEW NODE TO OLD LIST.
111222 / 254000,,111154          JRST      111154             ;;LOOK FOR MORE.
                       XCW1D:
111223 / 337000,,017154         SKIPG      017154             ;;TOP OF PAGE. IS THERE A BOTTOM MARGIN?
111224 / 254000,,111234          JRST      111234             ;;NO BOTTOM MARGIN: NO CUT
111225 / 260140,,110700         PUSHJ    P,110700             ;;CUT THE PAPER.
111226 / 200040,,016735          MOVE  TAC,XSCNLN             ;
111227 / 301040,,003720          CAIL  TAC,003720             ;
111230 / 303040,,004230         CAILE  TAC,004230             ;
111231 / 254000,,111234          JRST      111234             ;;PAGE SIZE IS UNUSUAL
111232 / 201040,,000001         MOVEI  TAC,     1             ;
111233 / 436040,,017067          IORM  TAC,017067             ;;TURN ON A BIT TO MAKE IT FLAP
                       XCW1DA:
111234 / 476000,,016735         SETOM      016735             ;;NEXT SCAN LINE IS 0
111235 / 200116,,000004          MOVE TAC1,     4(AC2)        ;;GET THE END OF FILE INDICATOR.
111236 / 250700,,017007          EXCH  AC2,017007             ;;FREE THIS PAGE MARK NODE.
111237 / 202720,,017007         MOVEM  AC2,@ XVNFL            ;
111240 / 201700,,000000         MOVEI  AC2,                   ;;FREE NARROW ACTIVE VECTORS
111241 / 250700,,017012          EXCH  AC2,017012             ;;AC2←LIST HEADER; LIST HEADER←0
                       XCW1E:
111242 / 336740,,000016         SKIPN  AC3,000016             ;;AC3←FIRST ELEMENT IN LIST
111243 / 254000,,111250          JRST       XCW1F             ;
111244 / 200716,,000000          MOVE  AC2,      (AC2)        ;;ADVANCE IN LIST.
111245 / 250740,,017007          EXCH  AC3,017007             ;;FREE NODE THAT AC3 POINTS TO
111246 / 202760,,017007         MOVEM  AC3,@ XVNFL            ;
111247 / 254000,,111242          JRST       XCW1E             ;
                       XCW1F:
111250 / 201700,,000000         MOVEI  AC2,                   ;;FREE WIDE ACTIVE VECTORS.
111251 / 250700,,017013          EXCH  AC2,017013             ;;AC2←LIST HEADER; LIST HEADER←0
                       XCW1G:
111252 / 336740,,000016         SKIPN  AC3,   AC2             ;
111253 / 254000,,111260          JRST       XCW1H             ;
111254 / 200716,,000000          MOVE  AC2,      (AC2)        ;
111255 / 250740,,017007          EXCH  AC3, XVNFL             ;
111256 / 202760,,017007         MOVEM  AC3,@ XVNFL            ;
111257 / 254000,,111252          JRST       XCW1G             ;
                       XCW1H:
111260 / 201700,,000000         MOVEI  AC2,                   ;;FREE TEXT NODES.	
111261 / 250700,,017011          EXCH  AC2,017011             ;;AC2←LIST HEADER; LIST HEADER←0
                       XCW1I:
111262 / 336740,,000016         SKIPN  AC3,   AC2             ;
111263 / 254000,,111273          JRST       XCW1K             ;
111264 / 200716,,000000          MOVE  AC2,      (AC2)        ;;LINK AHEAD.
                       XCW1J:
111265 / 201057,,000000         MOVEI  TAC,      (AC3)        ;
111266 / 250740,,017010          EXCH  AC3, XTNFL             ;
111267 / 202760,,017010         MOVEM  AC3,@ XTNFL            ;
111270 / 332741,,000003         SKIPE  AC3,     3(TAC)        ;
111271 / 254000,,111265          JRST       XCW1J             ;
111272 / 254000,,111262          JRST       XCW1I             ;
                       XCW1K:
111273 / 476000,,017037         SETOM      017037             ;;NODES HAVE BEEN FREED
111274 / 321100,,111351         JUMPL TAC1,111351             ;;WAKE COMPILER UNLESS EOF.
111275 / 201100,,111134         MOVEI TAC1,XCIBEG             ;
111276 / 202100,,016622         MOVEM TAC1,016622             ;;SET DISPATCH THRU THE TOP.
111277 / 254000,,037401          JRST      037401             ;;SKIP RETURN INDICATES EOF.
                       XCW3:
111300 / 336000,,017013         SKIPN      017013             ;;ANY WIDE VECTORS?
111301 / 332000,,017012         SKIPE      017012             ;;NO. ANY NARROW VECTORS?
111302 / 254000,,111304          JRST      111304             ;;THERE ARE SOME ACTIVE VECTORS.
111303 / 254000,,111322          JRST      111322             ;;NO VECTORS ACTIVE.
111304 / 202140,,016627         MOVEM    P,016627             ;;SAVE P FOR LATER.
111305 / 205740,,111370         MOVSI  AC3,111370             ;;PICKUP THE NARROW VECTOR CODE
111306 / 251740,,000012           BLT  AC3,000012             ;;LOAD NVC INTO THE AC'S.
111307 / 201640,,017012         MOVEI  AC1,017012             ;;POINTER TO FIRST VECTOR.
111310 / 254000,,000000          JRST                         ;;EXECUTE THE CODE IN THE AC'S.
                       XCW4:
111311 / 336000,,017013         SKIPN      017013             ;;ANY WIDE VECTORS?
111312 / 254000,,111321          JRST      111321             ;;NO. AVOID THIS STUFF.
152336 / 111403,,000010                                       ;
111313 / 200740,,152336          MOVE  AC3,152336             ;
111314 / 251740,,000014           BLT  AC3, XWVC2             ;
111315 / 201740,,111321         MOVEI  AC3, XCW4A             ;
111316 / 542740,,000002          HRRM  AC3,000002             ;;SET RETURN ADDRESS.
111317 / 201640,,017013         MOVEI  AC1,XALVLH             ;
111320 / 254000,,000000          JRST                         ;;DO LONG VECTORS. RETURN TO XCW4A
                       XCW4A:
111321 / 200140,,016627          MOVE    P,016627             ;;HERE AFTER ALL VECTORS DONE
                       XCW5:
111322 / 201740,,017011         MOVEI  AC3,017011             ;;FOR ACTIVE TEXT LIST.
152335 / 111357,,000004                                       ;
111323 / 200000,,152335          MOVE      152335             ;;SOURCE,,DESTINATION
111324 / 251000,,000014           BLT      000014             ;;MOVE CODE INTO THE AC'S.
                       ;IOS,TAC,TAC1,AC2,3 ARE 'FREE'
                       ;P IS FOR STACK. AC1=MAJOR SCANLINE #.
                       XCW5A:
111325 / 201717,,000000         MOVEI  AC2,      (AC3)        ;;LINK AHEAD. AC2=LAST ONE DONE.
                       XCW5B:
111326 / 336756,,000000         SKIPN  AC3,      (AC2)        ;;GET THE FORWARD LINK
111327 / 254000,,111351          JRST      111351             ;;THERE IS NONE LEFT.
111330 / 261140,,000016          PUSH    P,   AC2             ;
111331 / 200640,,016735          MOVE  AC1,XSCNLN             ;
111332 / 274657,,000001           SUB  AC1,     1(AC3)        ;;RELATIVE SCAN LINE NUMBER.
111333 / 260157,,000004         PUSHJ    P,     4(AC3)        ;;EXECUTE THE NODE.
111334 / 262140,,000016           POP    P,   AC2             ;
111335 / 200756,,000000          MOVE  AC3,      (AC2)        ;;SET UP AGAIN.
111336 / 355017,,000002         AOSGE           2(AC3)        ;;COUNT A LINE USED UP.
111337 / 254000,,111325          JRST      111325             ;;NODE IS STILL ACTIVE.
                       ;DELINK HEADER FROM ACTIVE LIST.
111340 / 200057,,000000          MOVE  TAC,      (AC3)        ;;GET THE LINK TO NEXT ACTIVE TEXT NODE.
111341 / 202056,,000000         MOVEM  TAC,      (AC2)        ;;STORE INTO THE GUY WHO POINTS HERE.
                       ;ADD HEADER AND LINKED BLOCKS TO FREE LIST.
                       XCW5C:
111342 / 201057,,000000         MOVEI  TAC,      (AC3)        ;;SAVE THIS BLOCK ADDRESS
111343 / 250740,,017010          EXCH  AC3,017010             ;;LINK THIS BLOCK INTO TEXT NODE FREE LIST.
111344 / 202760,,017010         MOVEM  AC3,@017010            ;;STORE OLD FL POINTER INTO NEW BLOCK.
111345 / 332741,,000003         SKIPE  AC3,     3(TAC)        ;;SKIP IF THERE IS NO FURTHER LINK
111346 / 254000,,111342          JRST      111342             ;;GIVE BACK ANOTHER BLOCK.
111347 / 476000,,017037         SETOM      017037             ;;WE WILL KICK CH4.
111350 / 254000,,111326          JRST      111326             ;;DON'T ADVANCE AC2.
                       XCW6:
111351 / 336000,,017037         SKIPN       XACT4             ;
111352 / 263140,,000000          POPJ    P,                   ;
111353 / 000000,,000003                                       ;
111353 / 000000,,000010                                       ;
111353 / 700600,,004010          CONO   PI,004010             ;;ACTIVATE INTERRUPT ON COMPILER CHANNEL.
152721 / 254000,,000742          JRST      P2CH4S             ;
111354 / 200040,,152721          MOVE  TAC,152721             ;
111355 / 202040,,000760         MOVEM  TAC,000760             ;;CLOBBER CHANNEL 4 EXIT ROUTINES.
111356 / 263140,,000000          POPJ    P,                   ;;DISMISS CHANNEL 2.
                       ;	MODE 0 I-LEVEL  'SCAN PHASE'
                       ;ENTER SCANE FOR LEFT SIDE (EVEN)
                       ;ENTER SCANO FOR RIGHT SIDE (ODD)
                       ;IOS, TAC, AC3 ARE IN USE.  TAC1 IS FREE, P IS STACK.
                       SCANX:
                       SCAN:
111357 / 200757,,000000          MOVE  AC3,      (AC3)        ;;4 CALLED BY JSP AC3,  GET AOBJN PTR
111360 / 321040,,000012         JUMPL  TAC,000012             ;;5 JUMP TO ODD SIDE SCAN
                       SCANE:
111361 / 554037,,000000          HLRZ      @      (AC3)       ;;6 LOAD DATA
111362 / 744140,,000000         DATAO  XGP,                   ;;7 SEND DATA
111363 / 253740,,000006         AOBJN  AC3,000006             ;;10 LOOP IN MINOR COMMAND
111364 / 254017,,000000          JRST            (AC3)        ;;11 RETURN TO COMMAND BUFFER
                       SCANO:
111365 / 744177,,000000         DATAO  XGP,@      (AC3)       ;;12 SEND DATA
111366 / 253740,,000012         AOBJN  AC3,000012             ;;13 LOOP
                       SCAND:
111367 / 254017,,000000          JRST            (AC3)        ;;14 RETURN. END OF PHASED CODE.
                       ;REGISTER ASSIGNMENTS:
                       ;IOS  FREE EXCEPT CLOBBERED INSIDE SCAN
                       ;TAC  HAS RELATIVE LINE NUMBER AND ODD/EVEN INDICATOR
                       ;TAC1 FREE
                       ;P    STACK
                       ;AC1  MAJOR SCANLINE NUMBER
                       ;AC2  RETURN ADDRESS FOR CURRENT MINOR COMMAND
                       ;AC3  ARGUMENT ADDRESS FOR SCAN.
                       ;NARROW VECTOR PROCESSING:
                       XNVC:
                       XNVC1:
111370 / 201755,,000000         MOVEI  AC3,      (AC1)        ;;0 LINK AHEAD. AC1=LAST ONE DONE.
                       XNVC2:
111371 / 336657,,000000         SKIPN  AC1,      (AC3)        ;;1 GET THE FORWARD LINK
                       XWVC3:
111372 / 254000,,111311          JRST      111311             ;;2 THERE IS NONE.  ;*CLOBBERED FOR WIDE
111373 / 200715,,000004          MOVE  AC2,     4(AC1)        ;;3 DX
111374 / 273715,,000002          ADDB  AC2,     2(AC1)        ;;4 X←X+DX
111375 / 554700,,000016          HLRZ  AC2,000016             ;;5 GET X AS A RIGHT SIDE QUANTITY
111376 / 744216,,140000          CONO  XGP,  SETX(AC2)        ;;6 SET X COLUMN REGISTER
111377 / 744235,,000003          CONO  XGP,@     3(AC1)       ;;7 SEND THE WIDTH.
111400 / 373015,,000001         SOSLE           1(AC1)        ;;10 DECREMENT N
111401 / 254000,,000000          JRST                         ;;11 ADVANCE TO THE NEXT VECTOR
                       XNVC3:
111402 / 254000,,111410          JRST      111410             ;;12 RUN THE CODE TO FLUSH THIS VECTOR
                       XWVC:
                       XWVC1:
111403 / 744340,,000020         CONSO  XGP,000020             ;;10 WAIT HERE FOR DONE
111404 / 254000,,000010          JRST      000010             ;;11 LOOP.
111405 / 373015,,000001         SOSLE           1(AC1)        ;;12
111406 / 254000,,000000          JRST                         ;;13
                       XWVC2:
111407 / 254000,,111410          JRST      111410             ;;14
                       XNVC4:
111410 / 200715,,000000          MOVE  AC2,      (AC1)        ;;GET THE LINK TO NEXT ACTIVE VECTOR
111411 / 202717,,000000         MOVEM  AC2,      (AC3)        ;;STORE INTO THE GUY WHO POINTS HERE.
111412 / 250640,,017007          EXCH  AC1,017007             ;;LINK TO VECTOR NODE FREE LIST.
111413 / 202660,,017007         MOVEM  AC1,@017007            ;;STORE OLD FL POINTER INTO NEW BLOCK.
111414 / 476000,,017037         SETOM      017037             ;;WE WILL KICK CHANNEL 4.
111415 / 254000,,000001          JRST      000001             ;;DON'T ADVANCE IN LIST.
                       ;	ROUTINES TO MANIPULATE COMMAND HEADER BLOCKS.
                       ;SCHB, OFFCHB, ACHB
                       ;ALL OF THESE ARE CALLED BY JSP AC1,
                       ;MOST REQUIRE THAT AC2, AC3 BE SET UP WITH MINIMUM AND MAXIMUM VALUES.
                       ;CAUTION----DON'T CLOBBER DAT INSIDE THESE ROUTINES!
                       ;SEARCH FOR A COMMAND BLOCK WITH THE RIGHT PARAMETERS, ELSE MAKE ONE.
                       ;AC2 = MIN, AC3 = MAX
                       SCHB:
111416 / 336600,,017005         SKIPN  UUO,017005             ;;HAVE WE ANY BLOCKS AT ALL?
111417 / 254000,,111444          JRST      111444             ;;NO. WE SHALL MAKE THE FIRST.
111420 / 201614,,000004         MOVEI  UUO,     4(UUO)        ;;POINT TO FIRST EXECUTABLE
                       SCHB1:
111421 / 201514,,000000         MOVEI UCHN,      (UUO)        ;;LINK ON
111422 / 306732,,000000          CAIN  AC2,@      (UCHN)      ;
111423 / 302772,,000001          CAIE  AC3,@     1(UCHN)      ;
111424 / 254000,,111432          JRST      111432             ;;NO MATCH. LOOK AT NEXT LINK
111425 / 305350,,000003         CAIGE PROG,     3(TEM)        ;;IS THERE ROOM FOR MORE?
111426 / 260140,,111524         PUSHJ    P,111524             ;;NO. ADD A NODE. RESET TEM,PROG.
111427 / 201750,,000001         MOVEI  AC3,     1(TEM)        ;;GET POINTER TO NEXT AVAIL. WORD.
111430 / 250752,,000007          EXCH  AC3,     7(UCHN)       ;;SET NEW INTER-GROUP LINK.
111431 / 254000,,111476          JRST      111476             ;;GO ADD THE DATA BLOCK HEADER
                       SCHB2:
111432 / 550612,,000002          HRRZ  UUO,     2(UCHN)       ;;UUO SET WITH NEXT LINK
111433 / 302600,,037403          CAIE  UUO,037403             ;;WAS THIS THE LAST LINK?
111434 / 254000,,111421          JRST      111421             ;;NO. KEEP LOOKING ALONG LIST.
                       ;MAKE A NEW COMMAND HEADER.
                       ;ADD A COMMAND HEADER BLOCK.  UCHN POINTS TO LAST CHB IN THE LIST. AC2, AC3 SET
                       ACHB:
111435 / 305350,,000011         CAIGE PROG,    11(TEM)        ;;WE ARE ADDING 9 MORE WORDS.
111436 / 260140,,111524         PUSHJ    P,111524             ;;NO ROOM.  ADD A NEW NODE.
111437 / 201610,,000001         MOVEI  UUO,     1(TEM)        ;;POINTER TO NEXT AVAIL CELL.
111440 / 542612,,000002          HRRM  UUO,     2(UCHN)       ;;CLOBBER LAST GUY'S RETURN ADDRESS.
111441 / 254000,,111461          JRST      111461             ;;NOW MAKE THE COMMAND HEADER BLOCK
                       ;FCHB CALLED FROM SCHB TO MAKE FIRST COMMAND BLOCK.  GET TEXT NODE FROM FREE LIST.
                       FCHB0:
111442 / 700600,,000200          CONO   PI,  PION             ;
111443 / 264000,,000752           JSR      000752             ;;SET CO-ROUTINE ADDRESS FOR LATER
                       ;*4
                       FCHB:
111444 / 700600,,000400          CONO   PI, PIOFF             ;
111445 / 336600,,017010         SKIPN  UUO,017010             ;;GET DATA FROM THE FREE LIST
111446 / 254000,,111442          JRST       FCHB0             ;
111447 / 200514,,000000          MOVE UCHN,      (UUO)        ;
111450 / 202500,,017010         MOVEM UCHN, XTNFL             ;
111451 / 700600,,000200          CONO   PI,  PION             ;
111452 / 202600,,017005         MOVEM  UUO,XCHBGO             ;
111453 / 402000,,017043         SETZM      017043             ;;COUNT OF NODES IN THIS LINE.
111454 / 402014,,000000         SETZM            (UUO)        ;;MAJOR LINK
111455 / 402014,,000003         SETZM           3(UUO)        ;;LINK-2
111456 / 201414,,000003         MOVEI  TEM,     3(UUO)        ;;PDL POINTER. LEFT HALF ZERO.
111457 / 201354,,000077         MOVEI PROG,000077(UUO)        ;;LAST ADDRESS THAT CAN BE USED
                       ;CAIGE PROG,n(TEM) WILL SKIP
                       ;IF n MORE THINGS CAN BE PUSHED.
111460 / 200440,,000010          MOVE DSER,000010             ;;WE ARE NOT INSIDE A TEXT STRING.
                       ;MAKE COMMAND HEADER BLOCK.  AC2 = MIN, AC3 = MAX
                       FCHB1:
153020 / 301640,,000000          CAIL  AC1,                   ;
111461 / 261400,,153020          PUSH  TEM,153020             ;;0 STUFF INSTRUCTION
111462 / 542710,,000000          HRRM  AC2,      (TEM)        ;;SET MINIMUM
111463 / 201510,,000000         MOVEI UCHN,      (TEM)        ;;SET UCHN TO POINT TO HEADER.
153020 / 301640,,000000          CAIL  AC1,                   ;
111464 / 261400,,153020          PUSH  TEM,153020             ;;1 ANOTHER INSTRUCTION.
111465 / 542750,,000000          HRRM  AC3,      (TEM)        ;;SET ARGUMENT IN INSTRUCTION
111466 / 313740,,016732         CAMLE  AC3,016732             ;;IS THIS BIGGER THAN CURRENT MAX?
111467 / 202740,,016732         MOVEM  AC3,016732             ;;YES. SET MAXIMUM VALUE OF SCAN LINE
152722 / 254000,,037403          JRST       CPOPJ             ;
111470 / 261400,,152722          PUSH  TEM,152722             ;;2 SET RETURN ADDRESS.
152540 / 201055,,000000         MOVEI  TAC,      (AC1)        ;
111471 / 261400,,152540          PUSH  TEM,152540             ;;3 MORE CODE
153002 / 275060,,000000          SUBI  TAC,@                  ;
111472 / 261400,,153002          PUSH  TEM,153002             ;;4 MORE CODE
111473 / 542510,,000000          HRRM UCHN,      (TEM)        ;;FIX ADDRESS PART
152707 / 241040,,777777           ROT  TAC,777777             ;
111474 / 261400,,152707          PUSH  TEM,152707             ;;5 MORE CODE.
111475 / 201752,,000002         MOVEI  AC3,     2(UCHN)       ;;SET UP RETURN ADDRESS.
                       ;HERE TO ADD A DATA BLOCK HEADER TO COMMAND BLOCK ADDRESSED BY UCHN
                       ADBH1:
152771 / 265700,,000000           JSP  AC2,                   ;
111476 / 261400,,152771          PUSH  TEM,152771             ;;SET HEADER WORD
111477 / 201610,,000002         MOVEI  UUO,     2(TEM)        ;
111500 / 542610,,000000          HRRM  UUO,      (TEM)        ;;SET JUMP ADDRESS
111501 / 261400,,000017          PUSH  TEM,000017             ;;SET RETURN ADDRESS.
111502 / 254015,,000000          JRST            (AC1)        ;
                       ;HERE TO OFFSET THE MIN,MAX VALUES.  OFFSET IS IN AC3.
                       OFFCHB:
111503 / 200500,,017005          MOVE UCHN,XCHBGO             ;
111504 / 201512,,000004         MOVEI UCHN,     4(UCHN)       ;;OFFSET TO FIRST INSTRUCTION
                       OFFCH1:
111505 / 272752,,000000          ADDM  AC3,      (UCHN)       ;
111506 / 272752,,000001          ADDM  AC3,     1(UCHN)       ;
111507 / 550612,,000002          HRRZ  UUO,     2(UCHN)       ;
111510 / 306600,,037403          CAIN  UUO, CPOPJ             ;
111511 / 254015,,000000          JRST            (AC1)        ;;RETURN WITH UCHN SET UP.
111512 / 201514,,000000         MOVEI UCHN,      (UUO)        ;
111513 / 254000,,111505          JRST      OFFCH1             ;
                       ;ADDNOD MAKES A NEW TEXT NODE.  TEM IS OLD PDL, AT LEAST 1 NEEDED IN OLD BLOCK.
                       ;CALLED WITH A PUSHJ.  CLOBBERS UUO.  RETURNS WITH TEM=DSER=NEW PDL. PROG=LAST.
                       ADDND2:
111514 / 260140,,107522         PUSHJ    P,107522             ;;ERROR-LINE TOO COMPLEX
111515 / 262143,,000000           POP    P,      (P)          ;;FLUSH RETURN ADDRESS.
111516 / 254000,,112070          JRST      112070             ;;SET ERROR BIT.
                       ADDND1:
111517 / 700600,,000200          CONO   PI,  PION             ;
111520 / 311440,,017160          CAML DSER,017160             ;;HOW MANY NODES IN USE?
111521 / 254000,,111514          JRST      111514             ;;TOO MANY NODES ARE IN USE.
111522 / 264000,,000752           JSR      000752             ;;WAIT FOR A FREE NODE.
111523 / 254000,,111525          JRST      111525             ;
                       ADDNOD:
111524 / 350440,,017043           AOS DSER,XNODUS             ;
111525 / 700600,,000400          CONO   PI, PIOFF             ;
111526 / 336600,,017010         SKIPN  UUO,017010             ;;GET FROM FREE LIST
111527 / 254000,,111517          JRST      111517             ;;NONE THERE
111530 / 200454,,000000          MOVE DSER,      (UUO)        ;
111531 / 202440,,017010         MOVEM DSER, XTNFL             ;
111532 / 700600,,000200          CONO   PI,  PION             ;
152715 / 254000,,000000          JRST                         ;
111533 / 261400,,152715          PUSH  TEM,152715             ;;SET JRST AT END OF OLD BLOCK.
111534 / 201454,,000004         MOVEI DSER,     4(UUO)        ;;JUMP TARGET
111535 / 542450,,000000          HRRM DSER,      (TEM)        ;
111536 / 201414,,000003         MOVEI  TEM,     3(UUO)        ;;NEW PDL.
111537 / 201354,,000077         MOVEI PROG,000077(UUO)        ;;LAST ADDRESS THAT CAN BE USED
111540 / 200440,,017005          MOVE DSER,XCHBGO             ;
111541 / 250611,,000003          EXCH  UUO,     3(DSER)       ;;SET LINK TO US.
111542 / 202610,,000000         MOVEM  UUO,      (TEM)        ;;OLD LINK IN US.
111543 / 200440,,000010          MOVE DSER,   TEM             ;
111544 / 263140,,000000          POPJ    P,                   ;
                       ;	XGP LINE COMPILER CO-ROUTINES
                       ;*4 HERE FOR FIRST COMPILER ACTIVATION.
                       XCPINI:
111545 / 200040,,017042          MOVE  TAC,017042             ;;GET THE BASE OF FREE SPACE.
111546 / 270040,,016705           ADD  TAC,016705             ;;ADD RELOCATION OF THE FC
111547 / 202040,,017007         MOVEM  TAC,017007             ;;BASE OF VECTOR NODE FREE LIST
111550 / 200100,,017161          MOVE TAC1,017161             ;;MAKE THIS MANY NODES.
111551 / 271040,,000005          ADDI  TAC,000005             ;;THIS IS THE NODE SIZE
111552 / 202041,,777773         MOVEM  TAC,777773(TAC)        ;;STORE LINK
111553 / 367100,,111551          SOJG TAC1,111551             ;;LOOP LINKING BLOCKS.
111554 / 402001,,777773         SETZM      777773(TAC)        ;;LAST LINK IS ZERO.
111555 / 202040,,017010         MOVEM  TAC,017010             ;;BASE OF TEXT NODE FREE LIST.
111556 / 200100,,017160          MOVE TAC1,017160             ;;THIS MANY
111557 / 271040,,000100          ADDI  TAC,000100             ;;THIS SIZE
111560 / 202041,,777700         MOVEM  TAC,777700(TAC)        ;
111561 / 367100,,111557          SOJG TAC1,111557             ;
111562 / 402001,,777700         SETZM      777700(TAC)        ;;CLEAR OUT LAST LINK.
111563 / 402000,,017045         SETZM      017045             ;;SET THE KERN FLAG OFF.
111564 / 200040,,017152          MOVE  TAC,017152             ;;GET THE SIZE OF TOP MARGIN
111565 / 202040,,017040         MOVEM  TAC,017040             ;;CURRENT (DEFAULT) Y POSITION.
111566 / 402000,,017041         SETZM      017041             ;;LAST Y POSITION WRITTEN WAS 0
111567 / 402000,,017044         SETZM      017044             ;;XGP IS AT 'TOP OF FORM'
111570 / 200040,,016706          MOVE  TAC,016706             ;;GET THE FONT ADDRESS OF FONT 0
111571 / 270040,,016705           ADD  TAC,016705             ;;ADD RELOCATION OF FONT COMPILER
111572 / 552040,,016734         HRRZM  TAC,016734             ;;SAVE AS RELOCATED ADDRESS OF CURRENT FONT.
111573 / 200200,,017155          MOVE    J,017155             ;;SET INITIAL COLUMN AT LEFT MARGIN.
152414 / 000001,,000000                                       ;
152414 / 150501,,000000 POINT 5,01000000,22                   ;
111574 / 135040,,152414           LDB  TAC,152414             ;;GET THE COLUMN POS ADJUSTMENT
111575 / 275201,,000000          SUBI    J,      (TAC)        ;;AND USE IT TO BUGGER THE COLUMN POSITION.
111576 / 402000,,016742         SETZM      016742             ;;PAPER PAGE ← 0
111577 / 200140,,017036          MOVE    P,017036             ;;PDL FOR COMPILER.
111600 / 201540,,001216         MOVEI  PID,001216             ;;NOT RANDOMNESS
                       ;HERE WE PREPARE TO COMPILE A VECTOR NODE OR A TEXT NODE.
                       XCI:
111601 / 265740,,111102           JSP  AC3,111102             ;;SET UP AOBJN POINTER IN TAC
111602 / 325040,,112065        JUMPGE  TAC,112065             ;;JUMP IF THERE'S NO DATA TO BE HAD.
                       ;REGISTER USE IN THE COMPILER.
                       ;LINE INITIALIZATION STUFF.
                       ;J ← COLUMN COUNT IN XGP.
                       ;TEM ← POINTER TO NEXT FREE WORD IN BUFFER.
                       ;DSER ← LOCATION OF CURRENT AOBJN WORD IN TEXT NODE.
                       ;UCHN ← LOCATION OF CURRENT COMMAND HEADER BLOCK.
                       ;TAC1←5 INITIAL NUMBER OF BYTES IN THE WORD.
                       XCIA:
111603 / 201100,,000005         MOVEI TAC1,     5             ;
111604 / 476000,,016733         SETOM      016733             ;;CURRENT BASELINE POSITION.
111605 / 403400,,016732         SETZB  TEM,016732             ;;CURRENT MAXIMUM HEIGHT
111606 / 403440,,017005         SETZB DSER,017005             ;;FLAG SCHB THERE ARE NO COMMAND BLOCKS YET.
111607 / 403500,,017006         SETZB UCHN,017006             ;;NO VECTORS TO QUEUE YET.
111610 / 200260,,016734          MOVE  DAT,@016734            ;;DEFINE CURRENT FONT PARAMETERS.
111611 / 556240,,016730         HLRZM  DAT,016730             ;;BASE LINE.
111612 / 405240,,017777          ANDI  DAT,017777             ;;OMIT THE COLUMN POS ADJ BITS
111613 / 552240,,016727         HRRZM  DAT,016727             ;;FONT HEIGHT
152416 / 000020,,016734                                       ;
152416 / 150520,,016734 POINT 5,20016734,22                   ;
111614 / 135240,,152416           LDB  DAT,152416             ;;GET THE COLUMN POS ADJUSTMENT
111615 / 202240,,016731         MOVEM  DAT,016731             ;;SAVE COLUMN POS ADJ
                       ;CHARACTER BY CHARACTER LOOP.
                       XCI1:
111616 / 265740,,112046           JSP  AC3,112046             ;;GET A CHARACTER
111617 / 306240,,000177          CAIN  DAT,000177             ;;SKIP IF NOT ESCAPE.
111620 / 254000,,112123          JRST      112123             ;;PROCESS DLE
111621 / 307240,,000015          CAIG  DAT,    15             ;
111622 / 307240,,000010          CAIG  DAT,    10             ;
111623 / 326240,,112455         JUMPN  DAT,112455             ;;JUMP IF NORMAL CHARACTER.
111624 / 322240,,111616         JUMPE  DAT,111616             ;;THROW OUT NULLS.
                       ;PROCESS SPECIALS HERE  (TAB, LF, VT, FF, CR)
111625 / 254025,,111615          JRST      @111615(DAT)       ;;DAT HAS CODE BETWEEN 11 AND 15
111626 / 000000,,112074                                       ;;HT (11)
111627 / 000000,,111636                                       ;;LF (12)
111630 / 000000,,112455                                       ;;VT (13) IS JUST ANOTHER CHARACTER.
111631 / 000000,,111636                                       ;;FF (14)
111632 / 000000,,112111                                       ;;CR (15)
                       ;	HERE TO QUEUE A TEXT NODE.
                       ;LINE OVERFLOW ROUTINES.
                       XCI1D:
111633 / 200200,,017155          MOVE    J,017155             ;;SET MARGIN. (CR)
111634 / 274200,,016731           SUB    J,016731             ;;ADJUST COLUMN POSITION
                       XCI1F:
111635 / 201240,,000000         MOVEI  DAT,                   ;;LINE OVERFLOW.
                       ;HERE AT END OF LINE.  DAT HAS THE BREAK CHARACTER.  ONLY FF IS SIGNIFICANT.
                       XCI4:
111636 / 336000,,017001         SKIPN      017001             ;;THIS SHOULDN'T SKIP EXCEPT IF SCREWED
111637 / 332000,,016743         SKIPE      016743             ;;HEADING IN PROGRESS?
111640 / 254000,,111645          JRST      111645             ;;YES. AVOID CLOBBERING IT.
111641 / 200742,,112030          MOVE  AC3,   MTB(TAC1)       ;;HERE AT END OF A CHARACTER LINE.
111642 / 406741,,000000          ANDM  AC3,      (TAC)        ;;MASK OUT USED UP BYTES.
111643 / 265740,,111113           JSP  AC3,111113             ;;ADVANCE BUFFER POINTERS.
111644 / 254000,,111652          JRST       XCI4B             ;
                       XCI4A:
111645 / 200040,,017002          MOVE  TAC,XSVCAD             ;
111646 / 332000,,016743         SKIPE      XGPHIP             ;
111647 / 202040,,016734         MOVEM  TAC,XFTCAD             ;
111650 / 402000,,016743         SETZM      016743             ;;NO LONGER HEADING IN PROGRESS
111651 / 402000,,017001         SETZM      017001             ;;DRD STRIKES AGAIN.
                       XCI4B:
111652 / 337600,,016732         SKIPG  UUO,016732             ;;IS THE MAXIMUM HEIGHT SET?
111653 / 200600,,016727          MOVE  UUO,016727             ;;NO. SET IT FROM THE CURRENT FONT HEIGHT
111654 / 202600,,016732         MOVEM  UUO,016732             ;
111655 / 322400,,111674         JUMPE  TEM,111674             ;;JUMP IF THERE IS NO COMMAND GROUP.
152733 / 254036,,000000          JRST      @      (AC2)       ;
111656 / 261400,,152733          PUSH  TEM,152733             ;;STOP THE CURRENT COMMAND GROUP.
111657 / 200040,,017005          MOVE  TAC,017005             ;;GET THE ADDRESS OF THIS TEXT NODE.
111660 / 212601,,000002         MOVNM  UUO,     2(TAC)        ;;SAVE THE ACTIVE LINE COUNT.
111661 / 200100,,017040          MOVE TAC1,017040             ;;GET THE Y POSITION.
111662 / 202101,,000001         MOVEM TAC1,     1(TAC)        ;;STORE IN TEXT NODE.
111663 / 250100,,017041          EXCH TAC1,017041             ;;STORE THIS AS THE LAST Y WE DID.
111664 / 402001,,000000         SETZM            (TAC)        ;;ZERO THE LINK OUT
111665 / 700600,,000400          CONO   PI, PIOFF             ;
111666 / 202060,,017015         MOVEM  TAC,@017015            ;;STORE THRU THE TAIL.
111667 / 202040,,017015         MOVEM  TAC,017015             ;;STORE NEW QUEUE TAIL
111670 / 700600,,000200          CONO   PI,  PION             ;
111671 / 313100,,017041         CAMLE TAC1,017041             ;;IS Y0 > OR = THE LAST Y WE DID?
111672 / 260140,,112017         PUSHJ    P,112017             ;;OUT OF ORDER.
111673 / 476000,,017044         SETOM      017044             ;;FLAG TEXT IS ON PAGE.
                       XCI5:
111674 / 306240,,000014          CAIN  DAT,000014             ;;FF?
111675 / 254000,,111733          JRST      111733             ;;YES.
111676 / 336600,,017006         SKIPN  UUO,017006             ;;ANY VECTOR NODE TO QUEUE?
111677 / 254000,,111715          JRST      111715             ;;NO.
111700 / 200114,,000001          MOVE TAC1,     1(UUO)        ;;GET THE Y0 OF THIS VECTOR
111701 / 202100,,017040         MOVEM TAC1,017040             ;;USE AS THE Y0 OF THE NEXT TEXT
111702 / 250100,,017041          EXCH TAC1,017041             ;;STORE AS THE LAST Y0 THAT WAS QUEUED
111703 / 700600,,000400          CONO   PI,000400             ;;QUEUE THE VECTOR NODE.
111704 / 202620,,017015         MOVEM  UUO,@XPENDT            ;
111705 / 202600,,017015         MOVEM  UUO,XPENDT             ;
111706 / 700600,,000200          CONO   PI,  PION             ;
111707 / 313100,,017041         CAMLE TAC1,XGPLYP             ;
111710 / 260140,,112017         PUSHJ    P,112017             ;;OUT OF ORDER
111711 / 476000,,017044         SETOM      017044             ;;FLAG TEXT EXISTS ON PAGE.
111712 / 306240,,000014          CAIN  DAT,    14             ;
111713 / 254000,,111733          JRST      111733             ;;IN CASE OF ACCIDENT HE ALWAYS ...
111714 / 254000,,111721          JRST      111721             ;;(DAT IS ZERO)
                       XCI6:
111715 / 337240,,016726         SKIPG  DAT,016726             ;;SPECIAL LINE SPACE, IF ANY,
111716 / 200240,,017157          MOVE  DAT,017157             ;;ELSE THE REGULAR LINE SPACE.
111717 / 402000,,016726         SETZM      016726             ;;(AND NO SPECIAL LINE SPACE ANYMORE)
111720 / 270240,,016732           ADD  DAT,016732             ;;PLUS LINE HEIGHT.
                       XCI6Z:
111721 / 273240,,017040          ADDB  DAT,017040             ;;PLUS Y0 OF THIS LINE, ICS Y0 OF NEXT LINE.
111722 / 337040,,017153         SKIPG  TAC,XGPPS2             ;
111723 / 254000,,111727          JRST      111727             ;;PMAR=0 MEANS DON'T CUT UNLESS TOLD
111724 / 270040,,017152           ADD  TAC,017152             ;;SUM OF TOP MARGIN+PAGE BODY SIZE
111725 / 301241,,000000          CAIL  DAT,      (TAC)        ;;SKIP UNLESS WE NEED A FORM FEED HERE.
111726 / 254000,,111734          JRST      111734             ;;HERE WE NEED A FORM FEED.
                       XCI6ZZ:
111727 / 205040,,000400         MOVSI  TAC,000400             ;;ERROR FLAG UP?
111730 / 612040,,016566          TDNE  TAC,016566             ;;?
111731 / 254000,,111741          JRST      111741             ;;YES.  SCREECH
111732 / 254000,,111601          JRST      111601             ;;GO DO THE NEXT LINE.
                       XCI6A:
111733 / 402000,,016742         SETZM      016742             ;;REAL FF. PAPER PAGE ← 0
                       XCI6B:
111734 / 205040,,000400         MOVSI  TAC,000400             ;;IS THERE AN ERROR?
111735 / 612040,,016566          TDNE  TAC,XGPIOS             ;
111736 / 254000,,111741          JRST      111741             ;;ERROR.  FAKE EOF.
111737 / 265740,,111102           JSP  AC3,111102             ;;SEE IF THERE'S  MORE DATA TO SEND
111740 / 254000,,111750          JRST      111750             ;;TAC<0 MEANS MORE DATA.
                       XCI6E:
111741 / 260140,,107776         PUSHJ    P,107776             ;;HERE FOR ERROR.
111742 / 410040,,016566         ANDCA  TAC,016566             ;;CLEAR PRIMARY ERROR
111743 / 435040,,200000          IORI  TAC,200000             ;;TURN ON USER'S ERROR
111744 / 202040,,016566         MOVEM  TAC,XGPIOS             ;
111745 / 402000,,016625         SETZM      016625             ;;WON'T RUN PAPER.
111746 / 260140,,107770         PUSHJ    P,XSYNCX             ;
111747 / 201040,,000001         MOVEI  TAC,000001             ;;MAKE TAC>0 LIKE EOF.
                       XCI6DX:
111750 / 336000,,017044         SKIPN      017044             ;;ANY TEXT ON THIS PAGE?
111751 / 321040,,112001         JUMPL  TAC,112001             ;;NO. AVOID BLANK PAGES. (ONLY IF MORE DATA)
111752 / 254000,,111755          JRST       XCI6D             ;
                       XCI6C:
111753 / 700600,,000200          CONO   PI,000200             ;;RESTORE PI'S
111754 / 264000,,000752           JSR      000752             ;;SET RESTART ADDRESS AND DISMISS.
                       ;*4
                       XCI6D:
111755 / 700600,,000400          CONO   PI, PIOFF             ;
111756 / 336100,,017007         SKIPN TAC1,017007             ;;GET A FREE VECTOR.
111757 / 254000,,111753          JRST      111753             ;;HAVE TO WAIT FOR A FREE NODE.
111760 / 200242,,000000          MOVE  DAT,      (TAC1)       ;;GET LINK
111761 / 202240,,017007         MOVEM  DAT,017007             ;;STORE LINK
111762 / 700600,,000200          CONO   PI,  PION             ;
111763 / 402002,,000000         SETZM            (TAC1)       ;;FIX LINK OUT
111764 / 337240,,017153         SKIPG  DAT,017153             ;;PMAR
111765 / 334240,,017040         SKIPA  DAT,017040             ;;PMAR = 0 USE CURRENT Y POSITION AS A GUIDE
111766 / 270240,,017152           ADD  DAT,XGPPS1             ;
111767 / 270240,,017154           ADD  DAT,017154             ;;TOTAL PAGE SIZE
111770 / 202242,,000001         MOVEM  DAT,     1(TAC1)       ;;STORE Y0 IN THE WORD.
111771 / 402002,,000002         SETZM           2(TAC1)       ;;N=0 DENOTES VECTOR TYPE NODE.
111772 / 476002,,000003         SETOM           3(TAC1)       ;;WIDTH<0 DENOTES PAGE NODE
111773 / 202042,,000004         MOVEM  TAC,     4(TAC1)       ;;STORE POSITIVE FOR EOF.
111774 / 700600,,000400          CONO   PI,000400             ;;QUEUE THE PAGE MARK NODE.
111775 / 202120,,017015         MOVEM TAC1,@017015            ;;STORE AT END OF QUEUE
111776 / 202100,,017015         MOVEM TAC1,017015             ;;UPDATE END OF QUEUE.
111777 / 700600,,000200          CONO   PI,  PION             ;
112000 / 402000,,017044         SETZM      017044             ;;NO TEXT ON PAGE ANY MORE.
                       XCI6F:
112001 / 325040,,112015        JUMPGE  TAC,112015             ;;JUMP IF EOF
112002 / 200040,,017152          MOVE  TAC,XGPPS1             ;
112003 / 202040,,017040         MOVEM  TAC,017040             ;;SET CURRENT Y POSITION.
112004 / 402000,,017041         SETZM      017041             ;;LAST Y QUEUED WAS 0
112005 / 350100,,016742           AOS TAC1,016742             ;;INCREMENT "PAPER PAGE" COUNT
112006 / 335040,,016744        SKIPGE  TAC,016744             ;;IS THERE AN AOBJN POINTER FOR HEADING?
112007 / 307100,,000001          CAIG TAC1,000001             ;;YES. SKIP IF AFTER FIRST PAPER PAGE.
112010 / 254000,,111601          JRST      111601             ;;NO HEADING OR FIRST PAPER PAGE. SEND DATA.
                       XCIP2:
112011 / 476000,,016743         SETOM      016743             ;;HEADING IN PROGRESS
112012 / 200100,,016734          MOVE TAC1,016734             ;;SAVE PRESENT FONT.
112013 / 202100,,017002         MOVEM TAC1,017002             ;;SAVE IT.
112014 / 254000,,111603          JRST      111603             ;;GO DO THE HEADING
                       XCIP3:
112015 / 264000,,000752           JSR      000752             ;;EOF. DISMISS INTERRUPT.
112016 / 254000,,112015          JRST      112015             ;;IGNORE FURTHER INTERRUPTS.
                       XGPOOO:
112017 / 201240,,000014         MOVEI  DAT,000014             ;;SET TO KILL TRANSFER
112020 / 205000,,000400         MOVSI      XGPERR             ;
112021 / 260140,,107766         PUSHJ    P,XGPSET             ;
112022 / 254000,,107523          JRST      107523             ;;OUT OF ORDER
                       ;	MODE 0	GET NEXT CHARACTER
                       BTB:
112023 / 000001,,000000                                       ;
112023 / 010701,,000000 POINT 7,01000000,34                   ;
                       ;(BYTE THE BAG?)
112024 / 000001,,000000                                       ;
112024 / 100701,,000000 POINT 7,01000000,27                   ;
112025 / 000001,,000000                                       ;
112025 / 170701,,000000 POINT 7,01000000,20                   ;
112026 / 000001,,000000                                       ;
112026 / 260701,,000000 POINT 7,01000000,13                   ;
112027 / 000001,,000000                                       ;
112027 / 350701,,000000 POINT 7,01000000,6                    ;
                       MTB:
112030 / 000000,,000000                                       ;
112031 / 000000,,000377                                       ;
112032 / 000000,,077777                                       ;
112033 / 000017,,777777                                       ;
112034 / 003777,,777777                                       ;
112035 / 777777,,777777                                       ;;NOT REDUNDANT! USED TO UNTAKE A CHARACTER
                       ;HERE WHEN WE HAVE END OF HEADING DATA.
                       XCIG4:
112036 / 201240,,000020         MOVEI  DAT,000020             ;;SET SPECIAL LINE SPACE COUNT
112037 / 202240,,016726         MOVEM  DAT,XGPSLS             ;
112040 / 254000,,111635          JRST      111635             ;;MAKE END OF LINE OCCUR.
                       XCIG3:
112041 / 336000,,017001         SKIPN      017001             ;;PAGE NUMBER HACK?
112042 / 254000,,112036          JRST      112036             ;;NO. JUST HEADING HACK
112043 / 402000,,017001         SETZM      017001             ;;CLEAR PAGE NUMBER CELL
112044 / 200040,,016777          MOVE  TAC,016777             ;;RESTORE TAC, TAC1
112045 / 200100,,017000          MOVE TAC1,017000             ;;GET NEXT CHARACTER
                       ; JSP AC3,XCIG TO GET NEXT CHARACTER INTO DAT
                       XCIG:
112046 / 361100,,112051          SOJL TAC1,112051             ;;COUNT DOWN IN WORD.
112047 / 135242,,112023           LDB  DAT,   BTB(TAC1)       ;;GOBBLE A BYTE
112050 / 254017,,000000          JRST            (AC3)        ;;RETURN
                       XCIG1:
112051 / 201100,,000005         MOVEI TAC1,000005             ;;HERE THE WORD RAN OUT.
112052 / 253040,,112046         AOBJN  TAC,112046             ;;ADVANCE TO NEXT WORD.
112053 / 336000,,016743         SKIPN      016743             ;;HEADING IN PROGRESS OR 
112054 / 332000,,017001         SKIPE      017001             ;;ARE WE IN PAGE NUMBER HACK?
112055 / 254000,,112041          JRST      112041             ;;YES. DO IT
112056 / 261140,,000017          PUSH    P,000017             ;;NO NEXT WORD.  SAVE RETURN
112057 / 261140,,000015          PUSH    P,   AC1             ;
112060 / 265740,,111113           JSP  AC3,111113             ;;DO THE BUFFER FROTZ
112061 / 265740,,111102           JSP  AC3,BFOSET             ;
112062 / 262140,,000015           POP    P,   AC1             ;
112063 / 262140,,000017           POP    P,000017             ;;RESTORE RETURN ADDRESS
112064 / 321040,,112046         JUMPL  TAC,112046             ;;JUMP IF THERE'S DATA LEFT.
                       XCI0:
112065 / 200240,,016636          MOVE  DAT,016636             ;;NO DATA LEFT. IS THIS CLOSE TIME?
112066 / 322240,,112072         JUMPE  DAT,112072             ;;JUMP IF CLOSE UUO DONE.
                       ;WE RAN OUT OF DATA WITHOUT A CLOSE UUO.
112067 / 260140,,107517         PUSHJ    P,107517             ;;SET DATA MISS ERROR CODE.
                       XCIG2A:
112070 / 205000,,000400         MOVSI      000400             ;;SET ERROR STATUS.
112071 / 260140,,107766         PUSHJ    P,XGPSET             ;
                       XCI3:
112072 / 201240,,000014         MOVEI  DAT,000014             ;;HERE FOR END OF DATA.
112073 / 254000,,111645          JRST      111645             ;;DO A FORM-FEED.
                       ;	HERE FOR SPECIALS
                       ;H. TAB
                       XCI1A:
112074 / 200740,,016734          MOVE  AC3,XFTCAD             ;
112075 / 200757,,000041          MOVE  AC3,    41(AC3)        ;;LOAD AOBJN POINTER
153062 / 000017,,000000                                       ;
153062 / 331117,,000000 POINT 9,17000000,8                    ;
112076 / 135740,,153062           LDB  AC3,153062             ;;GET WIDTH OF A SPACE.
112077 / 322740,,111616         JUMPE  AC3,111616             ;;IF A SPACE IS ZERO WIDTH, SO IS A TAB
112100 / 271217,,000000          ADDI    J,      (AC3)        ;;ADVANCE AT LEAST ONE SPACE.
112101 / 242740,,000003           LSH  AC3,000003             ;;TIMES 8
112102 / 274200,,017155           SUB    J,017155             ;;TAB. COMPUTE DISTANCE FROM MARGIN
112103 / 231217,,000000         IDIVI    J,      (AC3)        ;;QUOTIENT IN J REMAINDER IN DAT
112104 / 322240,,112106         JUMPE  DAT,112106             ;
112105 / 271200,,000001          ADDI    J,     1             ;
112106 / 221217,,000000         IMULI    J,      (AC3)        ;
112107 / 270200,,017155           ADD    J,017155             ;;ADD THE MARGIN SIZE BACK IN.
112110 / 254000,,112112          JRST      112112             ;;NOW WE LOOK LIKE A COLUMN SELECT
                       XCI1B:
112111 / 200200,,017155          MOVE    J,017155             ;;HERE FOR CR. LOAD LEFT MARGIN
                       ;AND DO A COLUMN SELECT.
                       XCI1C:
112112 / 274200,,016731           SUB    J,016731             ;;MAKE COLUMN ADJUSTMENT
                       ;HERE TO DO SPECIAL COL SEL FROM KERNING FONT.
                       XCI1CA:
112113 / 316400,,000012          CAMN  TEM,000012             ;;IS THIS MCG EMPTY?
112114 / 254000,,111616          JRST      111616             ;;YES. DO COLUMN SELECT BY AN NON-EMPTY MCG
112115 / 305350,,000002         CAIGE PROG,     2(TEM)        ;;ROOM LEFT FOR THIS AND JUMP?
112116 / 260140,,111524         PUSHJ    P,111524             ;;NO. ADD A NEW TEXT NODE.
151605 / 744200,,140000          CONO  XGP,  SETX             ;
112117 / 261400,,151605          PUSH  TEM,151605             ;
112120 / 272210,,000000          ADDM    J,      (TEM)        ;
112121 / 200440,,000010          MOVE DSER,000010             ;;DSER NO LONGER POINTS TO AOBJN POINTER.
112122 / 254000,,111616          JRST        XCI1             ;
                       ;	HERE TO PROCESS RUBOUT
                       ;HERE FOR RUBOUT. - GET NEXT CHARACTER.
                       XCI2:
112123 / 265740,,112046           JSP  AC3,112046             ;;HERE FOR DLE. GET NEXT -  PROCESS AS NORMAL
112124 / 305240,,000005         CAIGE  DAT,XCI2ZL             ;
112125 / 254025,,112133          JRST      @ XCI2Z(DAT)       ;;DISPATCH THRU TABLE
112126 / 301240,,000020          CAIL  DAT,000020             ;;TREAT '177 '20 THRU '177 '24 AS LINE SPACE
112127 / 303240,,000024         CAILE  DAT,    24             ;
112130 / 254000,,112455          JRST      112455             ;;TREAT AS NORMAL
112131 / 201240,,000000         MOVEI  DAT,                   ;;TREAT AS LINE-FEED
112132 / 254000,,111636          JRST      111636             ;;SINCE ALL CAUSE SPACING ON THE LPT.
                       XCI2Z:
112133 / 000000,,112455                                       ;;'177 '0 IS NORMAL
112134 / 000000,,112140                                       ;;'177 '1 IS ESCAPE 1
112135 / 000000,,112353                                       ;;'177 '2 IS ESCAPE 2
112136 / 000000,,112370                                       ;;'177 '3 IS ESCAPE 3
112137 / 000000,,112376                                       ;;'177 '4 IS ESCAPE 4
                       ;HERE FOR '177 '001 - XGP ESCAPE 1.
                       ESC1:
112140 / 265740,,112046           JSP  AC3,112046             ;;GET NEXT CHARACTER
112141 / 305240,,000040         CAIGE  DAT,000040             ;;IS THIS A COMMAND OR FONT SELECT
112142 / 254000,,112240          JRST      112240             ;;FONT SELECT OR ILLEGAL
112143 / 301240,,000050          CAIL  DAT,000050             ;
112144 / 254000,,111616          JRST      111616             ;;ILLEGAL COMMAND. GET NEXT CHARACTER
112145 / 254025,,112106          JRST      @112106(DAT)       ;
                       XCI2Y:
112146 / 000000,,112156                                       ;;'177 '001 '040	 COLUMN SELECT
112147 / 000000,,112165                                       ;;'177 '001 '041  UNDERSCORE
112150 / 000000,,112235                                       ;;'177 '001 '042	 LINE SPACE SET.
112151 / 000000,,112264                                       ;;'177 '001 '043  FONT BASE LINE TWIDDLE.
112152 / 000000,,112301                                       ;;'177 '001 '044  PAPER PAGE NUMBER
112153 / 000000,,112324                                       ;;'177 '001 '045  SET&PRINT HEADING.
112154 / 000000,,112351                                       ;;'177 '001 '046  START UNDERLINE.
112155 / 000000,,112163                                       ;;'177 '001 '047  STOP UNDERLINE.
                       ES1_0:
112156 / 201700,,000002         MOVEI  AC2,000002             ;;2 BYTES
112157 / 260140,,112362         PUSHJ    P,  GLOM             ;
112160 / 405640,,003777          ANDI  AC1,003777             ;;REDUCE TO REASONABILITY
112161 / 201215,,000000         MOVEI    J,      (AC1)        ;
112162 / 254000,,112112          JRST      112112             ;;GO SET COLUMN POSITION.
                       ES1_7:
112163 / 250200,,017004          EXCH    J,017004             ;;SPECIAL UNDERSCORE COMMAND
112164 / 254000,,112166          JRST      112166             ;
                       ES1_1:
112165 / 563000,,017004         HRROS      017004             ;;FLAG NORMAL UNDERSCORE COMMAND
                       ES1_1X:
112166 / 322400,,112173         JUMPE  TEM,112173             ;
112167 / 305350,,000002         CAIGE PROG,     2(TEM)        ;;ROOM TO END THIS COMMAND?
112170 / 260140,,111524         PUSHJ    P,111524             ;;NO. ADD MORE SPACE.
112171 / 312500,,000010          CAME UCHN,000010             ;;IS THERE AN MCG IN PROGRESS?
152733 / 254036,,000000          JRST      @      (AC2)       ;
112172 / 261400,,152733          PUSH  TEM,152733             ;;YES. CLOSE IT.
                       ES1_1A:
112173 / 265740,,112046           JSP  AC3,112046             ;;GET SCAN LINE NUMBER
112174 / 602240,,000100          TRNE  DAT,000100             ;;NEGATIVE?
112175 / 465240,,000077         ORCMI  DAT,000077             ;;YES. SIGN EXTEND.
112176 / 335700,,016733        SKIPGE  AC2,016733             ;;LINE BASE-LINE SET YET?
112177 / 200700,,016730          MOVE  AC2,016730             ;;NOT YET. DO SO NOW.
112200 / 202700,,016733         MOVEM  AC2,  XLBL             ;
112201 / 270700,,000005           ADD  AC2,   DAT             ;
112202 / 201756,,000001         MOVEI  AC3,     1(AC2)        ;;GET MAXIMUM
112203 / 265640,,111416           JSP  AC1,111416             ;;SEEK FOR APPROPRIATE CHB, ELSE MAKE ONE.
112204 / 305350,,000006         CAIGE PROG,     6(TEM)        ;;ROOM FOR 6 LEFT?
112205 / 260140,,111524         PUSHJ    P,111524             ;;NO. ADD ANOTHER NODE.
151605 / 744200,,140000          CONO  XGP,  SETX             ;
112206 / 261400,,151605          PUSH  TEM,151605             ;
112207 / 272210,,000000          ADDM    J,      (TEM)        ;;SET COLUMN SELECT CODE
151606 / 744200,,150000          CONO  XGP,  SETN             ;
112210 / 261400,,151606          PUSH  TEM,151606             ;
112211 / 331000,,017004         SKIPL      017004             ;;SKIP IF NORMAL US.
112212 / 254000,,112230          JRST      112230             ;;SPECIAL US.
112213 / 201700,,000002         MOVEI  AC2,     2             ;
112214 / 260140,,112362         PUSHJ    P,112362             ;;READ 2 BYTES
112215 / 405640,,007777          ANDI  AC1,  7777             ;
                       ES1_1C:
112216 / 272650,,000000          ADDM  AC1,      (TEM)        ;
112217 / 271215,,000000          ADDI    J,      (AC1)        ;;GRONK OUR COLUMN POSITION APPROPRIATELY
151607 / 744340,,000020         CONSO  XGP,    NZ             ;
112220 / 261400,,151607          PUSH  TEM,151607             ;
112221 / 201610,,000000         MOVEI  UUO,      (TEM)        ;
152715 / 254000,,000000          JRST                         ;
112222 / 261400,,152715          PUSH  TEM,152715             ;
112223 / 542610,,000000          HRRM  UUO,      (TEM)        ;
                       ES1_1B:
152733 / 254036,,000000          JRST      @      (AC2)       ;
112224 / 261400,,152733          PUSH  TEM,152733             ;
112225 / 200500,,000010          MOVE UCHN,   TEM             ;
112226 / 200440,,000010          MOVE DSER,   TEM             ;
112227 / 254000,,111616          JRST        XCI1             ;
                       ES1_7B:
112230 / 200640,,017004          MOVE  AC1,XUSBEG             ;
112231 / 275644,,000000          SUBI  AC1,      (J)          ;
112232 / 325640,,112216        JUMPGE  AC1,112216             ;
112233 / 201640,,000000         MOVEI  AC1,                   ;
112234 / 254000,,112216          JRST      112216             ;
                       ES1_2:
112235 / 265740,,112046           JSP  AC3,  XCIG             ;
112236 / 202240,,016726         MOVEM  DAT,016726             ;;SET SPECIAL LINE SPACE
112237 / 254000,,111635          JRST       XCI1F             ;
                       ESC1A:
112240 / 303240,,000017         CAILE  DAT,000017             ;;SKIP IF FONT SELECT
112241 / 254000,,111616          JRST      111616             ;;THIS IS A CODE FROM 20 TO 37. RESERVED.
112242 / 202203,,000001         MOVEM    J,     1(P)          ;;SAVE COLUMN ADDRESS. NOTE!!! DON'T DO PUSHJ
112243 / 270200,,016731           ADD    J,016731             ;;ADD ADJUSTMENT WHEN LEAVING FONT
112244 / 336605,,016706         SKIPN  UUO,XFTADR(DAT)        ;;SEE IF THERE'S A FONT HERE
112245 / 200600,,016706          MOVE  UUO,016706             ;;NONE THERE. USE FONT 0
112246 / 270600,,016705           ADD  UUO,016705             ;;RELOCATE THE FONT BASE.
112247 / 552600,,016734         HRRZM  UUO,016734             ;;SAVE AS BASE OF CURRENT FONT
152415 / 000014,,000000                                       ;
152415 / 150514,,000000 POINT 5,14000000,22                   ;
112250 / 135240,,152415           LDB  DAT,152415             ;;GET NEW COLUMN POS ADJ
112251 / 202240,,016731         MOVEM  DAT,016731             ;;SAVE IT
112252 / 275205,,000000          SUBI    J,      (DAT)        ;;AND ADJUST COLUMN POSITION
112253 / 550254,,000000          HRRZ  DAT,      (UUO)        ;;GET THE NEW FONT HEIGHT
112254 / 405240,,017777          ANDI  DAT,017777             ;;MASK OFF THE COLUMN POSITION ADJUST FIELD
112255 / 554614,,000000          HLRZ  UUO,      (UUO)        ;;AND THE NEW BASELINE
112256 / 316240,,016727          CAMN  DAT,016727             ;;COMPARE OLD AND NEW HEIGHTS
112257 / 312600,,016730          CAME  UUO,016730             ;;OLD AND NEW BASELINES
112260 / 254000,,112272          JRST      112272             ;;FONTS ARE NOT COMPATABLE
112261 / 312203,,000001          CAME    J,     1(P)          ;;DID COLUMN POSITION CHANGE?
112262 / 254000,,112113          JRST      112113             ;;YES. DO A COLUMN SELECT NOW.
112263 / 254000,,111616          JRST      111616             ;;FOR COMPATABLE FONTS, NO EXTRA WORK
                       ES1_3:
112264 / 265740,,112046           JSP  AC3,112046             ;;GET NEXT CHARACTER
112265 / 301240,,000100          CAIL  DAT,   100             ;
112266 / 465240,,000177         ORCMI  DAT,   177             ;
112267 / 554620,,016734          HLRZ  UUO,@016734            ;;GET REAL BASE-LINE
112270 / 270600,,000005           ADD  UUO,000005             ;;ADD THE TWIDDLE
112271 / 254000,,112273          JRST      112273             ;;PRETEND WE SAW A NEW FONT.
                       ESC1B:
112272 / 202240,,016727         MOVEM  DAT,016727             ;;STORE NEW HEIGHT
                       ESC1C:
112273 / 202600,,016730         MOVEM  UUO,016730             ;;NEW BASELINE
112274 / 316500,,000010          CAMN UCHN,000010             ;;CHECK TO SEE IF OLD MCG IS EMPTY
112275 / 254000,,111616          JRST      111616             ;;NO NEED TO CLOSE AN EMPTY MCG
112276 / 305350,,000002         CAIGE PROG,     2(TEM)        ;;ROOM TO CLOSE THIS HERE?
112277 / 260140,,111524         PUSHJ    P,111524             ;;NO. MAKE ANOTHER NODE.
112300 / 254000,,112224          JRST      112224             ;;SET RETURN, SET UP FOR NEW CHB
                       ;HERE FOR '177 '001 '044 - INSERT PAPER PAGE NUMBER.
                       ES1_4:
112301 / 200240,,016742          MOVE  DAT,XGPPG2             ;
112302 / 303240,,303237         CAILE  DAT,303237             ;
112303 / 254000,,111616          JRST      111616             ;;FLUSH.
112304 / 202040,,016777         MOVEM  TAC,XGPAT0             ;
112305 / 202100,,017000         MOVEM TAC1,017000             ;
112306 / 201045,,000000         MOVEI  TAC,      (DAT)        ;
151402 / 000000,,017001                                       ;
151402 / 440700,,017001 POINT 7,00017001,                     ;
112307 / 200240,,151402          MOVE  DAT,151402             ;
112310 / 260140,,112314         PUSHJ    P,112314             ;
112311 / 201040,,017001         MOVEI  TAC,XGPAT2             ;
112312 / 201100,,000005         MOVEI TAC1,     5             ;
112313 / 254000,,111616          JRST        XCI1             ;
                       ES1_4B:
112314 / 231040,,000012         IDIVI  TAC,000012             ;
112315 / 506103,,000000          HRLM TAC1,      (P)          ;
112316 / 322040,,112320         JUMPE  TAC,112320             ;
112317 / 260140,,112314         PUSHJ    P,112314             ;
112320 / 554043,,000000          HLRZ  TAC,      (P)          ;
112321 / 271040,,000060          ADDI  TAC,000060             ;
112322 / 136040,,000005          IDPB  TAC,   DAT             ;
112323 / 263140,,000000          POPJ    P,                   ;
                       ;HERE FOR '177 '1 '45 - SET AND PRINT HEADING
                       ES1_5:
112324 / 205700,,016745         MOVSI  AC2,XGPHDB             ;
112325 / 556700,,016744         HLRZM  AC2,016744             ;;CLEAR HEADING COUNT
112326 / 402000,,016745         SETZM      016745             ;;CLEAR HEADING BUFFER
112327 / 541700,,016746          HRRI  AC2,016746             ;
112330 / 251700,,016776           BLT  AC2,016776             ;;CLEAR 130 CHARACTERS
112331 / 265740,,112046           JSP  AC3,112046             ;;GET A CHARACTER. THIS IS THE COUNT.
112332 / 201645,,000000         MOVEI  AC1,      (DAT)        ;;KEEP THE COUNT.
112333 / 322640,,111616         JUMPE  AC1,111616             ;;COUNT OF ZERO MEANS FLUSH HEADING.
151401 / 000000,,016745                                       ;
151401 / 440700,,016745 POINT 7,00016745,                     ;
112334 / 200700,,151401          MOVE  AC2,151401             ;
                       ES1_5A:
112335 / 265740,,112046           JSP  AC3,  XCIG             ;
112336 / 136240,,000016          IDPB  DAT,   AC2             ;
112337 / 367640,,112335          SOJG  AC1,112335             ;;DECREMENT COUNT AND LOOP UNLESS RUN OUT
112340 / 405700,,777777          ANDI  AC2,777777             ;;GET THE ADDRESS ONLY
112341 / 275700,,016744          SUBI  AC2,016744             ;;COMPUTE WORD COUNT
112342 / 211716,,000000         MOVNI  AC2,      (AC2)        ;
112343 / 506700,,016744          HRLM  AC2,XGPHDW             ;
112344 / 200242,,112030          MOVE  DAT,   MTB(TAC1)       ;
112345 / 406241,,000000          ANDM  DAT,      (TAC)        ;;CLEAR OUT THE TEXT WE'VE PROCESSED
112346 / 265740,,111113           JSP  AC3,111113             ;;GIVE BACK SOME BUFFER SPACE
112347 / 200040,,016744          MOVE  TAC,016744             ;;READY FOR THE HEADING
112350 / 254000,,112011          JRST      112011             ;;SET DO THE HEADING.  (OOF)
                       ;HERE FOR '177 '1 '46 - START UNDERLINE.
                       ES1_6:
112351 / 202200,,017004         MOVEM    J,017004             ;;STORE PRESENT COLUMN FOR START OF UNDERLINE
112352 / 254000,,111616          JRST      111616             ;;DO MORE.
                       ;HERE FOR '177 '002 - XGP ESCAPE 2
                       ESC2:
112353 / 265740,,112046           JSP  AC3,112046             ;;GET ANOTHER CHARACTER
112354 / 301240,,000100          CAIL  DAT,000100             ;;SKIP IF INTERPRETED AS POSITIVE
112355 / 465240,,000177         ORCMI  DAT,000177             ;;EXTEND NEGATIVE SIGN
112356 / 270200,,000005           ADD    J,000005             ;;DO FULL WORD ADD.
112357 / 325200,,112113        JUMPGE    J,112113             ;;NOW IT'S LIKE TAB OR CR
112360 / 201200,,000000         MOVEI    J,                   ;;PREVENT BACKSPACE OFF LEFT END
112361 / 254000,,112113          JRST      112113             ;;
                       GLOM:
112362 / 201640,,000000         MOVEI  AC1,                   ;;ACCUMULATE MULTIPLE BYTES
                       ;COUNT IN AC2, RETURNS IN AC1
                       GLOM1:
112363 / 265740,,112046           JSP  AC3,112046             ;;GET A BYTE
112364 / 242640,,000007           LSH  AC1,     7             ;
112365 / 435645,,000000          IORI  AC1,      (DAT)        ;
112366 / 367700,,112363          SOJG  AC2,112363             ;;DECREMENT COUNT
112367 / 263140,,000000          POPJ    P,                   ;;RETURN.
                       ;HERE FOR '177 '003 - SET Y POSITION OF CURRENT TEXT LINE.
                       ESC3:
112370 / 201700,,000002         MOVEI  AC2,000002             ;;GET 2 BYTES
112371 / 260140,,112362         PUSHJ    P,112362             ;;GOBBLE GOBBLE
112372 / 202640,,017040         MOVEM  AC1,017040             ;;SET CURRENT Y POSITION.
112373 / 254000,,111616          JRST      111616             ;;COMPILE MORE.
                       ;HERE FOR '177 '004
                       ESC4A:
112374 / 700600,,000200          CONO   PI,000200             ;;HERE TO WAIT FOR A NODE.
112375 / 264000,,000752           JSR      X2DISP             ;
                       ESC4:
112376 / 700600,,000400          CONO   PI, PIOFF             ;
112377 / 336600,,017007         SKIPN  UUO,017007             ;;GOBBLE FROM VECTOR NODE FREE LIST.
112400 / 254000,,112374          JRST      112374             ;;WAIT.
112401 / 200254,,000000          MOVE  DAT,      (UUO)        ;
112402 / 202240,,017007         MOVEM  DAT, XVNFL             ;
112403 / 700600,,000200          CONO   PI,000200             ;;UUO NOW POINTS TO THE NEW NODE.
112404 / 402014,,000000         SETZM            (UUO)        ;
112405 / 201700,,000002         MOVEI  AC2,000002             ;;2 BYTES OF Y0
112406 / 260140,,112362         PUSHJ    P,  GLOM             ;
112407 / 202654,,000001         MOVEM  AC1,     1(UUO)        ;;STORE Y0
112410 / 201700,,000002         MOVEI  AC2,000002             ;;2 BYTES OF X0
112411 / 260140,,112362         PUSHJ    P,  GLOM             ;
112412 / 405640,,007777          ANDI  AC1,007777             ;;RESTRICT X0 TO RANGE
112413 / 516654,,000002         HRLZM  AC1,     2(UUO)        ;;STORE X0
112414 / 201700,,000003         MOVEI  AC2,000003             ;;3 BYTES OF DX
112415 / 260140,,112362         PUSHJ    P,  GLOM             ;
112416 / 603640,,000004          TLNE  AC1,000004             ;;SIGN BIT?
112417 / 661640,,777770           TLO  AC1,777770             ;;SIGN EXTEND.
112420 / 242640,,000011           LSH  AC1,000011             ;;SHIFT 9 BITS
112421 / 202654,,000004         MOVEM  AC1,     4(UUO)        ;;STUFF DX
112422 / 201700,,000002         MOVEI  AC2,000002             ;;2 BYTES OF N
112423 / 260140,,112362         PUSHJ    P,  GLOM             ;
112424 / 542654,,000002          HRRM  AC1,     2(UUO)        ;;STORE N
112425 / 201700,,000002         MOVEI  AC2,     2             ;
112426 / 260140,,112362         PUSHJ    P,  GLOM             ;
112427 / 405640,,007777          ANDI  AC1,007777             ;;REASONABLENESS
112430 / 435640,,150000          IORI  AC1,150000             ;;TURN ON THE RIGHT BITS
112431 / 202654,,000003         MOVEM  AC1,     3(UUO)        ;;STORE WIDTH.
112432 / 202600,,017006         MOVEM  UUO,017006             ;;STORE NODE ADDRESS.
112433 / 336240,,017153         SKIPN  DAT,017153             ;;SKIP UNLESS SPECIAL PAGE HACK
112434 / 254000,,112443          JRST      112443             ;;SPECIAL PAGE HACK. LEAVE IT ALONE.
112435 / 270240,,017152           ADD  DAT,017152             ;;SEE IF WE HAVE A PAGE TOO LONG
112436 / 311254,,000001          CAML  DAT,     1(UUO)        ;;SKIP IF WE'VE LOST
112437 / 254000,,112443          JRST      112443             ;;WE'RE OK SO FAR.
112440 / 260140,,107525         PUSHJ    P,107525             ;;THIS WILL SET THE ERROR CODE
                       ESC4X:
112441 / 402014,,000001         SETZM           1(UUO)        ;;(THIS WILL FORCE OOO ERROR)
112442 / 254000,,111635          JRST      111635             ;;QUEUE THIS TEXT NODE.
                       ESC4B:
112443 / 550254,,000002          HRRZ  DAT,     2(UUO)        ;;GET N
112444 / 510654,,000002          HLLZ  AC1,     2(UUO)        ;;GET X0
112445 / 220254,,000004          IMUL  DAT,     4(UUO)        ;;N*DX
112446 / 270240,,000015           ADD  DAT,000015             ;;+X0
152145 / 007777,,777777                                       ;
112447 / 317240,,152145          CAMG  DAT,152145             ;;OR TO FAR T'OTHER WAY
112450 / 325240,,111635        JUMPGE  DAT,111635             ;;SMALL ENOUGH. JUMP IF BIG ENOUGH
112451 / 260140,,107526         PUSHJ    P,107526             ;;LOSE - ILLEGAL VECTOR PARAMETERS
112452 / 402014,,000004         SETZM           4(UUO)        ;;SET DX TO 0
112453 / 513014,,000002         HLLZS           2(UUO)        ;;SET N TO 0
112454 / 254000,,112441          JRST      112441             ;;GO FORCE OOO ERROR.
                       ;	HERE FOR A 'NORMAL' CHARACTER
                       XCI2A:
112455 / 270240,,016734           ADD  DAT,016734             ;;ADD BASE OF TABLE
112456 / 336745,,000001         SKIPN  AC3,     1(DAT)        ;;SKIP IF THERE'S A CHARACTER THERE.
112457 / 254000,,111616          JRST      111616             ;;NONE THERE GET ANOTHER CHARACTER
153021 / 000017,,000000                                       ;
153021 / 310117,,000000 POINT 1,17000000,10                   ;
112460 / 135700,,153021           LDB  AC2,153021             ;
112461 / 326700,,112550         JUMPN  AC2,112550             ;;JUMP IF THIS IS A LEFT-KERN CHARACTER
                       XCI2AX:
112462 / 311200,,017156          CAML    J,017156             ;;ARE WE ABOUT TO OVERSTEP RIGHT MARGIN?
112463 / 344100,,111633          AOJA TAC1,111633             ;;YES. PUT BACK THIS CHARACTER.
112464 / 312440,,000010          CAME DSER,000010             ;;SKIP IF THIS IS A NEW SUBGROUP
112465 / 254000,,112533          JRST      112533             ;;NOT NEW
112466 / 312500,,000010          CAME UCHN,000010             ;;SKIP IF THIS IS A NEW MCG
112467 / 254000,,112522          JRST      112522             ;;NO. JUST NEW SUBGROUP
112470 / 322400,,112473         JUMPE  TEM,112473             ;;JUMP IF THERE ARE NO MCG'S
112471 / 331700,,016733         SKIPL  AC2,016733             ;;ARE THERE OTHER CHB'S YET?
112472 / 254000,,112475          JRST      112475             ;;YES.
                       XCI2AC:
112473 / 200700,,016730          MOVE  AC2, XCFBL             ;
112474 / 202700,,016733         MOVEM  AC2,  XLBL             ;
                       XCI2AA:
112475 / 274700,,016730           SUB  AC2,016730             ;;SUBTRACT TO FIND BASELINE OFFSET.
112476 / 321700,,112506         JUMPL  AC2,112506             ;;NEW BASELINE IS BIGGER (DEEPER)
112477 / 201756,,000000         MOVEI  AC3,      (AC2)        ;
112500 / 270740,,016727           ADD  AC3,  XCFH             ;
112501 / 265640,,111416           JSP  AC1,111416             ;;SEARCH FOR A BLOCK THAT'S RIGHT
112502 / 335700,,016733        SKIPGE  AC2,016733             ;;LINE BASE-LINE SET YET?
112503 / 200700,,016730          MOVE  AC2,016730             ;;NOT YET. DO SO NOW.
112504 / 202700,,016733         MOVEM  AC2,  XLBL             ;
112505 / 254000,,112516          JRST      XCI2AY             ;
                       XCI2AB:
112506 / 214740,,000016          MOVM  AC3,000016             ;;THE AMOUNT TO ADD TO ALL PRIOR COMMANDS.
112507 / 272740,,016732          ADDM  AC3,016732             ;;MAX HEIGHT MUST BE INCREASED
112510 / 200640,,016730          MOVE  AC1, XCFBL             ;
112511 / 202640,,016733         MOVEM  AC1,016733             ;;SET NEW LINE BASE-LINE
112512 / 265640,,111503           JSP  AC1,111503             ;;SET OFFSET IN ALL PRIOR COMMANDS
112513 / 550740,,016727          HRRZ  AC3,016727             ;;SET MAX FOR THIS TERM
112514 / 201700,,000000         MOVEI  AC2,                   ;;MIN
112515 / 265640,,111435           JSP  AC1,111435             ;;ADD A NEW COMMAND HEADER BLOCK
                       XCI2AY:
112516 / 305350,,000002         CAIGE PROG,     2(TEM)        ;
112517 / 260140,,111524         PUSHJ    P,ADDNOD             ;
151605 / 744200,,140000          CONO  XGP,  SETX             ;
112520 / 261400,,151605          PUSH  TEM,151605             ;
112521 / 272210,,000000          ADDM    J,      (TEM)        ;;SET COLUMN SELECTOR.
                       XCI2AZ:
112522 / 564745,,000001          HLRO  AC3,     1(DAT)        ;;GET THE CHARACTER WIDTH (WORDS)
112523 / 271747,,000000          ADDI  AC3,      (PROG)       ;
112524 / 305750,,000003         CAIGE  AC3,     3(TEM)        ;;ROOM FOR JSP,PTR,data,JRST?
112525 / 260140,,111524         PUSHJ    P,111524             ;;NO. ADD A NEW NODE.
152772 / 265740,,000004           JSP  AC3,  SCAN             ;
112526 / 261400,,152772          PUSH  TEM,152772             ;;STUFF COMMAND INTO BUFFER.
112527 / 200440,,000010          MOVE DSER,   TEM             ;
112530 / 201610,,000002         MOVEI  UUO,     2(TEM)        ;
112531 / 261400,,000014          PUSH  TEM,   UUO             ;
112532 / 200745,,000001          MOVE  AC3,     1(DAT)        ;;GET THE DATUM AGAIN.
                       XCI2B:
112533 / 564700,,000017          HLRO  AC2,000017             ;;GET SIZE OF THIS ITEM.
112534 / 271707,,000000          ADDI  AC2,      (PROG)       ;
112535 / 305710,,000001         CAIGE  AC2,     1(TEM)        ;;WILL THIS FIT?
112536 / 254000,,112522          JRST      112522             ;;NO. START A NEW NODE.
112537 / 510700,,000017          HLLZ  AC2,   AC3             ;
112540 / 272711,,000001          ADDM  AC2,     1(DSER)       ;
153062 / 000017,,000000                                       ;
153062 / 331117,,000000 POINT 9,17000000,8                    ;
112541 / 135640,,153062           LDB  AC1,153062             ;;GET THE WIDTH
112542 / 271215,,000000          ADDI    J,      (AC1)        ;;ADD THE WIDTH TO THE COLUMN COUNTER
153025 / 000017,,000000                                       ;
153025 / 320117,,000000 POINT 1,17000000,9                    ;
112543 / 135640,,153025           LDB  AC1,153025             ;;GET WIDTH KLUDGE BIT
112544 / 261417,,000000          PUSH  TEM,      (AC3)        ;;STUFF POINTERS
112545 / 253740,,112544         AOBJN  AC3,112544             ;
112546 / 322640,,111616         JUMPE  AC1,111616             ;;BACK TO GET ANOTHER UNLESS WIDTH KLUDGE
112547 / 254000,,112113          JRST      112113             ;;ELSE EXPLICITLY SET COLUMN POSITION.
                       XCI2AW:
112550 / 356000,,017045          AOSN      017045             ;;LEFT-KERN FLAG SET?
112551 / 254000,,112462          JRST      112462             ;;YES. WE WERE THRU HERE LAST TIME
112552 / 476000,,017045         SETOM      XLFTKF             ;
152106 / 777777,,777777                                       ;
152106 / 001137,,777777 POINT 9,777777777777,35               ;
112553 / 135700,,152106           LDB  AC2,152106             ;;GET KERN-OFFSET
112554 / 275216,,000000          SUBI    J,      (AC2)        ;
112555 / 344100,,112113          AOJA TAC1,112113             ;;GO SET THE COLUMN POSTION. PUT CHR BACK
112556 /                 ;::    BEND STANFO.XGPSER.
112556 /               ;: XGPSER[J17,SYS] EOF.
112556 /               ;: FBPACK[J17,SYS]
112556 /                 ;::   BEGIN STANFO.FBPACK.
                       ;JAM 22-APR-69
                       ;;POINTERS INTO FBBAND
                       FBLOGP:
112556 / 000017,,000000                                       ;
112556 / 140617,,000000 POINT 6,17000000,23                   ;
                       ; POINTS TO LOGICAL BAND NUMBER
                       FBLUZP:
112557 / 000017,,000000                                       ;
112557 / 100417,,000000 POINT 4,17000000,27                   ;
                       ; COUNTS WHEN BAND LOSES
                       FBPROT:
112560 / 000017,,000000                                       ;
112560 / 060217,,000000 POINT 2,17000000,29                   ;
                       ; POINTS TO FOREIGN JOB READ-WRITE ENABLE BITS
                       FBJOBP:
112561 / 000017,,000000                                       ;
112561 / 000617,,000000 POINT 6,17000000,35                   ;
                       ; POINTS TO JOB NUMBER
                       FBINI:
112562 / 402000,,016026         SETZM      016026             ;;INITIALIZE
112563 / 402000,,016224         SETZM      FBTASK             ;
112564 / 402000,,016236         SETZM      016236             ;
112565 / 476000,,016223         SETOM      FBBUSY             ;
112566 / 402000,,016225         SETZM       FBACT             ;
112567 / 201640,,000077         MOVEI  AC1,000077             ;;ASSUME THE WORST.
112570 / 202640,,035266         MOVEM  AC1,JOBNM1             ;
112571 / 744700,,000400         CONSZ  DSK,000400             ;;IF BIT 27 IS ON, THE DISK IS OFF LINE
112572 / 263140,,000000          POPJ    P,                   ;;IF NO DISK, QUIT NOW
112573 / 476000,,016225         SETOM      016225             ;;FAST BANDS ARE HERE TODAY.
112574 / 211640,,000014         MOVNI  AC1,000014             ;;KEEP RESERVE FOR ERRORS, LARGE JOBS & SEGMENTS
112575 / 202640,,035266         MOVEM  AC1,JOBNM1             ;
151621 / 777610,,016032           XWD -NBANDS,FBBAND          ;
112576 / 200740,,151621          MOVE  AC3,151621             ;
                       FBIN4:
112577 / 335017,,000000        SKIPGE            (AC3)        ;;IS THIS PERMANENT LOSER?
112600 / 254000,,112607          JRST      112607             ;;YES.
112601 / 135700,,112557           LDB  AC2,112557             ;;GET THE ERROR COUNT.
112602 / 135640,,112556           LDB  AC1,112556             ;;GET LOGICAL NUMBER
112603 / 305640,,000040         CAIGE  AC1,000040             ;;IS IT A SWAPPING BAND?
112604 / 402017,,000000         SETZM            (AC3)        ;;NOT FOR SWAPPING. DEASSIGN IT.
112605 / 137700,,112557           DPB  AC2,112557             ;;RESTORE THE COUNT.
112606 / 350000,,035266           AOS      035266             ;;ANOTHER BAND FREE!
                       FBIN5:
112607 / 253740,,112577         AOBJN  AC3,112577             ;;LOOP THRU THE BANDS.
112610 / 200740,,016027          MOVE  AC3,016027             ;
112611 / 242740,,777764           LSH  AC3,777764             ;
112612 / 476017,,016032         SETOM      FBBAND(AC3)        ;;PROTECT SYSTEM
112613 / 370000,,035266           SOS      035266             ;;GOBBLED ANOTHER
112614 / 202740,,016030         MOVEM  AC3,016030             ;;SET RIGHT-ADJUSTED COPY OF SYSTEM BAND NUMBER
112615 / 336000,,156174         SKIPN      156174             ;;IS SWAPPING DDT REQUESTED?
112616 / 254000,,112623          JRST      112623             ;;NO. NO NEED TO RESERVE A BAND.
112617 / 200740,,016031          MOVE  AC3,016031             ;
112620 / 242740,,000000           LSH  AC3,                   ;
112621 / 476017,,016032         SETOM      FBBAND(AC3)        ;;SAVE A BAND FOR SWAPPING DDT.
112622 / 370000,,035266           SOS      035266             ;;AND ANOTHER BAND GOBBLED.
                       FBIN6:
112623 / 200640,,035266          MOVE  AC1,035266             ;;THIS IS THE NUMBER OF BANDS-RESERVE.
112624 / 303640,,000077         CAILE  AC1,000077             ;;CAN'T BE LARGER THAN THIS
112625 / 201640,,000077         MOVEI  AC1,000077             ;;
112626 / 202640,,035266         MOVEM  AC1,035266             ;;THIS IS NOW THE MAX JOB NUMBER
112627 / 263140,,000000          POPJ    P,                   ;
                       ;FAST BAND SERVICE UUO'S
                       ;CALLING SEQUENCES . . .
                       ;	UFBRD <AC CONTAINING BAND NUMBER>,<ADDRESS OF GOODIE TABLE>
                       ;	<RETURN HERE IF ERRORS ENCOUNTERED>
                       ;	UFBWRT <AC CONTAINING BAND NUMBER>,<ADDRESS OF GOODIE TABLE>
                       ;	<RETURN HERE IF ERRORS ENCOUNTERED>
                       ;WHERE GOODIE TABLE IS . . .
                       ;	1) CORE ADDRESS, SIGN BIT SET IF NO WAIT
                       ;	2) NUMBER OF WORDS
                       ;	3) DISK SECTOR ADDRESS (.LE.2431 DECIMAL)
                       UFBRD:
112630 / 260140,,112677         PUSHJ    P,112677             ;;CHECK GOODIES. DON'T RETURN IF ERROR.
153043 / 331014,,000000         SKIPL            (UUO)        ;
112631 / 256200,,153043          XCTR   XR,153043             ;;IS THIS A NO WAIT UUO?
112632 / 254000,,112643          JRST      112643             ;;NO. GO DO THE READ AND WAIT.
112633 / 205240,,112773         MOVSI  DAT,112773             ;;QUEUE UP THE TRANSFER.
112634 / 541244,,000000          HRRI  DAT,      (J)          ;
112635 / 260140,,113240         PUSHJ    P,  FBRD             ;
112636 / 263140,,000000          POPJ    P,                   ;;LOSE.
112637 / 700600,,002002          CONO   PI,002002             ;;TURN ON THE DISK
112640 / 201640,,010000         MOVEI  AC1,010000             ;;SET THE TRANSFER IN PROGRESS BIT
112641 / 436644,,026114          IORM  AC1,JBTSTS(J)          ;
112642 / 254000,,037401          JRST      037401             ;;AND RETURN.
                       NORRD:
112643 / 400240,,000000          SETZ  DAT,                   ;;ZERO DAT FOR A TRANSFER AND WAIT UUO.
112644 / 260140,,113240         PUSHJ    P,113240             ;;QUEUE TRANSFER.
112645 / 263140,,000000          POPJ    P,                   ;;OOPS.
112646 / 254000,,112665          JRST      112665             ;;WAIT UNTIL TRANSFER IS COMPLETE
                       UFBWRT:
112647 / 260140,,112677         PUSHJ    P,112677             ;;ADDRESS CHECK GOODIES. 
153043 / 331014,,000000         SKIPL            (UUO)        ;
112650 / 256200,,153043          XCTR   XR,153043             ;;SAME AS UFBRD ABOVE.
112651 / 254000,,112662          JRST       NORWR             ;
112652 / 205240,,112773         MOVSI  DAT,  UFBD             ;
112653 / 541244,,000000          HRRI  DAT,      (J)          ;
112654 / 260140,,113227         PUSHJ    P, FBWRT             ;
112655 / 263140,,000000          POPJ    P,                   ;
112656 / 700600,,002002          CONO   PI, DSKON             ;
112657 / 201640,,010000         MOVEI  AC1, FBINP             ;
112660 / 436644,,026114          IORM  AC1,JBTSTS(J)          ;
112661 / 254000,,037401          JRST      CPOPJ1             ;
                       NORWR:
112662 / 400240,,000000          SETZ  DAT,                   ;
112663 / 260140,,113227         PUSHJ    P, FBWRT             ;
112664 / 263140,,000000          POPJ    P,                   ;
                       FBWAIT:
112665 / 211440,,000005         MOVNI DSER,000005             ;;UUO LEVEL WAIT ROUTINE. CALLED AFTER FBCOM.
112666 / 202444,,020574         MOVEM DSER,JOBQUE(J)          ;;REQUEUE TO IOWQ
112667 / 700600,,002002          CONO   PI,002002             ;;TURN ON THE DISK CHANNEL
112670 / 260140,,046124         PUSHJ    P,046124             ;;TURN OFF THIS JOB
112671 / 333015,,000004        SKIPLE      000004(AC1)        ;;HERE WHEN TASK DONE. WERE THERE ERRORS?
112672 / 350003,,000000           AOS            (P)          ;;NO ERROR. SET SKIP RETURN TO INDICATE SUCCESS
112673 / 302640,,016226          CAIE  AC1,016226             ;;IS THIS THE SPARE TASK BLOCK?
112674 / 254000,,074163          JRST      074163             ;;NOT SPARE. RETURN TASK BLOCK TO FREE STORAGE
112675 / 402000,,016236         SETZM      016236             ;;RELEASE SPARE
112676 / 263140,,000000          POPJ    P,                   ;;RETURN TO UUOCON
                       ;ADDRESS CHECK THE GOODIE TABLE - DON'T RETURN UNLESS HAPPY.
                       UFBSET:
112677 / 201100,,010000         MOVEI TAC1,010000             ;;IS THERE ALREADY A TRANSFER IN PROGRESS
112700 / 612104,,026114          TDNE TAC1,JBTSTS(J)          ;
112701 / 260140,,112766         PUSHJ    P,112766             ;;YES, WAIT FOR IT
112702 / 201100,,004000         MOVEI TAC1,004000             ;;CLEAR ERROR BIT FOR PREVIOUS TRANSFER.
112703 / 412104,,026114        ANDCAM TAC1,JBTSTS(J)          ;;CAN'T GET STATUS FOR PREVIOUS ONE
151504 / 550512,,000000          HRRZ UCHN,      (UCHN)       ;
112704 / 256200,,151504          XCTR   XR,151504             ;
112705 / 260140,,112725         PUSHJ    P,112725             ;;CHECK BAND NUMBER.
151476 / 550114,,000000          HRRZ TAC1,      (UUO)        ;
112706 / 256200,,151476          XCTR   XR,151476             ;; PICK UP CORE ADDRESS
112707 / 260140,,072703         PUSHJ    P,072703             ;; RELOCATE AND ADDRESS CHECK
112710 / 254000,,112755          JRST      112755             ;; ILM
112711 / 321100,,112755         JUMPL TAC1,112755             ;; REFERENCE TO WRITE PROTECTED CORE.
112712 / 200040,,000002          MOVE  TAC,000002             ;; SAVE RELOCATED ADDRESS
152634 / 214714,,000001          MOVM  AC2,     1(UUO)        ;
112713 / 256200,,152634          XCTR   XR,152634             ;; PICK UP WORD COUNT
112714 / 322700,,112755         JUMPE  AC2,UFBSE2             ;
152467 / 200114,,000000          MOVE TAC1,      (UUO)        ;
112715 / 256200,,152467          XCTR   XR,152467             ;; GET CORE ADDRESS AGAIN!
112716 / 271116,,777777          ADDI TAC1,777777(AC2)        ;; ADDRESS CHECK LAST WORD OF TRANSFER
112717 / 260140,,072762         PUSHJ    P,072762             ;; ADDRESS CHECK LAST WORD OF TRANSFER
                       ; (MUST BE IN SAME SEGMENT)
112720 / 254000,,112755          JRST      UFBSE2             ;
153060 / 331114,,000002         SKIPL TAC1,     2(UUO)        ;
112721 / 256200,,153060          XCTR   XR,153060             ;
112722 / 303100,,004577         CAILE TAC1,004577             ;
112723 / 254000,,112745          JRST      UFBSE1             ;
112724 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO CHECK A LOGICAL OR PHYSICAL BAND NUMBER
                       ; ENTER WITH NUMBER IN UCHN
                       FBBGET:
112725 / 602500,,400000          TRNE UCHN,400000             ;;PHYSICAL BAND NUMBER?
112726 / 301500,,400170          CAIL UCHN,400170             ;;YES. SKIP IF IN RANGE. 
112727 / 305500,,000040         CAIGE UCHN,000040             ;;LOGICAL BAND, (OR PHYSICAL TOO BIG.)
112730 / 263140,,000000          POPJ    P,                   ;;BAND IS IN BOUNDS.
112731 / 265040,,043640           JSP  TAC,043640             ;;TELL LOSER.
                       UFBSE1:
112745 / 265040,,043640           JSP  TAC,UUOMES             ;
                       UFBSE2:
112755 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ;UTILITY ROUTINES.
                       ;HERE IF HE TRIES TO START ANOTHER TRANSFER WHILE A NO-WAIT IS IN PROGRESS.
                       FBCW:
112766 / 211640,,000005         MOVNI  AC1,000005             ;;WAIT FOR TRANSFER TO COMPLETE.
112767 / 202644,,020574         MOVEM  AC1,JOBQUE(J)          ;;REQUEUE JOB TO IOWQ
112770 / 201640,,002000         MOVEI  AC1,002000             ;;SET FBWAIT IN JBTSTS
112771 / 436644,,026114          IORM  AC1,JBTSTS(J)          ;;
112772 / 254000,,046124          JRST      046124             ;;WAIT.
                       ;HERE TO COMPLETE A NO-WAIT TRANSFER.
                       UFBD:
112773 / 201640,,012000         MOVEI  AC1,012000             ;;HERE WHEN TRANSFER COMPLETES.
112774 / 400700,,000000          SETZ  AC2,                   ;;ASSUME NO ERRORS.
112775 / 622240,,400000          TRZE  DAT,400000             ;;WAS THERE AN ERROR.
112776 / 201700,,004000         MOVEI  AC2,004000             ;;YES. PICKUP ERROR BIT.
112777 / 201205,,000000         MOVEI    J,      (DAT)        ;;LOAD JOB NUMBER.
113000 / 370004,,033165           SOS      JBTGLU(J)          ;;UNGLUE THIS JOB.
113001 / 260140,,072444         PUSHJ    P,GLUSTT             ;
113002 / 437704,,026114          IORB  AC2,JBTSTS(J)          ;;TURN ON ERROR BIT IF NEEDED.
113003 / 412644,,026114        ANDCAM  AC1,JBTSTS(J)          ;;SHUT OFF TRANSFER IN PROGRESS AND WAIT BITS
113004 / 214644,,020574          MOVM  AC1,JOBQUE(J)          ;;IS THIS GUY IN IOWQ?
113005 / 306640,,000005          CAIN  AC1,  IOWQ             ;
113006 / 606700,,002000          TRNN  AC2,002000             ;;IN IOWQ. WAS HE WAITING FOR ME?
113007 / 263140,,000000          POPJ    P,                   ;;NOT IOWQ OR NOT WAITING FOR ME.
113010 / 211640,,000014         MOVNI  AC1,000014             ;;HE WAS WAITING. REQUEUE HIM TO RUNQ.
113011 / 202644,,020574         MOVEM  AC1,JOBQUE(J)          ;
113012 / 254000,,046027          JRST       REQUE             ;
                       ;UUO CALL TO GET A BAND
                       ; CALLING . . .
                       ;	MOVE AC,[XWD <OFFSET & ENABLE BITS>,<BAND NUMBER>
                       ;	CALL AC,[SIXBIT /UFBGET/]
                       ;	<FAILURE RETURN>
                       ;	<SUCCESS RETURN, PHYSICAL BAND NUMBER IN AC>
                       ; <OFFSET> MAY BE ZERO, FOR LET THE SYSTEM SET IT.
                       ; <ENABLE BITS> ARE 100000 FOR READ ENABLE, 200000 FOR WRITE ENABLE
                       ; <BAND NUMBER> MAY BE 0 TO MAXFB-1 OR 400000 BIT ON FOR PHYSICAL BAND
                       UFBGET:
113013 / 261140,,000001          PUSH    P,   TAC             ;
113014 / 607040,,403777          TLNN  TAC,403777             ;;ANY OFFSET THERE?
113015 / 254000,,113021          JRST      113021             ;;NO.
152660 / 000000,,000001                                       ;
152660 / 221300,,000001 POINT 11,00000001,17                  ;
113016 / 135640,,152660           LDB  AC1,152660             ;
113017 / 301640,,002300          CAIL  AC1,002300             ;
113020 / 254000,,113052          JRST      113052             ;;OFFSET TOO LARGE.
                       UFBGE1:
113021 / 550503,,000000          HRRZ UCHN,      (P)          ;;PICK UP BAND NUMBER
113022 / 260140,,112725         PUSHJ    P,112725             ;;CHECK FOR LEGAL BAND NUMBER.
113023 / 602500,,400000          TRNE UCHN,400000             ;;IS THIS A PHYSICAL REQUEST?
113024 / 254000,,113042          JRST      113042             ;;YES. DON'T NEED TO CALL FBGET.
113025 / 260140,,113131         PUSHJ    P,113131             ;;GO GET A BAND FOR THIS GUY.
113026 / 254000,,037376          JRST      037376             ;;NO BANDS AVAILABE. FIX STACK AND LEAVE
                       UFBGE3:
113027 / 262140,,000015           POP    P,000015             ;;GET BACK ARGUEMENT
113030 / 603640,,403777          TLNE  AC1,403777             ;;ANY OFFSET?
113031 / 502657,,000000          HLLM  AC1,      (AC3)        ;;YES, SET IT
151347 / 000000,,000015                                       ;
151347 / 410200,,000015 POINT 2,00000015,2                    ;
113032 / 135700,,151347           LDB  AC2,151347             ;;GET READ/WRITE ENABLE BITS.
113033 / 137700,,112560           DPB  AC2,112560             ;;STUFF THEM INTO PROTECTION FIELD.
113034 / 135500,,037573           LDB UCHN,037573             ;;PICK UP ACCUMULATOR NUMBER AGAIN
113035 / 350003,,000000           AOS            (P)          ;
113036 / 500057,,000000           HLL  TAC,      (AC3)        ;;GET THE OFFSET
151346 / 000000,,000001                                       ;
151346 / 410200,,000001 POINT 2,00000001,2                    ;
113037 / 137700,,151346           DPB  AC2,151346             ;;STUFF THE FOREIGN ENABLE BITS INTO TAC.
113040 / 541057,,361746          HRRI  TAC,361746(AC3)        ;;LOAD 400000+PHYSICAL NUMBER IN TAC
113041 / 254000,,060225          JRST      STOTAC             ;
                       UFBGE2:
113042 / 551752,,416032         HRRZI  AC3,416032(UCHN)       ;;MAKE POINTER
113043 / 135640,,112561           LDB  AC1,112561             ;;IS THIS BAND CLAIMED?
113044 / 322640,,113050         JUMPE  AC1,113050             ;;NO. WE CLAIM IT
113045 / 306215,,000000          CAIN    J,      (AC1)        ;;PERHAPS THIS IS OURS ALREADY?
113046 / 254000,,113027          JRST      113027             ;;YES. 
113047 / 254000,,037376          JRST      037376             ;;WE CAN'T HAVE THIS BAND.
                       UFBGE4:
113050 / 137200,,112561           DPB    J,112561             ;;WE HAVE IT NOW
113051 / 254000,,113027          JRST      UFBGE3             ;
                       OFFTL:
113052 / 265040,,043640           JSP  TAC,UUOMES             ;
                       UFBGIV:
113060 / 550500,,000001          HRRZ UCHN,000001             ;;UUO TO RELEASE A FAST BAND
113061 / 254000,,113165          JRST      FBGIVE             ;
                       ;UUO TO GET PHYSICAL BAND NUMBER AND OFFSET
                       ; CALLING . . .
                       ;	MOVE AC,<LOGICAL OR PHYSICAL BAND NUMBER>
                       ;	CALL AC,[SIXBIT /UFBPHY/]
                       ; RETURNS 0 IF NO SUCH BAND
                       ; RETURNS OFFSET IN LH AND PHYSICAL BAND IN RH
                       ; SETS BIT 2 IF YOU HAVE READ ACCESS
                       ; SETS BIT 1 IF YOU HAVE WRITE ACCESS
                       FBPHY:
113062 / 336000,,016225         SKIPN      016225             ;;ARE FAST BANDS ACTIVE TODAY.
113063 / 254000,,043340          JRST      043340             ;;NO.
113064 / 602040,,400000          TRNE  TAC,400000             ;;PHYSICAL OR LOGICAL?
113065 / 254000,,113103          JRST      113103             ;;PHYSICAL.
113066 / 201501,,000000         MOVEI UCHN,      (TAC)        ;;GET THE LOGICAL NUMBER.
113067 / 260140,,113154         PUSHJ    P,113154             ;;SEARCH FOR THIS BAND NUMBER.
113070 / 254000,,113113          JRST      113113             ;;NO THERE. TELL HIM 0.
                       FBPHY1:
113071 / 135640,,112556           LDB  AC1,112556             ;;GET THE LOGICAL NUMBER
113072 / 302652,,000000          CAIE  AC1,      (UCHN)       ;;IS THIS THE RIGHT ONE.
113073 / 254000,,113100          JRST      113100             ;;NO. CONTINUE SEARCH
113074 / 500057,,000000           HLL  TAC,      (AC3)        ;;GET THE OFFSET FIELD.
113075 / 541057,,361746          HRRI  TAC,361746(AC3)        ;;GET 400000+PHYSICAL NUMBER
                       FBPHY2:
113076 / 661040,,300000           TLO  TAC,300000             ;;OWNER HAS READ AND WRITE ACCESS.
113077 / 254000,,060225          JRST      060225             ;;RETURN DATA TO USER.
                       RSH:
113100 / 260140,,113157         PUSHJ    P,113157             ;;LOOK FOR ANOTHER BAND BELONGING TO THIS JOB
113101 / 254000,,113113          JRST      113113             ;;NONE THERE.
113102 / 254000,,113071          JRST      113071             ;;CHECK TO SEE IF ITS THE RIGHT ONE.
                       SPHYB:
113103 / 201741,,416032         MOVEI  AC3,416032(TAC)        ;;GET THE POINTER
113104 / 500057,,000000           HLL  TAC,      (AC3)        ;;GET THE OFFSET FIELD.
113105 / 135640,,112561           LDB  AC1,112561             ;;GET THE JOB NUMBER
113106 / 306644,,000000          CAIN  AC1,      (J)          ;;SAME AS US?
113107 / 254000,,113076          JRST      113076             ;;YES. OWNER HAS READ&WRITE ACCESS.
113110 / 135640,,112560           LDB  AC1,112560             ;;GET THE PROTECTION CODE.
151346 / 000000,,000001                                       ;
151346 / 410200,,000001 POINT 2,00000001,2                    ;
113111 / 137640,,151346           DPB  AC1,151346             ;;STUFF THE PROT CODE.
113112 / 254000,,060225          JRST      060225             ;;RETURN DATA TO USER.
                       RTZERO:
113113 / 135500,,037573           LDB UCHN,PUUOAC             ;
151336 / 402014,,000000         SETZM            (UUO)        ;
113114 / 256040,,151336          XCTR   XW,151336             ;
113115 / 263140,,000000          POPJ    P,                   ;
                       ;UUO TO TELL YOU IF YOU HAVE A TRANSFER IN PROGRESS
                       ; CALLING . . .
                       ;	CALL [SIXBIT /UFBSKP/]
                       ;	<ONE IN PROGRESS>
                       ;	<NO TRANSFER IN PROGRESS>
                       FBSKP:
113116 / 201640,,010000         MOVEI  AC1,010000             ;;CHECK TRANSFER IN PROGRESS BIT
113117 / 616644,,026114          TDNN  AC1,JBTSTS(J)          ;;FROM JBTSTS.
113120 / 350003,,000000           AOS            (P)          ;;NONE IN PROGRESS
113121 / 263140,,000000          POPJ    P,                   ;
                       ;UUO TO WAIT FOR A TRANSFER IN PROGRESS
                       ; CALLING . . .
                       ;	CALL [SIXBIT /FBWAIT/]
                       FBWT:
113122 / 260140,,113116         PUSHJ    P,113116             ;;IS THERE A TRANSFER IN PROGRESS.
113123 / 254000,,112766          JRST      112766             ;;YES. WAIT NOW FOR IT TO FINISH
113124 / 263140,,000000          POPJ    P,                   ;;NO TRANSFER IN PROGRESS. 
                       ; UUO TO TELL YOU IF THE LAST TRANSFER GOT AN ERROR.
                       ; CALLING . . .
                       ;	CALL [SIXBIT /UFBERR/]
                       ;	<ERROR OCCURRED>
                       FBERR:
113125 / 201640,,004000         MOVEI  AC1,004000             ;;TEST THE ERROR BIT FROM JBTSTS
113126 / 616644,,026114          TDNN  AC1,JBTSTS(J)          ;
113127 / 350003,,000000           AOS            (P)          ;
113130 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO GET A BAND AT ANY LEVEL
                       ; CALLING . . .
                       ;	MOVE UCHN,<LOGICAL BAND NUMBER, 0-31>
                       ;	MOVE ITEM,<JOB NUMBER THAT IS CLAIMING THE BAND>
                       ;	PUSHJ PDP,FBGET
                       ;	<RETURNS HERE IF NONE LEFT>
                       ; RETURNS PHYSICAL BAND NUMBER IN TAC
                       FBGET:
113131 / 336000,,016225         SKIPN      016225             ;;ARE FAST BANDS THERE TODAY?
113132 / 263140,,000000          POPJ    P,                   ;;NO.
113133 / 260140,,113165         PUSHJ    P,113165             ;;GIVE BACK IF WE HAVE THIS LOGICAL ONE ALREADY.
151621 / 777610,,016032           XWD -NBANDS,FBBAND          ;
113134 / 200740,,151621          MOVE  AC3,151621             ;
                       FBGET1:
113135 / 336017,,000000         SKIPN            (AC3)        ;;IS THIS BAND FREE?
113136 / 254000,,113146          JRST      113146             ;;YES. CLAIM THIS.
113137 / 253740,,113135         AOBJN  AC3,113135             ;;THIS ONE IS IN USE, TRY NEXT ONE
151621 / 777610,,016032           XWD -NBANDS,FBBAND          ;
113140 / 200740,,151621          MOVE  AC3,151621             ;
                       FBGET2:
113141 / 201040,,000077         MOVEI  TAC,    77             ;
113142 / 404057,,000000           AND  TAC,      (AC3)        ;;PICKUP JOB NUMBER FIELD.
113143 / 322040,,113146         JUMPE  TAC,113146             ;;JOB NUMBER IS ZERO. WE'LL CLAIM IT.
113144 / 253740,,113141         AOBJN  AC3,FBGET2             ;
113145 / 263140,,000000          POPJ    P,                   ;;THERE ARE NONE LEFT.
                       FBGET3:
113146 / 137200,,112561           DPB    J,112561             ;;STORE JOB NUMBER.
113147 / 606500,,400000          TRNN UCHN,400000             ;;DON'T SET LOGICAL NUMBER IF PHYSICAL
113150 / 137500,,112556           DPB UCHN,112556             ;;PUT LOGICAL BAND NUMBER IN PLACE
113151 / 201057,,361746         MOVEI  TAC,361746(AC3)        ;
113152 / 350003,,000000           AOS            (P)          ;
113153 / 263140,,000000          POPJ    P,                   ;
                       FBSEAR:
151621 / 777610,,016032           XWD -NBANDS,FBBAND          ;
113154 / 200740,,151621          MOVE  AC3,151621             ;;LOAD UP AOBJN POINTER
                       FBSEA1:
113155 / 333657,,000000        SKIPLE  AC1,      (AC3)        ;;IS THIS BAND CLAIMED?
113156 / 254000,,113161          JRST      113161             ;;BAND IS CLAIMED.
                       FBRESE:
113157 / 253740,,113155         AOBJN  AC3,FBSEA1             ;
113160 / 263140,,000000          POPJ    P,                   ;
                       FBSEA2:
113161 / 405640,,000077          ANDI  AC1,000077             ;;GET THE JOB NUMBER FIELD ONLY!
113162 / 306644,,000000          CAIN  AC1,      (J)          ;;BELONGS TO THIS JOB?
113163 / 254000,,037401          JRST      037401             ;;YES.
113164 / 254000,,113157          JRST      113157             ;
                       ;ROUTINE TO RELEASE A BAND AT ANY LEVEL
                       ; CALLING . . .
                       ;	MOVE UCHN,<LOGICAL BAND NUMBER>
                       ;	MOVE ITEM,<JOB NUMBER THIS BAND BELONGS TO>
                       ;	PUSHJ PDP,FBGIVE
                       FBGIVE:
113165 / 332000,,016225         SKIPE      016225             ;;FAST BANDS TODAY?
113166 / 260140,,113154         PUSHJ    P,113154             ;;YES. LOOK FOR A BAND FOR THIS JOB.
113167 / 263140,,000000          POPJ    P,                   ;;NONE THERE OR NO FAST BANDS.
                       FBGIV1:
113170 / 602500,,400000          TRNE UCHN,400000             ;;IS THIS A PHYSICAL NUMBER?
113171 / 254000,,113201          JRST      113201             ;;YES.
113172 / 135640,,112556           LDB  AC1,112556             ;;IS THIS THE BAND WE WANT?
113173 / 312640,,000012          CAME  AC1,  UCHN             ;
113174 / 254000,,113203          JRST      113203             ;;NOPE.
                       FBGIV4:
113175 / 135640,,112557           LDB  AC1,112557             ;;PRESERVE THE LOSE COUNT.
113176 / 402017,,000000         SETZM            (AC3)        ;;YES, CLEAR IT OUT
113177 / 137640,,112557           DPB  AC1,FBLUZP             ;
113200 / 263140,,000000          POPJ    P,                   ;
                       FBGIV3:
113201 / 306517,,361746          CAIN UCHN,361746(AC3)        ;;PHYSICAL NUMBER THE SAME?
113202 / 254000,,113175          JRST      FBGIV4             ;
                       FBGIV2:
113203 / 260140,,113157         PUSHJ    P,113157             ;; NO, TRY FOR ANOTHER ONE
113204 / 263140,,000000          POPJ    P,                   ;
113205 / 254000,,113170          JRST      FBGIV1             ;
                       ;;ROUTINE TO FLUSH ALL A JOB'S BANDS
                       ; CALLING . . .
                       ;	MOVE ITEM,<JOB NUMBER>
                       ;	PUSHJ PDP,FBFLUSH
                       FBFLUS:
113206 / 553004,,021427         HRRZS      JBTSWP(J)          ;
113207 / 553004,,021527         HRRZS      JB2SWP(J)          ;
113210 / 336000,,016225         SKIPN       FBACT             ;
113211 / 263140,,000000          POPJ    P,                   ;;NO FAST BANDS ACTIVE. 
113212 / 260140,,113154         PUSHJ    P,113154             ;;LOOK FOR BANDS BELONGING TO ME.
113213 / 263140,,000000          POPJ    P,                   ;
113214 / 261140,,000001          PUSH    P,   TAC             ;
                       FBFLU1:
113215 / 135040,,112557           LDB  TAC,112557             ;;FLUSH THIS BAND
113216 / 402017,,000000         SETZM            (AC3)        ;
113217 / 137040,,112557           DPB  TAC,FBLUZP             ;
113220 / 260140,,113157         PUSHJ    P,113157             ;;SEARCH FOR ANOTHER ONE
113221 / 254000,,037376          JRST      037376             ;;NONE.
113222 / 254000,,113215          JRST      FBFLU1             ;
                       ;ROUTINES TO READ AND WRITE A FAST BAND
                       ; CALLING . . .
                       ;	MOVE TAC,<CORE ADDRESS, INDEXED BY PROG IF FOR A USER>
                       ;	MOVE UCHN,<LOGICAL BAND NUMBER>
                       ;	MOVE AC2,<WORD COUNT AS A POSITIVE NUMBER>
                       ;	MOVE TAC1,<DISK ADDRESS, LESS THAN 1216 DECIMAL>
                       ;	MOVE ITEM,<JOB NUMBER>
                       ;IF AT CLOCK LEVEL, MUST INCLUDE ONE MORE PARAMETER . . .
                       ;	MOVE DAT,<CLOCK LEVEL ADDRESS TO JUMP TO WHEN TASK DONE>
                       ;	PUSHJ P,FBWRITE   OR   PUSHJ P,FBREAD
                       ; SKIPS UPON SUCCESSFUL COMMENCEMENT OF OPERATION AT ALL LEVELS
                       ; AT UUO LEVEL, RETURNS WHEN OP COMPLETE AND SKIPS ON SUCCESSFUL EXECUTION
                       ; AT CLOCK LEVEL, RETURNS TO ADDRESS IN DAT WITH ERROR BITS IN TAC, OR ZERO IF SUCCESSFUL
                       FBWRIT:
113223 / 260140,,113227         PUSHJ    P, FBWRT             ;
113224 / 263140,,000000          POPJ    P,                   ;
113225 / 700600,,002002          CONO   PI, DSKON             ;
113226 / 254000,,037401          JRST      CPOPJ1             ;
                       FBWRT:
113227 / 201000,,000002         MOVEI        WREN             ;
113230 / 260140,,113244         PUSHJ    P, FBSET             ;
113231 / 210740,,000017          MOVN  AC3,   AC3             ;
113232 / 260140,,113312         PUSHJ    P, FBCOM             ;
113233 / 254000,,037401          JRST      CPOPJ1             ;
                       ; READ A BAND
                       ; SAME CALLING SEQUENCE AS IN FBWRITE
                       FBREAD:
113234 / 260140,,113240         PUSHJ    P,  FBRD             ;
113235 / 263140,,000000          POPJ    P,                   ;
113236 / 700600,,002002          CONO   PI, DSKON             ;
113237 / 254000,,037401          JRST      CPOPJ1             ;
                       FBRD:
113240 / 201000,,000001         MOVEI        RDEN             ;
113241 / 260140,,113244         PUSHJ    P,113244             ;; GET PHYSICAL BAND NUMBER FROM LOGICAL NUMBER
113242 / 260140,,113312         PUSHJ    P, FBCOM             ;
113243 / 254000,,037401          JRST      CPOPJ1             ;
                       ;THIS ROUTINE GETS THE PHYSICAL BAND NUMBER FROM THE LOGICAL BAND NUMBER
                       ; IN ACCUMULATOR UCHN AND THE JOB NUMBER IN ITEM. IF THE BAND IS NOT INITIALIZED,
                       ; THE ROUTINE POP'S OFF THE RETURN AND POPJ'S BACK. IF THE BAND IS FOUND, THE
                       ; PHYSICAL BAND NUMBER IS PUT IN AC3.
                       FBSET:
113244 / 336000,,016225         SKIPN      016225             ;;ANY FAST BANDS TODAY?
113245 / 254000,,037376          JRST       TPOPJ             ;
113246 / 602500,,400000          TRNE UCHN,400000             ;;IS THIS A PHYSICAL BAND?
113247 / 254000,,113260          JRST      113260             ;;YES.
113250 / 260140,,113154         PUSHJ    P,113154             ;;SEARCH FOR THE LOGICAL BAND HE REQUESTED
113251 / 254000,,037376          JRST      037376             ;;ERROR - HE HAS NOT ASSIGNED THAT BAND YET
                       FBSET1:
113252 / 135640,,112556           LDB  AC1,112556             ;;THIS BAND BELONG TO THIS JOB. GET LOGICAL NUMBER
113253 / 306652,,000000          CAIN  AC1,      (UCHN)       ;;IS THIS THE RIGHT LOGICAL BAND?
113254 / 254000,,113275          JRST      113275             ;;YES. SAME LOGICAL BAND.
113255 / 260140,,113157         PUSHJ    P,113157             ;;NO, FIND NEXT BAND IN HIS NAME
113256 / 254000,,037376          JRST      037376             ;;ERROR. LOGICAL BAND NUMBER NOT INITIALIZED
113257 / 254000,,113252          JRST      113252             ;;GO TEST THIS BAND.
                       FBSET3:
113260 / 201752,,416032         MOVEI  AC3,416032(UCHN)       ;;GET POINTER TO PHYSICAL BAND.
113261 / 135640,,112561           LDB  AC1,112561             ;;GET THE JOB NUMBER OF BAND OWNER.
113262 / 405500,,000177          ANDI UCHN,000177             ;;CLEAN OUT THE SHIT
113263 / 200404,,027420          MOVE  TEM,JBTPRV(J)          ;;GET PRIVILEGES.
113264 / 607400,,000004          TLNN  TEM,000004             ;;DOES THIS GUY HAVE ACCESS?
113265 / 306644,,000000          CAIN  AC1,      (J)          ;;OR IS THIS THE OWNER?
113266 / 254000,,113275          JRST      113275             ;;YES. OPERATION PROCEEDES.
113267 / 316500,,016030          CAMN UCHN,016030             ;;DOES HE WANT THE SYSTEM BAND?
113270 / 254000,,113303          JRST      113303             ;;YES. GO BLESS HIM
113271 / 135640,,112560           LDB  AC1,112560             ;;
113272 / 331017,,000000         SKIPL            (AC3)        ;;SKIP IF BAD BAND.
113273 / 616640,,000000          TDNN  AC1,                   ;;CHECK PROTECTION BITS
113274 / 254000,,037376          JRST      037376             ;;ACCESS IS NOT ALLOWED.
                       FBSET4:
113275 / 201757,,761746         MOVEI  AC3,761746(AC3)        ;;GET PHYSICAL NUMBER IN AC3
113276 / 550100,,000002          HRRZ TAC1,000002             ;;ZERO LEFT SIDE OF TAC1
113277 / 316740,,016030          CAMN  AC3,016030             ;;IS THIS THE SYSTEM BAND?
113300 / 302000,,000002          CAIE      000002             ;;YES. WRITING ON SYSBAND?
113301 / 263140,,000000          POPJ    P,                   ;;NO.
                       ;	SETZM	SYSTHERE	;THE SYSTEM IS NOW CLOBBERED
113302 / 263140,,000000          POPJ    P,                   ;
                       FBSYSB:
113303 / 302000,,000002          CAIE      000002             ;;IS HE WRITING ON SYSTEM BAND?
113304 / 254000,,113275          JRST      113275             ;;NO. ANYONE MAY READ
113305 / 254000,,037376          JRST      037376             ;;SCREW HIM.
                       FBTVIN:
113306 / 476000,,000002         SETOM      000002             ;; FLAG TV REQUEST WITH -1 DISK ADDRESS
113307 / 260140,,113312         PUSHJ    P,113312             ;; FROM HERE ON OUT, TREAT AS A STANDARD REQUEST
113310 / 700600,,002002          CONO   PI, DSKON             ;
113311 / 263140,,000000          POPJ    P,                   ;
                       ;COMMON READ-WRITE ROUTINE
                       FBCOM:
113312 / 261140,,000017          PUSH    P,000017             ;;SAVE BAND NUMBER ON STACK
113313 / 201740,,000010         MOVEI  AC3,000010             ;;GET A TASK BLOCK FROM FREE STORAGE
113314 / 260140,,073353         PUSHJ    P, FSGET             ;
113315 / 254000,,113356          JRST      113356             ;;OOPS. WE'LL HAVE TO USE THE SPARE.
                       FBCOM3:
113316 / 202055,,000000         MOVEM  TAC,      (AC1)        ;;LOAD UP THE TASK BLOCK WITH GOOD STUFF
                       ;IN CASE OF TV THIS IS COMMAND BLOCK ADDRESS
113317 / 202715,,000001         MOVEM  AC2,  FBWC(AC1)        ;;THE WORD COUNT
113320 / 202115,,000003         MOVEM TAC1,  FBDA(AC1)        ;;THE DISK SECTOR ADDRESS 
                       ;(BAND AND TRACK IS ADDED IN AT I-LEVEL)
                       ;(-1 FOR TV CALL)
113321 / 202215,,000006         MOVEM    J, FBJOB(AC1)        ;; SAVE JOB NUMBER FOR UUO-LEVEL CALLS
113322 / 201440,,000012         MOVEI DSER,000012             ;; ONLY TEN RETRIES
113323 / 202455,,000004         MOVEM DSER,000004(AC1)        ;
113324 / 262155,,000005           POP    P, FBBND(AC1)        ;;STORE PHYSICAL BAND NUMBER 
113325 / 202255,,000002         MOVEM  DAT,FBDONE(AC1)        ;;CLOCK LEVEL ADDRESS WHEN TASK DONE
113326 / 700710,,000001         CONSZ   PI,000001(17-CLKCHN)  ;;NOW, ARE WE AT UUO LEVEL?
113327 / 254000,,113336          JRST      113336             ;;WE ARE AT CLOCK LEVEL.
113330 / 321100,,113336         JUMPL TAC1,113336             ;;TV CALLS HAVE ALREADY LOCKED JOB.
113331 / 350004,,033165           AOS      JBTGLU(J)          ;;PIN DOWN THIS JOB.
113332 / 260140,,072444         PUSHJ    P,GLUSTT             ;
113333 / 211440,,000005         MOVNI DSER,000005             ;;SET US INTO THE WAIT QUEUE NOW
113334 / 336015,,000002         SKIPN      FBDONE(AC1)        ;;AVOID REQUEING IF DOING NO-WAIT UUOS
113335 / 202444,,020574         MOVEM DSER,JOBQUE(J)          ;
                       FBCOM2:
113336 / 201400,,113437         MOVEI  TEM,113437             ;;READY FOR I-LEVEL. GET STARTUP DISPATCH
113337 / 700600,,001002          CONO   PI,001002             ;;TURN OFF THE DISK.
113340 / 554440,,016026          HLRZ DSER,016026             ;;ADD OUR TASK TO THE END OF THE TASK LIST
113341 / 332000,,000011         SKIPE      000011             ;;LH OF FBQUE POINTS TO LAST TASK IN LIST,
                       ; RH TO FIRST
113342 / 202651,,000007         MOVEM  AC1,FBLINK(DSER)       ;;LINK FROM THE LAST TASK TO THIS TASK
113343 / 506640,,016026          HRLM  AC1,016026             ;;UPDATE POINTER TO END OF LIST
113344 / 336000,,000011         SKIPN        DSER             ;
113345 / 542640,,016026          HRRM  AC1,016026             ;;IF ONLY TASK, UPDATE POINTER TO FIRST TASK
113346 / 402015,,000007         SETZM      FBLINK(AC1)        ;;SINCE WE ARE THE LAST TASK, ZERO OUR LINK
113347 / 331000,,016223         SKIPL      016223             ;;IS THE DISK BUSY NOW?
113350 / 263140,,000000          POPJ    P,                   ;;YES, WE DO NOT HAVE TO START IT UP
113351 / 202400,,016223         MOVEM  TEM,016223             ;;NO. STORE DISPATCH LOCATION
113352 / 201400,,300070         MOVEI  TEM,300070             ;;RESET CH6 CONSZ BITS
113353 / 542400,,000675          HRRM  TEM,000675             ;;
113354 / 701200,,000016          CONO  IOP,000016             ;;SET JBDN TO MAKE A STARTUP INTERRUPT.
113355 / 263140,,000000          POPJ    P,                   ;
                       FBCOM5:
113356 / 332000,,016236         SKIPE      016236             ;;NO SYSTEM FS LEFT. USE OUR SPARE!
113357 / 254200,,113360          HALT      113360             ;;SPARE BUSY, CAN'T HAPPEN.
                       FBCOM4:
113360 / 476000,,016236         SETOM      016236             ;;SET SPARE BUSY.
113361 / 201640,,016226         MOVEI  AC1,016226             ;
113362 / 254000,,113316          JRST      FBCOM3             ;
                       ;INTERRUPT LEVEL CODE . . .
                       IFBINT:
113363 /                 ;::   BEGIN STANFO.FBPACK.IFBINT.
113363 / 264000,,001035           JSR      001035             ;;SAVE AC'S.
                       IFBIN1:
113364 / 335640,,016223        SKIPGE  AC1,016223             ;;PICK UP THE DISPATCH ADDRESS.
                       ;THIS IS -1 IF DISK IDLE
113365 / 254000,,113370          JRST      113370             ;;UNEXPECTED INTERRUPT.
113366 / 476000,,016223         SETOM      016223             ;;DISK NOW IDLE.
                       ;INITIALIZE DISPATCH ADDRESS AND DISPATCH!
113367 / 254015,,000000          JRST            (AC1)        ;;DISPATCH.
                       UNIOP:
113370 / 260140,,000316         PUSHJ    P,PUSHIT             ;
113371 / 260140,,044320         PUSHJ    P,044320             ;
113372 / 260140,,044066         PUSHJ    P,DISMES             ;
113401 / 260140,,000341         PUSHJ    P, POPIT             ;
                       IOPIN1:
113402 / 701200,,000006          CONO  IOP,DSKCHN             ;
113403 / 402000,,016224         SETZM      016224             ;;FLUSH CURRENT TASK.
113404 / 263140,,000000          POPJ    P,                   ;
                       DFBINT:
113405 / 744600,,000000          CONO  DSK,                   ;;STOP THE DISK, I WANT TO GET OFF!
113406 / 241000,,000044           ROT      000044             ;;WAIT FOR THE IOP TO COOL OFF. LONG NO-OP
113407 / 264000,,001035           JSR      001035             ;;SAVE AC'S.
113410 / 701200,,000006          CONO  IOP,000006             ;;SET UP IOP WITH PI CHANNEL.
113411 / 250640,,016223          EXCH  AC1,016223             ;;ARE WE BUSY NOW?
151674 / 777777,,777777                                       ;
113412 / 312640,,151674          CAME  AC1,151674             ;;
113413 / 254000,,113417          JRST      113417             ;;WE WERE BUSY.
                       DFBFLS:
113414 / 250640,,016223          EXCH  AC1,016223             ;;PUT AC1 BACK.
113415 / 744600,,014006          CONO  DSK,014006             ;;CLEAR ERROR BITS AND SET PI CHANNEL
113416 / 263140,,000000          POPJ    P,                   ;;AND RETURN.
                       DFBGO:
113417 / 250640,,016223          EXCH  AC1,016223             ;;RESTORE AC1
113420 / 744740,,000400         CONSO  DSK,000400             ;;IS DISK ON LINE?
113421 / 254000,,113364          JRST      113364             ;;YES. GO PROCESS INTERRUPT.
113422 / 260140,,000316         PUSHJ    P,PUSHIT             ;
113423 / 260140,,044320         PUSHJ    P,044320             ;
113424 / 260140,,044066         PUSHJ    P,DISMES             ;
113435 / 260140,,000341         PUSHJ    P, POPIT             ;
113436 / 254000,,113437          JRST      113437             ;
                       ;FIRST, THE DISK STARTUP ROUTINE . . .
                       DSKSTA:
113437 / 550640,,016026          HRRZ  AC1,016026             ;;POP THE FIRST TASK OFF THE TASK LIST
113440 / 322640,,113402         JUMPE  AC1,113402             ;;NOTHING THERE, DISMISS INTERUPT AND LEAVE
113441 / 200455,,000007          MOVE DSER,FBLINK(AC1)        ;;LINK AROUND THE BLOCK
113442 / 542440,,016026          HRRM DSER,016026             ;;THIS IS NEW TOP OF LIST
113443 / 336000,,000011         SKIPN      000011             ;;IF THE TOP ELEMENT IS THE BOTTOM TOO . . .
113444 / 402000,,016026         SETZM      016026             ;;THEN ZERO BOTH FORWARD AND BACKWARD POINTERS
113445 / 202640,,016224         MOVEM  AC1,016224             ;;NOW SAVE THE ADDRESS OF THIS TASK BLOCK
113446 / 200115,,000003          MOVE TAC1,  FBDA(AC1)        ;;PICK UP THE SECTOR ADDRESS
113447 / 346100,,113453          AOJN TAC1,113453             ;;JUMP UNLESS A TV TRANSFER
113450 / 513000,,000675         HLLZS      000675             ;;FIRST MAKE SURE WE WON'T GET THE INTERRUPT
113451 / 402000,,016223         SETZM      016223             ;;MAKE SURE THE WORLD KNOWS WE ARE BUSY
113452 / 254000,,150675          JRST      150675             ;;OFF TO TVSER.
                       DSKGOA:
113453 / 350000,,036167           AOS      036167             ;;
                       DSKGO:
113454 / 400100,,000000          SETZ TAC1,                   ;
113455 / 350000,,036170           AOS      NLRERS             ;
113456 / 214415,,000005          MOVM  TEM, FBBND(AC1)        ;;DEPOSIT PHYSICAL BAND NUMBER IN
                       ;BITS 14-23 OF THE DISK DATAO WORD
152403 / 000000,,000002                                       ;
152403 / 141000,,000002 POINT 8,00000002,23                   ;
113457 / 137400,,152403           DPB  TEM,152403             ;
113460 / 400440,,000000          SETZ DSER,                   ;
113461 / 316400,,016030          CAMN  TEM,016030             ;;SYSTEM?
113462 / 254000,,113472          JRST      113472             ;;YES, USE ZERO OFFSET
113463 / 554450,,016032          HLRZ DSER,FBBAND(TEM)        ;;SEE IF THE SECTOR OFFSET IS INITIALIZED YET
113464 / 326440,,113472         JUMPN DSER,113472             ;;YES IT IS, SKIP OVER THIS PART
                       DSKST3:
113465 / 744440,,000011         DATAI  DSK,000011             ;;ON FIRST WRITEOUT, WE CAN JUST WRITE ANYWHERE
113466 / 602440,,004000          TRNE DSER,004000             ;;GET THE CURRENT SECTOR NUMBER.
113467 / 254000,,113465          JRST      113465             ;;SECTOR NUMBER INVALID
113470 / 271440,,000010          ADDI DSER,000010             ;;BUMP WHERE WE ARE BY 10 SECTORS FOR SAFETY
113471 / 506450,,016032          HRLM DSER,FBBAND(TEM)        ;;AND STORE THAT AS OUR SECTOR OFFSET
                       DSKST2:
113472 / 405440,,003777          ANDI DSER,003777             ;;CLEAN IT UP
113473 / 270455,,000003           ADD DSER,  FBDA(AC1)        ;;ADD IN USER'S REQUESTED SECTOR OFFSET
113474 / 305440,,002300         CAIGE DSER,002300             ;;IF TRACK OVERRUN, BUMP TRACK NUMBER AND RESET SECTOR COUNT MOD 1216
113475 / 254000,,113504          JRST      DSKST1             ;
113476 / 305440,,004600         CAIGE DSER,004600             ;
113477 / 254000,,113502          JRST      DSKST4             ;
113500 / 275440,,004600          SUBI DSER,004600             ;
113501 / 254000,,113504          JRST      DSKST1             ;
                       DSKST4:
113502 / 660100,,004000           TRO TAC1,004000             ;;DISK STARTUP ROUTINE, SET COUNT AND START DISK
113503 / 275440,,002300          SUBI DSER,002300             ;
                       DSKST1:
113504 / 434100,,000011           IOR TAC1,000011             ;;NOW COMBINE BAND NUMBER, TRACK NUMBER, AND SECTOR ADDRESS
113505 / 210715,,000001          MOVN  AC2,  FBWC(AC1)        ;;NOW START BUILDING THE IOP DATAO WORD WITH THE WORD COUNT
113506 / 204700,,000016          MOVS  AC2,000016             ;;IN THE LEFT HALF, OF COURSE
113507 / 540715,,000000           HRR  AC2,      (AC1)        ;;SO LET US RELOCATE IT PROPERLY
113510 / 402000,,000011         SETZM        DSER             ;
113511 / 335015,,000005        SKIPGE       FBBND(AC1)        ;; SET BIT 100 IN DSER IF THIS IS A WRITE OPERATION
113512 / 201440,,000100         MOVEI DSER,000100             ;; OUR BAND IS SET NEGATIVE IF THAT IS TRUE
113513 / 744600,,014006          CONO  DSK,014006             ;
113514 / 701211,,000006          CONO  IOP,DSKCHN(DSER)       ;; GIVE THE 167 A CHANNEL AND A READ-WRITE BIT
113515 / 701140,,000016         DATAO  IOP,000016             ;; GIVE IT A WORD COUNT AND A MEMORY ADDRESS
113516 / 202700,,016240         MOVEM  AC2,016240             ;; STORE LAST WC SENT
113517 / 202700,,000030         MOVEM  AC2,000030             ;; STORE IT SO WE CAN SEE IT WHEN MEMORY HANGS.
113520 / 255000,,000000          JFCL                         ;
113521 / 202100,,016237         MOVEM TAC1,016237             ;; SAVE THIS FOR ERROR TYPEOUT
113522 / 744540,,000002         DATAO  DSK,000002             ;; NOW THE DISK ADDRESS AND WE ARE OFF!
113523 / 201640,,113526         MOVEI  AC1,113526             ;; SET FINOP AS OUR DISPATCH ADDRESS ON THE NEXT TRANSFER
113524 / 202640,,016223         MOVEM  AC1,FBBUSY             ;
113525 / 263140,,000000          POPJ    P,                   ;; DISMISS INTERRUPT AND WAIT
                       ;COME HERE WHEN A TASK HAS BEEN COMPLETED . . .
                       FINOP:
113526 / 200640,,016224          MOVE  AC1,016224             ;; PICK UP ADDRESS OF TASK BLOCK
113527 / 744700,,003770         CONSZ  DSK,003770             ;; WAS THERE A RED LIGHT ERROR LAST TIME?
113530 / 254000,,113574          JRST      113574             ;; YES, GO PROCESS IT (NEXT PAGE)
113531 / 701300,,300060         CONSZ  IOP,300060             ;; DO THE SAME FOR IOP ERRORS
113532 / 254000,,113705          JRST      IOPERR             ;
                       FINOP1:
113533 / 337455,,000004         SKIPG DSER,000004(AC1)        ;; ANY ERRORS?
113534 / 350000,,036165           AOS      036165             ;; YES, BUMP COUNT	
113535 / 323440,,113540        JUMPLE DSER,113540             ;; SKIP IF HARD ERROR
113536 / 305440,,000012         CAIGE DSER,000012             ;; ANY SUCCESSES AFTER ERROR RETRIES?
113537 / 350000,,036166           AOS      036166             ;; YES, COUNT IT
                       FINCNT:
113540 / 336455,,000002         SKIPN DSER,FBDONE(AC1)        ;; FORK FOR UUO AND CLOCK LEVEL CALLS
113541 / 254000,,113555          JRST      113555             ;;UUO WAIT TYPE.
                       ;;COME HERE TO COMPLETE A CLOCK LEVEL CALL . . .
113542 / 337015,,000004         SKIPG      000004(AC1)        ;; GIVE HIM SOME ERROR BITS TOO
113543 / 660440,,400000           TRO DSER,400000             ;
113544 / 700600,,000400          CONO   PI, PIOFF             ;
113545 / 136440,,013624          IDPB DSER,013624             ;; MAKE CLOCK QUEUE REQUEST
113546 / 700600,,000200          CONO   PI,  PION             ;
                       FINOP3:
113547 / 302640,,016226          CAIE  AC1,016226             ;; IS THIS THE SPARE?
113550 / 254000,,113553          JRST      113553             ;; NO. ORDINARY FS BLOCK
113551 / 402000,,016236         SETZM      016236             ;; YES, RELEASE IT.
113552 / 254000,,113437          JRST      113437             ;; PROCESS NEXT TASK.
                       FINOP5:
113553 / 260140,,074163         PUSHJ    P,074163             ;; NOW RELEASE THIS PIECE OF FREE STORAGE
113554 / 254000,,113437          JRST      113437             ;; AND GO SCAN FOR ANY MORE TASKS
                       ;;HERE TO COMPLETE A UUO LEVEL CALL . . .
                       FINOP2:
113555 / 200215,,000006          MOVE    J, FBJOB(AC1)        ;; PICK UP JOB NUMBER
113556 / 370004,,033165           SOS      JBTGLU(J)          ;; FREE HIM IN CORE
113557 / 260140,,072444         PUSHJ    P,GLUSTT             ;
113560 / 214644,,020574          MOVM  AC1,JOBQUE(J)          ;; STILL IN IOW?
113561 / 302640,,000005          CAIE  AC1,  IOWQ             ;
113562 / 254000,,113437          JRST      113437             ;; NO, DON'T REQUE HIM
113563 / 201640,,000014         MOVEI  AC1,000014             ;; YES, PUT HIM IN RUN QUEUE
113564 / 212644,,020574         MOVNM  AC1,JOBQUE(J)          ;
113565 / 260140,,046027         PUSHJ    P, REQUE             ;
113566 / 254000,,113437          JRST      113437             ;; NOW GO SCAN FOR FURTHER TASKS TO BE DONE
                       ;TASK BLOCK WILL BE GIVEN BACK AT 
                       ;UUO LEVEL (SEE FBCOM1)
                       ;HERE AFTER THE TV CAMERA INTERRUPT HAS GONE OFF.
                       ;RESET DIPCON, OUR CONSZ LOCATION, AND GIVE THE TASK BLOCK BACK.
                       FBDFIN:
113567 / 201640,,300070         MOVEI  AC1,300070             ;; CLEAN UP AFTER TV HAS DONE ITS THING
113570 / 542640,,000675          HRRM  AC1,DIPCON             ;
113571 / 200640,,016224          MOVE  AC1,016224             ;; NOW RELEASE THE TASK BLOCK
113572 / 476000,,016223         SETOM      016223             ;; AND MAKE THE SWAPPER FREE AGAIN
113573 / 254000,,113547          JRST      FINOP3             ;
                       ;DISK ERROR HANDLER.
                       DSKERR:
113574 / 332640,,016224         SKIPE  AC1,016224             ;;GET THE TASK BLOCK POINTER
113575 / 254000,,113614          JRST      113614             ;;WE HAVE ONE.
113576 / 260140,,000316         PUSHJ    P,PUSHIT             ;
113577 / 260140,,044320         PUSHJ    P,044320             ;;NO TASK BLOCK. WHAT ARE WE DOING HERE?
113600 / 260140,,044066         PUSHJ    P,DISMES             ;
113612 / 260140,,000341         PUSHJ    P, POPIT             ;
113613 / 254000,,113437          JRST      113437             ;;ATTEMPT TO PROCESS MORE TASKS.
                       DSKERA:
113614 / 373015,,000004         SOSLE      000004(AC1)        ;;HAVE WE TRIED ENOUGH?
113615 / 254000,,113454          JRST      113454             ;;NO. TRY SOME MORE.
113616 / 260140,,000316         PUSHJ    P,PUSHIT             ;
113617 / 214755,,000005          MOVM  AC3, FBBND(AC1)        ;;GET THE BAND NUMBER
113620 / 271740,,016032          ADDI  AC3,FBBAND             ;
113621 / 135640,,112557           LDB  AC1,112557             ;;GET THE LOSE COUNT.
113622 / 271640,,000001          ADDI  AC1,     1             ;
113623 / 402017,,000000         SETZM            (AC3)        ;
113624 / 137640,,112557           DPB  AC1,FBLUZP             ;
113625 / 303640,,000007         CAILE  AC1,     7             ;
113626 / 476017,,000000         SETOM            (AC3)        ;;FORCE A PERMANENT BAD BAND.
113627 / 260140,,044120         PUSHJ    P,DISERR             ;
113630 / 000000,,154247                                       ;
113631 / 000100,,016237        OCTQQQ      016237             ;
113632 / 000000,,153443                                       ;
113633 / 000100,,016240        OCTQQQ      LASTWC             ;
113634 / 000000,,153451                                       ;
113635 / 777777,,777777                                       ;
113636 / 701040,,000001         DATAI  IOP,   TAC             ;
113637 / 260140,,044200         PUSHJ    P,044200             ;;PRINT OUT CURRENT WCMA
113640 / 260140,,044066         PUSHJ    P,DISMES             ;
113644 / 744640,,000001          CONI  DSK,   TAC             ;
113645 / 260140,,044170         PUSHJ    P,DISLOC             ;
113646 / 260140,,044066         PUSHJ    P,DISMES             ;
113653 / 701240,,000001          CONI  IOP,   TAC             ;
113654 / 260140,,044170         PUSHJ    P,DISLOC             ;
113655 / 260140,,044076         PUSHJ    P,044076             ;
113656 / 260140,,044076         PUSHJ    P,044076             ;
113657 / 744740,,000020         CONSO  DSK,000020             ;;WRITE ERROR?
113660 / 254000,,113703          JRST      113703             ;;NO. WE'VE DONE ENOUGH.
113661 / 260140,,044066         PUSHJ    P,DISMES             ;
113676 / 476000,,036035         SETOM      036035             ;;FORCE TYPEOUT
113677 / 260140,,043761         PUSHJ    P,043761             ;
113700 / 336000,,156177         SKIPN      156177             ;;IF DDT IS NOW IN, CALL IT
113701 / 254200,,113703          HALT      113703             ;;OTHERWISE, JUST HALT
113702 / 260140,,000347         PUSHJ    P,000347             ;;CALL DDT (IF THERE)
                       DSKERB:
113703 / 260140,,000341         PUSHJ    P, POPIT             ;
113704 / 254000,,113533          JRST      FINOP1             ;
                       ;IOP ERROR RECOVERY
                       IOPERR:
113705 / 332640,,016224         SKIPE  AC1,FBTASK             ;
113706 / 254000,,113724          JRST      IOPERA             ;
113707 / 260140,,000316         PUSHJ    P,PUSHIT             ;
113710 / 260140,,044320         PUSHJ    P,044320             ;
113711 / 260140,,044066         PUSHJ    P,DISMES             ;
113722 / 260140,,000341         PUSHJ    P, POPIT             ;
113723 / 254000,,113437          JRST      113437             ;
                       IOPERA:
113724 / 701240,,000001          CONI  IOP,   TAC             ;
113725 / 701040,,016242         DATAI  IOP,016242             ;;SAVE IOP WCMA.
113726 / 200440,,016242          MOVE DSER,IOPWCM             ;
113727 / 274455,,000000           SUB DSER,      (AC1)        ;;ADR FROM START OF XFER
113730 / 201451,,777777         MOVEI DSER,777777(DSER)       ;;OFF BY AT LEAST 1, ALSO FLUSH WC
113731 / 602440,,000036          TRNE DSER,000036             ;;MORE THAN 2 WORDS IN?
113732 / 360440,,000000           SOJ DSER,                   ;;YES, EARLY RQ MKES US OFF BY 2
113733 / 270455,,000000           ADD DSER,      (AC1)        ;;PUT ORG BACK - SHOULD NOW BE EXACT ADR
113734 / 744600,,000000          CONO  DSK,                   ;; CLEAR ANY ERROR BITS WHAT MAY BE
113735 / 701340,,000040         CONSO  IOP,000040             ;;IGNORE PAR ERR WITH DATA MISS
113736 / 701340,,100000         CONSO  IOP,100000             ;;PARITY ERROR?
113737 / 254000,,113773          JRST      113773             ;;NO.
113740 / 200411,,777777          MOVE  TEM,777777(DSER)       ;;CAST ABOUT LOOKING FOR BAD PARITY.
113741 / 200411,,000001          MOVE  TEM,     1(DSER)       ;;LOOK HERE TOO.
113742 / 200411,,000000          MOVE  TEM,      (DSER)       ;;REFERENCE IT TO CALL PARSER
113743 / 701200,,000000          CONO  IOP,                   ;;SET TO READ
151743 / 000000,,016241                                       ;
113744 / 701140,,151743         DATAO  IOP,151743             ;;INTO THIS CELL
113745 / 701200,,002200          CONO  IOP,002200             ;;SET RDY & BRRQ, WHICH WILL STORE BR
113746 / 260140,,000316         PUSHJ    P,PUSHIT             ;
113747 / 260140,,044320         PUSHJ    P,DISDAT             ;
113750 / 260140,,044120         PUSHJ    P,DISERR             ;
113751 / 000000,,153662                                       ;
113752 / 000143,,777771        LOCQQQ      777771(P)          ;
113753 / 000000,,153302                                       ;
113754 / 000100,,016241        OCTQQQ      IOPWRD             ;
113755 / 000000,,153352                                       ;
113756 / 000103,,777770        OCTQQQ      777770(P)          ;
113757 / 000000,,153264                                       ;
113760 / 000100,,016240        OCTQQQ      LASTWC             ;
113761 / 000000,,153457                                       ;
113762 / 000143,,777761        LOCQQQ      777761(P)          ;
113763 / 000000,,153454                                       ;
113764 / 777777,,777777                                       ;
113765 / 200043,,777776          MOVE  TAC,777776(P)          ;;GET REAL AC1 INTO TAC
113766 / 200041,,000004          MOVE  TAC,000004(TAC)        ;
113767 / 260140,,044230         PUSHJ    P,DISDCP             ;
113770 / 260140,,044066         PUSHJ    P,DISMES             ;
                       ;CR,LF,LF,LF
113772 / 260140,,000341         PUSHJ    P, POPIT             ;
                       PARIOP:
113773 / 602040,,000100          TRNE  TAC,000100             ;;I OR O
113774 / 254000,,114003          JRST      114003             ;;NOT INPUT
113775 / 402011,,000000         SETZM            (DSER)       ;;FIX BAD PARITY WHICH DATA MISS CAN MAKE
113776 / 550400,,016240          HRRZ  TEM,016240             ;;GET START OF TRANSFER
113777 / 303411,,777777         CAILE  TEM,777777(DSER)       ;;IS PREVIOUS WORD IN TRANSFER?
114000 / 402011,,777777         SETZM      777777(DSER)       ;;YES, CLEAR IT ALSO
114001 / 303411,,777776         CAILE  TEM,777776(DSER)       ;;HOW ABOUT THIS ONE?
114002 / 402011,,777776         SETZM      777776(DSER)       ;;YES, CLEAR IT TOO (BETTER SAFE THAN SORRY)
                       NFBINP:
114003 / 602040,,200000          TRNE  TAC,200000             ;;IOP EARLY RESPONSE?
114004 / 336000,,016025         SKIPN      016025             ;;ARE WE ENABLE FOR THIS PRINTOUT?
114005 / 254000,,114030          JRST      RLYIOP             ;
114006 / 260140,,000316         PUSHJ    P,PUSHIT             ;
114007 / 260140,,044066         PUSHJ    P,DISMES             ;
114015 / 260140,,044320         PUSHJ    P,044320             ;
114016 / 260140,,044120         PUSHJ    P,DISERR             ;
114017 / 000000,,153226                                       ;
114020 / 000143,,777761        LOCQQQ      777761(P)          ;
114021 / 000000,,153520                                       ;
114022 / 000100,,016240        OCTQQQ      LASTWC             ;
114023 / 000000,,153523                                       ;
114024 / 000100,,016242        OCTQQQ      IOPWCM             ;
114025 / 000000,,152276                                       ;
114026 / 777777,,777777                                       ;
114027 / 260140,,000341         PUSHJ    P, POPIT             ;
                       RLYIOP:
114030 / 373015,,000004         SOSLE      000004(AC1)        ;
114031 / 254000,,113454          JRST       DSKGO             ;
114032 / 201440,,000012         MOVEI DSER,000012             ;
114033 / 202455,,000004         MOVEM DSER,000004(AC1)        ;
114034 / 260140,,000316         PUSHJ    P,PUSHIT             ;
114035 / 260140,,044320         PUSHJ    P,044320             ;
114036 / 260140,,044120         PUSHJ    P,DISERR             ;
114037 / 000000,,153532                                       ;
114040 / 000143,,777761        LOCQQQ      777761(P)          ;
114041 / 000000,,153520                                       ;
114042 / 000100,,016240        OCTQQQ      LASTWC             ;
114043 / 000000,,153523                                       ;
114044 / 000100,,016242        OCTQQQ      IOPWCM             ;
114045 / 000000,,152276                                       ;
114046 / 777777,,777777                                       ;
114047 / 260140,,000341         PUSHJ    P, POPIT             ;
114050 / 254000,,113453          JRST      DSKGOA             ;
114051 /                 ;::    BEND STANFO.FBPACK.IFBINT.
114051 /                 ;::    BEND STANFO.FBPACK.
114051 /               ;: FBPACK[J17,SYS] EOF.
114051 /               ;: IMPCLK[J17,SYS]
114051 /                 ;::   BEGIN STANFO.IMPSER.
                       ; ERROR TYPEOUT ROUTINE. INCREMENTS APPROPRIATE ERROR COUNTER THEN
                       ; TYPES CTY MESSAGE.
                       ; DATA BLOCK DEFINITIONS . . .
                       ; LENGTH OF DATA PORTION ONLY
                       ; DEBUGGING MASKS
                       ; OPCODE DEFINITIONS FOR SECOND LEVEL PROTOCAL
                       ; FOLLOWED BY 32 BITS OF RECEIVE SOCKET,
                       ; 32 BITS OF SEND SOCKET, AND 8 BITS OF LINK NUMBER
                       ; FOLLOWED BY 32 BITS OF SEND SOCKET,
                       ; 32 BITS OF RECEIVE SOCKET, AND 8 BITS OF BYTE SIZE.
                       ; NUMBER AND 32 BITS FOREIGN SOCKET NUMBER
                       ; MUCH DATA MAY BE SENT AT A TIME. FOLLOWED BY
                       ; 8 BITS OF LINK NUMBER, 16 BITS OF MESSAGE SPACE
                       ; AND 32 BITS OF BIT SPACE.
                       ; TO REQUEST RETURN OF STORAGE. FOLLOWED BY 8 BITS
                       ; OF LINK NUMBER, 8 BITS OF A 7-FIXED-BINARY-PLACE
                       ; FRACTION WHICH IS THE FRACTION OF THE MESSAGE
                       ; SPACE TO BE RETURNED, AND 8 BITS OF FRACTION WHICH
                       ; IS THE FRACTION OF THE BIT SPACE TO BE RETURNED.
                       ; SPONTANEOUSLY OR IN RESPONSE TO A GVB COMMAND. FOLLOWED
                       ; BY 8 BITS OF LINK, 16 BITS OF MESSAGE SPACE, AND 32
                       ; BITS OF BIT SPACE.
                       ; FOLLOWED BY 8 BITS OF LINK NUMBER.
                       ; RECEIVING PROCESS. A SPECIAL CHARACTER IS INCLUDED
                       ; IN THE TEXT STREAM TO MARK WHERE IN TIME THE INTERRUPT
                       ; IS TO OCCUR. FOLLOWED BY 8 BITS OF LINK NUMBER.
                       ; HOST IS TO RETURN SAID DATA VERBATUM VIA FOLLOWING COMMAND.
                       ; 80 BITS OF ERROR DATA.
                       ; HAVING TO DO WITH US.
                       ; PROTOCAL ERROR CODES
                       ; A CONTROL MESSAGE. THE "dATA" FIELD CONTAINS THE TEN BYTES OF
                       ; THE AILING CONTROL MESSAGE BEGINNING WITH THE BYTE CONTAINING
                       ; THE ILLEGAL OPCODE.
                       ; WAS ENCOUNTERED BEFORE ALL THE REQUIRED PARAMETERS OF
                       ; THE CONTROL COMMAND BEING DECODED WERE FOUND. THE "dATA"
                       ; FIELD CONTAINS THE COMMAND IN ERROR.
                       ; IN A CONTROL COMMAND. DATA FIELD CONTAINS AILING COMMAND.
                       ; RECEIVED FOR A CONNECTION FOR WHICH NO REQUEST FOR
                       ; CONNECTION HAS BEEN MADE.
                       ; A LINK NUMBER FOR WHICH NO CONNECTION EXISTS.
                       ; WHEN THE ERROR CODE IS ZERO, THE NEXT 8 BIT BYTE IS THE STANFORD
                       ; PECULIAR ERROR CODE, FOLLOWED BY 72 BITS OF THE AILING COMMAND
                       ; RETURNED. HERE ARE THE STANFORD ERROR CODES.
                       ; OR BIT SPACE EXCEEDED BY THE LAST MESSAGE. THE
                       ; MESSAGE WAS DISCARDED.
                       ; WAS DISCARDED.
                       ; BYTE POINTERS TO PARTS OF MESSAGE HEADER.
                       ; ASSUMES POINTER TO FIRST BLOCK OF MESSAGE IN AC1
                       IMPBP:
114051 / 000015,,000004                                       ;
114051 / 420115,,000004 POINT 1,15000004,1                    ;
                       ; 'MESSAGE FROM IMP' BIT
                       TRACEP:
114052 / 000015,,000004                                       ;
114052 / 410115,,000004 POINT 1,15000004,2                    ;
                       ; TRACE MESSAGE BIT. MEANS MESSAGE IS
                       ; BEING ROUTED AROUND THE NETWORK FOR
                       ; ROUTING AND TIMING MEASUREMENT.
                       OCTALP:
114053 / 000015,,000004                                       ;
114053 / 400115,,000004 POINT 1,15000004,3                    ;
                       ; MEANS MESSAGE IS FROM IMP DDT AND
                       ; IS TEXT FOR OCTAL NUMBERS
                       TYPEP:
114054 / 000015,,000004                                       ;
114054 / 340415,,000004 POINT 4,15000004,7                    ;
                       ; IMP MESSAGE TYPE POINTER.
                       SRCP:
114055 / 000015,,000004                                       ;
114055 / 241015,,000004 POINT 8,15000004,15                   ;
                       ; HOST NUMBER POINTER
                       LINKP:
114056 / 000015,,000004                                       ;
114056 / 141015,,000004 POINT 8,15000004,23                   ;
                       ; LINK NUMBER POINTER
                       ELINKP:
114057 / 000015,,000004                                       ;
114057 / 142015,,000004 POINT 16,15000004,23                  ;
                       ; PICKS UP 16 BIT HOST AND LINK NUMBER
                       SIZEP:
114060 / 000015,,000005                                       ;
114060 / 301015,,000005 POINT 8,15000005,11                   ;
                       ; GETS BYTE SIZE FIELD
                       COUNTP:
114061 / 000015,,000005                                       ;
114061 / 102015,,000005 POINT 16,15000005,27                  ;
                       ; BYTE COUNT FIELD
                       ; SPECIAL DEFINITIONS FOR 2ND LEVEL PROTOCAL
                       OPCDP:
114062 / 000015,,000006                                       ;
114062 / 341015,,000006 POINT 8,15000006,7                    ;
                       OLINKP:
114063 / 000015,,000006                                       ;
114063 / 241015,,000006 POINT 8,15000006,15                   ;
                       SZLKP:
114064 / 000015,,000010                                       ;
114064 / 241015,,000010 POINT 8,15000010,15                   ;
                       ; FOR STR, IS BYTE SIZE, FOR RTS, IS LINK NUMBER
                       SOK1AP:
114065 / 000015,,000006                                       ;
114065 / 043015,,000006 POINT 24,15000006,31                  ;
                       ; POINTS TO FIRST PART OF FIRST SOCKET NUMBER FOR STR, RTS, AND CLS
                       SOK1BP:
114066 / 000015,,000007                                       ;
114066 / 341015,,000007 POINT 8,15000007,7                    ;
                       ; POINTS TO SECOND PART OF FIRST SOCKET NUMBER
                       SOK2AP:
114067 / 000015,,000007                                       ;
114067 / 043015,,000007 POINT 24,15000007,31                  ;
                       ; FIRST PART OF SECOND SOCKET NUMBER
                       SOK2BP:
114070 / 000015,,000010                                       ;
114070 / 341015,,000010 POINT 8,15000010,7                    ;
                       ; SECOND PART OF SECOND SOCKET NUMBER
                       BYTE2P:
114071 / 000015,,000006                                       ;
114071 / 241015,,000006 POINT 8,15000006,15                   ;
                       ; SECOND BYTE OF MESSAGE
                       BYTE3P:
114072 / 000015,,000006                                       ;
114072 / 141015,,000006 POINT 8,15000006,23                   ;
                       ; THIRD BYTE OF MESSAGE
                       ; POINTERS INTO TIMEOUT FIELDS. EACH FIELD IS NUMBER OF 2-SECOND UNITS
                       CLSTP:
114073 / 000006,,000026                                       ;
114073 / 360606,,000026 POINT 6,06000026,5                    ;
                       ; HOW LONG WE WILL WAIT FOR RETURN CLOSE
                       RFNMTP:
114074 / 000006,,000026                                       ;
114074 / 300606,,000026 POINT 6,06000026,11                   ;
                       ; FOR RFNM ON ZERO OR NON-ZERO LINK
                       ALLTP:
114075 / 000006,,000026                                       ;
114075 / 220606,,000026 POINT 6,06000026,17                   ;
                       ; FOR ALLOCATION
                       RFCTP:
114076 / 000006,,000026                                       ;
114076 / 140606,,000026 POINT 6,06000026,23                   ;
                       ; FOR RETURN RFC
                       INPTP:
114077 / 000006,,000026                                       ;
114077 / 060606,,000026 POINT 6,06000026,29                   ;
                       ; FOR INPUT
                       ; SPECIAL BITS IN RH OF IOS
                       ; LH BITS
                       ; BITS IN LH OF STATE WORD IN IMPSTB
                       ; OTHER PARAMETERS . . .
                       ; OUR OUTPUT
                       ; TABLE OF BITS PER WORD FOR DIFFERENT CONNECTION BYTE SIZES
                       ; -1 MEANS THIS BYTE SIZE NOT ALLOWED.
                       BPW:
114100 / 000000,,000044                                       ;
114101 / 000000,,000044                                       ;
114102 / 000000,,000044                                       ;
114103 / 000000,,000044                                       ;
114104 / 000000,,000044                                       ;
114105 / 777777,,777777                                       ;
114106 / 000000,,000044                                       ;
114107 / 000000,,000044                                       ;
114110 / 000000,,000040                                       ;
114111 / 000000,,000044                                       ;
114112 / 777777,,777777                                       ;
114113 / 777777,,777777                                       ;
114114 / 000000,,000044                                       ;
114115 / 777777,,777777                                       ;
114116 / 777777,,777777                                       ;
114117 / 777777,,777777                                       ;
114120 / 000000,,000040                                       ;
114121 / 777777,,777777                                       ;
114122 / 000000,,000044                                       ;
114123 / 777777,,777777                                       ;
114124 / 777777,,777777                                       ;
114125 / 777777,,777777                                       ;
114126 / 777777,,777777                                       ;
114127 / 777777,,777777                                       ;
114130 / 777777,,777777                                       ;
114131 / 777777,,777777                                       ;
114132 / 777777,,777777                                       ;
114133 / 777777,,777777                                       ;
114134 / 777777,,777777                                       ;
114135 / 777777,,777777                                       ;
114136 / 777777,,777777                                       ;
114137 / 777777,,777777                                       ;
114140 / 000000,,000040                                       ;
114141 / 777777,,777777                                       ;
114142 / 777777,,777777                                       ;
114143 / 777777,,777777                                       ;
114144 / 000000,,000044                                       ;
                       ; ROUTINES TO MAKE AND RELEASE IMP DEVICE DATA BLOCKS
                       IMPSET:
114145 / 201740,,000031         MOVEI  AC3,IMPDLN             ;
114146 / 260140,,073353         PUSHJ    P, FSGET             ;
114147 / 254000,,114156          JRST      IMPDD1             ;
114150 / 541315,,000001          HRRI  DDB,     1(AC1)        ;
114151 / 505640,,036261          HRLI  AC1,036261             ;
114152 / 251646,,000027           BLT  AC1,   TIM(DDB)        ;
114153 / 506300,,036265          HRLM  DDB,036265             ;
114154 / 402000,,036267         SETZM      036267             ;
114155 / 263140,,000000          POPJ    P,                   ;
                       IMPDD1:
151777 / 000003,,000003           XWD 3,3                     ;
114156 / 274140,,151777           SUB    P,151777             ;
114157 / 254000,,056362          JRST      DLYCM1             ;
                       IMPCLR:
114160 / 403006,,000002         SETZB      DEVIOS(DDB)        ;
114161 / 201640,,036262         MOVEI  AC1,DDBMDL             ;
                       IMPCL1:
114162 / 200100,,000015          MOVE TAC1,   AC1             ;
114163 / 554642,,000003          HLRZ  AC1,DEVSER(TAC1)       ;
114164 / 322640,,037403         JUMPE  AC1, CPOPJ             ;
114165 / 302646,,000000          CAIE  AC1,      (DDB)        ;
114166 / 254000,,114162          JRST      IMPCL1             ;
114167 / 200315,,000003          MOVE  DDB,DEVSER(AC1)        ;
114170 / 502302,,000003          HLLM  DDB,DEVSER(TAC1)       ;
114171 / 364640,,074163          SOJA  AC1,FSGIVE             ;
                       ; CLOCK LEVEL ROUTINE. CALLED EVERY TICK. EXAMINES INPUT MESSAGES
                       IMPCLK:
114172 / 202140,,036552         MOVEM    P, IMPFP             ;
114173 / 332000,,036550         SKIPE      036550             ;; WAITING FOR FREE STORAGE?
114174 / 254000,,116473          JRST      116473             ;; YES, DO NOTHING ELSE FOR A WHILE
114175 / 332000,,036427         SKIPE      036427             ;; ANY INCOMMING MESSAGES?
114176 / 254000,,114235          JRST      114235             ;; YES, GO PROCESS THEM
114177 / 377000,,036322          SOSG      036322             ;; HOW LONG HAVE WE BEEN WAITING FOR OUTPUT TO FINISH?
114200 / 260140,,114374         PUSHJ    P,114374             ;; TOO DAMN LONG. GO SEE ABOUT IT
114201 / 332000,,036721         SKIPE      036721             ;; HAS ERROR RECOVERY SYSTEM BEEN INVOKED?
114202 / 260140,,116204         PUSHJ    P,116204             ;; YES, GO KEEP ON RECOVERING.
114203 / 375000,,036717         SOSGE      036717             ;; TIME TO POLL YET?
114204 / 260140,,116362         PUSHJ    P,116362             ;; YES, DO IT NOW
114205 / 332000,,036714         SKIPE      036714             ;; ANYONE WAITING FOR A TIMEOUT?
114206 / 373000,,036713         SOSLE      036713             ;; YES, IS IT TIME TO CHECK?
114207 / 263140,,000000          POPJ    P,                   ;
114210 / 201640,,000170         MOVEI  AC1,000170             ;; YES, WAIT FOR ANOTHER SECOND
114211 / 202640,,036713         MOVEM  AC1,036713             ;; RESET COUNTDOWN
114212 / 336740,,037301         SKIPN  AC3,037301             ;; ANYONE TO CHECK?
114213 / 263140,,000000          POPJ    P,                   ;; NO, DON'T BOTHER
                       TIMCHL:
114214 / 332317,,037000         SKIPE  DDB,037000(AC3)        ;; ANYONE HOME?
114215 / 335646,,000027        SKIPGE  AC1,   TIM(DDB)        ;; YES, IS HE WAITING FOR US?
114216 / 254000,,114233          JRST      114233             ;; NO TO EITHER OR BOTH
114217 / 274640,,024633           SUB  AC1,024633             ;; GET DIFFERENCE BETWEEN CRITICAL TIME AND RIGHT NOW
114220 / 321640,,114224         JUMPL  AC1,114224             ;; DIFFERENT ROUTINE FOR NEGATIVE DIFFERENCE
152011 / 000011,,706400                                       ;
114221 / 311640,,152011          CAML  AC1,152011             ;
114222 / 274640,,152021           SUB  AC1,152021             ;; WRAP IT BACK AROUND TO GET A SMALL NUMBER
114223 / 254000,,114226          JRST      114226             ;; NOW CHECK IT
                       TIMN:
151646 / 777766,,071400                                       ;
114224 / 315640,,151646         CAMGE  AC1,151646             ;
114225 / 270640,,152021           ADD  AC1,JIFDAY             ;
                       TIMC:
114226 / 327640,,114233         JUMPG  AC1,114233             ;; IF DIFFERENCE IS POSITIVE, HASN'T EXPIRED YET
114227 / 201000,,000200         MOVEI      000200             ;; NOTE THAT A TIMEOUT HAS HAPPENED
114230 / 436006,,000002           ORM      DEVIOS(DDB)        ;
114231 / 260140,,121174         PUSHJ    P,  QRUN             ;
114232 / 333000,,036714        SKIPLE      036714             ;; ANYONE ELSE?
                       TIMCHI:
114233 / 367740,,114214          SOJG  AC3,114214             ;; YES, GO BACK FOR MORE
114234 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE IF THERE ARE MESSAGES WAITING ON THE INPUT LIST
                       IMPMES:
114235 / 550640,,036427          HRRZ  AC1,036427             ;; YES, PICK UP ADDRESS OF FIRST MESSAGE
114236 / 260140,,121443         PUSHJ    P,121443             ;; IS THIS A REASONABLE BLOCK
153210 / 402000,,036427         SETZM      036427             ;; NO, FLUSH THE LIST
153211 / 254000,,114172          JRST      IMPCLK             ;
114237 / 254000,,153210          JRST      153210             ;
114240 / 135700,,114051           LDB  AC2,114051             ;; SEE IF IT IS FROM THE IMP
114241 / 326700,,114275         JUMPN  AC2,114275             ;; YES, DISCARD.
114242 / 135700,,114052           LDB  AC2,114052             ;; IS IT A TRACE MESSAGE
114243 / 326700,,114274         JUMPN  AC2,114274             ;; YES, DISCARD IT.
114244 / 135700,,114054           LDB  AC2,114054             ;; PICK UP MESSAGE TYPE
114245 / 305700,,000012         CAIGE  AC2,000012             ;; IS IT LEGAL?
114246 / 254036,,114262          JRST      @ MTDSP(AC2)       ;; YES, DISPATCH TO IT
114247 / 350000,,037313           AOS       ILLMT             ;
114250 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114251 / 254000,,114260          JRST      114260             ;; NO, SKIP OVER ERROR MESSAGE
114252 / 260140,,044320         PUSHJ    P,044320             ;
114253 / 260140,,044120         PUSHJ    P,DISERR             ;
114254 / 000000,,154362                                       ;
114255 / 000200,,037313        DECQQQ       ILLMT             ;
114256 / 000000,,152275                                       ;
114257 / 777777,,777777                                       ;
                       PSCAN:
114260 / 260140,,116562         PUSHJ    P,116562             ;; TAKE MESSAGE OFF LIST AND RELEASE STORAGE
114261 / 254000,,114172          JRST      IMPCLK             ;
                       ; DISPATCH TABLE FOR MESSAGE TYPES
                       MTDSP:
114262 / 000000,,115056                                       ;; REGULAR MESSAGE. ALL DATA AND CONTROL COME THROUGH HERE.
114263 / 000000,,114277                                       ;; ERROR WITHOUT MESSAGE IDENTIFICATION
114264 / 000000,,114313                                       ;; IMP GOING DOWN
114265 / 000000,,114442                                       ;; BLOCKED LINK - WE GOOFED!
114266 / 000000,,114507                                       ;; NO OPERATION.
114267 / 000000,,114471                                       ;; REQUEST FOR NEW MESSAGE, UNBLOCK LINK
114270 / 000000,,114457                                       ;; LINK TABLE FULL - HORRIBLE IMP ERROR!
114271 / 000000,,114511                                       ;; HOST OR DESTINATION IMP DEAD
114272 / 000000,,114546                                       ;; ERROR WITH MESSAGE IDENTIFICATION
114273 / 000000,,114545                                       ;; INCOMPLETE TRANSMISSION
                       ; MESSAGE TYPE DISPATCHES - TRACE, FROM IMP, IMP GOING DOWN
                       ; TRACE MESSAGE. LOG THEN DISCARD.
                       TRCMES:
114274 / 354000,,037304          AOSA      TRACES             ;
                       FRIMP:
114275 / 350000,,037302           AOS      FRMIMP             ;
114276 / 254000,,114260          JRST       PSCAN             ;
                       EWOMI:
114277 / 350000,,037305           AOS      ERWOMI             ;
114300 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114301 / 254000,,114310          JRST      114310             ;; NO, SKIP OVER ERROR MESSAGE
114302 / 260140,,044320         PUSHJ    P,044320             ;
114303 / 260140,,044120         PUSHJ    P,DISERR             ;
114304 / 000000,,154555                                       ;
114305 / 000200,,037305        DECQQQ      ERWOMI             ;
114306 / 000000,,152275                                       ;
114307 / 777777,,777777                                       ;
114310 / 336000,,036721         SKIPN      036721             ;
114311 / 476000,,036721         SETOM      036721             ;
114312 / 254000,,114260          JRST       PSCAN             ;
                       IMPGD:
114313 / 350000,,037306           AOS      NIMPDN             ;
114314 / 260140,,114316         PUSHJ    P,114316             ;; BRING DOWN IMP SYSTEM
114315 / 254000,,114172          JRST      114172             ;; GO THROUGH THE LOOP AGAIN
                       IMPDD:
114316 / 476000,,036313         SETOM      036313             ;; SHUT DOWN THE IMP
114317 / 525640,,377777         HRLOI  AC1,377777             ;
114320 / 202640,,036322         MOVEM  AC1,IMPOCT             ;
114321 / 740200,,000070          CONO  IMP,000070             ;
114322 / 402000,,036547         SETZM      036547             ;; SET ERROR COUNT TO ZERO
114323 / 260140,,044320         PUSHJ    P,044320             ;
114324 / 260140,,044120         PUSHJ    P,DISERR             ;
114325 / 000000,,154442                                       ;
114326 / 777777,,777777                                       ;
114327 / 332640,,036427         SKIPE  AC1,036427             ;; NOW WE HAVE TO GIVE BACK ALL THE BUSINESS IN PROGRESS
114330 / 260140,,116517         PUSHJ    P,RELBLS             ;
114331 / 402000,,036427         SETZM       ILIST             ;
114332 / 332640,,036317         SKIPE  AC1,036317             ;; OUTPUT LIST TOO
114333 / 260140,,116517         PUSHJ    P,RELBLS             ;
114334 / 402000,,036317         SETZM       OLIST             ;
114335 / 332640,,036727         SKIPE  AC1,L0CWTL             ;
114336 / 260140,,116517         PUSHJ    P,RELBLS             ;
114337 / 402000,,036727         SETZM      L0CWTL             ;
                       ; IMP DEAD CODE - RUN DOWN LINK TABLE AND WAKE UP ANY WAITERS
114340 / 336740,,037301         SKIPN  AC3,037301             ;; NOW SEE IF THERE ARE ANY QUEUED RFC'S TO BE RELEASED
114341 / 254000,,114356          JRST      IMPDD4             ;
                       IMPLLP:
114342 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;; IS THERE ANOTHER RFC LIST
114343 / 260140,,116517         PUSHJ    P,RELBLS             ;
114344 / 402017,,037240         SETZM      037240(AC3)        ;
114345 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;
114346 / 254000,,114355          JRST      IMPDDI             ;
114347 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
114350 / 435000,,102000           ORI      102000             ;
114351 / 421000,,000100        ANDCMI        BLOK             ;
114352 / 623000,,376000          TLZE      376000             ;; BRING THIS GUY OUT OF WAIT STATE
114353 / 260140,,121174         PUSHJ    P,  QRUN             ;
114354 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
                       IMPDDI:
114355 / 367740,,114342          SOJG  AC3,IMPLLP             ;
                       IMPDD4:
114356 / 332640,,036426         SKIPE  AC1,036426             ;; GIVE BACK ANY PARTIALLY IMPUTTED MESSAGE
114357 / 260140,,116506         PUSHJ    P,RELLST             ;
114360 / 402000,,036426         SETZM      036426             ;
114361 / 332640,,036434         SKIPE  AC1,036434             ;; GIVE BACK ANY SPARE BLOCKS WHAT MAY BE
114362 / 260140,,121430         PUSHJ    P,IMPREL             ;
114363 / 402000,,036434         SETZM      036434             ;
114364 / 336640,,036715         SKIPN  AC1,IMPFSL             ;
114365 / 254000,,114373          JRST      114373             ;; IF NO SPARE LIST, FORGET IT
                       IMPFDL:
114366 / 261155,,000000          PUSH    P,      (AC1)        ;; SAVE ADDRESS OF NEXT BLOCK
114367 / 260140,,074163         PUSHJ    P,FSGIVE             ;
114370 / 262140,,000015           POP    P,   AC1             ;
114371 / 326640,,114366         JUMPN  AC1,IMPFDL             ;
114372 / 402000,,036715         SETZM      IMPFSL             ;
                       IMPDD6:
114373 / 263140,,000000          POPJ    P,                   ;
                       ; INTERFACE TIMED OUT (SHUDDER!). BRING THE SYSTEM DOWN.
                       IMPTMO:
114374 / 350000,,037346           AOS       OPTMO             ;
114375 / 260140,,044320         PUSHJ    P,044320             ;
114376 / 260140,,044120         PUSHJ    P,DISERR             ;
114377 / 000000,,154265                                       ;
114400 / 000200,,037346        DECQQQ       OPTMO             ;
114401 / 000000,,152275                                       ;
114402 / 777777,,777777                                       ;
114403 / 200640,,037346          MOVE  AC1, OPTMO             ;
114404 / 301640,,000010          CAIL  AC1,    10             ;
114405 / 254000,,114316          JRST      114316             ;; IF TOO MANY TIMEOUTS, BRING DOWN THE IMP
114406 / 333000,,036724        SKIPLE      NOPCNT             ;
114407 / 254000,,114433          JRST      IMPTM3             ;
114410 / 332640,,036316         SKIPE  AC1,036316             ;; PICK UP CURRENT OUTPUT BLOCK
114411 / 260140,,116506         PUSHJ    P,116506             ;; GIVE BACK THE REST OF IT
114412 / 476000,,036721         SETOM      036721             ;
114413 / 336640,,036317         SKIPN  AC1, OLIST             ;
114414 / 254000,,114427          JRST      IMPTM2             ;
114415 / 554715,,000000          HLRZ  AC2,      (AC1)        ;; GET LINK TO NEXT OUTPUT REQUEST
114416 / 542700,,036317          HRRM  AC2,036317             ;; MAKE IT NEW CURRENT REQUEST
114417 / 336000,,000016         SKIPN         AC2             ;
114420 / 402000,,036317         SETZM       OLIST             ;
114421 / 553000,,000015         HRRZS         AC1             ;
114422 / 740200,,000100          CONO  IMP,000100             ;; MAKE SURE INTERFACE THINKS WE ARE DONE
114423 / 201740,,000200         MOVEI  AC3,   200             ;
                       IMPTM1:
114424 / 740340,,004000         CONSO  IMP, ODONE             ;
114425 / 367740,,114424          SOJG  AC3,IMPTM1             ;
114426 / 254000,,122420          JRST      122420             ;; TRY TO START THE NEXT TRANSFER
                       IMPTM2:
114427 / 402000,,036314         SETZM      036314             ;
114430 / 525640,,377777         HRLOI  AC1,377777             ;
114431 / 202640,,036322         MOVEM  AC1,IMPOCT             ;
114432 / 263140,,000000          POPJ    P,                   ;
                       IMPTM3:
114433 / 476000,,036721         SETOM      036721             ;
114434 / 700600,,001010          CONO   PI,IMPOFF             ;
114435 / 740200,,000100          CONO  IMP,000100             ;;TRY TO UNHANG OUTPUT IF POSSIBLE
114436 / 201740,,000200         MOVEI  AC3,   200             ;
114437 / 740340,,004000         CONSO  IMP, ODONE             ;
114440 / 367740,,114437          SOJG  AC3,114437             ;
114441 / 254000,,116435          JRST      116435             ;;WILL DO CONO PI,IMPON
                       ; BLOCKED LINK, LINK TABLE FULL, RFNM, AND NOP
                       BLKLNK:
114442 / 332000,,036721         SKIPE      036721             ;
114443 / 254000,,114260          JRST       PSCAN             ;
114444 / 476000,,036721         SETOM      036721             ;
114445 / 350000,,037307           AOS      NBLNKS             ;
114446 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114447 / 254000,,114456          JRST      114456             ;; NO, SKIP OVER ERROR MESSAGE
114450 / 260140,,044320         PUSHJ    P,044320             ;
114451 / 260140,,044120         PUSHJ    P,DISERR             ;
114452 / 000000,,154065                                       ;
114453 / 000200,,037307        DECQQQ      NBLNKS             ;
114454 / 000000,,152275                                       ;
114455 / 777777,,777777                                       ;
114456 / 254000,,114547          JRST       STERB             ;
                       LTABF:
114457 / 350000,,037310           AOS      LTFULL             ;
114460 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114461 / 254000,,114470          JRST      114470             ;; NO, SKIP OVER ERROR MESSAGE
114462 / 260140,,044320         PUSHJ    P,044320             ;
114463 / 260140,,044120         PUSHJ    P,DISERR             ;
114464 / 000000,,154402                                       ;
114465 / 000200,,037310        DECQQQ      LTFULL             ;
114466 / 000000,,152275                                       ;
114467 / 777777,,777777                                       ;
114470 / 254000,,114547          JRST       STERB             ;
                       ; REQUEST FOR NEW MESSAGE. UNBLOCK LINK AND WAKE UP ANY WAITERS.
                       RFNM:
114471 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
114472 / 606700,,177400          TRNN  AC2,177400             ;; HOST ZERO?
114473 / 254000,,114505          JRST      114505             ;; YES, NO SUCH HOST
114474 / 606700,,000377          TRNN  AC2,000377             ;; LINK 0?
114475 / 254000,,114503          JRST      114503             ;; YES, UNBLOCK IT SEPARATELY
114476 / 260140,,115044         PUSHJ    P,115044             ;; NO, SEARCH LINK TABLE FOR IT
114477 / 254000,,114616          JRST      114616             ;; NOT THERE, SEND BACK UNKNOWN LINK ERROR
114500 / 332317,,037000         SKIPE  DDB,037000(AC3)        ;; LINK THERE, DOES IT HAVE A DDB?
114501 / 260140,,115017         PUSHJ    P,115017             ;; YES, UNBLOK IT AND RESUME ANY RELEVANT PROCESS
114502 / 254000,,114260          JRST      114260             ;; IF NO DDB, PROCESS MIGHT HAVE BEEN RESET, SO DON'T WORRY ABOUT IT
                       L0RFNM:
114503 / 260140,,114666         PUSHJ    P,114666             ;; UNBLOCK LINK 0 AND SEND ANY WAITING CONTROL MESSAGES
114504 / 254000,,114260          JRST       PSCAN             ;
                       HOST0:
114505 / 350000,,037333           AOS      NHOST0             ;
114506 / 254000,,114260          JRST       PSCAN             ;
                       ; NO-OPERATION. LOG AND LEAVE.
                       NOPCN:
114507 / 350000,,037303           AOS      037303             ;; NUMBER OF FIRST-LEVEL NO-OPS
114510 / 254000,,114260          JRST       PSCAN             ;
                       ; HOST OR DESTINATION IMP DEAD. MARK HOST DEAD AND GIVE EVERYBODY ERRORS.
                       ; WAKE ANYBODY UP WAITING FOR US. FLUSH WAITING CLOCK LEVEL CONTROL MESSAGES.
                       DDEAD:
114511 / 260140,,114766         PUSHJ    P,114766             ;; FLUSH WAITING CONTROL MESSAGES
114512 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
114513 / 421700,,000377        ANDCMI  AC2,000377             ;; CLEAR LINK NUMBER
114514 / 336740,,037301         SKIPN  AC3,037301             ;; PICK UP NUMBER OF FIRST FREE ENTRY IN LINK TABLE
114515 / 254000,,114523          JRST      114523             ;; NONE THERE, MARK HOST DEAD AND LEAVE
                       DDL:
114516 / 201056,,000000         MOVEI  TAC,      (AC2)        ;; SAVE COPY OF HOST NUMBER
114517 / 430057,,036740           XOR  TAC,036740(AC3)        ;; COMPARE IT WITH HOST NUMBER IN LINK TABLE
114520 / 606040,,177400          TRNN  TAC,177400             ;; DO HOST NUMBERS MATCH?
114521 / 254000,,114530          JRST      114530             ;; YES, WAKE HIM UP IF NECESSARY
                       DDLINC:
114522 / 367740,,114516          SOJG  AC3,114516             ;; LOOP AROUND FOR NEXT LINK TABLE ENTRY
                       MRKD:
114523 / 135400,,114056           LDB  TEM,114056             ;; PICK UP LINK NUMBER
114524 / 326400,,114260         JUMPN  TEM, PSCAN             ;
114525 / 260140,,114654         PUSHJ    P,114654             ;; PICK UP POINTER INTO HOST TABLES
114526 / 412756,,036730        ANDCAM  AC3,L0BLOK(AC2)        ;; CLEAR LINK
114527 / 254000,,114260          JRST       PSCAN             ;
                       ; COME HERE WITH DDB OF AN ACTIVE CONNECTION TO SEE IF IT SHOULD
                       ; BE AWAKENED.
                       DDGOT:
114530 / 200417,,037200          MOVE  TEM,037200(AC3)        ;; PICK UP THIS HOLE'S STATUS BITS
114531 / 603400,,300000          TLNE  TEM,300000             ;; ANY CONNECTION HERE?
114532 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;; IS THERE A DDB?
114533 / 254000,,114522          JRST      114522             ;; NO, LOOP AROUND
114534 / 200006,,000002          MOVE      DEVIOS(DDB)        ;; YES, PICK UP STATUS WORD
114535 / 603000,,100000          TLNE      100000             ;; WAITING FOR LINK 0?
114536 / 370000,,036726           SOS      036726             ;; YES, DECREMENT COUNT OF PEOPLE WAITING FOR LINK 0
114537 / 435000,,102000           ORI      102000             ;
114540 / 421000,,000100        ANDCMI      000100             ;; UNBLOCK LINK
114541 / 623000,,376000          TLZE      376000             ;; ANY WAIT STATE?
114542 / 260140,,121174         PUSHJ    P,121174             ;; YES, REQUE TO RUN STATE.
114543 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;; RESTORE STATUS WORD
114544 / 254000,,114522          JRST      114522             ;; GO LOOK AT NEXT ONE
                       ; INCOMPLETE TRANSMISSION, ERROR WITH MESSAGE IDENTIFICATION
                       INCT:
114545 / 354000,,037312          AOSA      INCMTR             ;
                       EWMI:
114546 / 350000,,037311           AOS       ERWMI             ;
                       STERB:
114547 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
114550 / 606700,,177400          TRNN  AC2,177400             ;
114551 / 254000,,114505          JRST      114505             ;; NO HOST ZERO
114552 / 606700,,000377          TRNN  AC2,000377             ;; LINK 0?
114553 / 254000,,114564          JRST      114564             ;; YES, CLEAR IT SEPARATELY
114554 / 260140,,115044         PUSHJ    P,115044             ;; NO, LOCATE POSITION IN LINK TABLE
114555 / 254000,,114260          JRST      114260             ;; UNKNOWN LINK. DO NOT SEND ERROR MESSAGE!
114556 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;; IS THERE A DDB THERE?
114557 / 254000,,114642          JRST      114642             ;; NO
114560 / 260140,,115017         PUSHJ    P,115017             ;; YES, PICK UP IOS AND UNBLOCK LINK
114561 / 435000,,200000           ORI      IODERR             ;
114562 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;; NOTE THAT AN ERROR HAS HAPPENED AND THAT WE MIGHT RECEIVE A RFNM LATER
114563 / 254000,,114260          JRST       PSCAN             ;
                       L0EWMI:
114564 / 260140,,114661         PUSHJ    P,114661             ;; UNBLOCK LINK
114565 / 260140,,114730         PUSHJ    P,114730             ;; WAKE UP ANYBODY WAITING FOR LINK 0
114566 / 255000,,000000          JFCL                         ;
114567 / 332000,,036726         SKIPE      036726             ;; IS THERE ANYBODY AT USER-LEVEL WAITING?
114570 / 336740,,037301         SKIPN  AC3,037301             ;; YES, IS THERE A LINK TABLE TO SEARCH
114571 / 254000,,114260          JRST      114260             ;; NO, FLUSH TRANSFER AND LEAVE
114572 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
                       L0EWL:
114573 / 201056,,000000         MOVEI  TAC,      (AC2)        ;; SAVE HOST-LINK NUMBER
114574 / 430057,,036740           XOR  TAC,036740(AC3)        ;; COMPARE IT WITH TABLE
114575 / 606040,,177400          TRNN  TAC,177400             ;; DO HOST NUMBERS MATCH?
114576 / 254000,,114601          JRST      114601             ;; YES
                       L0EWIN:
114577 / 367740,,114573          SOJG  AC3,114573             ;; NO, LOOP AROUND
114600 / 254000,,114260          JRST       PSCAN             ;
                       L0MRKE:
114601 / 200417,,037200          MOVE  TEM,037200(AC3)        ;
114602 / 603400,,300000          TLNE  TEM,300000             ;
114603 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;; PICK UP DEVICE DATA BLOCK ADDRESS
114604 / 254000,,114577          JRST      114577             ;; NONE THERE, LOOP AROUND
114605 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
114606 / 627000,,100000          TLZN      100000             ;; WAITING FOR LINK 0?
114607 / 254000,,114577          JRST      114577             ;; NO, FORGET IT
114610 / 260140,,121174         PUSHJ    P,121174             ;; YES, PUT HIM IN RUN QUEUE
114611 / 435000,,200000           ORI      200000             ;; AND GIVE HIM ERROR MESSAGE
114612 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
114613 / 332000,,036726         SKIPE      036726             ;; ARE THERE ANY MORE WAITERS?
114614 / 254000,,114577          JRST      114577             ;; YES, GO LOOK FOR THEM
114615 / 254000,,114260          JRST       PSCAN             ;
                       ; UNKNOWN LINK AND NO DDB ERROR TYPEOUTS
                       UNL:
114616 / 350000,,037316           AOS      UNKLNK             ;
114617 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114620 / 254000,,114627          JRST      114627             ;; NO, SKIP OVER ERROR MESSAGE
114621 / 260140,,044320         PUSHJ    P,044320             ;
114622 / 260140,,044120         PUSHJ    P,DISERR             ;
114623 / 000000,,154107                                       ;
114624 / 000200,,037316        DECQQQ      UNKLNK             ;
114625 / 000000,,152275                                       ;
114626 / 777777,,777777                                       ;
114627 / 260140,,114631         PUSHJ    P,UNLMER             ;
114630 / 254000,,114260          JRST       PSCAN             ;
                       UNLMER:
114631 / 261140,,000015          PUSH    P,000015             ;; SAVE INPUT MESSAGE ADDRESS
114632 / 260140,,116274         PUSHJ    P,116274             ;; MAKE UP AN ERROR BLOCK
114633 / 260140,,116464         PUSHJ    P,116464             ;; IF NONE, WAIT FOR IT (SIGH)
114634 / 260140,,116447         PUSHJ    P,116447             ;; SEND HIM BACK HIS COMMAND
114635 / 201740,,000005         MOVEI  AC3,000005             ;; GIVE HIM LINK-NOT-CONNECTED ERROR
114636 / 137740,,114071           DPB  AC3,BYTE2P             ;
114637 / 260140,,116565         PUSHJ    P,116565             ;; SEND IT OUT
114640 / 262140,,000015           POP    P,000015             ;; GET BACK HIS MESSAGE
114641 / 263140,,000000          POPJ    P,                   ;
                       NODDB:
114642 / 350000,,037315           AOS      NODDBS             ;
114643 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114644 / 254000,,114653          JRST      114653             ;; NO, SKIP OVER ERROR MESSAGE
114645 / 260140,,044320         PUSHJ    P,044320             ;
114646 / 260140,,044120         PUSHJ    P,DISERR             ;
114647 / 000000,,153737                                       ;
114650 / 000200,,037315        DECQQQ      NODDBS             ;
114651 / 000000,,152275                                       ;
114652 / 777777,,777777                                       ;
114653 / 254000,,114260          JRST       PSCAN             ;
                       ; ROUTINE TO MAKE UP A POINTER INTO THE HOST TABLES
                       ; CALL WITH POINTER TO INCOMMING MESSAGE IN AC1
                       ; RETURNS INDEX IN AC2 AND SINGLE BIT IN AC3
                       L0PTR:
152675 / 000015,,000004                                       ;
152675 / 240515,,000004 POINT 5,15000004,15                   ;
114654 / 135700,,152675           LDB  AC2,152675             ;
114655 / 201740,,000001         MOVEI  AC3,     1             ;
114656 / 242756,,000000           LSH  AC3,      (AC2)        ;
153022 / 000015,,000004                                       ;
153022 / 310315,,000004 POINT 3,15000004,10                   ;
114657 / 135700,,153022           LDB  AC2,153022             ;
114660 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO UNBLOCK LINK ZERO
                       ; CALL WITH POINTER TO INCOMMING MESSAGE IN AC1
                       CLRBL0:
114661 / 260140,,114654         PUSHJ    P, L0PTR             ;
114662 / 616756,,036730          TDNN  AC3,L0BLOK(AC2)        ;; FIRST, IS IT BLOCKED?
114663 / 254000,,115026          JRST      ILLUNB             ;
114664 / 412756,,036730        ANDCAM  AC3,L0BLOK(AC2)        ;; YES, CLEAR IT
114665 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO UNBLOCK LINK ZERO AND WAKE UP ANYBODY WAITING FOR IT
                       UNBL0:
114666 / 260140,,114661         PUSHJ    P,114661             ;; CLEAR BLOCK ON LINK ZERO
114667 / 260140,,114730         PUSHJ    P,114730             ;; WAKE UP ANY CLOCK LEVEL WAITERS
114670 / 336000,,036726         SKIPN      036726             ;; ANY UUO LEVEL WAITERS?
114671 / 263140,,000000          POPJ    P,                   ;; LEAVE IF A CLOCK LEVEL WAITER WAS AWOKEN OR IF NO UUO WAITERS
114672 / 336740,,037301         SKIPN  AC3,037301             ;; SCAN LINK TABLE
114673 / 254000,,114716          JRST      114716             ;; NONE THERE, ERROR
114674 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
                       L0FL:
114675 / 200040,,000016          MOVE  TAC,   AC2             ;
114676 / 430057,,036740           XOR  TAC,036740(AC3)        ;
114677 / 606040,,177400          TRNN  TAC,177400             ;; HOST NUMBERS MATCH?
114700 / 254000,,114703          JRST      114703             ;; YES, SEE IF HE IS WAITING FOR LINK 0
                       L0INCR:
114701 / 367740,,114675          SOJG  AC3,  L0FL             ;
114702 / 263140,,000000          POPJ    P,                   ;
                       L0TRY:
114703 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;
114704 / 254000,,114701          JRST      L0INCR             ;
114705 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
114706 / 627000,,100000          TLZN       LNK0W             ;
114707 / 254000,,114701          JRST      L0INCR             ;
114710 / 370000,,036726           SOS      036726             ;; NOTE ONE LESS UUO-LEVEL WAITER
114711 / 260140,,121174         PUSHJ    P,  QRUN             ;
114712 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
114713 / 332000,,036726         SKIPE      L0WAIT             ;
114714 / 254000,,114701          JRST      L0INCR             ;
114715 / 263140,,000000          POPJ    P,                   ;
                       NOLNKS:
114716 / 350000,,037317           AOS       NRFNL             ;
114717 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
114720 / 254000,,114727          JRST      114727             ;; NO, SKIP OVER ERROR MESSAGE
114721 / 260140,,044320         PUSHJ    P,044320             ;
114722 / 260140,,044120         PUSHJ    P,DISERR             ;
114723 / 000000,,154303                                       ;
114724 / 000200,,037317        DECQQQ       NRFNL             ;
114725 / 000000,,152275                                       ;
114726 / 777777,,777777                                       ;
114727 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO TRANSMIT ANY MESSAGES IN CLOCK WAIT ON LINK 0
                       ; CALL WITH INCOMMING MESSAGE CAUSING UNBLOCKING IN AC1
                       ; SKIPS IF ANY WAITING MESSAGES WERE FOUND
                       CWL0:
114730 / 400100,,000000          SETZ TAC1,                   ;; NOTE NO PREVIOUS WAITER
114731 / 135740,,114055           LDB  AC3,114055             ;; PICK UP HOST NUMBER
114732 / 336700,,036727         SKIPN  AC2,036727             ;; PICK UP WAIT LIST
114733 / 263140,,000000          POPJ    P,                   ;; NONE THERE
                       CWL0A:
152705 / 000016,,000004                                       ;
152705 / 241016,,000004 POINT 8,16000004,15                   ;
114734 / 135040,,152705           LDB  TAC,152705             ;
114735 / 316040,,000017          CAMN  TAC,000017             ;; SAME HOST?
114736 / 254000,,114743          JRST      114743             ;; YES, SERVE HIM
114737 / 200100,,000016          MOVE TAC1,000016             ;; PUT THIS BLOCK IN LAST BLOCK POSITION
114740 / 554716,,000000          HLRZ  AC2,      (AC2)        ;; PICK UP NEXT BLOCK ADDRESS
114741 / 326700,,114734         JUMPN  AC2,114734             ;; IF THERE IS ONE, LOOP AROUND AND SERVE IT
114742 / 263140,,000000          POPJ    P,                   ;
                       CWL0G:
114743 / 260140,,114753         PUSHJ    P,114753             ;; UNLINK IT
114744 / 261140,,000015          PUSH    P,   AC1             ;
114745 / 200640,,000016          MOVE  AC1,   AC2             ;
114746 / 260140,,122377         PUSHJ    P,122377             ;; SEND IT OUT
114747 / 262140,,000015           POP    P,   AC1             ;
114750 / 260140,,114654         PUSHJ    P, L0PTR             ;
114751 / 436756,,036730           ORM  AC3,L0BLOK(AC2)        ;; NOTE LINK 0 BLOCKED
114752 / 254000,,037401          JRST      037401             ;; GIVE SKIP RETURN
                       ; ROUTINE TO UNLINK A BLOCK FROM THE CLOCK WAIT LIST
                       ; CALL WITH BLOCK ADDRESS IN AC2 AND ACCRESS OF PREVIOUS BLOCK IN TAC1
                       UNLCW:
114753 / 326100,,114761         JUMPN TAC1,CWL0NN             ;
114754 / 554756,,000000          HLRZ  AC3,      (AC2)        ;; PICK UP ADDRESS OF NEXT BLOCK
114755 / 542740,,036727          HRRM  AC3,L0CWTL             ;
114756 / 336000,,000017         SKIPN         AC3             ;
114757 / 402000,,036727         SETZM      L0CWTL             ;
114760 / 263140,,000000          POPJ    P,                   ;
                       CWL0NN:
114761 / 554756,,000000          HLRZ  AC3,      (AC2)        ;
114762 / 506742,,000000          HRLM  AC3,      (TAC1)       ;
114763 / 336000,,000017         SKIPN         AC3             ;
114764 / 506100,,036727          HRLM TAC1,L0CWTL             ;
114765 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO FLUSH ALL CLOCK-LEVEL OUTPUTS TO A PARTICULAR HOST
                       ; CALL WITH INCOMMING MESSAGE IN AC1
                       FLCWL0:
114766 / 400100,,000000          SETZ TAC1,                   ;
114767 / 135740,,114055           LDB  AC3,  SRCP             ;
114770 / 336700,,036727         SKIPN  AC2,L0CWTL             ;
114771 / 263140,,000000          POPJ    P,                   ;
                       FLCWA:
152705 / 000016,,000004                                       ;
152705 / 241016,,000004 POINT 8,16000004,15                   ;
114772 / 135040,,152705           LDB  TAC,152705             ;
114773 / 316040,,000017          CAMN  TAC,   AC3             ;
114774 / 254000,,115001          JRST        FLCG             ;
114775 / 200100,,000016          MOVE TAC1,   AC2             ;
114776 / 554716,,000000          HLRZ  AC2,      (AC2)        ;
114777 / 326700,,114772         JUMPN  AC2, FLCWA             ;
115000 / 263140,,000000          POPJ    P,                   ;
                       FLCG:
115001 / 554256,,000000          HLRZ  DAT,      (AC2)        ;
115002 / 261140,,000017          PUSH    P,000017             ;; SAVE STATE OF SCAN
115003 / 261140,,000005          PUSH    P,   DAT             ;
115004 / 261140,,000015          PUSH    P,   AC1             ;
115005 / 261140,,000002          PUSH    P,  TAC1             ;
115006 / 260140,,114753         PUSHJ    P,114753             ;; UNLINK LIST FROM WAIT LIST
115007 / 200640,,000016          MOVE  AC1,   AC2             ;
115010 / 260140,,116506         PUSHJ    P,116506             ;; RELEASE STORAGE IN LIST
115011 / 262140,,000002           POP    P,  TAC1             ;
115012 / 262140,,000015           POP    P,   AC1             ;
115013 / 262140,,000016           POP    P,   AC2             ;
115014 / 262140,,000017           POP    P,   AC3             ;
115015 / 326700,,114772         JUMPN  AC2, FLCWA             ;
115016 / 263140,,000000          POPJ    P,                   ;
                       ; UNBLOCKING ROUTINE FOR NON-ZERO LINK
                       ; DDB MUST BE SET UP
                       UNBLOK:
115017 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
115020 / 626000,,000100          TRZN      000100             ;; IS IT BLOCKED?
115021 / 254000,,115026          JRST      ILLUNB             ;
115022 / 623000,,040000          TLZE      040000             ;; IS HE WAITING FOR IT TO BECOME UNBLOCKED?
115023 / 260140,,121174         PUSHJ    P,121174             ;; YES, WAKE HIM UP
                       UNBLK1:
115024 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
115025 / 263140,,000000          POPJ    P,                   ;
                       ILLUNB:
115026 / 261140,,000006          PUSH    P,   DDB             ;
115027 / 336000,,036721         SKIPN      036721             ;
115030 / 476000,,036721         SETOM      036721             ;
115031 / 350000,,037314           AOS      BDRFNM             ;
115032 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115033 / 254000,,115042          JRST      115042             ;; NO, SKIP OVER ERROR MESSAGE
115034 / 260140,,044320         PUSHJ    P,044320             ;
115035 / 260140,,044120         PUSHJ    P,DISERR             ;
115036 / 000000,,154644                                       ;
115037 / 000200,,037314        DECQQQ      BDRFNM             ;
115040 / 000000,,152275                                       ;
115041 / 777777,,777777                                       ;
115042 / 262140,,000006           POP    P,   DDB             ;
115043 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO FIND THE INDEX OF A GIVEN HOST-LINK NUMBER
                       ; FINDS SEND-SIDE INDEX ONLY
                       ; ENTER WITH HOST-LINK NUMBER IN AC2
                       ; RETURNS INDEX INTO LNKTAB AND IMPDDB IN AC3
                       ; SKIPS ON SUCCESS
                       FNDLNK:
115044 / 336740,,037301         SKIPN  AC3,037301             ;; PICK UP NUMBER OF FIRST FREE LINK
115045 / 263140,,000000          POPJ    P,                   ;
                       FNDL1:
115046 / 316717,,036740          CAMN  AC2,036740(AC3)        ;; IS THIS IT?
115047 / 254000,,115052          JRST      115052             ;; YES, CHECK FOR SEND-SIDE
                       FNDL3:
115050 / 367740,,115046          SOJG  AC3, FNDL1             ;
115051 / 263140,,000000          POPJ    P,                   ;
                       FNDL2:
115052 / 200417,,037040          MOVE  TEM,037040(AC3)        ;
115053 / 606400,,000001          TRNN  TEM,     1             ;
115054 / 254000,,115050          JRST       FNDL3             ;
115055 / 254000,,037401          JRST      CPOPJ1             ;
115056 /               ;: IMPCLK[J17,SYS] EOF.
115056 /               ;: IMPREG[J17,SYS]
                       ; REGULAR MESSAGE
                       REGULA:
115056 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
115057 / 606700,,000377          TRNN  AC2,000377             ;; CONTROL MESSAGE?
115060 / 254000,,115206          JRST      115206             ;; YES, GO PICK UP NCP PROTOCAL OP-CODE
115061 / 336740,,037301         SKIPN  AC3, FFLNK             ;
115062 / 254000,,115070          JRST       RMUNL             ;
115063 / 400240,,000000          SETZ  DAT,                   ;
                       REGFRL:
115064 / 316717,,036740          CAMN  AC2,036740(AC3)        ;
115065 / 254000,,115114          JRST      115114             ;; LINK NUMBER MATCHES, CHECK FOR RECEIVE-SIDE
                       REGINC:
115066 / 367740,,115064          SOJG  AC3,REGFRL             ;
115067 / 322240,,114616         JUMPE  DAT,   UNL             ;
                       RMUNL:
115070 / 350000,,037351           AOS      RWNOSS             ;
115071 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115072 / 254000,,115101          JRST      115101             ;; NO, SKIP OVER ERROR MESSAGE
115073 / 260140,,044320         PUSHJ    P,044320             ;
115074 / 260140,,044120         PUSHJ    P,DISERR             ;
115075 / 000000,,154473                                       ;
115076 / 000200,,037351        DECQQQ      RWNOSS             ;
115077 / 000000,,152275                                       ;
115100 / 777777,,777777                                       ;
115101 / 254000,,114260          JRST       PSCAN             ;
                       IWCNO:
115102 / 350000,,037352           AOS      NIWCNO             ;
115103 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115104 / 254000,,115113          JRST      115113             ;; NO, SKIP OVER ERROR MESSAGE
115105 / 260140,,044320         PUSHJ    P,044320             ;
115106 / 260140,,044120         PUSHJ    P,DISERR             ;
115107 / 000000,,154616                                       ;
115110 / 000200,,037352        DECQQQ      NIWCNO             ;
115111 / 000000,,152275                                       ;
115112 / 777777,,777777                                       ;
115113 / 254000,,114260          JRST       PSCAN             ;
                       ; REGULAR MESSAGE ON NON-ZERO LINK. HERE WE HAVE FOUND THE LINK TABLE ENTRY.
                       REGCRS:
115114 / 200417,,037040          MOVE  TEM,037040(AC3)        ;
115115 / 201257,,000000         MOVEI  DAT,      (AC3)        ;; NOTE THAT WE FOUND A SOCKET OF SOME KIND
115116 / 602400,,000001          TRNE  TEM,     1             ;
115117 / 254000,,115066          JRST      115066             ;; SEND SIDE, SKIP THIS ONE.
115120 / 200717,,037200          MOVE  AC2,037200(AC3)        ;; PICK UP STATUS BITS
115121 / 641700,,300000           TLC  AC2,300000             ;
115122 / 603700,,300000          TLNE  AC2,300000             ;; IS THE SOCKET ALL THE WAY OPEN?
115123 / 254000,,115102          JRST      115102             ;; NO, MUST BE COMPLETELY OPEN TO RECEIVE MESSAGES
115124 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;; PICK UP DDB ADDRESS IF ANY
115125 / 254000,,114642          JRST       NODDB             ;
115126 / 200006,,000002          MOVE      DEVIOS(DDB)        ;; PICK UP IO STATUS WORD
115127 / 623000,,200000          TLZE      200000             ;; IS HE WAITING FOR INPUT?
115130 / 260140,,121174         PUSHJ    P,121174             ;; YES, WAKE HIM UP
115131 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
115132 / 205700,,000010         MOVSI  AC2,000010             ;; GIVE HIM AN INPUT INTERRUPT
115133 / 260140,,116527         PUSHJ    P,INTCOM             ;
115134 / 135700,,114060           LDB  AC2,114060             ;; PICK UP BYTE SIZE OF TRANSFER
115135 / 135740,,114061           LDB  AC3,114061             ;; AND LENGTH OF TRANSFER
115136 / 221717,,000000         IMULI  AC2,      (AC3)        ;; GET TOTAL NUMBER OF BITS IN TRANSFER
115137 / 272706,,000025          ADDM  AC2,  BIIL(DDB)        ;; NOTE THIS MANY MORE BITS IN THE INPUT LIST
115140 / 213000,,000016         MOVNS         AC2             ;
115141 / 272706,,000023          ADDM  AC2,   HBA(DDB)        ;; DECREMENT BIT ALLOCATION
115142 / 350006,,000024           AOS        MIIL(DDB)        ;; AND THIS MANY MORE MESSAGES IN THE INPUT LIST
115143 / 371006,,000022          SOSL         HMA(DDB)        ;; DECREMENT MESSAGE ALLOCATION
115144 / 335006,,000023        SKIPGE         HBA(DDB)        ;; DID BIT ALLOCATION UNDERFLOW?
115145 / 254000,,115160          JRST      115160             ;; YES, ERROR
115146 / 260140,,116551         PUSHJ    P,116551             ;; POP MESSAGE OFF INPUT LIST
115147 / 336706,,000013         SKIPN  AC2,   INL(DDB)        ;; DOES HE HAVE AN INPUT LIST?
115150 / 254000,,115156          JRST      115156             ;; NO, START ONE
115151 / 207000,,000016         MOVSS      000016             ;; GET POINTER TO LAST BLOCK IN RH
115152 / 506656,,000000          HRLM  AC1,      (AC2)        ;; LINK US ONTO HIS TAIL
                       REG2:
115153 / 506646,,000013          HRLM  AC1,   INL(DDB)        ;; PUT US IN AS NEW LAST ELEMENT
115154 / 553015,,000000         HRRZS            (AC1)        ;; NOTE THAT NOONE FOLLOWS US
115155 / 254000,,114172          JRST      IMPCLK             ;
                       REG1:
115156 / 542646,,000013          HRRM  AC1,   INL(DDB)        ;; PUT US IN AS FIRST ELEMENT
115157 / 254000,,115153          JRST        REG2             ;
                       ; ALLOCATION UNDERFLOW ERROR
                       CTROVF:
115160 / 435000,,201000           ORI      201000             ;
115161 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
115162 / 261140,,000015          PUSH    P,000015             ;; SEND ERROR MESSAGE TO HOST
115163 / 260140,,116274         PUSHJ    P,116274             ;; MAKE UP AN ERROR BLOCK
115164 / 260140,,116464         PUSHJ    P,116464             ;
115165 / 260140,,116460         PUSHJ    P,116460             ;; TAG ON HIS MESSAGE
115166 / 201740,,000001         MOVEI  AC3,   CTO             ;
115167 / 137740,,114072           DPB  AC3,BYTE3P             ;
115170 / 260140,,116565         PUSHJ    P,116565             ;; SEND IT OUT
115171 / 262140,,000015           POP    P,   AC1             ;
115172 / 254000,,114260          JRST       PSCAN             ;
                       ; UNKNOWN LINK ERROR
                       SLUNL:
115173 / 350000,,037350           AOS      SLUNLK             ;
115174 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115175 / 254000,,115204          JRST      115204             ;; NO, SKIP OVER ERROR MESSAGE
115176 / 260140,,044320         PUSHJ    P,044320             ;
115177 / 260140,,044120         PUSHJ    P,DISERR             ;
115200 / 000000,,154530                                       ;
115201 / 000200,,037350        DECQQQ      SLUNLK             ;
115202 / 000000,,152275                                       ;
115203 / 777777,,777777                                       ;
115204 / 260140,,114631         PUSHJ    P,UNLMER             ;
115205 / 254000,,115251          JRST       L0XIT             ;
                       ; CONTROL MESSAGE
                       L0REG:
115206 / 135740,,114060           LDB  AC3,114060             ;; YES, CHECK BYTE SIZE
115207 / 302740,,000010          CAIE  AC3,000010             ;; BETTER BE 8
115210 / 254000,,115277          JRST      115277             ;; ILLEGAL, GIVE ERROR
115211 / 201755,,000000         MOVEI  AC3,      (AC1)        ;; SEPARATE OUT INPUT BLOCK ADDRESS
115212 / 505740,,441000          HRLI  AC3,441000             ;; MAKE UP AN 8-BIT BYTE POINTER FOR IT
115213 / 271740,,000006          ADDI  AC3,000006             ;; MAKE IT POINT AT THE FIRST OPCODE
115214 / 202755,,000003         MOVEM  AC3,   TBP(AC1)        ;; SAVE IT IN INPUT BLOCK
                       L0MORE:
115215 / 134455,,000003          ILDB DSER,   TBP(AC1)        ;; PICK UP OPCODE
115216 / 301440,,000016          CAIL DSER,000016             ;; IS IT A LEGAL OPCODE?
115217 / 254000,,115255          JRST      115255             ;; NO, GIVE ERROR
115220 / 135740,,114061           LDB  AC3,114061             ;; PICK UP LENGTH OF MESSAGE
153057 / 000011,,115322                                       ;
153057 / 331111,,115322 POINT 9,11115322,8                    ;
115221 / 135040,,153057           LDB  TAC,153057             ;
115222 / 301741,,000000          CAIL  AC3,      (TAC)        ;; IS COMMAND AS LONG AS IT SHOULD BE?
115223 / 254000,,115246          JRST      115246             ;; YES, DISPATCH
115224 / 350000,,037322           AOS        BCMM             ;
115225 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115226 / 254000,,115235          JRST      115235             ;; NO, SKIP OVER ERROR MESSAGE
115227 / 260140,,044320         PUSHJ    P,044320             ;
115230 / 260140,,044120         PUSHJ    P,DISERR             ;
115231 / 000000,,154432                                       ;
115232 / 000200,,037322        DECQQQ        BCMM             ;
115233 / 000000,,152275                                       ;
115234 / 777777,,777777                                       ;
115235 / 261140,,000015          PUSH    P,000015             ;; SAVE INPUT MESSAGE
115236 / 260140,,116274         PUSHJ    P,116274             ;; MAKE UP AN ERROR BLOCK
115237 / 260140,,116464         PUSHJ    P,116464             ;
115240 / 260140,,116447         PUSHJ    P,116447             ;; TAG ON HIS LEADER
115241 / 201740,,000002         MOVEI  AC3,000002             ;; GIVE HIM SHORT PARAMETER ERROR
                       RERR1:
115242 / 137740,,114071           DPB  AC3,BYTE2P             ;
                       RERR2:
115243 / 260140,,116565         PUSHJ    P,CLKOUT             ;
115244 / 262140,,000015           POP    P,   AC1             ;
115245 / 254000,,114260          JRST       PSCAN             ;
                       L0CDSP:
115246 / 275741,,000000          SUBI  AC3,      (TAC)        ;; SHORTEN TOTAL MESSAGE BY THIS MUCH
115247 / 137740,,114061           DPB  AC3,114061             ;; AND THIS IS THE NEW MESSAGE LENGTH
115250 / 254031,,115322          JRST      @ OPTAB(DSER)      ;
                       L0XIT:
115251 / 550640,,036427          HRRZ  AC1,036427             ;; PICK UP POINTER TO MESSAGE
115252 / 135700,,114061           LDB  AC2,114061             ;; SEE IF THERE IS ANYTHING LEFT IN THIS MESSAGE
115253 / 322700,,114260         JUMPE  AC2, PSCAN             ;
115254 / 254000,,115215          JRST      L0MORE             ;
                       ; ERROR MESSAGES FOR LINK ZERO MESSAGES
                       RILLO:
115255 / 332000,,036721         SKIPE      036721             ;
115256 / 254000,,114260          JRST      114260             ;; IF ERROR RECOVERY IN PROGRESS, TOLERATE A BIT OF FOOLISHNESS
115257 / 476000,,036721         SETOM      036721             ;; OTHERWISE INITIATE RECOVERY SEQUENCE
115260 / 350000,,037320           AOS      NILLOP             ;
115261 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115262 / 254000,,115271          JRST      115271             ;; NO, SKIP OVER ERROR MESSAGE
115263 / 260140,,044320         PUSHJ    P,044320             ;
115264 / 260140,,044120         PUSHJ    P,DISERR             ;
115265 / 000000,,154073                                       ;
115266 / 000200,,037320        DECQQQ      NILLOP             ;
115267 / 000000,,152275                                       ;
115270 / 777777,,777777                                       ;
115271 / 261140,,000015          PUSH    P,   AC1             ;
115272 / 260140,,116274         PUSHJ    P,MAKERB             ;
115273 / 260140,,116464         PUSHJ    P,116464             ;
115274 / 260140,,116447         PUSHJ    P, EFILL             ;
115275 / 201740,,000001         MOVEI  AC3,   ILO             ;
115276 / 254000,,115242          JRST       RERR1             ;
                       ILLBS:
115277 / 332000,,036721         SKIPE      036721             ;
115300 / 254000,,114260          JRST      114260             ;; IF ERROR RECOVERY IN PROGRESS, TOLERATE A BIT OF FOOLISHNESS
115301 / 476000,,036721         SETOM      036721             ;; OTHERWISE INITIATE RECOVERY SEQUENCE
115302 / 350000,,037321           AOS       BSILL             ;
115303 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115304 / 254000,,115313          JRST      115313             ;; NO, SKIP OVER ERROR MESSAGE
115305 / 260140,,044320         PUSHJ    P,044320             ;
115306 / 260140,,044120         PUSHJ    P,DISERR             ;
115307 / 000000,,154570                                       ;
115310 / 000200,,037321        DECQQQ       BSILL             ;
115311 / 000000,,152275                                       ;
115312 / 777777,,777777                                       ;
115313 / 261140,,000015          PUSH    P,   AC1             ;
115314 / 260140,,116274         PUSHJ    P,MAKERB             ;
115315 / 260140,,116464         PUSHJ    P,116464             ;
115316 / 260140,,116460         PUSHJ    P, OFILL             ;
115317 / 201740,,000002         MOVEI  AC3,   ILB             ;
115320 / 137740,,114072           DPB  AC3,BYTE3P             ;
115321 / 254000,,115243          JRST       RERR2             ;
                       ; NCP SECOND LEVEL PROTOCALL OPCODE DISPATCH TABLE
                       OPTAB:
115322 / 001000,,115370           XWD 1*1000,SNOPCN	          ;
115323 / 012000,,115512           XWD 12*1000,IRTS	           ;
115324 / 012000,,115512           XWD 12*1000,ISTR	           ;
115325 / 011000,,115734           XWD 11*1000,ICLS	           ;
115326 / 010000,,115340           XWD 10*1000,IALL	           ;
115327 / 004000,,115412           XWD 4*1000,IGVB	            ;
115330 / 010000,,115355           XWD 10*1000,IRET	           ;
115331 / 002000,,115472           XWD 2*1000,IINR	            ;
115332 / 002000,,115502           XWD 2*1000,IINS	            ;
115333 / 002000,,116020           XWD 2*1000,IECO	            ;
115334 / 002000,,116042           XWD 2*1000,IERP	            ;
115335 / 014000,,116043           XWD 14*1000,IERR	           ;
115336 / 001000,,116100           XWD 1*1000,IRST	            ;
115337 / 001000,,116077           XWD 1*1000,IRRP	            ;
                       ; ALLOCATE. BUMP COUNTERS - RETURN, DECREMENT HIS COUNTERS
                       IALL:
115340 / 260140,,116616         PUSHJ    P,116616             ;; PICK UP DDB OF CONNECTION
115341 / 254000,,115173          JRST      115173             ;; NON-EX CONNECTION
115342 / 254000,,115372          JRST      115372             ;; NO SEND SOCKET
115343 / 254000,,115406          JRST      115406             ;; CONNECTION CLOSED OR NO DDB
115344 / 260140,,116645         PUSHJ    P,116645             ;; GET 16 CONSECUTIVE BITS INTO AC2
115345 / 272706,,000014          ADDM  AC2,   MAL(DDB)        ;; BUMP HIS MESSAGE ALLOCATION
115346 / 260140,,116652         PUSHJ    P,116652             ;; GET 32 BIT DATUM
115347 / 272706,,000015          ADDM  AC2,   BAL(DDB)        ;; BUMP BIT COUNTER
115350 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
115351 / 623000,,020000          TLZE      020000             ;; WAITING FOR ALLOCATION
115352 / 260140,,121174         PUSHJ    P,121174             ;; YES, WAKE HIM UP
115353 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
115354 / 254000,,115251          JRST       L0XIT             ;
                       ; RTN COMMAND.
                       IRET:
115355 / 260140,,116615         PUSHJ    P,116615             ;; PICK UP DDB OF A RECEIVE-SIDE CONNECTION
115356 / 254000,,115173          JRST      115173             ;; NON-EX CONNECTION
115357 / 254000,,115372          JRST      115372             ;; NO RECEIVE SIDE CONNECTION
115360 / 254000,,115406          JRST      115406             ;; CONNECTION CLOSED
115361 / 260140,,116645         PUSHJ    P,116645             ;; PICK UP MESSAGE ALLOCATION
115362 / 213000,,000016         MOVNS         AC2             ;
115363 / 272706,,000022          ADDM  AC2,   HMA(DDB)        ;; HE NOW HAS THAT MUCH LESS ALLOCATION
115364 / 260140,,116652         PUSHJ    P,116652             ;; GET BIT ALLOCATION
115365 / 213000,,000016         MOVNS         AC2             ;
115366 / 272706,,000023          ADDM  AC2,   HBA(DDB)        ;
115367 / 254000,,115251          JRST      115251             ;; END OF OPERATION
                       ; NOP - NO OPERATION AND COMDDS ERROR RETURNS
                       SNOPCN:
115370 / 350000,,037334           AOS      037334             ;; BUMP COUNT OF SECOND LEVEL NO-OPERATIONS
115371 / 254000,,115251          JRST       L0XIT             ;
                       ; ERROR RETURNS FOR COMDDS CALLERS
                       RD6NSE:
115372 / 260140,,116652         PUSHJ    P,116652             ;; PUSH BYTE POINTER ALONG
                       RD2NSE:
115373 / 260140,,116645         PUSHJ    P,  RD2B             ;
                       RCCANS:
115374 / 350000,,037353           AOS        NSSC             ;
115375 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115376 / 254000,,115405          JRST      115405             ;; NO, SKIP OVER ERROR MESSAGE
115377 / 260140,,044320         PUSHJ    P,044320             ;
115400 / 260140,,044120         PUSHJ    P,DISERR             ;
115401 / 000000,,154422                                       ;
115402 / 000200,,037353        DECQQQ        NSSC             ;
115403 / 000000,,152275                                       ;
115404 / 777777,,777777                                       ;
115405 / 254000,,115251          JRST       L0XIT             ;
                       RD6CC:
115406 / 260140,,116652         PUSHJ    P,  RD4B             ;
                       RD2CC:
115407 / 260140,,116645         PUSHJ    P,  RD2B             ;
115410 / 350000,,037354           AOS      NALWNC             ;
115411 / 254000,,115251          JRST       L0XIT             ;
                       ; GVB COMMAND. THEY WANT US TO RETURN SOME STORAGE.
                       IGVB:
115412 / 260140,,116616         PUSHJ    P,COMDDS             ;
115413 / 254000,,115373          JRST      RD2NSE             ;
115414 / 254000,,115407          JRST       RD2CC             ;
115415 / 254000,,115173          JRST       SLUNL             ;
115416 / 134715,,000003          ILDB  AC2,   TBP(AC1)        ;; PICK UP FIRST FRACTION BYTE
115417 / 303700,,000200         CAILE  AC2,000200             ;; FRACTION GREATER THAN ONE?
115420 / 201700,,000200         MOVEI  AC2,000200             ;; YES, GIVE IT ALL BACK
115421 / 220706,,000014          IMUL  AC2,   MAL(DDB)        ;; SEE HOW MUCH HE WANTS
115422 / 602700,,000177          TRNE  AC2,000177             ;; ROUND UP ALWAYS
115423 / 271700,,000200          ADDI  AC2,   200             ;
115424 / 242700,,777771           LSH  AC2,777771             ;; AND THIS IS NUMBER OF BITS HE WANTS
115425 / 261140,,000016          PUSH    P,   AC2             ;
115426 / 213000,,000016         MOVNS         AC2             ;
115427 / 272706,,000014          ADDM  AC2,   MAL(DDB)        ;
115430 / 134715,,000003          ILDB  AC2,   TBP(AC1)        ;; GET NEXT BYTE
115431 / 303700,,000200         CAILE  AC2,000200             ;; FRACTION GREATER THAN ONE?
115432 / 201700,,000200         MOVEI  AC2,000200             ;; YES, GIVE IT ALL BACK
115433 / 220706,,000015          IMUL  AC2,   BAL(DDB)        ;; SEE HOW MUCH HE WANTS
115434 / 602700,,000177          TRNE  AC2,000177             ;; ROUND UP ALWAYS
115435 / 271700,,000200          ADDI  AC2,   200             ;
115436 / 242700,,777771           LSH  AC2,777771             ;; AND THIS IS NUMBER OF BITS HE WANTS
115437 / 261140,,000016          PUSH    P,   AC2             ;
115440 / 213000,,000016         MOVNS         AC2             ;
115441 / 272706,,000015          ADDM  AC2,   BAL(DDB)        ;
                       ; GVB COMMAND. HERE WE FORMAT A RET BLOCK
115442 / 261140,,000015          PUSH    P,   AC1             ;
115443 / 260140,,121351         PUSHJ    P,121351             ;; GET SOME STORAGE FOR A RET COMMAND
115444 / 260140,,116464         PUSHJ    P,116464             ;
115445 / 262140,,000016           POP    P,   AC2             ;
115446 / 200716,,000004          MOVE  AC2, TDATA(AC2)        ;
115447 / 202715,,000004         MOVEM  AC2, TDATA(AC1)        ;
115450 / 402015,,000005         SETZM      000005(AC1)        ;
115451 / 402015,,000006         SETZM      000006(AC1)        ;
115452 / 201740,,000010         MOVEI  AC3,    10             ;
115453 / 137740,,114060           DPB  AC3,114060             ;; BOTH SIZE AND COUNT ARE 8 BYTES
115454 / 137740,,114061           DPB  AC3,COUNTP             ;
115455 / 201740,,000006         MOVEI  AC3,   RET             ;
115456 / 137740,,114062           DPB  AC3, OPCDP             ;
152706 / 000016,,000006                                       ;
152706 / 241016,,000006 POINT 8,16000006,15                   ;
115457 / 135740,,152706           LDB  AC3,152706             ;
115460 / 137740,,114063           DPB  AC3,114063             ;; PUT IN LINK
115461 / 262140,,000017           POP    P,   AC3             ;
115462 / 242740,,000004           LSH  AC3,     4             ;
115463 / 202755,,000007         MOVEM  AC3,000007(AC1)        ;
115464 / 262140,,000017           POP    P,000017             ;; PUT ALLOCATIONS BEING RETURNED IN FIRST 32 BITS
152252 / 000016,,000006                                       ;
152252 / 042016,,000006 POINT 16,16000006,31                  ;
115465 / 137740,,152252           DPB  AC3,152252             ;
115466 / 201740,,000004         MOVEI  AC3,     4             ;
115467 / 202755,,000001         MOVEM  AC3,   TWC(AC1)        ;
115470 / 260140,,116565         PUSHJ    P,CLKOUT             ;
115471 / 254000,,115251          JRST       L0XIT             ;
                       ; INTERRUPTS
                       IINR:
115472 / 260140,,116616         PUSHJ    P,COMDDS             ;
115473 / 254000,,115173          JRST       SLUNL             ;
115474 / 254000,,115374          JRST      RCCANS             ;
115475 / 254000,,115251          JRST       L0XIT             ;
115476 / 205700,,000100         MOVSI  AC2,000100             ;; INTERRUPT BY RECEIVER
115477 / 436717,,037200           ORM  AC2,037200(AC3)        ;; PUT IN STATUS BITS TOO
115500 / 260140,,116527         PUSHJ    P,INTCOM             ;
115501 / 254000,,115251          JRST       L0XIT             ;
                       IINS:
115502 / 260140,,116615         PUSHJ    P,COMDDR             ;
115503 / 254000,,115173          JRST       SLUNL             ;
115504 / 254000,,115374          JRST      RCCANS             ;
115505 / 254000,,115251          JRST       L0XIT             ;
                       ;	JRST SLUNL		; ?? comddr only has 4 returns, not 5
115506 / 205700,,000040         MOVSI  AC2,000040             ;; INTERRUPT BY SENDER
115507 / 436717,,037200           ORM  AC2,037200(AC3)        ;
115510 / 260140,,116527         PUSHJ    P,INTCOM             ;
115511 / 254000,,115251          JRST       L0XIT             ;
                       ; REQUEST FOR CONNECTION
                       IRTS:
                       ISTR:
115512 / 260140,,116652         PUSHJ    P,116652             ;; GET FIRST SOCKET NUMBER (FOREIGN SOCKET)
115513 / 200600,,000016          MOVE  UUO,000016             ;; SAVE FOREIGN SOCKET IN UUO
115514 / 260140,,116652         PUSHJ    P,  RD4B             ;
115515 / 200340,,000016          MOVE JDAT,000016             ;; SAVE LOCAL SOCKET NUMBER IN JDAT
115516 / 336740,,037301         SKIPN  AC3,037301             ;; SCAN LINK TABLE FOR IT
115517 / 254000,,115523          JRST      MAKPND             ;
                       ISTRL:
115520 / 316717,,037040          CAMN  AC2,037040(AC3)        ;
115521 / 254000,,115622          JRST      ISTRFS             ;
115522 / 367740,,115520          SOJG  AC3, ISTRL             ;
                       MAKPND:
115523 / 350740,,037301           AOS  AC3,037301             ;; MAKE UP NEW INDEX NUMBER
115524 / 303740,,000040         CAILE  AC3,000040             ;; OVERFLOWED TABLES?
115525 / 254000,,115560          JRST      115560             ;; YES, CANNOT ACCEPT RFC
115526 / 402017,,037000         SETZM      037000(AC3)        ;
115527 / 202717,,037040         MOVEM  AC2,037040(AC3)        ;
115530 / 202617,,037100         MOVEM  UUO,037100(AC3)        ;
115531 / 402017,,037240         SETZM      037240(AC3)        ;; CLEAR OUT OLD GARBAGE
115532 / 260140,,115550         PUSHJ    P,115550             ;; SET HOST NUMBER AND EITHER BYTE SIZE OR LINK NUMBER
                       MAKPN:
115533 / 260140,,121351         PUSHJ    P,121351             ;; GET A BLOCK FOR PENDING MESSAGE
115534 / 260140,,116464         PUSHJ    P,116464             ;
115535 / 202355,,000006         MOVEM JDAT, SOCK2(AC1)        ;; SAVE SOCKET NUMBER
115536 / 202615,,000005         MOVEM  UUO, SOCK1(AC1)        ;
115537 / 505640,,115575          HRLI  AC1,115575             ;; MAKE IT PEND IN A CLOCK QUEUE REQUEST
115540 / 700600,,000400          CONO   PI, PIOFF             ;
115541 / 136640,,013624          IDPB  AC1,  CLKQ             ;
115542 / 700600,,000200          CONO   PI,  PION             ;
115543 / 201700,,034100         MOVEI  AC2,034100             ;
115544 / 202715,,000004         MOVEM  AC2,XTTIME(AC1)        ;; WE WILL PEND FOR 4 MINUTES
115545 / 205700,,500000         MOVSI  AC2,500000             ;
115546 / 202717,,037200         MOVEM  AC2,037200(AC3)        ;; NOTE THAT A STR HAS BEEN RECEIVED
115547 / 254000,,115251          JRST       L0XIT             ;
                       ; ROUTINE TO SET HOST NUMBER AND EITHER LINK OR BYTE SIZE
                       SETHLB:
115550 / 135700,,114055           LDB  AC2,114055             ;; SET HOST NUMBER IF NOT ALREADY SET
152321 / 000017,,036740                                       ;
152321 / 101017,,036740 POINT 8,17036740,27                   ;
115551 / 137700,,152321           DPB  AC2,152321             ;
115552 / 134715,,000003          ILDB  AC2,   TBP(AC1)        ;; PICK UP SIZE FIELD
                       SETHB:
115553 / 306440,,000002          CAIN DSER,000002             ;; IF SENDER TO RECEIVER,
115554 / 202717,,037140         MOVEM  AC2,037140(AC3)        ;; THEN LET HIM SET THE BYTE SIZE
115555 / 306440,,000001          CAIN DSER,000001             ;; OTHERWISE, LET HIM SET LINK NUMBER
152100 / 000017,,036740                                       ;
152100 / 001017,,036740 POINT 8,17036740,35                   ;
115556 / 137700,,152100           DPB  AC2,152100             ;
115557 / 263140,,000000          POPJ    P,                   ;
                       ; GET HERE IF THERE IS NO MORE ROOM IN THE LINK TABLE
                       NOLNK:
115560 / 133015,,000003           IBP         TBP(AC1)        ;; SKIP OVER SIZE-LINK FIELD
115561 / 260140,,116707         PUSHJ    P,116707             ;; SEND HIM BACK A CLOSE
115562 / 370000,,037301           SOS      037301             ;; UNDO THE DAMAGE
115563 / 350000,,037343           AOS      NNOLNK             ;
115564 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
115565 / 254000,,115574          JRST      115574             ;; NO, SKIP OVER ERROR MESSAGE
115566 / 260140,,044320         PUSHJ    P,044320             ;
115567 / 260140,,044120         PUSHJ    P,DISERR             ;
115570 / 000000,,154631                                       ;
115571 / 000200,,037343        DECQQQ      NNOLNK             ;
115572 / 000000,,152275                                       ;
115573 / 777777,,777777                                       ;
115574 / 254000,,115251          JRST      115251             ;; INCOMMING MESSAGE HAS BEEN USED FOR THE CLOSE
                       ; RFC PENDING. CLOCK REQUEST COMES BACK HERE
                       PNDG:
115575 / 201645,,000000         MOVEI  AC1,      (DAT)        ;
115576 / 336740,,037301         SKIPN  AC3,037301             ;; FIND INDEX OF PARTIAL CONNECTION
115577 / 254000,,116506          JRST      116506             ;; IF NONE, FORGET IT
115600 / 200715,,000006          MOVE  AC2, SOCK2(AC1)        ;; PICK UP LOCAL SOCKET NUMBER
115601 / 200615,,000005          MOVE  UUO, SOCK1(AC1)        ;
                       PNDGL:
115602 / 316717,,037040          CAMN  AC2,037040(AC3)        ;
115603 / 312617,,037100          CAME  UUO,037100(AC3)        ;
115604 / 254000,,115620          JRST       PNDGI             ;
115605 / 200417,,037200          MOVE  TEM,037200(AC3)        ;; PICK UP STATUS BITS
115606 / 603400,,260000          TLNE  TEM,260000             ;
115607 / 254000,,116506          JRST      116506             ;; IF ANYTHING HAS HAPPENED ON THE LINE, LEAVE
                       PNDGN:
115610 / 373015,,000004         SOSLE      XTTIME(AC1)        ;; OTHERWISE, COUNT DOWN
115611 / 254000,,132555          JRST      DPYTIM             ;
115612 / 261140,,000015          PUSH    P,   AC1             ;
115613 / 260140,,121351         PUSHJ    P,121351             ;; SEND HIM A CLS
153360 / 262140,,000015           POP    P,   AC1             ;
153361 / 254000,,132555          JRST      DPYTIM             ;
115614 / 254000,,153360          JRST      153360             ;
115615 / 260140,,116741         PUSHJ    P,116741             ;; SEND A CLOSE
115616 / 262140,,000015           POP    P,   AC1             ;
115617 / 254000,,116506          JRST      RELLST             ;
                       PNDGI:
115620 / 367740,,115602          SOJG  AC3, PNDGL             ;
115621 / 254000,,116506          JRST      RELLST             ;
                       ; RFC CONTINUED. HERE THERE EXISTS A SOCKET.
                       ISTRFS:
115622 / 200257,,037200          MOVE  DAT,037200(AC3)        ;; PICK UP STATUS BITS
115623 / 603240,,200000          TLNE  DAT,200000             ;; HAS AN RFC BEEN SENT TO IT?
115624 / 254000,,115665          JRST      115665             ;; YES, CONNECTION HAS BEEN MADE
115625 / 336017,,036740         SKIPN      036740(AC3)        ;; IS HOST NUMBER INITIALIZED?
115626 / 254000,,115700          JRST      115700             ;; NO, OURS WILL WORK THEN
115627 / 135240,,114057           LDB  DAT,114057             ;; PICK UP HOST NUMBER
115630 / 430257,,036740           XOR  DAT,036740(AC3)        ;
115631 / 606240,,177400          TRNN  DAT,177400             ;; TWO RFC'S?
115632 / 254000,,115671          JRST      115671             ;; YES, CHECK FOR UNOPENED SIDE OF CONNECTION
                       ISTRF3:
115633 / 201415,,000000         MOVEI  TEM,      (AC1)        ;
115634 / 260140,,121351         PUSHJ    P,IMPGET             ;
115635 / 260140,,116464         PUSHJ    P,116464             ;
115636 / 137440,,114062           DPB DSER,114062             ;; MAKE UP NEW INPUT MESSAGE BLOCK
115637 / 200700,,000014          MOVE  AC2,000014             ;; WITH JUST THIS RFC IN IT
115640 / 260140,,116665         PUSHJ    P,PSOCK1             ;
115641 / 200700,,000007          MOVE  AC2,  JDAT             ;
115642 / 260140,,116671         PUSHJ    P,PSOCK2             ;
115643 / 134710,,000003          ILDB  AC2,   TBP(TEM)        ;; PICK UP SIZE-LINK FIELD
115644 / 137700,,114064           DPB  AC2, SZLKP             ;
115645 / 200710,,000004          MOVE  AC2, TDATA(TEM)        ;; GET LEADER
115646 / 202715,,000004         MOVEM  AC2, TDATA(AC1)        ;
115647 / 402015,,000005         SETZM      000005(AC1)        ;
115650 / 201700,,000010         MOVEI  AC2,    10             ;
115651 / 137700,,114060           DPB  AC2, SIZEP             ;
115652 / 201700,,000012         MOVEI  AC2,    12             ;
115653 / 137700,,114061           DPB  AC2,COUNTP             ;
115654 / 336717,,037240         SKIPN  AC2,037240(AC3)        ;; SEE IF THERE IS A WAITING RFC LIST
115655 / 254000,,115663          JRST      115663             ;; NO, WE ARE ONLY ELEMENT
115656 / 207000,,000016         MOVSS      000016             ;; POINT US TO TAIL OF LIST
115657 / 506656,,000000          HRLM  AC1,      (AC2)        ;
                       ISTRF1:
115660 / 506657,,037240          HRLM  AC1,037240(AC3)        ;
115661 / 553015,,000000         HRRZS            (AC1)        ;
115662 / 254000,,115251          JRST       L0XIT             ;
                       ISTRF2:
115663 / 542657,,037240          HRRM  AC1,037240(AC3)        ;
115664 / 254000,,115660          JRST      ISTRF1             ;
                       CLRFCW:
115665 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST #
115666 / 430717,,036740           XOR  AC2,036740(AC3)        ;
115667 / 602700,,177400          TRNE  AC2,177400             ;; SAME HOST NUMBER?
115670 / 254000,,115633          JRST      115633             ;; NO, QUEUE RFC
                       ISTRMP:
115671 / 607240,,100000          TLNN  DAT,100000             ;; HAS THIS SIDE OF THE CONNECTION BEEN ESTABLISHED?
115672 / 254000,,115700          JRST      115700             ;; NO, PUT US IN THERE
115673 / 312617,,037100          CAME  UUO,037100(AC3)        ;; DOES THE FOREIGN SOCKET MATCH?
115674 / 254000,,115633          JRST      115633             ;; NO, QUEUE US UP
                       TWORFC:
115675 / 350000,,037325           AOS      N2RFCS             ;
115676 / 133015,,000003           IBP         TBP(AC1)        ;
115677 / 254000,,115251          JRST       L0XIT             ;
                       ; RFC CONTINUED. HERE WE ARE GOING TO ESTABLISH A CONNECTION AND RETURN THE RFC
                       CHKFSK:
115700 / 331017,,037100         SKIPL      037100(AC3)        ;; HAS SOCKET BEEN INITIALIZED
115701 / 316617,,037100          CAMN  UUO,037100(AC3)        ;; YES, DOES IT MATCH
115702 / 254000,,115704          JRST      115704             ;; YES, COMPLETE CONNECTION
115703 / 254000,,115633          JRST      115633             ;; NO, QUEUE US UP
                       CLRFC1:
115704 / 202617,,037100         MOVEM  UUO,037100(AC3)        ;
115705 / 260140,,115550         PUSHJ    P,115550             ;; SET HOST NUMBER AND LINK (OR BYTE SIZE)
115706 / 205700,,100000         MOVSI  AC2,  RFCR             ;
115707 / 260140,,121211         PUSHJ    P,121211             ;; CHANGE STATUS BITS
115710 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;
115711 / 254000,,115533          JRST       MAKPN             ;
115712 / 205700,,200000         MOVSI  AC2,  RFCS             ;
115713 / 612717,,037200          TDNE  AC2,037200(AC3)        ;; HAVE WE ALREADY SENT HIM AN RFC?
115714 / 254000,,115727          JRST      115727             ;; YES, SKIP OVER THIS PART
115715 / 260140,,121351         PUSHJ    P,121351             ;; GET US SOME F.S.
115716 / 260140,,116464         PUSHJ    P,116464             ;; WAIT FOR IT IF NECESSARY
115717 / 260140,,116314         PUSHJ    P,CLRBLK             ;
115720 / 306440,,000001          CAIN DSER,000001             ;; SEND HIM THE OPPOSITE FLAVOR RFC
115721 / 201400,,000002         MOVEI  TEM,   STR             ;
115722 / 306440,,000002          CAIN DSER,   STR             ;
115723 / 201400,,000001         MOVEI  TEM,   RTS             ;
115724 / 137400,,114062           DPB  TEM, OPCDP             ;
115725 / 260140,,120743         PUSHJ    P,120743             ;; SET THE REST OF THE MESSAGE, SOCKETS, BYTE SIZE OR LINK, ETC.
115726 / 260140,,116565         PUSHJ    P,CLKOUT             ;
                       CLRFC2:
115727 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
115730 / 623000,,004000          TLZE        RFCW             ;
115731 / 260140,,121174         PUSHJ    P,  QRUN             ;
115732 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
115733 / 254000,,115251          JRST       L0XIT             ;
                       ; CLS COMMAND
                       ICLS:
115734 / 260140,,116652         PUSHJ    P,116652             ;; PICK UP FOREIGN SOCKET
115735 / 200600,,000016          MOVE  UUO,   AC2             ;
115736 / 260140,,116652         PUSHJ    P,  RD4B             ;
115737 / 200340,,000016          MOVE JDAT,   AC2             ;
115740 / 336740,,037301         SKIPN  AC3, FFLNK             ;
115741 / 254000,,115745          JRST      115745             ;; NOBODY HOME.
                       ICLSL:
115742 / 316357,,037040          CAMN JDAT,037040(AC3)        ;
115743 / 254000,,115747          JRST      115747             ;; RECEIVE SIDE SOCKET FOUND
115744 / 367740,,115742          SOJG  AC3, ICLSL             ;
                       RTCL:
115745 / 350000,,037344           AOS      037344             ;; BUMP NUMBER OF STRANGE CLSS
115746 / 254000,,115251          JRST       L0XIT             ;
                       RCLSRC:
115747 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER
115750 / 430717,,036740           XOR  AC2,036740(AC3)        ;
115751 / 316617,,037100          CAMN  UUO,037100(AC3)        ;; FOREIGN SOCKET MUST MATCH TOO
115752 / 602700,,177400          TRNE  AC2,177400             ;
115753 / 254000,,115755          JRST      115755             ;; MISMATCH SOMEWHERE, CHECK RFQ LIST
115754 / 254000,,115777          JRST      115777             ;; SAME HOST, 
                       ; HERE, WE HAVE RECEIVED A CLS FROM A HOST THAT IS NOT ACTIVE.
                       ; SEE IF HE IS IN THE RFC QUEUE FOR THIS SOCKET. IF NOT, IGNORE IT.
                       ; SHOULD CHECK FOR MATCHING FOREIGN SOCKET
                       CLSRFQ:
115755 / 135240,,114055           LDB  DAT,114055             ;; PICK UP HOST NUMBER
115756 / 260140,,116707         PUSHJ    P,116707             ;; SEND RETURN CLOSE
115757 / 400100,,000000          SETZ TAC1,                   ;; CLEAR LAST ITEM POINTER
115760 / 336657,,037240         SKIPN  AC1,037240(AC3)        ;
115761 / 254000,,115772          JRST      QLEAVE             ;
                       QL1:
115762 / 135440,,114055           LDB DSER,114055             ;; PICK UP HOST NUMBER
115763 / 302251,,000000          CAIE  DAT,      (DSER)       ;; SAME HOST?
115764 / 254000,,115773          JRST      115773             ;; NO, GET ANOTHER ONE
115765 / 260140,,116675         PUSHJ    P,GSOCK1             ;
115766 / 312700,,000014          CAME  AC2,000014             ;; IS THIS THE SAME ONE?
115767 / 254000,,115773          JRST       QLOOP             ;
115770 / 260140,,121637         PUSHJ    P,121637             ;; YES, UNLINK QUEUED RFC FROM LIST
115771 / 260140,,116506         PUSHJ    P,116506             ;; FLUSH IT
                       QLEAVE:
115772 / 254000,,115251          JRST       L0XIT             ;
                       QLOOP:
115773 / 200100,,000015          MOVE TAC1,   AC1             ;
115774 / 554655,,000000          HLRZ  AC1,      (AC1)        ;
115775 / 326640,,115762         JUMPN  AC1,   QL1             ;
115776 / 254000,,115772          JRST      QLEAVE             ;
                       ; CLS CONTINUED. HERE WE GOT A RECEIVE-SIDE CLS AND THERE IS A LINK TABLE ENTRY.
                       SRCLSR:
115777 / 205700,,020000         MOVSI  AC2,020000             ;; HERE WE ARE THE HOST IN QUESTION
116000 / 260140,,121211         PUSHJ    P,121211             ;; CHANGE THE CONNECTION STATUS
116001 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;; ANYBODY HOME?
116002 / 254000,,116007          JRST      116007             ;; NO
116003 / 200006,,000002          MOVE      DEVIOS(DDB)        ;; YES, DOES HE THINK HE WILL GET SOME MORE INPUT?
116004 / 623000,,376000          TLZE        ANYW             ;
116005 / 260140,,121174         PUSHJ    P,121174             ;; YES, BRING HIM OUT OF WAIT
116006 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;; SO HE WILL GET EOF
                       CHCLSS:
116007 / 200717,,037200          MOVE  AC2,037200(AC3)        ;
116010 / 603700,,040000          TLNE  AC2,040000             ;; RECEIVE-SIDE CLS SENT?
116011 / 254000,,116015          JRST      116015             ;; YES, SEE IF HE IS WAITING FOR US
116012 / 260140,,121351         PUSHJ    P,121351             ;; GET SOME STORAGE
116013 / 260140,,116464         PUSHJ    P,116464             ;
116014 / 260140,,116741         PUSHJ    P,116741             ;; RETURN A CLS TO HIM
                       SRCLWK:
116015 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;
                       CALLZL:
116016 / 260140,,121551         PUSHJ    P,121551             ;; NO, CLEAR THE LINK IF WE CAN
116017 / 254000,,115251          JRST       L0XIT             ;
                       ; ECHO COMMAND
                       IECO:
116020 / 261140,,000015          PUSH    P,   AC1             ;
116021 / 260140,,121351         PUSHJ    P,IMPGET             ;
116022 / 260140,,116464         PUSHJ    P,116464             ;
116023 / 200703,,000000          MOVE  AC2,      (P)          ;; PICK UP ADDRESS OF INCOMING MESSAGE
116024 / 200756,,000004          MOVE  AC3, TDATA(AC2)        ;; TURN MESSAGE RIGHT AROUND
116025 / 202755,,000004         MOVEM  AC3, TDATA(AC1)        ;
116026 / 402015,,000005         SETZM      000005(AC1)        ;
116027 / 201740,,000010         MOVEI  AC3,    10             ;
116030 / 137740,,114060           DPB  AC3,114060             ;; PUT IN BYTE SIZE
116031 / 201740,,000002         MOVEI  AC3,     2             ;
116032 / 137740,,114061           DPB  AC3,114061             ;; AND MESSAGE LENGTH
116033 / 134756,,000003          ILDB  AC3,   TBP(AC2)        ;; PICK UP ECHO BYTE
116034 / 137740,,114071           DPB  AC3,114071             ;; AND GIVE IT BACK TO HIM
116035 / 201740,,000012         MOVEI  AC3,000012             ;; PUT ECHO REPLY OPCODE IN WITH DATA BYTE INPUTTED
116036 / 137740,,114062           DPB  AC3, OPCDP             ;
116037 / 260140,,116565         PUSHJ    P,CLKOUT             ;
116040 / 262140,,000015           POP    P,   AC1             ;
116041 / 254000,,115251          JRST       L0XIT             ;
                       ; ECHO REPLY
                       IERP:
116042 / 254000,,115255          JRST      115255             ;; WE DON'T SEND ECOS
                       ; ERROR - INCOMMING!
                       IERR:
116043 / 350000,,037323           AOS       RERRM             ;
116044 / 261140,,000015          PUSH    P,   AC1             ;
116045 / 260140,,044320         PUSHJ    P,044320             ;
116046 / 261155,,000004          PUSH    P, TDATA(AC1)        ;
116047 / 260140,,044120         PUSHJ    P,DISERR             ;
116050 / 000000,,154166                                       ;
116051 / 000200,,037323        DECQQQ       RERRM             ;
116052 / 000000,,152275                                       ;
116053 / 000103,,777777        OCTQQQ      777777(P)          ;
116054 / 000000,,152275                                       ;
116055 / 777777,,777777                                       ;
151763 / 000001,,000001           XWD 1,1                     ;
116056 / 274140,,151763           SUB    P,151763             ;
116057 / 262140,,000015           POP    P,   AC1             ;
116060 / 201100,,000013         MOVEI TAC1,    13             ;
116061 / 261140,,000002          PUSH    P,  TAC1             ;
116062 / 261140,,000015          PUSH    P,   AC1             ;
                       IEPLOP:
116063 / 134055,,000003          ILDB  TAC,   TBP(AC1)        ;
116064 / 260140,,044170         PUSHJ    P,DISLOC             ;
116065 / 260140,,044066         PUSHJ    P,DISMES             ;
116067 / 200643,,000000          MOVE  AC1,      (P)          ;
116070 / 373003,,777777         SOSLE      777777(P)          ;
116071 / 254000,,116063          JRST      IEPLOP             ;
116072 / 260140,,044066         PUSHJ    P,DISMES             ;
116074 / 262140,,000015           POP    P,   AC1             ;
151763 / 000001,,000001           XWD 1,1                     ;
116075 / 274140,,151763           SUB    P,151763             ;
116076 / 254000,,115251          JRST       L0XIT             ;
                       ; RESET REPLY
                       IRRP:
116077 / 254000,,115251          JRST       L0XIT             ;
                       ; RESET - PURGE OUR TABLES
                       IRST:
116100 / 350000,,037340           AOS      NRSETS             ;
116101 / 260140,,114766         PUSHJ    P,114766             ;; FLUSH ALL PENDING MESSAGES TO THIS HOST
116102 / 261140,,000015          PUSH    P,   AC1             ;
116103 / 260140,,121351         PUSHJ    P,121351             ;; GET FREE STORAGE FOR A RESET REPLY
116104 / 260140,,116464         PUSHJ    P,116464             ;
116105 / 260140,,116314         PUSHJ    P,CLRBLK             ;
116106 / 200703,,000000          MOVE  AC2,      (P)          ;
116107 / 200756,,000004          MOVE  AC3, TDATA(AC2)        ;; STEAL THE LEADER FROM THE INCOMMING MESSAGE
116110 / 202755,,000004         MOVEM  AC3, TDATA(AC1)        ;
116111 / 402015,,000005         SETZM      000005(AC1)        ;
116112 / 201740,,000010         MOVEI  AC3,    10             ;
116113 / 137740,,114060           DPB  AC3, SIZEP             ;
116114 / 201740,,000001         MOVEI  AC3,     1             ;
116115 / 137740,,114061           DPB  AC3,COUNTP             ;
116116 / 201740,,000003         MOVEI  AC3,     3             ;
116117 / 202755,,000001         MOVEM  AC3,   TWC(AC1)        ;; WE WILL SEND OUT THE LEADER AND ONE EXTRA WORD
116120 / 201740,,000015         MOVEI  AC3,000015             ;; SET RESET REPLY OPCODE
116121 / 137740,,114062           DPB  AC3, OPCDP             ;
116122 / 260140,,116565         PUSHJ    P,CLKOUT             ;
116123 / 262140,,000015           POP    P,   AC1             ;
116124 / 135700,,114057           LDB  AC2,114057             ;; PICK UP HOST-LINK NUMBER (LINK=0)
116125 / 336740,,037301         SKIPN  AC3,037301             ;; SCAN LINK TABLE FOR OPEN CONNECTIONS TO HIM
116126 / 254000,,115251          JRST       L0XIT             ;
                       IRST2:
116127 / 201056,,000000         MOVEI  TAC,      (AC2)        ;
116130 / 430057,,036740           XOR  TAC,036740(AC3)        ;
116131 / 606040,,177400          TRNN  TAC,177400             ;
116132 / 254000,,116137          JRST       IRST1             ;
                       IRST3:
116133 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;; DOES THIS ENTRY HAVE ANY QUEUED RFCS?
116134 / 254000,,116162          JRST      116162             ;; YES, SEE IF HE HAS SOME ENTRIES QUEUED
                       IRST5:
116135 / 367740,,116127          SOJG  AC3, IRST2             ;
116136 / 254000,,115251          JRST       L0XIT             ;
                       IRST1:
116137 / 332317,,037000         SKIPE  DDB,037000(AC3)        ;; DOES HE HAVE A DDB?
116140 / 254000,,116145          JRST      116145             ;; YES, SET ERROR BITS
116141 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;
116142 / 260140,,121622         PUSHJ    P,121622             ;; APPEND ENTIRE RFC QUEUE ONTO ILIST FOR RE-INTERPRETATION
116143 / 260140,,116327         PUSHJ    P,116327             ;; NO, DELETE THE LINK ENTIRELY
116144 / 254000,,116133          JRST       IRST3             ;
                       IRST4:
116145 / 200006,,000002          MOVE      DEVIOS(DDB)        ;; CLEAR ANY WAIT STATE
116146 / 623000,,376000          TLZE        ANYW             ;
116147 / 260140,,121174         PUSHJ    P,  QRUN             ;
116150 / 435000,,200400           ORI      200400             ;
116151 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
116152 / 205700,,060000         MOVSI  AC2,060000             ;; PRETEND CONNECTION IS CLOSED
116153 / 260140,,121211         PUSHJ    P,121211             ;; GIVE HIM THE INTERRUPT
116154 / 200717,,037040          MOVE  AC2,037040(AC3)        ;; PICK UP LOCAL SOCKET NUMBER
116155 / 606700,,000001          TRNN  AC2,000001             ;; IS OUR SIDE THE SEND SIDE?
116156 / 254000,,116133          JRST      116133             ;; NO
116157 / 402006,,000015         SETZM         BAL(DDB)        ;; YES, NO MORE MESSAGES, PLEASE
116160 / 402006,,000014         SETZM         MAL(DDB)        ;
116161 / 254000,,116133          JRST       IRST3             ;
                       ; RESET - SCAN DOWN THE QUEUED RFC LIST FOR ENTRIES BY THIS GUY
                       SCNIRF:
116162 / 400100,,000000          SETZ TAC1,                   ;; SET PREDECESSOR TO ZERO
                       SCNNXR:
116163 / 260140,,121443         PUSHJ    P,121443             ;; BLESS THIS BLOCK
153220 / 402017,,037240         SETZM      037240(AC3)        ;
153221 / 254000,,116135          JRST       IRST5             ;
116164 / 254000,,153220          JRST      153220             ;
116165 / 135040,,114057           LDB  TAC,ELINKP             ;
116166 / 302056,,000000          CAIE  TAC,      (AC2)        ;
116167 / 254000,,116200          JRST      SCNGNX             ;
116170 / 261140,,000016          PUSH    P,   AC2             ;
116171 / 261155,,000000          PUSH    P,      (AC1)        ;; SAVE POINTER TO SUCCESSOR
116172 / 260140,,121637         PUSHJ    P,121637             ;; UNLINK RFC FROM LIST
116173 / 260140,,116506         PUSHJ    P,116506             ;; RELEASE THE STORAGE
116174 / 262140,,000015           POP    P,000015             ;; GET BACK SUCCESSOR
116175 / 557000,,000015         HLRZS      000015             ;; GET POINTER INTO RIGHT HALF
116176 / 262140,,000016           POP    P,000016             ;; GET BACK SOURCE NUMBER
116177 / 254000,,116202          JRST       SCNCZ             ;
                       SCNGNX:
116200 / 201115,,000000         MOVEI TAC1,      (AC1)        ;; SET PREDECESSOR TO CURRENT
116201 / 554655,,000000          HLRZ  AC1,      (AC1)        ;; MOVE DOWN THE LIST
                       SCNCZ:
116202 / 326640,,116163         JUMPN  AC1,SCNNXR             ;
116203 / 254000,,116135          JRST       IRST5             ;
                       ; ERROR RECOVERY SYSTEM. POOT OUT MESSAGES TO EVERYONE WHO THINKS
                       ; HIS LINK IS BLOCKED. WE WILL THEN GET BACK EITHER A BLOCKED LINK
                       ; OR A RFNM, BUT  IN ANY CASE THE LINK WILL BE CLEARED.
                       ERRREC:
116204 / 331000,,036721         SKIPL      036721             ;
116205 / 254000,,116271          JRST      ERRCNT             ;
116206 / 336740,,037301         SKIPN  AC3, FFLNK             ;
116207 / 254000,,116232          JRST       ERRL0             ;
                       ERRNXD:
116210 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;
116211 / 254000,,116231          JRST      ERRLIN             ;
116212 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
116213 / 606000,,000100          TRNN        BLOK             ;
116214 / 254000,,116231          JRST      ERRLIN             ;
116215 / 260140,,121351         PUSHJ    P,IMPGET             ;
116216 / 260140,,116464         PUSHJ    P,116464             ;
116217 / 402015,,000004         SETZM       TDATA(AC1)        ;
116220 / 402015,,000005         SETZM      000005(AC1)        ;
116221 / 336717,,037140         SKIPN  AC2,037140(AC3)        ;
116222 / 201700,,000010         MOVEI  AC2,    10             ;
116223 / 137700,,114060           DPB  AC2, SIZEP             ;
116224 / 200717,,036740          MOVE  AC2,036740(AC3)        ;
116225 / 137700,,114057           DPB  AC2,ELINKP             ;
116226 / 201700,,000002         MOVEI  AC2,     2             ;
116227 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;
116230 / 260140,,116565         PUSHJ    P,116565             ;; OUTPUT A ZERO LENGTH MESSAGE
                       ERRLIN:
116231 / 367740,,116210          SOJG  AC3,ERRNXD             ;
                       ; ERROR RECOVERY FOR LINK ZERO
                       ERRL0:
116232 / 201740,,000007         MOVEI  AC3,000007             ;;INDEX OF LAST WORD IN L0BLOK TABLE
                       ERRL0L:
116233 / 336417,,036730         SKIPN  TEM,L0BLOK(AC3)        ;
116234 / 254000,,116265          JRST      ERRL0I             ;
116235 / 201240,,000001         MOVEI  DAT,     1             ;
116236 / 400040,,000000          SETZ  TAC,                   ;
                       ERRL0T:
116237 / 616240,,000010          TDNN  DAT,   TEM             ;
116240 / 254000,,116261          JRST      ERRL0R             ;
116241 / 260140,,121351         PUSHJ    P,IMPGET             ;
116242 / 260140,,116464         PUSHJ    P,116464             ;
116243 / 402015,,000004         SETZM       TDATA(AC1)        ;
116244 / 402015,,000005         SETZM      000005(AC1)        ;
116245 / 402015,,000006         SETZM      000006(AC1)        ;
116246 / 201100,,000003         MOVEI TAC1,     3             ;
116247 / 202115,,000001         MOVEM TAC1,   TWC(AC1)        ;
116250 / 201100,,000010         MOVEI TAC1,    10             ;
116251 / 137100,,114060           DPB TAC1, SIZEP             ;
116252 / 201100,,000001         MOVEI TAC1,     1             ;
116253 / 137100,,114061           DPB TAC1,COUNTP             ;
116254 / 201117,,000000         MOVEI TAC1,      (AC3)        ;
116255 / 242100,,000005           LSH TAC1,     5             ;
116256 / 435101,,000000           ORI TAC1,      (TAC)        ;
116257 / 137100,,114055           DPB TAC1,  SRCP             ;
116260 / 260140,,122377         PUSHJ    P,122377             ;; BYPASS LINK BLOKAGE
                       ERRL0R:
116261 / 271040,,000001          ADDI  TAC,     1             ;
116262 / 242240,,000001           LSH  DAT,     1             ;
116263 / 305040,,000040         CAIGE  TAC,    40             ;
116264 / 254000,,116237          JRST      ERRL0T             ;
                       ERRL0I:
116265 / 365740,,116233         SOJGE  AC3,ERRL0L             ;
116266 / 201640,,034100         MOVEI  AC1,034100             ;
116267 / 202640,,036721         MOVEM  AC1,036721             ;
116270 / 263140,,000000          POPJ    P,                   ;
                       ERRCNT:
116271 / 375000,,036721         SOSGE      036721             ;
116272 / 402000,,036721         SETZM      036721             ;
116273 / 263140,,000000          POPJ    P,                   ;
                       ; UTILITY ROUTINES FOR THE PRECEEDING ROUTINES - ERROR ROUTINE
                       ; MAKES UP ERROR MESSAGE TO HOST WHOSE INCOMING MESSAGE
                       ; ADDRESS HAS BEEN PUSHED ON THE STACK. SKIPS ON SUCCESS, NON-SKIP
                       ; MEANS NO FREE STORAGE AVAILABLE.
                       MAKERB:
116274 / 260140,,121351         PUSHJ    P,121351             ;; GET A FREE STORAGE BLOCK
116275 / 263140,,000000          POPJ    P,                   ;; NONE AVAILABLE
116276 / 260140,,116314         PUSHJ    P,116314             ;; ZERO THE FREE STORAGE BLOCK
116277 / 200703,,777777          MOVE  AC2,777777(P)          ;; PICK UP ADDRESS OF INPUT MESSAGE
152411 / 000016,,000004                                       ;
152411 / 142016,,000004 POINT 16,16000004,23                  ;
116300 / 135740,,152411           LDB  AC3,152411             ;
116301 / 421740,,000377        ANDCMI  AC3,000377             ;; ZERO OUT LINK NUMBER
116302 / 137740,,114057           DPB  AC3,114057             ;; SET HOST TO THE SAME, LINK TO CONTROL LINK
116303 / 201740,,000010         MOVEI  AC3,    10             ;
116304 / 137740,,114060           DPB  AC3,114060             ;; BYTE SIZE FOR CONTROL MESSAGES IS 8
116305 / 201740,,000013         MOVEI  AC3,000013             ;; PUT IN ERROR OPCODE
116306 / 137740,,114062           DPB  AC3, OPCDP             ;
116307 / 201740,,000014         MOVEI  AC3,000014             ;; ALL ERROR CODES ARE 12 BYTES LONG
116310 / 137740,,114061           DPB  AC3,COUNTP             ;
116311 / 201740,,000007         MOVEI  AC3,000007             ;; PICK UP A WORDCOUNT
116312 / 202755,,000001         MOVEM  AC3,   TWC(AC1)        ;
116313 / 254000,,037401          JRST      CPOPJ1             ;
                       ; ROUTINE TO CLEAR A FREE STORAGE BLOCK.
                       ; ENTER WITH BLOCK ADDRESS IN AC1
                       ; ONLY CLEARS DATA PORTION
                       CLRBLK:
116314 / 261140,,000016          PUSH    P,   AC2             ;
116315 / 261140,,000017          PUSH    P,   AC3             ;
116316 / 402015,,000004         SETZM       TDATA(AC1)        ;
116317 / 505715,,000004          HRLI  AC2, TDATA(AC1)        ;; MAKE UP BLT POINTER
116320 / 541715,,000005          HRRI  AC2,000005(AC1)        ;
116321 / 541755,,000003          HRRI  AC3,000003(AC1)        ;
116322 / 270755,,000002           ADD  AC3,  TLEN(AC1)        ;
116323 / 251717,,000000           BLT  AC2,      (AC3)        ;
116324 / 262140,,000017           POP    P,   AC3             ;
116325 / 262140,,000016           POP    P,   AC2             ;
116326 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO DELETE A LINK IN THE LINK TABLE.
                       ; ENTER WITH THE LINK TABLE INDEX (PLUS ONE) IN AC3
                       KILLNK:
116327 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;; ANY QUEUED RFCS HERE?
116330 / 260140,,121622         PUSHJ    P,121622             ;; YES, RECYCLE THEM
116331 / 201717,,777777         MOVEI  AC2,777777(AC3)        ;; CORRECT INDEX
116332 / 261140,,000005          PUSH    P,   DAT             ;
116333 / 372240,,037301          SOSE  DAT,037301             ;; DECREMENT FIRST FREE LINK NUMBER
116334 / 306256,,000000          CAIN  DAT,      (AC2)        ;; IS THIS LINK THE TOP ONE?
116335 / 254000,,116360          JRST      116360             ;; YES, RESTORE ACS AND LEAVE
116336 / 261140,,000016          PUSH    P,   AC2             ;
116337 / 261140,,000017          PUSH    P,   AC3             ;
116340 / 200745,,036741          MOVE  AC3,LNKTAB(DAT)        ;
116341 / 202756,,036741         MOVEM  AC3,LNKTAB(AC2)        ;
116342 / 200745,,037001          MOVE  AC3,IMPDDB(DAT)        ;
116343 / 202756,,037001         MOVEM  AC3,IMPDDB(AC2)        ;
116344 / 200745,,037041          MOVE  AC3, IMPLS(DAT)        ;
116345 / 202756,,037041         MOVEM  AC3, IMPLS(AC2)        ;
116346 / 200745,,037101          MOVE  AC3, IMPFS(DAT)        ;
116347 / 202756,,037101         MOVEM  AC3, IMPFS(AC2)        ;
116350 / 200745,,037241          MOVE  AC3,IMPRFQ(DAT)        ;
116351 / 202756,,037241         MOVEM  AC3,IMPRFQ(AC2)        ;
116352 / 200745,,037141          MOVE  AC3, IMPBS(DAT)        ;
116353 / 202756,,037141         MOVEM  AC3, IMPBS(AC2)        ;
116354 / 200745,,037201          MOVE  AC3,IMPSTB(DAT)        ;
116355 / 202756,,037201         MOVEM  AC3,IMPSTB(AC2)        ;
116356 / 262140,,000017           POP    P,   AC3             ;
116357 / 262140,,000016           POP    P,   AC2             ;
                       KILLN1:
116360 / 262140,,000005           POP    P,   DAT             ;
116361 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO POLL ALL THE OTHER SITES FOR SIGNS OF LIFE
                       POLL:
116362 / 201640,,002640         MOVEI  AC1,POLTIM             ;
116363 / 202640,,036717         MOVEM  AC1,POLCNT             ;
116364 / 332000,,036313         SKIPE      036313             ;
116365 / 263140,,000000          POPJ    P,                   ;
116366 / 377000,,036720          SOSG      036720             ;; TIME TO CHECK HALF-DEAD SOCKETS YET?
116367 / 260140,,116372         PUSHJ    P,116372             ;; YES, DO IT NOW
116370 / 332000,,036547         SKIPE      036547             ;; ANY ERROR BITS?
116371 / 254000,,116416          JRST       IERBD             ;
                       ; ROUTINE TO PERIODICALLY CHECK AND MAKE SURE ALL IS OK
                       ; IT DELETES HALF-CLOSED SOCKETS PERIODICALLY
                       HCLSS:
116372 / 201640,,000006         MOVEI  AC1,HCLSTM             ;
116373 / 202640,,036720         MOVEM  AC1,HCLSCT             ;
                       HCLSR:
116374 / 336740,,037301         SKIPN  AC3, FFLNK             ;
116375 / 263140,,000000          POPJ    P,                   ;
                       HCLSL:
116376 / 332017,,037000         SKIPE      037000(AC3)        ;
                       HCLSI:
116377 / 367740,,116376          SOJG  AC3, HCLSL             ;
116400 / 322740,,037403         JUMPE  AC3, CPOPJ             ;
116401 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
116402 / 603640,,040000          TLNE  AC1,  CLSS             ;
116403 / 603640,,020000          TLNE  AC1,  CLSR             ;
116404 / 254000,,116377          JRST       HCLSI             ;
116405 / 603640,,010000          TLNE  AC1, LONCE             ;
116406 / 254000,,116412          JRST       HCLSZ             ;
116407 / 205640,,010000         MOVSI  AC1, LONCE             ;
116410 / 436657,,037200           ORM  AC1,037200(AC3)        ;
116411 / 254000,,116377          JRST       HCLSI             ;
                       HCLSZ:
116412 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;; GIVE BACK ANY QUEUED RFCS WHAT MAY BE
116413 / 260140,,121622         PUSHJ    P,APNLST             ;
116414 / 260140,,116327         PUSHJ    P,KILLNK             ;
116415 / 254000,,116374          JRST      116374             ;; GO BACK AND TRY AGAIN
                       ; TYPE OUT ERROR MESSAGE ON IMP ERROR BIT DETECTED
                       ; WE OUGHT TO SOMEHOW CLEAR THE INTERFACE TOO
                       IERBD:
116416 / 332000,,036313         SKIPE      036313             ;
116417 / 263140,,000000          POPJ    P,                   ;
116420 / 402000,,036547         SETZM      036547             ;; START COUNTING AGAIN
116421 / 336000,,036721         SKIPN      036721             ;; INITIATE ERROR RECOVERY SEQUENCE
116422 / 476000,,036721         SETOM      036721             ;
116423 / 350000,,037347           AOS      IERBIT             ;
116424 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
116425 / 254000,,116434          JRST      116434             ;; NO, SKIP OVER ERROR MESSAGE
116426 / 260140,,044320         PUSHJ    P,044320             ;
116427 / 260140,,044120         PUSHJ    P,DISERR             ;
116430 / 000000,,154372                                       ;
116431 / 000200,,037347        DECQQQ      IERBIT             ;
116432 / 000000,,152275                                       ;
116433 / 777777,,777777                                       ;
116434 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SEND THE IMP SOME NOPS
                       SNDNOP:
116435 / 201740,,000004         MOVEI  AC3,     4             ;
116436 / 202740,,036724         MOVEM  AC3,NOPCNT             ;
116437 / 476000,,036314         SETOM      036314             ;
116440 / 201740,,016040         MOVEI  AC3,MAXCNT             ;
116441 / 202740,,036322         MOVEM  AC3,IMPOCT             ;
116442 / 700600,,001010          CONO   PI,IMPOFF             ;
116443 / 740200,,000214          CONO  IMP,000214             ;
116444 / 740140,,152146         DATAO  IMP,152146             ;;NOP
116445 / 700600,,002010          CONO   PI, IMPON             ;
116446 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO DUMP AN INCOMMING COMMAND INTO THE DATA PORTION OF AN ERROR MESSAGE
                       ; ENTER WITH ERROR MESSAGE IN AC1
                       ; OFFENDING INCOMMING MESSAGE AT -1(P)
                       EFILL:
116447 / 201240,,000012         MOVEI  DAT,    12             ;
116450 / 551715,,000006         HRRZI  AC2,000006(AC1)        ;
116451 / 241000,,000000 POINT 8,00000000,15                   ;
116451 / 505700,,241000          HRLI  AC2,      (<POINT 8,0,15>)     ;
                       EFILL1:
116452 / 550743,,777777          HRRZ  AC3,777777(P)          ;
151407 / 000000,,000006                                       ;
151407 / 441000,,000006 POINT 8,00000006,                     ;
116453 / 270740,,151407           ADD  AC3,151407             ;
                       EFILL2:
116454 / 134440,,000017          ILDB DSER,   AC3             ;
116455 / 136440,,000016          IDPB DSER,   AC2             ;
116456 / 367240,,116454          SOJG  DAT,EFILL2             ;
116457 / 263140,,000000          POPJ    P,                   ;
                       ; SAME THING EXCEPT FOR STANFORD IDIOSYNCRATIC ERROR MESSAGES.
                       ; DUMPS ONE LESS BYTE ONE BYTE FURTHER DOWN
                       OFILL:
116460 / 201240,,000011         MOVEI  DAT,    11             ;
116461 / 551715,,000006         HRRZI  AC2,000006(AC1)        ;
116462 / 141000,,000000 POINT 8,00000000,23                   ;
116462 / 505700,,141000          HRLI  AC2,      (<POINT 8,0,23>)     ;
116463 / 254000,,116452          JRST      EFILL1             ;
                       ; ROUTINE TO WAIT AT CLOCK LEVEL FOR A STANDARD FREE STORAGE BLOCK
                       CLKWAI:
116464 / 476000,,036550         SETOM      036550             ;; NOTE THAT WE ARE WAITING
116465 / 260140,,000316         PUSHJ    P,PUSHIT             ;
116466 / 202140,,036551         MOVEM    P,IMPPDP             ;
152216 / 024467,,036553           XWD CLKPDL,IMPSAV           ;
116467 / 200640,,152216          MOVE  AC1,152216             ;
116470 / 251640,,036712           BLT  AC1,036712             ;; SAVE THE STACK
116471 / 200140,,036552          MOVE    P, IMPFP             ;
116472 / 263140,,000000          POPJ    P,                   ;; RETURN TO CLKSER
                       CLKWT:
116473 / 260140,,121351         PUSHJ    P,IMPGET             ;
116474 / 263140,,000000          POPJ    P,                   ;
152240 / 036553,,024467           XWD IMPSAV,CLKPDL           ;
116475 / 200740,,152240          MOVE  AC3,152240             ;
116476 / 251740,,024626           BLT  AC3,024626             ;
116477 / 200140,,036551          MOVE    P,IMPPDP             ;
116500 / 260140,,121430         PUSHJ    P,121430             ;;GIVE BLOCK BACK (PROBABLY TO SPARE LIST)
116501 / 260140,,000341         PUSHJ    P, POPIT             ;
116502 / 402000,,036550         SETZM      IMPCLW             ;
116503 / 370003,,000000           SOS            (P)          ;
116504 / 370003,,000000           SOS            (P)          ;; BACK UP TO TRY OFFENDING ROUTINE OVER AGAIN
116505 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO RELEASE THE STORAGE IN A LIST
                       ; CALL WITH LIST IN AC1
                       RELLST:
116506 / 553000,,000015         HRRZS         AC1             ;
116507 / 260140,,121443         PUSHJ    P,121443             ;; IS THIS A LEGAL BLOCK?
116510 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
116511 / 261155,,000000          PUSH    P,      (AC1)        ;; SAVE POINTER TO NEXT BLOCK
116512 / 260140,,121430         PUSHJ    P,121430             ;; RELEASE STORAGE
116513 / 262140,,000015           POP    P,000015             ;; GET PTR TO NEXT BLOCK
116514 / 602640,,777777          TRNE  AC1,777777             ;
116515 / 254000,,116506          JRST      RELLST             ;
116516 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO RELEASE LIST OF LISTS
                       ; ENTER WITH LIST LIST IN AC1
                       RELBLS:
116517 / 260140,,121443         PUSHJ    P, LEGAL             ;
116520 / 263140,,000000          POPJ    P,                   ;
116521 / 261155,,000000          PUSH    P,      (AC1)        ;
116522 / 260140,,116506         PUSHJ    P,RELLST             ;
116523 / 262140,,000015           POP    P,   AC1             ;
116524 / 557000,,000015         HLRZS         AC1             ;
116525 / 326640,,116517         JUMPN  AC1,RELBLS             ;
116526 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO PLANT AN INTERRUPT REQUEST
                       ; MUST HAVE DDB SET UP
                       ; ENTER WITH INTERRUPT BIT IN AC2
                       INTCOM:
116527 / 135200,,037575           LDB    J, PJOBN             ;
116530 / 616704,,033665          TDNN  AC2,JBTIEN(J)          ;
116531 / 263140,,000000          POPJ    P,                   ;
116532 / 436704,,033765          IORM  AC2,JBTIRQ(J)          ;
116533 / 476013,,023475         SETOM      INTREQ(PID)        ;
116534 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO UNLINK THE TOP MESSAGE ON THE INPUT LIST
                       ; SKIPS IF THERE ACTUALLY WAS ONE AND PUTS ITS ADDRESS IN AC1
                       UNLMES:
116535 / 700600,,001010          CONO   PI,IMPOFF             ;
116536 / 336640,,036427         SKIPN  AC1,036427             ;; PICK UP INPUT LIST
116537 / 254000,,116547          JRST      UNLME1             ;
116540 / 554715,,000000          HLRZ  AC2,      (AC1)        ;; GET POINTER TO NEXT LIST
116541 / 542700,,036427          HRRM  AC2, ILIST             ;
116542 / 336000,,000016         SKIPN         AC2             ;
116543 / 402000,,036427         SETZM       ILIST             ;
116544 / 700600,,002010          CONO   PI, IMPON             ;
116545 / 553015,,000000         HRRZS            (AC1)        ;; CLEAR OUT POINTER TO NEXT BLOCK
116546 / 254000,,037401          JRST      CPOPJ1             ;
                       UNLME1:
116547 / 700600,,002010          CONO   PI, IMPON             ;
116550 / 263140,,000000          POPJ    P,                   ;
                       ; SAME THING BUT IS ERROR IF NO LIST THERE
                       UNLNS:
116551 / 260140,,116535         PUSHJ    P,UNLMES             ;
116552 / 254000,,116554          JRST      UNLERR             ;
116553 / 263140,,000000          POPJ    P,                   ;
                       UNLERR:
116554 / 260140,,044066         PUSHJ    P,DISMES             ;
116555 / 000000,,153674                                       ;
116556 / 777777,,777777                                       ;
116557 / 476000,,036035         SETOM      036035             ;
116560 / 260140,,043761         PUSHJ    P,043761             ;
116561 / 254000,,000365          JRST      000365             ;
                       ; ROUTINE TO POP THE FIRST TRANSFER OFF THE INPUT LIST AND DELETE IT
                       POPMES:
116562 / 260140,,116535         PUSHJ    P,UNLMES             ;
116563 / 263140,,000000          POPJ    P,                   ;
116564 / 254000,,116506          JRST      RELLST             ;
                       ; ROUTINE TO SEND OUT A MESSAGE FROM CLOCK LEVEL ON LINK 0.
                       ; IF LINK IS BLOCKED, PUTS MESSAGE ON A LIST (L0CWTL)
                       ; ENTER WITH MESSAGE TO BE SENT IN AC1
                       ; PRESERVEC AC3, BUT DEFINITELY CLOBBERS AC2
                       CLKOUT:
116565 / 332000,,036313         SKIPE      036313             ;
116566 / 254000,,116506          JRST      116506             ;; IF IMP DEAD, FLUSH OUTPUT
                       CLKOUD:
116567 / 135700,,114054           LDB  AC2,114054             ;; PICK UP MESSAGE TYPE
116570 / 322700,,116574         JUMPE  AC2,116574             ;; IF A REGULAR MESSAGE, BLOCK LINK FIRST
116571 / 306700,,000005          CAIN  AC2,000005             ;; IF REGULAR MESSAGE FOR DISCARD, BLOCK LINK ALSO
116572 / 254000,,116574          JRST      CLKOU4             ;
116573 / 254000,,122377          JRST      122377             ;; OTHERWISE, DON'T WORRY ABOUT TRYING TO BLOCK IT
                       CLKOU4:
116574 / 261140,,000017          PUSH    P,   AC3             ;
116575 / 260140,,114654         PUSHJ    P, L0PTR             ;
116576 / 616756,,036730          TDNN  AC3,L0BLOK(AC2)        ;; IS THIS LINK BLOCKED?
116577 / 254000,,116612          JRST      116612             ;; NO, SEND AWAY
116600 / 336700,,036727         SKIPN  AC2,036727             ;; YES, PUT IT ON END OF LIST
116601 / 254000,,116610          JRST      116610             ;; NO LIST, PUT IT ON BOTH ENDS
116602 / 207000,,000016         MOVSS         AC2             ;
116603 / 506656,,000000          HRLM  AC1,      (AC2)        ;; LINK US ON TO END OF LAST GUY
                       CLKOU2:
116604 / 506640,,036727          HRLM  AC1,L0CWTL             ;
116605 / 553015,,000000         HRRZS            (AC1)        ;
116606 / 262140,,000017           POP    P,   AC3             ;
116607 / 263140,,000000          POPJ    P,                   ;
                       CLKOU1:
116610 / 542640,,036727          HRRM  AC1,L0CWTL             ;
116611 / 254000,,116604          JRST      CLKOU2             ;
                       CLKOU3:
116612 / 436756,,036730           ORM  AC3,L0BLOK(AC2)        ;; BLOCK LINK
116613 / 262140,,000017           POP    P,   AC3             ;
116614 / 254000,,122377          JRST      122377             ;; OUTPUT MESSAGE
                       ; ROUTINE TO FIND A DDB FROM LINK NUMBER IN A SECOND LEVEL
                       ; NCP COMMAND. GETS SEND OR RECEIVE SIDE AS SPECIFIED.
                       ; RETURNS:
                       ; +1 FOR NO SUCH LINK NUMBER
                       ; +2 FOR WRONG SIDE ONLY
                       ; +3 FOR SOCKET THERE BUT NO DDB
                       COMDDR:
151544 / 602400,,000001          TRNE  TEM,     1             ;
116615 / 334300,,151544         SKIPA  DDB,151544             ;; GET RECEIVE SIDE SOCKET NUMBER TEST
                       COMDDS:
151546 / 606400,,000001          TRNN  TEM,     1             ;
116616 / 200300,,151546          MOVE  DDB,151546             ;; PICK SEND SIDE TEST
116617 / 135700,,114055           LDB  AC2,114055             ;; PICK UP HOST NUMBER
116620 / 242700,,000010           LSH  AC2,000010             ;
116621 / 134755,,000003          ILDB  AC3,   TBP(AC1)        ;
116622 / 435717,,000000           ORI  AC2,      (AC3)        ;; MAKE UP HOST-LINK NUMBER
116623 / 400240,,000000          SETZ  DAT,                   ;
116624 / 336740,,037301         SKIPN  AC3,037301             ;; PICK UP POINTER TO FIRST FREE LINK
116625 / 263140,,000000          POPJ    P,                   ;
                       COMDS2:
116626 / 316717,,036740          CAMN  AC2,036740(AC3)        ;; HOST-LINK NUMBER MATCH?
116627 / 254000,,116634          JRST      COMDS1             ;
                       COMDS3:
116630 / 367740,,116626          SOJG  AC3,COMDS2             ;
116631 / 332740,,000005         SKIPE  AC3,000005             ;; DID WE FIND ANYTHING AT ALL?
116632 / 350003,,000000           AOS            (P)          ;; YES, GIVE +2 RETURN
116633 / 263140,,000000          POPJ    P,                   ;
                       COMDS1:
116634 / 201257,,000000         MOVEI  DAT,      (AC3)        ;; SAVE INDEX FOR FUTURE REFERENCE
116635 / 200417,,037040          MOVE  TEM,037040(AC3)        ;
116636 / 256000,,000006           XCT         DDB             ;
116637 / 254000,,116630          JRST      COMDS3             ;
116640 / 350003,,000000           AOS            (P)          ;
116641 / 350003,,000000           AOS            (P)          ;
116642 / 332317,,037000         SKIPE  DDB,037000(AC3)        ;
116643 / 350003,,000000           AOS            (P)          ;
116644 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINES TO PICK UP SOCKET NUMBERS AND STORE THEM FOR CLS, RTS, AND STR
                       RD2B:
116645 / 134715,,000003          ILDB  AC2,   TBP(AC1)        ;
116646 / 242700,,000010           LSH  AC2,    10             ;
116647 / 134415,,000003          ILDB  TEM,   TBP(AC1)        ;
116650 / 435710,,000000           ORI  AC2,      (TEM)        ;
116651 / 263140,,000000          POPJ    P,                   ;
                       RD4B:
116652 / 134715,,000003          ILDB  AC2,   TBP(AC1)        ;
116653 / 242700,,000010           LSH  AC2,    10             ;
116654 / 134415,,000003          ILDB  TEM,   TBP(AC1)        ;
116655 / 435710,,000000           ORI  AC2,      (TEM)        ;
116656 / 242700,,000010           LSH  AC2,    10             ;
116657 / 134415,,000003          ILDB  TEM,   TBP(AC1)        ;
116660 / 435710,,000000           ORI  AC2,      (TEM)        ;
116661 / 242700,,000010           LSH  AC2,    10             ;
116662 / 134415,,000003          ILDB  TEM,   TBP(AC1)        ;
116663 / 435710,,000000           ORI  AC2,      (TEM)        ;
116664 / 263140,,000000          POPJ    P,                   ;
                       PSOCK1:
116665 / 137700,,114066           DPB  AC2,SOK1BP             ;
116666 / 242700,,777770           LSH  AC2,777770             ;
116667 / 137700,,114065           DPB  AC2,SOK1AP             ;
116670 / 263140,,000000          POPJ    P,                   ;
                       PSOCK2:
116671 / 137700,,114070           DPB  AC2,SOK2BP             ;
116672 / 242700,,777770           LSH  AC2,777770             ;
116673 / 137700,,114067           DPB  AC2,SOK2AP             ;
116674 / 263140,,000000          POPJ    P,                   ;
                       GSOCK1:
116675 / 135700,,114065           LDB  AC2,SOK1AP             ;
116676 / 135400,,114066           LDB  TEM,SOK1BP             ;
116677 / 242700,,000010           LSH  AC2,    10             ;
116700 / 435710,,000000           ORI  AC2,      (TEM)        ;
116701 / 263140,,000000          POPJ    P,                   ;
                       GSOCK2:
116702 / 135700,,114067           LDB  AC2,SOK2AP             ;
116703 / 135400,,114070           LDB  TEM,SOK2BP             ;
116704 / 242700,,000010           LSH  AC2,    10             ;
116705 / 435710,,000000           ORI  AC2,      (TEM)        ;
116706 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO RETURN A CLS TO THE HOST WHOSE MESSAGE IS IN AC1
                       ; RETURNS MESSAGE TO FREE STORAGE.
                       RTNCLS:
116707 / 200715,,000004          MOVE  AC2, TDATA(AC1)        ;
116710 / 261140,,000015          PUSH    P,   AC1             ;
116711 / 260140,,121351         PUSHJ    P,IMPGET             ;
116712 / 260140,,116464         PUSHJ    P,116464             ;
116713 / 260140,,116723         PUSHJ    P,116723             ;; MAKE UP A CLS LOCK
116714 / 200700,,000007          MOVE  AC2,  JDAT             ;
116715 / 260140,,116665         PUSHJ    P,PSOCK1             ;
116716 / 200700,,000014          MOVE  AC2,   UUO             ;
116717 / 260140,,116671         PUSHJ    P,PSOCK2             ;
116720 / 260140,,116565         PUSHJ    P,CLKOUT             ;
116721 / 262140,,000015           POP    P,   AC1             ;
116722 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO MAKE UP A CLS BLOCK WITH EMPTY SOCKETS
                       ; CALL WITH IMP HEADER IN AC2
                       ; MUST ALREADY HAVE FREE STORAGE IN AC1
                       MCLSB:
116723 / 202715,,000004         MOVEM  AC2, TDATA(AC1)        ;
116724 / 402015,,000005         SETZM      000005(AC1)        ;
116725 / 402015,,000006         SETZM      000006(AC1)        ;
116726 / 402015,,000007         SETZM      000007(AC1)        ;
116727 / 402015,,000010         SETZM      000010(AC1)        ;
116730 / 201700,,000005         MOVEI  AC2,000005             ;; FIVE WORD TRANSFER
116731 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;
116732 / 201700,,000010         MOVEI  AC2,    10             ;
116733 / 137700,,114060           DPB  AC2, SIZEP             ;
116734 / 201700,,000011         MOVEI  AC2,    11             ;
116735 / 137700,,114061           DPB  AC2,COUNTP             ;
116736 / 201700,,000003         MOVEI  AC2,   CLS             ;
116737 / 137700,,114062           DPB  AC2, OPCDP             ;
116740 / 263140,,000000          POPJ    P,                   ;
                       ; SEND CLOSE TO FOREIGN HOST
                       ; CALL WITH FREE STORAGE IN AC1
                       ; CONNECTION INDEX MUST BE IN AC3
                       SNCLS:
116741 / 200717,,036740          MOVE  AC2,036740(AC3)        ;
116742 / 405700,,177400          ANDI  AC2,177400             ;
116743 / 242700,,000014           LSH  AC2,    14             ;
116744 / 260140,,116723         PUSHJ    P, MCLSB             ;
116745 / 200717,,037040          MOVE  AC2,037040(AC3)        ;
116746 / 332317,,037000         SKIPE  DDB,037000(AC3)        ;; MAKE SURE THERE IS A DDB THERE
116747 / 606700,,000001          TRNN  AC2,000001             ;; IS OUR SIDE THE SEND SIDE?
116750 / 254000,,116753          JRST      116753             ;; NO
116751 / 402006,,000015         SETZM         BAL(DDB)        ;; YES, DON'T EMIT ANY MORE MESSAGES
116752 / 402006,,000014         SETZM         MAL(DDB)        ;
                       SNCLS1:
116753 / 260140,,116665         PUSHJ    P,PSOCK1             ;
116754 / 200717,,037100          MOVE  AC2,037100(AC3)        ;
116755 / 260140,,116671         PUSHJ    P,PSOCK2             ;
116756 / 260140,,116565         PUSHJ    P,CLKOUT             ;
116757 / 205700,,040000         MOVSI  AC2,  CLSS             ;
116760 / 260140,,121211         PUSHJ    P, CSTAT             ;
116761 / 263140,,000000          POPJ    P,                   ;
116762 /               ;: IMPREG[J17,SYS] EOF.
116762 /               ;: IMPUUO[J17,SYS]
                       ; THE NON-STANDARD UUOS WILL BE MTAPE UUOS
                       ; THE ADDRESS OF THE MTAPE POINTS TO A BLOCK
                       ; THE FIRST WORD OF THE BLOCK IS THE FUNCTION CODE
                       ; THAT DETERMINES WHAT TO DO AND HOW TO INTERPRET ANY OTHER WORDS IN THE BLOCK
                       ; FUNCTION=0		; CONNECT
                       ;	1		; STATUS BITS ARE PLACED HERE UPON RETURN
                       ;	2		; LOCAL SOCKET NUMBER. 32 BITS RIGHT-ADJUSTED
                       ;	3		; WAIT FLAG. -1 FOR WAIT FOR CONNECTION.
                       ;	4		; BYTE SIZE, OR IF SENDING, BYTE SIZE IS STORED HERE
                       ;	5		; FOREIGN SOCKET NUMBER
                       ;	6		; HOST NUMBER IS PLACED HERE
                       ; FUNCTION=1		; LISTEN
                       ;	1		; STATUS BITS ARE PLACED HERE
                       ;	2		; LOCAL SOCKET NUMBER
                       ;	3		; WAIT FLAG
                       ;	4		; BYTE SIZE OF CONNECTION. STORED HERE IF SEND
                       ; FUNCTION=2		; STATUS
                       ;	1		; STATUS BITS ARE PLACED HERE FOR SEND SIDE
                       ;	2		; RECEIVE SIDE STATUS BITS ARE PLACED HERE
                       ; FUNCTION=3		; TERMINATE
                       ;	1		; STATUS BITS ARE PLACED HERE
                       ;	2		; LOCAL SOCKET NUMBER
                       ;	3		; WAIT FLAG
                       ; FUNCTION=4		; WAIT FOR CONNECTION COMPLETE
                       ;	1		; STATUS IS RETURNED HERE
                       ;	2		; NEEDS SOCKET NUMBER HERE
                       ; FUNCTION=5		; DUMP. DUMPS MONITOR TABLES
                       ;	1		; NUMBER OF WORDS OF TABLES DESIRED
                       ;	2		; ADDRESS OF PLACE TO PUT TABLES
                       ; FUNCTION=6		; WAKEUP. VALID ONLY IF AT I-LEVEL. USEFUL FOR
                       ;			; WAKING UP PROCESS IN WAIT STATE DUE TO IMP.
                       ; FUNCTION=7		; GET SOCKET NUMBERS AND HOST NUMBER
                       ;	1		; HOST-LINK NUMBER, SEND SIDE
                       ;	2		; LOCAL SEND SOCKET
                       ;	3		; FOREIGN RECEIVE SOCKET
                       ;	4		; HOST-LINK NUMBER FOR RECEIVE SIDE
                       ;	5		; LOCAL RECEIVE SOCKET
                       ;	6		; FOREIGN SEND SOCKET
                       ; FUNCTION=8.		; SKIP IF ANY INPUT IS PRESENT
                       ; FUNCTION=9.		; SEND INTERRUPT
                       ;	1		; STATUS BITS RETURNED HERE
                       ;	2		; NEED SOCKET NUMBER HERE
                       ; FUNCTION=10.		; RESSURECT IMP IF DOWN
                       ; FUNCTION=11.		; BLESS THIS HOST
                       ;	1		; HOST NUMBER REQUIRED HERE
                       ; MORE MTAPE UUO CODES
                       ; FUNCTION=12.		; TEST AND CLEAR INTERRUPT BITS
                       ;	1		; SEND SIDE. 0 FOR NO INT., -1 FOR INT. PRESENT
                       ;	2		; RECEIVE SIDE. 0 FOR NO INT., -1 FOR INT. PRESENT
                       ; FUNCTION=13.		; SET ALLOCATION
                       ;	1		; FUNCTION CODE. 0 NORM, 1 FOR SYS MAX, 2 FOR MIN
                       ;	2		; NUMBER OF BITS OF ALLOCATION
                       ;	3		; NUMBER OF MESSGES OF ALLOCATION
                       ; FUNCTION=14.		; WHAT ARE THE ALLOCATIONS
                       ;	1		; NUMBER OF BITS WE HAVE ALLOCATED HIM
                       ;	2		; NUMBER OF MESSAGES WE HAVE ALLOCATED HIM
                       ;	3		; NUMBER OF BITS HE HAS LEFT
                       ;	4		; NUMBER OF MESSAGES HE HAS LEFT
                       ;	5		; NUMBER OF BITS IN FREE STORAGE
                       ;	6		; NUMBER OF MESSAGES IN FREE STORAGE
                       ;	7		; NUMBER OF BITS HE HAS ALLOCATED US
                       ;	10		; NUMBER OF MESSAGES HE HAS ALLOCATED US
                       ; FUNCTION=15.		; SET TIMEOUTS
                       ;	1		; WORD OF 6-BIT BYTES. GIVES NUMBER OF 2-SECOND UNITS
                       ;			; FOR TIMEOUTS ON CLS, RFNM, ALL, RFC, OR INP
                       ;			; 0 MEANS WAIT INDEFINITELY
                       ; FUNCTION=16.		; GET TIMEOUTS
                       ;	1		; CURRENT TIMEOUT WORD WILL BE PLACED HERE
                       ; POSITIONS IN USER TABLE OF VARIOUS QUANTITIES
                       ; ERROR CODES
                       ; EVERYONE WHO RETURNS STATUS BITS MAY RETURN AN ERROR CODE INSTEAD
                       ; UUO DISPATCH TABLE
116762 / 254000,,114160          JRST      IMPCLR             ;
116763 / 254000,,114145          JRST      IMPSET             ;
116764 / 254000,,117005          JRST      IMPINI             ;
116765 / 254000,,037403          JRST       CPOPJ             ;
                       IMPDSP:
116766 / 254000,,120063          JRST      120063             ;; RELEASE
116767 / 254000,,120672          JRST      120672             ;; CLOSE OUTPUT
116770 / 254000,,120133          JRST      120133             ;; BUFFERED OUTPUT
116771 / 254000,,120427          JRST      120427             ;; BUFFERED INPUT
116772 / 254000,,037401          JRST      037401             ;; ENTER
116773 / 254000,,037401          JRST      037401             ;; LOOKUP
116774 / 254000,,120144          JRST      120144             ;; DUMP MODE OUTPUT
116775 / 254000,,120455          JRST      120455             ;; DUMP MODE INPUT
116776 / 254000,,037403          JRST      037403             ;; USETO
116777 / 254000,,037403          JRST      037403             ;; USETI
117000 / 254000,,037403          JRST      037403             ;; UGETF
117001 / 254000,,037401          JRST      037401             ;; RENAME
117002 / 254000,,120714          JRST      120714             ;; CLOSE INPUT
117003 / 254000,,037403          JRST      037403             ;; UTPCLR
117004 / 254000,,117070          JRST      117070             ;; MTAPE
                       ; INITIALIZE ROUTINE
                       IMPINI:
117005 / 402000,,036313         SETZM      036313             ;; CLEAR DATA AREA
152237 / 036313,,036314           XWD IMPST,IMPST+1           ;
117006 / 200640,,152237          MOVE  AC1,152237             ;
117007 / 251640,,037354           BLT  AC1,037354             ;
117010 / 201640,,000040         MOVEI  AC1,MAXNLK             ;
117011 / 202640,,036740         MOVEM  AC1,LNKMAX             ;
151676 / 000000,,000000                                       ;
117012 / 200640,,151676          MOVE  AC1,151676             ;
117013 / 202640,,036544         MOVEM  AC1,IMPPID             ;
117014 / 201640,,122042         MOVEI  AC1,122042             ;; INITIALIZE THE I-LEVEL DISPATCH ADDRESSES
117015 / 202640,,036545         MOVEM  AC1,036545             ;
117016 / 525640,,377777         HRLOI  AC1,377777             ;; SET OUTPUT COUNT-DOWN TO RANDOM LARGE NUMBER
117017 / 202640,,036322         MOVEM  AC1,IMPOCT             ;
117020 / 201640,,122367         MOVEI  AC1, DONOP             ;
117021 / 202640,,036546         MOVEM  AC1,036546             ;
117022 / 201640,,000010         MOVEI  AC1,000010             ;; GIVE A LITTLE WHILE FOR THE IMP RELAY TO COOL OFF
117023 / 202640,,036717         MOVEM  AC1,POLCNT             ;
117024 / 201640,,000010         MOVEI  AC1,000010             ;; PICK UP A BUNCH OF SPARE FREE STORAGE BLOCKS
117025 / 202640,,036716         MOVEM  AC1,IMPSPN             ;
151636 / 777700,,036440           XWD -INTPLN,IMPIPL-1        ;
117026 / 200640,,151636          MOVE  AC1,151636             ;
117027 / 202640,,036440         MOVEM  AC1,IMPIPD             ;
151635 / 777700,,036323           XWD -INTPLN,IMPOPL-1        ;
117030 / 200640,,151635          MOVE  AC1,151635             ;
117031 / 202640,,036323         MOVEM  AC1,IMPOPD             ;
117032 / 201640,,016244         MOVEI  AC1,LPTDDB             ;
117033 / 506640,,036265          HRLM  AC1,036265             ;; RELINK DEVICE DATA BLOCK CHAIN
117034 / 336000,,036312         SKIPN      036312             ;; DO WE KEEP THE IMP DOWN TODAY?
117035 / 254000,,117042          JRST      IMPGAH             ;
117036 / 476000,,036313         SETOM      036313             ;; YES
117037 / 201640,,016244         MOVEI  AC1,016244             ;; LINK AROUND IMP DDB
117040 / 506640,,017226          HRLM  AC1,017226             ;
117041 / 263140,,000000          POPJ    P,                   ;
                       IMPGAH:
117042 / 260140,,121351         PUSHJ    P,121351             ;; GET A FREE BLOCK FOR THE INPUT LIST
117043 / 254200,,121007          HALT      NOCORE             ;
117044 / 202640,,036434         MOVEM  AC1,036434             ;
117045 / 740200,,000010          CONO  IMP,ODPIEN             ;
117046 / 740200,,042064          CONO  IMP,042064             ;
117047 / 260140,,116435         PUSHJ    P,116435             ;;SEND THE IMP 4 NOPS
117050 / 260140,,121351         PUSHJ    P,121351             ;; GET A FREE BLOCK FOR SENDING RESETS TO EVERYONE
117051 / 254200,,121007          HALT      NOCORE             ;
117052 / 260140,,116314         PUSHJ    P,CLRBLK             ;
117053 / 201700,,000377         MOVEI  AC2,   377             ;
117054 / 137700,,114055           DPB  AC2,114055             ;; PUT IN BIGGEST HOST NUMBER
117055 / 201700,,000010         MOVEI  AC2,    10             ;
117056 / 137700,,114060           DPB  AC2,114060             ;; PUT IN BYTE SIZE
117057 / 201700,,000001         MOVEI  AC2,     1             ;
117060 / 137700,,114061           DPB  AC2,114061             ;; PUT IN BYTE COUNT
117061 / 205700,,030000         MOVSI  AC2,      (<BYTE (8)RST>)    ;
117062 / 202715,,000006         MOVEM  AC2,000006(AC1)        ;; PUT IN RST OPCODE
117063 / 201700,,000003         MOVEI  AC2,     3             ;
117064 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;; AND DATA WORD COUNT
117065 / 201700,,000377         MOVEI  AC2,000377             ;; LARGEST HOST NUMBER
117066 / 202700,,036723         MOVEM  AC2,036723             ;; SET UP NUMBER OF NEXT HOST TO BE RESET
117067 / 254000,,116565          JRST      116565             ;; QUEUE RST BLOCK.  INT ROUTINE WILL DECREMENT HOST NUMBER
                       ; MTAPE DISPATCH
                       MTAPE:
151471 / 550054,,000000          HRRZ  TAC,      (UUO)        ;
117070 / 256200,,151471          XCTR   XR,151471             ;;GET FUNCTION CODE.
117071 / 301040,,000021          CAIL  TAC,000021             ;;FUNCTION IN BOUNDS?
117072 / 254000,,043340          JRST      043340             ;;NO. ILLEGAL FUNCTION.
117073 / 200101,,117104          MOVE TAC1,UUODSP(TAC)        ;;GET THE DISPATCH ADDRESS
117074 / 332000,,036313         SKIPE      036313             ;;SKIP IF IMP IS UP
117075 / 254000,,117100          JRST      117100             ;;IMP DOWN.
117076 / 327102,,000000         JUMPG TAC1,      (TAC1)       ;;JUMP IF LEGAL WITH IMP UP.
117077 / 254000,,043340          JRST      043340             ;;ILLEGAL WITH IMP UP.
                       MTAPE2:
117100 / 321102,,000000         JUMPL TAC1,      (TAC1)       ;;JUMP IF LEGAL WITH IMP DEAD.
117101 / 603100,,200000          TLNE TAC1,200000             ;;DOES THIS MTAPE EXPECT STATUS BITS?
117102 / 254000,,117407          JRST      117407             ;;YES. GIVE THEM.
117103 / 263140,,000000          POPJ    P,                   ;;NO JUST GIVE FAILURE RETURN
                       UUODSP:
117104 / 200000,,117424                                       ;;0
117105 / 200000,,117256                                       ;;1
117106 / 200000,,117560                                       ;;2
117107 / 200000,,117125                                       ;;3
117110 / 000000,,117633                                       ;;4
117111 / 000000,,117542                                       ;;5
117112 / 000000,,117577                                       ;;6
117113 / 000000,,117607                                       ;;7
117114 / 000000,,117662                                       ;;10
117115 / 200000,,120030                                       ;;11
117116 / 400000,,117170                                       ;;12 ONLY IF IMP DEAD
117117 / 000000,,037403                                       ;;CHKSIT			;13 BLESS
117120 / 000000,,117227                                       ;;14
117121 / 000000,,117665                                       ;;15
117122 / 000000,,120007                                       ;;16
117123 / 000000,,117250                                       ;;17
117124 / 000000,,117253                                       ;;20
                       ; TERMINATE CONNECTION
                       TERMIN:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117125 / 256200,,152524          XCTR   XR,152524             ;
151337 / 402014,,000001         SETZM       STLOC(UUO)        ;
117126 / 256040,,151337          XCTR   XW,151337             ;
117127 / 260140,,121222         PUSHJ    P,GETIDX             ;
117130 / 263140,,000000          POPJ    P,                   ;
117131 / 201646,,000000         MOVEI  AC1,      (DDB)        ;
117132 / 332017,,037000         SKIPE      037000(AC3)        ;; IF NOBODY HOME, LET HIM KILL IT
117133 / 316657,,037000          CAMN  AC1,037000(AC3)        ;; IS IT OURS?
117134 / 254000,,117153          JRST       TEROK             ;
117135 / 260140,,137657         PUSHJ    P,TTYERR             ;
117136 / 260140,,042676         PUSHJ    P,INLMES             ;
                       TTYSTG:
117150 / 205000,,000100         MOVSI        USRB             ;
117151 / 437006,,000002           ORB      DEVIOS(DDB)        ;
117152 / 254000,,137707          JRST      TTYSTR             ;
                       TEROK:
117153 / 602700,,000001          TRNE  AC2,000001             ;; USE DIFFERENT CLOSE ROUTINE IF SEND SIDE
117154 / 254000,,117166          JRST        TERS             ;
117155 / 260140,,122035         PUSHJ    P,122035             ;; SEND OUT THE CLS
                       TERW:
153063 / 332014,,000003         SKIPE       WFLOC(UUO)        ;
117156 / 256200,,153063          XCTR   XR,153063             ;; DOES HE WANT TO WAIT FOR IT?
117157 / 260140,,121677         PUSHJ    P,121677             ;; YES, DO A TIMED CLS WAIT
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117160 / 256200,,152524          XCTR   XR,152524             ;; NOW GET THE CONNECTION INDEX AGAIN
117161 / 260140,,121222         PUSHJ    P,GETIDX             ;
117162 / 263140,,000000          POPJ    P,                   ;
117163 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
152604 / 202654,,000001         MOVEM  AC1, STLOC(UUO)        ;
117164 / 256040,,152604          XCTR   XW,152604             ;
117165 / 263140,,000000          POPJ    P,                   ;
                       TERS:
117166 / 260140,,122005         PUSHJ    P, USCLS             ;
117167 / 254000,,117156          JRST        TERW             ;
                       ; REINITIALIZE THE IMP SYSTEM, BRING UP THE IMP
                       NEWINI:
117170 / 336740,,037301         SKIPN  AC3,037301             ;;SEE IF THERE ARE ANY LINKS STILL ACTIVE
117171 / 254000,,117177          JRST      NEWIN1             ;
                       NEWIN2:
117172 / 336717,,037000         SKIPN  AC2,037000(AC3)        ;
117173 / 254000,,117176          JRST      NEWIN3             ;
117174 / 302706,,000000          CAIE  AC2,      (DDB)        ;
117175 / 254000,,117217          JRST      NEWLOS             ;
                       NEWIN3:
117176 / 365740,,117172         SOJGE  AC3,NEWIN2             ;
                       NEWIN1:
117177 / 260140,,044320         PUSHJ    P,044320             ;
117200 / 260140,,044104         PUSHJ    P,044104             ;;BLAME IT ON THE STONES.
117201 / 260140,,044102         PUSHJ    P,DISTAB             ;
117202 / 200104,,027720          MOVE TAC1,PRJPRG(J)          ;;GET THE NAME OF LOSER.
117203 / 260140,,044246         PUSHJ    P,DISSIX             ;
117204 / 260140,,044066         PUSHJ    P,DISMES             ;
117215 / 402000,,036312         SETZM      IMPDIE             ;
117216 / 254000,,117005          JRST      IMPINI             ;
                       NEWLOS:
117217 / 260140,,137657         PUSHJ    P,TTYERR             ;
117220 / 260140,,042676         PUSHJ    P,INLMES             ;
117226 / 254000,,117150          JRST      TTYSTG             ;
                       ; TEST AND CLEAR INTERRUPT BITS - SET SYSTEM DEFAULT TIMEOUTS
                       ; RETURNS FLAG FOR SEND SIDE IN 1(UUO), RECEIVE SIDE IN 2(UUO)
                       TSINT:
117227 / 405300,,777777          ANDI  DDB,777777             ;
151337 / 402014,,000001         SETZM           1(UUO)        ;
117230 / 256040,,151337          XCTR   XW,151337             ;
151340 / 402014,,000002         SETZM           2(UUO)        ;
117231 / 256040,,151340          XCTR   XW,151340             ;
117232 / 336740,,037301         SKIPN  AC3, FFLNK             ;
117233 / 263140,,000000          POPJ    P,                   ;
                       TSINLP:
117234 / 316317,,037000          CAMN  DDB,037000(AC3)        ;
117235 / 254000,,117240          JRST      TSINDF             ;
                       TSINCR:
117236 / 367740,,117234          SOJG  AC3,TSINLP             ;
117237 / 263140,,000000          POPJ    P,                   ;
                       TSINDF:
117240 / 200717,,037040          MOVE  AC2,037040(AC3)        ;
117241 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
117242 / 623640,,000040          TLZE  AC1,INTINS             ;
151431 / 476014,,000001         SETOM           1(UUO)        ;
117243 / 256040,,151431          XCTR   XW,151431             ;
117244 / 623640,,000100          TLZE  AC1,INTINR             ;
151432 / 476014,,000002         SETOM           2(UUO)        ;
117245 / 256040,,151432          XCTR   XW,151432             ;
117246 / 202657,,037200         MOVEM  AC1,037200(AC3)        ;
117247 / 254000,,117236          JRST      TSINCR             ;
                       ; SET SYSTEM DEFAULT TIMEOUTS. PUT WORD OF 6-BIT FIELDS IN 1(UUO).
                       ; THE FIELDS ARE IN UNITS OF 2-SECONDS. I.E., THE MAXIMUM WAIT IS 126 SECONDS
                       ; AND THE MINIMUM WAIT IS 2 SECONDS.
                       USETTM:
152517 / 200654,,000001          MOVE  AC1,     1(UUO)        ;
117250 / 256200,,152517          XCTR   XR,152517             ;
117251 / 202646,,000026         MOVEM  AC1, TIMES(DDB)        ;
117252 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO GET CURRENT TIMEOUTS
                       UGETTM:
117253 / 200646,,000026          MOVE  AC1, TIMES(DDB)        ;
152604 / 202654,,000001         MOVEM  AC1,     1(UUO)        ;
117254 / 256040,,152604          XCTR   XW,152604             ;
117255 / 263140,,000000          POPJ    P,                   ;
                       ; LISTEN CODE
                       LISTEN:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117256 / 256200,,152524          XCTR   XR,152524             ;
117257 / 260140,,121320         PUSHJ    P,121320             ;
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117260 / 256200,,152524          XCTR   XR,152524             ;
117261 / 260140,,121222         PUSHJ    P,GETIDX             ;
117262 / 254000,,117264          JRST      117264             ;; NO KNOWN SOCKET. MAKE US WAIT.
117263 / 254000,,117331          JRST      117331             ;; KNOWN SOCKET. WHAT'S THIS?
                       LISTN2:
117264 / 350740,,037301           AOS  AC3,037301             ;; PICK UP NEW LINK NUMBER
117265 / 303740,,000040         CAILE  AC3,MAXNLK             ;
117266 / 254000,,117420          JRST      117420             ;; NO LINK AVAILABLE
                       LISTN4:
117267 / 400240,,000000          SETZ  DAT,                   ;; ZERO HOST-LINK NUMBER
117270 / 474400,,000000          SETO  TEM,                   ;; MARK FOREIGN SOCKET UNUSED
117271 / 260140,,121162         PUSHJ    P,CLRSKT             ;
                       CHKWAT:
117272 / 205700,,100000         MOVSI  AC2,100000             ;; HAVE WE RECEIVED A REQUEST FOR CONNECTION?
117273 / 616717,,037200          TDNN  AC2,037200(AC3)        ;
117274 / 254000,,117301          JRST      117301             ;; NO, WAIT FOR ONE
117275 / 205700,,200000         MOVSI  AC2,200000             ;; YES, HAS IT BEEN ACKNOWLEDGED?
117276 / 616717,,037200          TDNN  AC2,037200(AC3)        ;
117277 / 260140,,120730         PUSHJ    P,120730             ;; NO, DO SO NOW AND LEAVE WITHOUT WAITING
117300 / 254000,,117312          JRST      117312             ;; HAS CHANGED, DON'T WAIT
                       WAIT:
153102 / 336014,,000003         SKIPN       WFLOC(UUO)        ;
117301 / 256200,,153102          XCTR   XR,153102             ;
117302 / 254000,,117312          JRST      117312             ;; NO WAIT, JUST SET STATUS WORD AND RETURN
117303 / 211040,,000005         MOVNI  TAC,  IOWQ             ;
117304 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
117305 / 205000,,004000         MOVSI      004000             ;; NOTE THAT WE ARE WAITING FOR CONNECTION
117306 / 436006,,000002           ORM      DEVIOS(DDB)        ;
117307 / 135400,,114076           LDB  TEM,114076             ;; PICK UP RFC WAIT TIME
117310 / 260140,,121652         PUSHJ    P,121652             ;; DO A TIMED WAIT IF WAIT TIME≠0. OTHERWISE WAIT FOREVER.
117311 / 255000,,000000          JFCL                         ;
                       SETST:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117312 / 256200,,152524          XCTR   XR,152524             ;
117313 / 260140,,121222         PUSHJ    P,GETIDX             ;
117314 / 254000,,120775          JRST      120775             ;; HELP, LINK DISSAPEARED!
117315 / 200057,,037100          MOVE  TAC,037100(AC3)        ;
152555 / 202054,,000005         MOVEM  TAC, FSLOC(UUO)        ;
117316 / 256040,,152555          XCTR   XW,152555             ;
117317 / 200717,,037140          MOVE  AC2,037140(AC3)        ;; GIVE HIM BYTE SIZE FOR KICKS
152617 / 202754,,000004         MOVEM  AC3, BSLOC(UUO)        ;
117320 / 256040,,152617          XCTR   XW,152617             ;
117321 / 200717,,036740          MOVE  AC2,036740(AC3)        ;; PICK UP HOST NUMBER
117322 / 242700,,777770           LSH  AC2,777770             ;; RIGHT-ADJUST IT
152614 / 202714,,000006         MOVEM  AC2,  HLOC(UUO)        ;
117323 / 256040,,152614          XCTR   XW,152614             ;
                       STST:
117324 / 200717,,037200          MOVE  AC2,037200(AC3)        ;
117325 / 621700,,400000           TLZ  AC2,400000             ;; NOTE WE ARE GIVING HIM UP-TO-DATE STATUS BITS
117326 / 202717,,037200         MOVEM  AC2,037200(AC3)        ;
152612 / 202714,,000001         MOVEM  AC2, STLOC(UUO)        ;
117327 / 256040,,152612          XCTR   XW,152612             ;
117330 / 263140,,000000          POPJ    P,                   ;
                       ; LISTEN CODE - HERE HE WANTS TO LISTEN TO AN EXTANT SOCKET
                       LISTNG:
117331 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
117332 / 336057,,037000         SKIPN  TAC,037000(AC3)        ;; DOES IT HAVE A DDB?
117333 / 254000,,117336          JRST      117336             ;; NO, WE MIGHT BE ABLE TO CONNECT UP
                       SIUERR:
117334 / 201040,,000001         MOVEI  TAC,000001             ;; NO, SOCKET IN USE
117335 / 254000,,117356          JRST      DEPERC             ;
                       LNODDB:
117336 / 603640,,040000          TLNE  AC1,  CLSS             ;
117337 / 254000,,117360          JRST        WCLS             ;
117340 / 607640,,100000          TLNN  AC1,100000             ;; HAS A STR BEEN RECEIVED?
117341 / 254000,,117267          JRST      117267             ;; NO, WAIT FOR ONE
117342 / 607640,,200000          TLNN  AC1,200000             ;; YES, HAS A RTS BEEN RETURNED?
117343 / 254000,,117411          JRST      117411             ;; NO, RETURN A RTS AND WE ARE CONNECTED!
                       ILLST:
117344 / 350000,,037327           AOS      NILLST             ;
117345 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
117346 / 254000,,117355          JRST      117355             ;; NO, SKIP OVER ERROR MESSAGE
117347 / 260140,,044320         PUSHJ    P,044320             ;
117350 / 260140,,044120         PUSHJ    P,DISERR             ;
117351 / 000000,,154603                                       ;
117352 / 000200,,037327        DECQQQ      NILLST             ;
117353 / 000000,,152275                                       ;
117354 / 777777,,777777                                       ;
                       SYSERR:
117355 / 201040,,000003         MOVEI  TAC,000003             ;; GIVE HIM SYSTEM ERROR CODE
                       DEPERC:
152551 / 202054,,000001         MOVEM  TAC, STLOC(UUO)        ;
117356 / 256040,,152551          XCTR   XW,152551             ;
117357 / 263140,,000000          POPJ    P,                   ;
                       WCLS:
117360 / 552317,,037000         HRRZM  DDB,037000(AC3)        ;
117361 / 607640,,020000          TLNN  AC1,  CLSR             ;
117362 / 260140,,121677         PUSHJ    P,121677             ;; WAIT FOR THE MATCHING CLOSE FOR A WHILE
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117363 / 256200,,152524          XCTR   XR,152524             ;
117364 / 621640,,360000           TLZ  AC1,360000             ;
117365 / 202657,,037200         MOVEM  AC1,037200(AC3)        ;
117366 / 202717,,037040         MOVEM  AC2,037040(AC3)        ;
117367 / 606700,,000001          TRNN  AC2,000001             ;; IS IT A SEND SOCKET?
117370 / 254000,,117377          JRST      117377             ;; NO, HE DOESN'T GET TO SET THE BYTE SIDE.
117371 / 405640,,000077          ANDI  AC1,    77             ;
117372 / 307640,,000044          CAIG  AC1,000044             ;; CHECK FOR LEGAL BYTE SIZE
117373 / 335015,,114100        SKIPGE         BPW(AC1)        ;
117374 / 254000,,117405          JRST      UILLBS             ;
152520 / 200654,,000004          MOVE  AC1, BSLOC(UUO)        ;
117375 / 256200,,152520          XCTR   XR,152520             ;
117376 / 202657,,037140         MOVEM  AC1,037140(AC3)        ;
                       LNOBS:
117377 / 402017,,036740         SETZM      036740(AC3)        ;; NOTE THAT THERE IS NO HOST NUMBER
117400 / 476017,,037100         SETOM      037100(AC3)        ;; OR FOREIGN SOCKET EITHER
117401 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;; ANY PENDING RFCS?
117402 / 260140,,121564         PUSHJ    P,121564             ;; RUN DOWN RFQ LIST FOR A STR THAT MATCHES OUR SOCKET
117403 / 254000,,117272          JRST      117272             ;; NONE FOUND, WAIT FOR ONE
117404 / 254000,,117312          JRST      117312             ;; ONE FOUND AND PROCESSED, RETURN TO LOSER
                       UILLBS:
117405 / 201040,,000005         MOVEI  TAC,   ILB             ;
117406 / 254000,,117356          JRST      DEPERC             ;
                       IDERR:
117407 / 201040,,000006         MOVEI  TAC,   IDD             ;
117410 / 254000,,117356          JRST      DEPERC             ;
                       ; LISTEN - GET HERE WHEN THE SLOT IN THE TABLE IS OKED FOR CONNECTION
                       USRTSR:
117411 / 552317,,037000         HRRZM  DDB,037000(AC3)        ;
                       SNDRAL:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117412 / 256200,,152524          XCTR   XR,152524             ;
152510 / 200414,,000004          MOVE  TEM, BSLOC(UUO)        ;
117413 / 256200,,152510          XCTR   XR,152510             ;
117414 / 602700,,000001          TRNE  AC2,     1             ;
117415 / 202417,,037140         MOVEM  TEM,037140(AC3)        ;; IF WE ARE SENDING SET BYTE SIZE
117416 / 260140,,120730         PUSHJ    P,120730             ;; SEND BACK A RTS
117417 / 254000,,117312          JRST      117312             ;; GIVE HIM SOME STATUS BITS TOO
                       ; GET HERE IF THERE IS NO ROOM IN THE LINK TABLE FOR HIS LISTEN
                       LISNLK:
117420 / 370000,,037301           SOS       FFLNK             ;
117421 / 201040,,000004         MOVEI  TAC,000004             ;; GIVE HIM "nO-LINK AVAILABLE" ERROR
152551 / 202054,,000001         MOVEM  TAC, STLOC(UUO)        ;
117422 / 256040,,152551          XCTR   XW,152551             ;
117423 / 263140,,000000          POPJ    P,                   ;
                       ; CONNECT CODE - FIRST CHECK FOR A PENDING SOCKET, THEN SEND OUT A RFC
                       CONECT:
117424 / 332000,,036313         SKIPE      036313             ;
117425 / 254000,,117407          JRST       IDERR             ;
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117426 / 256200,,152524          XCTR   XR,152524             ;
117427 / 260140,,121320         PUSHJ    P,121320             ;
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117430 / 256200,,152524          XCTR   XR,152524             ;
117431 / 260140,,121222         PUSHJ    P,121222             ;; SEE IF THIS SOCKET NUMBER EXISTS YET
117432 / 254000,,117531          JRST      117531             ;; NO, SEND OUT RFC
117433 / 200657,,037200          MOVE  AC1,037200(AC3)        ;; YES, SEE IF IT IS PENDING
117434 / 332057,,037000         SKIPE  TAC,037000(AC3)        ;; DOES IT ALREADY HAVE A DDB?
117435 / 254000,,117334          JRST      117334             ;; NO, SOCKET IN USE
117436 / 603640,,100000          TLNE  AC1,100000             ;; HAVE WE RECEIVED A RFC?
117437 / 603640,,200000          TLNE  AC1,200000             ;; HAS RFC BEEN SENT?
117440 / 254000,,117453          JRST      117453             ;; YES, SEE IF IT HAS BEEN CLOSED.
152511 / 200414,,000005          MOVE  TEM, FSLOC(UUO)        ;
117441 / 256200,,152511          XCTR   XR,152511             ;
117442 / 312417,,037100          CAME  TEM,037100(AC3)        ;
117443 / 254000,,117334          JRST      SIUERR             ;
152512 / 200414,,000006          MOVE  TEM,  HLOC(UUO)        ;
117444 / 256200,,152512          XCTR   XR,152512             ;
117445 / 242400,,000010           LSH  TEM,    10             ;
117446 / 430417,,036740           XOR  TEM,036740(AC3)        ;; CHECK HOST NUMBERS
117447 / 602400,,177400          TRNE  TEM,177400             ;
117450 / 254000,,117334          JRST      117334             ;; NO MATCH, SOCKET IN USE
117451 / 552317,,037000         HRRZM  DDB,037000(AC3)        ;
117452 / 254000,,117412          JRST      117412             ;; GO SEND ALLOCATION IF NECESSARY
                       ; CONNECT CODE. CHECK SOCKET FOR CLOSURE. IF CLOSED, WE MAY GO AHEAD AND USE IT
                       CHKCL:
117453 / 607640,,040000          TLNN  AC1,  CLSS             ;
117454 / 254000,,117344          JRST       ILLST             ;
117455 / 552317,,037000         HRRZM  DDB,037000(AC3)        ;
117456 / 607640,,020000          TLNN  AC1,020000             ;; HAVE WE RECEIVED A CLOSE?
117457 / 260140,,121677         PUSHJ    P,121677             ;; NO, WAIT FOR A WHILE FOR ONE
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117460 / 256200,,152524          XCTR   XR,152524             ;
                       CONSRL:
117461 / 621640,,360000           TLZ  AC1,360000             ;
117462 / 202657,,037200         MOVEM  AC1,037200(AC3)        ;
117463 / 202717,,037040         MOVEM  AC2,037040(AC3)        ;; SET RECEIVE SOCKET NUMBER
152511 / 200414,,000005          MOVE  TEM, FSLOC(UUO)        ;
117464 / 256200,,152511          XCTR   XR,152511             ;
117465 / 202417,,037100         MOVEM  TEM,037100(AC3)        ;
152521 / 200654,,000006          MOVE  AC1,  HLOC(UUO)        ;
117466 / 256200,,152521          XCTR   XR,152521             ;
117467 / 405640,,000377          ANDI  AC1,   377             ;
117470 / 242640,,000010           LSH  AC1,    10             ;
117471 / 202657,,036740         MOVEM  AC1,036740(AC3)        ;
117472 / 606700,,000001          TRNN  AC2,000001             ;; SEND SOCKET?
117473 / 254000,,117502          JRST      117502             ;; NO, HE CAN'T SET BYTE SIZE
152520 / 200654,,000004          MOVE  AC1, BSLOC(UUO)        ;
117474 / 256200,,152520          XCTR   XR,152520             ;
117475 / 405640,,000077          ANDI  AC1,    77             ;
117476 / 307640,,000044          CAIG  AC1,    44             ;
117477 / 335015,,114100        SKIPGE         BPW(AC1)        ;
117500 / 254000,,117405          JRST      117405             ;; ILLEGAL BYTE SIZE
117501 / 202657,,037140         MOVEM  AC1,037140(AC3)        ;
                       CNOBS:
117502 / 332657,,037240         SKIPE  AC1,037240(AC3)        ;; ANYONE WAITING?
117503 / 260140,,121564         PUSHJ    P,121564             ;; RUN DOWN LIST OF RFCS FOR ONE THAT MATCHES US
117504 / 254000,,117506          JRST      117506             ;; NOONE WAITING, SEND OUT RFC
117505 / 254000,,117513          JRST      117513             ;; FOUND SOMEONE, GO SET USER UP
                       MSSRFC:
117506 / 260140,,120730         PUSHJ    P,120730             ;; SEND OUT REQUEST FOR CONNECTION
117507 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
117510 / 602000,,302400          TRNE      302400             ;
117511 / 263140,,000000          POPJ    P,                   ;; IF ERRORS, LEAVE NOW
117512 / 254000,,117513          JRST      117513             ;; WAIT FOR REPLY IF LOSER SO CHOSES
                       ; CONNECT CODE. ROUTINE TO SET UP THE INDEX AND TRY TO WAIT FOR CONNECTION.
                       CONWAT:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117513 / 256200,,152524          XCTR   XR,152524             ;
117514 / 260140,,121222         PUSHJ    P,121222             ;; PICK UP CONNECTION INDEX AGAIN
117515 / 254000,,120775          JRST      NOCONN             ;
117516 / 254000,,117272          JRST      CHKWAT             ;
                       NOCONR:
117517 / 350000,,037331           AOS      NNOCLW             ;
117520 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
117521 / 254000,,117530          JRST      117530             ;; NO, SKIP OVER ERROR MESSAGE
117522 / 260140,,044320         PUSHJ    P,044320             ;
117523 / 260140,,044120         PUSHJ    P,DISERR             ;
117524 / 000000,,154274                                       ;
117525 / 000200,,037331        DECQQQ      NNOCLW             ;
117526 / 000000,,152275                                       ;
117527 / 777777,,777777                                       ;
117530 / 254000,,117461          JRST      CONSRL             ;
                       ; HERE WE INITIALIZE A SOCKET AND SEND OUT RFC
                       MAKRFC:
152511 / 200414,,000005          MOVE  TEM, FSLOC(UUO)        ;
117531 / 256200,,152511          XCTR   XR,152511             ;
117532 / 350740,,037301           AOS  AC3,037301             ;; GET NEW INDEX NUMBER
117533 / 303740,,000040         CAILE  AC3,MAXNLK             ;
117534 / 254000,,117420          JRST      LISNLK             ;
152505 / 200254,,000006          MOVE  DAT,  HLOC(UUO)        ;
117535 / 256200,,152505          XCTR   XR,152505             ;
117536 / 405240,,000377          ANDI  DAT,   377             ;
117537 / 242240,,000010           LSH  DAT,    10             ;
117540 / 260140,,121162         PUSHJ    P,CLRSKT             ;
117541 / 254000,,117506          JRST      MSSRFC             ;
                       ; DUMP. GIVE LOSER A DUMP OF THE MONITOR TABLES.
                       DUMP:
152524 / 200714,,000002          MOVE  AC2,     2(UUO)        ;
117542 / 256200,,152524          XCTR   XR,152524             ;
117543 / 201116,,000000         MOVEI TAC1,      (AC2)        ;
152631 / 207016,,000000         MOVSS            (AC2)        ;
117544 / 256240,,152631          XCTR  XRW,152631             ;
117545 / 201756,,000000         MOVEI  AC3,      (AC2)        ;
153001 / 270754,,000001           ADD  AC3,     1(UUO)        ;
117546 / 256200,,153001          XCTR   XR,153001             ;
152632 / 207017,,777777         MOVSS      777777(AC3)        ;
117547 / 256240,,152632          XCTR  XRW,152632             ;
117550 / 430740,,000002           XOR  AC3,  TAC1             ;
117551 / 321740,,043211         JUMPL  AC3,ADRERR             ;
117552 / 260140,,122443         PUSHJ    P,122443             ;; RELOCATE ADDRESS IN TAC1, PUT RESOLT IN DSER
117553 / 505440,,036730          HRLI DSER,SYSTBS             ;
117554 / 551751,,777777         HRRZI  AC3,777777(DSER)       ;
153001 / 270754,,000001           ADD  AC3,     1(UUO)        ;
117555 / 256200,,153001          XCTR   XR,153001             ;
117556 / 251457,,000000           BLT DSER,      (AC3)        ;
117557 / 263140,,000000          POPJ    P,                   ;
                       ; GIVE LOSER THE STATUS OF HIS CONNECTION
                       STATUS:
117560 / 260140,,121270         PUSHJ    P,UUSIDX             ;
117561 / 254000,,117566          JRST       STAT1             ;
117562 / 205700,,400000         MOVSI  AC2,  ANYC             ;
117563 / 413717,,037200        ANDCAB  AC2,037200(AC3)        ;
152612 / 202714,,000001         MOVEM  AC2,     1(UUO)        ;
117564 / 256040,,152612          XCTR   XW,152612             ;
117565 / 254000,,117567          JRST       STAT2             ;
                       STAT1:
151337 / 402014,,000001         SETZM           1(UUO)        ;
117566 / 256040,,151337          XCTR   XW,151337             ;
                       STAT2:
117567 / 260140,,121304         PUSHJ    P,UURIDX             ;
117570 / 254000,,117575          JRST       STAT3             ;
117571 / 205700,,400000         MOVSI  AC2,  ANYC             ;
117572 / 413717,,037200        ANDCAB  AC2,037200(AC3)        ;
152613 / 202714,,000002         MOVEM  AC2,     2(UUO)        ;
117573 / 256040,,152613          XCTR   XW,152613             ;
117574 / 263140,,000000          POPJ    P,                   ;
                       STAT3:
151340 / 402014,,000002         SETZM           2(UUO)        ;
117575 / 256040,,151340          XCTR   XW,151340             ;
117576 / 263140,,000000          POPJ    P,                   ;
                       ; WAKE UP MONITOR IF WAITING FOR IMP. SETS TMO IN IOS TO INDICATE ERROR CONDITION
                       WAKE:
117577 / 336000,,023431         SKIPN      INTACT             ;
117600 / 263140,,000000          POPJ    P,                   ;
117601 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
117602 / 607000,,376000          TLNN        ANYW             ;
117603 / 263140,,000000          POPJ    P,                   ;
117604 / 660000,,000200           TRO         TMO             ;
117605 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
117606 / 254000,,121174          JRST        QRUN             ;
                       ; ROUTINE TO GIVE LOSER HIS SOCKET NUMBERS
                       GSOCKS:
117607 / 260140,,121270         PUSHJ    P,UUSIDX             ;
117610 / 254000,,117616          JRST      GSOCKA             ;
117611 / 260140,,117624         PUSHJ    P,117624             ;; DUMP THEM INTO HIS CORE IMAGE
                       GSOCKB:
117612 / 271600,,000003          ADDI  UUO,     3             ;
117613 / 260140,,121304         PUSHJ    P,121304             ;; ANY RECEIVE SIDE?
117614 / 254000,,117620          JRST      117620             ;; NO, CLEAR CELLS
117615 / 254000,,117624          JRST      117624             ;; YES, DUMP THEM
                       GSOCKA:
117616 / 260140,,117620         PUSHJ    P,  ZTAB             ;
117617 / 254000,,117612          JRST      GSOCKB             ;
                       ZTAB:
151337 / 402014,,000001         SETZM           1(UUO)        ;
117620 / 256040,,151337          XCTR   XW,151337             ;
151340 / 402014,,000002         SETZM           2(UUO)        ;
117621 / 256040,,151340          XCTR   XW,151340             ;
151341 / 402014,,000003         SETZM           3(UUO)        ;
117622 / 256040,,151341          XCTR   XW,151341             ;
117623 / 263140,,000000          POPJ    P,                   ;
                       DMPTBS:
117624 / 200657,,036740          MOVE  AC1,036740(AC3)        ;
152604 / 202654,,000001         MOVEM  AC1,     1(UUO)        ;
117625 / 256040,,152604          XCTR   XW,152604             ;
117626 / 200657,,037040          MOVE  AC1,037040(AC3)        ;
152605 / 202654,,000002         MOVEM  AC1,     2(UUO)        ;
117627 / 256040,,152605          XCTR   XW,152605             ;
117630 / 200657,,037100          MOVE  AC1,037100(AC3)        ;
152606 / 202654,,000003         MOVEM  AC1,     3(UUO)        ;
117631 / 256040,,152606          XCTR   XW,152606             ;
117632 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO WAIT FOR CONNECTION
                       SWAIT:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
117633 / 256200,,152524          XCTR   XR,152524             ;
117634 / 260140,,121222         PUSHJ    P,GETIDX             ;
117635 / 254000,,120775          JRST      NOCONN             ;
117636 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
117637 / 641640,,300000           TLC  AC1,300000             ;
117640 / 643640,,300000          TLCE  AC1,300000             ;
117641 / 603640,,060000          TLNE  AC1,060000             ;
117642 / 254000,,117660          JRST      SWSTST             ;
117643 / 211640,,000005         MOVNI  AC1,  IOWQ             ;
117644 / 202644,,020574         MOVEM  AC1,JOBQUE(J)          ;
117645 / 205000,,004000         MOVSI        RFCW             ;
117646 / 436006,,000002           ORM      DEVIOS(DDB)        ;
117647 / 135400,,114076           LDB  TEM,114076             ;; PICK UP RFC WAIT TIMEOUT PERIOD
117650 / 260140,,121652         PUSHJ    P,121652             ;; DO A TIMED WAIT
117651 / 254000,,117655          JRST      117655             ;; TIMEOUT. NO CONNECTION
117652 / 205000,,004000         MOVSI        RFCW             ;
117653 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
117654 / 254000,,117633          JRST      117633             ;; IF NO TIME-OUT, GO BACK AND MAKE SURE WE ARE CONNECTED
                       NSW:
117655 / 205000,,004000         MOVSI        RFCW             ;
117656 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;; CLEAR BIT IN MEMORY
117657 / 263140,,000000          POPJ    P,                   ;; IF TIMED OUT, GO BACK TO USER NOW
                       SWSTST:
152604 / 202654,,000001         MOVEM  AC1, STLOC(UUO)        ;
117660 / 256040,,152604          XCTR   XW,152604             ;
117661 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SKIP IF THERE IS ANY INPUT PRESENT
                       INPSKP:
117662 / 332006,,000013         SKIPE         INL(DDB)        ;
117663 / 254000,,037401          JRST      CPOPJ1             ;
117664 / 254000,,121763          JRST      121763             ;; CHECK ON INITIAL ALLOCATION
                       ; MTAPE 13 - SET ALLOCATION
                       ; LOCATION 1 OF THE USER TABLE IS A CODE
                       ;	0 MEANS TAKE LOC 2 AS BIT ALLOCATION AND LOC 3 AS MESSAGE ALLOCATION
                       ;	1 MEANS SET ALLOCATION TO SYSTEM MAXIMUM
                       ;	2 MEANS SET ALLOCATION TO SYSTEM MINIMUM
                       ;	3 MEANS SET ALLOCATION TO SYSTEM DEFAULT
                       ; LOCATION 2 IS THE BIT ALLOCATION
                       ; LOCATION 3 IS THE MESSAGE ALLOCATION
                       USETAL:
153047 / 331054,,000001         SKIPL  TAC,     1(UUO)        ;
117665 / 256200,,153047          XCTR   XR,153047             ;
117666 / 303040,,000003         CAILE  TAC,000003             ;; CHECK CODE FOR LEGAL RANGE
117667 / 254000,,043340          JRST      UUOERR             ;
117670 / 254021,,117671          JRST      @USETTB(TAC)       ;; DISPATCH TO RELEVANT ROUTINE
                       USETTB:
117671 / 000000,,117706                                       ;
117672 / 000000,,117675                                       ;
117673 / 000000,,117700                                       ;
117674 / 000000,,117703                                       ;
                       USETMX:
117675 / 201740,,100000         MOVEI  AC3,100000             ;; PICK UP MAXIMUM ALLOCATIONS
117676 / 201700,,000031         MOVEI  AC2,MAXMAL             ;
117677 / 254000,,117721          JRST       UCHKB             ;
                       USETMN:
117700 / 201740,,000220         MOVEI  AC3,MINBAL             ;
117701 / 201700,,000002         MOVEI  AC2,MINMAL             ;
117702 / 254000,,117721          JRST       UCHKB             ;
                       USETDF:
117703 / 201740,,002420         MOVEI  AC3,002420             ;; USE DEFAULT ALLOCATIONS
117704 / 201700,,000044         MOVEI  AC2,DEFMAL             ;
117705 / 254000,,117721          JRST       UCHKB             ;
                       USETSP:
152531 / 200754,,000002          MOVE  AC3,     2(UUO)        ;
117706 / 256200,,152531          XCTR   XR,152531             ;
152525 / 200714,,000003          MOVE  AC2,     3(UUO)        ;
117707 / 256200,,152525          XCTR   XR,152525             ;
117710 / 305740,,000220         CAIGE  AC3,000220             ;; IS IT ABOVE MINIMUM ALLOCATION?
117711 / 201740,,000220         MOVEI  AC3,000220             ;; NO, GIVE HIM AT LEAST THIS MUCH
117712 / 303740,,100000         CAILE  AC3,100000             ;; IS IT OVER MAXIMUM?
117713 / 201740,,100000         MOVEI  AC3,100000             ;; NO, PUT A LID ON AT AT THE MAXIMUM
117714 / 305700,,000002         CAIGE  AC2,000002             ;; SAME FOR MESSAGE ALLOCATION
117715 / 201700,,000002         MOVEI  AC2,MINMAL             ;
117716 / 303700,,000031         CAILE  AC2,MAXMAL             ;
117717 / 201700,,000031         MOVEI  AC2,MAXMAL             ;
117720 / 254000,,117721          JRST      117721             ;; PROCEED ON TO NEXT PAGE
                       ; UUO TO SET ALLOCATION. HERE ALLOCATION HE WANTS IS IN AC2 & AC3
                       ; PUT IT IN THE DDB AND SEND HIM A CONTROL MESSAGE IF NECESSARY
                       UCHKB:
117721 / 202746,,000017         MOVEM  AC3,  NHBA(DDB)        ;; SET NOMINAL ALLOCATION
117722 / 202706,,000016         MOVEM  AC2,  NHMA(DDB)        ;
117723 / 242740,,777777           LSH  AC3,777777             ;; SET HALFWAY MARKERS TOO FOR SPEED
117724 / 242700,,777777           LSH  AC2,777777             ;
117725 / 202746,,000021         MOVEM  AC3, NHBA2(DDB)        ;
117726 / 202706,,000020         MOVEM  AC2, NHMA2(DDB)        ;
117727 / 260140,,121304         PUSHJ    P,121304             ;; PICK UP CONNECTION INDEX
117730 / 263140,,000000          POPJ    P,                   ;; NONE YET, DON'T HAVE TO TELL HIM ANYTHING
117731 / 200657,,037200          MOVE  AC1,037200(AC3)        ;; PICK UP STATUS BITS
117732 / 641640,,300000           TLC  AC1,300000             ;; SEE IF CONNECTION IS REALLY OPEN YET
117733 / 607640,,060000          TLNN  AC1,060000             ;; OR REALLY CLOSING
117734 / 603640,,300000          TLNE  AC1,300000             ;
117735 / 263140,,000000          POPJ    P,                   ;; NOT REALLY OPEN FOR BUSINESS. LEAVE NOW
117736 / 200617,,036740          MOVE  UUO,036740(AC3)        ;; SAVE HOST-LINK NUMBER HERE
117737 / 200746,,000023          MOVE  AC3,   HBA(DDB)        ;; NOW SEE IF HE NEEDS TO BE ALLOCATED RIGHT NOW
117740 / 200706,,000022          MOVE  AC2,   HMA(DDB)        ;
117741 / 317746,,000017          CAMG  AC3,  NHBA(DDB)        ;; ARE WE DECREASING HIS ALLOCATION?
117742 / 313706,,000016         CAMLE  AC2,  NHMA(DDB)        ;; OF EITHER FLAVOR?
117743 / 254000,,117752          JRST      117752             ;; YES, ASK FOR SOME BACK
117744 / 270746,,000025           ADD  AC3,  BIIL(DDB)        ;
117745 / 270706,,000024           ADD  AC2,  MIIL(DDB)        ;
117746 / 311706,,000020          CAML  AC2, NHMA2(DDB)        ;; IS HE PAST THE HALFWAY MARK?
117747 / 315746,,000021         CAMGE  AC3, NHBA2(DDB)        ;; IN EITHER KIND OF ALLOCATION?
117750 / 260140,,121714         PUSHJ    P,121714             ;; YES, SEND HIM SOME MORE
117751 / 263140,,000000          POPJ    P,                   ;; END OF UUO
                       ; HERE WE DECREMENT HIS ALLOCATION AND ASK FOR SOME BACK IF NEED BE
                       AFSB:
117752 / 274746,,000017           SUB  AC3,  NHBA(DDB)        ;; GET AMOUNT OF BIT ALLOCATION TO ASK FOR
117753 / 335000,,000017        SKIPGE         AC3             ;
117754 / 400740,,000000          SETZ  AC3,                   ;; POSITIVE ONLY
117755 / 274706,,000016           SUB  AC2,  NHMA(DDB)        ;; SAME FOR MESSAGE ALLOCATION
117756 / 335000,,000016        SKIPGE         AC2             ;
117757 / 400700,,000000          SETZ  AC2,                   ;
117760 / 242700,,000007           LSH  AC2,000007             ;; SET UP FOR GETTING 7-BIT FRACTION
117761 / 242740,,000007           LSH  AC3,     7             ;
117762 / 230706,,000022          IDIV  AC2,   HMA(DDB)        ;; DIVIDE WHAT WE WANT BACK BY WHAT HE HAS
117763 / 230746,,000023          IDIV  AC3,   HBA(DDB)        ;
117764 / 242700,,000010           LSH  AC2,     8             ;
117765 / 435717,,000000           ORI  AC2,      (AC3)        ;; PACK THEM INTO ONE WORD
117766 / 505700,,000500          HRLI  AC2,000500             ;; PUT IN OPCODE
117767 / 260140,,121351         PUSHJ    P,121351             ;; GET SOME FREE STORAGE FOR A MESSAGE
117770 / 254000,,121007          JRST      NOCORE             ;
117771 / 242700,,000004           LSH  AC2,000004             ;; LEFT JUSTIFY THE COMMAND WORD
117772 / 202715,,000006         MOVEM  AC2,000006(AC1)        ;; AND PLACE INTO OUTPUT BLOCK
117773 / 402015,,000004         SETZM       TDATA(AC1)        ;; CLEAR OUT JUNK IN LEADER
117774 / 402015,,000005         SETZM      000005(AC1)        ;
117775 / 201700,,000003         MOVEI  AC2,000003             ;; SET WORD COUNT
117776 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;
117777 / 137600,,114063           DPB  UUO,114063             ;; PUT IN THE LINK NUMBER
120000 / 421600,,177400        ANDCMI  UUO,177400             ;; NOW THE HOST NUMBER WITH LINK SET TO ZERO
120001 / 137600,,114057           DPB  UUO,ELINKP             ;
120002 / 201700,,000010         MOVEI  AC2,    10             ;
120003 / 137700,,114060           DPB  AC2, SIZEP             ;
120004 / 201700,,000004         MOVEI  AC2,     4             ;
120005 / 137700,,114061           DPB  AC2,COUNTP             ;
120006 / 254000,,121021          JRST      121021             ;; AND AWAY IT GOES!
                       ; MTAPE 14 - GIVE USER THE CURRENT ALLOCATIONS
                       UGETAL:
120007 / 200046,,000017          MOVE  TAC,  NHBA(DDB)        ;
152551 / 202054,,000001         MOVEM  TAC,     1(UUO)        ;
120010 / 256040,,152551          XCTR   XW,152551             ;
120011 / 200046,,000016          MOVE  TAC,  NHMA(DDB)        ;
152552 / 202054,,000002         MOVEM  TAC,     2(UUO)        ;
120012 / 256040,,152552          XCTR   XW,152552             ;
120013 / 200046,,000023          MOVE  TAC,   HBA(DDB)        ;
152553 / 202054,,000003         MOVEM  TAC,     3(UUO)        ;
120014 / 256040,,152553          XCTR   XW,152553             ;
120015 / 200046,,000022          MOVE  TAC,   HMA(DDB)        ;
152554 / 202054,,000004         MOVEM  TAC,     4(UUO)        ;
120016 / 256040,,152554          XCTR   XW,152554             ;
120017 / 200046,,000025          MOVE  TAC,  BIIL(DDB)        ;
152555 / 202054,,000005         MOVEM  TAC,     5(UUO)        ;
120020 / 256040,,152555          XCTR   XW,152555             ;
120021 / 200046,,000024          MOVE  TAC,  MIIL(DDB)        ;
152556 / 202054,,000006         MOVEM  TAC,     6(UUO)        ;
120022 / 256040,,152556          XCTR   XW,152556             ;
120023 / 200046,,000015          MOVE  TAC,   BAL(DDB)        ;
152557 / 202054,,000007         MOVEM  TAC,     7(UUO)        ;
120024 / 256040,,152557          XCTR   XW,152557             ;
120025 / 200046,,000014          MOVE  TAC,   MAL(DDB)        ;
152560 / 202054,,000010         MOVEM  TAC,    10(UUO)        ;
120026 / 256040,,152560          XCTR   XW,152560             ;
120027 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SEND AN INTERRUPT
                       SNDINT:
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
120030 / 256200,,152524          XCTR   XR,152524             ;
120031 / 260140,,121351         PUSHJ    P,IMPGET             ;
120032 / 254000,,121007          JRST      NOCORE             ;
151337 / 402014,,000001         SETZM       STLOC(UUO)        ;
120033 / 256040,,151337          XCTR   XW,151337             ;
120034 / 260140,,121222         PUSHJ    P,GETIDX             ;
120035 / 254000,,121430          JRST      IMPREL             ;
120036 / 200257,,037200          MOVE  DAT,037200(AC3)        ;
152574 / 202254,,000001         MOVEM  DAT, STLOC(UUO)        ;
120037 / 256040,,152574          XCTR   XW,152574             ;
120040 / 402015,,000004         SETZM       TDATA(AC1)        ;
120041 / 402015,,000005         SETZM      000005(AC1)        ;
120042 / 402015,,000006         SETZM      000006(AC1)        ;
120043 / 201240,,000010         MOVEI  DAT,    10             ;
120044 / 137240,,114060           DPB  DAT, SIZEP             ;
120045 / 201240,,000002         MOVEI  DAT,     2             ;
120046 / 137240,,114061           DPB  DAT,COUNTP             ;
120047 / 201240,,000003         MOVEI  DAT,     3             ;
120050 / 202255,,000001         MOVEM  DAT,   TWC(AC1)        ;
120051 / 200257,,036740          MOVE  DAT,036740(AC3)        ;
120052 / 405240,,177400          ANDI  DAT,177400             ;
120053 / 137240,,114057           DPB  DAT,ELINKP             ;
120054 / 200257,,036740          MOVE  DAT,036740(AC3)        ;
120055 / 137240,,114063           DPB  DAT,OLINKP             ;
120056 / 201240,,000010         MOVEI  DAT,   INS             ;
120057 / 606700,,000001          TRNN  AC2,     1             ;
120060 / 201240,,000007         MOVEI  DAT,   INR             ;
120061 / 137240,,114062           DPB  DAT, OPCDP             ;
120062 / 254000,,121021          JRST        UUOQ             ;
                       ; RELEAS CODE. SEND OUT CLSS IF NOT ALREADY.
                       IMPRLS:
120063 / 331006,,000027         SKIPL         TIM(DDB)        ;; TIME INITIALIZED?
120064 / 370000,,036714           SOS      036714             ;; YES, NOT ANY MORE
120065 / 476006,,000027         SETOM         TIM(DDB)        ;
120066 / 332646,,000013         SKIPE  AC1,   INL(DDB)        ;; ANYTHING STILL ON INPUT LIST?
120067 / 260140,,116517         PUSHJ    P,116517             ;; YES, GIVE IT BACK
120070 / 332000,,036313         SKIPE      036313             ;
120071 / 254000,,120123          JRST        RLDI             ;
120072 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
120073 / 602000,,000100          TRNE        BLOK             ;
120074 / 260140,,121070         PUSHJ    P,121070             ;; IF STILL DATA ON THE LINK, WAIT FOR IT
120075 / 260140,,121270         PUSHJ    P,UUSIDX             ;
120076 / 254000,,120110          JRST      IMPRL3             ;
120077 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
120100 / 603640,,200000          TLNE  AC1,  RFCS             ;
120101 / 603640,,040000          TLNE  AC1,  CLSS             ;
120102 / 254000,,120106          JRST      IMPRL1             ;
120103 / 260140,,122005         PUSHJ    P, USCLS             ;
120104 / 260140,,121270         PUSHJ    P,UUSIDX             ;
120105 / 254000,,120110          JRST      IMPRL3             ;
                       IMPRL1:
120106 / 402017,,037000         SETZM      037000(AC3)        ;
120107 / 260140,,121551         PUSHJ    P,ZEROLK             ;
                       IMPRL3:
120110 / 260140,,121304         PUSHJ    P,UURIDX             ;
120111 / 263140,,000000          POPJ    P,                   ;
120112 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
120113 / 603640,,200000          TLNE  AC1,  RFCS             ;
120114 / 603640,,040000          TLNE  AC1,  CLSS             ;
120115 / 254000,,120121          JRST      IMPRL4             ;
120116 / 260140,,122035         PUSHJ    P, URCLS             ;
120117 / 260140,,121304         PUSHJ    P,UURIDX             ;
120120 / 263140,,000000          POPJ    P,                   ;
                       IMPRL4:
120121 / 402017,,037000         SETZM      037000(AC3)        ;
120122 / 254000,,121551          JRST      121551             ;; RELEASE CONNECTION IF ALL CLSS ARE PROPERLY EXCHANGED
                       ; WE GET HERE IF THE IMP IS DEAD
                       RLDI:
120123 / 260140,,121270         PUSHJ    P,121270             ;; SEE IF HE HAS A SEND SOCKET
120124 / 254000,,120127          JRST       RLDI1             ;
120125 / 402017,,037000         SETZM      037000(AC3)        ;; YES, KILL IT
120126 / 260140,,121551         PUSHJ    P,ZEROLK             ;
                       RLDI1:
120127 / 260140,,121304         PUSHJ    P,UURIDX             ;
120130 / 263140,,000000          POPJ    P,                   ;
120131 / 402017,,037000         SETZM      037000(AC3)        ;
120132 / 254000,,121551          JRST      ZEROLK             ;
                       ; BUFFERED OUTPUT . . .
                       BUFO:
120133 / 260140,,121106         PUSHJ    P,121106             ;; IS HOST ALIVE AND ALL?
120134 / 254000,,120445          JRST      120445             ;; NO, LEAVE WITH ERROR BITS
120135 / 550106,,000010          HRRZ TAC1,DEVOAD(DDB)        ;; PICK UP OUT BUFFER ADDRESS
151466 / 550042,,000001          HRRZ  TAC,     1(TAC1)       ;
120136 / 256200,,151466          XCTR   XR,151466             ;; PICK UP WORD COUNT
120137 / 271100,,000002          ADDI TAC1,000002             ;; MOVE POINTER TO DATA AREA
120140 / 260140,,120154         PUSHJ    P,120154             ;; DO TRANSFER USING USER ADDR IN TAC1 AND WD CT IN TAC
120141 / 260140,,044366         PUSHJ    P,044366             ;; ADVANCE BUFFER
120142 / 254000,,120445          JRST       UUXIT             ;
120143 / 254000,,120133          JRST      120133             ;; TRY FOR ANOTHER ONE
                       ; DUMP MODE OUTPUT . . .
                       DMPO:
120144 / 260140,,121106         PUSHJ    P,UUOOOK             ;
120145 / 254000,,120445          JRST       UUXIT             ;
                       DMPO1:
120146 / 260140,,075766         PUSHJ    P,075766             ;; RETURNS UPLEVEL WHEN DONE
120147 / 213000,,000001         MOVNS      000001             ;; GET POSITIVE WD CT IN TAC
120150 / 261140,,000014          PUSH    P,   UUO             ;
120151 / 260140,,120154         PUSHJ    P,120154             ;; DO TRANSFER
120152 / 262140,,000014           POP    P,000014             ;; GET PTR TO DMP MODE CMD LIST BACK
120153 / 344600,,120144          AOJA  UUO,120144             ;; DO NEXT COMMAND
                       ; ROUTINE TO ACTUALLY DO THE OUTPUT
                       ; ENTER WITH WORD COUNT IN TAC AND USER ADDRESS IN TAC1
                       NEWOX:
120154 / 322040,,037403         JUMPE  TAC,037403             ;; LEAVE IF USER WORD COUNT=0
151763 / 000001,,000001           XWD 1,1                     ;
120155 / 270140,,151763           ADD    P,151763             ;; BUMP STACK FOR FULL WORD FLAG
                       OUTAGN:
120156 / 260140,,121253         PUSHJ    P,121253             ;; WAIT FOR ALLOCATION IF NECESSARY
120157 / 254000,,120277          JRST      120277             ;; LEAVE ON ERRORS
120160 / 505100,,440000          HRLI TAC1,440000             ;; MAKE INPUT POINTER INTO BYTE POINTER
120161 / 200017,,037140          MOVE      037140(AC3)        ;; CONNECTION INDEX SET UP BY ALLOK
153011 / 000000,,000002                                       ;
153011 / 300600,,000002 POINT 6,00000002,11                   ;
120162 / 137000,,153011           DPB      153011             ;
120163 / 200740,,000000          MOVE  AC3,                   ;
120164 / 200757,,114100          MOVE  AC3,   BPW(AC3)        ;; GET BITS PER WORD IN AC3
120165 / 230740,,000000          IDIV  AC3,                   ;; AC3 NOW HAS BYTES PER WORD
153011 / 000000,,000002                                       ;
153011 / 300600,,000002 POINT 6,00000002,11                   ;
120166 / 135000,,153011           LDB      153011             ;
120167 / 476003,,000000         SETOM            (P)          ;; ASSUME FULL WORD MODE
120170 / 306000,,000010          CAIN           8             ;
120171 / 254000,,120177          JRST      120177             ;; ALWAYS DO BYTE AT A TIME FOR 8 BIT BYTES
120172 / 200406,,000015          MOVE  TEM,   BAL(DDB)        ;; HOW MUCH ALLOCATION HAS HE GIVEN US?
120173 / 303400,,000400         CAILE  TEM,000400             ;; IF LESS THAN 8 WORDS, DO BYTE AT A TIME
120174 / 305040,,000010         CAIGE  TAC,000010             ;; IF LESS THAN 8 WORDS, IS MORE EFFICIENT TO GO BYTE AT A TIME
120175 / 254000,,120177          JRST      120177             ;; BYTE AT A TIME
120176 / 254000,,120201          JRST        GOFW             ;
                       GOBAAT:
120177 / 221057,,000000         IMULI  TAC,      (AC3)        ;; IF BYTE AT A TIME, CONVERT TO BYTE COUNT
120200 / 402003,,000000         SETZM            (P)          ;; CLEAR FULL WORD FLAG
                       GOFW:
120201 / 201417,,000000         MOVEI  TEM,      (AC3)        ;; SAVE BYTES/WD IN TEM
                       NEWMSO:
120202 / 260140,,121351         PUSHJ    P,121351             ;; PICK UP FIRST BUFFER OF MESSAGE
120203 / 254000,,121007          JRST      NOCORE             ;
120204 / 402015,,000004         SETZM       TDATA(AC1)        ;; CLEAR SPARE BITS IN LEADER
120205 / 402015,,000005         SETZM      000005(AC1)        ;
120206 / 260140,,121270         PUSHJ    P,121270             ;; PICK UP THE LINK TABLE INDEX AGAIN
120207 / 254000,,120775          JRST      NOCONN             ;
120210 / 200017,,036740          MOVE      036740(AC3)        ;; PICK UP HOST-LINK NUMBER
120211 / 137000,,114057           DPB      114057             ;; PUT IN DESTINATION FIELD
120212 / 200017,,037140          MOVE      037140(AC3)        ;; PICK UP BYTE SIZE
120213 / 137000,,114060           DPB      114060             ;; SET INTO LEADER
120214 / 200255,,000002          MOVE  DAT,  TLEN(AC1)        ;; PICK UP LENGTH OF DATA PORTION OF BUFFER
120215 / 202255,,000001         MOVEM  DAT,   TWC(AC1)        ;; PUT INTO INITIAL WORD COUNT
120216 / 275240,,000002          SUBI  DAT,000002             ;; KNOCK OFF TWO FOR LEADER WORDS
120217 / 261140,,000015          PUSH    P,000015             ;; SAVE FIRST BLOCK OF MESSAGE ON STACK
120220 / 403700,,000012         SETZB  AC2,000012             ;; CLEAR BYTE COUNT AND BIT COUNT
120221 / 335003,,777777        SKIPGE      777777(P)          ;; FULL WORD OR BYTE AT A TIME?
120222 / 254000,,120326          JRST      120326             ;; FULL WORD MODE
                       ; FULL WORD MODE OUTPUT - BYTE AT A TIME
                       ; HERE IS THE ACTUAL OUTPUT LOOP
                       NBLOOP:
120223 / 261140,,000015          PUSH    P,000015             ;; PUT CURRENT BLOCK ON THE STACK
120224 / 221250,,000000         IMULI  DAT,      (TEM)        ;; DAT NOW HAS NUMBER OF FREE BYTES IN BUFFER
120225 / 402015,,000000         SETZM            (AC1)        ;
120226 / 316643,,777777          CAMN  AC1,777777(P)          ;; IS THIS THE FIRST BLOCK
120227 / 271640,,000002          ADDI  AC1,000002             ;; YES, BUMP POINTER PAST LEADER
120230 / 271640,,000004          ADDI  AC1,000004             ;; BUMP BUFFER POINTER TO PAST OVERHEAD WORDS IN BLOCK
120231 / 505640,,440000          HRLI  AC1,440000             ;; MAKE UP BYTE POINTER TO BUFFER
153012 / 000000,,000015                                       ;
153012 / 300600,,000015 POINT 6,00000015,11                   ;
120232 / 137000,,153012           DPB      153012             ;
                       NWLOOP:
120233 / 270500,,000000           ADD UCHN,                   ;; ADD NUMBER OF BITS IN THIS NEXT TRANSFER
120234 / 307500,,017334          CAIG UCHN,017334             ;; MORE THAN THE IMP CAN STAND?
120235 / 313506,,000015         CAMLE UCHN,   BAL(DDB)        ;; HAVE WE OVERSHOT THE ALLOCATION?
120236 / 254000,,120270          JRST      120270             ;; YES, SEND THE MESSAGE NOW AND WAIT FOR MORE ALLOCATION
152355 / 134440,,000002          ILDB DSER,  TAC1             ;
120237 / 256040,,152355          XCTR  XLB,152355             ;; PICK UP DATA BYTE
120240 / 136440,,000015          IDPB DSER,000015             ;; PLACE INTO MESSAGE BUFFER
120241 / 271700,,000001          ADDI  AC2,000001             ;; BUMP BYTE COUNT
120242 / 306000,,000010          CAIN           8             ;
120243 / 364040,,120255          SOJA  TAC,120255             ;; CHECK FOR LAST WORD
120244 / 363040,,120275         SOJLE  TAC,120275             ;; BUMP USER DATA COUNT, IF END OF MESSAGE, LEAVE
                       NWLOP1:
120245 / 367240,,120233          SOJG  DAT,120233             ;; BUMP FREE BYTE COUNT
120246 / 260140,,121351         PUSHJ    P,121351             ;; GET ANOTHER BUFFER
120247 / 254000,,121007          JRST      NOCORE             ;
120250 / 262140,,000014           POP    P,000014             ;; GET BACK LAST ONE
120251 / 552654,,000000         HRRZM  AC1,      (UUO)        ;; LINK NEW ONE TO OLD ONE
120252 / 200255,,000002          MOVE  DAT,  TLEN(AC1)        ;; FILL THE WORD COUNT
120253 / 202255,,000001         MOVEM  DAT,   TWC(AC1)        ;
120254 / 254000,,120223          JRST      NBLOOP             ;
                       NWTNLP:
120255 / 322040,,120275         JUMPE  TAC,ENDNOW             ;
120256 / 303040,,000004         CAILE  TAC,000004             ;; SKIP IF DOWN TO LAST WORD
120257 / 254000,,120245          JRST      NWLOP1             ;
120260 / 306040,,000004          CAIN  TAC,     4             ;
151323 / 400000,,000001                                       ;
120261 / 270100,,151323           ADD TAC1,151323             ;; TAC1 ← 441000,,LAST WORD OF USER BUF
120262 / 201740,,000001         MOVEI  AC3,     1             ;
120263 / 242741,,777777           LSH  AC3,777777(TAC)        ;; SHIFT TO BIT POSITION IN LAST WORD OF USER BUF
151550 / 616742,,000000          TDNN  AC3,      (TAC1)       ;
120264 / 256200,,151550          XCTR   XR,151550             ;
120265 / 254000,,120245          JRST      120245             ;; BIT CLEAR, OK TO USE THAT BYTE
120266 / 133000,,000002           IBP      000002             ;; ADVANCE THE BYTE POINTER
120267 / 364040,,120255          SOJA  TAC,120255             ;; TRY NEXT BYTE
                       OUTNOW:
120270 / 274500,,000000           SUB UCHN,                   ;; SUBTRACT OFF THE AMOUNT WE ADDED IN ALREADY
120271 / 260140,,120301         PUSHJ    P,120301             ;; FINISH OFF BLOCK
120272 / 260140,,121253         PUSHJ    P,121253             ;; DO WE HAVE ANY ALLOCATION?
120273 / 254000,,120277          JRST      120277             ;; NO, LEAVE NOW
120274 / 254000,,120202          JRST      120202             ;; YES, MAKE UP A NEW MESSAGE
                       ENDNOW:
120275 / 275240,,000001          SUBI  DAT,     1             ;
120276 / 260140,,120301         PUSHJ    P, UUFNO             ;
                       SPOPJ:
151763 / 000001,,000001           XWD 1,1                     ;
120277 / 274140,,151763           SUB    P,151763             ;; NORMALIZE STACK WITHOUT CLOBBERING AN AC
120300 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO CORRECT WORD COUNT, ALLOCATION, AND SEND OFF MESSAGE
                       UUFNO:
120301 / 261140,,000010          PUSH    P,   TEM             ;
120302 / 400400,,000000          SETZ  TEM,                   ;
                       UUFILL:
153153 / 000000,,000015                                       ;
153153 / 360600,,000015 POINT 6,00000015,5                    ;
120303 / 135740,,153153           LDB  AC3,153153             ;
120304 / 315740,,000000         CAMGE  AC3,                   ;; IS POSITION GREATER THAN BYTE LENGTH?
120305 / 254000,,120310          JRST      120310             ;; NO, WORD IS FULL
120306 / 136400,,000015          IDPB  TEM,000015             ;; YES, FILL THE WORD WITH ANOTHER ZERO BYTE
120307 / 254000,,120303          JRST      UUFILL             ;
                       UUFIN:
120310 / 213000,,000012         MOVNS      000012             ;; NEGATE BIT COUNT
120311 / 272506,,000015          ADDM UCHN,   BAL(DDB)        ;; UPDATE ALLOCATION
120312 / 370006,,000014           SOS         MAL(DDB)        ;; NOTE ONE MORE MESSAGE GONE
120313 / 200643,,777776          MOVE  AC1,777776(P)          ;; PICK UP ADDRESS OF CURRENT BLOCK
120314 / 200403,,000000          MOVE  TEM,      (P)          ;; PICK UP BYTES/WD FROM STACK
120315 / 232240,,000010         IDIVM  DAT,000010             ;; CONVERT FREE BYTE COUNT TO FREE WORD COUNT IN TEM
120316 / 213000,,000010         MOVNS      000010             ;; NEGATE FREE WORD COUNT
120317 / 272415,,000001          ADDM  TEM,   TWC(AC1)        ;; MAKE INTO FULL WORD COUNT
120320 / 200643,,777775          MOVE  AC1,777775(P)          ;; PICK UP TOP TO MESSAGE
120321 / 137700,,114061           DPB  AC2,114061             ;; SET BYTE COUNT THIS TRANSFER
120322 / 260140,,121021         PUSHJ    P,121021             ;; SEND IT OUT
120323 / 262140,,000010           POP    P,000010             ;; GET BACK THE BYTES/WD.
151777 / 000003,,000003           XWD 3,3                     ;
120324 / 274140,,151777           SUB    P,151777             ;
120325 / 254023,,000003          JRST      @     3(P)         ;
                       ; BUFFERED OUTPUT. GET HERE TO DO A BLT INTO THE MESSAGE BUFFERS.
                       BFOHW:
120326 / 200400,,000000          MOVE  TEM,                   ;; PICK UP BITS PER WORD
120327 / 200410,,114100          MOVE  TEM,   BPW(TEM)        ;; FROM MAJIK TABLE
120330 / 201750,,000000         MOVEI  AC3,      (TEM)        ;
120331 / 221741,,000000         IMULI  AC3,      (TAC)        ;; AC3 NOW HAS NUMBER OF BITS IN TRANSFER
120332 / 311746,,000015          CAML  AC3,   BAL(DDB)        ;; IS THIS OVER THE ALLOCATION?
120333 / 200746,,000015          MOVE  AC3,   BAL(DDB)        ;; YES, ONLY TRANSFER THAT MUCH
120334 / 303740,,017500         CAILE  AC3,017500             ;; MORE THAN THE IMP CAN HANDLE?
120335 / 201740,,017500         MOVEI  AC3,017500             ;; YES, JUST ONE BIT MESSAGE AT A TIME.
120336 / 201517,,000000         MOVEI UCHN,      (AC3)        ;; SAVE BITS PER MESSAGE IN UCHN
120337 / 231750,,000000         IDIVI  AC3,      (TEM)        ;; AC3 IS NOW WORD COUNT OF THIS TRANSFER
120340 / 312643,,000000          CAME  AC1,      (P)          ;
120341 / 254000,,120346          JRST        HWNB             ;
120342 / 135000,,114060           LDB      114060             ;; PICK UP BYTE SIZE OF CONNECTION
120343 / 232400,,000000         IDIVM  TEM,                   ;; GET BYTES PER WORD IN IOS
120344 / 221017,,000000         IMULI            (AC3)        ;; IOS NOW HAS NUMBER OF BYTES IN MESSAGE
120345 / 137000,,114061           DPB      114061             ;; USE THIS AS BYTE COUNT
                       HWNB:
120346 / 402015,,000000         SETZM            (AC1)        ;; CLEAR LINKAGE WORD
120347 / 201717,,000000         MOVEI  AC2,      (AC3)        ;
120350 / 301705,,000000          CAIL  AC2,      (DAT)        ;; MORE WORDS IN XFR THAN IN BUFFER?
120351 / 201705,,000000         MOVEI  AC2,      (DAT)        ;; YES, TRANSFER WHOLE BUFFER FULL
120352 / 260140,,122443         PUSHJ    P,122443             ;; RELOCATE → RESULT IN DSER
120353 / 505511,,000000          HRLI UCHN,      (DSER)       ;; AC2 HAS WD CT THIS BUFFER
120354 / 312643,,000000          CAME  AC1,      (P)          ;; IS THIS THE FIRST BLOCK?
120355 / 541515,,000004          HRRI UCHN, TDATA(AC1)        ;; UCHN IS BLT POINTER
120356 / 316643,,000000          CAMN  AC1,      (P)          ;
120357 / 541515,,000006          HRRI UCHN,000006(AC1)        ;; IS FIRST BLOCK, BUMP POINTER PAST LEADER
120360 / 201612,,000000         MOVEI  UUO,      (UCHN)       ;
120361 / 271616,,777777          ADDI  UUO,777777(AC2)        ;
120362 / 251514,,000000           BLT UCHN,      (UUO)        ;
120363 / 275756,,000000          SUBI  AC3,      (AC2)        ;; BUMP WORD COUNT THIS TRANSFER
120364 / 271116,,000000          ADDI TAC1,      (AC2)        ;; ADD IN WORDS IN BLOCK TO USER POINTER
120365 / 271456,,000000          ADDI DSER,      (AC2)        ;
120366 / 275056,,000000          SUBI  TAC,      (AC2)        ;; DECREMENT WORDS IN ENTIRE OUTPUT
120367 / 316643,,000000          CAMN  AC1,      (P)          ;; IS THIS THE STARTING BLOCK
120370 / 271700,,000002          ADDI  AC2,000002             ;; YES, SKIP OVER THE LEADER
120371 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;; SET WORD COUNT INTO BUFFER
120372 / 323040,,120410        JUMPLE  TAC,120410             ;; IF NONE LEFT, LEAVE
120373 / 323740,,120404        JUMPLE  AC3,120404             ;; MORE WDS LEFT, BUT NOT THIS TRANSFER
120374 / 200600,,000015          MOVE  UUO,000015             ;; GET ANOTHER BLOCK
120375 / 260140,,121351         PUSHJ    P,IMPGET             ;
120376 / 254000,,121007          JRST      NOCORE             ;
120377 / 402015,,000000         SETZM            (AC1)        ;
120400 / 552654,,000000         HRRZM  AC1,      (UUO)        ;; LINK US ON TO THE LAST ONE
120401 / 200255,,000002          MOVE  DAT,  TLEN(AC1)        ;; PICK UP LENGTH OF DATA PORTION OF BUFFER
120402 / 202255,,000001         MOVEM  DAT,   TWC(AC1)        ;
120403 / 254000,,120346          JRST        HWNB             ;
                       ; HERE WE HAVE DECIDED TO SEND THE MESSAGE, WHETHER THERE IS MORE IN THE BUFFER OR NOT
                       HWDOX:
120404 / 262140,,000015           POP    P,000015             ;; GET BACK ADDRESS OF MESSAGE
120405 / 260140,,120414         PUSHJ    P,UPDALL             ;
120406 / 260140,,121021         PUSHJ    P,  UUOQ             ;
120407 / 254000,,120156          JRST      OUTAGN             ;
                       HWEND:
120410 / 262140,,000015           POP    P,   AC1             ;
120411 / 260140,,120414         PUSHJ    P,UPDALL             ;
151763 / 000001,,000001           XWD 1,1                     ;
120412 / 274140,,151763           SUB    P,151763             ;; SKIP OVER FULL WORD FLAG
120413 / 254000,,121021          JRST        UUOQ             ;
                       ; ROUTINE TO UPDATE THE ALLOCATION FROM THE MESSAGE
                       UPDALL:
120414 / 261140,,000016          PUSH    P,   AC2             ;
120415 / 261140,,000017          PUSH    P,   AC3             ;
120416 / 135700,,114060           LDB  AC2, SIZEP             ;
120417 / 135740,,114061           LDB  AC3,COUNTP             ;
120420 / 221756,,000000         IMULI  AC3,      (AC2)        ;
120421 / 213000,,000017         MOVNS         AC3             ;
120422 / 272746,,000015          ADDM  AC3,   BAL(DDB)        ;
120423 / 370006,,000014           SOS         MAL(DDB)        ;
120424 / 262140,,000017           POP    P,   AC3             ;
120425 / 262140,,000016           POP    P,   AC2             ;
120426 / 263140,,000000          POPJ    P,                   ;
                       ; IMP INPUT UUOS - BUFFERED MODE AND DUMP MODE
                       BUFI:
120427 / 550106,,000007          HRRZ TAC1,DEVIAD(DDB)        ;; PICK UP ADDRESS OF LOSER BUFFER
151517 / 554042,,000000          HLRZ  TAC,      (TAC1)       ;
120430 / 256200,,151517          XCTR   XR,151517             ;
120431 / 421040,,400000        ANDCMI  TAC,400000             ;
120432 / 201442,,000000         MOVEI DSER,      (TAC1)       ;
120433 / 271441,,777777          ADDI DSER,777777(TAC)        ;; GET ADDRESS OF LAST WORD IN BUFFER IN DSER
152630 / 207011,,000000         MOVSS            (DSER)       ;
120434 / 256240,,152630          XCTR  XRW,152630             ;; ADDRESS CHECK IT BY GETTIN ILM ON ILLEGAL ADDRESS
120435 / 275040,,000001          SUBI  TAC,000001             ;; REDUCE WORD COUNT TO SKIP OVER BUFFER HEAD
120436 / 271100,,000002          ADDI TAC1,     2             ;
120437 / 260140,,120467         PUSHJ    P,120467             ;; DO THE INPUT
120440 / 254000,,120447          JRST      120447             ;; ERROR OR EOF
120441 / 550706,,000007          HRRZ  AC2,DEVIAD(DDB)        ;; PICK UP BUFFER ADDRESS
152575 / 202256,,000001         MOVEM  DAT,     1(AC2)        ;
120442 / 256040,,152575          XCTR   XW,152575             ;; SET WORD COUNT IN BUFFER
120443 / 260140,,044454         PUSHJ    P,044454             ;; ADVANCE THE BUFFER
120444 / 254000,,120445          JRST       UUXIT             ;
                       UUXIT:
120445 / 200006,,000002          MOVE      DEVIOS(DDB)        ;; UUOCON EXPECTS THIS
120446 / 263140,,000000          POPJ    P,                   ;
                       ENDCHK:
120447 / 623000,,000040          TLZE      000040             ;; DID WE HIT EOF?
120450 / 435000,,020000           ORI      020000             ;; YES, SET EOF BIT
120451 / 602000,,000200          TRNE      000200             ;; TIMED OUT.
120452 / 435000,,200000           ORI      200000             ;; YES, GIVE ERROR BIT SO UUOCON WON'T SHIT ON US
120453 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
120454 / 263140,,000000          POPJ    P,                   ;
                       ; DUMP MODE INPUT
                       DMPI:
120455 / 260140,,075766         PUSHJ    P,075766             ;; RETURNS UPLEVEL ON END OF COMMAND LIST
120456 / 213000,,000001         MOVNS         TAC             ;
152627 / 207002,,000000         MOVSS            (TAC1)       ;
120457 / 256240,,152627          XCTR  XRW,152627             ;
120460 / 201442,,000000         MOVEI DSER,      (TAC1)       ;
120461 / 271441,,777777          ADDI DSER,777777(TAC)        ;
152630 / 207011,,000000         MOVSS            (DSER)       ;
120462 / 256240,,152630          XCTR  XRW,152630             ;
                       DMPIT:
120463 / 260140,,120467         PUSHJ    P,120467             ;; DO AN INPUT
120464 / 254000,,120447          JRST      ENDCHK             ;
120465 / 327040,,120463         JUMPG  TAC,120463             ;; IF WE HAVEN'T GOTTEN WHAT HE ASKED FOR, GO BACK FOR MORE
120466 / 344600,,120455          AOJA  UUO,120455             ;; CHECK FOR MORE COMMANDS
                       ; COMMON INPUT ROUTINE.
                       ; ENTER WITH USER ADDRESS IN TAC1 AND DESIRED WORD COUNT IN TAC
                       ; RETURNS COUNT OF WORDS TRANSFERRED IN DAT
                       ; RETURNS +1 IF ERROR OR NO DATA AVAILABLE, +2 ON SOME DATA TRANSFERRED
                       INPT:
120467 / 260140,,121122         PUSHJ    P,121122             ;; MAKE SURE HOST ALIVE AND ALL
120470 / 263140,,000000          POPJ    P,                   ;; HOST DEAD
                       INPTM:
120471 / 400240,,000000          SETZ  DAT,                   ;; CLEAR WORD COUNT
120472 / 332646,,000013         SKIPE  AC1,   INL(DDB)        ;; IS THERE SOME INPUT WAITING FOR US?
120473 / 254000,,120536          JRST      120536             ;; YES, GO GIVE IT TO LOSER
120474 / 200657,,037200          MOVE  AC1,037200(AC3)        ;; PICK UP STATUS BITS
120475 / 607640,,020000          TLNN  AC1,020000             ;; HAS HE SENT US A CLS?
120476 / 254000,,120502          JRST      120502             ;; NO, WAIT FOR SOME MORE DATA
120477 / 205000,,000040         MOVSI      000040             ;; YES, END OF FILE
120500 / 437006,,000002           ORB      DEVIOS(DDB)        ;
120501 / 263140,,000000          POPJ    P,                   ;
                       INPWT:
120502 / 260140,,121763         PUSHJ    P,121763             ;; CHECK IF INITIAL ALLOCATION DONE YET
120503 / 205000,,200000         MOVSI      200000             ;; NO, GO INTO INPUT WAIT FOR IT
120504 / 436006,,000002           ORM      DEVIOS(DDB)        ;
120505 / 135400,,114077           LDB  TEM,114077             ;; PICK UP INPUT WAIT TIMEOUT
120506 / 260140,,121652         PUSHJ    P,121652             ;; WAIT FOR INPUT OR TIMEOUT
120507 / 254000,,120533          JRST      120533             ;; LEAVE IF TIMEOUT
120510 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
120511 / 606000,,302600          TRNN      302600             ;
120512 / 260140,,121304         PUSHJ    P,121304             ;; GET CONNECTION INDEX BACK
120513 / 263140,,000000          POPJ    P,                   ;; LEAVE ON ERRORS
120514 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
120515 / 607640,,060000          TLNN  AC1,060000             ;; SEE IF CONNECTION WENT AWAY
120516 / 254000,,120467          JRST        INPT             ;
120517 / 332006,,000013         SKIPE         INL(DDB)        ;; DID ANY INPUT SNEAK IN AFTER THE CLOSE?
120520 / 254000,,120530          JRST      120530             ;; YES, SET UP CONNECTION INDEX AND INPUT FURTHER
120521 / 205000,,200000         MOVSI      200000             ;; NO, WAIT FOR MORE INPUT FOR A LITTLE WHILE
120522 / 436006,,000002           ORM      DEVIOS(DDB)        ;
120523 / 135400,,114077           LDB  TEM,114077             ;; PICK UP HIS TIMEOUT
120524 / 305400,,000002         CAIGE  TEM,000002             ;; FOUR SECONDS OR MORE, PLEASE.
120525 / 201400,,000002         MOVEI  TEM,     2             ;
120526 / 260140,,121652         PUSHJ    P,121652             ;; WAIT
120527 / 255000,,000000          JFCL                         ;
                       INPTOK:
120530 / 260140,,121304         PUSHJ    P,121304             ;; PICK UP CONNECTION INDEX AGAIN
120531 / 263140,,000000          POPJ    P,                   ;; NOBODY HOME, LEAVE
120532 / 254000,,120471          JRST      120471             ;; GOT IT. CHECK INL AGAIN.
                       ISETEB:
120533 / 201000,,200000         MOVEI      200000             ;; SET ERROR BIT SO WE CAN GET OUT OF UUOCON
120534 / 437006,,000002           ORB      DEVIOS(DDB)        ;
120535 / 263140,,000000          POPJ    P,                   ;
                       ; COMMON INPUT ROUTINE. READ DATA OUT OF INPUT LIST AND INTO USER CORE
                       INPT1:
120536 / 335715,,000002        SKIPGE  AC2,  TLEN(AC1)        ;; HAS THIS LIST BEEN INITIALIZED?
120537 / 254000,,120621          JRST      120621             ;; YES, GO ON WITH IT
120540 / 135740,,114060           LDB  AC3,114060             ;; PICK UP MESSAGE BYTE SIZE
120541 / 135700,,114061           LDB  AC2,114061             ;; AND LENGTH OF MESSAGE
120542 / 221756,,000000         IMULI  AC3,      (AC2)        ;; GET NUMBER OF BITS IN MESSAGE
120543 / 213000,,000017         MOVNS         AC3             ;
120544 / 370706,,000024           SOS  AC2,  MIIL(DDB)        ;; NOTE ONE LESS MESSAGE IN INPUT LIST
120545 / 273746,,000025          ADDB  AC3,  BIIL(DDB)        ;; NOTE THAT MANY LESS BITS NOW IN INPUT LIST
120546 / 270706,,000022           ADD  AC2,   HMA(DDB)        ;; ADD IN HOW MUCH HE HAS NOW
120547 / 270746,,000023           ADD  AC3,   HBA(DDB)        ;; IN BOTH FLAVORS
120550 / 313706,,000020         CAMLE  AC2, NHMA2(DDB)        ;; NOW HAS EITHER ONE DROPPED BELOW HALF THE NOMINAL VALUE
120551 / 317746,,000021          CAMG  AC3, NHBA2(DDB)        ;
120552 / 260140,,121714         PUSHJ    P,121714             ;; GET SOME MORE ALLOCATION
120553 / 135740,,114060           LDB  AC3,114060             ;; PICK UP BYTE SIZE OF MESSAGE
120554 / 201700,,000044         MOVEI  AC2,000044             ;; FIRST GET BYTES/WD IN AC3
120555 / 232700,,000017         IDIVM  AC2,   AC3             ;
120556 / 135700,,114061           LDB  AC2,114061             ;; NOW GET WDS/THIS MESSAGE
120557 / 231717,,000000         IDIVI  AC2,      (AC3)        ;
120560 / 332000,,000017         SKIPE         AC3             ;
120561 / 271700,,000001          ADDI  AC2,000001             ;; AC2 IS WD CT THIS MESSAGE
120562 / 200755,,000001          MOVE  AC3,   TWC(AC1)        ;; PICK UP WD CT THIS BLOCK
120563 / 275740,,000002          SUBI  AC3,000002             ;; SUBTRACT OFF LEADER
120564 / 202755,,000001         MOVEM  AC3,   TWC(AC1)        ;
120565 / 201515,,000000         MOVEI UCHN,      (AC1)        ;; SAVE BLOCK ADDRESS
                       COMPTB:
120566 / 303717,,000000         CAILE  AC2,      (AC3)        ;; IS WD CT IN MESSAGE LESS THAN WD CT THIS BLOCK?
120567 / 254000,,120601          JRST      120601             ;; NO, GO ON TO NEXT BLOCK
120570 / 202712,,000001         MOVEM  AC2,   TWC(UCHN)       ;; YES, CORRECT IT TO SMALLER VALUE
120571 / 261140,,000015          PUSH    P,   AC1             ;
120572 / 550652,,000000          HRRZ  AC1,      (UCHN)       ;; NOW GET RID OF ANY SPURIOUS PADDING WHAT MAY BE
120573 / 513012,,000000         HLLZS            (UCHN)       ;
120574 / 332000,,000015         SKIPE         AC1             ;
120575 / 260140,,116506         PUSHJ    P,RELLST             ;
120576 / 262140,,000015           POP    P,   AC1             ;
120577 / 201715,,000006         MOVEI  AC2,000006(AC1)        ;; PICK UP POINTER TO DATA PAST LEADER
120600 / 254000,,120621          JRST      120621             ;; AND GO ON WITH INPUT
                       GTNXB:
120601 / 275717,,000000          SUBI  AC2,      (AC3)        ;; KNOCK OFF AMOUNT IN THIS BUFFER
120602 / 550512,,000000          HRRZ UCHN,      (UCHN)       ;; AND MOVE ON TO NEXT BUFFER
120603 / 326500,,120617         JUMPN UCHN, GNXWC             ;
120604 / 265040,,043640           JSP  TAC,UUOMES             ;
                       GNXWC:
120617 / 200752,,000001          MOVE  AC3,   TWC(UCHN)       ;; PICK UP WC THIS BUFFER
120620 / 254000,,120566          JRST      COMPTB             ;
                       ; HERE WE HAVE CORRECTED THE WORD COUNTS IN THE BUFFERS AND ARE READY TO DO THE INPUT
                       INPT2:
120621 / 200755,,000001          MOVE  AC3,   TWC(AC1)        ;; PICK UP DATA WORD COUNT
120622 / 301741,,000000          CAIL  AC3,      (TAC)        ;; DOES THE USER WANT LESS THAN THERE IS?
120623 / 201741,,000000         MOVEI  AC3,      (TAC)        ;; YES, JUST GIVE HIM WHAT HE WANTS
120624 / 260140,,122443         PUSHJ    P,122443             ;; DO SOFTWARE RELOCATION, TAC1 TO DSER
120625 / 201511,,000000         MOVEI UCHN,      (DSER)       ;; MAKE UP BLT PTR INTO LOSER CORE
120626 / 505456,,000000          HRLI DSER,      (AC2)        ;
120627 / 271517,,777777          ADDI UCHN,777777(AC3)        ;
120630 / 251452,,000000           BLT DSER,      (UCHN)       ;
120631 / 271717,,000000          ADDI  AC2,      (AC3)        ;; BUMP POINTER INTO MESSAGE BUFFER
120632 / 271257,,000000          ADDI  DAT,      (AC3)        ;; ADD INTO NUMBER OF WORDS TRANSFERRED
120633 / 275057,,000000          SUBI  TAC,      (AC3)        ;; NOTE THAT HE HAS GOTTEN THAT MANY WORDS
120634 / 271117,,000000          ADDI TAC1,      (AC3)        ;; INCREMENT USER ADDRESS
120635 / 661700,,400000           TLO  AC2,400000             ;; TURN ON BIT FLAGING PARTIALLY EMPTIED BUFFER
120636 / 202715,,000002         MOVEM  AC2,  TLEN(AC1)        ;
120637 / 213000,,000017         MOVNS      000017             ;; DECREMENT COUNT OF WORDS LEFT IN MESSAGE BUFFER
120640 / 273755,,000001          ADDB  AC3,   TWC(AC1)        ;
120641 / 327740,,120657         JUMPG  AC3,120657             ;; BUFFER NOT EMPTY, SEE IF HE WANTS ANY MORE
120642 / 550515,,000000          HRRZ UCHN,      (AC1)        ;; PICK UP ADDRESS OF NEXT BLOCK IN MESSAGE
120643 / 322500,,120661         JUMPE UCHN,120661             ;; IF NONE, END OF LIST
120644 / 554455,,000000          HLRZ DSER,      (AC1)        ;; THERE IS A BLOCK. PASS DOWN CDR POINTER TO IT
120645 / 506452,,000000          HRLM DSER,      (UCHN)       ;
120646 / 542506,,000013          HRRM UCHN,   INL(DDB)        ;; AND MOVE US INTO TOP POSITION
120647 / 554446,,000013          HLRZ DSER,   INL(DDB)        ;; ARE WE ALSO THE END?
120650 / 306455,,000000          CAIN DSER,      (AC1)        ;
120651 / 506506,,000013          HRLM UCHN,   INL(DDB)        ;
120652 / 260140,,121430         PUSHJ    P,121430             ;; RELEASE THE FREE STORAGE
120653 / 200640,,000012          MOVE  AC1,  UCHN             ;
120654 / 661500,,400000           TLO UCHN,400000             ;; SET THE PARTIALLY EMPTY BIT SO WE WON'T TRY TO SKIP OVER THE LEADER
120655 / 271500,,000004          ADDI UCHN,000004             ;; SKIP OVER THE OVERHEAD WORDS
120656 / 202515,,000002         MOVEM UCHN,  TLEN(AC1)        ;
                       INPMOR:
120657 / 327040,,120536         JUMPG  TAC,120536             ;; HE WANTS MORE, SEE IF WE CAN GIVE IT TO HIM
120660 / 254000,,037401          JRST      037401             ;; NO MORE
                       UNLST:
120661 / 554515,,000000          HLRZ UCHN,      (AC1)        ;; NO MORE BLOCKS, MOVE TO NEXT MESSAGE
120662 / 542506,,000013          HRRM UCHN,   INL(DDB)        ;
120663 / 336000,,000012         SKIPN        UCHN             ;
120664 / 402006,,000013         SETZM         INL(DDB)        ;
120665 / 260140,,121430         PUSHJ    P,IMPREL             ;
120666 / 332640,,000012         SKIPE  AC1,  UCHN             ;
120667 / 254000,,120657          JRST      INPMOR             ;
120670 / 402006,,000013         SETZM         INL(DDB)        ;; END OF INPUT LIST
120671 / 254000,,037401          JRST      CPOPJ1             ;
                       ; CLOSE CODE. DOESN'T REALLY DO MUCH EXCEPT FLUSH BUFFERS AND SEND OUT CLSS
                       CLSO:
120672 / 332000,,036313         SKIPE      036313             ;
120673 / 263140,,000000          POPJ    P,                   ;
120674 / 607300,,004200          TLNN  DDB,004200             ;; OUTPUT BUFFER SET UP?
120675 / 254000,,120701          JRST      120701             ;; NO, FORGET ABOUT FLUSHING LAST BUFFER
120676 / 135640,,037574           LDB  AC1,037574             ;; WHAT MODE ARE WE IN?
120677 / 305640,,000016         CAIGE  AC1,000016             ;; DUMP MAYBE?
120700 / 260140,,065347         PUSHJ    P,065347             ;; NO, DO LAST OUTPUT FOR BUFFERED MODE
                       CLSO1:
120701 / 260140,,121270         PUSHJ    P,121270             ;; PICK UP LINK TABLE INDEX
120702 / 263140,,000000          POPJ    P,                   ;
120703 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
120704 / 602000,,000100          TRNE      000100             ;; IS THERE DATA ON THE LINK?
120705 / 260140,,121070         PUSHJ    P,121070             ;; YES, WAIT FOR IT
120706 / 260140,,121270         PUSHJ    P,UUSIDX             ;
120707 / 263140,,000000          POPJ    P,                   ;
120710 / 205700,,040000         MOVSI  AC2,040000             ;; SEE IF WE HAVE SENT A CLS YET
120711 / 612717,,037200          TDNE  AC2,037200(AC3)        ;
120712 / 263140,,000000          POPJ    P,                   ;; YES, ONE IS ENOUGH
120713 / 254000,,122005          JRST      122005             ;; SEND OUT A SEND-SIDE CLS
                       ; CLOSE INPUT
                       CLSI:
120714 / 336000,,036313         SKIPN      036313             ;
120715 / 260140,,121304         PUSHJ    P,UURIDX             ;
120716 / 263140,,000000          POPJ    P,                   ;
120717 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
120720 / 602000,,000100          TRNE        BLOK             ;
120721 / 260140,,121070         PUSHJ    P,RFNMWT             ;
120722 / 260140,,121304         PUSHJ    P,UURIDX             ;
120723 / 263140,,000000          POPJ    P,                   ;
120724 / 205700,,040000         MOVSI  AC2,  CLSS             ;
120725 / 612717,,037200          TDNE  AC2,037200(AC3)        ;
120726 / 263140,,000000          POPJ    P,                   ;
120727 / 254000,,122035          JRST      122035             ;; SEND OUT A RECEIVE-SIDE CLS
                       ; UTILITY ROUTINES FOR UUO-LEVEL STUFF. ROUTINES TO SEND STR OR RTS
                       ; CONNECTION INDEX MUST BE IN AC3
                       ; POINTER TO USER TABLE MUST BE IN UUO
                       ; DDB MUST BE SET UP
                       ; CAN ONLY BE CALLED AT UUO LEVEL BECAUSE IT DOES XCTR'S
                       SNDRFC:
120730 / 552317,,037000         HRRZM  DDB,037000(AC3)        ;
120731 / 260140,,121351         PUSHJ    P,121351             ;; GET SOME FREE STORAGE
120732 / 260140,,116464         PUSHJ    P,116464             ;; IF AT CLOCK LEVEL, WAIT FOR IT
152524 / 200714,,000002          MOVE  AC2, LSLOC(UUO)        ;
120733 / 256200,,152524          XCTR   XR,152524             ;
120734 / 201400,,000001         MOVEI  TEM,000001             ;; WHAT FLAVOR RETURN MESSAGE?
120735 / 602700,,000001          TRNE  AC2,     1             ;
120736 / 201400,,000002         MOVEI  TEM,000002             ;; SEND SIDE, GIVE HIM A STR INSTEAD
120737 / 260140,,121222         PUSHJ    P,121222             ;; PICK UP INDEX OF CONNECTION AGAIN
120740 / 254000,,120775          JRST      120775             ;; NONE THERE!
120741 / 260140,,120743         PUSHJ    P, MAKRF             ;
120742 / 254000,,121021          JRST        UUOQ             ;
                       ; ROUTINE TO MAKE UP AN RFC BLOCK. MUST HAVE BLOCK IN AC1, CONNECTION INDEX IN AC3,
                       ; OPCODE (STR OR RTS) IN TEM, DEVICE DATA BLOCK ADDRESS IN DDB
                       MAKRF:
120743 / 205700,,200000         MOVSI  AC2,200000             ;; NOTE AN RFC GOING OUT
120744 / 260140,,121211         PUSHJ    P, CSTAT             ;
120745 / 260140,,116314         PUSHJ    P,CLRBLK             ;
120746 / 200717,,036740          MOVE  AC2,036740(AC3)        ;
120747 / 421700,,000377        ANDCMI  AC2,000377             ;; CONTROL MESSAGES GO OUT ON LINK ZERO
120750 / 137700,,114057           DPB  AC2,ELINKP             ;
120751 / 201700,,000010         MOVEI  AC2,    10             ;
120752 / 137700,,114060           DPB  AC2, SIZEP             ;
120753 / 201700,,000012         MOVEI  AC2,    12             ;
120754 / 137700,,114061           DPB  AC2,COUNTP             ;
120755 / 137400,,114062           DPB  TEM, OPCDP             ;
120756 / 200717,,037040          MOVE  AC2,037040(AC3)        ;
120757 / 260140,,116665         PUSHJ    P,PSOCK1             ;
120760 / 200717,,037100          MOVE  AC2,037100(AC3)        ;
120761 / 260140,,116671         PUSHJ    P,PSOCK2             ;
120762 / 201700,,000005         MOVEI  AC2,     5             ;
120763 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;
120764 / 302400,,000001          CAIE  TEM,000001             ;; WHAT FLAVOR?
120765 / 254000,,120772          JRST      120772             ;; SEND SIDE, GIVE HIM A BYTE SIZE
120766 / 260140,,121502         PUSHJ    P,121502             ;; GET NEW AND UNIQUE LINK NUMBER
152100 / 000017,,036740                                       ;
152100 / 001017,,036740 POINT 8,17036740,35                   ;
120767 / 137700,,152100           DPB  AC2,152100             ;
120770 / 137700,,114064           DPB  AC2, SZLKP             ;
120771 / 263140,,000000          POPJ    P,                   ;
                       SNDBS:
120772 / 200717,,037140          MOVE  AC2,037140(AC3)        ;
120773 / 137700,,114064           DPB  AC2, SZLKP             ;
120774 / 263140,,000000          POPJ    P,                   ;
                       ; ERROR ROUTINE FOR NO CONNECTION
                       NOCONN:
120775 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ; ERROR ROUTINE FOR NO CORE AT UUO LEVEL
                       NOCORE:
121007 / 350000,,037330           AOS       NNCOR             ;
121010 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
121011 / 254000,,121020          JRST      121020             ;; NO, SKIP OVER ERROR MESSAGE
121012 / 260140,,044320         PUSHJ    P,044320             ;
121013 / 260140,,044120         PUSHJ    P,DISERR             ;
121014 / 000000,,154412                                       ;
121015 / 000200,,037330        DECQQQ       NNCOR             ;
121016 / 000000,,152275                                       ;
121017 / 777777,,777777                                       ;
121020 / 254000,,043340          JRST      UUOERR             ;
                       ; ROUTINE TO SEND OUT A MESSAGE AT UUO LEVEL. WAITS FOR
                       ; LINK TO UNBLOCK IF NEED BE. IF IMP DEAD, RELEASES STORAGE.
                       ; ENTER WITH MESSAGE IN AC1
                       UUOQ:
121021 / 336000,,036313         SKIPN      036313             ;; IMP DOWN?
121022 / 254000,,121026          JRST      121026             ;; NO, GO AHEAD
                       UUODD:
121023 / 201000,,202000         MOVEI      202000             ;; YES, GIVE ERROR BITS
121024 / 437006,,000002           ORB      DEVIOS(DDB)        ;
121025 / 254000,,116506          JRST      RELLST             ;
                       UUODQ:
121026 / 261140,,000001          PUSH    P,   TAC             ;
121027 / 261140,,000010          PUSH    P,   TEM             ;
121030 / 135040,,114056           LDB  TAC,114056             ;; PICK UP LINK NUMBER
121031 / 322040,,121043         JUMPE  TAC,121043             ;; IF LINK ZERO, CHECK IT SEPARATELY
121032 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
121033 / 606000,,000100          TRNN      000100             ;; ARE WE BLOCKED?
121034 / 254000,,121040          JRST      121040             ;; NO, GO AHEAD
121035 / 260140,,121070         PUSHJ    P,121070             ;; YES, WAIT FOR LINK TO BECOME UNBLOCKED
121036 / 602000,,302400          TRNE      302400             ;
121037 / 254000,,121057          JRST      UUOQRL             ;
                       UUOQNW:
121040 / 435000,,000100           ORI      000100             ;; NOTE LINK BLOCKED NOW
121041 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
121042 / 254000,,121064          JRST       UUOQO             ;
                       UUOQ0:
121043 / 260140,,114654         PUSHJ    P,114654             ;; MAKE UP POINTER INTO 8-WORD HOST TABLES
121044 / 616756,,036730          TDNN  AC3,L0BLOK(AC2)        ;; SEE IF CONTROL LINK BLOCKED
121045 / 254000,,121063          JRST      121063             ;; NOT BLOCKED, GO AHEAD
121046 / 205000,,100000         MOVSI      100000             ;; NOTE WAITING FOR CONTROL LINK
121047 / 436006,,000002           ORM      DEVIOS(DDB)        ;
121050 / 350000,,036726           AOS      036726             ;; NOTE ONE MORE WAITOR
121051 / 135400,,114074           LDB  TEM,114074             ;; PICK UP TIME TO WAIT FOR RFNM
121052 / 260140,,121652         PUSHJ    P,    TW             ;
121053 / 254000,,121061          JRST      121061             ;;TIMED OUT - CLEAR BIT AND GO AWAY
121054 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
121055 / 606000,,302400          TRNN      302400             ;
121056 / 254000,,121043          JRST      121043             ;; GO BACK AND CHECK AGAIN
                       UUOQRL:
121057 / 260140,,116506         PUSHJ    P,RELLST             ;
121060 / 254000,,121065          JRST      UUOQXT             ;
                       UUOQR1:
121061 / 412756,,036730        ANDCAM  AC3,L0BLOK(AC2)        ;
121062 / 254000,,121057          JRST      UUOQRL             ;
                       UUOQ0N:
121063 / 436756,,036730           ORM  AC3,L0BLOK(AC2)        ;; NOTE LINK BLOCKED NOW
                       UUOQO:
121064 / 260140,,122377         PUSHJ    P,122377             ;; SEND MESSAGE OUT
                       UUOQXT:
121065 / 262140,,000010           POP    P,   TEM             ;
121066 / 262140,,000001           POP    P,   TAC             ;
121067 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO WAIT FOR THE LINK TO CLEAR
                       ; CALL WITH J, DDB AND IOS SET UP
                       ; RESTORES IOS, CLOBBERS TEM
                       RFNMWT:
121070 / 332000,,036313         SKIPE      036313             ;
121071 / 263140,,000000          POPJ    P,                   ;
121072 / 205000,,040000         MOVSI       BLOKW             ;
121073 / 436006,,000002           ORM      DEVIOS(DDB)        ;
121074 / 261140,,000010          PUSH    P,   TEM             ;
121075 / 135400,,114074           LDB  TEM,RFNMTP             ;
121076 / 260140,,121652         PUSHJ    P,    TW             ;
153622 / 262140,,000010           POP    P,   TEM             ;
153623 / 336000,,036721         SKIPN      036721             ;
153624 / 476000,,036721         SETOM      036721             ;
153625 / 263140,,000000          POPJ    P,                   ;
121077 / 254000,,153622          JRST      153622             ;
121100 / 262140,,000010           POP    P,   TEM             ;
121101 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
121102 / 606000,,302400          TRNN      302400             ;
121103 / 606000,,000100          TRNN        BLOK             ;
121104 / 263140,,000000          POPJ    P,                   ;
121105 / 254000,,121070          JRST      121070             ;; GO BACK AND WAIT SOME MORE
                       ; ROUTINE TO BLESS UUO LEVEL OUTPUTS BASED ON HOST STATUS.
                       UUOOOK:
121106 / 260140,,121270         PUSHJ    P,UUSIDX             ;
121107 / 263140,,000000          POPJ    P,                   ;
121110 / 260140,,121131         PUSHJ    P,121131             ;; CHECK FOR CONNECTION
121111 / 263140,,000000          POPJ    P,                   ;; NONE THERE OR HOST DEAD
121112 / 260140,,121270         PUSHJ    P,121270             ;; GET INDEX INTO LINK TABLE
121113 / 254000,,120775          JRST      NOCONN             ;
121114 / 200717,,037200          MOVE  AC2,037200(AC3)        ;
121115 / 607700,,020000          TLNN  AC2,020000             ;; HAS HE SENT US A CLS?
121116 / 254000,,037401          JRST      037401             ;; NO, OUTPUT IS OK
121117 / 201000,,200000         MOVEI      200000             ;; YES, ERROR
121120 / 437006,,000002           ORB      DEVIOS(DDB)        ;
121121 / 263140,,000000          POPJ    P,                   ;
                       UUOIOK:
121122 / 260140,,121304         PUSHJ    P,UURIDX             ;
121123 / 263140,,000000          POPJ    P,                   ;
121124 / 260140,,121131         PUSHJ    P,UUOCHK             ;
121125 / 263140,,000000          POPJ    P,                   ;
121126 / 260140,,121304         PUSHJ    P,121304             ;; PICK UP LINK TABLE INDEX
121127 / 254000,,120775          JRST      NOCONN             ;
121130 / 254000,,037401          JRST      CPOPJ1             ;
                       ; ROUTINE TO CHECK FOR PROPER CONNECTION AND HOST DEAD.
                       ; SKIPS ON SUCCESS. FAILURE MEANS EITHER HOST DEAD OR NO CONNECTION.
                       UUOCHK:
121131 / 332000,,036313         SKIPE      036313             ;
121132 / 263140,,000000          POPJ    P,                   ;
121133 / 200717,,037200          MOVE  AC2,037200(AC3)        ;
121134 / 607700,,200000          TLNN  AC2,200000             ;; HAS RFC BEEN SENT?
121135 / 254000,,120775          JRST      120775             ;; NO, NOTE CONNECTION NOT OPEN YET
121136 / 603700,,100000          TLNE  AC2,100000             ;; YES, HAS IT BEEN ACKNOWLEDGED YET?
121137 / 254000,,037401          JRST      037401             ;; YES, SUCCESS
121140 / 205000,,004000         MOVSI      004000             ;; NO, WAIT FOR IT
121141 / 436006,,000002           ORM      DEVIOS(DDB)        ;
121142 / 135400,,114076           LDB  TEM,114076             ;; DON'T WAIT FOR MORE THAN 5 MINUTES
121143 / 261157,,037040          PUSH    P,037040(AC3)        ;; SAVE SOMETHING SO WE CAN RESET AC3 AFTER TIME WAIT
121144 / 260140,,121652         PUSHJ    P,121652             ;; DO A TIMED WAIT
121145 / 254000,,121155          JRST      121155             ;; ERROR RETURN IF TIMEOUT
121146 / 262140,,000016           POP    P,000016             ;; RETRIEVE LOCAL SOCKET NUMBER
121147 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
121150 / 602000,,300000          TRNE      300000             ;
121151 / 263140,,000000          POPJ    P,                   ;; LEAVE ON ERROR
121152 / 260140,,121222         PUSHJ    P,121222             ;; GET CURRENT AC3 (COULD'VE CHANGED DURING WAIT)
121153 / 263140,,000000          POPJ    P,                   ;; ERROR - AC3 NOT ONLY CHANGED, ITS GONE FOREVER!?!?
121154 / 254000,,121131          JRST      121131             ;; GO THROUGH THE LOOP AGAIN
                       UUOCHL:
121155 / 262140,,000016           POP    P,   AC2             ;
121156 / 263140,,000000          POPJ    P,                   ;; ERROR RETURN BECAUSE OF TIMEOUT
                       SETERR:
121157 / 435000,,200000           ORI      200000             ;; SET ERROR BIT
121160 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
121161 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO INITIALIZE A CONNECTION
                       ; ENTER WITH CONNECTION INDEX IN AC3
                       ; LOCAL SOCKET NUMBER IN AC2
                       ; FOREIGN SOCKET NUMBER IN TEM
                       ; HOST-LINK NUMBER IN DAT
                       ; POINTER TO USER TABLE IN UUO
                       CLRSKT:
121162 / 202717,,037040         MOVEM  AC2,037040(AC3)        ;; SET LOCAL SOCKET NUMBER
121163 / 202417,,037100         MOVEM  TEM,037100(AC3)        ;; AND FOREIGN SOCKET NUMBER
121164 / 202257,,036740         MOVEM  DAT,036740(AC3)        ;; AND HOST-LINK NUMBER
152504 / 200254,,000004          MOVE  DAT, BSLOC(UUO)        ;
121165 / 256200,,152504          XCTR   XR,152504             ;
121166 / 602700,,000001          TRNE  AC2,000001             ;;IF A SEND SOCKET, THEN
121167 / 202257,,037140         MOVEM  DAT,037140(AC3)        ;; SET BYTE SIZE
121170 / 402017,,037240         SETZM      037240(AC3)        ;
121171 / 402017,,037200         SETZM      037200(AC3)        ;
121172 / 552317,,037000         HRRZM  DDB,037000(AC3)        ;
121173 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO REQUEUE SOMEONE INTO THE RUN QUEUE
                       ; ENTER WITH J CONTAINING THE JOB NUMBER
                       QRUN:
121174 / 135200,,037575           LDB    J, PJOBN             ;
121175 / 331006,,000027         SKIPL         TIM(DDB)        ;; MAKE SURE TIMEOUT IS CLEARED
121176 / 370000,,036714           SOS      036714             ;; NOTE ONE LESS WAITOR
121177 / 476006,,000027         SETOM         TIM(DDB)        ;
121200 / 214444,,020574          MOVM DSER,JOBQUE(J)          ;
121201 / 302440,,000005          CAIE DSER,  IOWQ             ;
121202 / 263140,,000000          POPJ    P,                   ;
121203 / 200444,,026114          MOVE DSER,JBTSTS(J)          ;
121204 / 607440,,400000          TLNN DSER,   RUN             ;
121205 / 263140,,000000          POPJ    P,                   ;
121206 / 211440,,000014         MOVNI DSER,  RUNQ             ;
121207 / 202444,,020574         MOVEM DSER,JOBQUE(J)          ;
121210 / 254000,,046027          JRST       REQUE             ;
                       ; ROUTINE TO CHANGE THE STATUS BITS
                       ; ENTER WITH STATUS BIT TO SET IN AC2
                       ; CONNECTION INDEX IN AC3
                       CSTAT:
121211 / 661700,,400000           TLO  AC2,  ANYC             ;
121212 / 436717,,037200           ORM  AC2,037200(AC3)        ;
121213 / 261140,,000006          PUSH    P,   DDB             ;
121214 / 336317,,037000         SKIPN  DDB,037000(AC3)        ;
121215 / 254000,,121220          JRST      CSTAT1             ;
121216 / 205700,,000020         MOVSI  AC2,INTIMS             ;
121217 / 260140,,116527         PUSHJ    P,INTCOM             ;
                       CSTAT1:
121220 / 262140,,000006           POP    P,   DDB             ;
121221 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO GET A CONNECTION INDEX FROM A LOCAL SOCKET NUMBER IN AC2
                       ; RETURNS INDEX IN AC3
                       GETIDX:
121222 / 336740,,037301         SKIPN  AC3, FFLNK             ;
121223 / 263140,,000000          POPJ    P,                   ;
                       GETID1:
121224 / 316717,,037040          CAMN  AC2,037040(AC3)        ;
121225 / 254000,,037401          JRST      CPOPJ1             ;
121226 / 367740,,121224          SOJG  AC3,GETID1             ;
121227 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO WAIT FOR ALLOCATION
                       ALLOCW:
121230 / 332000,,036313         SKIPE      036313             ;
121231 / 263140,,000000          POPJ    P,                   ;
121232 / 205000,,020000         MOVSI        ALLW             ;
121233 / 436006,,000002           ORM      DEVIOS(DDB)        ;
121234 / 261140,,000010          PUSH    P,   TEM             ;
121235 / 211400,,000005         MOVNI  TEM,000005             ;; NO INTERNAL TIMEOUT FOR THIS
121236 / 202404,,020574         MOVEM  TEM,JOBQUE(J)          ;
121237 / 135400,,114075           LDB  TEM,114075             ;; WE WILL WAIT ONLY SO LONG FOR ALLOCATION
121240 / 260140,,121652         PUSHJ    P,    TW             ;
153356 / 262140,,000010           POP    P,000010             ;; GET OUR AC BACK
153357 / 254000,,121246          JRST      ALLXIT             ;
121241 / 254000,,153356          JRST      153356             ;
121242 / 262140,,000010           POP    P,   TEM             ;
121243 / 200006,,000002          MOVE      DEVIOS(DDB)        ;; CLEAR ALLOCATION WAIT BIT
121244 / 606000,,302600          TRNN      302600             ;
121245 / 350003,,000000           AOS            (P)          ;
                       ALLXIT:
121246 / 205000,,020000         MOVSI        ALLW             ;
121247 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
121250 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO CHECK ALLOCATION AND WAIT FOR IT IF NECESSARY
                       ALLOK1:
121251 / 260140,,121230         PUSHJ    P,121230             ;; NO, WAIT FOR SOME ROOM
121252 / 263140,,000000          POPJ    P,                   ;; LEAVE ON ERRORS
                       ALLOK:
121253 / 260140,,121270         PUSHJ    P,121270             ;; PICK UP INDEX INTO LINK TABLE ANEW
121254 / 254000,,120775          JRST      120775             ;; NONE THERE! UNTHINKABLE!
121255 / 200017,,037200          MOVE      037200(AC3)        ;; PICK UP STATUS BITS
121256 / 603000,,060000          TLNE      060000             ;; HAVE WE BEEN CLOSED?
121257 / 254000,,121265          JRST      121265             ;; YES, LEAVE NOW, SET ERROR BITS
121260 / 200017,,037140          MOVE      037140(AC3)        ;; PICK UP BYTE SIZE
121261 / 333006,,000014        SKIPLE         MAL(DDB)        ;; DO WE HAVE ANY MESSAGE ALLOCATION?
121262 / 313006,,000015         CAMLE         BAL(DDB)        ;; IS THERE ROOM FOR AT LEASE ONE BYTE?
121263 / 254000,,121251          JRST      ALLOK1             ;
121264 / 254000,,037401          JRST      037401             ;; YES, GO AHEAD
                       ALLERS:
121265 / 201000,,200000         MOVEI      IODERR             ;
121266 / 437006,,000002           ORB      DEVIOS(DDB)        ;; SET ERROR BITS TO GET THROUGH UUOCON WITHOUT LOSING
121267 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO GET LINK TABLE INDEX FROM A DDB POINTER - SEND SIDE
                       UUSIDX:
121270 / 336740,,037301         SKIPN  AC3, FFLNK             ;
121271 / 263140,,000000          POPJ    P,                   ;
121272 / 261140,,000006          PUSH    P,   DDB             ;
121273 / 550300,,000006          HRRZ  DDB,   DDB             ;
                       UUSID1:
121274 / 200717,,037040          MOVE  AC2,037040(AC3)        ;; WHAT GENDER SOCKET
121275 / 606700,,000001          TRNN  AC2,     1             ;
121276 / 254000,,121301          JRST      UUSID2             ;
121277 / 316317,,037000          CAMN  DDB,037000(AC3)        ;
121300 / 354003,,777777          AOSA      777777(P)          ;;SUCCESS. SKIP RETURN
                       UUSID2:
121301 / 367740,,121274          SOJG  AC3,UUSID1             ;
121302 / 262140,,000006           POP    P,   DDB             ;
121303 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO GET LINK TABLE INDEX FROM A DDB POINTER - RECEIVE SIDE
                       UURIDX:
121304 / 336740,,037301         SKIPN  AC3, FFLNK             ;
121305 / 263140,,000000          POPJ    P,                   ;
121306 / 261140,,000006          PUSH    P,   DDB             ;
121307 / 550300,,000006          HRRZ  DDB,   DDB             ;
                       UURID1:
121310 / 200717,,037040          MOVE  AC2,037040(AC3)        ;; WHAT GENDER SOCKET
121311 / 602700,,000001          TRNE  AC2,     1             ;
121312 / 254000,,121315          JRST      UURID2             ;
121313 / 316317,,037000          CAMN  DDB,037000(AC3)        ;
121314 / 354003,,777777          AOSA      777777(P)          ;;SUCCESS
                       UURID2:
121315 / 367740,,121310          SOJG  AC3,UURID1             ;
121316 / 262140,,000006           POP    P,   DDB             ;
121317 / 263140,,000000          POPJ    P,                   ;
                       ; THIS IS CALLED AT CONNECT AND LISTEN TO DETERMINE
                       ; IF THERE IS ANOTHER SOCKET OPEN ON THIS DDB, AND IF IT IS
                       ; NOT THE SEND-RECEIVE MATE, KILL IT WITHOUT TOO MUCH ADO.
                       ; ENTER WITH SOCKET NUMBER TO BE OPENED IN AC2
                       NSCHEC:
121320 / 336000,,036313         SKIPN      036313             ;
121321 / 336740,,037301         SKIPN  AC3, FFLNK             ;
121322 / 263140,,000000          POPJ    P,                   ;
121323 / 431700,,000001          XORI  AC2,000001             ;; PRODUCE THE MATING SOCKET NUMBER
121324 / 201646,,000000         MOVEI  AC1,      (DDB)        ;
                       NSCLOP:
121325 / 316657,,037000          CAMN  AC1,037000(AC3)        ;; IS THIS THE SAME DDB?
121326 / 316717,,037040          CAMN  AC2,037040(AC3)        ;; YES, IS IT THE APPROPRIATE SOCKET?
153372 / 367740,,121325          SOJG  AC3,NSCLOP             ;
153373 / 263140,,000000          POPJ    P,                   ;
121327 / 254000,,153372          JRST      153372             ;
121330 / 200717,,037040          MOVE  AC2,037040(AC3)        ;; PICK UP THE LOSING SOCKET NUMBER
121331 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
121332 / 602000,,000100          TRNE        BLOK             ;
121333 / 260140,,121070         PUSHJ    P,121070             ;; WAIT FOR ANY DATA ON THE LINK TO BO BY
121334 / 260140,,121222         PUSHJ    P,121222             ;; GET BACK THE INDEX TO THE STRANGE SOCKET
121335 / 263140,,000000          POPJ    P,                   ;
121336 / 200657,,037200          MOVE  AC1,037200(AC3)        ;
121337 / 603640,,200000          TLNE  AC1,  RFCS             ;
121340 / 603640,,040000          TLNE  AC1,  CLSS             ;
121341 / 254000,,121347          JRST      NSCZLK             ;
121342 / 261140,,000016          PUSH    P,   AC2             ;
121343 / 260140,,122005         PUSHJ    P, USCLS             ;
121344 / 262140,,000016           POP    P,   AC2             ;
121345 / 260140,,121222         PUSHJ    P,GETIDX             ;
121346 / 263140,,000000          POPJ    P,                   ;
                       NSCZLK:
121347 / 402017,,037000         SETZM      037000(AC3)        ;
121350 / 254000,,121551          JRST      ZEROLK             ;
                       ; FREE STORAGE MANAGER FOR IMP SERVICE
                       IMPGET:
121351 / 261140,,000016          PUSH    P,   AC2             ;
121352 / 261140,,000017          PUSH    P,   AC3             ;
121353 / 201740,,000050         MOVEI  AC3,  TLNG             ;
121354 / 260140,,073353         PUSHJ    P, FSGET             ;
121355 / 254000,,121407          JRST      121407             ;
121356 / 337000,,036716         SKIPG      036716             ;; NEED ANY SPARES?
121357 / 254000,,121373          JRST      121373             ;; NO
121360 / 261140,,000015          PUSH    P,000015             ;; YES, SAVE THIS BLOCK AND GET SOME
                       IMPGE1:
121361 / 201740,,000050         MOVEI  AC3,  TLNG             ;
121362 / 260140,,073353         PUSHJ    P, FSGET             ;
121363 / 254000,,121372          JRST      121372             ;; NO MORE, LEAVE WITH THE GOODIES
121364 / 700600,,001010          CONO   PI,IMPOFF             ;
121365 / 250640,,036715          EXCH  AC1,IMPFSL             ;
121366 / 552660,,036715         HRRZM  AC1,@IMPFSL            ;
121367 / 700600,,002010          CONO   PI, IMPON             ;
121370 / 373000,,036716         SOSLE      036716             ;; NOTE ONE LESS BLOCK NEEDED
121371 / 254000,,121361          JRST      121361             ;; IF ANY MORE, GO GET THEM
                       IMPGX:
121372 / 262140,,000015           POP    P,   AC1             ;
                       IMPGSX:
121373 / 550755,,777777          HRRZ  AC3,777777(AC1)        ;; PICK UP POINTER TO TOP OF BLOCK
121374 / 554757,,000000          HLRZ  AC3,      (AC3)        ;; GET SIZE OF BLOCK
121375 / 275740,,400006          SUBI  AC3,400006             ;; SUBTRACT OFF OVERHEAD WORDS
121376 / 202755,,000002         MOVEM  AC3,  TLEN(AC1)        ;; PUT THAT AS LENGTH OF BLOCK
121377 / 202755,,000001         MOVEM  AC3,   TWC(AC1)        ;; AND AS FULL WORD COUNT
121400 / 260140,,121443         PUSHJ    P,121443             ;; CHECK IT OUT FIRST
121401 / 254000,,121351          JRST      121351             ;; BAD BLOCK, TRY FOR ANOTHER
121402 / 350003,,777776           AOS      777776(P)          ;; SET SKIP RETURN
121403 / 402015,,000000         SETZM            (AC1)        ;; CLEAR OUT LINKAGE WORD
                       IMPGEX:
121404 / 262140,,000017           POP    P,   AC3             ;
121405 / 262140,,000016           POP    P,   AC2             ;
121406 / 263140,,000000          POPJ    P,                   ;
                       ; HERE WE CAN'T GET FS FROM THE SYSTEM, SEE IF WE CAN SCROUNGE A BLOCK
                       SCROUN:
121407 / 700600,,001010          CONO   PI,IMPOFF             ;
121410 / 336640,,036715         SKIPN  AC1,IMPFSL             ;
121411 / 254000,,121426          JRST      SCRNG1             ;
121412 / 200755,,000000          MOVE  AC3,      (AC1)        ;
121413 / 202740,,036715         MOVEM  AC3,IMPFSL             ;
121414 / 700600,,002010          CONO   PI, IMPON             ;
121415 / 260140,,121443         PUSHJ    P,121443             ;; IS IT A VALID BLOCK?
121416 / 254000,,121422          JRST      121422             ;; NO, FLUSH SPARE LIST
121417 / 350000,,037337           AOS      NSPSUS             ;
121420 / 350000,,036716           AOS      IMPSPN             ;
121421 / 254000,,121373          JRST      IMPGSX             ;
                       SCRERR:
121422 / 402000,,036715         SETZM      036715             ;; BAD BLOCK, KILL SPARE LIST
121423 / 201640,,000010         MOVEI  AC1,000010             ;; AND REFILL IT
121424 / 202640,,036716         MOVEM  AC1,IMPSPN             ;
121425 / 254000,,121404          JRST      121404             ;; GIVE ERROR RETURN
                       SCRNG1:
121426 / 700600,,002010          CONO   PI, IMPON             ;
121427 / 254000,,121404          JRST      IMPGEX             ;
                       ; ROUTINE TO RELEASE FREE STORAGE
                       ; REPLENISHES SPARE LIST IF NECESSARY
                       IMPREL:
121430 / 405640,,777777          ANDI  AC1,777777             ;
121431 / 260140,,121443         PUSHJ    P, LEGAL             ;
121432 / 263140,,000000          POPJ    P,                   ;
121433 / 337000,,036716         SKIPG      IMPSPN             ;
121434 / 254000,,074163          JRST      FSGIVE             ;
121435 / 370000,,036716           SOS      IMPSPN             ;
121436 / 700600,,001010          CONO   PI,IMPOFF             ;
121437 / 250640,,036715          EXCH  AC1,IMPFSL             ;
121440 / 202660,,036715         MOVEM  AC1,@IMPFSL            ;
121441 / 700600,,002010          CONO   PI, IMPON             ;
121442 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO CHECK THE LEGALITY OF A FS BLOCK
                       ; RETURNS +1 IF BLOCK BAD
                       ; RETURNS +2 IF BLOCK OK
                       LEGAL:
121443 / 336000,,000500         SKIPN      000500             ;; ARE WE DEBUGGING?
121444 / 254000,,037401          JRST      037401             ;; NO, LEAVE IMMEDIATELY
121445 / 261140,,000016          PUSH    P,   AC2             ;
121446 / 261140,,000017          PUSH    P,   AC3             ;
121447 / 550715,,777777          HRRZ  AC2,777777(AC1)        ;
121450 / 554756,,000000          HLRZ  AC3,      (AC2)        ;; PICK UP COUNT HALF-WORD
121451 / 306740,,400060          CAIN  AC3,400060             ;
121452 / 254000,,121474          JRST      LEGPCH             ;
                       LEGERR:
121453 / 260140,,000316         PUSHJ    P,PUSHIT             ;
121454 / 260140,,044320         PUSHJ    P,044320             ;
121455 / 260140,,044120         PUSHJ    P,DISERR             ;
121456 / 000000,,154132                                       ;
121457 / 000143,,777756        LOCQQQ      777756(P)          ;
121460 / 000000,,152752                                       ;
121461 / 000143,,777755        LOCQQQ      777755(P)          ;
121462 / 000000,,152752                                       ;
121463 / 000143,,777754        LOCQQQ      777754(P)          ;
121464 / 000000,,152752                                       ;
121465 / 000143,,777753        LOCQQQ      777753(P)          ;
121466 / 000000,,152275                                       ;
121467 / 777777,,777777                                       ;
121470 / 260140,,000341         PUSHJ    P, POPIT             ;
121471 / 262140,,000017           POP    P,   AC3             ;
121472 / 262140,,000016           POP    P,   AC2             ;
121473 / 263140,,000000          POPJ    P,                   ;
                       LEGPCH:
121474 / 275700,,000060          SUBI  AC2,000060             ;
121475 / 302715,,777776          CAIE  AC2,777776(AC1)        ;
121476 / 254000,,121453          JRST      LEGERR             ;
121477 / 262140,,000017           POP    P,   AC3             ;
121500 / 262140,,000016           POP    P,   AC2             ;
121501 / 254000,,037401          JRST      CPOPJ1             ;
                       ; ROUTINE TO ASSIGN A NEW LINK NUMBER
                       ; ENTER WITH CONNECTION INDEX IN AC3
                       ; RETURNS LINK NUMBER IN AC2
                       GNLNK:
121502 / 261140,,000015          PUSH    P,   AC1             ;
121503 / 261140,,000011          PUSH    P,  DSER             ;
121504 / 200700,,036725          MOVE  AC2,036725             ;; PICK UP ONE PLUS LAST ASSIGNED LINK NUMBER
121505 / 301700,,000012          CAIL  AC2,000012             ;; LESS THAN MINIMUM LINK NUMBER?
121506 / 303700,,000073         CAILE  AC2,000073             ;; GREATER THAN MAXIMUM LINK NUMBER?
121507 / 201700,,000012         MOVEI  AC2,000012             ;; YES, START AT THE BOTTOM AGAIN
121510 / 202700,,036725         MOVEM  AC2,LSTLNK             ;
121511 / 271700,,000001          ADDI  AC2,     1             ;
                       GNLNK5:
121512 / 336640,,037301         SKIPN  AC1,037301             ;; SCAN DOWN LINK TABLE FOR DUPLICATES
121513 / 254000,,121522          JRST      GNLNK6             ;
                       GNLNK1:
152077 / 000015,,036740                                       ;
152077 / 001015,,036740 POINT 8,15036740,35                   ;
121514 / 135240,,152077           LDB  DAT,152077             ;
121515 / 306256,,000000          CAIN  DAT,      (AC2)        ;; SAME LINK?
121516 / 254000,,121526          JRST      121526             ;; YES, SEE IF IT IS THE SAME HOST TOO
121517 / 316700,,036725          CAMN  AC2,036725             ;; HIT OURSELVES YET?
121520 / 254000,,121536          JRST      121536             ;; YES, NO LINK!!!
                       GNLNK4:
121521 / 367640,,121514          SOJG  AC1,GNLNK1             ;
                       GNLNK6:
121522 / 202700,,036725         MOVEM  AC2,LSTLNK             ;
121523 / 262140,,000011           POP    P,  DSER             ;
121524 / 262140,,000015           POP    P,   AC1             ;
121525 / 263140,,000000          POPJ    P,                   ;
                       GNLNK2:
121526 / 200457,,036740          MOVE DSER,036740(AC3)        ;
121527 / 430455,,036740           XOR DSER,036740(AC1)        ;
121530 / 602440,,177400          TRNE DSER,177400             ;
121531 / 254000,,121521          JRST      121521             ;; IF DIFFERENT HOSTS, IS OK
121532 / 271700,,000001          ADDI  AC2,000001             ;; BUMP LINK NUMBER
121533 / 303700,,000074         CAILE  AC2,MAXLNK             ;
121534 / 201700,,000012         MOVEI  AC2,MINLNK             ;
121535 / 254000,,121512          JRST      GNLNK5             ;
                       GNOLNK:
121536 / 350000,,037332           AOS       NOLKS             ;
121537 / 336000,,036722         SKIPN      036722             ;; DO WE PRINT TODAY?
121540 / 254000,,121547          JRST      121547             ;; NO, SKIP OVER ERROR MESSAGE
121541 / 260140,,044320         PUSHJ    P,044320             ;
121542 / 260140,,044120         PUSHJ    P,DISERR             ;
121543 / 000000,,154101                                       ;
121544 / 000200,,037332        DECQQQ       NOLKS             ;
121545 / 000000,,152275                                       ;
121546 / 777777,,777777                                       ;
121547 / 260140,,043761         PUSHJ    P,043761             ;
121550 / 254000,,000365          JRST      000365             ;
                       ; ROUTINE TO SEE IF A TABLE ENTRY MAY BE CLEARED.
                       ; ENTER WITH ENTRY INDEX IN AC3
                       ; IMPDDB-1(AC3) MUST BE ZERO!!!
                       ZEROLK:
121551 / 200657,,037200          MOVE  AC1,037200(AC3)        ;; PICK UP STATUS BITS
121552 / 603640,,300000          TLNE  AC1,300000             ;; ANYTHING HAPPENED ON THE SEND SIDE?
121553 / 254000,,121560          JRST      121560             ;; YES, SEE IF WE HAVE GOTTEN THE CLSS
121554 / 603640,,040000          TLNE  AC1,040000             ;; HAVE WE SENT A CLS?
121555 / 603640,,020000          TLNE  AC1,020000             ;; YES, HAVE WE RECEIVED THE MATCHING ONE?
121556 / 254000,,116327          JRST      116327             ;; YES, GO TEST THE RECEIVE SIDE
121557 / 263140,,000000          POPJ    P,                   ;; NO, DON'T RELEASE SLOT YET
                       ZEROL1:
121560 / 603640,,040000          TLNE  AC1,040000             ;; HAVE WE SENT A CLS YET?
121561 / 607640,,020000          TLNN  AC1,020000             ;; YES, MAKE SURE WE HAVE BOTH SENT AND RECEIVED ONE
121562 / 263140,,000000          POPJ    P,                   ;
121563 / 254000,,116327          JRST      KILLNK             ;
                       ; ROUTINE TO SEARCH DOWN QUEUED RFC LIST FOR AN RFC THAT MATCHES OUR SOCKET
                       ; UUO LEVEL ONLY. DDB MUST BE SET UP AS WELL AS AC3
                       DISPQ:
121564 / 400100,,000000          SETZ TAC1,                   ;; PREPARE TO SCAN DOWN QUEUED RFC'S
                       RFCQL:
121565 / 260140,,121443         PUSHJ    P,121443             ;; BLESS BLOCK ADDRESS
153222 / 402017,,037240         SETZM      037240(AC3)        ;
153223 / 263140,,000000          POPJ    P,                   ;
121566 / 254000,,153222          JRST      153222             ;; GIVE NO FIND RETURN
121567 / 260140,,116702         PUSHJ    P,116702             ;; PICK UP LOCAL SOCKET NUMBER
121570 / 316717,,037040          CAMN  AC2,037040(AC3)        ;; DOES IT MATCH?
121571 / 254000,,121576          JRST      RFCQD1             ;
                       RFCQI:
121572 / 201115,,000000         MOVEI TAC1,      (AC1)        ;; NO, PUT THIS BLOCK AS LAST BLOCK
121573 / 554655,,000000          HLRZ  AC1,      (AC1)        ;; PICK UP ADDRESS OF NEXT BLOCK
121574 / 326640,,121565         JUMPN  AC1, RFCQL             ;
121575 / 263140,,000000          POPJ    P,                   ;
                       RFCQD1:
121576 / 260140,,116675         PUSHJ    P,116675             ;; PICK UP FOREIGN SOCKET NUMBER
121577 / 312717,,037100          CAME  AC2,037100(AC3)        ;; DOES IT MATCH?
121600 / 335017,,037100        SKIPGE      037100(AC3)        ;; OR IS IT UNUSED?
121601 / 254000,,121603          JRST      RFCQD2             ;
121602 / 254000,,121572          JRST       RFCQI             ;
                       RFCQD2:
121603 / 135240,,114057           LDB  DAT,114057             ;; PICK UP HOST NUMBER
121604 / 430257,,036740           XOR  DAT,036740(AC3)        ;
121605 / 602240,,177400          TRNE  DAT,177400             ;; DOES IT MATCH
121606 / 336017,,036740         SKIPN      036740(AC3)        ;; OR IS IT OPEN?
121607 / 254000,,121611          JRST      121611             ;; YES, LOAD US UP
121610 / 254000,,121572          JRST       RFCQI             ;
                       RFCQD3:
121611 / 135240,,114055           LDB  DAT,114055             ;; PICK UP HOST NUMBER
152321 / 000017,,036740                                       ;
152321 / 101017,,036740 POINT 8,17036740,27                   ;
121612 / 137240,,152321           DPB  DAT,152321             ;
121613 / 202717,,037100         MOVEM  AC2,037100(AC3)        ;
121614 / 135700,,114064           LDB  AC2,114064             ;; PICK UP SIZE-LINK FIELD
121615 / 135440,,114062           LDB DSER,114062             ;; GET OPCODE
121616 / 260140,,115553         PUSHJ    P,115553             ;; SET LINK NUMBER OR BYTE SIZE
121617 / 260140,,121637         PUSHJ    P,121637             ;; UNLINK RFC FROM QUEUE
121620 / 260140,,121430         PUSHJ    P,121430             ;; AND GIVE IT BACK
121621 / 254000,,037401          JRST      037401             ;; GIVE SUCCESS RETURN
                       ; ROUTINE TO APPEND AN ENTIRE RFC QUEUE ONTO ILIST
                       ; ENTER WITH RFC QUEUE IN AC1 (XWD <LAST>,<FIRST>)
                       APNLST:
121622 / 402017,,037240         SETZM      037240(AC3)        ;
121623 / 260140,,121443         PUSHJ    P,121443             ;; IS IT A REASONABLE ADDRESS?
121624 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
121625 / 700600,,001010          CONO   PI,IMPOFF             ;
121626 / 336700,,036427         SKIPN  AC2, ILIST             ;
121627 / 254000,,121635          JRST      APNLS1             ;
121630 / 207000,,000016         MOVSS         AC2             ;
121631 / 506656,,000000          HRLM  AC1,      (AC2)        ;
121632 / 502640,,036427          HLLM  AC1, ILIST             ;
                       APNLS2:
121633 / 700600,,002010          CONO   PI, IMPON             ;
121634 / 263140,,000000          POPJ    P,                   ;
                       APNLS1:
121635 / 202640,,036427         MOVEM  AC1, ILIST             ;
121636 / 254000,,121633          JRST      APNLS2             ;
                       ; ROUTINE TO UNLINK A RFC FROM THE QUEUED RFC LIST
                       ; MUST HAVE PREDECESSOR IN TAC1 AND INDEX IN AC3
                       UNLRFQ:
121637 / 554715,,000000          HLRZ  AC2,      (AC1)        ;
121640 / 606100,,777777          TRNN TAC1,777777             ;
121641 / 254000,,121646          JRST      UNLRF1             ;
121642 / 506702,,000000          HRLM  AC2,      (TAC1)       ;
121643 / 336000,,000016         SKIPN         AC2             ;
121644 / 506117,,037240          HRLM TAC1,037240(AC3)        ;
121645 / 263140,,000000          POPJ    P,                   ;
                       UNLRF1:
121646 / 542717,,037240          HRRM  AC2,037240(AC3)        ;
121647 / 336000,,000016         SKIPN         AC2             ;
121650 / 402017,,037240         SETZM      037240(AC3)        ;
121651 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO GO INTO A WAIT STATE BUT START A COUNTDOWN TOO
                       ; ENTER WITH WAIT BIT IN IOS, TIME TO WAIT IN TEM
                       ; SKIPS IF WAIT SATISFIED, DOESN'T SKIP IF TIMED OUT
                       TW:
121652 / 322400,,121661         JUMPE  TEM,121661             ;; NO TIME MEANS WAIT INDEFINITELY
121653 / 221400,,000170         IMULI  TEM,000170             ;; SCALE TO TIX
                       TIMEDW:
121654 / 270400,,024633           ADD  TEM,024633             ;; WRAP AROUND
                       JIFDAY:
152021 / 000023,,615000                                       ;
121655 / 311400,,152021          CAML  TEM,152021             ;
121656 / 274400,,152021           SUB  TEM,JIFDAY             ;
121657 / 202406,,000027         MOVEM  TEM,   TIM(DDB)        ;
121660 / 350000,,036714           AOS      036714             ;; NOTE THERE IS ANOTHER WAITER
                       TIMAGN:
121661 / 211400,,000005         MOVNI  TEM,  IOWQ             ;
121662 / 202404,,020574         MOVEM  TEM,JOBQUE(J)          ;
121663 / 260140,,046124         PUSHJ    P,WSCHED             ;
121664 / 200406,,000002          MOVE  TEM,DEVIOS(DDB)        ;
121665 / 616400,,000000          TDNN  TEM,                   ;; IS THE WAIT SATISFIED?
121666 / 254000,,121671          JRST      121671             ;; YES, LEAVE NORMALLY
121667 / 606400,,300200          TRNN  TEM,300200             ;; NO, DID WE TIME OUT?
121670 / 254000,,121661          JRST      121661             ;; NO, SPURIOUS WAKEUP (AS IN ↑C - CONT)
                       TIMXIT:
121671 / 410006,,000002         ANDCA      DEVIOS(DDB)        ;; CLEAR WAIT BIT
121672 / 622000,,000200          TRZE      000200             ;; DID WE TIME OUT?
121673 / 254000,,121675          JRST      121675             ;; YES
121674 / 350003,,000000           AOS            (P)          ;; SET SKIP RETURN
                       TIMXT1:
121675 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
121676 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO WAIT FOR A MATCHING CLS
                       ; ENTER WITH CONNECTION INDEX IN AC3
                       ; RETURNS WITH CONNECTION INDEX IN AC3 AND STATE BITS IN AC1
                       TCLSW:
121677 / 261140,,000016          PUSH    P,   AC2             ;
121700 / 200717,,037040          MOVE  AC2,037040(AC3)        ;
121701 / 205000,,002000         MOVSI        CLSW             ;
121702 / 436006,,000002           ORM      DEVIOS(DDB)        ;
121703 / 135400,,114073           LDB  TEM, CLSTP             ;
121704 / 260140,,121652         PUSHJ    P,    TW             ;
121705 / 255000,,000000          JFCL                         ;
121706 / 260140,,121222         PUSHJ    P,GETIDX             ;
121707 / 254000,,120775          JRST      NOCONN             ;
121710 / 262140,,000016           POP    P,   AC2             ;
121711 / 205640,,020000         MOVSI  AC1,  CLSR             ;
121712 / 437657,,037200           ORB  AC1,037200(AC3)        ;
121713 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SEND AN ALLOCATION
                       ; ENTER WITH NUMBER OF BITS OF ALLOCATION HE HAS LEFT IN AC3,
                       ; AND NUMBER OF MESSAGES HE HAS IN AC2
                       SNDBAL:
121714 / 261140,,000001          PUSH    P,   TAC             ;
121715 / 261140,,000002          PUSH    P,  TAC1             ;
121716 / 261140,,000015          PUSH    P,   AC1             ;
121717 / 211117,,000000         MOVNI TAC1,      (AC3)        ;; PUT BIT ALLOCATION IN TAC1
121720 / 270106,,000017           ADD TAC1,  NHBA(DDB)        ;; CONVERT TO NUMBER OF BITS HE NEEDS
121721 / 211056,,000000         MOVNI  TAC,      (AC2)        ;; AND MESSAGE ALLOCATION IN TAC
121722 / 270046,,000016           ADD  TAC,  NHMA(DDB)        ;; CONVERT TO NUMBER OF MESSAGES HE NEEDS
121723 / 260140,,121351         PUSHJ    P,IMPGET             ;
121724 / 254000,,121007          JRST      NOCORE             ;
121725 / 402015,,000004         SETZM       TDATA(AC1)        ;
121726 / 402015,,000005         SETZM      000005(AC1)        ;
121727 / 402015,,000006         SETZM      000006(AC1)        ;
121730 / 260140,,121304         PUSHJ    P,UURIDX             ;
121731 / 254000,,120775          JRST      NOCONN             ;
152257 / 000015,,000007                                       ;
152257 / 044015,,000007 POINT 32,15000007,31                  ;
121732 / 137100,,152257           DPB TAC1,152257             ;
121733 / 272106,,000023          ADDM TAC1,   HBA(DDB)        ;; INCREMENT BIT ALLOCATION
152251 / 000015,,000006                                       ;
152251 / 042015,,000006 POINT 16,15000006,31                  ;
121734 / 137040,,152251           DPB  TAC,152251             ;
121735 / 272046,,000022          ADDM  TAC,   HMA(DDB)        ;; ADD THAT IN TO HIS MESSAGE ALLOCATION
121736 / 200057,,037200          MOVE  TAC,037200(AC3)        ;; IS THE SOCKET STILL OPEN?
121737 / 641040,,300000           TLC  TAC,300000             ;; MAKE SURE THE SOCKET IS REALLY OPEN
121740 / 607040,,300000          TLNN  TAC,300000             ;; IF NOT, LEAVE NOW
121741 / 603040,,060000          TLNE  TAC,060000             ;
121742 / 254000,,121761          JRST      121761             ;; NO, DON'T SEND ANY MORE CONTROL COMMANDS
121743 / 201040,,000004         MOVEI  TAC,   ALL             ;
121744 / 137040,,114062           DPB  TAC, OPCDP             ;
121745 / 200057,,036740          MOVE  TAC,036740(AC3)        ;
121746 / 137040,,114063           DPB  TAC,OLINKP             ;
121747 / 421040,,000377        ANDCMI  TAC,   377             ;
121750 / 137040,,114057           DPB  TAC,ELINKP             ;
121751 / 201040,,000010         MOVEI  TAC,    10             ;
121752 / 137040,,114060           DPB  TAC, SIZEP             ;
121753 / 137040,,114061           DPB  TAC,COUNTP             ;
121754 / 260140,,121021         PUSHJ    P,  UUOQ             ;
                       SNDPPX:
121755 / 262140,,000015           POP    P,   AC1             ;
121756 / 262140,,000002           POP    P,  TAC1             ;
121757 / 262140,,000001           POP    P,   TAC             ;
121760 / 263140,,000000          POPJ    P,                   ;
                       SNDPOP:
121761 / 260140,,121430         PUSHJ    P,121430             ;; CONNECTION CLOSED, RELEASE STORAGE AND LEAVE
121762 / 254000,,121755          JRST      SNDPPX             ;
                       ; ROUTINE TO CHECK AND SEND INITIAL ALLOCATION
                       ; MUST BE CALLED AT UUO LEVEL ONLY
                       INIALL:
121763 / 332006,,000016         SKIPE        NHMA(DDB)        ;; IS THERE A NOMINAL ALLOCATION YET?
121764 / 254000,,121775          JRST      121775             ;; YES, SEE IF IT HAS BEEN SENT YET
121765 / 201700,,002420         MOVEI  AC2,002420             ;; GIVE DEFAULT BIT ALLOCATION
121766 / 202706,,000017         MOVEM  AC2,  NHBA(DDB)        ;
121767 / 242700,,777777           LSH  AC2,777777             ;
121770 / 202706,,000021         MOVEM  AC2, NHBA2(DDB)        ;
121771 / 201700,,000044         MOVEI  AC2,000044             ;; AND A BUNCH OF MESSAGES
121772 / 202706,,000016         MOVEM  AC2,  NHMA(DDB)        ;
121773 / 242700,,777777           LSH  AC2,777777             ;
121774 / 202706,,000020         MOVEM  AC2, NHMA2(DDB)        ;
                       CHKENF:
121775 / 200746,,000023          MOVE  AC3,   HBA(DDB)        ;; PICK UP CURRENT BIT ALLOCATION
121776 / 270746,,000025           ADD  AC3,  BIIL(DDB)        ;; ADD IN AMOUNT IN INPUT LIST
121777 / 200706,,000022          MOVE  AC2,   HMA(DDB)        ;; SAME FOR MESSAGE ALLOCATION
122000 / 270706,,000024           ADD  AC2,  MIIL(DDB)        ;
122001 / 311746,,000021          CAML  AC3, NHBA2(DDB)        ;; IS BIT ALLOCATION LESS THAN HALF DEPLETED?
122002 / 315706,,000020         CAMGE  AC2, NHMA2(DDB)        ;; OR MESSAGE ALLOCATION?
122003 / 260140,,121714         PUSHJ    P,121714             ;; YES, SEND HIM SOME MORE
122004 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SEND OUT A SEND-SIDE CLS FROM UUO LEVEL
                       ; CALL WITH DDB SET UP
                       USCLS:
122005 / 260140,,121351         PUSHJ    P,IMPGET             ;
122006 / 254000,,121007          JRST      NOCORE             ;
122007 / 260140,,121270         PUSHJ    P,UUSIDX             ;
122010 / 254000,,121430          JRST      IMPREL             ;
122011 / 402006,,000015         SETZM         BAL(DDB)        ;; NOTE NO MORE ALLOCATION
122012 / 402006,,000014         SETZM         MAL(DDB)        ;
                       USCLS1:
122013 / 200717,,036740          MOVE  AC2,036740(AC3)        ;
122014 / 405700,,177400          ANDI  AC2,177400             ;
122015 / 242700,,000014           LSH  AC2,000014             ;; PUT HOST NUMBER IN PROPER SLOT
122016 / 260140,,116723         PUSHJ    P,116723             ;; MAKE UP A CLOSE BLOCK
122017 / 200717,,037040          MOVE  AC2,037040(AC3)        ;; PUT IN OUR SOCKET NUMBER
122020 / 261140,,000016          PUSH    P,000016             ;;SAVE SOCKET NUMBER
122021 / 260140,,116665         PUSHJ    P,PSOCK1             ;
122022 / 200717,,037100          MOVE  AC2,037100(AC3)        ;; PUT IN HIS SOCKET NUMBER
122023 / 260140,,116671         PUSHJ    P,PSOCK2             ;
122024 / 205700,,040000         MOVSI  AC2,040000             ;; HAS CLOSE ALREADY BEEN SENT?
122025 / 612717,,037200          TDNE  AC2,037200(AC3)        ;
151763 / 000001,,000001                                       ;
153366 / 274140,,151763           SUB    P,151763             ;
153367 / 254000,,121430          JRST      IMPREL             ;
122026 / 254000,,153366          JRST      153366             ;; YES, RELEASE STORAGE AND LEAVE
122027 / 260140,,121211         PUSHJ    P,121211             ;; NO, SET CLS SENT BIT
122030 / 260140,,121021         PUSHJ    P,121021             ;; AND SEND OUT THE CLS
122031 / 262140,,000016           POP    P,000016             ;;GET BACK SOCKET NUMBER
122032 / 260140,,121222         PUSHJ    P,121222             ;;AND INDEX
122033 / 254000,,120775          JRST      120775             ;;ARGGGGHHH!!!
122034 / 263140,,000000          POPJ    P,                   ;
                       ; RECEIVE SIDE CLS AT UUO LEVEL
                       ; CALL WITH DDB SET UP
                       URCLS:
122035 / 260140,,121351         PUSHJ    P,IMPGET             ;
122036 / 254000,,121007          JRST      NOCORE             ;
122037 / 260140,,121304         PUSHJ    P,UURIDX             ;
122040 / 254000,,121430          JRST      IMPREL             ;
122041 / 254000,,122013          JRST      USCLS1             ;
122042 /               ;: IMPUUO[J17,SYS] EOF.
122042 /               ;: IMPINT[J17,SYS]
                       ; CONO BITS . . .
                       ; CONI BITS . . .
                       ; INPUT BEGINS BY COMING TO HERE. READ THE 72-BIT LEADER THEN
                       ; SET BYTE SIZE AND READ REST OF MESSAGE.
                       IBEGIN:
122042 / 260140,,122225         PUSHJ    P,122225             ;; SET UP BYTE POINTER AND COUNT
122043 / 254000,,122140          JRST      122140             ;; NO FREE STORAGE, HANG AND WAIT FOR IT
122044 / 740240,,000017          CONI  IMP,   AC3             ;
122045 / 740000,,036424          BLKI  IMP,036424             ;; READ FIRST WORD
122046 / 255000,,000000          JFCL                         ;
122047 / 200640,,036425          MOVE  AC1,036425             ;; SET TOP BLOCK OF INPUT
122050 / 202640,,036426         MOVEM  AC1,036426             ;
122051 / 602740,,010000          TRNE  AC3,010000             ;; IS THAT ALL THE IMP HAS FOR US?
122052 / 254000,,122176          JRST      122176             ;; YES, GO PUT LIST ON ILIST
122053 / 740200,,002000          CONO  IMP,002000             ;; CLEAR THE WAIT FLAG AND READ NEXT WORD
122054 / 260140,,122475         PUSHJ    P, ISYNC             ;
                       SECOND:
122055 / 740240,,000017          CONI  IMP,   AC3             ;
122056 / 740000,,036424          BLKI  IMP,036424             ;; GET SECOND WORD
122057 / 255000,,000000          JFCL                         ;
122060 / 602740,,010000          TRNE  AC3,010000             ;; DONE YET?
122061 / 254000,,122176          JRST      122176             ;
122062 / 200640,,036426          MOVE  AC1,036426             ;; PICK UP ADDRESS OF BLOCK CONTAINING LEADER
122063 / 135700,,114060           LDB  AC2,114060             ;; PICK UP BYTE SIZE OF TRANSMISSION
122064 / 476000,,036430         SETOM      036430             ;; ASSUME 36-BIT MODE
122065 / 337756,,114100         SKIPG  AC3,   BPW(AC2)        ;; PICK UP BITS PER WORD FOR THIS BYTE SIZE
122066 / 201740,,000044         MOVEI  AC3,000044             ;; IF ILLEGAL BYTE SIZE, IT DOESN'T MATTER
122067 / 306740,,000040          CAIN  AC3,    40             ;
122070 / 402000,,036430         SETZM      IMPIFM             ;
122071 / 232740,,000016         IDIVM  AC3,000016             ;; NUMBER OF BYTES/WD IN AC2
122072 / 201756,,000000         MOVEI  AC3,      (AC2)        ;
122073 / 135700,,114061           LDB  AC2,COUNTP             ;
122074 / 231717,,000000         IDIVI  AC2,      (AC3)        ;; # WORDS IN AC2, # BYTES IN LAST WORD IN AC3
122075 / 202700,,036436         MOVEM  AC2,IMPINW             ;
122076 / 402000,,036437         SETZM      036437             ;; PREPARE FOR INTEGRAL NUMBER OF WORDS
122077 / 322740,,122106         JUMPE  AC3,122106             ;; INTEGRAL NUMBER OF WORDS GETS A ZERO MASK
122100 / 135700,,114060           LDB  AC2, SIZEP             ;
122101 / 213000,,000016         MOVNS      000016             ;; GET MASK FOR LAST WORD
122102 / 221717,,000000         IMULI  AC2,      (AC3)        ;
122103 / 205640,,400000         MOVSI  AC1,400000             ;
122104 / 240656,,000001           ASH  AC1,     1(AC2)        ;; WE HAVE NOW SPREAD THE BIT OVER THE BYTES
122105 / 202640,,036437         MOVEM  AC1,036437             ;; AND THAT IS THE MASK
                       ; INPUT ROUTINE, READ SUCCESSIVE WORDS AND ZERO OUT BYTES IN LAST WORD
                       INPLOP:
122106 / 201640,,006064         MOVEI  AC1,006064             ;
122107 / 336000,,036430         SKIPN      036430             ;; WHAT BYTE SIZE?
122110 / 435640,,020000           ORI  AC1,020000             ;; 32, SET BIT
122111 / 740215,,000000          CONO  IMP,      (AC1)        ;
122112 / 260140,,122475         PUSHJ    P, ISYNC             ;
                       INP1:
122113 / 740240,,000017          CONI  IMP,   AC3             ;
122114 / 740000,,036424          BLKI  IMP,IMPBKO             ;
122115 / 255000,,000000          JFCL                         ;
122116 / 371000,,036436          SOSL      036436             ;; LAST WORD YET?
122117 / 254000,,122124          JRST      122124             ;; NO, PROCEED ALONG
122120 / 550700,,036424          HRRZ  AC2,IMPBKO             ;
122121 / 200640,,036437          MOVE  AC1,036437             ;; YES, PICK UP MASK
122122 / 406656,,000000          ANDM  AC1,      (AC2)        ;; ZERO OUT BYTES IN LAST WORD
122123 / 402000,,036437         SETZM      036437             ;; AND ZERO ALL SUCCESSIVE WORDS
                       INPET:
122124 / 602740,,010000          TRNE  AC3,  IEND             ;
122125 / 254000,,122176          JRST      122176             ;
122126 / 335000,,036424        SKIPGE      036424             ;; HAS THE COUNT OVERFLOWED?
122127 / 254000,,122106          JRST      122106             ;; NO, GO BACK FOR NEXT WORD
122130 / 201640,,002064         MOVEI  AC1,002064             ;
122131 / 336000,,036430         SKIPN      036430             ;; IN WHICH CASE, WAIT AFTER NEXT WORD
122132 / 435640,,020000           ORI  AC1,   I32             ;
122133 / 740215,,000000          CONO  IMP,      (AC1)        ;
122134 / 260140,,122475         PUSHJ    P, ISYNC             ;
122135 / 260140,,122225         PUSHJ    P, SETUP             ;
122136 / 254000,,122146          JRST      IDHANG             ;
122137 / 254000,,122113          JRST        INP1             ;
                       ; WE GET HERE IF AT INTERRUPT LEVEL WE HAVE A WORD AND NO BUFFER TO PUT IT IN
                       IHANG:
122140 / 476000,,036426         SETOM      036426             ;;FLAG TO GETSPARE IN CASE 1 WD MSG
122141 / 260140,,122151         PUSHJ    P,  HANG             ;
122142 / 254000,,122202          JRST      122202             ;
122143 / 200640,,036425          MOVE  AC1,036425             ;
122144 / 202640,,036426         MOVEM  AC1,036426             ;;SET UP POINTER TO FIRST BLOCK OF MSG
122145 / 254000,,122055          JRST      122055             ;; GO PICK UP THE NEXT WORD
                       IDHANG:
122146 / 260140,,122151         PUSHJ    P,  HANG             ;
122147 / 254000,,122202          JRST      122202             ;
122150 / 254000,,122113          JRST      122113             ;; GO FINISH FILLING BUFFER
                       HANG:
122151 / 350000,,037335           AOS      NHANGS             ;
122152 / 740240,,000015          CONI  IMP,   AC1             ;
122153 / 740040,,036431         DATAI  IMP,036431             ;
122154 / 476000,,036432         SETOM      IMPHLF             ;
122155 / 602640,,010000          TRNE  AC1,  IEND             ;
122156 / 263140,,000000          POPJ    P,                   ;
122157 / 201640,,000060         MOVEI  AC1,000060             ;
122160 / 336000,,036430         SKIPN      IMPIFM             ;
122161 / 435640,,020000           ORI  AC1,020000             ;; CLEAR PI CHANS SO WON'T INTERRUPT
122162 / 740215,,000000          CONO  IMP,      (AC1)        ;
122163 / 260140,,122475         PUSHJ    P, ISYNC             ;
122164 / 260140,,122167         PUSHJ    P,HLPWRD             ;
122165 / 350003,,000000           AOS            (P)          ;
122166 / 254000,,122250          JRST      122250             ;;WE JUST USED THE SPARE, TRY TO GET A NEW ONE
                       ; ROUTINE TO PICK UP SAVED WORD AND PLACE IT IN BUFFER
                       HLPWRD:
151763 / 000001,,000001           XWD 1,1                     ;
122167 / 200640,,151763          MOVE  AC1,151763             ;; BUMP THE IOWD
122170 / 273640,,036424          ADDB  AC1,036424             ;; BOTH HALVES
122171 / 200700,,036431          MOVE  AC2,036431             ;; PICK UP SAVED WORD
122172 / 402000,,036433         SETZM      036433             ;; CLEAR INPUT-END FLAG
122173 / 402000,,036432         SETZM      036432             ;; CLEAR SAVED WORD
122174 / 202715,,000000         MOVEM  AC2,      (AC1)        ;; PLACE IT IN BUFFER
122175 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE WHEN INPUT IS DONE.
                       INPDON:
122176 / 260140,,122205         PUSHJ    P,122205             ;; SET WORD COUNT IN LAST BUFFER AND PUT IT ON ILIST
122177 / 740200,,042064          CONO  IMP,042064             ;; START THE IMP LISTENING FOR INPUT
                       INIWAI:
122200 / 260140,,122475         PUSHJ    P, ISYNC             ;
122201 / 254000,,122042          JRST      122042             ;; START A NEW MESSAGE
                       ; GET HERE WHEN WE INPUTTED THE LAST WORD INTO IMPHELP AND THERE
                       ; IS NO BUFFER FOR IT. CLOCK LEVEL WILL CALL IFINISH THEN
                       ; START THE IMP UP LISTENING AGAIN.
                       IHEWAI:
122202 / 476000,,036433         SETOM      036433             ;; NOTE THAT THE WORD IN IMPHELP IS THE LAST WORD
122203 / 740200,,000060          CONO  IMP,000060             ;; MAKE SURE WE DON'T INTERRUPT AGAIN
122204 / 254000,,122200          JRST      122200             ;
                       ; ROUTINE TO SET THE WORD COUNT IN THE LAST BUFFER AND
                       ; TAG THE ENTIRE BUFFER LIST ONTO ILIST
                       IFINIS:
122205 / 350000,,037341           AOS      037341             ;; BUMP NUMBER OF MESSAGES RECEIVED
122206 / 200640,,036425          MOVE  AC1,036425             ;; PICK UP POINTER TO CURRENT BUFFER
122207 / 402000,,036425         SETZM      036425             ;; MAKE SURE NOBODY IS HOME, SO SETUP WON'T LINK ONTO A NON-EX BLOCK
122210 / 574700,,036424          HLRE  AC2,036424             ;; PICK UP WORD COUNT REMAINING
122211 / 270715,,000002           ADD  AC2,  TLEN(AC1)        ;; GET LENGTH OF CURRENT BUFFER
122212 / 202715,,000001         MOVEM  AC2,   TWC(AC1)        ;; USE THAT AS THE WORD COUNT
122213 / 200640,,036426          MOVE  AC1,036426             ;; PICK UP FIRST BLOCK OF MESSAGE
122214 / 336700,,036427         SKIPN  AC2,036427             ;; ANYTHING IN THE INPUT LIST?
122215 / 254000,,122223          JRST      122223             ;; NO, PUT US AS THE FIRST AND LAST ELEMENT
122216 / 207000,,000016         MOVSS         AC2             ;
122217 / 506656,,000000          HRLM  AC1,      (AC2)        ;; LINK US ON TO THE LAST ELEMENT
                       IFINI2:
122220 / 506640,,036427          HRLM  AC1,036427             ;; MAKE US THE LAST ELEMENT
122221 / 553015,,000000         HRRZS            (AC1)        ;; CLEAR OUR CDR
122222 / 263140,,000000          POPJ    P,                   ;
                       IFINI1:
122223 / 542640,,036427          HRRM  AC1,036427             ;; MAKE US THE FIRST ELEMENT
122224 / 254000,,122220          JRST      IFINI2             ;
                       ; ROUTINE TO SET UP THE BYTE POINTER AND WORD COUNT FOR A BUFFER
                       ; IF THERE IS A LIST, IT APPENDS THE NEW BUFFER TO THE END OF THE LIST.
                       ; SKIP RETURNS IF THERE WAS A BUFFER. IF NOT, NO SKIP AND PUT IN
                       ; CLOCK REQUEST TO GET A BUFFER.
                       SETUP:
122225 / 260140,,122231         PUSHJ    P,SETUP0             ;
122226 / 254000,,122300          JRST      122300             ;; NO FREE STORAGE, PLANT CLOCK REQUEST, TAKE FAILURE RETURN
122227 / 260140,,122250         PUSHJ    P,122250             ;; GET A NEW SPARE BLOCK
122230 / 254000,,037401          JRST      037401             ;; WE WON THIS TIME
                       SETUP0:
122231 / 400640,,000000          SETZ  AC1,                   ;
122232 / 250640,,036434          EXCH  AC1,036434             ;
122233 / 322640,,037403         JUMPE  AC1,037403             ;; NO FREE STORAGE, GIVE FAILURE RETURN
122234 / 402015,,000000         SETZM            (AC1)        ;
122235 / 210715,,000001          MOVN  AC2,   TWC(AC1)        ;; PICK UP LENGTH OF DATA PORTION OF BLOCK
122236 / 505656,,000000          HRLI  AC1,      (AC2)        ;; PUT NEGATIVE WORD COUNT BESIDE DATA POINTER
122237 / 332700,,036425         SKIPE  AC2,036425             ;; IS THERE ALREADY A LIST GOING?
122240 / 542656,,000000          HRRM  AC1,      (AC2)        ;; YES, APPEND US TO IT
122241 / 552640,,036425         HRRZM  AC1,036425             ;; SET US AS CURRENT BLOCK
122242 / 271640,,000003          ADDI  AC1,000003             ;; MOVE TO JUST BEFORE DATA PORTION
122243 / 202640,,036424         MOVEM  AC1,036424             ;; PUT IN BLKO WORD
122244 / 254000,,037401          JRST      CPOPJ1             ;
                       ; CLOCK LEVEL ROUTINE TO GET A SPARE BLOCK
                       GETSP:
122245 / 402000,,036435         SETZM      036435             ;; NOTE CLOCK REQUEST SATISFIED
122246 / 332000,,036313         SKIPE      036313             ;; IS THERE ANY IMP?
122247 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT
                       GETSPA:
122250 / 260140,,121351         PUSHJ    P,121351             ;; SEE IF THERE IS A BLOCK AVAILABLE
122251 / 254000,,122300          JRST      122300             ;
122252 / 250640,,036434          EXCH  AC1,036434             ;
122253 / 332000,,000015         SKIPE      000015             ;; WAS THERE ALREADY ONE?
122254 / 260140,,121430         PUSHJ    P,121430             ;; YES, GIVE IT BACK
122255 / 336000,,036432         SKIPN      036432             ;; IS SOMEONE WAITING FOR IT?
122256 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
122257 / 260140,,122231         PUSHJ    P,122231             ;; YES, SET UP BYTE POINTER AND COUNT
122260 / 254000,,122300          JRST      122300             ;
122261 / 336000,,036433         SKIPN      036433             ;; IS IT THE LAST WORD?
122262 / 254000,,122272          JRST      122272             ;; NO, JUST CLEAR THE WAIT FLAG AND GO
122263 / 260140,,122167         PUSHJ    P,122167             ;; PUT LAST WORD IN BUFFER
122264 / 200640,,036425          MOVE  AC1,036425             ;
122265 / 335000,,036426        SKIPGE      036426             ;
122266 / 202640,,036426         MOVEM  AC1,036426             ;;SET UP POINTER TO FIRST BLK OF MSG IF FROM IHANG
122267 / 260140,,122205         PUSHJ    P,122205             ;; PUT LIST ON ILIST
122270 / 740200,,042064          CONO  IMP,042064             ;; START THE IMP LISTENING AGAIN
122271 / 254000,,122250          JRST      122250             ;; NOW GET A SPARE AGAIN
                       GETSP1:
122272 / 402000,,036432         SETZM      IMPHLF             ;
122273 / 201640,,002034         MOVEI  AC1,002034             ;
122274 / 336000,,036430         SKIPN      IMPIFM             ;
122275 / 435640,,020000           ORI  AC1,   I32             ;
122276 / 740215,,000000          CONO  IMP,      (AC1)        ;; START IMP GOING AGAIN, SET UP PI CHANNELS
122277 / 263140,,000000          POPJ    P,                   ;
                       ; PLANT A CLOCK REQUEST TO COME BACK AND LOOK FOR FREE STORAGE
                       NOSPAR:
122300 / 474640,,000000          SETO  AC1,                   ;
122301 / 250640,,036435          EXCH  AC1,IMPCLN             ;
122302 / 326640,,037403         JUMPN  AC1, CPOPJ             ;
152341 / 122245,,000000           XWD GETSP,0                 ;
122303 / 200640,,152341          MOVE  AC1,152341             ;
122304 / 700600,,000400          CONO   PI, PIOFF             ;
122305 / 136640,,013624          IDPB  AC1,  CLKQ             ;
122306 / 700600,,000200          CONO   PI,  PION             ;
122307 / 263140,,000000          POPJ    P,                   ;
                       ; MAIN OUTPUT LOOP
                       IMPOL:
122310 / 201700,,000014         MOVEI  AC2,000014             ;
                       NXTTFR:
122311 / 336000,,036321         SKIPN      IMPOFM             ;
122312 / 435700,,010000           ORI  AC2,   O32             ;
122313 / 740216,,000000          CONO  IMP,      (AC2)        ;
122314 / 740100,,036315          BLKO  IMP,IMPOBK             ;
122315 / 255000,,000000          JFCL                         ;
122316 / 260140,,122516         PUSHJ    P, OSYNC             ;
                       OBEGIN:
122317 / 476000,,036314         SETOM      036314             ;; NOTE THAT WE ARE STILL ACTIVE
122320 / 376000,,036320          SOSN      036320             ;; DECREMENT COUNT OF WORDS LEFT UNTIL 32-BIT MODE
122321 / 402000,,036321         SETZM      036321             ;; SWITCH TO 32-BIT MODE
122322 / 337000,,036315         SKIPG      036315             ;; DECREMENT COUNT OF WORDS LEFT IN BUFFER
122323 / 254000,,122310          JRST       IMPOL             ;
                       NXTBLK:
122324 / 200640,,036316          MOVE  AC1,036316             ;; PICK UP POINTER TO CURRENT BLOCK
122325 / 337700,,036723         SKIPG  AC2,036723             ;; ANY MORE RESETS YET TO BE SENT?
122326 / 254000,,122335          JRST      122335             ;; NO, RELEASE THIS BLOCK
122327 / 370700,,036723           SOS  AC2,036723             ;; YES, COUNT DOWN AND LOAD NEW HOST #
122330 / 137700,,114055           DPB  AC2,114055             ;; PUT NUMBER OF NEXT HOST TO BE RESET INTO BLOCK
122331 / 740200,,000100          CONO  IMP,000100             ;; WHOLE RESET HAS BEEN SENT
122332 / 260140,,122516         PUSHJ    P, OSYNC             ;
122333 / 200640,,036316          MOVE  AC1,036316             ;; GET BACK THE POINTER TO THE BLOCK
122334 / 254000,,122360          JRST      122360             ;; NOW USE SAME BLOCK TO SEND NEXT RESET
                       NOTRST:
122335 / 550715,,000000          HRRZ  AC2,      (AC1)        ;
122336 / 202700,,036316         MOVEM  AC2,036316             ;
122337 / 260140,,121430         PUSHJ    P,121430             ;; RELEASE JUST EMPTIED BLOCK
122340 / 336640,,036316         SKIPN  AC1,036316             ;; IS THERE A NEXT BLOCK?
122341 / 254000,,122344          JRST      122344             ;; NO, OUTPUT DONE
122342 / 260140,,122437         PUSHJ    P,122437             ;; YES, SET UP COUNT AND BYTE POINTER
122343 / 254000,,122310          JRST      122310             ;; START IT GOING
                       IMPODN:
122344 / 740200,,000100          CONO  IMP,000100             ;; TELL IMP THE LAST BIT HAS BEEN SENT
122345 / 260140,,122516         PUSHJ    P, OSYNC             ;
122346 / 350000,,037342           AOS      037342             ;; BUMP NUMBER OF MESSAGES TRANSMITTED
122347 / 336640,,036317         SKIPN  AC1,036317             ;; ANYTHING ELSE IN QUEUE?
122350 / 254000,,122373          JRST      122373             ;; NO, WAIT FOR OUTPUT TO BEGIN
122351 / 260140,,121443         PUSHJ    P,121443             ;; IS IT A LEGAL BLOCK?
153206 / 402000,,036317         SETZM      036317             ;; NO, FLUSH THE ENTIRE OUTPUT LIST
153207 / 254000,,122373          JRST       OWAIT             ;
122352 / 254000,,153206          JRST      153206             ;; AND PRETEND IT IS EMPTY
122353 / 554715,,000000          HLRZ  AC2,      (AC1)        ;; YES, PICK UP FIRST ELEMENT
122354 / 542700,,036317          HRRM  AC2, OLIST             ;
122355 / 336000,,000016         SKIPN         AC2             ;
122356 / 402000,,036317         SETZM       OLIST             ;
122357 / 552640,,036316         HRRZM  AC1,036316             ;
                       IMPOD1:
122360 / 260140,,122456         PUSHJ    P,122456             ;; SET 32 OR 36 BIT MODE
122361 / 260140,,122437         PUSHJ    P,SETCNT             ;
122362 / 201700,,000214         MOVEI  AC2,000214             ;
122363 / 254000,,122311          JRST      NXTTFR             ;
                       DONOP1:
122364 / 740200,,000214          CONO  IMP,000214             ;
122365 / 740140,,152146         DATAO  IMP,152146             ;;NOP
122366 / 260140,,122516         PUSHJ    P, OSYNC             ;
                       DONOP:
122367 / 740200,,000100          CONO  IMP,  FINO             ;
122370 / 260140,,122516         PUSHJ    P, OSYNC             ;
122371 / 373000,,036724         SOSLE      NOPCNT             ;
122372 / 254000,,122364          JRST      DONOP1             ;
                       OWAIT:
122373 / 402000,,036314         SETZM      036314             ;; WE ARE NO LONGER ACTIVE
122374 / 740200,,000010          CONO  IMP,000010             ;; CLEAR PI CHANNEL SO WE HEAR NO EVIL
122375 / 260140,,122516         PUSHJ    P,122516             ;; WAIT FOR CLOCK LEVEL TO START US UP
122376 / 254000,,122317          JRST      OBEGIN             ;
                       ; ROUTINE TO QUEUE A MESSAGE FOR OUTPUT.
                       ; ENTER WITH MESSAGE IN AC1
                       QOUT:
122377 / 260140,,121443         PUSHJ    P,121443             ;; REASONABLE BLOCK?
122400 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
122401 / 700600,,001010          CONO   PI,IMPOFF             ;
122402 / 336000,,036314         SKIPN      036314             ;; IS OUTPUT IN PROGRESS?
122403 / 254000,,122420          JRST      122420             ;; NO, START IT BY HAND.
122404 / 261140,,000016          PUSH    P,   AC2             ;
122405 / 336700,,036317         SKIPN  AC2,036317             ;; PUT THIS MESSAGE ON THE END OF THE OUTPUT LIST
122406 / 254000,,122416          JRST      122416             ;
122407 / 207000,,000016         MOVSS         AC2             ;
122410 / 506656,,000000          HRLM  AC1,      (AC2)        ;
                       QOXIT:
122411 / 506640,,036317          HRLM  AC1, OLIST             ;
122412 / 262140,,000016           POP    P,   AC2             ;
122413 / 553015,,000000         HRRZS            (AC1)        ;
122414 / 700600,,002010          CONO   PI, IMPON             ;
122415 / 263140,,000000          POPJ    P,                   ;
                       QNOLIS:
122416 / 542640,,036317          HRRM  AC1, OLIST             ;
122417 / 254000,,122411          JRST       QOXIT             ;
                       ; GET HERE WHEN THE OUTPUT SIDE OF THE IMP IS IDLE
                       QIDLE:
122420 / 700600,,002010          CONO   PI,002010             ;; NO NEED TO BOTHER WITH INTERLOCKING
122421 / 476000,,036314         SETOM      036314             ;
122422 / 202640,,036316         MOVEM  AC1,036316             ;
122423 / 261140,,000017          PUSH    P,   AC3             ;
122424 / 260140,,122456         PUSHJ    P,122456             ;; SET UP COUNT OF NUMBER OF WORDS IN 36B MODE
122425 / 260140,,122437         PUSHJ    P,122437             ;; SET UP BYTE POINTER AND COUNT
122426 / 201740,,016040         MOVEI  AC3,016040             ;; SET UP OUTPUT TIMEOUT
122427 / 202740,,036322         MOVEM  AC3,IMPOCT             ;
122430 / 262140,,000017           POP    P,   AC3             ;
122431 / 700600,,001010          CONO   PI,IMPOFF             ;
122432 / 740200,,000214          CONO  IMP,000214             ;
122433 / 740100,,036315          BLKO  IMP,IMPOBK             ;
122434 / 255000,,000000          JFCL                         ;
122435 / 700600,,002010          CONO   PI, IMPON             ;
122436 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SET THE OUTPUT WORD COUNT AND BYTE POINTER
                       SETCNT:
122437 / 210715,,000001          MOVN  AC2,   TWC(AC1)        ;; PICK UP SIZE OF BLOCK
122440 / 505715,,000003          HRLI  AC2,000003(AC1)        ;; PUT IN ONE BEFORE DATA PORTION OF BUFFER
122441 / 206700,,036315         MOVSM  AC2,036315             ;; PLACE IN OUTPUT BLKO WORD
122442 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO DO SOFTWARE RELOCATION ON ADDESS IN TAC1
                       ; PUTS RESULT IN DSER
                       DOLOC:
122443 / 551442,,000000         HRRZI DSER,      (TAC1)       ;; MOVE USER ADDRESS TO DSER
122444 / 606440,,400000          TRNN DSER,400000             ;; UPPER SEGMENT ADDRESS?
122445 / 254000,,122454          JRST      122454             ;; NO, USE PROG
122446 / 261140,,000010          PUSH    P,   TEM             ;
122447 / 135400,,037600           LDB  TEM,037600             ;; YES, PICK UP REL. OF UPPER
122450 / 550410,,027120          HRRZ  TEM,JBTADR(TEM)        ;
122451 / 271450,,400000          ADDI DSER,400000(TEM)        ;
122452 / 262140,,000010           POP    P,   TEM             ;
122453 / 263140,,000000          POPJ    P,                   ;
                       EOREL:
122454 / 271447,,000000          ADDI DSER,      (PROG)       ;
122455 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO SET THE COUNT OF THE NUMBER OF WORDS IN 36B MODE
                       SETMOD:
122456 / 135700,,114060           LDB  AC2, SIZEP             ;
122457 / 201740,,000002         MOVEI  AC3,     2             ;
122460 / 306700,,000044          CAIN  AC2,000044             ;; UNLESS MOVE IS 36B, USE 32B
122461 / 474740,,000000          SETO  AC3,                   ;
122462 / 202740,,036320         MOVEM  AC3,036320             ;; SET NUMBER OF WORDS IN 36B
122463 / 476000,,036321         SETOM      036321             ;; WE ALWAYS START IN 36B MODE
122464 / 263140,,000000          POPJ    P,                   ;
                       ; INPUT INTERRUPT COMES HERE
                       IMPINT:
122465 / 740340,,000770         CONSO  IMP,000770             ;; ANY CHANNEL?
122466 / 254000,,000643          JRST      000643             ;; NO, CAN'T BE US
122467 / 202640,,036541         MOVEM  AC1,IMPAC1             ;
122470 / 202700,,036542         MOVEM  AC2,IMPAC2             ;
122471 / 202740,,036543         MOVEM  AC3,IMPAC3             ;
122472 / 250540,,036544          EXCH  PID,IMPPID             ;
122473 / 250140,,036440          EXCH    P,IMPIPD             ;
122474 / 254020,,036545          JRST      @036545            ;
                       ISYNC:
122475 / 262140,,036545           POP    P,036545             ;
122476 / 250140,,036440          EXCH    P,IMPIPD             ;
                       ACREST:
122477 / 200640,,036541          MOVE  AC1,IMPAC1             ;
122500 / 200700,,036542          MOVE  AC2,IMPAC2             ;
122501 / 200740,,036543          MOVE  AC3,IMPAC3             ;
122502 / 250540,,036544          EXCH  PID,IMPPID             ;
122503 / 254520,,000632           JEN      @IMPCHL            ;
                       ; OUTPUT INTERRUPTS COME HERE
                       IMPOUT:
122504 / 740340,,000007         CONSO  IMP,     7             ;
122505 / 254000,,000645          JRST      IMPCTS             ;
122506 / 202640,,036541         MOVEM  AC1,IMPAC1             ;
122507 / 202700,,036542         MOVEM  AC2,IMPAC2             ;
122510 / 202740,,036543         MOVEM  AC3,IMPAC3             ;
122511 / 525740,,377777         HRLOI  AC3,377777             ;
122512 / 202740,,036322         MOVEM  AC3,IMPOCT             ;
122513 / 250540,,036544          EXCH  PID,IMPPID             ;
122514 / 250140,,036323          EXCH    P,IMPOPD             ;
122515 / 254020,,036546          JRST      @036546            ;
                       OSYNC:
122516 / 262140,,036546           POP    P,036546             ;
122517 / 201740,,016040         MOVEI  AC3,MAXCNT             ;
122520 / 331000,,036314         SKIPL      036314             ;
122521 / 525740,,377777         HRLOI  AC3,377777             ;
122522 / 202740,,036322         MOVEM  AC3,IMPOCT             ;
122523 / 250140,,036323          EXCH    P,IMPOPD             ;
122524 / 254000,,122477          JRST      ACREST             ;
                       ; GET HERE ON ERROR BIT
                       IMPERB:
122525 / 202640,,036541         MOVEM  AC1,IMPAC1             ;
122526 / 201640,,000024         MOVEI  AC1,000024             ;
122527 / 336000,,036430         SKIPN      IMPIFM             ;
122530 / 435640,,020000           ORI  AC1,   I32             ;
122531 / 740215,,000000          CONO  IMP,      (AC1)        ;; CLEAR ERROR BIT
122532 / 200640,,036541          MOVE  AC1,IMPAC1             ;
122533 / 350000,,036547           AOS      036547             ;; NOTE ANOTHER ERROR BIT DETECTED
122534 / 254520,,000632           JEN      @IMPCHL            ;
122535 /                 ;::    BEND STANFO.IMPSER.
122535 /               ;: IMPINT[J17,SYS] EOF.
122535 /               ;: LPTSER[J17,SYS]
122535 /                 ;::   BEGIN STANFO.LPTSER.
                       ; NEW LINE PRINTER SERVICE ROUTINES - JAM 25 SEPT 68
                       ; NEVER SETS IOACT BIT IN IOS
                       ; DOES CHARACTER CONVERSION EXCEPT WHEN 100 BIT IN RH OF IOS IS ON
                       ; FEATURES INTERNAL BUFFERING
                       ; USERS BUFFERS ARE NOT ENTIRELY EMPTIED UNTIL HE DOES THE 'CLOSE' UUO
                       ; LPT PARAMETER ASSIGNMENTS
                       ; LPT CONTROL REGISTER
                       ; INTERRUPT AND ERROR INTERRUPT SPOTS
                       ; ACCUMULATOR DEFINITIONS . . .
                       ; RH OF LPT IOS WORD
                       ; LH OF LPT IOS WORD
                       ; STORAGE PARAMETERS
                       ;   LPT SERVICE DISPATCH TABLE
122535 / 254000,,122543          JRST      122543             ;;INITILIZE
122536 / 254000,,122716          JRST      122716             ;;LPT HUNG TIMEOUT. SET ERROR BIT IN IOS FOR LPTOUT TO SEE.
                       LPTDSP:
122537 / 254000,,122600          JRST      122600             ;;RELEASE LPT
122540 / 254000,,122561          JRST      122561             ;;CLOSE
122541 / 254000,,122606          JRST      122606             ;;OUTPUT
122542 / 254000,,043267          JRST      043267             ;;INPUT
                       ; INITIALIZE LINE PRINTER - CALLED FOR 200 RESTARTS
                       LPTINI:
122543 / 712600,,100000          CONO  LPT,100000             ;; SET LPT START FLAG
122544 / 476000,,016556         SETOM      016556             ;;SET FLAG DENOTING FIRST LPT OPERATION
                       LPTI_1:
122545 / 201000,,000000         MOVEI                         ;
122546 / 712600,,002000          CONO  LPT,002000             ;;CLEAR HARDWARE REGISTERS.
122547 / 513000,,000647         HLLZS      000647             ;;CLEAR PI DISPATCH ADDRESS FOR NOW
122550 / 260140,,122571         PUSHJ    P,122571             ;; INITIALIZE BYTE POINTERS
122551 / 402000,,016255         SETZM      016255             ;;SET TO ZERO OUT INTERNAL BUFFER
152167 / 016255,,016256           XWD LPTIBF,LPTIBF+1         ;
122552 / 200040,,152167          MOVE  TAC,152167             ;
122553 / 251040,,016555           BLT  TAC,LPTDCN             ;
122554 / 263140,,000000          POPJ    P,                   ;; RETURN TO SENDER, ADDRESS UNKNOWN
                       ; NO SUCH NUMBER, NO SUCH ZONE
                       LPTBI:
122555 / 000000,,016255                                       ;
122555 / 440700,,016255 POINT 7,00016255,                     ;
                       ; LPTUBP - UUO LEVEL SYSTEM BUFFER BYTE POINTER
122556 / 000000,,016255                                       ;; LPTIBP - INTERRUPT LEVEL POINTER
122557 / 000000,,001700                                       ;; LPTCC - TOTAL NUMBER OF FREE CHARACTERS IN SYSTEM BUFFER
122560 / 000000,,000170                                       ;; LPTLCC - CHARACTER POSITION IN LINE
                       ; LINE PRINTER CLOSE CODE
                       LPTCLS:
122561 / 515000,,000040         HRLZI      000040             ;; SET OUR PRIVATE 'LAST UUO' FLAG
122562 / 437006,,000002           ORB      DEVIOS(DEVDAT)     ;; OR IN BIT TO HONEST IOS
122563 / 607000,,004000          TLNN      004000             ;; ARE WE HUNG?
122564 / 254000,,065347          JRST      065347             ;; NO, DO LOTS OF OUTPUTS
122565 / 205000,,004000         MOVSI      LPTERF             ;
122566 / 413000,,016246        ANDCAB      016246             ;; CLEAR ERROR BIT
122567 / 260140,,122676         PUSHJ  PDP,122676             ;; CALL THE HUNG ROUTINE
122570 / 254000,,065347          JRST      065347             ;; NOW DO SOME OUTPUTS
                       ; INITIALIZE IOS AND BYTE POINTERS
                       ; AND ALL THE CRAZY COUNTS
                       LPTINZ:
152342 / 122555,,016557           XWD LPTBI,LPTUBP            ;
122571 / 200040,,152342          MOVE  TAC,152342             ;
122572 / 251040,,016562           BLT  TAC,016562             ;;BLT IN POINTERS AND COUNTS
122573 / 405000,,000317          ANDI      000317             ;;CLEAR ALL BUT MODE&SPECIAL BITS
122574 / 661000,,000020           TLO      000020             ;;
122575 / 202000,,016246         MOVEM      016246             ;;AND STORE IOS
122576 / 402000,,016555         SETZM      LPTDCN             ;
122577 / 263140,,000000          POPJ    P,                   ;
                       LPTREL:
122600 / 603000,,000002          TLNE      000002             ;;HAVE WE DONE ANYTHING YET
122601 / 254000,,122545          JRST      122545             ;;NO
122602 / 515000,,020020         HRLZI      020020             ;;TELL SEVICE ROUTINE
122603 / 260140,,122644         PUSHJ  PDP,122644             ;;HE WILL SET THE WHEELS IN MOTION
122604 / 260140,,046176         PUSHJ  PDP,046176             ;;TREAD WATER A WHILE
122605 / 254000,,122545          JRST      122545             ;;REFRESHING ISN'T IT.
                       ; LPT OUTPUT CODE, LPT MAY BE RUNNING NOW
                       LPTOUT:
122606 / 623000,,000002          TLZE      000002             ;; FIRST UUO?
122607 / 260140,,122571         PUSHJ  PDP,122571             ;;INITIALIZE LPT TABLES AND IOS
122610 / 622000,,200000          TRZE      200000             ;; HAS LPT BEEN HUNG?
122611 / 254000,,122677          JRST      122677             ;; YES, UNHANG IT
122612 / 712740,,000400         CONSO  LPT,000400             ;;CATCH ERRORS NOW!
122613 / 623000,,004000          TLZE      004000             ;; CHECK FOR INTERRUPT LEVEL ERROR
122614 / 254000,,122672          JRST      122672             ;; HANG USER UNTIL IT IS FIXED
122615 / 260140,,122733         PUSHJ  PDP,122733             ;; SEE IF WE CAN LOAD SYSTEM CORE
122616 / 254000,,122662          JRST      122662             ;; SYSTEM BUFFER EMPTY, RETURN TO USER
122617 / 607000,,000040          TLNN      000040             ;; IS THIS THE LAST UUO?
122620 / 254000,,122641          JRST      122641             ;; NO, START LPT AND RETURN TO USER
                       LPTIOW:
122621 / 201040,,001500         MOVEI    A,001500             ;
122622 / 515000,,000021         HRLZI      000021             ;; SET IOS BITS TO SAY HE IS IN IO WAIT
122623 / 135640,,037610           LDB    C,037610             ;; PICK UP HUNG COUNT TIME
122624 / 137640,,037611           DPB    C,037611             ;; DEPOSIT IT, INITIATE HUNG COUNTING
122625 / 700600,,001004          CONO   PI,001004             ;; DO OUR DIRTY WORK WITH CHANNEL 5 OFF
122626 / 542040,,000647          HRRM    A,000647             ;; SET UP DISPATCH BITS
122627 / 434006,,000002            OR      DEVIOS(DEVDAT)     ;; PICK UP OUR IOS
122630 / 201040,,000000         MOVEI    A,                   ;; ASSUME NO ALT!
122631 / 622000,,000400          TRZE      000400             ;; SHOULD BIT BE SET?
122632 / 660040,,004000           TRO    A,004000             ;; YES
122633 / 667000,,001000          TLON      001000             ;; START LINE PRINTER IF IT IS NOT RUNNING
122634 / 712601,,000155          CONO  LPT,000155(A)          ;; SET ITS INTERRUPT CHANNEL AND ASK FOR DONE INTERRUPT
122635 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
122636 / 700600,,002004          CONO   PI,002004             ;; THE LPT WILL INTERRUPT IMMEDIATELY
122637 / 260140,,046176         PUSHJ  PDP,046176             ;; DROP HIM INTO IO WAIT
122640 / 254000,,122606          JRST      122606             ;; TRY ANOTHER OUTPUT WHEN WE RETURN
                       ; SEE IF USER HAS A FREE BUFFER TO BE FILLING
                       ; RETURN TO HIM IF HE DOES, PUT HIM IN IO WAIT IF HE DOESN'T
                       LPTO2:
122641 / 260140,,045301         PUSHJ  PDP,045301             ;; CHECK RING USE BIT
122642 / 254000,,122621          JRST      122621             ;; IF BUSY, PUT HIM IN IO WAIT
122643 / 515000,,000020         HRLZI      000020             ;; OTHERWISE, JUST START UP LPT
                       LPTO3:
122644 / 201040,,001500         MOVEI    A,001500             ;
122645 / 135640,,037610           LDB    C,037610             ;; PICK UP HUNG COUNT TIME
122646 / 137640,,037611           DPB    C,037611             ;; DEPOSIT IT, INITIATE  HUNG COUNTING
122647 / 700600,,001004          CONO   PI,001004             ;; SHUT OFF LPT CHANNEL
122650 / 542040,,000647          HRRM    A,000647             ;; SET UP INTERRUPT DISPATCH CONI BITS
122651 / 434006,,000002            OR      DEVIOS(DEVDAT)     ;; PICK UP OUR OWN IOS
122652 / 201040,,000000         MOVEI    A,                   ;; ASSUME NOT BIT
122653 / 622000,,000400          TRZE      000400             ;; TRUE?
122654 / 660040,,004000           TRO    A,004000             ;; NO, SET BIT
122655 / 667000,,001000          TLON      001000             ;; START LPT IF NEEDED
122656 / 712601,,000155          CONO  LPT,000155(A)          ;; GIVE IT A PAIR OF CHANNELS AND A DONE BIT
122657 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
122660 / 700600,,002004          CONO   PI,002004             ;; RESTORE CHANNEL 5
122661 / 263140,,000000          POPJ  PDP,                   ;; RETURN TO USER, ADDRESS UNKNOWN
                       ; NO SUCH NUMBER, NO SUCH ZONE!!
                       ; COME HERE IF THE SYSTEM BUFFER IS EMPTY
                       LPTO1:
122662 / 607000,,000040          TLNN      000040             ;; IS THIS THE LAST UUO?
122663 / 263140,,000000          POPJ  PDP,                   ;; NO, EXIT TO USER, STAGE LEFT
122664 / 515000,,000040         HRLZI      000040             ;; AND NOW, ZERO THIS BIT FOR GOOD
122665 / 413000,,016246        ANDCAB      LPTIOS             ;
122666 / 603000,,000002          TLNE      000002             ;; IS THIS REALLY THE BEGINNING?
122667 / 263140,,000000          POPJ  PDP,                   ;; YES, EXIT
122670 / 515000,,000220         HRLZI      000220             ;; TELL INTERRUPT SERVICE ROUTINES TO PRINT A CR-FF
122671 / 254000,,122644          JRST      122644             ;; START LPT AND LEAVE
                       ; COME HERE IF LINE PRINTER IS HUNG
                       LPTHNG:
122672 / 602000,,000200          TRNE      000200             ;;IS HE REQUESTING ERROR RETURN ON HUNG LPT
122673 / 254000,,122730          JRST      122730             ;;YES
122674 / 260140,,122676         PUSHJ  PDP,122676             ;; HANG USER
122675 / 254000,,122606          JRST      122606             ;; TRY AGAIN
                       LPTHN:
122676 / 260140,,043522         PUSHJ  PDP,043522             ;; PRINT OUT "DEVICE LPT OK?" AND HANG USER
                       UNHANG:
152134 / 004000,,200000           XWD LPTERF,IODERR           ;
122677 / 200000,,152134          MOVE      152134             ;; SET TO CLEAR THE ERROR FLAGS
122700 / 201040,,001500         MOVEI    A,001500             ;
122701 / 700600,,001004          CONO   PI,001004             ;; SHUT OFF LPT
122702 / 542040,,000647          HRRM    A,000647             ;; SET UP CONI BITS
122703 / 413006,,000002        ANDCAB      DEVIOS(DEVDAT)     ;
122704 / 661000,,001000           TLO      001000             ;; SYSTEM BUFFER WILL NOW BE BUSY
122705 / 201040,,000000         MOVEI    A,                   ;; ASSUME NO BIT
122706 / 622000,,000400          TRZE      000400             ;; TRUE?
122707 / 660040,,004000           TRO    A,004000             ;; NO, SET BIT
122710 / 712601,,000155          CONO  LPT,000155(A)          ;; START UP LPT
122711 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
122712 / 700600,,002004          CONO   PI,002004             ;; RESTORE PI CHANNEL
122713 / 135640,,037610           LDB    C,037610             ;; RESET HUNG COUNT
122714 / 137640,,037611           DPB    C,PDVCNT             ;
122715 / 254000,,122606          JRST      122606             ;; DO SOME MORE OUTPUTS
                       LPTCLT:
122716 / 515000,,004000         HRLZI      004000             ;; KILL THE ERROR BIT
122717 / 700600,,001004          CONO   PI,001004             ;; WITH LPT OFF
122720 / 437000,,016246           ORB      016246             ;; SET ERROR BIT FOR UUO-LEVEL ROUTINES TO SEE
122721 / 621000,,001000           TLZ      001000             ;; SYSTEM BUFFER IS NO LONGER BUSY
122722 / 201300,,016244         MOVEI DEVDAT,016244             ;; GET DDB ADDRESS FOR SETIOD
122723 / 623000,,000001          TLZE      000001             ;; ARE WE IN IO WAIT?
122724 / 260140,,046105         PUSHJ  PDP,046105             ;; YES, TAKE US OUT (PUT INTO TQ)
122725 / 202000,,016246         MOVEM      016246             ;; RESTORE IOS
122726 / 700600,,002004          CONO   PI,002004             ;; RESTORE PI CHANNEL
122727 / 254000,,037401          JRST      037401             ;; SKIP, FORCE HNGCHK TO IGNORE US
                       LPTHN1:
122730 / 660000,,200000           TRO      200000             ;;GIVE HIM A DEVICE ERROR BIT
122731 / 437000,,016246          IORB      LPTIOS             ;
122732 / 263140,,000000          POPJ    P,                   ;
                       ; THIS PART OF THE PROGRAM BRINGS A BUFFERLOAD INTO SYSTEM CORE
                       LPTSET:
122733 / 260140,,045307         PUSHJ  PDP,045307             ;; SET UP COUNT AND POINTR TO POINT AT THE DATA IN HIS BUFFER
122734 / 254000,,122750          JRST      122750             ;; THIS BUFFER HAS ALREADY BEEN EMPTIED!
122735 / 303700,,000300         CAILE COUNT,000300             ;; IS THE COUNT GREATER THAN THE SIZE OF THE WHOLE DAMN BUFFER?
122736 / 254000,,043300          JRST      043300             ;; YES, KILL THE BASTARD!
122737 / 221700,,000005         IMULI COUNT,000005             ;; CHANGE WORD COUNT INTO CHARACTER COUNT
122740 / 200040,,000016          MOVE    A,000016             ;; SEE IF WE CAN FIT A BUFFER IN NOW
122741 / 221040,,000003         IMULI    A,000003             ;; COMPARE FREE SPACE WITH WORST CASE
122742 / 311040,,016561          CAML    A,016561             ;; SEE IF THERE IS SPACE
122743 / 254000,,122750          JRST      122750             ;; NO, PERFORM EXIT MAGIC
122744 / 260140,,122754         PUSHJ  PDP,122754             ;; TRANSFER DATA TO THE SYSTEM BUFFER
122745 / 260140,,044366         PUSHJ  PDP,044366             ;; ADVANCE THE BUFFER DOWN THE RING
122746 / 254000,,122750          JRST      122750             ;; NO MORE BUFFERS, EXIT, STAGE LEFT
122747 / 254000,,122733          JRST      122733             ;; SEE IF WE CAN SQUEEZE IN ANOTHER BUFFER
                       LPTSE2:
122750 / 200040,,016561          MOVE    A,016561             ;; SEE IF WE HAVE TRANSFERRED ANYTHING
122751 / 305040,,001674         CAIGE    A,001674             ;; BY COMPARING WITH FULL COUNT
122752 / 350003,,000000           AOS            (PDP)        ;
122753 / 263140,,000000          POPJ  PDP,                   ;
                       ; TRANSFER BUFFERLOAD CHARACTER BY CHARACTER
                       ; DO CHARACTER CONVERSION IF USER WANTS IT
                       LPTBF:
122754 / 361700,,037403          SOJL COUNT,037403             ;; EXIT IF COUNT IS EXHAUSTED.
122755 / 134040,,000017          ILDB    A,000017             ;; PICK UP BYTE FROM USER
122756 / 602000,,000100          TRNE      000100             ;; DOES HE WANT CONVERSION?
122757 / 254000,,122771          JRST      122771             ;; NO, SKIP IT
122760 / 306040,,000134          CAIN    A,000134             ;; IS THIS THAT GODDAMN CHARACTER?
122761 / 254000,,122765          JRST      122765             ;; YES, CUE UP TWO 177'S
122762 / 200041,,123104          MOVE    A,LPTCTB(A)          ;; PICK UP CORRECT CHARACTER FROM CONVERT TABLE
                       LPTB1:
122763 / 260140,,122773         PUSHJ  PDP,122773             ;; DEPOSIT BYTE IN SYSTEM CORE
122764 / 254000,,122754          JRST       LPTBF             ;
                       LPTB2:
122765 / 201040,,000177         MOVEI    A,000177             ;; CUE UP TWO CONSEC. 177'S
122766 / 260140,,122773         PUSHJ  PDP,LPTDPB             ;
122767 / 201040,,000177         MOVEI    A,000177             ;; ROUTINE DOESN'T ALWAYS PRESERVE A
122770 / 254000,,122763          JRST       LPTB1             ;
                       LPTB3:
122771 / 500041,,123104           HLL    A,LPTCTB(A)          ;; PICK UP HIS DISPATCH BITS
122772 / 254000,,122763          JRST       LPTB1             ;
                       ; ROUTINE TO DEPOSIT ONE BYTE IN THE SYSTEM BUFFER
                       ; AND UPDATE ALL THE CRAZY COUNTS INVOLVED
                       LPTDPB:
122773 / 200006,,000002          MOVE      DEVIOS(DEVDAT)     ;; DO WE HAVE A DANGLING DELETE?
122774 / 603000,,000400          TLNE      000400             ;; WAS LAST A SPECIAL?
122775 / 254000,,123003          JRST      123003             ;; YES!
122776 / 302040,,000177          CAIE    A,000177             ;; NO, IS THIS ONE?
122777 / 254000,,123004          JRST      123004             ;; NO, JUST REG CHAR.
123000 / 661000,,000400           TLO      000400             ;; SET FLAG FOR NEXT TIME
123001 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
123002 / 263140,,000000          POPJ    P,                   ;
                       LPTD2:
123003 / 260140,,123056         PUSHJ  PDP,123056             ;; YES, SEE IS IT IS A CONTROL CHARACTER
                       LPTD1:
123004 / 554240,,000001          HLRZ    D,     A             ;
123005 / 332000,,000005         SKIPE      000005             ;; DOES THIS CHAR HAVE A DISPATCH ADDRESS?
123006 / 254000,,123011          JRST      123011             ;; YES, IT WILL TAKE CARE OF ITSELF
123007 / 337000,,016562         SKIPG      016562             ;; NO, HAVE WE OVERFLOWED THE LINE?
123010 / 260140,,123045         PUSHJ  PDP,123045             ;; YES, MAKE A CRLF
                       LPTD7:
123011 / 607000,,000400          TLNN      000400             ;; NEED WE SEND A 177 FIRST?
123012 / 254000,,123017          JRST      123017             ;; NO
123013 / 261140,,000001          PUSH    P,     A             ;
123014 / 201040,,000177         MOVEI    A,   177             ;
123015 / 260140,,123070         PUSHJ    P,123070             ;; SEND 177
123016 / 262140,,000001           POP    P,     A             ;
                       LPTD7A:
123017 / 260140,,123070         PUSHJ  PDP,123070             ;; OTHERWISE, DEPOSIT CHARACTER AND UPDATE COUNTS
123020 / 306040,,000011          CAIN    A,    11             ;
123021 / 254000,,123040          JRST      123040             ;;SPECIAL DISPATCH FOR TAB
123022 / 557000,,000001         HLRZS      000001             ;; PUT THE DISPATCH ADDRESS IN THE RH
123023 / 326041,,000000         JUMPN    A,      (A)          ;; STRANGE CHARACTER, DISPATCH TO SEPARATE ROUTINE
                       LPTD5A:
123024 / 370000,,016562           SOS      016562             ;; NORMAL CHARACTER, DECREMENT COUNT
                       LPTD5:
123025 / 205000,,000400         MOVSI      000400             ;; ZERO OUT THE DANGLING 177 BIT
123026 / 413006,,000002        ANDCAB      DEVIOS(DEVDAT)     ;
123027 / 263140,,000000          POPJ  PDP,                   ;
                       LPTDV:
123030 / 607000,,000400          TLNN      000400             ;; IS THIS A VERTICAL CHAR?
123031 / 254000,,123025          JRST      123025             ;; YES
123032 / 254000,,123024          JRST      123024             ;; JUST ANOTHER CHAR!
                       LPTD15:
123033 / 603000,,000400          TLNE      000400             ;; IS IT REALLY A CR
123034 / 254000,,123024          JRST      123024             ;; NO, JUST REG CHAR.
123035 / 201040,,000170         MOVEI    A,000170             ;; RESET COUNT TO #CHARS PER LINE
123036 / 202040,,016562         MOVEM    A,LPTLCC             ;
123037 / 254000,,123025          JRST      123025             ;; EXIT, AND ZERO DANGLING 177 BIT
                       LPTD11:
123040 / 370240,,016562           SOS    D,016562             ;; HOW FAR TO NEXT TAB STOP(AT LEAST ONE).
123041 / 421240,,000007        ANDCMI    D,000007             ;; MAYBE MORE
123042 / 607000,,000400          TLNN      000400             ;; WHEN PRECEEDED BY 177 IS JUST GAMMA, NOT TAB
123043 / 202240,,016562         MOVEM    D,016562             ;; THIS FAR!
123044 / 254000,,123025          JRST       LPTD5             ;
                       LPTMCR:
123045 / 261140,,000001          PUSH  PDP,000001             ;; SAVE CURRENT CHARACTER
123046 / 201040,,000015         MOVEI    A,000015             ;; MAKE A CRLF
123047 / 260140,,123070         PUSHJ  PDP, LPTDB             ;
123050 / 201040,,000012         MOVEI    A,    12             ;
123051 / 260140,,123070         PUSHJ  PDP, LPTDB             ;
123052 / 201040,,000170         MOVEI    A,000170             ;; RESET LINE COUNT
123053 / 202040,,016562         MOVEM    A,LPTLCC             ;
123054 / 262140,,000001           POP  PDP,     A             ;
123055 / 263140,,000000          POPJ  PDP,                   ;
                       LPTCCH:
123056 / 550240,,000001          HRRZ    D,     A             ;
123057 / 302240,,000020          CAIE    D,000020             ;;SAME AS V. TAB
123060 / 306240,,000022          CAIN    D,000022             ;;	"
123061 / 505040,,123025          HRLI    A, LPTD5             ;
123062 / 302240,,000023          CAIE    D,000023             ;;	"
123063 / 306240,,000024          CAIN    D,000024             ;;	"
123064 / 505040,,123025          HRLI    A, LPTD5             ;
123065 / 306240,,000021          CAIN    D,000021             ;;LINE FEED OVER PAGE BOUNDARIES
123066 / 505040,,123025          HRLI    A, LPTD5             ;
123067 / 263140,,000000          POPJ  PDP,                   ;
                       ; BASIC LEVEL DEPOSIT BYTE AND WRAP AROUND POINTER
                       LPTDB:
123070 / 700600,,001004          CONO   PI,001004             ;; SHUT OFF LINE PRINTER A SEC.
123071 / 200100,,016557          MOVE    B,016557             ;; PICK UP BYTE POINTER
123072 / 133000,,000002           IBP      000002             ;; INCREMENT IT
123073 / 550640,,000002          HRRZ    C,000002             ;; NOW GET ADDRESS PART
123074 / 301640,,016555          CAIL    C,016555             ;; CHECK FOR WRAP AROUND
153142 / 000000,,016255                                       ;
153142 / 350700,,016255 POINT 7,00016255,6                    ;
123075 / 200100,,153142          MOVE    B,153142             ;
123076 / 137040,,000002           DPB    A,000002             ;; DEPOSIT THE CHARACTER
123077 / 202100,,016557         MOVEM    B,016557             ;; REPLACE THE BYTE POINTER
123100 / 377000,,016561          SOSG      016561             ;; UPDATE CHARACTER COUNT
123101 / 265240,,043257           JSP  DAT,043257             ;;BLAST THE BASTARD!
123102 / 700600,,002004          CONO   PI,002004             ;; SPEED UP THE LPT
123103 / 263140,,000000          POPJ  PDP,                   ;
                       ; CHARACTER CONVERSION TABLE
                       LPTCTB:
123104 / 123025,,000000           XWD LPTD5,0		               ;
                       ; NULL, DOESN'T AFFECT POSITION ON LINE
123105 / 000000,,000001                                       ;
123106 / 000000,,000002                                       ;
123107 / 000000,,000003                                       ;
123110 / 000000,,000004                                       ;
123111 / 000000,,000005                                       ;
123112 / 000000,,000006                                       ;
123113 / 000000,,000007                                       ;
123114 / 000000,,000010                                       ;
123115 / 000000,,000011                                       ;; HORIZONTAL TAB, SCREWS UP LINE POSITION
123116 / 123030,,000012           XWD LPTDV,12		              ;
                       ; LINE FEED, DOESN'T AFFECT POSITION
123117 / 123030,,000013           XWD LPTDV,13		              ;
                       ; VERTICAL TAB
123120 / 123030,,000014           XWD LPTDV,14		              ;
                       ; FORM FEED
123121 / 123033,,000015           XWD LPTD15,15		             ;
                       ; CARRIAGE RETURN, ZEROS COUNT
123122 / 000000,,000016                                       ;
123123 / 000000,,000017                                       ;
123124 / 000000,,000020                                       ;
123125 / 000000,,000021                                       ;
123126 / 000000,,000022                                       ;
123127 / 000000,,000023                                       ;
123130 / 000000,,000024                                       ;
123131 / 000000,,000025                                       ;
123132 / 000000,,000026                                       ;
123133 / 000000,,000027                                       ;
123134 / 000000,,000137                                       ;; 137←30
123135 / 000000,,000031                                       ;
123136 / 000000,,000134                                       ;; 134←32
123137 / 000000,,000033                                       ;
123140 / 000000,,000034                                       ;
123141 / 000000,,000035                                       ;
123142 / 000000,,000036                                       ;
123143 / 000000,,000037                                       ;
123144 / 000000,,000040                                       ;
123145 / 000000,,000041                                       ;
123146 / 000000,,000042                                       ;
123147 / 000000,,000043                                       ;
123150 / 000000,,000044                                       ;
123151 / 000000,,000045                                       ;
123152 / 000000,,000046                                       ;
123153 / 000000,,000047                                       ;
123154 / 000000,,000050                                       ;
                       ; MORE CHARACTER TABLE, CHARACTERS 51 TO 123
123155 / 000000,,000051                                       ;
123156 / 000000,,000052                                       ;
123157 / 000000,,000053                                       ;
123160 / 000000,,000054                                       ;
123161 / 000000,,000055                                       ;
123162 / 000000,,000056                                       ;
123163 / 000000,,000057                                       ;
123164 / 000000,,000060                                       ;
123165 / 000000,,000061                                       ;
123166 / 000000,,000062                                       ;
123167 / 000000,,000063                                       ;
123170 / 000000,,000064                                       ;
123171 / 000000,,000065                                       ;
123172 / 000000,,000066                                       ;
123173 / 000000,,000067                                       ;
123174 / 000000,,000070                                       ;
123175 / 000000,,000071                                       ;
123176 / 000000,,000072                                       ;
123177 / 000000,,000073                                       ;
123200 / 000000,,000074                                       ;
123201 / 000000,,000075                                       ;
123202 / 000000,,000076                                       ;
123203 / 000000,,000077                                       ;
123204 / 000000,,000140                                       ;; 140←100
123205 / 000000,,000101                                       ;
123206 / 000000,,000102                                       ;
123207 / 000000,,000103                                       ;
123210 / 000000,,000104                                       ;
123211 / 000000,,000105                                       ;
123212 / 000000,,000106                                       ;
123213 / 000000,,000107                                       ;
123214 / 000000,,000110                                       ;
123215 / 000000,,000111                                       ;
123216 / 000000,,000112                                       ;
123217 / 000000,,000113                                       ;
123220 / 000000,,000114                                       ;
123221 / 000000,,000115                                       ;
123222 / 000000,,000116                                       ;
123223 / 000000,,000117                                       ;
123224 / 000000,,000120                                       ;
123225 / 000000,,000121                                       ;
123226 / 000000,,000122                                       ;
123227 / 000000,,000123                                       ;
                       ; MORE CHARACTER CONVERSION TABLE, CHARACTERS 124 TO 177
123230 / 000000,,000124                                       ;
123231 / 000000,,000125                                       ;
123232 / 000000,,000126                                       ;
123233 / 000000,,000127                                       ;
123234 / 000000,,000130                                       ;
123235 / 000000,,000131                                       ;
123236 / 000000,,000132                                       ;
123237 / 000000,,000133                                       ;
123240 / 000000,,000134                                       ;
123241 / 000000,,000135                                       ;
123242 / 000000,,000032                                       ;; 32←136
123243 / 000000,,000030                                       ;; 30←137
123244 / 000000,,000100                                       ;; 100←140
123245 / 000000,,000141                                       ;
123246 / 000000,,000142                                       ;
123247 / 000000,,000143                                       ;
123250 / 000000,,000144                                       ;
123251 / 000000,,000145                                       ;
123252 / 000000,,000146                                       ;
123253 / 000000,,000147                                       ;
123254 / 000000,,000150                                       ;
123255 / 000000,,000151                                       ;
123256 / 000000,,000152                                       ;
123257 / 000000,,000153                                       ;
123260 / 000000,,000154                                       ;
123261 / 000000,,000155                                       ;
123262 / 000000,,000156                                       ;
123263 / 000000,,000157                                       ;
123264 / 000000,,000160                                       ;
123265 / 000000,,000161                                       ;
123266 / 000000,,000162                                       ;
123267 / 000000,,000163                                       ;
123270 / 000000,,000164                                       ;
123271 / 000000,,000165                                       ;
123272 / 000000,,000166                                       ;
123273 / 000000,,000167                                       ;
123274 / 000000,,000170                                       ;
123275 / 000000,,000171                                       ;
123276 / 000000,,000172                                       ;
123277 / 000000,,000173                                       ;
123300 / 000000,,000176                                       ;; 176←174
123301 / 000000,,000175                                       ;
123302 / 000000,,000175                                       ;; 175←176
123303 / 000000,,000177                                       ;
                       ; THIS PART IS ENTIRELY AUTONOMUS AND DOES NOT TRY TO
                       ; TICKLE THE USER'S CORE, BECAUSE IT ISN'T THERE!
                       LPTINT:
123304 / 264000,,001023           JSR      001023             ;; SAVE ACCUMULATORS AND SET RETURN ADDRESS
123305 / 712700,,001000         CONSZ  LPT,001000             ;; LINE OVERFLOW?
123306 / 254000,,123432          JRST      LPTLOI             ;
123307 / 201300,,016244         MOVEI DEVDAT,016244             ;; SET UP DEVICE DATA BLOCK ADDRESS FOR SETIOD AND PDVTIM
123310 / 200000,,016246          MOVE      016246             ;; LET'S SEE WHAT THE UUO-LEVEL ROUTINES ARE TRYING TO TELL US
123311 / 712700,,000070         CONSZ  LPT,000070             ;; IS THE ERROR CHANNEL DEASSIGNED?
123312 / 712740,,000100         CONSO  LPT,000100             ;; OR MAYBE THIS IS REALLY AN ERROR?
123313 / 254000,,123413          JRST      123413             ;; GO CHECK IT OUT
123314 / 712700,,000400         CONSZ  LPT,000400             ;; IS LPT TURNED OFF?
123315 / 254000,,123405          JRST      123405             ;; YES, FORCE HUNG DEVICE MESSAGE
123316 / 200040,,016561          MOVE    A,016561             ;; FIRST, IS THERE ANYTHING TO PRINT
123317 / 301040,,001700          CAIL    A,001700             ;; COMPARE WITH TOTAL COUNT
123320 / 254000,,123374          JRST      123374             ;; NOTHING TO PRINT, SHUT OFF LPT
123321 / 336000,,016556         SKIPN      016556             ;;IS THIS THE FIRST INTERRUPT?
123322 / 254000,,123326          JRST      123326             ;;NO.
123323 / 712540,,152277         DATAO  LPT,152277             ;;YES. HERE WE SEND A TOP OF DOUBLE FORM
123324 / 402000,,016556         SETZM      016556             ;;AVOID THIS NEXT TIME
123325 / 254000,,123370          JRST      123370             ;;GO DISMISS THIS INTERRUPT
                       LPTIN3:
123326 / 302040,,001400          CAIE    A,001400             ;; CHECK FOR NEARLY EMPTY
123327 / 254000,,123332          JRST      123332             ;; NOT NEARLY EMPTY, CONTINUE NORMALLY
123330 / 623000,,000001          TLZE      000001             ;; ARE WE IN AN IO WAIT?
123331 / 260140,,046105         PUSHJ  PDP,046105             ;; YES, GET US OUT!
                       LPTIN2:
123332 / 135640,,037610           LDB    C,037610             ;; PICK UP HUNG COUNT TIME
123333 / 137640,,037611           DPB    C,037611             ;; DEPOSIT IT, INITIATE HUNG COUNTING
123334 / 336040,,016555         SKIPN    A,016555             ;; SEE IF WE TRANSMIT LESS THAN 5 CHARS THIS TIME
123335 / 201040,,000005         MOVEI    A,000005             ;; WE WILL PRINT 5 CHARACTERS
123336 / 402000,,016555         SETZM      016555             ;; INDICATE 5 CHARACTERS NEXT TIME
123337 / 270040,,016561           ADD    A,016561             ;; ADD IN COUNT
123340 / 303040,,001700         CAILE    A,001700             ;; COMPARE WITH TOTAL COUNT
123341 / 254000,,123352          JRST      123352             ;; IF TOO LARGE, THERE IS NOT A MULTIPLE OF 5 CHARS
123342 / 202040,,016561         MOVEM    A,016561             ;; STORE CHAR. COUNT
123343 / 712560,,016560         DATAO  LPT,@016560            ;; SEND WORD TO LINE PRINTER
123344 / 402020,,016560         SETZM      @016560            ;; ZERO THAT WORD TO AVOID CONFUSION
123345 / 350040,,016560           AOS    A,016560             ;; OTHERWISE THERE IS, AND WE CAN INCREMENT OUT POINTER
123346 / 301040,,016555          CAIL    A,016555             ;; CHECK FOR BUFFER OVERFLOW . . .
123347 / 201040,,016255         MOVEI    A,016255             ;; AND RESET POINTER IF SO
123350 / 202040,,016560         MOVEM    A,016560             ;; AND RE-STORE POINTER FOR NEXT TIME
123351 / 263140,,000000          POPJ  PDP,                   ;; SO LONG, BEEN GOOD TO SERVE YOU
                       ; COME HERE WHEN THERE IS NOT A FULL WORD TO BE PRINTED
                       LPTIN1:
123352 / 607000,,000200          TLNN      000200             ;; IS THIS THE LAST WORD IN BUFFER?
123353 / 254000,,123374          JRST      123374             ;; NO, FORGET IT
123354 / 712560,,016560         DATAO  LPT,@016560            ;; SEND PARTIAL WORD
123355 / 402020,,016560         SETZM      @016560            ;; AND ZERO IT FOR POSTERITY
123356 / 275040,,001700          SUBI    A,001700             ;; GET NUMBER OF CHARS WE WILL TRANSMITT NEXT TIME
123357 / 202040,,016555         MOVEM    A,016555             ;; PUT IT HERE FOR FUTURE REFERENCE
123360 / 201040,,001700         MOVEI    A,001700             ;; RESET COUNT TO MAXIMUM
123361 / 202040,,016561         MOVEM    A, LPTCC             ;
123362 / 263140,,000000          POPJ  PDP,                   ;; NO WORRY ABOUT WRAP-AROUND EITHER
                       LPTCRF:
123363 / 712600,,004155          CONO  LPT,004155             ;;SET ALT FLAG
123364 / 712540,,152324         DATAO  LPT,152324             ;;3 TOP OF DOUBLE FORMS
123365 / 402000,,016556         SETZM      LPTBG1             ;
123366 / 254000,,123370          JRST      123370             ;;NO NEED TO ADVANCE FORM AT THE START
                       LPTCF2:
123367 / 476000,,016556         SETOM      016556             ;; MAKE CR-FF ON NEXT OUTPUT.
                       LPTCF1:
123370 / 135640,,037610           LDB    C,037610             ;; PICK UP HUNG COUNT TIME, DEFINED IN LOWCOR
123371 / 137640,,037611           DPB    C,037611             ;; DEPOSIT IT, INITIATE HUNG COUNTING
                       LPTXIT:
123372 / 202000,,016246         MOVEM      016246             ;; STORE IOS IN LPT DDB
123373 / 263140,,000000          POPJ    P,                   ;; AND EXIT, CHANNEL 5
                       LPTOF:
123374 / 623000,,020000          TLZE      020000             ;; HAVE WE GIVEN TERMINAL 5 FF'S
123375 / 254000,,123363          JRST      123363             ;; GO DO IT AND RETURN IMMEDIATELY
123376 / 623000,,000200          TLZE      000200             ;; IS THIS THE END
123377 / 254000,,123367          JRST      123367             ;; YES - ARRANGE TO MAKE FF'S NEXT
123400 / 260140,,123405         PUSHJ    P,123405             ;; CLEAR LPT (PRESERVING DELETE BIT]
123401 / 623000,,000001          TLZE      000001             ;; ARE WE IN AN IO WAIT?
123402 / 260140,,046105         PUSHJ  PDP,046105             ;; YES, CHANGE TO WAIT SATISFIED!
123403 / 621000,,001000           TLZ      001000             ;; SYSTEM BUFFER IS NO LONGER BUSY
123404 / 254000,,123372          JRST      123372             ;; EXIT
                       ; COME HERE IF WE FIND THE LPT IS NOT ON
                       ; JUST CLEAR LPT AND WAIT FOR HUNG DEVICE MESSAGE
                       LPTERH:
123405 / 513000,,000647         HLLZS      LPTCON             ;
123406 / 712700,,004000         CONSZ  LPT,004000             ;; IS DELETE FLAG CURRENTLY SET?
123407 / 660000,,000400           TRO      000400             ;; YES, REMEMBER IT!
123410 / 202000,,016246         MOVEM      016246             ;; IN MEMORY TOO
123411 / 712600,,000000          CONO  LPT,                   ;
123412 / 263140,,000000          POPJ    P,                   ;
                       ; THIS PART HANDLES THE ERROR SYSTEM
                       LPTERI:
123413 / 712740,,000070         CONSO  LPT,000070             ;; IS THE ERROR CHANNEL ASSIGNED?
123414 / 254000,,123425          JRST      123425             ;; NO, GO REASSIGN IT AND CONTINUE
123415 / 201040,,000000         MOVEI    A,                   ;; ASSUME NO BIT
123416 / 622000,,000400          TRZE      000400             ;; TRUE?
123417 / 660040,,004000           TRO    A,004000             ;; NO, SET BIT
123420 / 712601,,000305          CONO  LPT,000305(A)          ;; YES, DEASSIGN IT
123421 / 202000,,016246         MOVEM      016246             ;
123422 / 201040,,000100         MOVEI    A,000100             ;; SET TO INTERRUPT ONLY WHEN DONE
                       LPTER2:
123423 / 542040,,000647          HRRM    A,000647             ;; TELL INTERRUPT SERVICE ABOUT IT
123424 / 263140,,000000          POPJ  PDP,                   ;
                       LPTER1:
123425 / 712640,,000001          CONI  LPT,000001             ;; GET CURRENT CONDITIONS, EVEN THOUGH I KNOW EXACTLY WAT THEY ARE
123426 / 405040,,000300          ANDI    A,000300             ;; MASK OUT THE RIGHT ONES
123427 / 712601,,000055          CONO  LPT,LPTCHB(A)          ;; RESTORE ALL CONO BITS
123430 / 201040,,001500         MOVEI    A,001500             ;
123431 / 254000,,123423          JRST      123423             ;; AND PRETEND NOTHING EVER HAPPENED
                       LPTLOI:
123432 / 712640,,000001          CONI  LPT,000001             ;; GET LPT BITS
123433 / 620040,,001000           TRZ    A,001000             ;; KILL LINE OVERFLOW BIT
123434 / 712601,,000000          CONO  LPT,      (A)          ;; GIVE THEM BACK
123435 / 712540,,152275         DATAO  LPT,152275             ;
123436 / 263140,,000000          POPJ  PDP,                   ;
123437 /                 ;::    BEND STANFO.LPTSER.
123437 /               ;: LPTSER[J17,SYS] EOF.
123437 /               ;: PTPSER[J17,SYS]
123437 /                 ;::   BEGIN STANFO.PTPSER.
                       ; ROUTINES DESIGNED TO SERVE DUAL-PROCESSOR PUNCH SYSTEM
                       ; PARAMETER ASSIGNMENTS . . .
                       ; ACCUMULATORS
                       ; IOS BITS
                       ; CONO BITS . . .
                       ; PTP SERVICE DISPATCH TABLE
123437 / 254000,,123450          JRST      123450             ;; INITIALIZE
123440 / 254000,,123511          JRST      123511             ;; HUNG TIME OUT, SET ERROR BIT
                       PTPDSP:
123441 / 254000,,123445          JRST      PTPREL             ;
123442 / 254000,,123471          JRST      123471             ;; CLOSE
123443 / 254000,,123475          JRST      123475             ;; OUTPUT
123444 / 254000,,043267          JRST      043267             ;; INPUT ?????
                       PTPREL:
123445 / 205000,,011000         MOVSI      011000             ;
123446 / 412000,,017225        ANDCAM      PTPIOS             ;
123447 / 263140,,000000          POPJ  PDP,                   ;
                       ; INITIALIZE CODE, RESET ALL REGISTERS
                       PTPINI:
152174 / 017234,,017235           XWD PTPIBP,PTPIBP+1         ;
123450 / 200040,,152174          MOVE    A,152174             ;
123451 / 402000,,017234         SETZM      017234             ;; SET UP BLT POINTER TO ZERO PTPDDB
123452 / 251040,,017566           BLT    A,017566             ;; FROM DEVOAD TO END OF PTPDDB
123453 / 402000,,017566         SETZM      PTPCSC             ;
123454 / 402000,,017567         SETZM      017567             ;
123455 / 402000,,017570         SETZM      017570             ;
123456 / 402000,,017571         SETZM      017571             ;
123457 / 332000,,000562         SKIPE      000562             ;; DO WE HAVE A 2-PROCESSOR SYSTEM?
123460 / 476000,,017564         SETOM      017564             ;; SET THE MODE FLAG IF WE DO
123461 / 710200,,000000          CONO  PTP,                   ;; SETTLE PTP CONTROL REGISTER
123462 / 513000,,000701         HLLZS      PTPCN1             ;
123463 / 513000,,000766         HLLZS      PTPCN2             ;
123464 / 201040,,000701         MOVEI  TAC,000701             ;;ASSUME P1
123465 / 332000,,017564         SKIPE      017564             ;;P1?
123466 / 201040,,000766         MOVEI  TAC,000766             ;;NO. USING P2
123467 / 202040,,017572         MOVEM  TAC,017572             ;;SET ADDRESS OF INTERRUPT CHAIN CONSZ
123470 / 263140,,000000          POPJ    P,                   ;
                       ; CLOSE CODE
                       PTPCLS:
123471 / 400040,,000000          SETZ    A,                   ;; SET THE 'LAST UUO' BIT IN IOS
123472 / 515000,,000040         HRLZI      000040             ;; THIS BIT
123473 / 260140,,123540         PUSHJ  PDP,123540             ;; THIS ROUTINE HANDLES THAT
123474 / 254000,,065347          JRST         OUT             ;
                       ; PTP OUTPUT CODE
                       PTPOUT:
123475 / 603000,,000002          TLNE      000002             ;; FIRST UUO?
123476 / 621000,,010000           TLZ      010000             ;; YES, ZERO HUNG DEVICE BIT
123477 / 603000,,010000          TLNE      010000             ;; CHECK FOR HUNG DEVICE
123500 / 254000,,123504          JRST      PTPHNG             ;
                       PTPO2:
123501 / 623000,,000002          TLZE      000002             ;; FIRST OUTPUT?
123502 / 254000,,124053          JRST      124053             ;; YES, FIGURE OUT CONFIGURATION NOW
                       PTPO1:
123503 / 254020,,017561          JRST      @017561            ;; EACH MODE HAS A DIFFERENT ROUTINE
                       ; ARE YOU HUNG UP? AH, ER, ARE YOU HUNG UP? HUNG UP? HUNG UP? HUNG UP? HUNG UP?     HUNG UP?        HUNG UP?
                       PTPHNG:
123504 / 260140,,043522         PUSHJ  PDP,043522             ;; PRINT 'DEVICE PTP OK?' AND HANG HIM UP
123505 / 400000,,000000          SETZ                         ;; DON'T SET ANYTHING
123506 / 515040,,011000         HRLZI    A,011000             ;; GOTTA CLEAR  ERROR FLAG NOW
123507 / 260140,,123562         PUSHJ  PDP,123562             ;; AFTER IT'S OVER, START UP AGAIN
123510 / 254000,,123501          JRST       PTPO2             ;
                       ; COME HERE IF THE CLOCK TICKS
                       PTPCLT:
123511 / 201300,,017223         MOVEI DEVDAT,017223             ;; SET UP THIS FOR SETIOD
123512 / 515000,,010000         HRLZI      010000             ;; ERROR BIT WE WANT TO SET
123513 / 332000,,000562         SKIPE      000562             ;; IS P2 ACTIVE?
123514 / 254000,,123524          JRST      123524             ;; YES, DO SOMETHING
123515 / 700600,,001002          CONO   PI,001002             ;; SHUT OFF PTP
123516 / 437000,,017225           ORB      017225             ;; OR IN ERROR BIT
123517 / 623000,,000001          TLZE      000001             ;; ARE WE IN AN IO WAIT?
123520 / 260140,,046105         PUSHJ  PDP,046105             ;; YES, GET US OUT!
123521 / 202000,,017225         MOVEM      017225             ;; RESTORE IOS
123522 / 700600,,002002          CONO   PI,002002             ;; SPEED UP PTP, EVEN THOUGH IT IS HUNG
123523 / 254000,,037401          JRST      037401             ;; SKIP RETURN, DON'T EXCITE HNGCHK
                       PTPCL1:
123524 / 201100,,000001         MOVEI    B,000001             ;; WE ARE P1
123525 / 260140,,037464         PUSHJ    P, PWAIT             ;
123526 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123527 / 437000,,017225           ORB      017225             ;; OR IN ERROR BIT
123530 / 623000,,000001          TLZE      000001             ;; ARE WE IN IO WAIT?
123531 / 260140,,046105         PUSHJ  PDP,046105             ;; YES, GET US OUT!!
123532 / 202000,,017225         MOVEM      017225             ;; RESTORE IOS
123533 / 350003,,000000           AOS            (PDP)        ;; SET TO SKIP RETURN
123534 / 201100,,000001         MOVEI    B,000001             ;; RESTORE WHAT SETIOD CLOBBERED
123535 / 260140,,037501         PUSHJ    P, XWAIT             ;
123536 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123537 / 263140,,000000          POPJ  PDP,                   ;
                       ; 2-PROCESSOR ROUTINES
                       ; SET AND CLEAR BITS IN IOS
                       ; PUT BITS YOU WANT SET IN IOS, BITS YOU WANT CLEARED IN A (IN TAC)
                       PTPSOS:
123540 / 332000,,017564         SKIPE      017564             ;; ARE WE IN 1 OR 2 PROCESSOR MODE
123541 / 254000,,123547          JRST      123547             ;; 2-PROCESSORS, HARDER
123542 / 700600,,001002          CONO   PI,001002             ;; SLOW DOWN PTP
123543 / 412040,,017225        ANDCAM    A,017225             ;; ZERO OUT BITS IN A
123544 / 437000,,017225           ORB      017225             ;; OR BITS BACK IN
123545 / 700600,,002002          CONO   PI,002002             ;; SPEED UP PTP
123546 / 263140,,000000          POPJ  PDP,                   ;
                       PTPS1:
123547 / 202040,,017232         MOVEM    A,017232             ;; SAVE THIS ACCUMULATOR
123550 / 201100,,000001         MOVEI    B,000001             ;; WE ARE P1
123551 / 260140,,037464         PUSHJ    P, PWAIT             ;
123552 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123553 / 434000,,017225            OR      017225             ;; OR IN IOS BITS
123554 / 420000,,017232         ANDCM      017232             ;; TAKE OUT REQUESTED BITS
123555 / 202000,,017225         MOVEM      017225             ;; RESTORE IOS
123556 / 260140,,037501         PUSHJ    P, XWAIT             ;
123557 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123560 / 263140,,000000          POPJ  PDP,                   ;
                       ; ROUTINE TO SET BITS IN IOS AND START DEVICE
                       PTPSTD:
123561 / 403040,,000000         SETZB    A,                   ;; START DEVICE, SET NO IOS BITS
                       PTPSOD:
152012 / 000020,,000000           XWD IO,0                    ;
123562 / 434000,,152012            OR      152012             ;; FIRST, OR IN OUTPUT BIT
123563 / 135640,,037610           LDB    C,037610             ;; AND SET HUNG COUNT
123564 / 137640,,037611           DPB    C,PDVCNT             ;
123565 / 332000,,017564         SKIPE      017564             ;; ARE WE RUNNING 1 OR 2 PROCESSORS TODAY?
123566 / 254000,,123602          JRST      123602             ;; 2 PROCESSORS
123567 / 201100,,000110         MOVEI    B,000110             ;; ASK FOR INTERRUPTS UPON DONE OR OUT OF PAPER
123570 / 700600,,001002          CONO   PI,001002             ;; SHUT OF PTP IF IT IS RUNNING
123571 / 434000,,017225            OR      017225             ;; PUT BITS INTO IOS
123572 / 420000,,000001         ANDCM      000001             ;; TAKE BITS OUT
123573 / 663000,,001000          TLOE      001000             ;; IS THE PTP ALREADY RUNNING?
123574 / 254000,,123577          JRST      123577             ;; YES, SKIP IT
123575 / 542120,,017572          HRRM    B,@017572            ;; SET INTERRUPT LOCATION
123576 / 710200,,000016          CONO  PTP,000016             ;; ASK FOR A DONE INTERRUPT, SET PI CHANNEL
                       PTPSD2:
123577 / 202000,,017225         MOVEM      017225             ;; RESTORE IOS
123600 / 700600,,002002          CONO   PI,002002             ;; SPEED UP PTP, WILL INTERRUPT NOW
123601 / 263140,,000000          POPJ  PDP,                   ;
                       PTPSD1:
123602 / 202040,,017232         MOVEM    A,017232             ;; SAVE THE BITS WE ARE TO CLEAR
123603 / 260140,,037464         PUSHJ    P, PWAIT             ;
123604 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123605 / 434000,,017225            OR      PTPIOS             ;
123606 / 420000,,017232         ANDCM      017232             ;; CLEAR APPROPRIATE BITS
123607 / 667000,,001000          TLON      001000             ;; SET DEVICE RUNNING NOW BIT.
123610 / 476000,,017563         SETOM      017563             ;; ASK P2 TO START PTP SINCE IT'S NOT ALREADY ON.
123611 / 202000,,017225         MOVEM      017225             ;; RESTORE IOS
123612 / 260140,,037501         PUSHJ    P, XWAIT             ;
123613 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123614 / 263140,,000000          POPJ  PDP,                   ;
                       ; ROUTINE TO SET BITS IN IOS, START DEVICE, AND WAIT FOR
                       ; DEVICE TO FINISH
                       PTPIOW:
123615 / 403040,,000000         SETZB    A,                   ;
                       PTPSOW:
123616 / 260140,,123562         PUSHJ  PDP,123562             ;; STORE IOS BITS AND START DEVICE
123617 / 254000,,046176          JRST      046176             ;; WAIT FOR DEVICE TO FINISH
                       ; CLOCK INTERRUPT ROUTINES FOR PTP
                       ;PDP-10 HERE WHEN PDP-6 HAS FINISHED BUFFER
                       PTPP1:
123620 / 402000,,017565         SETZM      017565             ;;CLEAR REQUEST
123621 / 201300,,017223         MOVEI DEVDAT,017223             ;; GET ADDRESS OF DEVICE DDP FOR SETIO
123622 / 254000,,046105          JRST      046105             ;; SET IO WAIT SATISFIED BIT
                       ;PDP-6 HERE WHEN PDP-10 HAS SET PTPACT
                       PTPP2:
123623 / 200040,,017563          MOVE  TAC,017563             ;; ARE WE TO START THE DEVICE FOR P1?
123624 / 322040,,037403         JUMPE  TAC, CPOPJ             ;
123625 / 402000,,017563         SETZM      017563             ;; YES, FLAG IT STARTED
123626 / 201300,,017223         MOVEI DEVDAT,017223             ;; SET UP DEVDAT FOR PDVTIM
123627 / 700600,,001002          CONO   PI,001002             ;; SHUT OFF PTP
123630 / 515000,,000020         HRLZI      000020             ;; SET OUTPUT BIT IN IOS
123631 / 434000,,017225            OR      PTPIOS             ;
123632 / 201640,,000110         MOVEI    C,000110             ;; ASK FOR INTERRUPTS UPON DONE OR OUT OF PAPER
                       ;	TLOE IOS,DEVSBB		; IS PTP ALREADY RUNNING?
                       ;	JRST PTPP2A		; YES, QUIT NOW
123633 / 202000,,017225         MOVEM      017225             ;; NO, STORE IOS
123634 / 710200,,000016          CONO  PTP,000016             ;; AND ASK FOR DONE INTERRUPT FROM PTP
123635 / 542660,,017572          HRRM    C,@017572            ;; SET UP CONSO LOCATION
                       PTPP2A:
123636 / 700600,,002002          CONO   PI,002002             ;; RESTORE PI CHANNEL
123637 / 135640,,037610           LDB    C,037610             ;; RESET HUNG COUNT
123640 / 137640,,037611           DPB    C,PDVCNT             ;
123641 / 263140,,000000          POPJ  PDP,                   ;
                       ; OUTPUT ROUTINES ARE DIVIDED INTO PARTS AND KINDS, DEPENDING ON
                       ; MODE OF OPERATION AND OTHER SUCH STUFF
                       PTPK1:
123642 / 201040,,000005         MOVEI    A,000005             ;; SET UP CHARS PER WORD AS 5, ASCII MODE
123643 / 304000,,000000          CAIA                         ;
                       PTPK3:
123644 / 201040,,000006         MOVEI    A,000006             ;; BINARY MODE, 6 PER WORD
123645 / 202040,,017562         MOVEM    A,017562             ;; CHARACTERS PER WORD
                       PTPK1F:
123646 / 260140,,045307         PUSHJ  PDP,045307             ;; SET UP COUNT AND POINTR TO USER'S CORE
123647 / 254000,,123657          JRST      PTPK1A             ;
123650 / 260140,,123766         PUSHJ  PDP,123766             ;; BLT BUFFER INTO SYSTEM CORE
123651 / 254000,,123655          JRST      123655             ;; NO ROOM IN THE INN . . .
123652 / 260140,,044366         PUSHJ  PDP,044366             ;; FIT AS MANY BUFFERS IN NOW AS IS POSSIBLE
123653 / 254000,,123657          JRST      PTPK1A             ;
123654 / 254000,,123646          JRST      PTPK1F             ;
                       PTPK1B:
123655 / 260140,,123615         PUSHJ  PDP,123615             ;; ASK TO START DEVICE AND WAIT
123656 / 254000,,123646          JRST      PTPK1F             ;
                       PTPK2A:
                       PTPK1A:
123657 / 335000,,017557        SKIPGE      017557             ;; IS SYSTEM BUFFER EMPTY?
123660 / 254000,,123666          JRST      123666             ;; NO, START DEVICE AND LEAVE
123661 / 607000,,000040          TLNN      000040             ;; LAST UUO?
123662 / 263140,,000000          POPJ  PDP,                   ;; NO, LET HIM GIVE ANOTHER ONE
                       PTPK1D:
123663 / 400040,,000000          SETZ    A,                   ;; SET THE 'PTP DISCONNECT' BIT IN IOS
123664 / 515000,,002000         HRLZI      002000             ;; TELLS INTERRUPT SERVICE TO FEED A LITTLE
123665 / 254000,,123562          JRST      123562             ;; START DEVICE AND LEAVE
                       PTPK1C:
123666 / 603000,,000040          TLNE      000040             ;; LAST UUO?
123667 / 254000,,123663          JRST      123663             ;; YES, GO START DEVICE
123670 / 260140,,045301         PUSHJ  PDP,045301             ;; DOES HE HAVE ANOTHER BUFFER TO FILL
123671 / 254000,,123615          JRST      123615             ;; NO, WAIT FIRST AND THEN LEAVE
123672 / 254000,,123561          JRST      123561             ;; START DEVICE AND LEAVE
                       ; IN THIS MODE, WE BRING 1 CHAR PER WORD IN AND PACK 4 TO A WORD
                       ; IN THE SYSTEM BUFFER
                       PTPK2:
123673 / 260140,,045307         PUSHJ  PDP,045307             ;; SET UP POINTR TO USER BUFFER
123674 / 254000,,123657          JRST      123657             ;; NOTHING THERE, LEAVE
123675 / 303700,,000320         CAILE COUNT,000320             ;; IF'N HE'S ASK'N MORE'N WE GOT . . .
123676 / 254000,,043300          JRST      043300             ;; FUCK'M!
123677 / 210040,,017557          MOVN    A,017557             ;; IS THERE ROOM IN THE INN?
123700 / 270040,,000016           ADD    A,000016             ;; ADD IN NUMBER OF WORDS TO BE TRANSFERRED
123701 / 301040,,001500          CAIL    A,001500             ;; COMPARE WITH TOTAL CHAR COUNT
123702 / 254000,,123734          JRST      123734             ;; CAN'T DO IT, LEAVE
123703 / 441000,,000000 POINT 8,00000000,                     ;
123703 / 205040,,441000         MOVSI    A,      (<POINT =8,0>)   ;; SET UP POINTER TO SYSTEM BUFFER
123704 / 510100,,017235          HLLZ    B,017235             ;; GET POINTER THAT IS ALREADY THERE
123705 / 326100,,123707         JUMPN    B,123707             ;; IF NOT ALREADY SET UP . . .
123706 / 502040,,017235          HLLM    A,017235             ;; SET IT UP!!
123707 / 201100,,000001         MOVEI    B,     1             ;
123710 / 260140,,037464         PUSHJ    P, PWAIT             ;
123711 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123712 / 200100,,017235          MOVE    B,017235             ;; BRING UP TO AN ACCUMULATOR FOR SPEED
                       PTPK2C:
123713 / 200040,,000002          MOVE    A,000002             ;; CHECK FOR WRAP-AROUND
123714 / 133000,,000001           IBP           A             ;
123715 / 553000,,000001         HRRZS      000001             ;; GET THE NEXT POINTED TO ADDRESS
123716 / 301040,,017556          CAIL    A,017556             ;; RUN OFF END OF BUFFER?
151411 / 000000,,017236                                       ;
151411 / 441000,,017236 POINT 8,00017236,                     ;
123717 / 200100,,151411          MOVE    B,151411             ;
123720 / 200057,,000000          MOVE    A,      (POINTR)     ;; PICK UP CHARACTER (WORD)
123721 / 136040,,000002          IDPB    A,000002             ;; PACK INTO SYSTEM BUFFER
123722 / 370000,,017557           SOS      017557             ;; UPDATE CHARACTER COUNT
123723 / 340740,,000000           AOJ POINTR,                   ;; UPDATE USER CORE POINTER
123724 / 367700,,123713          SOJG COUNT,123713             ;; LOOP AROUND
123725 / 202100,,017235         MOVEM    B,017235             ;; STORE THIS BACK FOR NEXT TIME
123726 / 201100,,000001         MOVEI    B,     1             ;
123727 / 260140,,037501         PUSHJ    P, XWAIT             ;
123730 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
123731 / 260140,,044366         PUSHJ  PDP,044366             ;; LOAD IN ANOTHER BUFFER IF POSSIBLE
123732 / 254000,,123657          JRST      123657             ;; NOT POSSIBLE, EXIT
123733 / 254000,,123673          JRST      123673             ;; GO THROUGH THE ENTIRE BIT AGAIN
                       PTPK2B:
123734 / 260140,,123615         PUSHJ  PDP,123615             ;; START DEVICE AND WAIT UNTIL IT IS FINISHED
123735 / 254000,,123673          JRST      123673             ;; THEN TRY AGAIN!!
                       ; THIS IS FOR REAL BINARY MODE, WITH CHECKSUMS AND ALL
                       ; BLT IN A SINGLE BUFFER, PUNCH IT, THEN PUNCH CHECKSUM AND FEEDER
                       ; AFTER EVERY SINGLE BUFFERLOAD!
                       PTPK4:
123736 / 550100,,017233          HRRZ TAC1,017233             ;; SET UP ADDRESS
123737 / 260140,,045043         PUSHJ  PDP,045043             ;; CALCULATE CHECKSUM OF BUFFER
123740 / 271120,,017233          ADDI TAC1,@017233            ;; GET ADDRESS OF FIRST WORD OF DATA
123741 / 502060,,000002          HLLM  TAC,@000002            ;; PUT THE CHECKSUM NEXT TO THE WORD COUNT
123742 / 260140,,045307         PUSHJ  PDP,045307             ;; SET UP POINTR AND COUNT
123743 / 254000,,123757          JRST      123757             ;; NO BUFFERS TO EMPTY?
123744 / 340700,,000000           AOJ COUNT,                   ;; FUDGE BY ONE TO LEAVE ROOM FOR CHECKSUM AND WORD COUNT WORD
123745 / 360740,,000000           SOJ POINTR,                   ;; BACK POINTER UP BY ONE TOO
123746 / 201040,,000006         MOVEI    A,000006             ;; BINARY MODE, 6 CHARS PER WORD
123747 / 202040,,017562         MOVEM    A,PTPCPW             ;
123750 / 260140,,123766         PUSHJ  PDP,123766             ;; BRING IN A SINGLE BUFFER
123751 / 265240,,043257           JSP  DAT,043257             ;; THERE BETTER BE ROOM!!
123752 / 335000,,017557        SKIPGE      017557             ;; ANYTHING IN BUFFER?
123753 / 254000,,123762          JRST      123762             ;; YES, PUNCH IT
                       PTPK4C:
123754 / 260140,,044366         PUSHJ  PDP,044366             ;; NO, IS THERE ANOTHER BUFFER?
123755 / 263140,,000000          POPJ  PDP,                   ;; NO, LET HIM FILL ONE
123756 / 254000,,123736          JRST      123736             ;; YES, BRING IT IN
                       PTPK4A:
123757 / 603000,,000040          TLNE      000040             ;; LAST UUO?
123760 / 254000,,123663          JRST      123663             ;; YES, SHUDDER!
123761 / 263140,,000000          POPJ  PDP,                   ;; NO, LET HIM FILL SOME BUFFERS
                       PTPK4B:
123762 / 515000,,000200         HRLZI      000200             ;; THIS IS A 'FEED-WHEN-TERMINATING' SITUATION
123763 / 400040,,000000          SETZ    A,                   ;; SO TELL THE INTERRUPT SERVICE ABOUT IT
123764 / 260140,,123616         PUSHJ  PDP,123616             ;; START DEVICE AND WAIT FOR IT TO STOP
123765 / 254000,,123754          JRST      123754             ;; LOOP BACK AGAIN AND AGAIN
                       ; HERE, WE TRY TO FIT THE USER'S BUFFER INTO SYSTEM CORE
                       PTPBBI:
123766 / 322700,,037401         JUMPE COUNT,037401             ;; ZERO-LENGTH BUFFER IS AN AUTOMATIC SUCCESS
123767 / 303700,,000320         CAILE COUNT,000320             ;; SEE IF HE WANTS MORE THAN WE CAN GIVE
123770 / 254000,,043300          JRST      043300             ;; YES, SCREW HIM!
123771 / 201100,,000001         MOVEI    B,     1             ;
123772 / 332000,,017564         SKIPE      017564             ;; FAST OR SLOW MODE?
123773 / 254000,,123776          JRST      PTPZZ0             ;
123774 / 700600,,001002          CONO   PI,001002             ;; FAST MODE, DO CONO DIRECTLY
123775 / 254000,,124000          JRST      PTPZZ1             ;
                       PTPZZ0:
123776 / 260140,,037464         PUSHJ    P, PWAIT             ;
123777 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
                       PTPZZ1:
124000 / 200040,,017234          MOVE    A,017234             ;; PICK UP INTERRUPT LEVEL BYTE POINTER
124001 / 133000,,000001           IBP      000001             ;; THIS IS TO GET THE DISTANCE, IN WORDS, BETWEEN THE TWO POINTERS
124002 / 553000,,000001         HRRZS      000001             ;; WHICH IS THE NUMBER OF AVAILABLE WORDS IN THE BUFFER
124003 / 201100,,017556         MOVEI    B,017556             ;; WE ALSO NEED THE DISTANCE TO THE END OF THE BUFFER
124004 / 274100,,017235           SUB    B,017235             ;; FOR WRAP-AROUND PURPOSES
124005 / 274040,,017235           SUB    A,017235             ;; DISTANCE BETWEEN POINTERS
124006 / 323040,,124047        JUMPLE    A,124047             ;; POINTER WRAP-AROUND, SPECIAL CASE
                       PTPBB5:
124007 / 315040,,000016         CAMGE    A,000016             ;; SEE IF THERE IS ULTIMATLY ROOM
124010 / 254000,,124026          JRST      124026             ;; NO, FAILURE
124011 / 322100,,124036         JUMPE    B,124036             ;; IF ZERO, IT IS A SPECIAL CASE
124012 / 514640,,000017          HRLZ    C,000017             ;; SET UP BLT WORD. SOURCE IS USER CORE
124013 / 540640,,017235           HRR    C,017235             ;; DESTINATION IS SYSTEM CORE
124014 / 313700,,000002         CAMLE COUNT,000002             ;; NOW WE DECIDE WHETHER WE MUST WRAP AROUND
124015 / 254000,,124035          JRST      124035             ;; YES, GO WRAP IT UP
124016 / 550100,,017235          HRRZ    B,017235             ;; NO, GET LAST WORD TO BE TRANSFERRED
124017 / 270100,,000016           ADD    B,000016             ;; BY ADDING THE SOURCE AND THE COUNT
124020 / 251642,,777777           BLT    C,777777(B)          ;; AND SUBTRACTING ONE AT INDEX TIME
124021 / 272700,,017235          ADDM COUNT,017235             ;; UPDATE BUFFER CHARACTER POINTER
                       PTPBB3:
124022 / 220700,,017562          IMUL COUNT,017562             ;; UPDATE BUFFER CHARACTER COUNT TOO
124023 / 274700,,017557           SUB COUNT,017557             ;; SUBTRACT OFF CURRENT COUNT
124024 / 212700,,017557         MOVNM COUNT,017557             ;; CORRECT SIGN AND STORE
124025 / 350003,,000000           AOS            (PDP)        ;; SET TO SKIP, SUCCESS
                       PTPBB7:
124026 / 332000,,017564         SKIPE      PTPMOD             ;
124027 / 254000,,124032          JRST      PTPZZ3             ;
124030 / 700600,,002002          CONO   PI, PTPON             ;
124031 / 263140,,000000          POPJ  PDP,                   ;
                       PTPZZ3:
124032 / 260140,,037501         PUSHJ    P, XWAIT             ;
124033 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
124034 / 263140,,000000          POPJ  PDP,                   ;
                       ; COME HERE IF WE HAVE TO DO 2 SEPARATE BLT'S
                       PTPBB1:
124035 / 251640,,017555           BLT    C,017555             ;; FIRST BLT, TO END OF SYSTEM BUFFER
                       PTPBB2:
124036 / 200640,,000016          MOVE    C,000016             ;; PICK UP WORD COUNT
124037 / 274640,,000002           SUB    C,000002             ;; THIS IS NUMBER OF WORDS LEFT TO TRANSFER
124040 / 271117,,000000          ADDI    B,      (POINTR)     ;; THIS IS PLACE TO START TRANSFERRING FROM
124041 / 517000,,000002         HRLZS      000002             ;; SWAP IT
124042 / 541100,,017236          HRRI    B,017236             ;; DESTINATION IS START OF BUFFER
124043 / 251115,,017235           BLT    B,017235(C)          ;; TRANSFER REMAINDER OF BUFFER
124044 / 561656,,777460         HRROI    C,777460(COUNT)      ;; WORD COUNT, WRAPPED AROUND
124045 / 272640,,017235          ADDM    C,017235             ;; UPDATE POINTER
124046 / 254000,,124022          JRST      PTPBB3             ;
                       ; COME HERE IF THE DIFFERENCE OF THE TWO POINTERS IS NEGATIVE
                       PTPBB6:
124047 / 326040,,124051         JUMPN    A,124051             ;; IF NON-ZERO, NOTHING TO WORRY ABOUT
124050 / 336000,,017557         SKIPN      017557             ;; ZERO. HMMM. IF COUNT IS NOT ZERO, THEN THERE IS NO ROOM IN THE INN!!
124051 / 271040,,000320          ADDI    A,000320             ;; ADD IN TOTAL BUFFER LENGTH
124052 / 254000,,124007          JRST      PTPBB5             ;
                       ; THIS ROUTINE SETS UP THE CRAZY DISPATCHES FOR EACH OF THE VARIOUS MODES OF OPERATION
                       PTPSUD:
124053 / 260140,,123450         PUSHJ  PDP,123450             ;; INITIALIZE TABLES
124054 / 405000,,000117          ANDI      000117             ;; LEAVE ONLY THE MODE BITS IN IOS
124055 / 661000,,020020           TLO      020020             ;; SET OUTPUT BIT AND FEED BIT
124056 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
124057 / 135040,,037574           LDB    A,037574             ;; PICK UP MODE BITS, BOTTOM 4 BITS IN IOS
124060 / 322040,,124072         JUMPE    A,124072             ;; MODES 0 AND 1 ARE IDENTICAL
124061 / 306040,,000001          CAIN    A,     1             ;
124062 / 254000,,124072          JRST      PTPSKA             ;
124063 / 306040,,000010          CAIN    A,000010             ;; MODE 10 - IMAGE MODE, 1 BYTE PER WORD
124064 / 254000,,124106          JRST      PTPSKB             ;
124065 / 306040,,000013          CAIN    A,000013             ;; MODE 13 - BINARY, NO CHECKSUMMING
124066 / 254000,,124112          JRST      PTPSKC             ;
124067 / 306040,,000014          CAIN    A,000014             ;; MODE 14 - BINARY WITH CHECKSUMMING
124070 / 254000,,124120          JRST      PTPSKD             ;
124071 / 265240,,043257           JSP  DAT,043257             ;; IT REALLY CAN'T GET HERE.  - CAN IT?
                       PTPSKA:
124072 / 201040,,123642         MOVEI    A,123642             ;; UUO LEVEL KIND 1
151403 / 000000,,017236                                       ;
151403 / 440700,,017236 POINT 7,00017236,                     ;
124073 / 200640,,151403          MOVE    C,151403             ;; 7-BIT BYTES AT INTERRUPT LEVEL
124074 / 201100,,124171         MOVEI    B,124171             ;; INTERRUPT LEVEL TYPE 2
124075 / 602000,,000100          TRNE      000100             ;; CHECK FOR ALTERNATE MODES
124076 / 201100,,124157         MOVEI    B,124157             ;; INT. LEVEL TYPE 1 - NON-PARITY 8TH HOLE, NO DELETES AFTER TABS
                       PTPSKE:
124077 / 202040,,017561         MOVEM    A,017561             ;; UUO-LEVEL DISPATCH ADDRESS
124100 / 202100,,017560         MOVEM    B,017560             ;; INTERRUPT-LEVEL DISPATCH ADDRESS
124101 / 202640,,017234         MOVEM    C,017234             ;; INTERRUPD-LEVEL BYTE POINTER
124102 / 201040,,017236         MOVEI    A,017236             ;; SET UP UUO-LEVEL BUFFER POINTER
124103 / 202040,,017235         MOVEM    A,017235             ;; NOT A BYTE POINTER, JUST AN ADDRESS
124104 / 402000,,017557         SETZM      017557             ;; BUFFER IS EMPTY, CLEAR COUNT
124105 / 254000,,123503          JRST      123503             ;; RETURN TO OUTPUT ROUTINE
                       PTPSKB:
124106 / 201040,,123673         MOVEI    A,123673             ;; UUO LEVEL KIND 2, PACK USER BUFFER INTO SYSTEM BUFFER
124107 / 201100,,124160         MOVEI    B,124160             ;; INT LEVEL TYPE 3, 8-BIT BYTES
151411 / 000000,,017236                                       ;
151411 / 441000,,017236 POINT 8,00017236,                     ;
124110 / 200640,,151411          MOVE    C,151411             ;
124111 / 254000,,124077          JRST      PTPSKE             ;
                       PTPSKC:
124112 / 201040,,123644         MOVEI    A,123644             ;; UUO LEVEL KIND 3, BINARY MODES
124113 / 201100,,124157         MOVEI    B,124157             ;; INT. LEVEL TYPE 1, PUNCH 8TH HOLE
151366 / 000000,,017236                                       ;
151366 / 440600,,017236 POINT 6,00017236,                     ;
124114 / 200640,,151366          MOVE    C,151366             ;; 6-BIT BYTES, 6 TO A WORD
124115 / 602000,,000100          TRNE      000100             ;; THIS EFFECTS THE ANAL-CRANIAL INVERSION
124116 / 201100,,124160         MOVEI    B,124160             ;; THIS MEANS DON'T PUNCH 7TH OR 8TH HOLE AT ALL
124117 / 254000,,124077          JRST      PTPSKE             ;
                       PTPSKD:
124120 / 602000,,000100          TRNE         100             ;
124121 / 254000,,124112          JRST      124112             ;; 100 BIT HERE MEANS SOMETHING ENTIRELY DIFFERENT
124122 / 201040,,123736         MOVEI    A,123736             ;; UUO LEVEL KIND 4, CHECKSUMM A LOT
124123 / 201100,,124157         MOVEI    B,124157             ;; INT. LEVEL TYPE 1, PUT IN 8TH HOLE ALWAYS
151366 / 000000,,017236                                       ;
151366 / 440600,,017236 POINT 6,00017236,                     ;
124124 / 200640,,151366          MOVE    C,151366             ;; SET FOR 6-BIT BYTES
124125 / 254000,,124077          JRST      PTPSKE             ;
                       ; INTERRUPT SERVICE ROUTINES - OBOYOBOYOBOY!
                       PTPINT:
124126 / 264020,,002337           JSR      @002337            ;; SAVE ACCUMULATORS FIRST
124127 / 201300,,017223         MOVEI DEVDAT,017223             ;; SET UP DEVDAT FOR EVERYBODY'S BENEFIT
124130 / 332000,,017556         SKIPE      017556             ;; ANY FEED COUNT LEFT?
124131 / 254000,,124224          JRST      124224             ;; GO PUNCH A FEED HOLE OR TWO
124132 / 201100,,000002         MOVEI    B,000002             ;; WE ARE P2
124133 / 336000,,017564         SKIPN      017564             ;; MUST WE SYNCHRONIZE?
124134 / 254000,,124137          JRST      124137             ;; NO, SKIP IT
124135 / 260140,,037464         PUSHJ    P, PWAIT             ;
124136 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
                       PTPZZ2:
124137 / 200000,,017225          MOVE      017225             ;; WE HAVE TO INSPECT THIS FIRST
124140 / 623000,,020000          TLZE      020000             ;; IS THIS THE FIRST BUFFERLOAD?
124141 / 254000,,124215          JRST      124215             ;; YES, WE SHOULD PUNCH FEED FIRST
124142 / 623000,,004000          TLZE      004000             ;; DO WE HAVE A DANGLING DELETE?
124143 / 254000,,124231          JRST      124231             ;; YES, GO PUNCH IT
124144 / 336000,,017557         SKIPN      017557             ;; IS THERE ANYTHING IN THE SYSTEM BUFFER?
124145 / 254000,,124233          JRST      124233             ;; NO, QUIT AND GO HOME
124146 / 350000,,017557           AOS      017557             ;; DECREMENT CHAR COUNT
124147 / 200240,,017234          MOVE    D,017234             ;; PICK UP BYTE POINTER
124150 / 133000,,000005           IBP      000005             ;; INCREMENT POINTER TO CHECK FOR WRAP-AROUND
124151 / 550640,,000005          HRRZ    C,000005             ;; GET ADDRESS PORTION
124152 / 301640,,017556          CAIL    C,017556             ;; IS BYTE POINTER OUT OF RANGE?
124153 / 541240,,017236          HRRI    D,017236             ;; YES, RESET ADDRESS TO START OF BUFFER
124154 / 135640,,000005           LDB    C,000005             ;; PICK UP CHARACTER
124155 / 202240,,017234         MOVEM    D,017234             ;; REPLACE BYTE POINTER
124156 / 254020,,017560          JRST      @017560            ;; AND PUNCH IT CORRECTLY
                       PTPT1:
124157 / 435640,,000200           ORI    C,000200             ;; TYPE 1 - ALWAYS PUNCH 8TH HOLE
                       PTPT3:
124160 / 710140,,000015         DATAO  PTP,000015             ;; TYPE 3 - NO MODIFICATION AT ALL
124161 / 135640,,037610           LDB    C,037610             ;; SET HUNG COUNT
124162 / 137640,,037611           DPB    C,PDVCNT             ;
                       PTPXIT:
124163 / 202000,,017225         MOVEM      017225             ;; THIS PROCESSOR OWNS IOS
124164 / 336000,,017564         SKIPN      PTPMOD             ;
124165 / 263140,,000000          POPJ  PDP,                   ;
124166 / 260140,,037501         PUSHJ    P, XWAIT             ;
124167 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
124170 / 263140,,000000          POPJ  PDP,                   ;
                       ; TYPE 2 - PUNCH PARITY AND DELETES AFTER CR, FF, VT AND  HT
                       PTPT2:
124171 / 322640,,124160         JUMPE    C,124160             ;; TYPE 2 - PARITY AND DELETES AFTER THESE CHARACTERS
124172 / 302640,,000015          CAIE    C,000015             ;; C.R. RATES A DELETE
124173 / 306640,,000011          CAIN    C,000011             ;; V.T. RATES A DELETE FOR THE LOSING ASR35
124174 / 661000,,004000           TLO      004000             ;; PUNCH DELETE NEXT TIME AROUND
124175 / 306640,,000013          CAIN    C,000013             ;; V.T.
124176 / 661000,,004000           TLO      PTPPDN             ;
124177 / 306640,,000014          CAIN    C,000014             ;; F.F. MEANS PUNCH A LOT OF FEED
124200 / 254000,,124210          JRST       PTP2A             ;
                       PTP2B:
124201 / 200240,,000015          MOVE    D,000015             ;; NOW COMPUTE PARITY ON THE CHARACTER
124202 / 221240,,200401         IMULI    D,200401             ;; MAKE 3 COPIES OF THE NUMBER
152010 / 000011,,111111                                       ;
124203 / 404240,,152010           AND    D,152010             ;; MAKES ONE COPY OF EACH BIT, EVERY 3RD BIT. NUMBER IS NOW SPREAD OUT
152010 / 000011,,111111                                       ;
124204 / 220240,,152010          IMUL    D,152010             ;; ADD UP BITS IN LH
124205 / 603240,,000010          TLNE    D,000010             ;; NOW, DO WE NEED PARITY?
124206 / 435640,,000200          IORI    C,000200             ;; YES, INSERT IT
124207 / 254000,,124160          JRST      124160             ;; AND PUNCH CHAR
                       PTP2A:
124210 / 211240,,000030         MOVNI    D,000030             ;; PUNCH 30 FEED HOLES
124211 / 202240,,017556         MOVEM    D,017556             ;; SET THIS IN OUR REGISTER
124212 / 254000,,124201          JRST      124201             ;; AND RETURN TO CALCULATE PARITY
                       ; LAST PAGE - PUNCH FEED HOLES, SHUT OFF PTP
                       PTPF2:
124213 / 211640,,000030         MOVNI    C,000030             ;; PUNCH 30 HOLES FOR MODE 14
124214 / 304000,,000000          CAIA                         ;
                       PTPF1:
124215 / 211640,,000100         MOVNI    C,000100             ;; STANDARD INITIAL AND FINAL FEED
124216 / 202640,,017556         MOVEM    C,017556             ;; INTO FEED COUNT REGISTER
124217 / 202000,,017225         MOVEM      017225             ;; STORE IOS
124220 / 336000,,017564         SKIPN      PTPMOD             ;
124221 / 254000,,124224          JRST      PTPFED             ;
124222 / 260140,,037501         PUSHJ    P, XWAIT             ;
124223 / 201040,,017566         MOVEI  TAC,PTPCSC             ;
                       PTPFED:
124224 / 350000,,017556           AOS      017556             ;; DECREMENT FEED COUNT
151675 / 000000,,000000                                       ;
124225 / 710140,,151675         DATAO  PTP,151675             ;; GIVE IT A FEED WORD
124226 / 135640,,037610           LDB    C,037610             ;; SET HUNG COUNT
124227 / 137640,,037611           DPB    C,PDVCNT             ;
124230 / 263140,,000000          POPJ  PDP,                   ;; AND LEAVE
                       PTPIDN:
124231 / 201640,,000377         MOVEI    C,000377             ;; PUNCH A DELETE, FLAG HAS BEEN CLEARED
124232 / 254000,,124160          JRST       PTPT3             ;
                       PTPOF:
124233 / 623000,,002000          TLZE      002000             ;; OH MAMA, CAN THIS REALLY BE THE END?
124234 / 254000,,124215          JRST      124215             ;; IT IS, FEED BEFORE LEAVING
124235 / 623000,,000200          TLZE      000200             ;; IS THIS THE 'FEED WHEN TERMINATING' BIT?
124236 / 254000,,124213          JRST      124213             ;; YES, DO IT
124237 / 710200,,000000          CONO  PTP,                   ;; CLEAR PTP REGISTERS
124240 / 513020,,017572         HLLZS      @017572            ;; DON'T CONFUSE INTERRUPT SERVICE DISPATCHES
124241 / 332000,,017564         SKIPE      017564             ;; ARE WE IN FAST OR SLOW MODE?
124242 / 254000,,124250          JRST      124250             ;; SLOW MODE, SET A FLAG FOR P1 TO SEE
124243 / 623000,,000001          TLZE      000001             ;; ARE WE IN AN IO WAIT?
124244 / 260140,,046105         PUSHJ  PDP,046105             ;; YES, SET IO DONE
                       PTPOF2:
124245 / 621000,,001000           TLZ      001000             ;; CLEAR BUSY FLAG, ALTHOUGH NOONE LOOKS AT IT
124246 / 402000,,017557         SETZM      017557             ;; BUFFER IS NOW EMPTY, MARK IT AS SUCH!
124247 / 254000,,124163          JRST      PTPXIT             ;
                       PTPOF1:
124250 / 623000,,000001          TLZE      000001             ;; ARE WE IN AN IO WAIT?
124251 / 476000,,017565         SETOM      017565             ;; YES, ASK TO CALL SETIOD FOR US
124252 / 254000,,124245          JRST      PTPOF2             ;
124253 /                 ;::    BEND STANFO.PTPSER.
124253 /               ;: PTPSER[J17,SYS] EOF.
124253 /               ;: PTRSER[J17,SYS]
124253 /                 ;::   BEGIN STANFO.PTRSER.
                       ;PTR CONTROL REGISTER
                       ;SPECIAL ASCII CHARACTERS:
                       ;SPECIAL BITS IN LH OF IOS:
                       ;UUO DISPATCH TABLE:
124253 / 254000,,124350          JRST      124350             ;;INITIALIZE.
124254 / 254000,,124501          JRST      124501             ;;HUNG  TIMEOUT.
                       PTRDSP:
124255 / 254000,,124373          JRST      124373             ;;RELEASE.
124256 / 263140,,000000          POPJ    P,                   ;;CLOSE.
124257 / 254000,,043311          JRST      043311             ;;OUTPUT
                       ;INPUT UUO
                       PTRINP:
124260 / 260140,,037464         PUSHJ    P, PWAIT             ;
124261 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124262 / 260140,,045233         PUSHJ    P,045233             ;;SET IOACT.
124263 / 607000,,000002          TLNN      000002             ;;FIRST TIME?
124264 / 254020,,017210          JRST      @017210            ;;NO.
124265 / 661000,,000004           TLO      000004             ;;YES.  SET UP THINGS.
124266 / 621000,,200000           TLZ      PTRPOW             ;
124267 / 260140,,045403         PUSHJ    P,045403             ;;SET UP TAC.
124270 / 202040,,017205         MOVEM  TAC,017205             ;;SAVE FOR INTERRUPT ROUTINES.
                       PTRIN5:
124271 / 627000,,100000          TLZN      100000             ;;HAS THE LOSER FLAG BEEN SEEN ALREADY?
124272 / 254020,,017210          JRST      @017210            ;;TO PTRP1U FOR 1 PROCESSOR, OR PTRP2U FOR TWO.
                       ;HERE ON SECOND INPUT AFTER FIRST INPUT DISCOVERED POWER OFF ON THE PDP-6 READER
124273 / 260140,,045242         PUSHJ    P,045242             ;;CLEAR IO ACTIVE
124274 / 260140,,037501         PUSHJ    P, XWAIT             ;
124275 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124276 / 260140,,043522         PUSHJ    P,043522             ;;PRINT DEVICE PTR OK? AND STOP JOB.
124277 / 254000,,124260          JRST      PTRINP             ;
                       PTRP2U:
124300 / 260140,,045243         PUSHJ    P,045243             ;;STORE IOS.
124301 / 476000,,017207         SETOM      017207             ;;REQUEST P2 TO START READER.
124302 / 254000,,124433          JRST      124433             ;;DESYNCHRONIZE AND EXIT
                       ;HERE AT P2 CLOCK LEVEL
                       PTRP2:
124303 / 200040,,017207          MOVE  TAC,017207             ;;P2 START REQUEST?
124304 / 322040,,037403         JUMPE  TAC,037403             ;;NO.
124305 / 260140,,037464         PUSHJ    P, PWAIT             ;
124306 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124307 / 402000,,017207         SETZM      017207             ;;INDICATE REQUEST GRANTED.
124310 / 201300,,017175         MOVEI  DDB,017175             ;;SET UP DDB AND IOS.
124311 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
124312 / 623000,,040000          TLZE      040000             ;;
124313 / 254000,,124377          JRST      124377             ;;HUNG TIMEOUT REQUESTS THAT THE READER STOP.
                       PTRP1U:
                       PTRIN2:
124314 / 627000,,000002          TLZN      000002             ;;FIRST TIME?
124315 / 254000,,124322          JRST      124322             ;;NO.
124316 / 710700,,000400         CONSZ  PTR,000400             ;;YES.  POWER ON?
124317 / 665000,,200000          TLOA      200000             ;;YES.
124320 / 326540,,124342         JUMPN  PID,124342             ;;POWER OFF ON PDP-6 READER.
151716 / 000000,,000025                                       ;
124321 / 334100,,151716         SKIPA TAC1,151716             ;;SET TAC1 WITH CONO START
                       PTRIN3:
124322 / 201100,,000015         MOVEI TAC1,000015             ;;SET TAC1 WITH CONO CONTINUE
124323 / 260140,,045243         PUSHJ    P,045243             ;;STORE IOS, RESET HUNG COUNT.
124324 / 135040,,037574           LDB  TAC,037574             ;;GET MODE.
124325 / 302040,,000013          CAIE  TAC,000013             ;;IMAGE BINARY?
124326 / 306040,,000014          CAIN  TAC,000014             ;;OR BINARY?
124327 / 660100,,000040           TRO TAC1,000040             ;;YES.  SET READER INTO BINARY MODE.
124330 / 202100,,017212         MOVEM TAC1,017212             ;;REMEMBER FOR INTERRUPT LEVEL.
124331 / 201040,,000010         MOVEI  TAC,000010             ;;WAIT FOR DONE FLAG.
124332 / 700600,,001004          CONO   PI,PTROFF             ;
124333 / 402000,,017214         SETZM      017214             ;;SET NOT PTR DISCONNECTING.
124334 / 542060,,017221          HRRM  TAC,@017221            ;;SET UP BITS.
124335 / 710740,,000007         CONSO  PTR,000007             ;;SKIP IF READER IS RUNNING!
124336 / 710620,,017212          CONO  PTR,@017212            ;;READER IDLE.  KICK IT.
124337 / 700600,,002004          CONO   PI, PTRON             ;
124340 / 710700,,000400         CONSZ  PTR,000400             ;;WE SHOULD SEE POWER OR TAPE BY NOW.
124341 / 254000,,124433          JRST      124433             ;;DESYNCRONIZE AND RETURN.
                       PTRIN4:
124342 / 661000,,100002           TLO      100002             ;;FLAG NO POWER AVAILABLE
124343 / 627000,,040000          TLZN      STOPTR             ;
124344 / 476000,,017211         SETOM      017211             ;;FLAG THE PDP-10
124345 / 260140,,045243         PUSHJ    P,045243             ;;STORE IOS
124346 / 326540,,124433         JUMPN  PID, XPOPJ             ;
124347 / 254000,,124271          JRST      124271             ;;HANG ON THE PDP-10
                       PTRINI:
124350 / 402000,,017215         SETZM      PTRCSC             ;
124351 / 402000,,017216         SETZM      017216             ;
124352 / 402000,,017217         SETZM      017217             ;
124353 / 402000,,017220         SETZM      017220             ;
                       ;DETERMINE WHICH PROCESSOR TO USE.  IF ONE PROCESSOR IS A
                       ;PDP-6, USE IT.  IF P2 DOES NOT EXIST, USE P1, OTHERWISE,
                       ;USE P2.
124354 / 201640,,124314         MOVEI  AC1,124314             ;;ASSUME P1
124355 / 201700,,000663         MOVEI  AC2,PTRCN1             ;
124356 / 550040,,000562          HRRZ  TAC,000562             ;;GET NUMBER OF P2 (=6 OR =10)
124357 / 306040,,000006          CAIN  TAC,000006             ;;IS IT A PDP-6?
124360 / 254000,,124365          JRST      124365             ;;YES. USE IT.
124361 / 322040,,124367         JUMPE  TAC,124367             ;;IF THERE IS NO P2, USE P1.
124362 / 550040,,000561          HRRZ  TAC,000561             ;;GET NUMBER OF P1.
124363 / 306040,,000006          CAIN  TAC,000006             ;;IS IT A PDP-6?
124364 / 254000,,124367          JRST      124367             ;;YES. USE IT.
                       USEP2:
124365 / 201640,,124300         MOVEI  AC1,PTRP2U             ;
124366 / 201700,,000762         MOVEI  AC2,PTRCN2             ;
                       USEP1:
124367 / 202640,,017210         MOVEM  AC1,017210             ;;SET DISPATCH FOR INPUT UUO'S
124370 / 202700,,017221         MOVEM  AC2,017221             ;;SET ADDRESS FOR CONSZ BITS.
124371 / 513000,,000663         HLLZS      PTRCN1             ;
124372 / 513000,,000762         HLLZS      PTRCN2             ;
                       PTRXRL:
124373 / 402000,,017177         SETZM      017177             ;;CLEAR READER STATUS.  RELEASE UUO.
                       PTRREL:
124374 / 710600,,000000          CONO  PTR,                   ;;STOP READER, DISCONNECT IT FROM PI
124375 / 513020,,017221         HLLZS      @PTRCON            ;
124376 / 263140,,000000          POPJ    P,                   ;
                       PTRYRL:
124377 / 260140,,045316         PUSHJ    P, IOSET             ;
124400 / 254000,,124436          JRST      124436             ;;SIMULATE POWER OFF.
                       ;PAPER TAPE READER INTERRUPT.
                       PTRINT:
124401 / 331000,,017214         SKIPL      017214             ;;SKIP DATAI IF WE ARE DISCONNECTING.
124402 / 710440,,017213         DATAI  PTR,017213             ;;READ CHAR FROM READER.
124403 / 264020,,002340           JSR      @002340            ;;SAVE ACCUMULATORS.
124404 / 260140,,037464         PUSHJ    P, PWAIT             ;
124405 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124406 / 201300,,017175         MOVEI  DDB,017175             ;;SET UP REGISTERS
124407 / 260140,,045316         PUSHJ    P, IOSET             ;
124410 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
124411 / 710740,,000400         CONSO  PTR,000400             ;;POWER ON?
124412 / 254000,,124436          JRST      124436             ;;NO.
124413 / 667000,,200000          TLON      200000             ;;POWER IS ON NOW, WAS IT BEFORE?
124414 / 254000,,124432          JRST      124432             ;;POWER IS ON FOR THE FIRST TIME.
124415 / 332000,,017214         SKIPE      017214             ;;IS PTR BEING DISCONNECTED?
124416 / 254000,,124472          JRST      124472             ;;YES. DO IT.
124417 / 200240,,017213          MOVE  DAT,017213             ;;GET CHARACTER.
                       PTRIN0:
124420 / 602000,,000014          TRNE      000014             ;;BINARY MODE?
124421 / 254000,,124426          JRST      124426             ;;YES. (MODES 10,13,14)
124422 / 435240,,000200          IORI  DAT,000200             ;;IGNORE PARITY.
124423 / 302240,,000200          CAIE  DAT,000200             ;;NULL CHARACTER?
124424 / 306240,,000377          CAIN  DAT,000377             ;;OR RUBOUT?
124425 / 254000,,124432          JRST      124432             ;;YES.  IGNORE CHAR AND START READING NEXT.
                       PTRI0:
124426 / 260140,,045410         PUSHJ    P,045410             ;;STORE DATA IN BUFFER.
124427 / 255000,,000000          JFCL                         ;
124430 / 254000,,124452          JRST      124452             ;;BLOCK COMPLETE.
124431 / 202206,,000011         MOVEM ITEM,DEVCTR(DDB)        ;;INCOMPLETE.  STORE ITEM.
                       PTRXIT:
                       PTRXT1:
124432 / 260140,,045243         PUSHJ    P,045243             ;; STORE IOS, RESET HUNG COUNT
                       XPOPJ:
124433 / 260140,,037501         PUSHJ    P, XWAIT             ;
124434 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124435 / 263140,,000000          POPJ    P,                   ;;DISMISS INTERRUPT.
                       ;MORE I-LEVEL ROUTINES.
                       PWROFF:
124436 / 621000,,200000           TLZ      200000             ;;NOTE THAT READER IS OFF.
124437 / 661000,,000042           TLO      000042             ;
124440 / 260140,,124374         PUSHJ    P,124374             ;;SHUT IT OFF!
124441 / 135040,,037574           LDB  TAC,037574             ;;GET MODE.
124442 / 302040,,000014          CAIE  TAC,000014             ;;CHECKSUM-BINARY?
124443 / 254000,,124450          JRST      124450             ;;NO.
124444 / 607000,,000004          TLNN      000004             ;;INCOMPLETE BLOCK?
124445 / 660000,,400000           TRO      400000             ;;YES. COMPLAIN.
124446 / 260140,,045242         PUSHJ    P,045242             ;;CLEAR I/O ACTIVE BIT.
124447 / 254000,,124453          JRST      124453             ;
                       ;BLOCK INCOMPLETE
                       PTREI:
124450 / 260140,,045451         PUSHJ    P,045451             ;;TRUNCATE BUFFER, STORE W.C.
124451 / 255000,,000000          JFCL                         ;
                       ;BLOCK COMPLETE.
                       PTRI1:
124452 / 202206,,000011         MOVEM ITEM,DEVCTR(DDB)        ;;STORE ITEM COUNT.
                       PTRI1A:
124453 / 322540,,124460         JUMPE  PID,124460             ;;NO. ONE PROCESSOR
124454 / 476000,,017214         SETOM      017214             ;;MUST DISCONNECT PTR
124455 / 627000,,040000          TLZN      STOPTR             ;
124456 / 476000,,017211         SETOM      017211             ;;REQUEST BUFFER ADVANCE.
124457 / 254000,,124432          JRST      124432             ;;RELEASE CONTROL OF IOS AND DISMISS
                       PTRI2:
124460 / 661000,,000004           TLO      000004             ;;(SINGLE PROCESSOR)
124461 / 623000,,000001          TLZE      000001             ;;UNWAIT THE JOB.
124462 / 260140,,046107         PUSHJ    P,046107             ;;IF NEEDED.
124463 / 603000,,200000          TLNE      200000             ;;POWER OFF?
124464 / 260140,,044454         PUSHJ    P,044454             ;;NOT POWER OFF, ADVANCE BUFFERS
124465 / 254000,,124467          JRST      124467             ;;NO MORE BUFFER SPACE.
124466 / 254000,,124432          JRST      124432             ;;START READER, STORE IOS, AND  DISMISS INTERRUPT.
                       PTRI3:
124467 / 260140,,045242         PUSHJ    P,045242             ;;NO BUFFER SPACE. CLEAR IOACT.
124470 / 476000,,017214         SETOM      017214             ;;REQUST PTR DISCONNECT.
124471 / 254000,,124432          JRST      124432             ;;RELEASE SYNCHRONIZER. DISMISS INTERRUPT.
                       PTRDIS:
124472 / 326540,,124477         JUMPN  PID,PTRDS1             ;
124473 / 337020,,017204         SKIPG      @017204            ;;BUFFER FREE?
124474 / 254000,,124477          JRST      124477             ;;NO. MUST DISCONNECT.
124475 / 710440,,000005         DATAI  PTR,   DAT             ;
124476 / 254000,,124420          JRST      124420             ;;INPUT CHARACTER AND PROCESS AS NORMAL.
                       PTRDS1:
124477 / 260140,,124374         PUSHJ    P,124374             ;;STOP PTR.
124500 / 254000,,124432          JRST      124432             ;;DISMISS INTERRUPT
                       ;P1 CLOCK LEVEL AND HUNG TIMEOUT CODE
                       PTRHNG:
124501 / 200040,,017210          MOVE  TAC,PTRIN1             ;
124502 / 306040,,124314          CAIN  TAC,PTRP1U             ;
124503 / 263140,,000000          POPJ    P,                   ;;ON PDP-10 I DON'T UNDERSTAND HANGS.
124504 / 260140,,037464         PUSHJ    P, PWAIT             ;
124505 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124506 / 200000,,017177          MOVE      017177             ;;GET IOS
124507 / 627000,,200000          TLZN      200000             ;;HAVE WE SEEN POWER ON?
124510 / 254000,,124433          JRST      124433             ;;NO. LET IT HANG.
124511 / 667000,,040040          TLON      040040             ;;MAKE PTR STOP. PRETEND END OF TAPE.
124512 / 350003,,000000           AOS            (P)          ;;SET SKIP RETURN TO AVOID HUNG PTR MESSAGE
124513 / 202000,,017177         MOVEM      017177             ;;STORE IOS
124514 / 476000,,017207         SETOM      017207             ;;KICK PDP-6
124515 / 254000,,124433          JRST      124433             ;;RELEASE SYNCHRONIZER AND WAIT FOR PDP-6.
                       ;HERE AT P1 CLOCK LEVEL
                       PTRP1:
124516 / 402000,,017211         SETZM      017211             ;;CLEAR REQUEST
124517 / 260140,,037464         PUSHJ    P, PWAIT             ;
124520 / 201040,,017215         MOVEI  TAC,PTRCSC             ;
124521 / 201300,,017175         MOVEI  DDB,017175             ;;LOAD UP REGISTERS.
124522 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
124523 / 603000,,100000          TLNE      PTRNPW             ;
124524 / 660000,,400000           TRO      400000             ;;READING WITHOUT READER ON.
124525 / 661000,,000004           TLO      000004             ;;NEXT ITEM WILL BE FIRST OF A BUFFER.
124526 / 623000,,000001          TLZE      000001             ;;IS JOB WAITING FOR PTR?
124527 / 260140,,046107         PUSHJ    P,046107             ;;YES.  UNWAIT IT.
124530 / 135200,,037575           LDB    J,037575             ;;SET J
124531 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;
124532 / 260140,,044454         PUSHJ    P,044454             ;;ADVANCE BUFFERS.
124533 / 254000,,124541          JRST      124541             ;;OUT OF BUFFER SPACE.
124534 / 603000,,100040          TLNE      100040             ;;END OF FILE OR ERROR?
124535 / 254000,,124541          JRST      124541             ;;YES. STOP READER.
124536 / 260140,,045243         PUSHJ    P,045243             ;;STORE IOS.
124537 / 476000,,017207         SETOM      017207             ;;ACTIVATE PTR.
124540 / 254000,,124433          JRST      124433             ;;RELEASE SYNCHRONIZER AND RETURN
                       PTRP1A:
124541 / 260140,,045242         PUSHJ    P,045242             ;;CLEAR IOACTIVE, DON'T RESTART THE READER
124542 / 254000,,124433          JRST       XPOPJ             ;
124543 /                 ;::    BEND STANFO.PTRSER.
124543 /               ;: PTRSER[J17,SYS] EOF.
124543 /               ;: ADCSER[J17,SYS]
124543 /                 ;::   BEGIN STANFO.ADCSER.
                       ;JAM 2-10-74
                       ; IOS BITS, RH
                       ;    RECYCLE DONE, NOT BEFORE.
                       ; CONO BITS
                       ; CONI BITS - ADC
                       ; CONI BITS - DAC
                       ; CODES THAT GO IN P2 CELLS (ADCP2L, DACP2L)
                       ; CODES THAT GO IN P1 CELLS (ADCP1L, DACP1L)
                       ; UUO DISPATCH TABLE FOR ADC
124543 / 254000,,124734          JRST      124734             ;; SYSTEM STARTUP
124544 / 254000,,124674          JRST      124674             ;; HUNG TIME OUT
                       ADCDSP:
124545 / 254000,,124675          JRST      124675             ;; RELEASE
124546 / 263140,,000000          POPJ    P,                   ;; CLOSE OUTPUT
124547 / 254000,,043340          JRST      043340             ;; BUFFERED OUTPUT
124550 / 254000,,043267          JRST      043267             ;; BUFFERED INPUT
124551 / 254000,,037401          JRST      037401             ;; ENTER
124552 / 254000,,037401          JRST      037401             ;; LOOKUP
124553 / 254000,,043340          JRST      043340             ;; DMP MODE OUTPUT
124554 / 254000,,124622          JRST      124622             ;; DMP MODE INPUT
124555 / 263140,,000000          POPJ    P,                   ;; USETO
124556 / 263140,,000000          POPJ    P,                   ;; USETI
124557 / 263140,,000000          POPJ    P,                   ;; UGETF
124560 / 254000,,037401          JRST      037401             ;; RENAME
124561 / 263140,,000000          POPJ    P,                   ;; CLOSE INPUT
124562 / 263140,,000000          POPJ    P,                   ;; UTPCLR
124563 / 254000,,124564          JRST      124564             ;; MTAPE
                       ; ADC MTAPE UUO. SETS PARAMETERS.
                       ; EFFECTIVE ADDRESS POINTS TO THREE WORD BLOCK
                       ; FIRST WORD (RH SAME AS DAC)
                       ;  	<RECYCLE END THRESHHOLD>,,SPEED*1000+PACK*100+NCHANS
                       ;       <R.E. THRESH> IS LEFT ADJUSTED, 12 OR 16 BIT 2'S COMP NUMBER
                       ;		WHEN INPUT SAMPLE EXCEEDS THAT, WE END RECYCLING
                       ;	SPEED = 0	6.4 KC		IS PER CHANNEL RATE
                       ;		1	12.8 KC
                       ;		2	25.6 KC
                       ;		3	51.2 KC		MAX FOR ADC. DAC GOES ON UP.
                       ; SECOND WORD (SAME AS DAC)
                       ;	<ADDR FOR ERR CODES>,,<ADDR FOR `RUN' FLAG>
                       ;	<`RUN' FLAG IS `SETOM'ED WHILE ADC IS RUNNING AND ZEROED WHEN
                       ; 		ADC IS SHUT OFF
                       ; THIRD WORD (NOT USED IN DAC)
                       ;	<INPUT SELECT>,,<ADDR TO PUT RECYCLE IOWD>
                       ;	<INPUT SELECT> IS CURRENTLY ONE BIT, THE SIGN BIT. MEANS `MPX'
                       ;	<ADDR . . .> IS WHERE WE PUT THE RECYCLE IOWD WHEN
                       ;		THE INPUT SAMPLE HAS EXCEEDED THE THRESHHOLD AND WE
                       ;		THUS SWITCH BUFFERS
                       ADCMTP:
124564 / 627000,,000002          TLZN      000002             ;; FIRST UUO?
124565 / 254000,,124570          JRST      ADCFST             ;
124566 / 202000,,022655         MOVEM      ADCIOS             ;
124567 / 260140,,124734         PUSHJ    P,124734             ;; CLEAR OUT DDB
                       ADCFST:
124570 / 260140,,125722         PUSHJ    P,125722             ;; ADDRESS CHECK EFFECTIVE ADDR OF UUO
                       ; LEAVES LAST WD OF CORE IMAGE IN AC1,
                       ; RH OF UUO IN AC2
124571 / 271700,,000002          ADDI  AC2,000002             ;; DO SO WITH END OF TABLE TOO
124572 / 303715,,000000         CAILE  AC2,      (AC1)        ;
124573 / 254000,,043211          JRST      ADRERR             ;
124574 / 200060,,000014          MOVE  TAC,@000014            ;; PICK UP THRESH,,PARAMS
124575 / 512040,,022673         HLLZM  TAC,022673             ;; SET THRESHHOLD
124576 / 260140,,125624         PUSHJ    P,125624             ;; SET UP CONO WORD IN TAC1
124577 / 202700,,022703         MOVEM  AC2,022703             ;; SAVE # WORDS PER SECOND
124600 / 602100,,000400          TRNE TAC1,000400             ;; IS SPEED>3
124601 / 254000,,125662          JRST      125662             ;; YES, IS ERROR.
124602 / 602100,,040000          TRNE TAC1,040000             ;; FLOAT MODE FOR ADC?
124603 / 254000,,043322          JRST      043322             ;; IS ERROR
124604 / 271600,,000001          ADDI  UUO,000001             ;; BUMP TO ERR CODE WORD
124605 / 200660,,000014          MOVE  AC1,@   UUO            ;
124606 / 556640,,022675         HLRZM  AC1,022675             ;; SET ERROR CODE ADDRESS
124607 / 505640,,000007          HRLI  AC1,000007             ;; SET PROG IN INDEX FIELD
124610 / 202640,,022676         MOVEM  AC1,022676             ;; RUN FLAG ADDRESS
124611 / 502640,,022675          HLLM  AC1,ADCERA             ;
124612 / 271600,,000001          ADDI  UUO,     1             ;
124613 / 335020,,000014        SKIPGE      @000014            ;; IS MPX BIT ON?
124614 / 435100,,040000           ORI TAC1,040000             ;; YES
124615 / 202100,,022674         MOVEM TAC1,022674             ;; STORE CONO WORD
124616 / 263140,,000000          POPJ    P,                   ;; ALL DONE
                       ; ADC DUMP MODE INPUT ROUTINE
                       ADCUW:
124617 / 602000,,740000          TRNE      ERRMSK             ;
124620 / 263140,,000000          POPJ    P,                   ;; LEAVE ON ERRORS
124621 / 260140,,046176         PUSHJ    P,046176             ;; SINCE IOACT IS ON, WILL WAIT
                       ADCIN:
124622 / 627000,,000002          TLZN      000002             ;; FIRST UUO?
124623 / 254000,,124626          JRST      ADCNFS             ;
124624 / 202000,,022655         MOVEM      ADCIOS             ;
124625 / 260140,,124734         PUSHJ    P,124734             ;; CLEAR OUT DDB
                       ADCNFS:
124626 / 332000,,022671         SKIPE      022671             ;; IS THERE ANOTHER BLOCK?
124627 / 254000,,124617          JRST      124617             ;; YES, WAIT FOR IT TO END
124630 / 260140,,125722         PUSHJ    P,125722             ;; ADDRESS CHECK RH OF UUO
124631 / 332060,,000014         SKIPE  TAC,@000014            ;; PICK UP IOWD
124632 / 607040,,777777          TLNN  TAC,777777             ;; ANY WORD COUNT?
124633 / 254000,,124666          JRST      124666             ;; NOTHING THERE. GO HOME.
124634 / 260140,,125706         PUSHJ    P,125706             ;; ADDRESS CHECKS IOWD IN TAC
124635 / 254000,,043211          JRST      043211             ;; ILLEGAL. STOP JOB AND DIE
124636 / 201000,,010000         MOVEI       IOACT             ;
124637 / 260140,,037464         PUSHJ    P, PWAIT             ;
124640 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
124641 / 437000,,022655           ORB      022655             ;; LOCK US IN CORE
124642 / 260140,,037501         PUSHJ    P, XWAIT             ;
124643 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
124644 / 271047,,000000          ADDI  TAC,      (PROG)       ;; RELOCATE IT NOW
124645 / 202040,,022671         MOVEM  TAC,ADCNBK             ;
124646 / 564640,,000001          HLRO  AC1,000001             ;; PICK UP -WC
124647 / 210640,,000015          MOVN  AC1,000015             ;; MAKE IT POSITIVE
124650 / 230640,,022703          IDIV  AC1,022703             ;; GET # SECONDS
124651 / 271640,,000005          ADDI  AC1,000005             ;; A FEW EXTRA FOR GOOD MEASURE
124652 / 303640,,000077         CAILE  AC1,000077             ;; SATURATE AT 6 BITS
124653 / 201640,,000077         MOVEI  AC1,    77             ;
124654 / 137640,,037610           DPB  AC1,037610             ;; MAKE THIS THE NEW HUNG TIME
124655 / 332000,,022670         SKIPE      022670             ;; IS THERE AN XFR IN PROGRESS?
124656 / 254000,,124666          JRST      124666             ;; YES. LEAVE NOW
124657 / 602000,,000040          TRNE      000040             ;; ARE WE SYNCHRONIZING?
124660 / 332000,,022724         SKIPE      022724             ;; YES, IS XFR RUNNING THERE?
124661 / 254000,,124664          JRST      124664             ;; NOT SYNC OR XFR ALREADY RUNNING ON DAC
124662 / 336000,,022725         SKIPN      022725             ;; IS THERE AN XFR QUEUED?
124663 / 254000,,124671          JRST      124671             ;; NO, PUT US DOWN AND HANG. SET HUNG TIME.
                       ADCSTR:
124664 / 201040,,000001         MOVEI  TAC,000001             ;; NO, START ADC AND LEAVE
124665 / 202040,,022701         MOVEM  TAC,022701             ;; PLACE WHERE P2 WILL SEE IT
                       ADCXIT:
124666 / 602000,,000100          TRNE      000100             ;; CONTINUOUS MODE?
151763 / 000001,,000001           XWD 1,1                     ;
124667 / 274140,,151763           SUB    P,151763             ;; YES, RETURN UPLEVEL ONE
124670 / 263140,,000000          POPJ    P,                   ;
                       ADCSHT:
124671 / 201040,,000077         MOVEI  TAC,000077             ;; SET HUNG TIME TO MAXIMUM
124672 / 137040,,037610           DPB  TAC,PDVTIM             ;
124673 / 254000,,124666          JRST      ADCXIT             ;
                       ; ADC HUNG TIMEOUT, ADHUNG, ADC INITIALIZE CODE, ADCINI, ADC RELEASE, ADCREL
                       ADHUNG:
124674 / 336000,,022705         SKIPN      022705             ;; IF DEBUGGING, DON'T RE-INITIALIZE YET
                       ADCREL:
124675 / 260140,,124722         PUSHJ    P,ADCCLR             ;
124676 / 201300,,022653         MOVEI  DDB,ADCDDB             ;
                       HUNG:
124677 / 201000,,010000         MOVEI       IOACT             ;
124700 / 260140,,037464         PUSHJ    P, PWAIT             ;
124701 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
124702 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
124703 / 260140,,037501         PUSHJ    P, XWAIT             ;
124704 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
124705 / 607000,,000001          TLNN         IOW             ;
124706 / 254000,,124717          JRST       HFTST             ;
124707 / 205000,,000001         MOVSI         IOW             ;
124710 / 260140,,037464         PUSHJ    P, PWAIT             ;
124711 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
124712 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
124713 / 260140,,037501         PUSHJ    P, XWAIT             ;
124714 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
124715 / 135200,,037575           LDB    J, PJOBN             ;
124716 / 260140,,046105         PUSHJ    P,046105             ;; BRING HIM OUT OF IO WAIT
                       HFTST:
124717 / 332000,,022705         SKIPE      022705             ;; ARE WE IN NO-HANG (DEBUGGING) MODE?
124720 / 350003,,000000           AOS            (P)          ;; SKIP RETURN MEANS NO KILL
124721 / 263140,,000000          POPJ    P,                   ;
                       ADCCLR:
124722 / 201040,,000002         MOVEI  TAC,KLCODE             ;
124723 / 202040,,022701         MOVEM  TAC,022701             ;; TELL P2 TO CLEAR ADC
124724 / 254000,,124737          JRST      ADCJST             ;
                       ; ADCP2 - PDP-6'S CLK LEVEL ROUTINE FOR THE ADC
                       ADCP2:
124725 / 336040,,022701         SKIPN  TAC,ADCP2L             ;
124726 / 263140,,000000          POPJ    P,                   ;; SOMEBODY SCREWED UP!
124727 / 402000,,022701         SETZM      ADCP2L             ;
124730 / 254021,,124730          JRST      @124730(TAC)       ;
                       P2LDSP:
124731 / 000000,,124742                                       ;; STARTUP
124732 / 000000,,124733                                       ;; KILL
                       ADCKL:
124733 / 724200,,000000          CONO  ADC,                   ;; THIS IS EASY ENOUGH
                       ADCINI:
124734 / 402000,,022670         SETZM       ADCZB             ;
152211 / 022670,,022671           XWD ADCZB,ADCZB+1           ;
124735 / 200040,,152211          MOVE  TAC,152211             ;
124736 / 251040,,022703           BLT  TAC,022703             ;
                       ADCJST:
124737 / 201040,,125071         MOVEI  TAC,ADCIST             ;
124740 / 542040,,000723          HRRM  TAC,ADCJMP             ;
124741 / 263140,,000000          POPJ    P,                   ;
                       ADCST:
124742 / 201300,,022653         MOVEI  DDB,ADCDDB             ;
124743 / 720600,,200000          CONO  DCB,200000             ;; KILL OLD AD IF RUNNING
124744 / 742600,,004000          CONO   AD,004000             ;; OTHERWISE, WILL LOOP IN P2CH1
124745 / 255000,,000000          JFCL                         ;
124745 / 205040,,255000         MOVSI  TAC,      (<JFCL>)     ;
124746 / 502040,,000717          HLLM  TAC,000717             ;; KILL JUMP TO OLD AD ROUTINES
152756 / 264000,,000716           JSR      ADCCHL             ;
124747 / 200040,,152756          MOVE  TAC,152756             ;; MAKE SURE CHAN LOC IS SET UP RIGHT
124750 / 000000,,000002                                       ;
124750 / 202040,,000042         MOVEM  TAC,000042             ;
124751 / 700600,,002100          CONO   PI, ADCON             ;
124752 / 336040,,022671         SKIPN  TAC,ADCNBK             ;
124753 / 254000,,124733          JRST       ADCKL             ;
124754 / 135100,,037610           LDB TAC1,037610             ;; SET TIME COUNT
124755 / 137100,,037611           DPB TAC1,PDVCNT             ;
124756 / 202040,,022670         MOVEM  TAC,ADCBKI             ;
124757 / 402000,,022671         SETZM      ADCNBK             ;
124760 / 201100,,125074         MOVEI TAC1,125074             ;; PRETEND IT IS A NORMAL INTERRUPT
124761 / 200000,,022655          MOVE      ADCIOS             ;
124762 / 602000,,000200          TRNE       CYCLE             ;
124763 / 602000,,000020          TRNE      CYCDON             ;
124764 / 254000,,124767          JRST      ADCSCN             ;
124765 / 201100,,125130         MOVEI TAC1,125130             ;; SET TO RECYCLE
124766 / 202040,,022672         MOVEM  TAC,022672             ;; STORE IOWD HERE ALSO FOR RECYCLING
                       ADCSCN:
124767 / 542100,,000723          HRRM TAC1,000723             ;; SET JUMP LOCATION
                       ; ADCP2 CONT - STARTUP CODE, SET `RUN' FLAG, CHECK FOR IO SYNC
124770 / 201040,,000001         MOVEI  TAC,000001             ;; WAKE UP JOB IF PENDING ALREADY
124771 / 202040,,022700         MOVEM  TAC,ADCP1L             ;
124772 / 550040,,022676          HRRZ  TAC,022676             ;; MUST SET THIS IF TIME TO GO
124773 / 322040,,125004         JUMPE  TAC,ADCTSS             ;
124774 / 135200,,037575           LDB    J, PJOBN             ;
124775 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;
124776 / 254000,,125020          JRST      125020             ;; ADDRESS CHECK. GIVE ERROR.
124777 / 554640,,000007          HLRZ  AC1,  PROG             ;
125000 / 307055,,000000          CAIG  TAC,      (AC1)        ;
125001 / 307040,,000114          CAIG  TAC,JOBPFI             ;
125002 / 254000,,125020          JRST      ADCACK             ;
125003 / 476020,,022676         SETOM      @022676            ;; SET `RUN' FLAG
                       ADCTSS:
125004 / 602000,,000040          TRNE      000040             ;; ARE WE TRYING TO SYNCHRONIZE?
125005 / 332000,,022724         SKIPE      022724             ;; YES, IS THE OTHER GUY RUNNING?
125006 / 254000,,125016          JRST      125016             ;; NOT SYNCHRO OR IS RUNNING
125007 / 602000,,004000          TRNE      004000             ;; SYNC AFTER CYCLE?
125010 / 606000,,000200          TRNN      000200             ;; YES, IS HE CYCLING?
125011 / 254000,,125014          JRST      ADCDCS             ;
125012 / 606000,,000020          TRNN      000020             ;; YES, IS CYCLING DONE?
125013 / 254000,,125016          JRST      125016             ;; NO, START US UP, BUT SAVE DAC FOR LATER
                       ADCDCS:
125014 / 336000,,022725         SKIPN      022725             ;; WELL, IS HE PENDING? (BETTER BE)
125015 / 260140,,125440         PUSHJ    P,125440             ;; YES, START HIM UP
                       ; UNDEFINED STATE HERE OF NOT PENDING
                       ; PROBABLY SHOULD BE SOME KIND OF ERROR
                       ADCTCN:
125016 / 724220,,022674          CONO  ADC,@022674            ;; START IT UP
125017 / 263140,,000000          POPJ    P,                   ;
                       ADCACK:
125020 / 201040,,000002         MOVEI  TAC,000002             ;; PROPAGATE ADDRESS CHECK BACK TO HIM
125021 / 202040,,022700         MOVEM  TAC,ADCP1L             ;
125022 / 254000,,124733          JRST       ADCKL             ;
                       ; ADCP1 - PDP-10'S CLOCK ROUTINES FOR THE ADC
                       ADCP1:
125023 / 336040,,022700         SKIPN  TAC,ADCP1L             ;
125024 / 263140,,000000          POPJ    P,                   ;
125025 / 402000,,022700         SETZM      ADCP1L             ;
125026 / 201300,,022653         MOVEI  DDB,ADCDDB             ;
125027 / 254021,,125027          JRST      @125027(TAC)       ;
                       ADCP1D:
125030 / 000000,,125032                                       ;
125031 / 000000,,125045                                       ;
                       WKM:
125032 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
125033 / 135200,,037575           LDB    J, PJOBN             ;
125034 / 607000,,000001          TLNN      000001             ;; IS HE WAITING?
125035 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT
125036 / 205000,,000001         MOVSI         IOW             ;
125037 / 260140,,037464         PUSHJ    P, PWAIT             ;
125040 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
125041 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;; CLEAR WAIT BIT
125042 / 260140,,037501         PUSHJ    P, XWAIT             ;
125043 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
125044 / 254000,,046105          JRST      STTIOD             ;
                       ADCERM:
125045 / 402000,,022670         SETZM      022670             ;; KILL ANY WAITING XFR
                       ERM:
125046 / 135200,,037575           LDB    J, PJOBN             ;
125047 / 201000,,010000         MOVEI       IOACT             ;
125050 / 260140,,037464         PUSHJ    P, PWAIT             ;
125051 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
125052 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
125053 / 260140,,037501         PUSHJ    P, XWAIT             ;
125054 / 550046,,777777          HRRZ  TAC,DEVCMR(DDB)        ;
125055 / 260140,,137655         PUSHJ    P,TTYERP             ;
125056 / 260140,,042676         PUSHJ    P,INLMES             ;
125067 / 260140,,137704         PUSHJ    P,TTYSTC             ;
125070 / 254000,,045550          JRST      045550             ;; STOP HIM PERMANANTLY
                       ; ADC INTERRUPT ROUTINES, ADCIST FOR SPURIOUS, ADCINT FOR NORMAL
                       ADCIST:
125071 / 724200,,000000          CONO  ADC,                   ;
125072 / 350000,,022702           AOS      022702             ;; COUNT NUMBER OF SPURIOUS INTERRUPTS
125073 / 254520,,000716           JEN      @000716            ;; DISMISS INTERRUPT
                       ADCINT:
125074 / 724000,,022670          BLKI  ADC,022670             ;; BRING IN NEXT WORD
125075 / 254000,,125077          JRST      125077             ;; COUNT OVERFLOW
125076 / 254520,,000716           JEN      @000716            ;; GO BACK FOR MORE
                       ADCDON:
125077 / 264000,,001547           JSR      001547             ;; GET US SOME ACS
                       ADCSTU:
125100 / 201300,,022653         MOVEI  DDB,ADCDDB             ;
125101 / 724340,,000010         CONSO  ADC,000010             ;; DATA MISSED?
125102 / 254000,,125111          JRST      ADCNDM             ;
125103 / 201000,,002000         MOVEI        LOST             ;
125104 / 260140,,037464         PUSHJ    P, PWAIT             ;
125105 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
125106 / 437000,,022655           ORB      ADCIOS             ;
125107 / 260140,,037501         PUSHJ    P, XWAIT             ;
125110 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
                       ADCNDM:
125111 / 336040,,022671         SKIPN  TAC,022671             ;; IS THERE ANOTHER XFR WAITING?
125112 / 254000,,125231          JRST      125231             ;; NO MORE, STOP ADC
125113 / 202040,,022670         MOVEM  TAC,ADCBKI             ;
125114 / 260140,,125123         PUSHJ    P,125123             ;; ANY WORDS?
125115 / 135040,,037610           LDB  TAC,037610             ;; PICK UP HUNG TIME
125116 / 137040,,037611           DPB  TAC,037611             ;; USE THIS AS HUNG COUNT
125117 / 402000,,022671         SETZM      ADCNBK             ;
125120 / 336000,,022670         SKIPN      ADCBKI             ;
125121 / 254000,,125100          JRST      125100             ;; ALL DONE (???) GO THROUGH AGAIN
125122 / 254000,,125227          JRST      125227             ;; WAKE HIM UP AND LEAVE
                       ADCICH:
125123 / 724340,,000040         CONSO  ADC,DATARQ             ;
125124 / 263140,,000000          POPJ    P,                   ;
125125 / 724000,,022670          BLKI  ADC,022670             ;; BRING IN NEXT WORD
153200 / 402000,,022670         SETZM      022670             ;; COUNT OVERFLOW
153201 / 263140,,000000          POPJ    P,                   ;
125126 / 254000,,153200          JRST      153200             ;
125127 / 254000,,125123          JRST      125123             ;; OK, CHECK FOR ANOTHER ONE
                       ; ADC INTERRUPT ROUTINES, ADCRCY FOR RECYCLING INPUT
                       ADCRCY:
125130 / 202040,,022704         MOVEM  TAC,ADCTAC             ;
125131 / 724000,,022670          BLKI  ADC,022670             ;; GET NEXT WORD
125132 / 254000,,125141          JRST      125141             ;; COUNT OVERFLOW
125133 / 200040,,022670          MOVE  TAC,ADCBKI             ;
125134 / 214041,,000000          MOVM  TAC,      (TAC)        ;; PICK UP WORD WE JUST READ IN
125135 / 313040,,022673         CAMLE  TAC,022673             ;; IS IT GREATER THAN THRESHHOLD?
125136 / 254000,,125150          JRST      125150             ;; YES, SWITCH MODES INTO NORMAL
125137 / 200040,,022704          MOVE  TAC,ADCTAC             ;
125140 / 254520,,000716           JEN      @000716            ;; NO, GO ON
                       ADCRDN:
125141 / 336040,,022672         SKIPN  TAC,022672             ;; PICK UP IOWD
125142 / 254000,,125233          JRST      125233             ;; NOTHING THERE, HELP!
125143 / 202040,,022670         MOVEM  TAC,ADCBKI             ;
152647 / 000000,,022654                                       ;
152647 / 220600,,022654 POINT 6,00022654,17                   ;
125144 / 135040,,152647           LDB  TAC,152647             ;; PDVTIM
153013 / 000000,,022654                                       ;
153013 / 300600,,022654 POINT 6,00022654,11                   ;
125145 / 137040,,153013           DPB  TAC,153013             ;; PDVCNT
125146 / 200040,,022704          MOVE  TAC,ADCTAC             ;
125147 / 254520,,000716           JEN      @ADCCHL            ;
                       ; ADC INTERRUPT ROUTINES - ADCSMD, SWITCH MODES FROM CYCLE TO NORMAL
                       ADCSMD:
125150 / 200040,,022704          MOVE  TAC,ADCTAC             ;
125151 / 264000,,001547           JSR      001547             ;; GET US SOME ACS
125152 / 201300,,022653         MOVEI  DDB,ADCDDB             ;
125153 / 135200,,037575           LDB    J, PJOBN             ;
125154 / 200344,,027120          MOVE PROG,JBTADR(J)          ;; PICK UP HIS PROT-RELOC
125155 / 201040,,125074         MOVEI  TAC,125074             ;; SET TO GO TO REGULAR PLACE ON INTERRUPT
125156 / 542040,,000723          HRRM  TAC,ADCJMP             ;
125157 / 332000,,022671         SKIPE      022671             ;; IF THERE IS ANOTHER BLKI WD, THEN
125160 / 260140,,125222         PUSHJ    P,125222             ;; CHECK FOR NEXT WORD READY
125161 / 201000,,000020         MOVEI      000020             ;; NOTE RECYCLING DONE
125162 / 724300,,000010         CONSZ  ADC,000010             ;; DATA MISSED?
125163 / 435000,,002000           ORI      002000             ;; YES, SET BIT
125164 / 260140,,037464         PUSHJ    P, PWAIT             ;
125165 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
125166 / 437000,,022655           ORB      ADCIOS             ;
125167 / 260140,,037501         PUSHJ    P, XWAIT             ;
125170 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
125171 / 514640,,000007          HRLZ  AC1,000007             ;; SET AC1 TO POINT TO END OF CORE IMAGE
125172 / 332000,,022671         SKIPE      022671             ;; IF THERE IS ANOTHER BLKI WD, THEN
125173 / 260140,,125222         PUSHJ    P,125222             ;; CHECK FOR NEXT WORD READY
125174 / 550040,,022677          HRRZ  TAC,022677             ;; IS THERE A PLACE TO PUT THE RECYCLE WD?
125175 / 322040,,125206         JUMPE  TAC,125206             ;; NO, GO ON WITH REGULAR XFR
125176 / 301040,,000114          CAIL  TAC,JOBPFI             ;
125177 / 303055,,000000         CAILE  TAC,      (AC1)        ;
125200 / 254000,,125235          JRST      125235             ;; ADDRESS CHECK.
125201 / 200040,,022670          MOVE  TAC,ADCBKI             ;
125202 / 275047,,000000          SUBI  TAC,      (PROG)       ;
125203 / 202060,,022677         MOVEM  TAC,@022677            ;; GIVE USER THE BLKI POINTER
125204 / 332000,,022671         SKIPE      022671             ;; IF THERE IS ANOTHER BLKO WD, THEN
125205 / 260140,,125222         PUSHJ    P,125222             ;; CHECK FOR NEXT WORD READY
                       ADCISH:
125206 / 602000,,000040          TRNE      000040             ;; ARE WE SYNCHRONIZING IO?
125207 / 606000,,004000          TRNN      004000             ;; IF SO, IS IT AFTER RECYCLE DONE?
125210 / 254000,,125100          JRST      125100             ;; NO, JUST GO ON WITHOUT COMMENT
125211 / 332000,,022725         SKIPE      022725             ;; IS THERE A WAITING TRANSFER?
125212 / 332000,,022724         SKIPE      022724             ;; AND NO CURRENT TRANSFER?
125213 / 254000,,125100          JRST      ADCSTU             ;
125214 / 332000,,022671         SKIPE      022671             ;; CHECK FOR WORD READY
125215 / 260140,,125222         PUSHJ    P,125222             ;; READ IT IN IF READY
125216 / 260140,,125440         PUSHJ    P,125440             ;; CALL DAC STARTUP CODE
125217 / 332000,,022671         SKIPE      022671             ;; CHECK FOR WORD READY
125220 / 260140,,125222         PUSHJ    P,125222             ;; READ IT IN IF READY
125221 / 254000,,125100          JRST      ADCSTU             ;
                       ADCCHK:
125222 / 724340,,000040         CONSO  ADC,000040             ;; DOES IT HAVE A WORD FOR US?
125223 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT
125224 / 724000,,022671          BLKI  ADC,022671             ;; YES, BRING IT IN VIA NEXT PTR
153202 / 402000,,022671         SETZM      022671             ;; NO MORE, NOTE EMPTY IOWD
153203 / 263140,,000000          POPJ    P,                   ;
125225 / 254000,,153202          JRST      153202             ;
125226 / 254000,,125222          JRST      125222             ;; GO BACK AND CHECK FOR MORE
                       ; ADC INTERRUPT ROUTINES - ADCILA, ADCW, ADCWK, ADCILI, END OF XFR
                       ADCW:
125227 / 201040,,000001         MOVEI  TAC,000001             ;; DURING XFR TO JUST WAKE UP JOB
125230 / 254000,,125271          JRST      ADCSTC             ;
                       ADCWK:
125231 / 201040,,000001         MOVEI  TAC,000001             ;; HERE AT END OF XFR TO KILL ADC AND WAKE JOB
125232 / 254000,,125244          JRST        ADCZ             ;
                       ADCILI:
125233 / 200040,,022704          MOVE  TAC,022704             ;; RESTORE SAVED AC
125234 / 264000,,001547           JSR      001547             ;; GET US SOME ACS
                       ADCILA:
125235 / 201040,,000002         MOVEI  TAC,ERCODE             ;
125236 / 260140,,037464         PUSHJ    P, PWAIT             ;
125237 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
125240 / 201000,,200000         MOVEI      200000             ;; MAKE SURE NO FURTHER TRANSFERS
125241 / 436000,,022655           ORM      ADCIOS             ;
125242 / 260140,,037501         PUSHJ    P, XWAIT             ;
125243 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
                       ADCZ:
125244 / 402000,,022670         SETZM      022670             ;; ABORT NEXT TRANSFERS
125245 / 402000,,022671         SETZM      ADCNBK             ;
125246 / 724200,,000000          CONO  ADC,                   ;
125247 / 201100,,125071         MOVEI TAC1,125071             ;; MAKE SURE STRAY INTERRUPTS GET TRAPPED
125250 / 542100,,000723          HRRM TAC1,ADCJMP             ;
125251 / 550100,,022676          HRRZ TAC1,022676             ;; DOES HE WANT TO KNOW ABOUT THIS?
125252 / 322100,,125263         JUMPE TAC1,125263             ;; NO, FORGET IT
125253 / 135200,,037575           LDB    J,037575             ;; PICK UP JOB NUMBER
125254 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;; AND PROT-RELOC FOR JOB
125255 / 254000,,125273          JRST      125273             ;; NONE THERE. OOPS!
125256 / 554640,,000007          HLRZ  AC1,  PROG             ;
125257 / 301100,,000114          CAIL TAC1,JOBPFI             ;
125260 / 303115,,000000         CAILE TAC1,      (AC1)        ;
125261 / 254000,,125273          JRST      ADCCHI             ;
125262 / 402020,,022676         SETZM      @022676            ;; CLEAR HIS RUNNING FLAG
                       ADCCIA:
125263 / 201000,,010000         MOVEI      010000             ;; UNLOCK HIM FROM CORE
125264 / 260140,,037464         PUSHJ    P, PWAIT             ;
125265 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
125266 / 413000,,022655        ANDCAB      022655             ;; ON THE OFF CHANCE THAT HE MIGHT
125267 / 260140,,037501         PUSHJ    P, XWAIT             ;
125270 / 201040,,022664         MOVEI  TAC,ADCCSC             ;
                       ADCSTC:
125271 / 202040,,022700         MOVEM  TAC,ADCP1L             ;
125272 / 263140,,000000          POPJ    P,                   ;
                       ADCCHI:
125273 / 200000,,022655          MOVE      ADCIOS             ;
125274 / 402000,,022676         SETZM      022676             ;; MAKE SURE WE DON'T LOOP
125275 / 603000,,740000          TLNE      ERRMSK             ;
125276 / 254000,,125271          JRST      125271             ;; JUST GET ON WITH IT
125277 / 254000,,125235          JRST      125235             ;; NO ERRORS YET, GIVE HIM ADDRESS CHECKD
                       ; UUO DISPATCH TABLE FOR DAC
125300 / 254000,,125432          JRST      125432             ;; SYSTEM STARTUP
125301 / 254000,,125414          JRST      125414             ;; HUNG TIME OUT
                       DACDSP:
125302 / 254000,,125415          JRST      125415             ;; RELEASE
125303 / 263140,,000000          POPJ    P,                   ;; CLOSE OUTPUT
125304 / 254000,,043340          JRST      043340             ;; BUFFERED OUTPUT
125305 / 254000,,043267          JRST      043267             ;; BUFFERED INPUT
125306 / 254000,,037401          JRST      037401             ;; ENTER
125307 / 254000,,037401          JRST      037401             ;; LOOKUP
125310 / 254000,,125347          JRST      125347             ;; DMP MODE OUTPUT
125311 / 254000,,043267          JRST      043267             ;; DMP MODE INPUT
125312 / 263140,,000000          POPJ    P,                   ;; USETO
125313 / 263140,,000000          POPJ    P,                   ;; USETI
125314 / 263140,,000000          POPJ    P,                   ;; UGETF
125315 / 254000,,037401          JRST      037401             ;; RENAME
125316 / 263140,,000000          POPJ    P,                   ;; CLOSE INPUT
125317 / 263140,,000000          POPJ    P,                   ;; UTPCLR
125320 / 254000,,125321          JRST      125321             ;; MTAPE
                       ; DAC MTAPE UUO. SETS PARAMETERS.
                       ; EFFECTIVE ADDRESS POINTS TO TWO WORD BLOCK
                       ; FIRST WORD (RH SAME AS ADC)
                       ;  	0,,SPEED*1000+PACK*100+NCHANS
                       ;	SPEED = 0	6.4 KC		IS PER CHANNEL RATE
                       ;		1	12.8 KC
                       ;		2	25.6 KC
                       ;		3	51.2 KC
                       ;		4	102.4 KC
                       ;		5	204.8 KC
                       ; SECOND WORD (SAME AS ADC)
                       ;	<ADDR FOR ERR CODES>,,<ADDR FOR `RUN' FLAG>
                       ;	<`RUN' FLAG IS `SETOM'ED WHILE DAC IS RUNNING AND ZEROED WHEN
                       ; 		DAC IS SHUT OFF
                       DACMTP:
125321 / 627000,,000002          TLZN      000002             ;; FIRST UUO?
125322 / 254000,,125325          JRST      DACNFS             ;
125323 / 202000,,022711         MOVEM      022711             ;; NOT BUSY BY DEFINITION (OR BUG!)
125324 / 260140,,125432         PUSHJ    P,125432             ;; CLEAR OUT IMPORTANT STUFF
                       DACNFS:
125325 / 260140,,125722         PUSHJ    P,125722             ;; ADDRESS CHECK EFFECT. ADDR. OF UUO
125326 / 271700,,000001          ADDI  AC2,000001             ;; CHECK END OF TABLE TOO
125327 / 303715,,000000         CAILE  AC2,      (AC1)        ;
125330 / 254000,,043211          JRST      ADRERR             ;
125331 / 200060,,000014          MOVE  TAC,@000014            ;; PICK UP 0,,PARAMS
125332 / 260140,,125624         PUSHJ    P,125624             ;; SET UP CONO WORD IN TAC1
125333 / 202700,,022734         MOVEM  AC2,022734             ;; SAVE # WORDS PER SECOND
125334 / 202100,,022726         MOVEM TAC1,022726             ;; STORE CONO WORD
125335 / 271600,,000001          ADDI  UUO,000001             ;; BUMP TO ERR CODE WORD
125336 / 200660,,000014          MOVE  AC1,@   UUO            ;
125337 / 556640,,022727         HLRZM  AC1,022727             ;; SET ERROR CODE ADDRESS
125340 / 505640,,000007          HRLI  AC1,000007             ;; SET PROG IN INDEX FIELD
125341 / 202640,,022730         MOVEM  AC1,022730             ;; RUN FLAG ADDRESS
125342 / 502640,,022727          HLLM  AC1,DACERA             ;
125343 / 263140,,000000          POPJ    P,                   ;; ALL DONE
                       ; DAC DUMP MODE OUTPUT ROUTINE
                       DACW:
125344 / 602000,,740000          TRNE      ERRMSK             ;
125345 / 263140,,000000          POPJ    P,                   ;; LEAVE ON ERRORS
125346 / 260140,,046176         PUSHJ    P,046176             ;; WAIT FOR NEXT XFR DONE
                       DACOUT:
125347 / 627000,,000002          TLZN      000002             ;; FIRST UUO?
125350 / 254000,,125353          JRST      DACNOF             ;
125351 / 202000,,022711         MOVEM      DACIOS             ;
125352 / 260140,,125432         PUSHJ    P,DACINI             ;
                       DACNOF:
125353 / 332000,,022725         SKIPE      022725             ;; IS THERE ANOTHER BLOCK WAITING?
125354 / 254000,,125344          JRST      125344             ;; YES, GO WAIT FOR IT
125355 / 260140,,125722         PUSHJ    P,125722             ;; ADDR CHECK
125356 / 332060,,000014         SKIPE  TAC,@000014            ;; PICK UP IOWD
125357 / 607040,,777777          TLNN  TAC,777777             ;; ANYTHING THERE?
125360 / 254000,,124666          JRST      124666             ;; NO, EXIT NOW
125361 / 260140,,125706         PUSHJ    P,125706             ;; ADDRESS CHECK THE IOWD
125362 / 254000,,043211          JRST      043211             ;; ILLEGAL. STOP JOB AND PRINT MESSAGE
152015 / 000020,,010000                                       ;
125363 / 200000,,152015          MOVE      152015             ;
125364 / 260140,,037464         PUSHJ    P, PWAIT             ;
125365 / 201040,,022720         MOVEI  TAC,DACCSC             ;
125366 / 437000,,022711           ORB      DACIOS             ;
125367 / 260140,,037501         PUSHJ    P, XWAIT             ;
125370 / 201040,,022720         MOVEI  TAC,DACCSC             ;
125371 / 271047,,000000          ADDI  TAC,      (PROG)       ;
125372 / 202040,,022725         MOVEM  TAC,DACNBK             ;
125373 / 564640,,000001          HLRO  AC1,000001             ;; PICK UP -WC
125374 / 210640,,000015          MOVN  AC1,000015             ;; MAKE IT POSITIVE
125375 / 230640,,022734          IDIV  AC1,022734             ;; MAKE INTO # SECONDS
125376 / 271640,,000005          ADDI  AC1,000005             ;; 5 MORE FOR GOOD MEASURE
125377 / 303640,,000077         CAILE  AC1,000077             ;; SATURATE AT 6 BITS
125400 / 201640,,000077         MOVEI  AC1,    77             ;
125401 / 137640,,037610           DPB  AC1,037610             ;; AND THIS IS THE NEW HUNG TIME
125402 / 332000,,022724         SKIPE      022724             ;; IS THERE AN XFR IN PROGRESS?
125403 / 254000,,124666          JRST      124666             ;; YES, WE CAN LEAVE NOW
125404 / 602000,,000040          TRNE      000040             ;; ARE WE SYNCHRONIZING?
125405 / 332000,,022670         SKIPE      022670             ;; YES, IS ADC ALREADY RUNNING?
125406 / 254000,,125411          JRST      125411             ;; NOT SYNC OR XFR ALREADY RUNNING
125407 / 336000,,022671         SKIPN      022671             ;; NOT RUNNING, XFR QUEUED?
125410 / 254000,,124671          JRST      124671             ;; NOT QUEUED, WAIT FOR IT. SET HUNG TIME TO MAX.
                       DACSTR:
125411 / 201040,,000001         MOVEI  TAC,000001             ;; START DAC AND LEAVE
125412 / 202040,,022732         MOVEM  TAC,022732             ;; PLACE WHERE P2 WILL SEE IT
125413 / 254000,,124666          JRST      124666             ;; LEAVE, WAIT OR NO
                       ; DAC HUNG ROUTINE, DAHUNG, DAC INITIALIZE ROUTINE, DACINI, RELEASE, DACREL
                       DAHUNG:
125414 / 336000,,022705         SKIPN      022705             ;; IF DEBUGGING, DON'T CLEAR OUT DAC YET
                       DACREL:
125415 / 260140,,125420         PUSHJ    P,DACCLR             ;
125416 / 201300,,022707         MOVEI  DDB,DACDDB             ;
125417 / 254000,,124677          JRST      124677             ;; COMMON ROUTINE FOR ADC-DAC
                       DACCLR:
125420 / 201040,,000002         MOVEI  TAC,KLCODE             ;
125421 / 202040,,022732         MOVEM  TAC,022732             ;; TELL P2 TO CLEAR DAC
125422 / 254000,,125435          JRST      DACJST             ;
                       ; DACP2 - PDP-6'S CLK LEVEL ROUTINE FOR THE DAC
                       DACP2:
125423 / 336040,,022732         SKIPN  TAC,DACP2L             ;
125424 / 263140,,000000          POPJ    P,                   ;
125425 / 402000,,022732         SETZM      DACP2L             ;
125426 / 254021,,125426          JRST      @125426(TAC)       ;
                       P2DDSP:
125427 / 000000,,125440                                       ;; STARTUP
125430 / 000000,,125431                                       ;; KILL
                       DACKL:
125431 / 724600,,000000          CONO  DAC,                   ;
                       DACINI:
125432 / 402000,,022724         SETZM       DACZB             ;
152212 / 022724,,022725           XWD DACZB,DACZB+1           ;
125433 / 200040,,152212          MOVE  TAC,152212             ;
125434 / 251040,,022734           BLT  TAC,022734             ;
                       DACJST:
125435 / 201040,,125520         MOVEI  TAC,DACIST             ;
125436 / 542040,,000721          HRRM  TAC,DACJMP             ;
125437 / 263140,,000000          POPJ    P,                   ;
                       DACST:
125440 / 201300,,022707         MOVEI  DDB,DACDDB             ;
125441 / 720600,,200000          CONO  DCB,200000             ;; KILL OLD AD IF RUNNING
125442 / 742600,,004000          CONO   AD,004000             ;; OTHERWISE, WILL LOOP IN P2CH1
125443 / 255000,,000000          JFCL                         ;
125443 / 205040,,255000         MOVSI  TAC,      (<JFCL>)     ;
125444 / 502040,,000717          HLLM  TAC,000717             ;; KILL JUMP TO OLD AD ROUTINES
152756 / 264000,,000716           JSR      DACCHL             ;
125445 / 200040,,152756          MOVE  TAC,152756             ;; MAKE SURE CHAN LOC IS SET UP RIGHT
125446 / 000000,,000002                                       ;
125446 / 202040,,000042         MOVEM  TAC,000042             ;
125447 / 700600,,002100          CONO   PI,002100             ;; MAKE SURE SOMEBODY'S LISTNING
125450 / 336040,,022725         SKIPN  TAC,DACNBK             ;
125451 / 254000,,125431          JRST       DACKL             ;
125452 / 135100,,037610           LDB TAC1,037610             ;; START COUNTING NOW
125453 / 137100,,037611           DPB TAC1,PDVCNT             ;
125454 / 202040,,022724         MOVEM  TAC,022724             ;; THIS SET PREVENTS LOOPING THROUGH ADCST
125455 / 402000,,022725         SETZM      DACNBK             ;
125456 / 201040,,125523         MOVEI  TAC,125523             ;; IT IS A NORMAL INTERRUPT
125457 / 200000,,022711          MOVE      DACIOS             ;
125460 / 542040,,000721          HRRM  TAC,000721             ;; SET JUMP LOCATION
125461 / 201040,,000001         MOVEI  TAC,000001             ;; WAKE UP JOB IF PENDING ALREADY
125462 / 202040,,022731         MOVEM  TAC,DACP1L             ;
125463 / 550040,,022730          HRRZ  TAC,022730             ;; SEE IF HE WANTS US TO FLAG HIM
125464 / 322040,,125475         JUMPE  TAC,125475             ;; NO, PROCEED
125465 / 135200,,037575           LDB    J, PJOBN             ;
125466 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;
125467 / 254000,,125504          JRST      125504             ;; ADDRESS CHECK. GIVE ERROR.
125470 / 554640,,000007          HLRZ  AC1,  PROG             ;
125471 / 307055,,000000          CAIG  TAC,      (AC1)        ;
125472 / 307040,,000114          CAIG  TAC,JOBPFI             ;
125473 / 254000,,125504          JRST      DACACK             ;
125474 / 476020,,022730         SETOM      @022730            ;; SET `RUN' FLAG
                       DACTSS:
125475 / 602000,,000040          TRNE      000040             ;; ARE WE TRYING TO SYNCHRONIZE?
125476 / 332000,,022670         SKIPE      022670             ;; YES, IS THE OTHER GUY RUNNING?
125477 / 254000,,125502          JRST      125502             ;; NOT SYNCHRO OR IS RUNNING
125500 / 336000,,022671         SKIPN      022671             ;; WELL, IS HE PENDING? (BETTER BE)
125501 / 260140,,124742         PUSHJ    P,124742             ;; YES, START HIM UP
                       ; UNDEFINED STATE HERE OF NOT PENDING
                       ; PROBABLY SHOULD BE SOME KIND OF ERROR
                       DACTCN:
125502 / 724620,,022726          CONO  DAC,@022726            ;; START IT UP
125503 / 263140,,000000          POPJ    P,                   ;
                       DACACK:
125504 / 201040,,000002         MOVEI  TAC,000002             ;; SEND HIM BACK AN ADDRESS CHECK
125505 / 202040,,022731         MOVEM  TAC,DACP1L             ;
125506 / 254000,,125431          JRST       DACKL             ;
                       ; DACP1 - PDP-10'S CLOCK ROUTINES FOR THE DAC
                       DACP1:
125507 / 336040,,022731         SKIPN  TAC,DACP1L             ;
125510 / 263140,,000000          POPJ    P,                   ;; SHOULDN'T HAPPEN
125511 / 402000,,022731         SETZM      DACP1L             ;
125512 / 201300,,022707         MOVEI  DDB,DACDDB             ;
125513 / 254021,,125513          JRST      @125513(TAC)       ;
                       DACP1D:
125514 / 000000,,125032                                       ;
125515 / 000000,,125516                                       ;
                       DACERM:
125516 / 402000,,022724         SETZM      022724             ;; KILL WAITING XFR
125517 / 254000,,125046          JRST         ERM             ;
                       ; DAC INTERRUPT ROUTINES, DACIST FOR SPURIOUS, DACINT FOR NORMAL
                       DACIST:
125520 / 724600,,000000          CONO  DAC,                   ;
125521 / 350000,,022733           AOS      022733             ;; COUNT NUMBER OF SPURIOUS INTERRUPTS
125522 / 254520,,000716           JEN      @DACCHL            ;
                       DACINT:
125523 / 724500,,022724          BLKO  DAC,022724             ;; SEND OUT NEXT WORD
125524 / 254000,,125526          JRST      125526             ;; COUNT OVERFLOW
125525 / 254520,,000716           JEN      @000716            ;; GO BACK FOR MORE
                       DACDON:
125526 / 264000,,001547           JSR      DACSAV             ;
125527 / 201300,,022707         MOVEI  DDB,DACDDB             ;
125530 / 724740,,001000         CONSO  DAC,001000             ;; DATA MISSED?
125531 / 254000,,125540          JRST      DACNDM             ;
125532 / 201000,,002000         MOVEI        LOST             ;
125533 / 260140,,037464         PUSHJ    P, PWAIT             ;
125534 / 201040,,022720         MOVEI  TAC,DACCSC             ;
125535 / 437000,,022711           ORB      DACIOS             ;
125536 / 260140,,037501         PUSHJ    P, XWAIT             ;
125537 / 201040,,022720         MOVEI  TAC,DACCSC             ;
                       DACNDM:
125540 / 336040,,022725         SKIPN  TAC,022725             ;; ANOTHER ONE WAITING?
125541 / 254000,,125560          JRST      125560             ;; NO MORE. WAKE UP USER AND LEAVE.
125542 / 202040,,022724         MOVEM  TAC,DACBKO             ;
125543 / 260140,,125553         PUSHJ    P,DACCHK             ;
125544 / 135040,,037610           LDB  TAC,PDVTIM             ;
125545 / 137040,,037611           DPB  TAC,037611             ;; RESET HUNG TIME
125546 / 402000,,022725         SETZM      DACNBK             ;
125547 / 336000,,022724         SKIPN      DACBKO             ;
125550 / 254000,,125560          JRST      125560             ;; IF OVERFLOWED IN MEANTIME, FLUSH XFR NOW
125551 / 201040,,000001         MOVEI  TAC,000001             ;; SET TO WAKE HIM UP (CHECKS IOW IN P1)
125552 / 254000,,125606          JRST      DACSTC             ;
                       DACCHK:
125553 / 724740,,002000         CONSO  DAC,002000             ;; REQUESTING INTERRUPT?
125554 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT
125555 / 724500,,022724          BLKO  DAC,022724             ;; YES, SEND OUT NEXT WORD
153204 / 402000,,022724         SETZM      022724             ;; FLAG OVERFLOW
153205 / 263140,,000000          POPJ    P,                   ;
125556 / 254000,,153204          JRST      153204             ;
125557 / 254000,,125553          JRST      125553             ;; SUCCESS, LOOP BACK FOR NEXT WORD
                       ; DAC INTERRUPT ROUTINES - WAKEUP AND `RUN' FLAG BUSINESS
                       DACWK:
125560 / 201040,,000001         MOVEI  TAC,WKCODE             ;
                       DACZ:
125561 / 402000,,022724         SETZM      DACBKO             ;
125562 / 402000,,022725         SETZM      DACNBK             ;
125563 / 724600,,000000          CONO  DAC,                   ;
125564 / 201100,,125520         MOVEI TAC1,DACIST             ;
125565 / 542100,,000721          HRRM TAC1,DACJMP             ;
125566 / 550100,,022730          HRRZ TAC1,DACRUN             ;
125567 / 322100,,125600         JUMPE TAC1,DACCIA             ;
125570 / 135200,,037575           LDB    J,037575             ;; PICK UP JOB NUMBER
125571 / 336344,,027120         SKIPN PROG,JBTADR(J)          ;; AND PROT-RELOC OF JOB
125572 / 254000,,125600          JRST      125600             ;; NONE THERE!! OOPS!
125573 / 554640,,000007          HLRZ  AC1,  PROG             ;
125574 / 301100,,000114          CAIL TAC1,JOBPFI             ;
125575 / 303115,,000000         CAILE TAC1,      (AC1)        ;
125576 / 254000,,125610          JRST      DACCHI             ;
125577 / 402020,,022730         SETZM      @DACRUN            ;
                       DACCIA:
125600 / 201000,,010000         MOVEI      010000             ;; UNLOCK JOB
125601 / 260140,,037464         PUSHJ    P, PWAIT             ;
125602 / 201040,,022720         MOVEI  TAC,DACCSC             ;
125603 / 413000,,022711        ANDCAB      DACIOS             ;
125604 / 260140,,037501         PUSHJ    P, XWAIT             ;
125605 / 201040,,022720         MOVEI  TAC,DACCSC             ;
                       DACSTC:
125606 / 202040,,022731         MOVEM  TAC,DACP1L             ;
125607 / 263140,,000000          POPJ    P,                   ;
                       DACCHI:
125610 / 200000,,022711          MOVE      DACIOS             ;
125611 / 402000,,022730         SETZM      DACRUN             ;
125612 / 603000,,740000          TLNE      ERRMSK             ;
125613 / 254000,,125606          JRST      DACSTC             ;
125614 / 201040,,000002         MOVEI  TAC,ERCODE             ;
125615 / 260140,,037464         PUSHJ    P, PWAIT             ;
125616 / 201040,,022720         MOVEI  TAC,DACCSC             ;
125617 / 201000,,200000         MOVEI      IODERR             ;
125620 / 436000,,022711           ORM      DACIOS             ;
125621 / 260140,,037501         PUSHJ    P, XWAIT             ;
125622 / 201040,,022720         MOVEI  TAC,DACCSC             ;
125623 / 254000,,125561          JRST        DACZ             ;
                       ; ROUTINE MAKES UP A CONO WORD FROM MTAPE SPECS
                       ; SPECS ARE IN RH TAC
                       ; RETURNS CONO WORD IN TAC1
                       ; USES AC1, AC3 AS TEMP
                       ; RETURNS WORDS PER SECOND IN AC2
                       ; = SPEED*1000+PACK*100+NCHANS
                       ; NCHANS = 1 FOR MONO	(2-BIT NUMBER)
                       ;	 = 2 FOR STEREO
                       ;	 = 0,3 FOR QUAD
                       ; PACK = 0,3 FOR 12 BIT  (2-BIT NUMBER)
                       ;      = 1 FOR 16 BIT (HALFWORD MODE)
                       ;      = 2 FOR FLOATING PT. INCREMENTAL
                       ; SPEED = 0 FOR 6.4 KC	(3-BIT NUMBER)
                       ;       = 1 FOR 12.8 KC
                       ;       = 2 FOR 25.6 KC
                       ;       = 3 FOR 51.2 KC
                       ;       = 4 FOR 102.4 KC
                       ;       = 5 FOR 204.8 KC
                       SETCNO:
125624 / 201100,,100041         MOVEI TAC1,100041             ;; ADC AND DAC RUN ON SAME CHANNEL
152036 / 000000,,000001                                       ;
152036 / 000200,,000001 POINT 2,00000001,35                   ;
125625 / 135640,,152036           LDB  AC1,152036             ;
125626 / 306640,,000001          CAIN  AC1,     1             ;
125627 / 431100,,000050          XORI TAC1,000050             ;
125630 / 306640,,000002          CAIN  AC1,     2             ;
125631 / 431100,,000060          XORI TAC1,000060             ;
152266 / 000000,,000001                                       ;
152266 / 060200,,000001 POINT 2,00000001,29                   ;
125632 / 135640,,152266           LDB  AC1,152266             ;
125633 / 200755,,125674          MOVE  AC3, SAMPW(AC1)        ;; PICK UP # SAMPS PER WD
125634 / 435100,,010000           ORI TAC1,_12BIT             ;
125635 / 306640,,000001          CAIN  AC1,     1             ;
125636 / 431100,,030000          XORI TAC1,030000             ;
125637 / 306640,,000002          CAIN  AC1,     2             ;
125640 / 431100,,050000          XORI TAC1,050000             ;
152326 / 000000,,000001                                       ;
152326 / 110300,,000001 POINT 3,00000001,26                   ;
125641 / 135640,,152326           LDB  AC1,152326             ;
125642 / 306640,,000001          CAIN  AC1,     1             ;
125643 / 435100,,200000           ORI TAC1,200000             ;
125644 / 306640,,000002          CAIN  AC1,     2             ;
125645 / 435100,,400000           ORI TAC1,400000             ;
125646 / 301640,,000003          CAIL  AC1,     3             ;
125647 / 435100,,600000           ORI TAC1,600000             ;
125650 / 602100,,000020          TRNE TAC1,STEREO             ;
125651 / 271640,,000001          ADDI  AC1,     1             ;
125652 / 602100,,000040          TRNE TAC1,  QUAD             ;
125653 / 271640,,000002          ADDI  AC1,     2             ;
125654 / 303640,,000005         CAILE  AC1,     5             ;
125655 / 254000,,125662          JRST      ILLSPD             ;
125656 / 200715,,125700          MOVE  AC2, SPTAB(AC1)        ;; PICK UP SPEED IN SAMPLES/SEC
125657 / 231717,,000000         IDIVI  AC2,      (AC3)        ;; GET WDS/SEC IN AC2
152270 / 000000,,000002                                       ;
152270 / 060300,,000002 POINT 3,00000002,29                   ;
125660 / 137640,,152270           DPB  AC1,152270             ;
125661 / 263140,,000000          POPJ    P,                   ;
                       ILLSPD:
125662 / 265040,,043640           JSP  TAC,UUOMES             ;
                       SAMPW:
125674 / 000000,,000003                                       ;
125675 / 000000,,000002                                       ;
125676 / 000000,,000004                                       ;
125677 / 000000,,000003                                       ;
                       SPTAB:
125700 / 000000,,014400                                       ;
125701 / 000000,,031000                                       ;
125702 / 000000,,062000                                       ;
125703 / 000000,,144000                                       ;
125704 / 000000,,310000                                       ;
125705 / 000000,,620000                                       ;
                       ; ADRCHK - ROUTINE TO ADDRESS CHECK AN IOWD, CHKUUO - CHECKS UUO ADDR
                       ; CALL WITH IOWD IN TAC
                       ; SKIPS IF OK
                       ; PROG MUST BE SET UP
                       ; USES TAC1 AND AC1
                       ADRCHK:
125706 / 201101,,000000         MOVEI TAC1,      (TAC)        ;
125707 / 554640,,000007          HLRZ  AC1,  PROG             ;
125710 / 301100,,000114          CAIL TAC1,000114             ;; MUST BE ABOVE PROTECTED AREA
125711 / 303115,,000000         CAILE TAC1,      (AC1)        ;
125712 / 263140,,000000          POPJ    P,                   ;; OUT OF BOUNDS, GIVE ERROR RETURN
125713 / 564100,,000001          HLRO TAC1,   TAC             ;
125714 / 213000,,000002         MOVNS      000002             ;; MAKE IT POSITIVE
125715 / 271101,,000000          ADDI TAC1,      (TAC)        ;
125716 / 301100,,000114          CAIL TAC1,JOBPFI             ;
125717 / 303115,,000000         CAILE TAC1,      (AC1)        ;
125720 / 263140,,000000          POPJ    P,                   ;
125721 / 254000,,037401          JRST      CPOPJ1             ;
                       ; CHKUUO
                       ; DOESN'T RETURN IF BAD
                       ; PROG MUST BE SET UP
                       ; PUTS RH OF UUO IN AC2
                       ; PUTS LAST WD IN CORE IMAGE ADDRESS IN AC1
                       CHKUUO:
125722 / 554640,,000007          HLRZ  AC1,  PROG             ;
125723 / 201714,,000000         MOVEI  AC2,      (UUO)        ;
125724 / 307715,,000000          CAIG  AC2,      (AC1)        ;
125725 / 307700,,000114          CAIG  AC2,JOBPFI             ;
125726 / 254000,,043211          JRST      ADRERR             ;
125727 / 263140,,000000          POPJ    P,                   ;
                       ; END OF IT ALL
125730 /                 ;::    BEND STANFO.ADCSER.
125730 /               ;: ADCSER[J17,SYS] EOF.
125730 /               ;: ELFSER[J17,SYS]
125730 /                 ;::   BEGIN STANFO.ELFSER.
                       ;Nonzero for debugging in user-IOT mode.
                       ;10/11 interface definitions
                       ;CONO bits
                       ;If 0, the other bits have these meanings:
                       ;	Data packing mode:
                       ;	Bits 30-32 are the PI channel for special interrupts,
                       ;	33-35 the channel for data transfer interrupts.
                       ;CONI bits, left half
                       ;	Bits 1:17 are the contents of the Unibus address register.
                       ;CONI bits, right half
                       ;	Errors in the data transfer:
                       ;(set by software, not a CONI)
                       ;	Status of current transfer:
                       ;	Bits 26:35 (from GRAB on) are the same as set in the
                       ;	last CONO.
                       ;Console control box definitions
                       ;IFN CBOX
                       ;SPS41 definitions
                       ;IFN SPS41
                       ;Service dispatch table, DDB definitions
125730 / 254000,,125752          JRST      125752             ;;Initialization
125731 / 254000,,126000          JRST      126000             ;;Hung
                       ELFDSP:
125732 / 254000,,125752          JRST      125752             ;;Release
125733 / 263140,,000000          POPJ    P,                   ;;Close
125734 / 254000,,043340          JRST      043340             ;;Out UUO
125735 / 254000,,043340          JRST      043340             ;;In UUO
125736 / 254000,,037401          JRST      037401             ;;Enter
125737 / 254000,,037401          JRST      037401             ;;Lookup
125740 / 254000,,126001          JRST      126001             ;;Dump-mode output
125741 / 254000,,126012          JRST      126012             ;;Dump-mode input
125742 / 254000,,126101          JRST      126101             ;;USETO
125743 / 254000,,126073          JRST      126073             ;;USETI
125744 / 254000,,126055          JRST      126055             ;;UGETF
125745 / 254000,,037401          JRST      037401             ;;RENAME
125746 / 263140,,000000          POPJ    P,                   ;;Close input
125747 / 263140,,000000          POPJ    P,                   ;;UTPCLR
125750 / 254000,,126027          JRST      126027             ;;MTAPE
                       ;Locations in the DDB, starting at ELFLOC
                       ;System initialization, interrupt code, RELEAS, hung code.
                       ;First UUO after INIT will call ELFINI to set the default values of the USET's.
                       ELFIN0:
125751 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;Special entry for USET and UGETF.
                       ELFREL:
                       ;RELEAS re-initializes.
                       ELFINI:
125752 / 747200,,140000          CONO  D11,140000             ;;Make sure no interrupts can happen.
152135 / 004060,,400000           XWD DOIT+SCHN,SETADR        ;
125753 / 200040,,152135          MOVE  TAC,152135             ;;Set up the USET words to the
125754 / 202046,,000013         MOVEM  TAC,  USIN(DDB)        ;;default mode.
152143 / 006060,,400000           XWD WRITE+DOIT+SCHN,SETADR  ;
125755 / 200040,,152143          MOVE  TAC,152143             ;
125756 / 202046,,000012         MOVEM  TAC, USOUT(DDB)        ;
125757 / 263140,,000000          POPJ    P,                   ;
                       ELFCLS:
125760 / 747200,,010060          CONO  D11,010060             ;;MTAPE 4 turns off GRAB mode.
125761 / 747240,,000010          CONI  D11,000010             ;;(used to be CLOSE until JBR
125762 / 620400,,001000           TRZ  TEM,001000             ;;found a problem with that).
125763 / 201000,,000200         MOVEI         200             ;
125764 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
125765 / 254000,,037401          JRST      CPOPJ1             ;
                       ;Special interrupt - error or IREQ
                       ELFINT:
125766 / 264000,,001035           JSR      001035             ;;Get some AC's
125767 / 201300,,022575         MOVEI  DDB,ELFDDB             ;
125770 / 200246,,000004          MOVE  DAT,DEVMOD(DDB)        ;
125771 / 602240,,200000          TRNE  DAT,200000             ;;Is the interface INITed?
125772 / 254000,,125775          JRST      ELFIN1             ;
125773 / 747200,,140000          CONO  D11,140000             ;;No.  Ignore the spurious interrupt,
125774 / 263140,,000000          POPJ    P,                   ;;fix it so it won't happen again.
                       ELFIN1:
125775 / 747246,,000011          CONI  D11,INTCNI(DDB)        ;
125776 / 747200,,040060          CONO  D11,040060             ;;clear the interrupt condition.
                       ;IFN CBOX
125777 / 263140,,000000          POPJ    P,                   ;
                       ;IFE DBG11
                       ;Hung timeout
                       ;CBOX
                       ELFHNG:
126000 / 263140,,000000          POPJ    P,                   ;
                       ;Dump-mode I/O: ELFDOU, ELFDIN
                       ELFDOU:
126001 / 623000,,000002          TLZE       IOBEG             ;
126002 / 260140,,125752         PUSHJ    P,ELFINI             ;
126003 / 200046,,000012          MOVE  TAC, USOUT(DDB)        ;
152502 / 200254,,000000          MOVE  DAT,      (UUO)        ;
126004 / 256200,,152502          XCTR   XR,152502             ;
126005 / 260140,,126202         PUSHJ    P,   WTB             ;
126006 / 255000,,000000          JFCL                         ;
126007 / 661400,,400000           TLO  TEM,SETADR             ;
126010 / 546406,,000012          HLRM  TEM, USOUT(DDB)        ;
126011 / 254000,,126042          JRST      SETIOS             ;
                       ELFDIN:
126012 / 623000,,000002          TLZE       IOBEG             ;
126013 / 260140,,125752         PUSHJ    P,ELFINI             ;
126014 / 200046,,000013          MOVE  TAC,  USIN(DDB)        ;
152502 / 200254,,000000          MOVE  DAT,      (UUO)        ;
126015 / 256200,,152502          XCTR   XR,152502             ;
126016 / 260140,,126147         PUSHJ    P,   RDB             ;
126017 / 255000,,000000          JFCL                         ;
126020 / 661400,,400000           TLO  TEM,SETADR             ;
126021 / 546406,,000013          HLRM  TEM,  USIN(DDB)        ;
126022 / 254000,,126042          JRST      SETIOS             ;
                       ;MTAPE UUO calling sequence and dispatch, SETIOS routine.
                       ;Dispatch table
126023 / 000000,,126115                                       ;
126024 / 000000,,126107                                       ;
126025 / 000000,,126215                                       ;
126026 / 000000,,125760                                       ;
                       ELFMTA:
126027 / 623000,,000002          TLZE       IOBEG             ;
126030 / 260140,,125752         PUSHJ    P,ELFINI             ;
152467 / 200114,,000000          MOVE TAC1,      (UUO)        ;
126031 / 256200,,152467          XCTR   XR,152467             ;;Get the code word,
153050 / 000000,,000002                                       ;
153050 / 331100,,000002 POINT 9,00000002,8                    ;
126032 / 135040,,153050           LDB  TAC,153050             ;;Pull out the function code.
151327 / 400000,,400000           XWD SETADR,SETADR           ;
126033 / 434100,,151327           IOR TAC1,151327             ;;fix it so SETCON does the right thing.
126034 / 301040,,000001          CAIL  TAC, MTMIN             ;
126035 / 303040,,000005         CAILE  TAC, MTMAX             ;
126036 / 254000,,043340          JRST      043340             ;;Out of bounds is an illegal UUO.
126037 / 260161,,126022         PUSHJ    P,@ MTTBL(TAC)       ;;Do your thing,
126040 / 304000,,000000          CAIA                         ;
126041 / 350003,,000000           AOS            (P)          ;
                       SETIOS:
126042 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;
126043 / 201000,,000000         MOVEI                         ;;Set up the resulting IOS bits...
152422 / 000000,,000010                                       ;
152422 / 160300,,000010 POINT 3,00000010,21                   ;
126044 / 135640,,152422           LDB  AC1,152422             ;;NXM, BUSTO
152412 / 000000,,000000                                       ;
152412 / 150300,,000000 POINT 3,00000000,22                   ;
126045 / 137640,,152412           DPB  AC1,152412             ;
126046 / 620400,,002000           TRZ  TEM,  DONE             ;
152331 / 000000,,000010                                       ;
152331 / 110500,,000010 POINT 5,00000010,26                   ;
126047 / 135640,,152331           LDB  AC1,152331             ;;PARBAD, BUSY, GRAB.
152305 / 000000,,000000                                       ;
152305 / 070500,,000000 POINT 5,00000000,28                   ;
126050 / 137640,,152305           DPB  AC1,152305             ;
126051 / 602400,,354000          TRNE  TEM,354000             ;
126052 / 660000,,200000           TRO      200000             ;;OR the bad ones into IODERR.
126053 / 437006,,000002          IORB      DEVIOS(DDB)        ;
126054 / 263140,,000000          POPJ    P,                   ;
                       ;USETI, USETO, UGETF UUO's
                       ELFGTF:
126055 / 623000,,000002          TLZE       IOBEG             ;
126056 / 260140,,125751         PUSHJ    P,ELFIN0             ;
126057 / 200046,,000013          MOVE  TAC,  USIN(DDB)        ;
126060 / 260140,,126062         PUSHJ    P,  GETF             ;
126061 / 200046,,000012          MOVE  TAC, USOUT(DDB)        ;
                       GETF:
153010 / 000000,,000001                                       ;
153010 / 300400,,000001 POINT 4,00000001,11                   ;
126062 / 135100,,153010           LDB TAC1,153010             ;
126063 / 603040,,020000          TLNE  TAC,IGNPAR             ;
126064 / 660100,,000020           TRO TAC1,    20             ;
126065 / 204100,,000002          MOVS TAC1,  TAC1             ;
126066 / 661100,,400000           TLO TAC1,400000             ;
126067 / 540100,,000001           HRR TAC1,   TAC             ;
152567 / 202114,,000000         MOVEM TAC1,      (UUO)        ;
126070 / 256040,,152567          XCTR   XW,152567             ;
126071 / 350000,,000014           AOS         UUO             ;
126072 / 263140,,000000          POPJ    P,                   ;
                       ELFUSI:
126073 / 623000,,000002          TLZE       IOBEG             ;
126074 / 260140,,125751         PUSHJ    P,ELFIN0             ;
126075 / 200046,,000013          MOVE  TAC,  USIN(DDB)        ;
126076 / 260140,,126320         PUSHJ    P,  USET             ;
126077 / 202046,,000013         MOVEM  TAC,  USIN(DDB)        ;
126100 / 263140,,000000          POPJ    P,                   ;
                       ELFUSO:
126101 / 623000,,000002          TLZE       IOBEG             ;
126102 / 260140,,125751         PUSHJ    P,ELFIN0             ;
126103 / 200046,,000012          MOVE  TAC, USOUT(DDB)        ;
126104 / 260140,,126320         PUSHJ    P,  USET             ;
126105 / 202046,,000012         MOVEM  TAC, USOUT(DDB)        ;
126106 / 263140,,000000          POPJ    P,                   ;
                       ;MTAPE's: INTWAI, PEEK
                       ;MTAPE opcode 0: INTWAIT.  If the elf has requested an interrupt,
                       ;do a PEEK CREG.  Otherwise:
                       ;If bits 30:35 of the instruction are 0, direct return with no errors indicated.
                       ;If bits 30:35 = 77, go into IOWQ until the elf interrupts, then PEEK CREG.
                       ;Other bit combinations: set the hung timer to that many seconds, go into
                       ;IOWQ until it interrupts or the time runs out.  If the interrupt happens,
                       ;do a PEEK CREG; if it times out, take the direct return with the HUNG DEVIOS
                       ;bit on.
                       ;IFN CBOX
                       ;Peek at one or two words in the 11's memory.
                       PEEK11:
126107 / 205040,,004060         MOVSI  TAC,004060             ;;Set up the CONO.
126110 / 260140,,126321         PUSHJ    P,SETCON             ;
126111 / 260140,,126173         PUSHJ    P,126173             ;;Read one word in the specified mode.
126112 / 263140,,000000          POPJ    P,                   ;;Error return.
152574 / 202254,,000001         MOVEM  DAT,     1(UUO)        ;
126113 / 256040,,152574          XCTR   XW,152574             ;;Success.  Give it to the user.
126114 / 254000,,037401          JRST      CPOPJ1             ;
                       ;MTAPE FILL
                       ;Fill a block with a constant
                       FILL11:
126115 / 621100,,000003           TLZ TAC1,000003             ;;Packing mode 0 (ONEWD)
126116 / 205040,,006060         MOVSI  TAC,006060             ;;Set up the initial CONO.
126117 / 260140,,126321         PUSHJ    P,SETCON             ;
152503 / 200254,,000001          MOVE  DAT,     1(UUO)        ;
126120 / 256200,,152503          XCTR   XR,152503             ;;LH(DAT)=# of words, RH=thing to fill with.
151647 / 777766,,126132           XWD -NTRY,FILLR             ;
126121 / 200700,,151647          MOVE  AC2,151647             ;;Set up the retry address.
                       FILL0:
126122 / 554100,,000005          HLRZ TAC1,   DAT             ;
126123 / 322100,,037401         JUMPE TAC1,CPOPJ1             ;
                       FILL1:
126124 / 260140,,126314         PUSHJ    P,126314             ;;Start the interface in write mode.
                       FILL2:
126125 / 747340,,002000         CONSO  D11,  DONE             ;
126126 / 265640,,126263           JSP  AC1, WDONE             ;
126127 / 747140,,000005         DATAO  D11,000005             ;;When ready, write the data.
126130 / 367100,,126125          SOJG TAC1,126125             ;;Repeat until the block is filled.
126131 / 254000,,126224          JRST      126224             ;;End just like any write.
                       FILLR:
126132 / 340100,,000000           AOJ TAC1,                   ;;Retry needed.  Back up the count.
126133 / 204100,,000002          MOVS TAC1,  TAC1             ;
126134 / 540100,,000005           HRR TAC1,   DAT             ;
126135 / 316240,,000002          CAMN  DAT,000002             ;;Did any data go through successfully?
126136 / 254000,,126122          JRST       FILL0             ;
126137 / 274100,,000005           SUB TAC1,000005             ;;Yes.  Update the count of words
126140 / 270240,,000002           ADD  DAT,000002             ;;remaining,
126141 / 210100,,000002          MOVN TAC1,  TAC1             ;
126142 / 204100,,000002          MOVS TAC1,  TAC1             ;
126143 / 270100,,000001           ADD TAC1,000001             ;;move the bus address up to the one
126144 / 660100,,400000           TRO TAC1,400000             ;;that failed.
126145 / 540040,,000002           HRR  TAC,  TAC1             ;
126146 / 254000,,126122          JRST       FILL0             ;
                       ;Funny MTAPE functions: EXAMINE, DEPOSIT, REG EXAM, REG DEP, PROGRAM START
                       ;IFN CBOX
                       ;Read routines: RDB, RDW
                       ;Read a block.  Enter with initial CONO bits in TAC, user IOWD in DAT.
                       ;Skips on success, returns final CONI in TEM whether or not the read succeeded.
                       RDB:
151650 / 777766,,126161           XWD -NTRY,RDBR              ;
126147 / 200700,,151650          MOVE  AC2,151650             ;;Retry address = RDBR.
151762 / 000001,,000000                                       ;
126150 / 270240,,151762           ADD  DAT,151762             ;;Bugger the word count by one
126151 / 260140,,126243         PUSHJ    P,126243             ;;(the last word takes special handling).
126152 / 325240,,126164        JUMPGE  DAT,126164             ;;If only one word, don't do BLKO's
                       RDB1:
126153 / 260140,,126314         PUSHJ    P,126314             ;;Start the operation.
                       RDB2:
126154 / 747340,,002000         CONSO  D11,002000             ;;Loop is CONSO, BLKI, JRST RDB2
126155 / 265640,,126263           JSP  AC1,126263             ;;as long as no errors happen.
126156 / 747000,,000005          BLKI  D11,   DAT             ;
126157 / 254000,,126165          JRST      126165             ;;Exit for last word.
126160 / 254000,,126154          JRST        RDB2             ;
                       RDBR:
126161 / 260140,,126227         PUSHJ    P,126227             ;;Retry in middle of block - update
126162 / 254000,,126153          JRST      126153             ;;starting addresses.
                       RDBER:
126163 / 260140,,126227         PUSHJ    P,126227             ;;Retry on last word -
                       RDBONE:
126164 / 260140,,126314         PUSHJ    P,126314             ;;restart the transfer.
                       RDBE:
126165 / 541700,,126163          HRRI  AC2,126163             ;;Last word: change retry address.
126166 / 265640,,126263           JSP  AC1,126263             ;;wait for the read to finish,
126167 / 747240,,000010          CONI  D11,000010             ;;get the resulting status,
126170 / 747200,,400000          CONO  D11,400000             ;;then set the bus adr to 0.
126171 / 747045,,000001         DATAI  D11,     1(DAT)        ;;Read the data.
126172 / 254000,,037401          JRST      CPOPJ1             ;
                       ;The DATAI makes the interface take another sequential read cycle and hang with
                       ;DONE on waiting for another DATAI.  Thus it stays active, and if GRAB is set
                       ;the bus stays grabbed.  We get the status in before the last DATAI for that
                       ;reason, and set the address to 0 to minimize the chance of errors in the dummy
                       ;cycle.
                       ;Read one word.  Enter with the CONO bits in TAC.  Returns the word read in DAT.
                       ;Skips on success, returns final CONI in TEM whether or not the read succeeded.
                       RDW:
151651 / 777766,,126174           XWD -NTRY,.+1               ;
126173 / 200700,,151651          MOVE  AC2,151651             ;;Set up retry address and count.
126174 / 260140,,126314         PUSHJ    P,126314             ;;Start the read,
126175 / 265640,,126263           JSP  AC1,126263             ;;wait for it.
126176 / 747240,,000010          CONI  D11,000010             ;;Same kind of terminal messing around
126177 / 747200,,400000          CONO  D11,400000             ;;as at RDBE, for the same reason.
126200 / 747040,,000005         DATAI  D11,   DAT             ;
126201 / 254000,,037401          JRST      CPOPJ1             ;
                       ;Write routines: WTB, WTW, POKE11
                       ;Write a block.  Same sequence as RDB.
                       WTB:
151652 / 777766,,126212           XWD -NTRY,WTBR              ;
126202 / 200700,,151652          MOVE  AC2,151652             ;;Retry address = WTBR.
126203 / 260140,,126243         PUSHJ    P,126243             ;;Get relocated IOWD.
                       WTB1:
126204 / 260140,,126314         PUSHJ    P,126314             ;;Start the operation.
                       WTB2:
126205 / 747340,,002000         CONSO  D11,002000             ;;If we're lucky, the loop
126206 / 265640,,126263           JSP  AC1,126263             ;;takes three instructions
126207 / 747100,,000005          BLKO  D11,000005             ;;(CONSO, BLKO, JRST).
126210 / 254000,,126224          JRST      126224             ;;Ends like any other write.
126211 / 254000,,126205          JRST        WTB2             ;
                       WTBR:
151763 / 000001,,000001                                       ;
126212 / 274240,,151763           SUB  DAT,151763             ;;Retry needed - back up the IOWD
126213 / 260140,,126227         PUSHJ    P,126227             ;;to the address that failed,
126214 / 254000,,126204          JRST      126204             ;;update the starting address.
                       ;Change one or two words (POKE UUO).
                       POKE11:
126215 / 205040,,006060         MOVSI  TAC,006060             ;;Set up the CONO.
126216 / 260140,,126321         PUSHJ    P,SETCON             ;
152503 / 200254,,000001          MOVE  DAT,     1(UUO)        ;
126217 / 256200,,152503          XCTR   XR,152503             ;;Get the data to poke him with,
                       ;Write one word.  Enter with CONO in TAC, word to send in DAT.
                       ;Same return convention as WTB.
                       WTW:
151653 / 777766,,126221           XWD -NTRY,.+1               ;
126220 / 200700,,151653          MOVE  AC2,151653             ;;Retry loc and counter.
126221 / 260140,,126314         PUSHJ    P,126314             ;;Start the write, then
126222 / 265640,,126263           JSP  AC1,126263             ;;when the interface is ready,
126223 / 747140,,000005         DATAO  D11,000005             ;;send the data.
                       WTBE:
126224 / 265640,,126263           JSP  AC1,126263             ;;Wait for it to finish and
126225 / 747240,,000010          CONI  D11,000010             ;;return the resulting CONI.
126226 / 254000,,037401          JRST      CPOPJ1             ;
                       ;Common subroutines for RDB and WTB: RELIOW, UPDADR
                       ;Common routine for updating the bus address for RDB and WTB in case of
                       ;a retry in the middle of a block.  This routine will not work if a block
                       ;wraps around core, but that should never happen.
                       UPDADR:
126227 / 274240,,000002           SUB  DAT,000002             ;;How many words were sent before the error?
126230 / 322240,,126237         JUMPE  DAT,126237             ;;None means bypass a lot of screwing around.
126231 / 505700,,777766          HRLI  AC2,777766             ;;Otherwise, reset the retry counter.
126232 / 272246,,000014          ADDM  DAT, UIOWD(DDB)        ;;Update the user's IOWD.
126233 / 550740,,000005          HRRZ  AC3,000005             ;;Now for the Unibus address...
126234 / 603040,,000300          TLNE  TAC,000300             ;;in all modes except 0,
126235 / 242740,,000001           LSH  AC3,000001             ;;2 PDP-11 words per word.
126236 / 270040,,000017           ADD  TAC,   AC3             ;
                       UPDAD2:
126237 / 270240,,000002           ADD  DAT,000002             ;;Get back the resultant IOWD.
126240 / 607400,,100000          TLNN  TEM,100000             ;;If we were asleep from a Unibus INIT,
126241 / 263140,,000000          POPJ    P,                   ;
126242 / 334246,,000014         SKIPA  DAT, UIOWD(DDB)        ;;pick up the user's IOWD and relocate it.
                       ;Relocate a user IOWD in DAT.  Sets up TAC1 and UIOWD(DDB) in case of retry.
                       RELIOW:
126243 / 202246,,000014         MOVEM  DAT, UIOWD(DDB)        ;;Save the user's IOWD.
126244 / 201105,,000001         MOVEI TAC1,     1(DAT)        ;;The first location involved...
126245 / 260140,,072703         PUSHJ    P,072703             ;;relocate it. (Clobbers AC1)
126246 / 254000,,043217          JRST      043217             ;;Oops.
126247 / 607040,,002000          TLNN  TAC, WRITE             ;
126250 / 321100,,043217         JUMPL TAC1,043217             ;;Check for write protection.
126251 / 541242,,777777          HRRI  DAT,777777(TAC1)       ;;Here's the relocated base address.
126252 / 574100,,000005          HLRE TAC1,000005             ;;Now compute the ending address.
126253 / 214100,,000002          MOVM TAC1,  TAC1             ;
126254 / 270106,,000014           ADD TAC1, UIOWD(DDB)        ;;User's ending address
126255 / 607040,,002000          TLNN  TAC,002000             ;;If reading,
126256 / 271100,,000001          ADDI TAC1,000001             ;;unbugger the word count.
126257 / 260140,,072762         PUSHJ    P,072762             ;;Check that address. (uses ac1)
126260 / 254000,,043217          JRST      UADRER             ;
126261 / 200100,,000005          MOVE TAC1,000005             ;;All happy.  Save the resulting IOWD.
126262 / 263140,,000000          POPJ    P,                   ;
                       ;Common routines: WDONE, DOCON
                       ;Wait, error check, and retry routine.  Called with JSP AC1,WDONE
                       WDONE:
126263 / 747300,,002000         CONSZ  D11,002000             ;;If this bit is on,
126264 / 254015,,000000          JRST            (AC1)        ;;everything is happy.
126265 / 201740,,000012         MOVEI  AC3,000012             ;;We're going to delay a little while...
                       WDONE1:
126266 / 747240,,000010          CONI  D11,   TEM             ;
126267 / 606400,,004000          TRNN  TEM,004000             ;;Until either BUSY goes off
126270 / 254000,,126274          JRST      WDONE2             ;
126271 / 367740,,126266          SOJG  AC3,126266             ;;or the time runs out.
126272 / 747200,,150000          CONO  D11,150000             ;;It ran out.  Unhang the interface
126273 / 254000,,126307          JRST      126307             ;;and retry.
                       WDONE2:
126274 / 602400,,002000          TRNE  TEM,002000             ;;BUSY went off.  If DONE is on, we're OK.
126275 / 254015,,000000          JRST            (AC1)        ;;Otherwise, an interrupt happened.
126276 / 200406,,000011          MOVE  TEM,INTCNI(DDB)        ;
                       ;Get the bits that caused the interrupt.
                       ;we get a free retry.
126277 / 602400,,040000          TRNE  TEM, BUSTO             ;
126300 / 254000,,126311          JRST      WDONE5             ;
126301 / 602400,,100000          TRNE  TEM, NXM11             ;
126302 / 602000,,000100          TRNE       NOTRY             ;
                       WDONE3:
126303 / 263140,,000000          POPJ    P,                   ;
126304 / 360700,,000000           SOJ  AC2,                   ;
126305 / 252700,,126303         AOBJP  AC2,WDONE3             ;
126306 / 254000,,126331          JRST        DLAY             ;
                       WDONE4:
126307 / 602000,,000100          TRNE       NOTRY             ;
126310 / 263140,,000000          POPJ    P,                   ;
                       WDONE5:
126311 / 360700,,000000           SOJ  AC2,                   ;
126312 / 253716,,000001         AOBJN  AC2,     1(AC2)        ;
126313 / 263140,,000000          POPJ    P,                   ;
                       ;This little routine does the CONO's to start a data transfer.
                       DOCON:
126314 / 747201,,000000          CONO  D11,      (TAC)        ;;Set the bus address from RH(TAC),
126315 / 544640,,000001           HLR  AC1,   TAC             ;
                       ;Don't enable PI's if debugging
126316 / 747215,,000000          CONO  D11,      (AC1)        ;;Start the operation from LH(TAC).
126317 / 263140,,000000          POPJ    P,                   ;
                       ;	USET,SETCON, DLAY
                       ;Common routine for USET's
                       USET:
152467 / 200114,,000000          MOVE TAC1,      (UUO)        ;
126320 / 256200,,152467          XCTR   XR,152467             ;;Falls into SETCON.
                       ;Routine to set the CONO and address bits, as for USETI
                       ;TAC contains old combination, TAC1 the changes.
                       SETCON:
126321 / 325100,,126326        JUMPGE TAC1, SETC1             ;
126322 / 554640,,000002          HLRZ  AC1,  TAC1             ;
153010 / 000000,,000001                                       ;
153010 / 300400,,000001 POINT 4,00000001,11                   ;
126323 / 137640,,153010           DPB  AC1,153010             ;
126324 / 602640,,000020          TRNE  AC1,    20             ;
126325 / 661040,,020000           TLO  TAC,IGNPAR             ;
                       SETC1:
126326 / 602100,,400000          TRNE TAC1,400000             ;
126327 / 540040,,000002           HRR  TAC,  TAC1             ;
126330 / 263140,,000000          POPJ    P,                   ;
                       ;Delay for one clock tick.  Call with JSP AC2,DLAY.  Clobbers AC1 and AC3.
                       DLAY:
                       ;IFN DBG11
126331 / 261140,,000001          PUSH    P,   TAC             ;
126332 / 261140,,000002          PUSH    P,  TAC1             ;
126333 / 261140,,000016          PUSH    P,   AC2             ;
126334 / 261140,,000010          PUSH    P,   TEM             ;
126335 / 201040,,000001         MOVEI  TAC,     1             ;
126336 / 260140,,060211         PUSHJ    P,SLEEPT             ;
126337 / 262140,,000010           POP    P,   TEM             ;
126340 / 262140,,000016           POP    P,   AC2             ;
126341 / 262140,,000002           POP    P,  TAC1             ;
126342 / 262140,,000001           POP    P,   TAC             ;
                       ;IFE DBG11
126343 / 254016,,000000          JRST            (AC2)        ;
126344 /                 ;::    BEND STANFO.ELFSER.
                       ;IFN ELFNUM
126344 /               ;: ELFSER[J17,SYS] EOF.
126344 /               ;: DPYSER[J17,SYS]
126344 /                 ;::   BEGIN STANFO.DPYSER.
                       ;; NOW SOME DISPLAY OPCODES AND MACROS FOR GENERATING DP INSTRS.
                       ; BYTE POINTERS INTO BITS THAT SAY SIZE SET BY USER OR UUO
                       SIZSBU:
126344 / 000006,,000032                                       ;
126344 / 430106,,000032 POINT 1,06000032,0                    ;
                       ; IF 1, SAYS LINES/GLITCH OR GLITCHES/PAGE SET BY USER LAST
                       POSSBU:
126345 / 000006,,000032                                       ;
126345 / 420106,,000032 POINT 1,06000032,1                    ;
                       ; SAYS Y-POS. SET BY USER COMMAND (RATHER THAN UUO)
                       LHCSBU:
126346 / 000006,,000032                                       ;
126346 / 410106,,000032 POINT 1,06000032,2                    ;
                       ; SAME FOR LINE HOLD COUNT
                       GHCSBU:
126347 / 000006,,000032                                       ;
126347 / 400106,,000032 POINT 1,06000032,3                    ;
                       ; SAME FOR GLITCH HOLD COUNT
                       HLINES:
126350 / 000006,,000032                                       ;
126350 / 221106,,000032 POINT 9,06000032,17                   ;
                       ; POINTS TO NUMBER OF LINES BEFORE HOLDING
                       HGLTCH:
126351 / 000006,,000032                                       ;
126351 / 111106,,000032 POINT 9,06000032,26                   ;
                       ; POINTS TO NUMBER OF GLITCHES BEFORE HOLDING
                       ;	POINT 9,GWORD(DDB),35	; CHAR WHICH ACTIVATED LINED
                       ; NORMAL VALUES FOR THE PAGE PRINTER
                       DWPINI:
126352 / 201640,,000002         MOVEI  AC1,000002             ;;INITIALIZE COMMON DD CURSOR BUFFER
126353 / 202640,,014162         MOVEM  AC1,014162             ;;BY PROPAGATING A ZERO GRAPHICS WORD DOWN IT
152161 / 014162,,014163           XWD DDCURS+2,DDCURS+3       ;
126354 / 200640,,152161          MOVE  AC1,152161             ;
126355 / 251640,,014201           BLT  AC1,014201             ;;ALL THE WAY (TOO BAD THAT SOME PEOPLE CAN'T COUNT)
126356 / 201040,,000006         MOVEI  TAC,DPYNUM             ;
126357 / 202040,,012716         MOVEM  TAC,012716             ;;INIT. PTR. TO NEXT DPY TO RUN.
126360 / 525040,,377777         HRLOI  TAC,377777             ;
126361 / 202040,,014130         MOVEM  TAC, DDCNT             ;
126362 / 402000,,014116         SETZM      014116             ;;CLEAR FS WAIT LIST.
126363 / 402000,,014117         SETZM      014117             ;;AND THE WAIT LIST WAIT LIST.
126364 / 402000,,014127         SETZM      014127             ;; CLEAR ALL THE DATA DISK FLAGS
126365 / 402000,,014262         SETZM       DDRUN             ;
126366 / 402000,,012555         SETZM      012555             ;; ZERO OUT ALL THE IMPORTANT TABLES
152156 / 012555,,012556           XWD STRTBL,STRTBL+1         ;
126367 / 200040,,152156          MOVE  TAC,152156             ;
126370 / 251040,,012706           BLT  TAC,012706             ;
126371 / 476000,,012715         SETOM      012715             ;;START DP ON FIRST CLOCK TICK.
152136 / 000000,,013023                                       ;
152136 / 004400,,013023 POINT 36,00013023,35                  ;
126372 / 200040,,152136          MOVE  TAC,152136             ;
126373 / 202040,,013624         MOVEM  TAC,013624             ;;INIT. CLOCK QUEUE PTR.
151634 / 777700,,012721          IOWD LCPDL,CLKPD             ;
126374 / 200040,,151634          MOVE  TAC,151634             ;;..ALSO CLOCK PDL.
126375 / 202040,,012721         MOVEM  TAC,DPYPDL             ;
126376 / 205040,,770000         MOVSI  TAC,770000             ;; RESTORE AVAILABLE MESSAGES
126377 / 502040,,014273          HLLM  TAC,014273             ;
126400 / 502040,,014500          HLLM  TAC,014500             ;; SYSTEM WHO LINE FOR ALL AVAILABLE IIIS
126401 / 205040,,000077         MOVSI  TAC,000077             ;; DESELECT EVERYONE
126402 / 502040,,014431          HLLM  TAC,014431             ;; HOLDING MESSAGE TOO
                       ;GIVE INTERRUPT CHANNEL TO KEYBOARD SCANNER.
126403 / 751200,,000010          CONO  DDD,    10             ;
126404 / 260140,,135017         PUSHJ    P, DDINI             ;
126405 / 254000,,135634          JRST      WHOINI             ;
                       DWPERR:
126406 / 260140,,044066         PUSHJ    P,DISMES             ;
                       DPYATL:
126416 / 476000,,036035         SETOM      036035             ;
126417 / 260140,,043761         PUSHJ    P,043761             ;
126420 / 254000,,000365          JRST      000365             ;
                       ; THIS ROUTINE MAKES UP A PROGRAM HEADER AND LINE EDITOR BUFFER.
                       ; IT EXPECTS THE LINE NUMBER IN TAC1. PRESERVES ALL OTHER ACCUMULATORS.
                       ; SKIPS UPON SUCCESS. IF FAILURE, WILL PLANT A CLOCK REQUEST AND
                       ; TRY TO GET ONE LATER.
                       DPYMAK:
126421 / 332002,,012567         SKIPE      012567(TAC1)       ;; DO WE ALREADY HAVE A PROGRAM HEADER?
126422 / 254000,,037401          JRST      037401             ;; YES, GIVE SUCCESS RETURN
126423 / 261140,,000001          PUSH    P,   TAC             ;
126424 / 261140,,000005          PUSH    P,   DAT             ;
126425 / 261140,,000006          PUSH    P,   DDB             ;
126426 / 261140,,000015          PUSH    P,   AC1             ;
126427 / 261140,,000016          PUSH    P,   AC2             ;
126430 / 261140,,000017          PUSH    P,   AC3             ;
126431 / 211040,,000001         MOVNI  TAC,     1             ;
126432 / 500102,,017717           HLL TAC1,LINTAB(TAC1)       ;
126433 / 607100,,020000          TLNN TAC1,DDDLIN             ;
126434 / 254000,,126441          JRST       DPYM1             ;
126435 / 205042,,400052         MOVSI  TAC,400052(TAC1)       ;
126436 / 260140,,135252         PUSHJ    P,135252             ;;FIRST MAKE SURE WE HAVE A CHANNEL FOR DD
126437 / 254000,,126575          JRST      126575             ;;GO DIRECTLY TO JAIL
126440 / 405040,,777777          ANDI  TAC,777777             ;
                       DPYM1:
126441 / 201740,,022525         MOVEI  AC3,  DHFS             ;
126442 / 260140,,074554         PUSHJ    P,SFSGET             ;
126443 / 254000,,126617          JRST       DPYM8             ;
126444 / 550300,,000015          HRRZ  DDB,   AC1             ;
126445 / 402015,,000000         SETZM            (AC1)        ;; FIRST, ZERO THE THING OUT
126446 / 514700,,000015          HRLZ  AC2,   AC1             ;
126447 / 541715,,000001          HRRI  AC2,     1(AC1)        ;
126450 / 200740,,000015          MOVE  AC3,   AC1             ;
126451 / 251717,,000146           BLT  AC2,000146(AC3)        ;
126452 / 201700,,000074         MOVEI  AC2,000074             ;; NOW SET UP THE STARTUP WORD TO RESTORE THE POSITION VECTOR
126453 / 505715,,000004          HRLI  AC2,PRGSAV(AC1)        ;; THAT WAS STORED LAST TIME THE DPY WAS STOPPED
126454 / 202715,,000000         MOVEM  AC2,      (AC1)        ;
126455 / 505715,,000036          HRLI  AC2,000036(AC1)        ;; THE LINE EDITOR DOES THIS TOO
126456 / 202715,,000043         MOVEM  AC2,000043(AC1)        ;
126457 / 402015,,000035         SETZM         LEB(AC1)        ;
126460 / 505715,,000035          HRLI  AC2,   LEB(AC1)        ;; SET UP THE LINE EDITOR CALL
126461 / 541700,,000004          HRRI  AC2,DISJMS             ;
126462 / 202715,,000010         MOVEM  AC2, LEJMS(AC1)        ;
126463 / 541700,,000020          HRRI  AC2,000020             ;; FILL UP THE LINE EDITOR BUFFER WITH RETURN JUMPS
126464 / 202715,,000045         MOVEM  AC2, LEBUF(AC1)        ;
126465 / 505715,,000005          HRLI  AC2,000005(AC1)        ;; MAKE RESTART POINT JUMP BACK TO WHO LINE CALL
126466 / 202715,,000014         MOVEM  AC2, RTJMP(AC1)        ;
126467 / 505715,,000045          HRLI  AC2, LEBUF(AC1)        ;; NOW BLT THE RETURN JUMP ALL OVER THE
126470 / 541715,,000046          HRRI  AC2,000046(AC1)        ;; LINE EDITOR BUFFER.
126471 / 251715,,000104           BLT  AC2,000104(AC1)        ;
126472 / 205741,,000000         MOVSI  AC3,      (TAC)        ;
126473 / 541742,,777760          HRRI  AC3,777760(TAC1)       ;
126474 / 202746,,000015         MOVEM  AC3,PRGNUM(DDB)        ;
126475 / 260140,,127200         PUSHJ    P,127200             ;;GET PAGE PRINTER SET UP FOR EACH DPY.
126476 / 254000,,126616          JRST       DPYM7             ;
126477 / 260140,,126623         PUSHJ    P, PPSET             ;
126500 / 325040,,126632        JUMPGE  TAC, DPYM2             ;
126501 / 211742,,777760         MOVNI  AC3,777760(TAC1)       ;
126502 / 200700,,152030          MOVE  AC2,152030             ;
126503 / 202706,,000001         MOVEM  AC2, PSELC(DDB)        ;
126504 / 205700,,400040         MOVSI  AC2,400040             ;; NOW MAKE UP SELECT WORD
126505 / 242717,,000000           LSH  AC2,      (AC3)        ;; PUT A BIT IN THE FIRST TWO 12-BIT FIELDS
152027 / 000077,,770000                                       ;
126506 / 430700,,152027           XOR  AC2,152027             ;; COMPLEMENT THE SECOND FIELD
126507 / 435700,,000010           ORI  AC2,DISSEL             ;
126510 / 202706,,000002         MOVEM  AC2, PSELA(DDB)        ;; AND THIS IS OUR SELECT WORD
126511 / 202706,,000013         MOVEM  AC2, PSELB(DDB)        ;; AND OUR SPARE SELECT WORD
151610 / 770000,,000000                                       ;
126512 / 404700,,151610           AND  AC2,151610             ;; MASK OUT ALL BUT SELECT BIT
126513 / 412700,,014273        ANDCAM  AC2,014273             ;; DESELECT THIS CONSOLE FROM AVAILABLE MESSAGE
126514 / 412700,,014500        ANDCAM  AC2,014500             ;; DESELECT THIS CONSOLE FROM SYSTEM WHOLINE
126515 / 242700,,777764           LSH  AC2,777764             ;; PUT BIT IN 'RESET' FIELD
126516 / 436700,,014273           ORM  AC2,014273             ;; BE SURE TO RESET THIS CONSOLE TOO
126517 / 436700,,014500           ORM  AC2,014500             ;; BE SURE TO RESET THIS CONSOLE TOO
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
151615 / 777777,,777773                                       ;
151615 / 777777,,777764                                       ;
126520 / 200700,,151615          MOVE  AC2,151615             ;; MAKE A CURSOR FOR THE LINE EDITOR
126521 / 202706,,000040         MOVEM  AC2,000040(DDB)        ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
152123 / 000000,,000012                                       ;
152123 / 000000,,000000                                       ;
126522 / 200700,,152123          MOVE  AC2,152123             ;
126523 / 202706,,000041         MOVEM  AC2,000041(DDB)        ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
151614 / 777777,,777773                                       ;
151614 / 000000,,000014                                       ;
126524 / 200700,,151614          MOVE  AC2,151614             ;
126525 / 202706,,000042         MOVEM  AC2,000042(DDB)        ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
151727 / 000000,,000000                                       ;
151727 / 000000,,000000                                       ;
126526 / 200700,,151727          MOVE  AC2,151727             ;; NOW A NULL VECTOR FOR THE LEFT MARGIN
126527 / 202706,,000044         MOVEM  AC2,000044(DDB)        ;
                       ; MORE INITIALIZE CODE FOR A NEW PROGRAM-LINED-BUFFER THING
                       DPYM3:
126530 / 201706,,000101         MOVEI  AC2,000101(DDB)        ;
126531 / 202706,,000115         MOVEM  AC2, MAXPT(DDB)        ;; MAKE UP POINTER TO END OF LINE EDITOR BUFFER
126532 / 211640,,000275         MOVNI  AC1,000275             ;; 24000 WORDS MAXIMUM TOTAL PROGRAMS
126533 / 202646,,000016         MOVEM  AC1,BLKTOT(DDB)        ;;HOW MANY MORE BLOCKS EACH USER GETS.
126534 / 551042,,777760         HRRZI  TAC,777760(TAC1)       ;
126535 / 201640,,000014         MOVEI  AC1,DISNOP             ;
126536 / 202646,,000005         MOVEM  AC1,000005(DDB)        ;;NO WHO LINE YET.
126537 / 202646,,000007         MOVEM  AC1, LEPOS(DDB)        ;; NORMAL VERTICAL POSITION
126540 / 202646,,000011         MOVEM  AC1,PGCALL(DDB)        ;;NO PG'S.
126541 / 202646,,000037         MOVEM  AC1, LEPPV(DDB)        ;
126542 / 201640,,400000         MOVEI  AC1,400000             ;
126543 / 202646,,000021         MOVEM  AC1,PRGACT(DDB)        ;;P OF P 0 ACTIVE.
126544 / 202646,,000022         MOVEM  AC1,USRACT(DDB)        ;
126545 / 201640,,000003         MOVEI  AC1,000003             ;; BUMP NUMBER OF SPARE FREE BLOCKS
126546 / 272640,,022547          ADDM  AC1,022547             ;
126547 / 272640,,022511          ADDM  AC1,SPFSNT             ;
                       ; NOW SET UP THE POINTERS IN THE TABLES TO GET THE DP STARTED
                       ; AND STOPPED ON THIS PROGRAM
126550 / 504700,,000006           HRL  AC2,000006             ;; NOW INITIALIZE ALL THE APPROPRIATE TABLES
126551 / 541700,,000020          HRRI  AC2,000020             ;; THIS LITTLE JUMP GOES TO DPYTAB
126552 / 505746,,000003          HRLI  AC3,PRGSTP(DDB)        ;
126553 / 541740,,000004          HRRI  AC3,000004             ;; THIS LITTLE JUMP GOES TO STPTBL
126554 / 505646,,000013          HRLI  AC1, PSELB(DDB)        ;
126555 / 541640,,000020          HRRI  AC1,000020             ;; AND THIS LITTLE JUMP WENT WEE WEE WEE
126556 / 201241,,012607         MOVEI  DAT, LETAB(TAC)        ;;Give the header a pointer to
126557 / 202246,,000145         MOVEM  DAT,LETBPT(DDB)        ;; its LETAB entry.
126560 / 201246,,000002         MOVEI  DAT, PSELA(DDB)        ;
126561 / 700600,,000400          CONO   PI,000400             ;; ALL THE WAY INTO RSTTBL
126562 / 332001,,012607         SKIPE       LETAB(TAC)        ;; DID SOMEONE SNEAK IN UNDER US?
126563 / 254000,,126604          JRST       DPYM5             ;
126564 / 552301,,012607         HRRZM  DDB, LETAB(TAC)        ;; INITIALIZE LINE EDITOR TABLE TOO
126565 / 700600,,000200          CONO   PI,  PION             ;
126566 / 301040,,000006          CAIL  TAC,DPYNUM             ;
126567 / 254000,,126574          JRST      126574             ;;THAT'S ALL FOR DD
126570 / 202241,,012573         MOVEM  DAT,SELTBL(TAC)        ;
126571 / 202741,,012564         MOVEM  AC3,STPTBL(TAC)        ;;IN THIS ORDER
126572 / 202641,,012601         MOVEM  AC1,RSTTBL(TAC)        ;;WE SHOULDN'T NEED
126573 / 202701,,012555         MOVEM  AC2,STRTBL(TAC)        ;;TO KEEP PI'S OFF
                       DPYXIT:
126574 / 350003,,777772           AOS      777772(P)          ;;WE HAVE WON
                       DPYXTL:
126575 / 262140,,000017           POP    P,   AC3             ;
126576 / 262140,,000016           POP    P,   AC2             ;
126577 / 262140,,000015           POP    P,   AC1             ;
126600 / 262140,,000006           POP    P,   DDB             ;
126601 / 262140,,000005           POP    P,   DAT             ;
126602 / 262140,,000001           POP    P,   TAC             ;
126603 / 263140,,000000          POPJ    P,                   ;
                       DPYM5:
126604 / 700600,,000200          CONO   PI,  PION             ;
126605 / 301040,,000006          CAIL  TAC,DPYNUM             ;
126606 / 254000,,126611          JRST       DPYM6             ;
126607 / 260140,,126762         PUSHJ    P,126762             ;;III - JUST RET FS
126610 / 254000,,126574          JRST      DPYXIT             ;
                       DPYM6:
126611 / 552306,,000025         HRRZM  DDB,DPRLSF(DDB)        ;;DD - DEFER FS RET FOR DDWIPE
126612 / 205042,,000052         MOVSI  TAC,000052(TAC1)       ;
126613 / 544046,,000015           HLR  TAC,PRGNUM(DDB)        ;
126614 / 260140,,135173         PUSHJ    P,135173             ;;BUT GIVE BACK CHNL NOW
126615 / 254000,,126574          JRST      DPYXIT             ;
                       DPYM7:
126616 / 260140,,127000         PUSHJ    P,127000             ;;RET HDR
                       DPYM8:
126617 / 321040,,126575         JUMPL  TAC,DPYXTL             ;
126620 / 505042,,000052          HRLI  TAC,000052(TAC1)       ;
126621 / 260140,,135173         PUSHJ    P,135173             ;;RELEASE DD CHNL
126622 / 254000,,126575          JRST      DPYXTL             ;
                       PPSET:
126623 / 552315,,000010         HRRZM  DDB,HEDPTR(AC1)        ;;MAKE PP0 CONT. BLK. POINT AT HEADER.
126624 / 505640,,000020          HRLI  AC1,000020             ;;ASSEMBLE JMP TO PP 0.
126625 / 206646,,000006         MOVSM  AC1,PPCALL(DDB)        ;;HAVE HEADER CALL THE PP.
126626 / 552646,,000017         HRRZM  AC1, CURPP(DDB)        ;;MAKE P OF P 0 THE CURRENT ONE.
126627 / 201746,,000007         MOVEI  AC3,000007(DDB)        ;;RETURN ADDR. TO HEADER FROM PP.
126630 / 506755,,000007          HRLM  AC3,PPRJMP(AC1)        ;;PUT IN PP RETURN JMP.
126631 / 263140,,000000          POPJ    P,                   ;
                       ;GETTING NEW DATA DISC CHANNEL. FIRST DESELECT AVAILABLE MSG,
                       ;THEN ERASE CHANNEL, THEN SELECT CONSOLE TO CHANNEL.
                       DPYM2:
126632 / 200700,,014570          MOVE  AC2,AVLBIT             ;
126633 / 505300,,126643          HRLI  DDB,DDWIPE             ;
126634 / 700600,,001004          CONO   PI,SCNOFF             ;
126635 / 413702,,014543        ANDCAB  AC2,014543(TAC1)       ;
126636 / 202706,,000041         MOVEM  AC2, VDTMP(DDB)        ;
126637 / 700600,,000400          CONO   PI, PIOFF             ;
126640 / 136300,,013624          IDPB  DDB,  CLKQ             ;
126641 / 700600,,002204          CONO   PI,002204             ;
126642 / 254000,,126530          JRST       DPYM3             ;
                       ;HERE AT CLOCK LEVEL (CAN'T CALL QBLOCK FROM CH5)
                       DDWIPE:
126643 / 332305,,000025         SKIPE  DDB,DPRLSF(DAT)        ;
126644 / 254000,,126762          JRST      126762             ;;DPYMAKE WAS ABORTED - RET FS NOW
126645 / 260140,,127323         PUSHJ    P,  GETQ             ;
126646 / 550705,,000017          HRRZ  AC2, CURPP(DAT)        ;
126647 / 271700,,000047          ADDI  AC2, PPENQ             ;
126650 / 202715,,000006         MOVEM  AC2,QCOUNT(AC1)        ;
126651 / 350016,,000000           AOS            (AC2)        ;;WILL HOLD UP BOTH DPLED & DPYTYP
126652 / 505240,,126655          HRLI  DAT, DDMAP             ;
126653 / 202255,,000005         MOVEM  DAT, QWAKE(AC1)        ;
126654 / 254000,,132757          JRST      LEERS3             ;
                       ;HERE AFTER ERASE IS FINISHED. NOW THAT CHANNEL IS CLEAN, WE LET HIM SEE IT.
                       DDMAP:
126655 / 554645,,000015          HLRZ  AC1,PRGNUM(DAT)        ;
126656 / 550045,,000015          HRRZ  TAC,PRGNUM(DAT)        ;
126657 / 275040,,000006          SUBI  TAC,DPYNUM             ;
126660 / 260140,,135375         PUSHJ    P,VDSTRB             ;
126661 / 436756,,000041          IORM  AC3, VDTMP(AC2)        ;
126662 / 260140,,135430         PUSHJ    P, VDOUT             ;
126663 / 201241,,000026         MOVEI  DAT,  DDL0(TAC)        ;
126664 / 254000,,132317          JRST      132317             ;;IN CASE PP XFER WAS FLUSHED
                       ; ENTER HERE AT CLOCK LEVEL WITH LINE NUMBER IN TAC TO
                       ; FLUSH A DPY BUFFER, IF THAT IS WHAT IS CALLED FOR.
                       DPYKIL:
126665 / 301040,,000100          CAIL  TAC,000100             ;
126666 / 254000,,127016          JRST      DPYKER             ;
126667 / 332641,,012607         SKIPE  AC1, LETAB(TAC)        ;
126670 / 402015,,000024         SETZM      LECLIN(AC1)        ;; CLEAR FLAG THAT SAYS CLOCK REQUEST IS IN
126671 / 336001,,032367         SKIPN      032367(TAC)        ;; FIRST, IS TTYSER THROUGH WITH IT?
126672 / 337641,,012607         SKIPG  AC1, LETAB(TAC)        ;
126673 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE IT AROUND
126674 / 332015,,000123         SKIPE       LEACT(AC1)        ;; HAS THE LINE EDITOR BEEN ACTIVE IN THE LAST MINUTE?
126675 / 254000,,127002          JRST      127002             ;; YES, WAIT ANOTHER MINUTE
126676 / 336015,,000113         SKIPN      LEENQ2(AC1)        ;; IF HE'S REFRESHING OR HELPING,
126677 / 332015,,000112         SKIPE       LEENQ(AC1)        ;; OR IF HIS LINE EDITOR IS IN THE QUEUE
126700 / 254000,,127004          JRST      127004             ;; PLANT ANOTHER CLOCK REQUEST TO KEEP US AROUND
126701 / 554715,,000006          HLRZ  AC2,PPCALL(AC1)        ;; OR IF HE HAS ANY PIECE OF PAPER QUEUED
                       DPYKI8:
126702 / 332016,,000047         SKIPE       PPENQ(AC2)        ;; ANYTHING IN QUEUE?
126703 / 254000,,127004          JRST      DPYKI7             ;
126704 / 550716,,000065          HRRZ  AC2,  LINK(AC2)        ;; PICK UP POINTER TO NEXT PIECE OF PAPTER CONTROL BLOCK
126705 / 326700,,126702         JUMPN  AC2,126702             ;; LOOP BACK IF ANY
126706 / 550300,,000015          HRRZ  DDB,   AC1             ;
126707 / 301040,,000006          CAIL  TAC,DPYNUM             ;
126710 / 505300,,400000          HRLI  DDB,400000             ;;SET DD FLAG
126711 / 260140,,132244         PUSHJ    P,132244             ;; CLEAR ANY AND ALL PIECES OF GLASS
126712 / 700600,,000400          CONO   PI, PIOFF             ;
126713 / 336001,,032367         SKIPN      032367(TAC)        ;; ONE LAST CHECK!
126714 / 337001,,012607         SKIPG       LETAB(TAC)        ;
126715 / 254000,,126760          JRST      DPYKI3             ;
126716 / 402001,,012607         SETZM       LETAB(TAC)        ;
126717 / 321300,,126723         JUMPL  DDB,DPYKL1             ;
126720 / 402001,,012601         SETZM      RSTTBL(TAC)        ;
126721 / 402001,,012564         SETZM      STPTBL(TAC)        ;
126722 / 402001,,012555         SETZM      STRTBL(TAC)        ;
                       DPYKL1:
126723 / 700600,,000200          CONO   PI,  PION             ;
126724 / 550700,,000006          HRRZ  AC2,   DDB             ;
126725 / 334200,,035266         SKIPA    J,JOBNM1             ;
                       DPYKML:
126726 / 402004,,013647         SETZM      013647(J)          ;;CLEAR GUY MAPPED TO US
126727 / 302724,,013646          CAIE  AC2,@DPYMAP(J)         ;
126730 / 367200,,126727          SOJG    J,126727             ;
126731 / 365200,,126726         SOJGE    J,DPYKML             ;
126732 / 260140,,126762         PUSHJ    P,126762             ;;GIVE ALL THE CORE BACK
126733 / 325300,,126747        JUMPGE  DDB,126747             ;;JUST DIDDLE SELECT FOR III
                       DPYK10:
126734 / 205041,,000072         MOVSI  TAC,000072(TAC)        ;
126735 / 544046,,000015           HLR  TAC,PRGNUM(DDB)        ;
126736 / 260140,,135173         PUSHJ    P, DDREL             ;
126737 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
152646 / 220600,,000001                                       ;
126740 / 135040,,152646           LDB  TAC,152646             ;
126741 / 260140,,135371         PUSHJ    P, VDBIT             ;
126742 / 413741,,014571        ANDCAB  AC3, VDMAP(TAC)        ;
126743 / 326740,,135430         JUMPN  AC3,135430             ;;FORGET AVAIL MSG IF SOMETHING ELSE ON SCREEN
126744 / 200740,,014570          MOVE  AC3,AVLBIT             ;
126745 / 436741,,014571          IORM  AC3, VDMAP(TAC)        ;
126746 / 254000,,135430          JRST       VDOUT             ;
                       DPYK11:
126747 / 213000,,000001         MOVNS         TAC             ;
126750 / 205640,,400000         MOVSI  AC1,400000             ;; PUT A BIT IN THE CONSOLE SELECT POSITION
126751 / 242641,,777764           LSH  AC1,777764(TAC)        ;; PUT IT IN THE RESET PART FIRST
126752 / 412640,,014273        ANDCAM  AC1,014273             ;; DON'T RESET US
126753 / 412640,,014500        ANDCAM  AC1,014500             ;; DON'T RESET US FOR WHOLINE EITHER
126754 / 242640,,000014           LSH  AC1,000014             ;; PUT IT IN THE SELECT POSITION
126755 / 436640,,014273           ORM  AC1,014273             ;; SELECT THIS CONSOLE
126756 / 436640,,014500           ORM  AC1,014500             ;; SELECT THIS CONSOLE FOR SYS WHO LINE
126757 / 263140,,000000          POPJ    P,                   ;; BYE NOW.
                       DPYKI3:
126760 / 700600,,000200          CONO   PI,  PION             ;
126761 / 263140,,000000          POPJ    P,                   ;
                       DPYKFS:
126762 / 211700,,000003         MOVNI  AC2,     3             ;
126763 / 201740,,022544         MOVEI  AC3, DPYFS             ;
126764 / 260140,,074663         PUSHJ    P,074663             ;;GIVE BACK SPARE TEXT BLOCKS
126765 / 554246,,000006          HLRZ  DAT,PPCALL(DDB)        ;
126766 / 322240,,127000         JUMPE  DAT,127000             ;;NO PAGE PRINTER
                       DPYKF1:
126767 / 200645,,000022          MOVE  AC1,FBLKPT(DAT)        ;
126770 / 260140,,131376         PUSHJ    P,131376             ;;RELEASE TEXT BLOCKS
126771 / 550645,,000036          HRRZ  AC1,   PTB(DAT)        ;
126772 / 322640,,126774         JUMPE  AC1,126774             ;
126773 / 260140,,074163         PUSHJ    P,074163             ;;& LINE POINTER TABLE
126774 / 200640,,000005          MOVE  AC1,   DAT             ;
126775 / 550245,,000065          HRRZ  DAT,  LINK(DAT)        ;;GET POINTER TO NEXT P. OF P.
126776 / 260140,,127314         PUSHJ    P,127314             ;;BECAUSE THIS ONE'S GOING AWAY
126777 / 326240,,126767         JUMPN  DAT,126767             ;;KEEP GOING IF MORE
                       DPYKF2:
127000 / 201646,,000000         MOVEI  AC1,      (DDB)        ;
127001 / 254000,,127314          JRST      127314             ;;NOW RETURN HEADER
                       ; WE GET HERE TO PLANT ANOTHER CLOCK REQUEST TO COME BACK
                       ; LATER TO TRY AND KILL THE DAMN THING.
                       DPYKI9:
127002 / 402015,,000123         SETZM       LEACT(AC1)        ;; CLEAR THE ACTIVE FLAG
127003 / 334740,,127026         SKIPA  AC3,DPYKRQ             ;
                       DPYKI7:
152345 / 126665,,000001           XWD DPYKILL,1               ;
127004 / 200740,,152345          MOVE  AC3,152345             ;
127005 / 474700,,000000          SETO  AC2,                   ;; SET FLAG SAYING THERE IS A CLOCK REQUEST IN
127006 / 250715,,000024          EXCH  AC2,LECLIN(AC1)        ;
127007 / 321700,,037403         JUMPL  AC2,037403             ;; IF THERE ALREADY IS A CLOCK REQUEST IN, DON'T BOTHER TO SET ANOTHER
127010 / 242040,,000014           LSH  TAC,000014             ;; SHIFT LINE NUMBER OVER TO DATA POSITION
127011 / 270040,,000017           ADD  TAC,000017             ;; HAVE US COME BACK HERE IN 1 TICK
127012 / 700600,,000400          CONO   PI, PIOFF             ;
127013 / 136053,,024117          IDPB  TAC, CLOCK(PID)        ;
127014 / 700600,,000200          CONO   PI,  PION             ;
127015 / 263140,,000000          POPJ    P,                   ;
                       ; THIS ROUTINE PRINTS AN ERROR MESSAGE WHEN THE GIVEN
                       ; LINE NUMBER IS ILLEGAL.
                       DPYKER:
127016 / 261140,,000001          PUSH    P,000001             ;; SAVE THE ILL NUMBER
127017 / 260140,,044120         PUSHJ    P,044120             ;; GIVE OUR ERROR MESSAGE
127020 / 000000,,154150                                       ;
127021 / 000103,,777777        OCTQQQ      777777(P)          ;
127022 / 000000,,152275                                       ;
127023 / 777777,,777777                                       ;
127024 / 262140,,000001           POP    P,   TAC             ;
127025 / 263140,,000000          POPJ    P,                   ;
                       DPYKRQ:
127026 / 126665,,001604                                       ;;TIME TO WAIT BEFORE KILLING CONSOLE
                       ; HERE ARE THE INTERRUPT ROUTINES FOR RUNNING THE DP.
                       DPYINT:
127027 /                 ;::   BEGIN STANFO.DPYSER.DPYINT.
127027 / 743340,,400000         CONSO   DP,400000             ;;IS IT REALLY STOPPED ?
127030 / 254520,,000616           JEN      @000616            ;;NO. 
127031 / 250040,,012716          EXCH  TAC,012716             ;;GET NO. OF DPY WHICH HAS BEEN ON.
127032 / 336001,,012564         SKIPN      STPTBL(TAC)        ;; STOP HIM HERE ONLY IF HE HAS A STOP TABLE
127033 / 254000,,127041          JRST      NOSTOP             ;
127034 / 743141,,012564         DATAO   DP,STPTBL(TAC)        ;;STOP DP AT RIGHT PRGM HEADER.
127035 / 202121,,012573         MOVEM TAC1,@SELTBL(TAC)       ;
127036 / 743240,,000002          CONI   DP,000002             ;;SAVE CURRENT SELECTION FOR NEXT TIME
127037 / 541100,,000010          HRRI TAC1,DISSEL             ;
127040 / 250121,,012573          EXCH TAC1,@SELTBL(TAC)       ;
                       NOSTOP:
127041 / 743300,,002400         CONSZ   DP,002400             ;; HIT A NON-EX MEM OR ERROR CHECK?
127042 / 254000,,127057          JRST      127057             ;; YES, PROCESS IT
                       L6:
127043 / 361040,,127155          SOJL  TAC,127155             ;;NEXT PRGM TO RUN. (6 PRGMS ALWAYS ARE RUNNING)
                       L5:
127044 / 743340,,400000         CONSO   DP,400000             ;;MAKE SURE HE FINISHED STOPPING
127045 / 254000,,127044          JRST          L5             ;
127046 / 332001,,012601         SKIPE      RSTTBL(TAC)        ;;DOES HE WANT TO START FROM THE FRONT ?
127047 / 254000,,127152          JRST      127152             ;;YES.
127050 / 336001,,012555         SKIPN      STRTBL(TAC)        ;; IS THERE A PROGRAM THERE?
127051 / 254000,,127173          JRST          L7             ;
127052 / 743141,,012555         DATAO   DP,STRTBL(TAC)        ;;NO.  START HIM AT NORMAL PLACE.
                       L3:
127053 / 250040,,012716          EXCH  TAC,012716             ;;PUT THINGS BACK.
127054 / 241000,,000044           ROT          44             ;
127055 / 743200,,741043          CONO   DP,741043             ;;START DP AND CLEAR MASKS.
127056 / 254520,,000616           JEN      @000616            ;;RETURN TO WHOMEVER.
                       ;HERE WE HAVE AND ERROR - - PRINT A MESSAGE AND CHECK THE SYSTEM!
                       DPERR:
127057 / 250140,,023516          EXCH    P,023516             ;; GET A STACK
127060 / 260140,,000316         PUSHJ    P,PUSHIT             ;
127061 / 201540,,000000         MOVEI  PID,                   ;
127062 / 202040,,012717         MOVEM  TAC,012717             ;;SAVE DP #
127063 / 743240,,012720          CONI   DP,012720             ;;GET SOME BITS
127064 / 260140,,044320         PUSHJ    P,044320             ;
127065 / 260140,,044120         PUSHJ    P,DISERR             ;
127066 / 000000,,153643                                       ;
127067 / 000140,,012720        LOCQQQ       DPCNI             ;
127070 / 000000,,153256                                       ;
127071 / 000140,,012717        LOCQQQ      SAVTAC             ;
127072 / 777777,,777777                                       ;
127073 / 200740,,012717          MOVE  AC3,SAVTAC             ;
127074 / 336757,,012564         SKIPN  AC3,STPTBL(AC3)        ;
127075 / 254000,,127125          JRST      NOADDR             ;
127076 / 557000,,000017         HLRZS         AC3             ;
127077 / 554757,,000000          HLRZ  AC3,      (AC3)        ;;GET MA
127100 / 260140,,044120         PUSHJ    P,DISERR             ;
127101 / 000000,,153300                                       ;
127102 / 000140,,000017        LOCQQQ         AC3             ;
127103 / 000000,,152275                                       ;
127104 / 777777,,777777                                       ;
127105 / 303740,,000001         CAILE  AC3,     1             ;
127106 / 313740,,022066         CAMLE  AC3,022066             ;;IS IT LEGAL?
127107 / 254000,,127121          JRST      ADDRCK             ;
127110 / 260140,,044120         PUSHJ    P,DISERR             ;
127111 / 000000,,153230                                       ;
127112 / 000117,,777776        OCTQQQ      777776(AC3)        ;
127113 / 000000,,153413                                       ;
127114 / 000117,,777777        OCTQQQ      777777(AC3)        ;
127115 / 000000,,153416                                       ;
127116 / 000117,,000000        OCTQQQ            (AC3)        ;
127117 / 777777,,777777                                       ;
127120 / 254000,,127125          JRST      NOADDR             ;
                       ADDRCK:
127121 / 260140,,044066         PUSHJ    P,DISMES             ;
                       NOADDR:
127125 / 260140,,044066         PUSHJ    P,DISMES             ;
127130 / 260140,,050113         PUSHJ    P,050113             ;;CHECK SYSTEM FOR CLOBBERING
127131 / 255000,,000000          JFCL                         ;
127132 / 255000,,000000          JFCL                         ;
127133 / 336000,,000500         SKIPN      000500             ;;DOES HE WANT TO LOOK AT IT?
127134 / 254000,,127140          JRST      127140             ;;NO
127135 / 476000,,036035         SETOM      036035             ;
127136 / 260140,,043761         PUSHJ    P,043761             ;;FORCE OUT THE REST
127137 / 260140,,000347         PUSHJ    P,000347             ;;AND CALL DDT
                       NODPLK:
127140 / 201040,,000005         MOVEI  TAC,000005             ;;RESTART ALL DISPLAYS
                       L8:
127141 / 336301,,012607         SKIPN  DDB, LETAB(TAC)        ;
127142 / 254000,,127146          JRST      127146             ;; IF NONE THERE, LOOP
127143 / 505306,,000013          HRLI  DDB, PSELB(DDB)        ;; ARRANGE TO RESTART AT TOP AGAIN
127144 / 541300,,000020          HRRI  DDB,DISJMP             ;
127145 / 202301,,012601         MOVEM  DDB,RSTTBL(TAC)        ;
                       L9:
127146 / 365040,,127141         SOJGE  TAC,127141             ;; GET THEM ALL!
127147 / 260140,,000341         PUSHJ    P, POPIT             ;
127150 / 250140,,023516          EXCH    P,023516             ;; AND WHATEVER WAS IN P
127151 / 254000,,127043          JRST      127043             ;; AND DO NEXT GUY
                       ; DP INTERRUPT CODE - RESTART PROGRAM, LOOP AROUND OF NEXT DPY, STOP DP, SET AVAILABLE MESSAGE
                       L2:
127152 / 743141,,012601         DATAO   DP,RSTTBL(TAC)        ;;START GUY AT BEGINNING OF HIS PRGM.
127153 / 402001,,012601         SETZM      RSTTBL(TAC)        ;;...THIS TIME ONLY.
127154 / 254000,,127053          JRST          L3             ;
                       L1:
127155 / 332000,,014430         SKIPE      014430             ;; HAS THE HOLDING MESSAGE GONE OUT YET?
127156 / 254000,,127162          JRST      127162             ;; YES, CONTINUE WITH OUR BUSINESS
127157 / 476000,,014430         SETOM      DPYHOL             ;
152165 / 014431,,000020           XWD DPYHLD,DISJMP           ;
127160 / 743140,,152165         DATAO   DP,152165             ;
127161 / 254000,,127053          JRST          L3             ;
                       L1A:
127162 / 402000,,014430         SETZM      DPYHOL             ;
127163 / 201040,,000005         MOVEI  TAC,000005             ;;WE'VE RUN `EM ALL.
127164 / 402000,,014271         SETZM      014271             ;; NOTE THAT THEY HAVE ALL BEEN RUN
127165 / 352000,,024060          AOSE      024060             ;;HAS CLOCK TICKED ?
127166 / 344040,,127170          AOJA  TAC,127170             ;;NO. IT'S NOT YET TIME TO START OVER.
127167 / 254000,,127044          JRST          L5             ;
                       L4:
127170 / 743200,,000000          CONO   DP,                   ;;SHUT DOWN THE DP.
127171 / 250040,,012716          EXCH  TAC,DRUNCT             ;
127172 / 254520,,000616           JEN      @DPYCHL            ;
                       L7:
127173 / 332000,,014271         SKIPE      014271             ;; HAS THE 'CONSOLE AVAILABLE' MESSAGE GONE OUT YET?
127174 / 254000,,127043          JRST      127043             ;; YES
127175 / 476000,,014271         SETOM      014271             ;; NO, IT WILL.
152162 / 014272,,000020           XWD DPYAVL,DISJMP           ;
127176 / 743140,,152162         DATAO   DP,152162             ;
127177 / 254000,,127053          JRST      127053             ;; GO START UP DP AND LEAVE
127200 /                 ;::    BEND STANFO.DPYSER.DPYINT.
                       ;PPINIT		PAGE PRINTER STUFF
                       PPINIT:
127200 / 260140,,127273         PUSHJ    P,127273             ;;GET A BLOCK OF FREE STORAGE.
127201 / 263140,,000000          POPJ    P,                   ;; NO FREE STORAGE, GIVE ERROR RETURN
127202 / 540740,,000016           HRR  AC3,000016             ;;MAKE BLT POINTER.
127203 / 550240,,000016          HRRZ  DAT,   AC2             ;
127204 / 505740,,127337          HRLI  AC3,PPMODL             ;
127205 / 251756,,000065           BLT  AC3,000065(AC2)        ;;INIT. THE CONTROL BLK. BY COPYING THE PROTOTYPE INTO IT.
127206 / 260140,,127273         PUSHJ    P,127273             ;;GET A BLOCK FOR FIRST PART OF PRGM.
127207 / 254000,,127271          JRST      127271             ;; NO FREE STORAGE, RELEASE PREVIOUS BLOCKS AND GIVE ERROR RETURN
127210 / 202705,,000020         MOVEM  AC2,CBLKPT(DAT)        ;;MAKE IT CURRENT BLOCK...
127211 / 202705,,000022         MOVEM  AC2,FBLKPT(DAT)        ;;.. AND FIRST BLOCK IN CORE...
127212 / 202705,,000021         MOVEM  AC2,TBLKPT(DAT)        ;;... AND TOP BLK BEING DISPLAYED.
127213 / 542705,,000015          HRRM  AC2, PPTR1(DAT)        ;;MAKE BYTE POINTER FOR TYPING POINT
127214 / 370005,,000015           SOS       PPTR1(DAT)        ;;ONE BEFORE BOTTOM OF BLOCK.
127215 / 506705,,000001          HRLM  AC2, TPJMP(DAT)        ;;FIX UP JMP TO PRGM IN CONT. BLK.
127216 / 505745,,000002          HRLI  AC3,000002(DAT)        ;;RETURN ADDR. FROM PRGM. TO CONT. BLK.
127217 / 541740,,000020          HRRI  AC3,DISJMP             ;
127220 / 202756,,000000         MOVEM  AC3,      (AC2)        ;;PUT RETURN JMP IN FIRST WORD OF PRGM.
127221 / 516256,,000065         HRLZM  DAT,  LINK(AC2)        ;;BACKWARD LINK OF PRGM. POINTS TO CONT. BL.K.
127222 / 402005,,000065         SETZM        LINK(DAT)        ;;ONLY ONE CONT. BLOCK.
127223 / 402005,,000044         SETZM        PPDD(DAT)        ;; ASSUME III UNTIL PROVEN OTHERWISE
127224 / 201740,,022532         MOVEI  AC3,022532             ;; GET SOME FREE STORAGE FOR THE
127225 / 260140,,074554         PUSHJ    P,074554             ;; LINE POINTER TABLE
127226 / 254000,,127267          JRST        PPI3             ;
127227 / 202645,,000036         MOVEM  AC1,   PTB(DAT)        ;; SAVE ADDRESS OF BEGINNING OF BLOCK
127230 / 271640,,000024          ADDI  AC1,000024             ;; BUMP ADDRESS TO VISIBLE SCREEN PART
127231 / 542645,,000035          HRRM  AC1,  PTRB(DAT)        ;
127232 / 200705,,000015          MOVE  AC2, PPTR1(DAT)        ;; INITIALIZE FIRST WORD OF POINTER TABLE
127233 / 270645,,000033           ADD  AC1,  VPOS(DAT)        ;; GET ADDRESS OF FIRST POINTER TO BE USED
127234 / 202715,,000000         MOVEM  AC2,      (AC1)        ;; TO POINT TO FIRST OF TEXT
127235 / 202715,,000001         MOVEM  AC2,     1(AC1)        ;; SAME FOR DD
127236 / 321040,,127265         JUMPL  TAC,127265             ;;DONE FOR III
127237 / 476005,,000044         SETOM        PPDD(DAT)        ;
127240 / 201640,,000011         MOVEI  AC1,000011             ;; SET NUMBER OF LINES IN A GLITCH TO 8
127241 / 202645,,000023         MOVEM  AC1,   DEL(DAT)        ;
127242 / 202645,,000024         MOVEM  AC1,DELCNT(DAT)        ;
127243 / 201640,,000004         MOVEI  AC1,000004             ;; AND NUMBER OF GLITCHES TO 4, SUCH THAT WE GET
127244 / 202645,,000026         MOVEM  AC1, PGSIZ(DAT)        ;; 32 LINES TO A SCREEN AND DON'T DO A WHOLE PAGE REFRESH TOO OFTEN
127245 / 202645,,000033         MOVEM  AC1,  VPOS(DAT)        ;
127246 / 202645,,000034         MOVEM  AC1,   LLW(DAT)        ;
127247 / 202645,,000043         MOVEM  AC1,   GLW(DAT)        ;
127250 / 402005,,000031         SETZM       DDSAV(DAT)        ;; CLEAR EXTRA SAVED WORDS
152337 / 000000,,000046                                       ;
152337 / 000000,,000000                                       ;
152337 / 000000,,000002                                       ;
152337 / 000000,,000001                                       ;
152337 / 000000,,000002                                       ;
152337 / 000000,,000003                                       ;
152337 / 114000,,021234                                       ;
127251 / 200640,,152337          MOVE  AC1,152337             ;
152677 / 000000,,000015                                       ;
152677 / 241000,,000015 POINT 8,00000015,15                   ;
127252 / 137040,,152677           DPB  TAC,152677             ;
127253 / 202645,,000004         MOVEM  AC1,  DDCW(DAT)        ;
127254 / 201700,,000124         MOVEI  AC2,000124             ;; SET OUR OWN LINE LENGTH
127255 / 202705,,000052         MOVEM  AC2,LNLNGT(DAT)        ;
127256 / 212705,,000013         MOVNM  AC2,DPHPOS(DAT)        ;; INITIALIZE THE HORIZONTAL POSITION COUNTER
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ;2 = 0 IF OMITTED.
                       ;SAME FOR 2.
151543 / 777777,,777001                                       ;
151543 / 000000,,000660                                       ;
127257 / 200640,,151543          MOVE  AC1,151543             ;
127260 / 202645,,000000         MOVEM  AC1,      (DAT)        ;
127261 / 402005,,000002         SETZM      000002(DAT)        ;
127262 / 402005,,000003         SETZM      000003(DAT)        ;
152132 / 000000,,000002                                       ;
152132 / 000000,,000000                                       ;
152132 / 000000,,000000                                       ;
152132 / 000000,,000003                                       ;
152132 / 000000,,000004                                       ;
152132 / 000000,,000005                                       ;
152132 / 004000,,003454                                       ;
127263 / 200640,,152132          MOVE  AC1,152132             ;
127264 / 202645,,000005         MOVEM  AC1,000005(DAT)        ;
                       PPFXT:
127265 / 200640,,000005          MOVE  AC1,   DAT             ;
127266 / 254000,,037401          JRST      CPOPJ1             ;
                       ; WE GET HERE MOSTLY IF A REQUEST FOR FREE STORAGE FOR THE PAGE PRINTER FAILS
                       PPI3:
127267 / 550645,,000020          HRRZ  AC1,CBLKPT(DAT)        ;; RETURN FIRST PIECE OF TEXT
127270 / 260140,,074163         PUSHJ    P,FSGIVE             ;
                       PPI1:
127271 / 550640,,000005          HRRZ  AC1,000005             ;; AND RELEASE CONTROL BLOCK ITSELF
127272 / 254000,,074163          JRST      074163             ;; TAKE ERROR RETURN FROM PPINIT
                       ; FREE STORAGE HANDLER FOR PAGE PRINTER
                       PPFSGE:
127273 / 200700,,000015          MOVE  AC2,   AC1             ;
127274 / 201740,,022537         MOVEI  AC3,  PPFS             ;
127275 / 350003,,000000           AOS            (P)          ;
127276 / 260140,,074554         PUSHJ    P,SFSGET             ;
127277 / 370003,,000000           SOS            (P)          ;
127300 / 250700,,000015          EXCH  AC2,   AC1             ;
127301 / 263140,,000000          POPJ    P,                   ;
                       ;;UGETFS IS FOR GETTING FREE STG. AT UUO LEVEL.
                       CGETFS:
127302 / 354006,,000016          AOSA      BLKTOT(DDB)        ;
                       UGFS2:
127303 / 260140,,130746         PUSHJ    P,130746             ;;WAIT FOR SOME FS TO APPEAR.
                       UGETFS:
127304 / 201740,,022544         MOVEI  AC3, DPYFS             ;
127305 / 260140,,074554         PUSHJ    P,SFSGET             ;
127306 / 332653,,023425         SKIPE  AC1,SPWUUF(PID)        ;;WE ARE AT CLOCK LEVEL AND THERE'S NO FREE STG.
127307 / 263140,,000000          POPJ    P,                   ;
127310 / 336653,,023431         SKIPN  AC1,INTACT(PID)        ;; OR AT USER INTERRUPT LEVEL
127311 / 254000,,127303          JRST      127303             ;;OOPS, NONE THERE, AND WE ARE NOT IN SPACEWAR MODE.
127312 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO RELEASE FREE STORAGE BLOCKS
                       CGIVFS:
127313 / 370006,,000016           SOS      BLKTOT(DDB)        ;;DECR. COUNT OF USED BLOCKS...
                       UGIVFS:
127314 / 700600,,000400          CONO   PI, PIOFF             ;
127315 / 200700,,014117          MOVE  AC2,014117             ;;FREE THE BLOCK IN AC1.
127316 / 552640,,014117         HRRZM  AC1,FSWT2H             ;
127317 / 542715,,000065          HRRM  AC2,  LINK(AC1)        ;
127320 / 700600,,000200          CONO   PI,  PION             ;
127321 / 350000,,014126           AOS       FSW2C             ;
127322 / 263140,,000000          POPJ    P,                   ;
                       ;GET A DD Q BLOCK
                       GETQ:
127323 / 261140,,000017          PUSH    P,   AC3             ;
151326 / 400000,,022513          SETZ        DDFS             ;
127324 / 200740,,151326          MOVE  AC3,151326             ;;NO SKIP
127325 / 260140,,074554         PUSHJ    P,SFSGET             ;
127326 / 262140,,000017           POP    P,   AC3             ;
127327 / 263140,,000000          POPJ    P,                   ;
                       UGETF2:
127330 / 260140,,130746         PUSHJ    P,CLKWAT             ;
                       UGETF1:
127331 / 260140,,073353         PUSHJ    P, FSGET             ;
127332 / 332653,,023425         SKIPE  AC1,SPWUUF(PID)        ;;TOO BAD WE HAVE TO DUPLICATE ALL THIS SHIT
127333 / 263140,,000000          POPJ    P,                   ;
127334 / 336653,,023431         SKIPN  AC1,INTACT(PID)        ;
127335 / 254000,,127330          JRST      UGETF2             ;
127336 / 263140,,000000          POPJ    P,                   ;
                       ;BELOW IS THE PROTOTYPICAL P. OF P. CONTROL BLOCK.
                       PPMODL:
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ;2 = 0 IF OMITTED.
                       ;SAME FOR 2.
127337 / 777777,,777001                                       ;
127337 / 000000,,000600                                       ;
127340 / 000000,,000020                                       ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
127341 / 000000,,000007                                       ;
127341 / 777777,,777761                                       ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
127342 / 777777,,777773                                       ;
127342 / 777777,,777770                                       ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
127343 / 000000,,000012                                       ;
127343 / 000000,,000000                                       ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
127344 / 777777,,777773                                       ;
127344 / 000000,,000010                                       ;
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ; = 0 IF OMITTED.
                       ;SAME FOR .
127345 / 777777,,777771                                       ;
127345 / 000000,,000007                                       ;
127346 / 000000,,000020                                       ;
127347 / 000000,,000000                                       ;
127350 / 000000,,000001                                       ;
127351 / 000000,,000000                                       ;
127352 / 777777,,777650                                       ;
127353 / 000000,,000000                                       ;
127354 / 000700,,000000 POINT 7,00000000,35                   ;
127355 / 000000,,000000                                       ;
127356 / 777777,,777717                                       ;
127357 / 000000,,000000                                       ;
127360 / 000000,,000000                                       ;
127361 / 000000,,000000                                       ;
127362 / 000000,,000002                                       ;
127363 / 000000,,000002                                       ;
127364 / 000000,,000001                                       ;
127365 / 000000,,000014                                       ;
127366 / 000000,,000000                                       ;
127367 / 000000,,000000                                       ;
127370 / 000000,,000000                                       ;
127371 / 000000,,000000                                       ;
127372 / 000000,,000003                                       ;
127373 / 000000,,000003                                       ;
127374 / 000017,,000000           XWD AC3,0                   ;
127375 / 000000,,000000                                       ;
127376 / 000000,,000000                                       ;
127377 / 000000,,000000                                       ;
127400 / 000000,,000000                                       ;
127401 / 000000,,000012                                       ;
127402 / 000000,,000003                                       ;
127403 / 000000,,000000                                       ;
127404 / 000000,,000000                                       ;
127405 / 000000,,000000                                       ;
127406 / 000000,,000000                                       ;
127407 / 000000,,000000                                       ;
127410 / 777777,,777777                                       ;
127411 / 000000,,000130                                       ;
                       ; ALL DISPLAY PROGRAM SPACE IS TAKEN FROM A FREE
                       ;  STORAGE AREA CONSISTING OF FIXED SIZE BLOCKS.  THE
                       ; FOLLOWING PARAMETERS RELATE TO THOSE BLOCKS.
127412 / 000000,,000060                                       ;
127412 / 000000,,000007                                       ;
127412 / 000000,,000067                                       ;
                       ;TYO, DPYTYO.
                       ;TYO: CHARACTER IN CHR, DAT POINTS TO P.OF P. CONTROL BLOCK.
                       ;???PRINT IS CALLED WITH A BYTE PTR. IN TAC AND A
                       ;POSITIVE CHAR. COUNT IN TAC1 AND DAT POINTING TO CONTROL BLOCK.
                       DPYTYO:
127412 / 200246,,000017          MOVE  DAT, CURPP(DDB)        ;; PICK UP POINTER TO PAGE PRINTER CONTROL BLOCK
127413 / 500240,,000006           HLL  DAT,000006             ;; PUT IN DD BIT
127414 / 254000,,127416          JRST         TYO             ;
                       TYOTAC:
127415 / 134400,,000001          ILDB  CHR,000001             ;;PRINT NEXT CHR IN STRING POINTED TO BY TAC.
                       TYO:
127416 / 200645,,000042          MOVE  AC1,LSTCHR(DAT)        ;; PICK UP LAST CHARACTER TYPED
127417 / 306640,,000177          CAIN  AC1,000177             ;;IF A DELETE ON DATA DISC
127420 / 321240,,127525         JUMPL  DAT,127525             ;;ON DD, <DELETE><CHR> IS A SINGLE NORMAL GRAPHIC.
127421 / 322400,,037403         JUMPE  CHR,037403             ;;DON'T PRINT NULLS.
127422 / 325640,,127431        JUMPGE  AC1,127431             ;;JUMP UNLESS THE LAST THING WE DID WAS INVENT CRLF.
127423 / 306400,,000015          CAIN  CHR,000015             ;;A CR AFTER WE INVENTED A CRLF?
127424 / 263140,,000000          POPJ    P,                   ;;YES. SUPPRESS IT.
127425 / 201640,,000012         MOVEI  AC1,000012             ;;MAKE IT LOOK LIKE THE LAST CHARACTER WAS LF.
127426 / 202645,,000042         MOVEM  AC1,LSTCHR(DAT)        ;;SET IT.
127427 / 306400,,000012          CAIN  CHR,000012             ;;CHARACTER IS LF?
127430 / 263140,,000000          POPJ    P,                   ;;YES. SUPPRESS THAT TOO.
                       ;NOW IT LOOKS LIKE NORMAL CHARACTER, LSTCHR SET.
                       TYO0:
127431 / 476005,,000041         SETOM      DPYCHR(DAT)        ;; NOTE THAT ANOTHER CHARACTER HAS BEEN TYPED
127432 / 306400,,000015          CAIN  CHR,000015             ;; IS IT A CR ?
127433 / 254000,,127553          JRST      127553             ;; YES, GO SERVICE IT
127434 / 302640,,000012          CAIE  AC1,000012             ;; WAS LAST CHARACTER A LF?
127435 / 254000,,127460          JRST      127460             ;; NO
127436 / 327240,,127460         JUMPG  DAT,127460             ;; IF III, WE CAN SKIP ALL THIS BULLSHIT
                       ;ON DD. FIRST CHARACTER AFTER LF.
127437 / 200645,,000013          MOVE  AC1,DPHPOS(DAT)        ;; WELL, ARE WE AT THE BEGINNING OF THE LINE?
127440 / 270645,,000052           ADD  AC1,LNLNGT(DAT)        ;
127441 / 322640,,127514         JUMPE  AC1,127514             ;; YES, THERE MUST HAVE BEEN A CR FIRST.
127442 / 261140,,000010          PUSH    P,000010             ;; SAVE OUR CHARACTER
127443 / 261140,,000015          PUSH    P,000015             ;; SAVE THE COUNT (I.E., COLUMN NUMBER.)
127444 / 201400,,000015         MOVEI  CHR,000015             ;; TYPE A CR FIRST
127445 / 137405,,000016           DPB  CHR, SPTR1(DAT)        ;; REPLACE LF WITH CR
127446 / 201400,,000012         MOVEI  CHR,000012             ;; PUT OUR LF BACK
127447 / 370005,,000033           SOS        VPOS(DAT)        ;
127450 / 260140,,127521         PUSHJ    P,PUTCH1             ;
127451 / 260140,,127727         PUSHJ    P,127727             ;; STORE THE POSITION OF OUR NEW LF
127452 / 201400,,000040         MOVEI  CHR,000040             ;; THEN PAD OUT THE LINE
                       ;TYPE A BUNCH OF SPACES TO SIMUALTE A BARE LINE FEED.
                       TYO5:
127453 / 260140,,127521         PUSHJ    P,127521             ;;SEND A SPACE.
127454 / 373003,,000000         SOSLE            (P)          ;;DECREMENT THE SPACE COUNT.
127455 / 254000,,127453          JRST      127453             ;;LOOP SPACING.
151763 / 000001,,000001                                       ;
127456 / 274140,,151763           SUB    P,151763             ;;ADJUST STCK TO REMOVE SPACE COUNT.
127457 / 262140,,000010           POP    P,000010             ;;RESTORE CHARACTER. FALL INTO TYO1
                       TYO1:
127460 / 306400,,000012          CAIN  CHR,000012             ;; OR A  LINE FEED ?
127461 / 254000,,127605          JRST      127605             ;;YES.
127462 / 325240,,127500        JUMPGE  DAT,127500             ;; IF III, JUST PUT THE CHARACTER IN THE BUFFER
127463 / 200645,,000013          MOVE  AC1,DPHPOS(DAT)        ;; ARE WE AT THE LEFT MARGIN?
127464 / 270645,,000052           ADD  AC1,LNLNGT(DAT)        ;
127465 / 326640,,127500         JUMPN  AC1,127500             ;; NO
127466 / 200645,,000042          MOVE  AC1,LSTCHR(DAT)        ;; YES, WAS LAST CHARACTER A LF?
127467 / 306640,,000012          CAIN  AC1,    12             ;
127470 / 254000,,127500          JRST        TYO2             ;
127471 / 261140,,000010          PUSH    P,000010             ;; NO, PUT ONE IN!
127472 / 201400,,000012         MOVEI  CHR,    12             ;
127473 / 260140,,127521         PUSHJ    P,PUTCH1             ;
127474 / 260140,,127727         PUSHJ    P,127727             ;; STORE LINE POINTER
127475 / 377005,,000024          SOSG      DELCNT(DAT)        ;; TIME TO GLITCH YET?
127476 / 260140,,127614         PUSHJ    P,127614             ;; YES, DO IT.
127477 / 262140,,000010           POP    P,   CHR             ;
                       TYO2:
127500 / 306400,,000011          CAIN  CHR,000011             ;; TAB?
127501 / 260140,,127530         PUSHJ    P,127530             ;; YES, GO EXPAND IT.
127502 / 260140,,127521         PUSHJ    P,127521             ;; PUT CHARACTER INTO BUFFER
                       TYO7:
127503 / 202405,,000042         MOVEM  CHR,LSTCHR(DAT)        ;; SAVE LAST CHARACTER
127504 / 306400,,000177          CAIN  CHR,000177             ;;IS THIS A DELETE?
127505 / 321240,,127510         JUMPL  DAT,127510             ;;YES. FOR DD AVOID CHANGING THE H.POSITION.
127506 / 351005,,000013          AOSL      DPHPOS(DAT)        ;;UPDATE HORIZONTAL POS.
127507 / 254000,,127544          JRST      127544             ;;OVER END OF LINE..  INSERT CR LF.
152007 / 000000,,000000                                       ;
152007 / 000000,,000002                                       ;
152007 / 000000,,000002                                       ;
152007 / 000000,,000000                                       ;
152007 / 000000,,000003                                       ;
152007 / 000000,,000003                                       ;
152007 / 000010,,020334                                       ;
127510 / 200640,,152007          MOVE  AC1,152007             ;
127511 / 335000,,000005        SKIPGE      000005             ;; IF WE ARE A DD
127512 / 202645,,000002         MOVEM  AC1,000002(DAT)        ;; AND THE LINE DOESN'T END WITH CRLF, PUT IN AN EXECUTE
127513 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE IF THE LAST CHARACTER WAS A LF AND WE ARE AT THE LEFT MARGIN
                       TYO4:
127514 / 302400,,000012          CAIE  CHR,000012             ;; IS THIS CHARACTER A LF?
127515 / 254000,,127500          JRST      127500             ;; NO, JUST DUMP THE CHARACTER IN THE BUFFER
127516 / 260140,,127601         PUSHJ    P,127601             ;; YES, PUT IN A SPACE, CR, AND A LF
127517 / 201400,,000012         MOVEI  CHR,000012             ;; PICK UP A LF
127520 / 254000,,127605          JRST      PR1EOL             ;
                       ;PRINT SINGLE CHAR. FROM CHR., WITH NO SPEC. CHAR. CHECKING.
                       PUTCH1:
127521 / 377005,,000014          SOSG        CNT1(DAT)        ;
127522 / 260140,,127625         PUSHJ    P,127625             ;;GO EXTEND BUFFER.
127523 / 136405,,000015          IDPB  CHR, PPTR1(DAT)        ;
127524 / 263140,,000000          POPJ    P,                   ;
                       ;DD. LAST CHARACTER WAS A DELETE. THIS CHARACTER WILL MAKE AN ORDINARY GRAPHIC.
                       DELNOW:
127525 / 260140,,127521         PUSHJ    P,127521             ;;PUT CHARACTER IN BUFFER
127526 / 435400,,000200          IORI  CHR,000200             ;;MAKE IT SPECIAL SO WE WON'T COMPARE EQUAL TO IT
127527 / 254000,,127503          JRST        TYO7             ;
                       ;WE GET HERE TO PRINT SPACES FOR A TAB
                       PR1TAB:
127530 / 260140,,127521         PUSHJ    P,127521             ;;HANDLE A TAB. FIRST PRINT THE TAB.
127531 / 201400,,000040         MOVEI  CHR,000040             ;;NOW OUTPOOT RIGHT NO. OF SPACES.
127532 / 460645,,000013         SETCM  AC1,DPHPOS(DAT)        ;;GET CURRENT POS. ON LINE..
127533 / 274645,,000052           SUB  AC1,LNLNGT(DAT)        ;; MAKE TABS START IN COLLUMN 8
127534 / 405640,,000007          ANDI  AC1,000007             ;;GET NO. OF SPACES TO NEXT MULTIPLE OF 8 BOUNDARY.
127535 / 272645,,000013          ADDM  AC1,DPHPOS(DAT)        ;;UPDATE HIM.
                       PR1TB1:
127536 / 261140,,000015          PUSH    P,000015             ;; SAVE OUR COUNT
127537 / 260140,,127521         PUSHJ    P,127521             ;;NOW EMIT A SPACE.
127540 / 262140,,000015           POP    P,   AC1             ;
127541 / 365640,,127536         SOJGE  AC1,127536             ;;..AND SOME MORE, IF APPROPRIATE.
127542 / 201400,,000011         MOVEI  CHR,000011             ;;WE WILL FINISH OFF WITH ANOTHER TAB..
127543 / 263140,,000000          POPJ    P,                   ;
                       ;STICK A CRLF IN TO BREAK UP LONG LINES
                       PRCR:
127544 / 201400,,000015         MOVEI  CHR,000015             ;;PRINT A CR.
127545 / 260140,,127521         PUSHJ    P,PUTCH1             ;
127546 / 201400,,000012         MOVEI  CHR,000012             ;;NOW INVENT A LINE FEED.
127547 / 260140,,127622         PUSHJ    P,127622             ;; RESET DPHPOS
127550 / 260140,,127605         PUSHJ    P,127605             ;;GO DO THE END-OF-LINE BIT
127551 / 476005,,000042         SETOM      LSTCHR(DAT)        ;;FLAG THAT WE INVENTED CRLF HERE.
                       ;(DPYTYP WILL WAIT FOR LINE BEFORE SENDING MORE)
127552 / 263140,,000000          POPJ    P,                   ;
                       PR1ECR:
127553 / 325240,,127572        JUMPGE  DAT,127572             ;; IS THIS A DD?
127554 / 402005,,000002         SETZM      000002(DAT)        ;; IF SO, THE LINE WILL BE ACTIVATED, SO KILL THE EXECUTE
127555 / 201640,,000012         MOVEI  AC1,000012             ;; WAS THE LAST CHARACTER A LF
127556 / 312645,,000042          CAME  AC1,LSTCHR(DAT)        ;
127557 / 254000,,127572          JRST      PR1EC1             ;
127560 / 210745,,000013          MOVN  AC3,DPHPOS(DAT)        ;; PICK UP THE HORIZONTAL POSITION
127561 / 316745,,000052          CAMN  AC3,LNLNGT(DAT)        ;; ARE WE AT THE BEGINNING OF THE LINE?
127562 / 254000,,127601          JRST      127601             ;; YES, NO NEED FOR ANY MORE CR'S
127563 / 370005,,000033           SOS        VPOS(DAT)        ;
127564 / 137405,,000016           DPB  CHR, SPTR1(DAT)        ;; PUT THE CR IN OVER THE LF
127565 / 260140,,127622         PUSHJ    P,127622             ;; RESET DPHPOS
127566 / 201400,,000012         MOVEI  CHR,    12             ;
127567 / 260140,,127521         PUSHJ    P,127521             ;; STICK THE LF IN
127570 / 202405,,000042         MOVEM  CHR,LSTCHR(DAT)        ;; SAVE IT
127571 / 254000,,127727          JRST      127727             ;; DO THE END-OF-LINE BIT
                       PR1EC1:
127572 / 210745,,000013          MOVN  AC3,DPHPOS(DAT)        ;; NOW (SIGH) SEE IF WE ARE AT THE LEFT MARGIN!
127573 / 316745,,000052          CAMN  AC3,LNLNGT(DAT)        ;
127574 / 263140,,000000          POPJ    P,                   ;; IF SO, FLUSH THIS CR
127575 / 260140,,127622         PUSHJ    P,127622             ;; RESET DPHPOS
                       PR1EC3:
127576 / 260140,,127521         PUSHJ    P,127521             ;; YES, DUMP ONE OF THEM
127577 / 202405,,000042         MOVEM  CHR,LSTCHR(DAT)        ;
127600 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE IF THE LAST CHARACTER WAS A LF AND WE ARE AT THE LEFT MARGIN
                       PR1EC2:
127601 / 201400,,000040         MOVEI  CHR,000040             ;; PRINT A SPACE SO THE LINE WILL GET ERASED
127602 / 260140,,127521         PUSHJ    P,PUTCH1             ;
127603 / 201400,,000015         MOVEI  CHR,    15             ;
127604 / 254000,,127576          JRST      PR1EC3             ;
                       ; HERE ON LF
                       PR1EOL:
127605 / 335000,,000005        SKIPGE      000005             ;; IS THIS A DD?
127606 / 402005,,000002         SETZM      000002(DAT)        ;; YES, NO NEED FOR AN EXECUTE AT THE END OF THE BUFFER.
                       PR1EO1:
127607 / 202405,,000042         MOVEM  CHR,LSTCHR(DAT)        ;; SAVE THIS CHARACTER
127610 / 260140,,127521         PUSHJ    P,127521             ;;HERE AT END OF LINE. PRINT LINE FEED.
127611 / 260140,,127727         PUSHJ    P,127727             ;; YES, SET VERTICAL POSITION AND SAVE BYTE PTR
127612 / 373005,,000024         SOSLE      DELCNT(DAT)        ;;ARE WE AT THE TOP OF A GLITCH ?
127613 / 263140,,000000          POPJ    P,                   ;;NO. GO BACK.
                       PREOGL:
127614 / 200745,,000023          MOVE  AC3,   DEL(DAT)        ;;GET NO. OF LINES PER GLITCH..
127615 / 202745,,000024         MOVEM  AC3,DELCNT(DAT)        ;;.. AND INIT. THE COUNT.
127616 / 350645,,000025           AOS  AC1, GLCNT(DAT)        ;;UPDATE SIZE OF PAGE.
127617 / 317645,,000026          CAMG  AC1, PGSIZ(DAT)        ;;IS IT TOO BIG ?
127620 / 263140,,000000          POPJ    P,                   ;; NOT YET.
127621 / 254000,,127674          JRST      127674             ;; YES, MOVE IT UP SOME
                       ;INITIALIZE LENGTH OF THE LINE AT CR.
                       SETLL:
127622 / 210645,,000052          MOVN  AC1,LNLNGT(DAT)        ;;GET -LINELENGTH.
127623 / 202645,,000013         MOVEM  AC1,DPHPOS(DAT)        ;;RESET HORIZONTAL POS.
127624 / 263140,,000000          POPJ    P,                   ;
127625 /                 ;::   BEGIN STANFO.DPYSER.EXTBUF.
                       EXTBUF:
127625 / 250645,,000015          EXCH  AC1, PPTR1(DAT)        ;;GET BYTE POINTER.
                       L2:
127626 / 210705,,000017          MOVN  AC2,  WCNT(DAT)        ;;HOW MANY WORDS LEFT IN THIS BLOCK ?
127627 / 322700,,127652         JUMPE  AC2,127652             ;;IF NONE, GET A NEW BLOCK.
127630 / 303700,,000010         CAILE  AC2,000010             ;;IF FEWER THAN 8, USE THAT  NO.
127631 / 201700,,000010         MOVEI  AC2,000010             ;;..ELSE USE 8 WORDS.
127632 / 272705,,000017          ADDM  AC2,  WCNT(DAT)        ;;DECREMENT THE COUNT.
127633 / 200740,,000016          MOVE  AC3,   AC2             ;
127634 / 240740,,000002           ASH  AC3,000002             ;;MULTIPLY BY 5 RAPIDLY.
127635 / 270740,,000016           ADD  AC3,   AC2             ;
127636 / 202745,,000014         MOVEM  AC3,  CNT1(DAT)        ;;THAT'S THE NEW CHAR. COUNT, FOLKS.
127637 / 200755,,000001          MOVE  AC3,     1(AC1)        ;;PICK UP THE JMP AT CURRENT END OF BUFFER..
127640 / 271656,,000001          ADDI  AC1,     1(AC2)        ;;GET NEW POS. FOR IT...
127641 / 202755,,000000         MOVEM  AC3,      (AC1)        ;;.. AND PUT IT THERE.
127642 / 201740,,000001         MOVEI  AC3,000001             ;;MANUFACTURE A NULL CHAR. WORD...
                       L1:
127643 / 275640,,000001          SUBI  AC1,000001             ;;AND FILL THE NEWLY AVAILABLE AREA OF THE
127644 / 202755,,000000         MOVEM  AC3,      (AC1)        ;;BUFFER WITH IT.
127645 / 367700,,127643          SOJG  AC2,    L1             ;
127646 / 275640,,000001          SUBI  AC1,     1             ;
127647 / 621640,,760000           TLZ  AC1,760000             ;;BUG FIX REG RPH 24 JUL 72
127650 / 250645,,000015          EXCH  AC1, PPTR1(DAT)        ;;RESTORE THINGS TO THEIR RIGHTFUL PLACES.
127651 / 263140,,000000          POPJ    P,                   ;
                       GBLK:
                       ;;GET ANOTHER BLOCK FROM FREE STORAGE FOR PRGM.
127652 / 353006,,000016         AOSLE      BLKTOT(DDB)        ;;INC. HIS COUNT OF BLOCKS USED.
127653 / 260140,,130051         PUSHJ    P,130051             ;;OOPS, TOO MANY. FREE SOME.
127654 / 260140,,130741         PUSHJ    P,130741             ;;GET ANOTHER BLOCK FROM FREE STORAGE.
127655 / 540640,,000016           HRR  AC1,000016             ;;MAKE THE BYTE PTR. POINT THERE.
127656 / 250705,,000020          EXCH  AC2,CBLKPT(DAT)        ;;UPDATE CURRENT BLK. PTR (AND GET OLD ONE).
127657 / 201740,,000001         MOVEI  AC3,000001             ;;GC BIT FOR `CURRENT PP BLOCK'...
127660 / 412756,,000064        ANDCAM  AC3,BLKBTS(AC2)        ;;..TURN IT OFF IN OLD BLOCK.
127661 / 202755,,000064         MOVEM  AC3,BLKBTS(AC1)        ;;.. AND PLACE IN NEW ONE.
127662 / 200756,,000063          MOVE  AC3,GCINFO(AC2)        ;;GIVE NEW BLK. SAME GC CODE AS
127663 / 202755,,000063         MOVEM  AC3,GCINFO(AC1)        ;; OLD ONE.
127664 / 211740,,000061         MOVNI  AC3,000061             ;;SET UP NO. OF FREE WORDS IN NEW BLOCK.
127665 / 202745,,000017         MOVEM  AC3,  WCNT(DAT)        ;
127666 / 200756,,000061          MOVE  AC3,INITWC(AC2)        ;;PICK UP RETURN JMP FROM END OF OLD BLK..
127667 / 202755,,000000         MOVEM  AC3,      (AC1)        ;;.. AND PUT IN FIRST WORD OF NEW ONE.
127670 / 542656,,000065          HRRM  AC1,  LINK(AC2)        ;;MAKE FORWARD LINK OF OLD ONE POINT AT NEW ONE.
127671 / 506656,,000061          HRLM  AC1,INITWC(AC2)        ;;MAKE JMP AT END OF OLD ONE POINT AT NEW ONE.
127672 / 516715,,000065         HRLZM  AC2,  LINK(AC1)        ;;BACKWARD LINK OF NEW ONE TO OLD ONE...
127673 / 364640,,127626          SOJA  AC1,127626             ;;JIGGLE NEW BYTE PTR. A BIT AND PROCEDE.
127674 /                 ;::    BEND STANFO.DPYSER.EXTBUF.
                       ; WE GET HERE UPON GLITCHING ON A DATA DISC DISPLAY
                       ; IN THIS CASE, WE SEE IF THERE ARE ANY BLOCKS ABOVE THE
                       ; CURRENT SCREEN. IF SO, WE CAN FREE THEM UP.
                       GLITCH:
127674 / 370006,,000034           SOS      GLHCNT(DDB)        ;; BUMP COUNT OF GLITCHES TO GO UNTIL HOLD
127675 / 210745,,000023          MOVN  AC3,   DEL(DAT)        ;; MOVE POINTERS DOWN BY THIS AMOUNT
127676 / 476005,,000045         SETOM       GLTCH(DAT)        ;; MARK THE FACT THAT WE HAVE GLITCHED
127677 / 476005,,000046         SETOM       PPINV(DAT)        ;; NOTE THAT POINTERS ARE BEING CHANGED
127700 / 272745,,000033          ADDM  AC3,  VPOS(DAT)        ;; UPDATE VERTICAL POSITION BY NUMBER OF LINES IN GLITCH
127701 / 260140,,130526         PUSHJ    P,130526             ;; MAGIC CIRCULAR ROUTINE
127702 / 402005,,000046         SETZM       PPINV(DAT)        ;; POINTERS ARE OK NOW
                       GLTCH3:
127703 / 260140,,130032         PUSHJ    P,130032             ;; PICK UP LINE NUMBER OF TOP OF PAGE
127704 / 313745,,000033         CAMLE  AC3,  VPOS(DAT)        ;; IS THERE ANYTHING ON THE SCREEN AT ALL?
127705 / 200745,,000033          MOVE  AC3,  VPOS(DAT)        ;; NOT YET, USE LAST POSITION WRITTEN IN
127706 / 260140,,127757         PUSHJ    P,127757             ;; GET ADDRESS OF TEXT
127707 / 550645,,000021          HRRZ  AC1,TBLKPT(DAT)        ;; PICK UP THE POINTER TO THE CURRENT FIRST PAGE
127710 / 551755,,000065         HRRZI  AC3,000065(AC1)        ;; GET ADDRESS OF END OF THAT BLOCK
127711 / 301715,,000000          CAIL  AC2,      (AC1)        ;; NOW, ARE WE INSIDE THAT FIRST BLOCK?
127712 / 303717,,000000         CAILE  AC2,      (AC3)        ;
127713 / 254000,,127725          JRST      127725             ;; NO, FREE UP SOME BLOCKS
127714 / 271700,,000001          ADDI  AC2,000001             ;; MAKE POINTER TO TOP OF PAGE
127715 / 506705,,000001          HRLM  AC2, TPJMP(DAT)        ;; POINT JUMP TO THERE
                       PR1EL4:
127716 / 370645,,000025           SOS  AC1, GLCNT(DAT)        ;;IS IT SMALL ENOUGH NOW ?
                       ADJSIZ:
127717 / 313645,,000026         CAMLE  AC1, PGSIZ(DAT)        ;
127720 / 254000,,127674          JRST      127674             ;;NO. GLITCH IT SOME MORE.
127721 / 263140,,000000          POPJ    P,                   ;
                       CNTWRP:
127722 / 201740,,000061         MOVEI  AC3,000061             ;;WRAP A POINTER AROUND THE GLITCH TABLE.
127723 / 202776,,777776         MOVEM  AC3,@777776(AC2)       ;
127724 / 254016,,000000          JRST            (AC2)        ;
                       GLTCH4:
127725 / 260140,,130060         PUSHJ    P,130060             ;; GO FREE UP AT LEAST ONE
127726 / 254000,,127703          JRST      127703             ;; SEE IF WE CAN DO SOME MORE
                       ; THESE ARE UTILITY ROUTINES USED BY THE PAGE PRINTER
                       ; THIS FIRST ROUTINE IS CALLED AT THE END OF THE LINE THAT
                       ; GOES OFF THE SCREEN ON DATA DISK. WE REPACK THE WORD
                       ; SUCH THAT THE POINTER POINTS TO THE NEXT WORD. THIS WAY
                       ; THE I-LEVEL ROUTINES CAN REPLACE THE ENTIRE WORD WITH
                       ; A JUMP INTO THE PAGE PRINTER CONTROL BLOCK TO KEEP IT
                       ; FROM READING MORE TEXT WHICH WOULD BE OFF THE SCREEN.
                       EOLSET:
127727 / 200645,,000015          MOVE  AC1, PPTR1(DAT)        ;; PICK UP POINTER TO LF
127730 / 202645,,000016         MOVEM  AC1, SPTR1(DAT)        ;; SAVE IT
127731 / 335000,,000005        SKIPGE         DAT             ;
127732 / 402005,,000002         SETZM      000002(DAT)        ;; SINCE TEXT ENDS WITH A CRLF, NO EXECUTE IS NEEDED
153163 / 000005,,000015                                       ;
153163 / 360605,,000015 POINT 6,05000015,5                    ;
127733 / 135640,,153163           LDB  AC1,153163             ;
127734 / 275640,,000001          SUBI  AC1,000001             ;; ARE THERE ANY SPACES LEFT IN THE WORD?
127735 / 231640,,000007         IDIVI  AC1,000007             ;; THIS GETS NUMBER OF CHARACTERS LEFT IN AC1
127736 / 322640,,127745         JUMPE  AC1,127745             ;; IF NONE LEFT, GO ON.
127737 / 261140,,000015          PUSH    P,000015             ;; PUT IN THAT MANY NULLS
127740 / 400400,,000000          SETZ  CHR,                   ;
                       EOLSE2:
127741 / 260140,,127521         PUSHJ    P,127521             ;; FILL OUT WORD WITH NULLS.
127742 / 373003,,000000         SOSLE            (P)          ;; ENOUGH?
127743 / 254000,,127741          JRST      127741             ;; NO, GO DO ANOTHER ONE.
151763 / 000001,,000001           XWD 1,1                     ;
127744 / 274140,,151763           SUB    P,151763             ;
                       EOLSE3:
127745 / 200745,,000033          MOVE  AC3,  VPOS(DAT)        ;; WE ARE NOW ON THE NEXT LINE. BUMP VERTICAL POSITION COUNTER.
127746 / 271740,,000001          ADDI  AC3,000001             ;; DON'T BUMP IN CORE UNTIL WE HAVE POINTER PLANTED
127747 / 313745,,000043         CAMLE  AC3,   GLW(DAT)        ;; IS THIS FURTHER DOWN THAN THE PRESENT MAXIMUM LINE WRITTEN?
127750 / 202745,,000043         MOVEM  AC3,   GLW(DAT)        ;; YES, BUMP NUMBER OF MAXIMUM LINE WRITTEN
127751 / 260140,,127757         PUSHJ    P,127757             ;; PICK UP POINTER INTO LINE TABLE
127752 / 200705,,000015          MOVE  AC2, PPTR1(DAT)        ;; NOW PICK UP THE POINTER
127753 / 202725,,000035         MOVEM  AC2,@  PTRB(DAT)       ;; PUT IT INTO LINE POINTER TABLE INDEXED BY LINE NUMBER
127754 / 350005,,000033           AOS        VPOS(DAT)        ;; NOW UPDATE VERTICAL POSITION
127755 / 201400,,000012         MOVEI  CHR,000012             ;; FAKE UP SOMETHING FOR ERRP (AGGG!)
127756 / 263140,,000000          POPJ    P,                   ;
                       ; HANDY ROUTINE TO GET POINTER TO TEXT FROM LINE NUMBER IN AC3
                       ; RETURNS POINTER IN AC1.
                       GLNADR:
127757 / 270745,,000027           ADD  AC3, PTBEG(DAT)        ;; ADD IN INCREMENT
                       GLNAD2:
151667 / 777777,,777754                                       ;
127760 / 315740,,151667         CAMGE  AC3,151667             ;; UNDERFLOW?
127761 / 254000,,127772          JRST      127772             ;; YES, BOOST IT
                       GLNAD4:
127762 / 301740,,000074          CAIL  AC3,000074             ;; OVERFLOW?
127763 / 254000,,127774          JRST      127774             ;; YES, BRING IT BACK INTO RANGE
127764 / 550705,,000035          HRRZ  AC2,  PTRB(DAT)        ;; PICK UP POINTER
127765 / 275700,,000024          SUBI  AC2,000024             ;
127766 / 312705,,000036          CAME  AC2,   PTB(DAT)        ;; IS IT WHAT IT IS SUPPOSED TO BE?
127767 / 254000,,127776          JRST      127776             ;; NO, ERROR
                       GLNAD6:
127770 / 550725,,000035          HRRZ  AC2,@  PTRB(DAT)       ;; PICK UP POINTER
127771 / 263140,,000000          POPJ    P,                   ;
                       GLNAD1:
127772 / 271740,,000120          ADDI  AC3,000120             ;
127773 / 254000,,127760          JRST      GLNAD2             ;
                       GLNAD3:
127774 / 275740,,000120          SUBI  AC3,000120             ;
127775 / 254000,,127762          JRST      GLNAD4             ;
                       ; WE GET HERE IF THE POINTERS DON'T AGREE
                       GLNAD5:
127776 / 260140,,000316         PUSHJ    P,PUSHIT             ;
127777 / 260140,,044120         PUSHJ    P,DISERR             ;
130000 / 000000,,154051                                       ;
130001 / 000105,,000035        OCTQQQ        PTRB(DAT)        ;
130002 / 000000,,152275                                       ;
130003 / 777777,,777777                                       ;
130004 / 260140,,000341         PUSHJ    P, POPIT             ;
130005 / 550705,,000036          HRRZ  AC2,   PTB(DAT)        ;; PICK UP THE (HOPEFULLY) CORRECT POINTER
130006 / 311700,,022067          CAML  AC2,MEMSIZ             ;
130007 / 311700,,022066          CAML  AC2,022066             ;
130010 / 254000,,130015          JRST      GLNAD7             ;
130011 / 271700,,000024          ADDI  AC2,000024             ;
130012 / 505700,,000017          HRLI  AC2,000017             ;; SET TO INDEX BY AC3
130013 / 202705,,000035         MOVEM  AC2,  PTRB(DAT)        ;
130014 / 254000,,127770          JRST      GLNAD6             ;
                       GLNAD7:
130015 / 550705,,000035          HRRZ  AC2,  PTRB(DAT)        ;
130016 / 275700,,000024          SUBI  AC2,000024             ;
130017 / 311700,,022067          CAML  AC2,MEMSIZ             ;
130020 / 311700,,022066          CAML  AC2,022066             ;
130021 / 254000,,130024          JRST       HELPX             ;
130022 / 552705,,000036         HRRZM  AC2,   PTB(DAT)        ;
130023 / 254000,,127770          JRST      GLNAD6             ;
                       HELPX:
130024 / 260140,,044120         PUSHJ    P,DISERR             ;
130025 / 000000,,153650                                       ;
130026 / 777777,,777777                                       ;
130027 / 476000,,036035         SETOM      036035             ;
130030 / 260140,,043761         PUSHJ    P,043761             ;
130031 / 254000,,000365          JRST      000365             ;
                       ; ROUTINE TO CONVERT THE POSITION VECTOR INTO A DATA DISK
                       ; LINE NUMBER. GOES FROM 1 TO 40.
                       POSLIN:
152435 / 000005,,000000                                       ;
152435 / 161305,,000000 POINT 11,05000000,21                  ;
130032 / 135740,,152435           LDB  AC3,152435             ;
130033 / 602740,,002000          TRNE  AC3,002000             ;; EXTEND SIGN BIT
151660 / 777777,,776000                                       ;
130034 / 434740,,151660            OR  AC3,151660             ;; BY ORING IN BITS
130035 / 336005,,000044         SKIPN        PPDD(DAT)        ;; IS THIS A DATA DISC DISPLAY?
130036 / 254000,,130044          JRST      130044             ;; NO, USE SEPARATE ROUTINE
                       POSLI2:
130037 / 221740,,000024         IMULI  AC3,000024             ;
130040 / 240740,,777767           ASH  AC3,777767             ;; THIS GIVES A NUMBER FROM -=19 TO =20
130041 / 213000,,000017         MOVNS      000017             ;; FOR DD, ASCENDING LINE NUMBERS GO DOWN THE SCREEN
130042 / 271740,,000024          ADDI  AC3,000024             ;; WE NOW HAVE A NUMBER FROM 1 TO =40 IN AC3
130043 / 263140,,000000          POPJ    P,                   ;
                       POSLI1:
130044 / 221740,,000014         IMULI  AC3,000014             ;; III ONLY HAS 24 LINES ON THE SCREEN
130045 / 240740,,777767           ASH  AC3,777767             ;
130046 / 213000,,000017         MOVNS         AC3             ;
130047 / 271740,,000014          ADDI  AC3,000014             ;
130050 / 263140,,000000          POPJ    P,                   ;
                       FBLK:
130051 / 261140,,000015          PUSH    P,000015             ;;FREE SOME BLOCKS FROM P.P.
                       FB1:
130052 / 200645,,000025          MOVE  AC1, GLCNT(DAT)        ;
130053 / 333006,,000016        SKIPLE      BLKTOT(DDB)        ;;DID WE FREE ENOUGH BLOCKS ?
130054 / 307640,,000001          CAIG  AC1,000001             ;;LESS THAN 1 GLITCH ON SCREEN ?
130055 / 254000,,130744          JRST      130744             ;;YES. RESTORE AC1 AND RETURN.
130056 / 260140,,127674         PUSHJ    P,127674             ;;MOVE PAPER ONE GLITCH.
130057 / 254000,,130052          JRST         FB1             ;
                       PR1FRE:
130060 / 200705,,000021          MOVE  AC2,TBLKPT(DAT)        ;;WE HAVE FINISHED WITH ANOTHER BLOCK. GET PTR. TO IT.
130061 / 201640,,000004         MOVEI  AC1,000004             ;;CODE BIT FOR GC MEANING `TOP BLK OF PAGE'
130062 / 412656,,000064        ANDCAM  AC1,BLKBTS(AC2)        ;;TURN IT OFF IN OLD TOP BLK.
130063 / 550716,,000065          HRRZ  AC2,  LINK(AC2)        ;;GET FORWARD PTR. (TO NEW TOP BLK.)
130064 / 311700,,022067          CAML  AC2,MEMSIZ             ;
130065 / 311700,,022066          CAML  AC2,022066             ;
130066 / 254000,,130110          JRST      130110             ;; GROSS ERROR!
                       PR1ER2:
130067 / 202705,,000021         MOVEM  AC2,TBLKPT(DAT)        ;
130070 / 436656,,000064          IORM  AC1,BLKBTS(AC2)        ;
130071 / 377005,,000011          SOSG      OUTCNT(DAT)        ;;HAVE WE ENOUGH UNUSED BLOCKS FOR A DISK OUTPUT ?
130072 / 260140,,130151         PUSHJ    P,130151             ;;YES. GET RID OF THEM.
130073 / 263140,,000000          POPJ    P,                   ;
                       PR1ER3:
130074 / 260140,,000316         PUSHJ    P,PUSHIT             ;
130075 / 260140,,044066         PUSHJ    P,DISMES             ;
130104 / 260140,,043761         PUSHJ    P,DISFLU             ;
130105 / 260140,,000347         PUSHJ    P,000347             ;
130106 / 260140,,000341         PUSHJ    P, POPIT             ;
130107 / 254200,,000365          HALT      000365             ;
                       PR1ERR:
130110 / 550746,,000015          HRRZ  AC3,PRGNUM(DDB)        ;
130111 / 260140,,000316         PUSHJ    P,PUSHIT             ;
130112 / 261140,,000017          PUSH    P,   AC3             ;
130113 / 261140,,000016          PUSH    P,   AC2             ;
130114 / 260140,,044066         PUSHJ    P,DISMES             ;
130122 / 262140,,000001           POP    P,   TAC             ;
130123 / 260140,,044170         PUSHJ    P,DISLOC             ;
130124 / 260140,,044066         PUSHJ    P,DISMES             ;
130127 / 262140,,000001           POP    P,   TAC             ;
130130 / 260140,,044170         PUSHJ    P,DISLOC             ;
130131 / 260140,,044076         PUSHJ    P,044076             ;
130132 / 260140,,000341         PUSHJ    P, POPIT             ;
130133 / 201640,,000020         MOVEI  AC1,000020             ;
130134 / 200745,,000020          MOVE  AC3,CBLKPT(DAT)        ;
                       PR1ER1:
130135 / 201717,,000000         MOVEI  AC2,      (AC3)        ;
130136 / 554757,,000065          HLRZ  AC3,  LINK(AC3)        ;
130137 / 311740,,022067          CAML  AC3,MEMSIZ             ;
130140 / 311740,,022066          CAML  AC3,022066             ;
130141 / 254000,,130074          JRST      PR1ER3             ;
130142 / 312745,,000021          CAME  AC3,TBLKPT(DAT)        ;
130143 / 367640,,130135          SOJG  AC1,PR1ER1             ;
130144 / 323640,,130074        JUMPLE  AC1,PR1ER3             ;
130145 / 200745,,000021          MOVE  AC3,TBLKPT(DAT)        ;
130146 / 506717,,000065          HRLM  AC2,  LINK(AC3)        ;
130147 / 201640,,000004         MOVEI  AC1,TBLKBT             ;
130150 / 254000,,130067          JRST      PR1ER2             ;
                       PPOUT:
                       ;WE GET HERE WHEN IT IS TIME TO OUTPUT PART OF A PIECE OF PAPER TO THE DISK.
130151 / 201740,,000001         MOVEI  AC3,000001             ;;NO. OF BLOCKS TO PUT OUT.
130152 / 202745,,000011         MOVEM  AC3,OUTCNT(DAT)        ;;RESET IT.
130153 / 200645,,000022          MOVE  AC1,FBLKPT(DAT)        ;;POINTER TO  FIRST BLK IN CORE.
130154 / 334700,,000015         SKIPA  AC2,   AC1             ;
130155 / 550716,,000065          HRRZ  AC2,  LINK(AC2)        ;;GO TO NEXT BLOCK.
130156 / 367740,,130155          SOJG  AC3,130155             ;;GO TO LAST BLOCK TO BE OUTPUT.
                       ;;SINCE CROCKISH R. SAUNDERS HAS NO DISK CODE YET, WE JUST RETURN THE BLOCKS TO FREE STORAGE.
130157 / 550756,,000065          HRRZ  AC3,  LINK(AC2)        ;;NEXT BLK.
130160 / 552745,,000022         HRRZM  AC3,FBLKPT(DAT)        ;;MAKE FBLKPT POINT TO NEW FIRST BLOCK IN CORE.
130161 / 506257,,000065          HRLM  DAT,  LINK(AC3)        ;;MAINTAIN REV LINK
130162 / 402016,,000065         SETZM        LINK(AC2)        ;;ZERO LINK IN LAST BLOCK TO BE FREED.
                       SETRST:
130163 / 260140,,131376         PUSHJ    P,131376             ;;FREE THE BLOCKS.
                       WHORST:
130164 / 336006,,000040         SKIPN         III(DDB)        ;;IS IT AN III?
130165 / 263140,,000000          POPJ    P,                   ;;NO.
                       PPRST:
130166 / 550746,,000015          HRRZ  AC3,PRGNUM(DDB)        ;;GET PROGRAM NUMBER
130167 / 201706,,000013         MOVEI  AC2, PSELB(DDB)        ;;YES. INVENT A RESTARTING JMP FOR IT AND
130170 / 505700,,000020          HRLI  AC2,000020             ;; PLACE IN RSTTBL SO PRGM WILL GET STARTED AT
130171 / 206717,,012601         MOVSM  AC2,RSTTBL(AC3)        ;;AT ITS BEGINNING NEXT TIME.
130172 / 263140,,000000          POPJ    P,                   ;
                       ;A SIMPLE MESSAGE PRINTER. JSA ITEM,ERRP WITH
                       ;BYTE PTR. TO TEXT FOLOWING THE JSA .
                       ERRP2:
130173 / 554246,,000006          HLRZ  DAT,PPCALL(DDB)        ;;GET P OF P 0.
130174 / 500240,,000006           HLL  DAT,000006             ;; COPY OVER THE DD FLAG IF ANY
130175 / 260140,,000316         PUSHJ    P,PUSHIT             ;
130176 / 200213,,024061          MOVE    J,   JOB(PID)        ;
130177 / 260140,,131104         PUSHJ    P,131104             ;; RESET THE PAGE PRINTER
130200 / 200203,,777765          MOVE    J,777765(P)          ;
130201 / 200044,,000000          MOVE  TAC,      (ITEM)       ;;GET BYTE POINTER TO MESSAGE.
                       ERRP3:
130202 / 700600,,001004          CONO   PI,001004             ;;TURN OFF RPH
130203 / 260140,,127415         PUSHJ    P,127415             ;;TYPE A CHAR.
130204 / 700600,,002004          CONO   PI,002004             ;;TURN ON RPH
130205 / 326400,,130202         JUMPN  CHR,130202             ;;LOOP UNTIL FIRST NULL CHAR.
130206 / 260140,,000341         PUSHJ    P, POPIT             ;
130207 / 267204,,000001           JRA ITEM,     1(ITEM)       ;
                       ;;HERE ARE UUO LEVEL ROUTINES FOR MANIPULATING THE PAGE PRINTER.
                       ;;THESE ROUTINES ARE ENTERED WITH STANDARD UUO LEVEL
                       ;; SETUP OF AC'S UUO AND ITEM, WITH
                       ;; DDB (≡DEVDAT) POINTING TO DPY PROGRAM HEADER.
                       ;;PPFIND FINDS PIECE OF PAPER INDICATED BY (UUO); CREATES IT IF NECESSARY.
                       ;; RETURNS WITH DAT POINTING TO P. OF P. CONTROL BLOCK.
                       PPFND1:
130210 / 500240,,000006           HLL  DAT,000006             ;; PICK UP DD FLAG BIT
130211 / 554706,,000006          HLRZ  AC2,PPCALL(DDB)        ;;GET PTR. TO FIRST P. OF P.
130212 / 550040,,000014          HRRZ  TAC,000014             ;;NO. OF PIECE WE ARE LOOKING FOR.
130213 / 301040,,000020          CAIL  TAC,000020             ;;BETTER NOT BE TOO HIGH.
130214 / 254000,,130245          JRST      130245             ;;LOSE, LOSE.
                       PFL2:
130215 / 542700,,000005          HRRM  AC2,000005             ;;LOOK AT NEXT P. OF PAPER.
130216 / 316045,,000012          CAMN  TAC,  PPNO(DAT)        ;;IS IT THE ONE WE WANT ?
130217 / 263140,,000000          POPJ    P,                   ;;YES.
130220 / 550705,,000065          HRRZ  AC2,  LINK(DAT)        ;;GET LINK TO NEXT ONE.
130221 / 326700,,130215         JUMPN  AC2,130215             ;;LOOP IF THERE IS A NEXT ONE.
130222 / 263140,,000000          POPJ    P,                   ;
                       PPFND:
130223 / 260140,,130210         PUSHJ    P,130210             ;;FIND INDICATED P OF P.
130224 / 326700,,037403         JUMPN  AC2,037403             ;;RETURN IF IT EXISTS.
130225 / 261140,,000005          PUSH    P,000005             ;; SAVE POINTER TO LAST PROGRAM HEADER
130226 / 261140,,000001          PUSH    P,000001             ;; SAVE NUMBER OF DESIRED PIECE OF PAPER
130227 / 574046,,000015          HLRE  TAC,PRGNUM(DDB)        ;; PICK UP DPY NUMBER FOR PPINIT
130230 / 260140,,127200         PUSHJ    P,127200             ;;IT DOESN'T. MAKE A NEW PIECE APPEAR.
130231 / 265600,,126406           JSP  UUO,126406             ;; NOT THERE, GHASTLY ERROR
130232 / 262155,,000012           POP    P,  PPNO(AC1)        ;;MAKE IT HAVE RIGHT NO.
130233 / 262140,,000005           POP    P,000005             ;; GET BACK POINTER TO LAST PIECE OF PAPER
130234 / 542645,,000065          HRRM  AC1,  LINK(DAT)        ;;LINK IT TO OTHER PIECES.
130235 / 516255,,000065         HRLZM  DAT,  LINK(AC1)        ;;PUT IN ITS BACKWARD LINK.
130236 / 552315,,000010         HRRZM  DDB,HEDPTR(AC1)        ;;GIVE IT PTR. TO PRGM. HEAD.
130237 / 200745,,000007          MOVE  AC3,PPRJMP(DAT)        ;;GET LINKING (I. E. RETURN) JMP FROM LAST P OF P...
130240 / 202755,,000007         MOVEM  AC3,PPRJMP(AC1)        ;;GIVE IT TO NEW PIECE...
130241 / 506645,,000007          HRLM  AC1,PPRJMP(DAT)        ;;.. AND MAKE LAST PIECE CALL NEW ONE.
130242 / 202640,,000005         MOVEM  AC1,   DAT             ;
130243 / 500240,,000006           HLL  DAT,000006             ;; PUT IN TYPE BITS
130244 / 263140,,000000          POPJ    P,                   ;
                       PPFER:
                       ;PRINT H. S. MESSAGE.
130245 / 266200,,014113           JSA ITEM,  ERRP             ;
130246 / 000000,,153655                                       ;
130246 / 440700,,153655 POINT 7,00153655,                     ;
130247 / 254000,,043340          JRST      043340             ;;NOW GIVE STANDARD JUNK AND STOP JOB.
                       ;;MORE PP ROUTINES.
                       PPSEL1:
130250 / 260140,,130223         PUSHJ    P,130223             ;;LOCATE P. OF P. INDICATED BY UUO.
130251 / 552246,,000017         HRRZM  DAT, CURPP(DDB)        ;;MAKE IT THE CURRENT ONE.
130252 / 201600,,400000         MOVEI  UUO,400000             ;;PREPARE TO ACTIVATE IT,
130253 / 210045,,000012          MOVN  TAC,  PPNO(DAT)        ;; BY GENERATING PARAM. FOR
130254 / 242601,,000000           LSH  UUO,      (TAC)        ;;CALL ON PPACT.
130255 / 263140,,000000          POPJ    P,                   ;
                       PPREL:
130256 / 606600,,777777          TRNN  UUO,777777             ;;FLUSH PP WHOSE NUMBER IS IN UUO (RIGHT)
130257 / 263140,,000000          POPJ    P,                   ;;BUT NOT IF IT'S PP ZERO
130260 / 260140,,130210         PUSHJ    P,130210             ;;FIND P OF P
130261 / 322700,,037403         JUMPE  AC2,037403             ;;SAVE SOME TIME IF THERE IS NONE
130262 / 261140,,000006          PUSH    P,   DDB             ;
130263 / 260140,,130377         PUSHJ    P,130377             ;; WAIT FOR ANY TYPEOUT TO FINISH BEFORE FLUSHING PAGE
130264 / 262140,,000006           POP    P,   DDB             ;
130265 / 260140,,130210         PUSHJ    P,130210             ;;NOW SEE IF P OF P IS STILL THERE
130266 / 322700,,037403         JUMPE  AC2,037403             ;;RETURN IF NOT.
130267 / 200645,,000065          MOVE  AC1,  LINK(DAT)        ;;SIGH.  GET FWD AND BWD LINKS FROM CTRL. BLK.
130270 / 602640,,777777          TRNE  AC1,777777             ;;UNLESS CTRL. BLK IS LAST ONE,
130271 / 502655,,000065          HLLM  AC1,  LINK(AC1)        ;;..UPDATE BWD LINK OF NEXT ONE.
130272 / 207000,,000015         MOVSS         AC1             ;
130273 / 546655,,000065          HLRM  AC1,  LINK(AC1)        ;;NOW FWD LINK OF PREVIOUS ONE (AREN'T LINKED LISTS FUN ?)
130274 / 200745,,000007          MOVE  AC3,PPRJMP(DAT)        ;;TAKE LINKING JMP FROM THIS BLK...
130275 / 202755,,000007         MOVEM  AC3,PPRJMP(AC1)        ;;..AND GIVE IT TO PREVIOUS ONE.
130276 / 327240,,130305         JUMPG  DAT,130305             ;; DON'T ERASE IF III, WILL BE DONE AUTOMATICALLY
130277 / 260140,,130032         PUSHJ    P,130032             ;; GET FIRST LINE NUMBER OF PAGE
130300 / 261140,,000017          PUSH    P,   AC3             ;
130301 / 261145,,000043          PUSH    P,   GLW(DAT)        ;; ERASE ALL THE WAY TO THE LAST LINE
130302 / 370003,,000000           SOS            (P)          ;
130303 / 260140,,130475         PUSHJ    P, PPERS             ;
151774 / 000002,,000002           XWD 2,2                     ;
130304 / 274140,,151774           SUB    P,151774             ;; NORMALIZE THE STACK
                       PPREL3:
130305 / 202305,,000065         MOVEM  DDB,  LINK(DAT)        ;;SINCE WE ARE LINKED OUT, WE CAN USE THIS TO
                       ;SAVE DDB IN CASE OF A CLOCK CALL LATER
                       PPREL4:
130306 / 200305,,000065          MOVE  DDB,  LINK(DAT)        ;;MAKE SURE DDB IS SET UP
130307 / 336005,,000047         SKIPN       PPENQ(DAT)        ;;ANYTHING HAPPENING HERE?
130310 / 332005,,000050         SKIPE       PPNQT(DAT)        ;
130311 / 254000,,130325          JRST      130325             ;;YES, DON'T RELEASE IT UNTIL IT IS DONE
130312 / 200640,,000005          MOVE  AC1,000005             ;;NOW FREE THE CTRL BLK.
130313 / 260140,,127313         PUSHJ    P,CGIVFS             ;
130314 / 200645,,000022          MOVE  AC1,FBLKPT(DAT)        ;;ALSO FREE THE PROGRAM BLOCKS.
130315 / 260140,,131376         PUSHJ    P, FREEL             ;
130316 / 550645,,000036          HRRZ  AC1,   PTB(DAT)        ;;GIVE BACK TABLE OF END OF LINE POINTERS
130317 / 260140,,074163         PUSHJ    P,FSGIVE             ;
                       PPREL2:
130320 / 550640,,000005          HRRZ  AC1,   DAT             ;
130321 / 312646,,000017          CAME  AC1, CURPP(DDB)        ;;HAVE WE JUST DELETED SELECTED P OF P ?
                       ;USED TO BE CAMN DCS/RPH
130322 / 263140,,000000          POPJ    P,                   ;
130323 / 201600,,000000         MOVEI  UUO,                   ;;YES. SELECT PP 0.
130324 / 254000,,130332          JRST      PPSELN             ;
                       CLKREL:
130325 / 505240,,130306          HRLI  DAT,PPREL4             ;
130326 / 254000,,132555          JRST      DPYTIM             ;
                       ;;PPSEL <N>  MAKES P. OF P. <N> THE CURRENT ONE AND TURNS IT ON.
                       PPSEL:
130327 / 260140,,130377         PUSHJ    P,130377             ;; WAIT FOR TYPEOUT TO FINISH
130330 / 260140,,131014         PUSHJ    P,PRGFND             ;
130331 / 263140,,000000          POPJ    P,                   ;; NO DPY HERE, JUST IGNORE
                       PPSELN:
130332 / 260140,,130250         PUSHJ    P,130250             ;;FIND IT, SELECT IT AND FALL INTO PPACT.
                       ;;PPACT X TURNS P OF P'S ON AND OFF ACCORDING TO BITS IN X;
                       ;;  BIT N+18 CORRESPONDS TO P. OF P. N.
                       PPACT:
130333 / 201640,,000020         MOVEI  AC1,000020             ;;JMP OPCODE FOR DPY.
130334 / 201700,,000014         MOVEI  AC2,DISNOP             ;
130335 / 554746,,000006          HLRZ  AC3,PPCALL(DDB)        ;;GET FIRST P OF P.
                       PACTL1:
130336 / 200040,,000014          MOVE  TAC,000014             ;;MAKE COPY OF THE X BITS.
130337 / 241077,,000012           ROT  TAC,@  PPNO(AC3)       ;;GET BIT FOR THIS P OF P INTO 18.
130340 / 542717,,000001          HRRM  AC2, TPJMP(AC3)        ;;ASSUME BIT IS OFF.
130341 / 602040,,400000          TRNE  TAC,400000             ;;IS IT ?
130342 / 542657,,000001          HRRM  AC1, TPJMP(AC3)        ;;NO. ACTIVATE THE P OF P.
130343 / 200106,,000021          MOVE TAC1,PRGACT(DDB)        ;; PICK UP CURRENT ACTIVATION BITS
130344 / 241137,,000012           ROT TAC1,@  PPNO(AC3)       ;; PUT BIT FOR THIS DISPLAY IN B18
130345 / 430100,,000001           XOR TAC1,000001             ;; ARE THEY DIFFERENT?
130346 / 602100,,400000          TRNE TAC1,400000             ;
130347 / 254000,,130354          JRST      130354             ;; YES, MARK IT AS VIRGIN IF APPEARING, ERASE IF DISSAPEARING
                       PACTL3:
130350 / 550757,,000065          HRRZ  AC3,  LINK(AC3)        ;;GET NEXT P OF P HEADER.
130351 / 326740,,130336         JUMPN  AC3,130336             ;;LOOP IF THERE IS ONE.
130352 / 542606,,000021          HRRM  UUO,PRGACT(DDB)        ;;ALL DONE. RECORD NEW STATE OF ACTIVATION.
130353 / 263140,,000000          POPJ    P,                   ;
                       PACTL2:
130354 / 606040,,400000          TRNN  TAC,400000             ;; NOW, ARE WE APPEARING OR DISSAPEARING?
130355 / 254000,,130360          JRST      130360             ;; DISSAPEARING, GO ERASE SCREEN
130356 / 476017,,000051         SETOM      PPVIRG(AC3)        ;; APPEARING, NOTE A VIRGIN SCREEN
130357 / 254000,,130350          JRST      PACTL3             ;
                       PACTL4:
130360 / 332017,,000051         SKIPE      PPVIRG(AC3)        ;; IS THERE ANYTHING THERE?
130361 / 254000,,130350          JRST      130350             ;; NO, NOTHING TO ERASE
130362 / 261140,,000005          PUSH    P,000005             ;; SAVE PAGE PRINTER CONTROL BLOCK ADDRESS
130363 / 200240,,000017          MOVE  DAT,000017             ;; MAKE US THE ONE
130364 / 260140,,130032         PUSHJ    P,130032             ;; GET BOUNDS OF PAGE IN LINE NUMBERS
130365 / 261140,,000017          PUSH    P,000017             ;; THAT IS FIRST LINE
130366 / 261145,,000043          PUSH    P,   GLW(DAT)        ;; CURRENT LINE IS LAST LINE
130367 / 370003,,000000           SOS            (P)          ;
130370 / 260140,,130475         PUSHJ    P,130475             ;; CAUSE ERASURE TO HAPPEN
151774 / 000002,,000002           XWD 2,2                     ;
130371 / 274140,,151774           SUB    P,151774             ;
130372 / 200740,,000005          MOVE  AC3,000005             ;; PUT PAGE PRINTER CONTROL BLOCK ADDRESS BACK
130373 / 262140,,000005           POP    P,   DAT             ;
130374 / 201640,,000020         MOVEI  AC1,DISJMP             ;
130375 / 201700,,000014         MOVEI  AC2,DISNOP             ;
130376 / 254000,,130350          JRST      PACTL3             ;
                       ; ROUTINE TO WAIT FOR TYPEOUT TO FINISH
                       PPWAIT:
130377 / 700700,,077400         CONSZ   PI,077400             ;; CAN'T DO THIS AT INTERRUPT LEVEL
130400 / 263140,,000000          POPJ    P,                   ;
130401 / 200200,,024061          MOVE ITEM,   JOB             ;
130402 / 200304,,027320          MOVE  DDB,JBTLIN(ITEM)       ;;FIND GUY'S TTY.
151674 / 777777,,777777                                       ;
130403 / 312300,,151674          CAME  DDB,151674             ;; IS HE DETATCHED?
130404 / 336306,,032347         SKIPN  DDB,TTYTAB(DDB)        ;; GET TTY DDB, DOES HE EXIST?
130405 / 263140,,000000          POPJ    P,                   ;; HMM. WELL, BE THAT WAY!
130406 / 200046,,000002          MOVE  TAC,DEVIOS(DDB)        ;
130407 / 607040,,010000          TLNN  TAC,  TOIP             ;
130410 / 263140,,000000          POPJ    P,                   ;
130411 / 260140,,142172         PUSHJ    P,142172             ;; WAIT FOR THE TYPEOUT TO TERMINATE
130412 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;
130413 / 263140,,000000          POPJ    P,                   ;
                       ;;PPYPOS Y MAKES THE CURRENT P OF P START AT Y COORD. Y.
                       PPYPOS:
130414 / 400640,,000000          SETZ  AC1,                   ;
130415 / 137640,,126345           DPB  AC1,126345             ;; NOTE Y-POSITION SE BY UUO
130416 / 260140,,130032         PUSHJ    P,130032             ;; GET LINE NUMBER OF CURRENT LINE
130417 / 261140,,000017          PUSH    P,000017             ;; AND PUSH IT
130420 / 261145,,000043          PUSH    P,   GLW(DAT)        ;; SAVE BOTTOM OF PAGE
                       PPYPO1:
130421 / 476005,,000046         SETOM       PPINV(DAT)        ;; NOTE POINTERS ARE BEING CHANGED
152435 / 000005,,000000                                       ;
152435 / 161305,,000000 POINT 11,05000000,21                  ;
130422 / 137600,,152435           DPB  UUO,152435             ;;PUT NEW Y COORD. INTO POSITION VECTOR
130423 / 260140,,130032         PUSHJ    P,130032             ;; NOW PICK UP POSITION COLUMN
130424 / 200640,,000017          MOVE  AC1,   AC3             ;
130425 / 200700,,000017          MOVE  AC2,   AC3             ;
130426 / 210743,,777777          MOVN  AC3,777777(P)          ;
130427 / 270740,,000015           ADD  AC3,000015             ;; UPDATE VERTICLE POSITION
130430 / 322740,,130446         JUMPE  AC3,130446             ;; IF NO DIFFERENCE, WE DON'T HAVE TO MOVE LINE POINTER TABLE
130431 / 202705,,000034         MOVEM  AC2,   LLW(DAT)        ;; MAKE SURE WE START AT THE LOGICAL TOP OF PAGE
130432 / 260140,,130526         PUSHJ    P,130526             ;; MOVE POINTERS
130433 / 272745,,000033          ADDM  AC3,  VPOS(DAT)        ;
130434 / 402005,,000046         SETZM       PPINV(DAT)        ;; NOTE POINTERS ARE VALID NOW
130435 / 325240,,130446        JUMPGE  DAT,130446             ;; IF III, LEAVE NOW
130436 / 326740,,130451         JUMPN  AC3,130451             ;; IF WE ARE MOVING DOWN, WE HAVE TO ERASE EXPLICITLY
                       PPYPO4:
151774 / 000002,,000002           XWD 2,2                     ;
130437 / 274140,,151774           SUB    P,151774             ;; OTHERWISE, WE CAN PRETEND WE ARE GLITCHING AND
                       REFPAG:
130440 / 325240,,037403        JUMPGE  DAT,037403             ;; LEAVE IF III
130441 / 261140,,000005          PUSH    P,000005             ;; SAVE THE POINTER TO THE PAGE PRINTER CONTROL BLOCK
130442 / 550245,,000010          HRRZ  DAT,HEDPTR(DAT)        ;; PUT DPY PROGRAM HEADER ADDRESS IN DAT
130443 / 260140,,133016         PUSHJ    P,133016             ;; GET IT DONE AUTOMATICALLY.
130444 / 262140,,000005           POP    P,000005             ;; GET BACK OUR PAGE PRINTER CONTROL BLOCK ADD
130445 / 263140,,000000          POPJ    P,                   ;
                       PPYPO3:
151774 / 000002,,000002           XWD 2,2                     ;
130446 / 274140,,151774           SUB    P,151774             ;; RESTORE THE STACK
130447 / 402005,,000046         SETZM       PPINV(DAT)        ;; POINTERS ARE OK NOW
130450 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE WHEN THE APPEARANCE OF THE PAGE HAS CHANGED ENOUGH
                       ; SO THAT THE PAGE HAS TO BE REFRESHED.
                       PPYPO2:
130451 / 272745,,000043          ADDM  AC3,   GLW(DAT)        ;; UPDATE THE NUMBER OF THE LAST LINE WRITTEN
130452 / 550645,,000001          HRRZ  AC1, TPJMP(DAT)        ;; PICK UP JUMP TO TEXT
130453 / 336005,,000051         SKIPN      PPVIRG(DAT)        ;; DON'T ERASE A VIRGIN SCREEN!
130454 / 306640,,000014          CAIN  AC1,000014             ;; IS IT REALLY A JUMP?
130455 / 254000,,130437          JRST      130437             ;; NO, DON'T WRITE ON IT
130456 / 200703,,000000          MOVE  AC2,      (P)          ;; PICK UP FINISHING LINE OF TRANSFER
130457 / 274703,,777777           SUB  AC2,777777(P)          ;; GET LENGTH OF PAGE
130460 / 214640,,000017          MOVM  AC1,000017             ;; GET MAGNITUDE OF TRAVEL
130461 / 311640,,000016          CAML  AC1,   AC2             ;
130462 / 254000,,130471          JRST      130471             ;; IF TRAVEL LARGER THAN PAGE, ERASE ENTIRE PAGE
130463 / 274700,,000015           SUB  AC2,000015             ;; OTHERWISE, ERASE ONLY NON-OVERLAPPED PART
130464 / 210640,,000016          MOVN  AC1,   AC2             ;
130465 / 337000,,000017         SKIPG      000017             ;; IF GOING UP,
130466 / 254000,,130473          JRST      130473             ;; THEN ERASE FROM THE MIDDLE DOWN TO THE BOTTOM
130467 / 272643,,000000          ADDM  AC1,      (P)          ;
130470 / 370003,,000000           SOS            (P)          ;
                       PPYPO5:
130471 / 260140,,130475         PUSHJ    P, PPERS             ;
130472 / 254000,,130437          JRST      PPYPO4             ;
                       PPYPDN:
130473 / 272703,,777777          ADDM  AC2,777777(P)          ;
130474 / 254000,,130471          JRST      PPYPO5             ;
                       ; ROUTINE TO ERASE PARTS OF DATA DISK SCREEN
                       ; CALL WITH STARTING LINE OF ERASURE AT -2(P)
                       ; ENDING LINE AT -1(P)
                       PPERS:
130475 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
130476 / 261140,,000015          PUSH    P,000015             ;; SAVE ITS ADDRESS
130477 / 260140,,127323         PUSHJ    P,127323             ;; GET ANOTHER ONE
130500 / 262140,,000001           POP    P,000001             ;; GET BACK THE ADDRESS OF THE FIRST ONE
130501 / 200703,,777776          MOVE  AC2,777776(P)          ;; PICK UP STARTING LINE OF TRANSFER
130502 / 200743,,777777          MOVE  AC3,777777(P)          ;; AND ENDING LINE OF TRANSFER
130503 / 315740,,000016         CAMGE  AC3,000016             ;; IF THE FINISHING LINE IS ABOVE THE STARTING LINE . . .
130504 / 200740,,000016          MOVE  AC3,000016             ;; THEN ONLY ERASE ONE LINE
130505 / 506715,,000001          HRLM  AC2, QLINE(AC1)        ;; MAKE THIS THE STARTING LINE NUMBER OF THE ERASURE
130506 / 506701,,000001          HRLM  AC2, QLINE(TAC)        ;
130507 / 542755,,000001          HRRM  AC3, QLINE(AC1)        ;
130510 / 542741,,000001          HRRM  AC3, QLINE(TAC)        ;
130511 / 506255,,000000          HRLM  DAT,      (AC1)        ;; PUT IN PAGE PRINTER CONTROL BLOCK ADDRESS
130512 / 506241,,000000          HRLM  DAT,      (TAC)        ;
130513 / 201700,,134373         MOVEI  AC2,134373             ;; CALL THE ERASE CODE
130514 / 542715,,000000          HRRM  AC2,      (AC1)        ;
130515 / 542701,,000000          HRRM  AC2,      (TAC)        ;
130516 / 402001,,000002         SETZM      QFIELD(TAC)        ;; MAKE THE FIRST TASK GO OUT ON THE FIRST FIELD
130517 / 476015,,000002         SETOM      QFIELD(AC1)        ;; AND THE SECOND TASK GO OUT ON THE SECOND FIELD
130520 / 402001,,000006         SETZM      QCOUNT(TAC)        ;; NOTE THAT WE DON'T CARE TO BE AWAKENED
130521 / 402015,,000006         SETZM      QCOUNT(AC1)        ;
130522 / 261140,,000001          PUSH    P,000001             ;; SAVE THE ADDRESS OF ONE OF THE BLOCKS
130523 / 260140,,133426         PUSHJ    P,133426             ;; QUEUE THE BLOCK
130524 / 262140,,000015           POP    P,000015             ;; GET BACK THE ADDRESS OF THE OTHER
130525 / 254000,,133426          JRST      133426             ;; QUEUE IT UP TOO
                       ; HERE IS A ROUTINE TO MOVE THE LINE POINTER TABLE AROUND
                       ; IN A CIRCULAR FASHION, SO AS NOT TO LOSE ANY POINTERS.
                       ; CALL WITH NUMBER OF LINES TO BE MOVED IN AC3. NEGATIVE
                       ; MEANS SCREEN IS MOVING UP, POSITIVE MEANS IT IS MOVING DOWN.
                       ; NUMBER IS ASSUMED TO BE -=79 TO =79
                       PTMOVE:
130526 / 261140,,000017          PUSH    P,000017             ;; SAVE COUNT
130527 / 213000,,000017         MOVNS         AC3             ;
130530 / 270745,,000027           ADD  AC3, PTBEG(DAT)        ;; ADD IN TO CURRENT INCREMENT
                       PTMOV2:
130531 / 301740,,000120          CAIL  AC3,000120             ;; IS THE INCREMENT OUT OF RANGE?
130532 / 254000,,130540          JRST      130540             ;; YES, BRING IT BACK IN
                       PTMOV4:
130533 / 335000,,000017        SKIPGE      000017             ;; SAME FOR NEGATIVE
130534 / 254000,,130542          JRST      PTMOV3             ;
130535 / 202745,,000027         MOVEM  AC3, PTBEG(DAT)        ;
130536 / 262140,,000017           POP    P,   AC3             ;
130537 / 263140,,000000          POPJ    P,                   ;
                       PTMOV1:
130540 / 275740,,000120          SUBI  AC3,000120             ;
130541 / 254000,,130531          JRST      PTMOV2             ;
                       PTMOV3:
130542 / 271740,,000120          ADDI  AC3,000120             ;
130543 / 254000,,130533          JRST      PTMOV4             ;
                       ;;PPXSIZ <N>B26 ! <M>  SETS CURRENT P OF P TO HAVE N GLITCHES OF M LINES.
                       PPXSIZ:
130544 / 400640,,000000          SETZ  AC1,                   ;
130545 / 137640,,126344           DPB  AC1,126344             ;; NOTE THAT PAGE SIZE SET BY UUO
130546 / 200645,,000025          MOVE  AC1, GLCNT(DAT)        ;; PICK UP NUMBER OF GLITCHES SO FAR ON THIS PAGE
130547 / 220645,,000023          IMUL  AC1,   DEL(DAT)        ;; MULTIPLY BY NUMBER OF LINES IN PER GLITCH
130550 / 274645,,000024           SUB  AC1,DELCNT(DAT)        ;; ADD IN NUMBER OF LINES SO FAR IN LAST GLITCH
130551 / 261140,,000015          PUSH    P,000015             ;; AND SAVE THIS
152333 / 000000,,000014                                       ;
152333 / 111100,,000014 POINT 9,00000014,26                   ;
130552 / 135640,,152333           LDB  AC1,152333             ;;NO. OF GLITCHES REQUESTED.
152101 / 000000,,000014                                       ;
152101 / 001100,,000014 POINT 9,00000014,35                   ;
130553 / 135700,,152101           LDB  AC2,152101             ;;NO. OF LINES/GLITCH.
130554 / 220700,,000015          IMUL  AC2,000015             ;;TOTAL SIZE OF REQUESTED PAGE, IN LINES.
130555 / 307700,,000001          CAIG  AC2,000001             ;; MUST END UP 2 OR MORE LINES LONG
130556 / 254000,,130603          JRST        PPX1             ;
130557 / 201740,,000050         MOVEI  AC3,000050             ;; DATA DISK TAKES 40 LINES
130560 / 307717,,000000          CAIG  AC2,      (AC3)        ;;MORE THAN 25 LINES ?
130561 / 303640,,000061         CAILE  AC1,000061             ;;TOO MANY GLITCHES ?
130562 / 254000,,130576          JRST      130576             ;;YES. LOSE.
                       PPX2:
130563 / 202645,,000026         MOVEM  AC1, PGSIZ(DAT)        ;;UPDATE GLITCHES/PAGE.
152104 / 000005,,000023                                       ;
152104 / 001105,,000023 POINT 9,05000023,35                   ;
130564 / 137600,,152104           DPB  UUO,152104             ;;UPDATE GLITCH SIZE.
130565 / 262140,,000015           POP    P,000015             ;; GET NUMBER OF LINES ON PAGE
130566 / 230645,,000023          IDIV  AC1,   DEL(DAT)        ;; SEE HOW MANY NEW GLITCHES THAT MAKES
130567 / 202645,,000025         MOVEM  AC1, GLCNT(DAT)        ;; THIS IS OUR NEW GLITCH COUNT
130570 / 350005,,000025           AOS       GLCNT(DAT)        ;; MAKE IT GO FROM 1 TO PGSIZ
130571 / 274705,,000023           SUB  AC2,   DEL(DAT)        ;; MAKE INTO NUMBER OF LINES TO GO
130572 / 212705,,000024         MOVNM  AC2,DELCNT(DAT)        ;; SET NUMBER OF LINES TO GO IN CURRENT GLITCH
130573 / 200645,,000025          MOVE  AC1, GLCNT(DAT)        ;; PICK UP NUMBER OF GLITCHES ON THIS PAGE
130574 / 260140,,127717         PUSHJ    P,127717             ;;.. AND GO ADJUST TO NEW SIZE.
130575 / 254000,,130440          JRST      130440             ;; REFRESH NEW PAGE
                       PPXERR:
130576 / 700700,,077400         CONSZ   PI, 77400             ;
130577 / 254000,,130744          JRST       POPAJ             ;
130600 / 266200,,014113           JSA ITEM,  ERRP             ;
130601 / 000000,,154021                                       ;
130601 / 440700,,154021 POINT 7,00154021,                     ;
130602 / 254000,,043340          JRST      UUOERR             ;
                       PPX1:
130603 / 201600,,000002         MOVEI  UUO,000002             ;; GIVE HIM A MINIMUM SIZE PAGE
130604 / 201640,,000001         MOVEI  AC1,     1             ;
130605 / 254000,,130563          JRST        PPX2             ;
                       ;;CLKSER	;THIS IS DPYSER'S OWN PRIVATE CLOCK QUEUER.
                       DPYCLK:
130606 / 326540,,130611         JUMPN  PID,130611             ;
151724 / 000000,,000035                                       ;
130607 / 261140,,151724          PUSH    P,151724             ;
130610 / 262140,,036260           POP    P,036260             ;
130611 / 332640,,014116         SKIPE  AC1,014116             ;;ANYTHING IN THE FREE STG. WAIT LIST ?
130612 / 260140,,130730         PUSHJ    P,130730             ;;YES. GO PUT IT ON FREE STG. LIST.
130613 / 700600,,000400          CONO   PI,000400             ;;...PEOPLE MAY USE FSWT2H AT INT. LEVEL...
130614 / 200640,,014117          MOVE  AC1,014117             ;;MOVE THINGS UP FROM THE SECOND-LEVEL WAIT LIST.
130615 / 202640,,014116         MOVEM  AC1,FSWTHD             ;
130616 / 402000,,014117         SETZM      FSWT2H             ;
130617 / 700600,,000200          CONO   PI,  PION             ;
130620 / 200640,,014126          MOVE  AC1, FSW2C             ;
130621 / 202640,,014123         MOVEM  AC1,  FSWC             ;
130622 / 402000,,014126         SETZM       FSW2C             ;
130623 / 326540,,130626         JUMPN  PID,130626             ;
151725 / 000000,,000036                                       ;
130624 / 261140,,151725          PUSH    P,151725             ;
130625 / 262140,,036260           POP    P,036260             ;
130626 / 333000,,035275        SKIPLE      035275             ;; IF NEW WHO JUST UPDATED, SEND IT OUT NOW
130627 / 260140,,130663         PUSHJ    P,130663             ;; YES, QUEUE UP A REQUEST
130630 / 326540,,130633         JUMPN  PID,130633             ;
151726 / 000000,,000037                                       ;
130631 / 261140,,151726          PUSH    P,151726             ;
130632 / 262140,,036260           POP    P,036260             ;
130633 / 250140,,012721          EXCH    P,012721             ;;YES. GET OUR OWN PDL.
130634 / 476000,,014124         SETOM      014124             ;;FLAG THAT WE ARE AT CLOCK LEVEL.
130635 / 356000,,013625          AOSN      013625             ;;ARE WE IN A WAIT ?
130636 / 263140,,000000          POPJ    P,                   ;;YES. RETURN TO THE WAITING ROUTINE.
130637 / 336020,,013624         SKIPN      @013624            ;;ANY REQUESTS IN THE CLK QUEUE ?
130640 / 254000,,130660          JRST      130660             ;;NO. SEE HOW LITTLE TIME WE HAVE WASTED !!
130641 / 550040,,013624          HRRZ  TAC,013624             ;;GET PTR. TO CURRENT END OF QUEUE.
130642 / 202040,,014125         MOVEM  TAC,014125             ;;SAVE IT.
                       CLKL1:
130643 / 700600,,000400          CONO   PI,000400             ;;NO INTERRUPTS, PLEASE.
130644 / 200260,,013624          MOVE  DAT,@013624            ;;GET LAST REQUEST FROM QUEUE.
130645 / 370000,,013624           SOS      013624             ;;MOVE POINTER BACK BY 1.
130646 / 250241,,000000          EXCH  DAT,      (TAC)        ;;PICK UP THE REQUEST WE ARE SERVICING..
130647 / 700600,,000200          CONO   PI,000200             ;;(DIDN'T SEE A THING, DID YOU ?)
130650 / 554040,,000005          HLRZ  TAC,   DAT             ;
130651 / 260141,,000000         PUSHJ    P,      (TAC)        ;;..AND SERVICE IT, ALREADY.
130652 / 326540,,130655         JUMPN  PID,130655             ;
151726 / 000000,,000037                                       ;
130653 / 261140,,151726          PUSH    P,151726             ;
130654 / 262140,,036260           POP    P,036260             ;
130655 / 370040,,014125           SOS  TAC,014125             ;;NOW GET PTR. TO NEXT LOWER ONE..
130656 / 301040,,013024          CAIL  TAC,013024             ;;ARE WE AT BOTTOM OF QUEUE ?
130657 / 254000,,130643          JRST      130643             ;;NO. BACK FOR MORE.
                       CLKRTN:
130660 / 250140,,012721          EXCH    P,012721             ;;PUT BACK THE RIGHT PDL.
130661 / 402000,,014124         SETZM      014124             ;;NO LONGER IN CLOCK LEVEL CODE.
130662 / 263140,,000000          POPJ    P,                   ;
                       ; THIS ROUTINE QUEUES UP ANOTHER WHO LINE REQUEST.
                       ; ONLY ONE LINE IS QUEUED UP EVERY 12. TIX OR SO.
                       ; CALLED FROM DPYCLK WHEN WHOPTR>0
                       WHOQUE:
130663 / 211740,,000002         MOVNI  AC3,     2             ;
130664 / 250740,,035275          EXCH  AC3,035275             ;;PICK UP NUMBER OF WHO LINE JUST UPDATED
                       ;SET WHOPTR TO -2 TO AVOID RE-ENTERING HERE.
                       ;WHOWRT WILL AOS WHOPTR FOR EACH FIELD DONE.
                       ;WHOPTR=0 ALLOWS WHOSER TO MAKE A NEW WHO LINE
130665 / 201240,,000000         MOVEI  DAT,                   ;
130666 / 306740,,000200          CAIN  AC3,000200             ;; AVLCHN FLAG
130667 / 254000,,130700          JRST       WHOQ2             ;
130670 / 332257,,035300         SKIPE  DAT,FRETAB(AC3)        ;; PICK UP ADDRESS OF WHO DATA
130671 / 336717,,012607         SKIPN  AC2, LETAB(AC3)        ;; PICK UP ADDRESS OF DPY PROGRAM HEADER
130672 / 254000,,130726          JRST      130726             ;; LEAVE IF NONE THERE
130673 / 200716,,000017          MOVE  AC2, CURPP(AC2)        ;; GET ADDRESS OF PAGE PRINTER CONTROL BLOCK
130674 / 200716,,000004          MOVE  AC2,  DDCW(AC2)        ;; PICK UP COMMAND WORD
130675 / 336257,,035300         SKIPN  DAT,FRETAB(AC3)        ;; PICK UP ADDRESS OF WHO LINE
130676 / 254000,,130726          JRST      130726             ;; LEAVE IF NONE THERE
130677 / 202705,,000000         MOVEM  AC2,      (DAT)        ;; PLACE IT IN THE WHO CODE
                       WHOQ2:
130700 / 260140,,127323         PUSHJ    P,  GETQ             ;
130701 / 202755,,000003         MOVEM  AC3, QHPOS(AC1)        ;; SAVE THE DPY NUMBER HERE
130702 / 505240,,134607          HRLI  DAT,WHOWRT             ;
130703 / 206255,,000000         MOVSM  DAT,      (AC1)        ;
130704 / 402015,,000002         SETZM      QFIELD(AC1)        ;;ON FIELD ZERO
151764 / 000001,,000002           XWD 1,2                     ;
130705 / 200700,,151764          MOVE  AC2,151764             ;;ON TOP TWO LINES
130706 / 306740,,000200          CAIN  AC3,DDAVLU             ;
130707 / 200700,,014405          MOVE  AC2, AVLLN             ;
130710 / 202715,,000001         MOVEM  AC2, QLINE(AC1)        ;
130711 / 402015,,000006         SETZM      QCOUNT(AC1)        ;
130712 / 261140,,000017          PUSH    P,000017             ;;SAVE THE DPY NUMBER
130713 / 260140,,133426         PUSHJ    P,133426             ;;QUEUE UP THIS FIELD'S WORTH.
130714 / 260140,,127323         PUSHJ    P,  GETQ             ;
130715 / 262155,,000003           POP    P, QHPOS(AC1)        ;;STORE THE DPY NUMBER
130716 / 206255,,000000         MOVSM  DAT,      (AC1)        ;
130717 / 476015,,000002         SETOM      QFIELD(AC1)        ;;FIELD 1
151764 / 000001,,000002           XWD 1,2                     ;
130720 / 200700,,151764          MOVE  AC2,151764             ;
130721 / 306740,,000200          CAIN  AC3,DDAVLU             ;
130722 / 200700,,014405          MOVE  AC2, AVLLN             ;
130723 / 202715,,000001         MOVEM  AC2, QLINE(AC1)        ;
130724 / 402015,,000006         SETZM      QCOUNT(AC1)        ;
130725 / 254000,,133426          JRST      QBLOCK             ;
                       WHOQ1:
130726 / 402000,,035275         SETZM      035275             ;;HERE TO FLUSH THE WHO LINE REQUEST
130727 / 263140,,000000          POPJ    P,                   ;;WHOPTR MUST BE CLEARED.
                       ; ROUTINE TO FREE AN ENTIRE LIST OF BLOCKS, LINKED UP THROUGH LINK
                       ; ENTER WITH TOP OF LIST IN TAC
                       FREE:
130730 / 322640,,037403         JUMPE  AC1, CPOPJ             ;
130731 / 311640,,022067          CAML  AC1,MEMSIZ             ;
130732 / 311640,,022066          CAML  AC1,022066             ;
130733 / 263140,,000000          POPJ    P,                   ;
130734 / 550055,,000065          HRRZ  TAC,  LINK(AC1)        ;;GET LINK BEFORE GIVING BACK FREE STORAGE
130735 / 260140,,074643         PUSHJ    P,SFSGIV             ;
130736 / 000000,,022544                                       ;
130737 / 200640,,000001          MOVE  AC1,000001             ;;LOOP FOR NEXT BLOCK
130740 / 254000,,130730          JRST        FREE             ;
                       GETFS:
130741 / 261140,,000015          PUSH    P,   AC1             ;
130742 / 260140,,127304         PUSHJ    P,127304             ;;GET A BLOCK OF FREE STG. (IN AC2).
130743 / 200700,,000015          MOVE  AC2,   AC1             ;
                       POPAJ:
130744 / 262140,,000015           POP    P,   AC1             ;
130745 / 263140,,000000          POPJ    P,                   ;
                       CLKWAT:
130746 / 700700,,077000         CONSZ   PI, 77000             ;
130747 / 254000,,130760          JRST      ARRRGH             ;
130750 / 202740,,013645         MOVEM   17,013645             ;
130751 / 201740,,013626         MOVEI   17,013626             ;;SAVE ALL AC'S.
130752 / 251740,,013644           BLT   17,013644             ;
130753 / 476000,,013625         SETOM      013625             ;;SET WAIT FLAG FOR CLK SERVICE.
130754 / 260140,,130660         PUSHJ    P,130660             ;;GO AWAY FOR A TICK.
130755 / 205740,,013626         MOVSI   17,013626             ;;RESTORE THEM.
130756 / 251740,,000017           BLT   17,    17             ;
130757 / 263140,,000000          POPJ    P,                   ;
                       ARRRGH:
130760 / 260140,,000316         PUSHJ    P,PUSHIT             ;
130761 / 260140,,044320         PUSHJ    P,DISDAT             ;
130762 / 260140,,044066         PUSHJ    P,DISMES             ;
130770 / 260140,,043761         PUSHJ    P,DISFLU             ;
130771 / 336000,,000500         SKIPN      DEBMOD             ;
130772 / 254000,,000365          JRST      AUTOLO             ;
130773 / 260140,,000341         PUSHJ    P, POPIT             ;
130774 / 260140,,000347         PUSHJ    P,DDTCAL             ;
130775 / 254000,,130774          JRST      130774             ;;BETTER NOT RETURN WITH POPJ
                       ;;UUO LEVEL UTILITY ROUTINES AND DISPATCHERS.
                       ;;PRGFND  FINDS DPY PRGM FOR JOB IN ITEM.
                       PRGF2:
130776 / 200306,,017743          MOVE  DDB,017743(DDB)        ;;GET JOB WHICH OWNS PTY.
130777 / 334306,,027320         SKIPA  DDB,JBTLIN(DDB)        ;;USE HIS DPY, IF ANY.
                       PRGF1:
131000 / 200304,,027320          MOVE  DDB,JBTLIN(ITEM)       ;;GET `TTY' LINE NO. FOR JOB., IF ANY.
131001 / 603300,,004000          TLNE  DDB,004000             ;;IS GUY CONNECTED TO A PTY ?
131002 / 327300,,130776         JUMPG  DDB,130776             ;;YES, UNLESS HE IS DETACHED.
131003 / 550640,,000006          HRRZ  AC1,   DDB             ;
131004 / 342300,,037401          AOJE  DDB,037401             ;;IF DETACHED (=-1) OR NOT A DPY (BIT 0 OFF), GIVE ERROR RETURN.
131005 / 607300,,420000          TLNN  DDB,420000             ;; IS THIS A DPY OF SOME SORT?
131006 / 254000,,037401          JRST      037401             ;; NO, ERROR
131007 / 550306,,012566          HRRZ  DDB,012566(DDB)        ;;GET PTR. TO PRGM HEADER.
                       PRGF3:
131010 / 550646,,000015          HRRZ  AC1,PRGNUM(DDB)        ;; PICK UP DPY NUMBER
131011 / 301640,,000006          CAIL  AC1,000006             ;; IS IT A DATA DISK DISPLAY?
131012 / 661300,,400000           TLO  DDB,400000             ;; YES, MARK IT WITH THE SIGN BIT
131013 / 263140,,000000          POPJ    P,                   ;
                       PRGFND:
131014 / 336304,,013646         SKIPN  DDB,DPYMAP(ITEM)       ;;IS GUY CONNECTED TO SOMEONE ELSE'S DPY ?
131015 / 260140,,131000         PUSHJ    P,131000             ;;NO. FIND ONE OF HIS OWN.
131016 / 254000,,037401          JRST      037401             ;;SUCCESS RETURN
                       PRGFER:
131017 / 700740,,077400         CONSO   PI,077400             ;; WHAT LEVEL ARE WE?
131020 / 263140,,000000          POPJ    P,                   ;; IF AT UUO LEVEL, ERROR RETURN
131021 / 700700,,000400         CONSZ   PI,000400             ;; IS IT CH7?
131022 / 336013,,023425         SKIPN      SPWUUF(PID)        ;; YES, ARE WE IN SPW MODE?
131023 / 254000,,131025          JRST      131025             ;; NO TO EITHER, GIVE ERROR MESSAGE
131024 / 263140,,000000          POPJ    P,                   ;; YES, SAME AS UUO LEVEL
                       PRGFE1:
131025 / 260140,,044120         PUSHJ    P,044120             ;; OTHERWISE, ORDER-1 DISASTER
131026 / 000000,,154504                                       ;
131027 / 777777,,777777                                       ;
131030 / 254000,,126416          JRST      DPYATL             ;
                       DDFND:
131031 / 260140,,131014         PUSHJ    P,131014             ;; USE PRGFND
131032 / 304000,,000000          CAIA                         ;
131033 / 254000,,037401          JRST      CPOPJ1             ;
131034 / 302500,,000003          CAIE UCHN,000003             ;; DDFND CALLED ONLY FROM PGIOT WITH UCHN SETUP
131035 / 263140,,000000          POPJ    P,                   ;; ONLY THE DD UUO IS LEGAL
131036 / 201740,,000147         MOVEI  AC3,DPYLEN             ;
131037 / 260140,,074361         PUSHJ    P,UFSGET             ;
131040 / 200300,,000015          MOVE  DDB,   AC1             ;
131041 / 476006,,000025         SETOM      DPRLSF(DDB)        ;
131042 / 476006,,000015         SETOM      PRGNUM(DDB)        ;
131043 / 402006,,000030         SETZM      PRGCNT(DDB)        ;; CAN'T BE ANY OVERLAP IN PROGRESS - RPH 10-5-72
131044 / 661300,,400000           TLO  DDB,400000             ;
131045 / 254000,,037401          JRST      037401             ;; SUCCESS
                       ;;MORE GENERAL UUO ROUTINES.
                       PPIOT:
131046 / 260140,,131014         PUSHJ    P,131014             ;;FIND APPROPRIATE DPY PRGM.
131047 / 263140,,000000          POPJ    P,                   ;;IGNORE IF NOT DISPLAY
131050 / 200246,,000017          MOVE  DAT, CURPP(DDB)        ;;GET PTR. TO CURRENT P OF P.
131051 / 500240,,000006           HLL  DAT,000006             ;; PUT IN FLAG BIT
131052 / 307500,,000007          CAIG UCHN,000007             ;;DOES FUNCTION EXIST ?
131053 / 254032,,131055          JRST      @PPIOTX(UCHN)      ;;YES.
131054 / 254000,,043340          JRST      UUOERR             ;
                       ; UUOMAC PPIOTX,PPIOT
                       PPIOTX:
131055 / 000000,,130327                                       ;
131056 / 000000,,130333                                       ;
131057 / 000000,,130414                                       ;
131060 / 000000,,130544                                       ;
131061 / 000000,,130256                                       ;
131062 / 000000,,131275                                       ;
131063 / 000000,,131353                                       ;
131064 / 000000,,131225                                       ;
131065 / 702340,,063065         PPIOT UUOCNT-1,UUOLNK             ;
                       ; ROUTINE TO RESET A DISPLAY. CLEARS PAGE PRINTER AND PIECES OF GLASS.
                       DPYCLR:
131076 / 326500,,131403         JUMPN UCHN,131403             ;;NON-ZERO AC FIELD MEANS SELECT OTHER DPY.
                       DPYRST:
131077 / 402004,,013646         SETZM      DPYMAP(ITEM)       ;
131100 / 260140,,131000         PUSHJ    P,131000             ;;FIND DPY PRGM FOR JOB IN ITEM.
131101 / 334000,,000000         SKIPA                         ;
131102 / 263140,,000000          POPJ    P,                   ;;NO PRGM.
131103 / 260140,,132244         PUSHJ    P,132244             ;;FIRST FLUSH ALL PIECES OF GLASS.
                       PPCLR:
131104 / 201600,,000017         MOVEI  UUO,000017             ;;NOW ALL PIECES OF PAPER EXCEPT 0.
                       ; PPREL SELECTS P OF P 0 (UUO←0) IF IT RELEASES A P OF P
                       ;   WHICH IS CURRENTLY SELECTED, AND NOT 0, SO.....
131105 / 261140,,000014          PUSH    P,000014             ;;PPREL MAY CLOBBER UUO.
                       PPC1:
131106 / 260140,,130256         PUSHJ    P,130256             ;;RELEASE P OF P.
131107 / 372603,,000000          SOSE  UUO,      (P)          ;;NEXT
131110 / 254000,,131106          JRST      131106             ;;YES
151763 / 000001,,000001           XWD 1,1                     ;
131111 / 274140,,151763           SUB    P,151763             ;;ADJUST STACK
                       ;ALL THIS TO HELP DCS. 5/27/70
131112 / 500240,,000006           HLL  DAT,000006             ;; PUT IN FLAG BIT FOR DD
131113 / 261140,,000006          PUSH    P,000006             ;; SAVE PROGRAM HEADER ADDRESS
131114 / 260140,,130327         PUSHJ    P,130327             ;;SELECT P OF P 0.
                       PPC2:
131115 / 200303,,000000          MOVE  DDB,      (P)          ;; PICK UP PROGRAM HEADER
131116 / 400600,,000000          SETZ  UUO,                   ;; CLEAR LINE EDITOR POSITION
131117 / 260140,,131353         PUSHJ    P,LEYPOS             ;
131120 / 400600,,000000          SETZ  UUO,                   ;
131121 / 260140,,131225         PUSHJ    P,131225             ;; RESET HOLDING STATUS
131122 / 201600,,000600         MOVEI  UUO,000600             ;;MAKE P OF P 0 START AT TOP OF SCREEN
131123 / 335303,,000000        SKIPGE  DDB,      (P)          ;; PICK UP PROGRAM HEADER ADDRESS, SKIP IF NOT DATA DISC
131124 / 201600,,000660         MOVEI  UUO,000660             ;; DATA DISK STARTS ON THE THIRD LINE
131125 / 260140,,130414         PUSHJ    P,PPYPOS             ;
131126 / 201600,,014002         MOVEI  UUO,014002             ;;MAKE IT RIGHT SIZE.
131127 / 262140,,000006           POP    P,   DDB             ;
131130 / 325300,,130544        JUMPGE  DDB,PPXSIZ             ;
131131 / 201600,,004011         MOVEI  UUO,004011             ;
131132 / 260140,,130544         PUSHJ    P,PPXSIZ             ;
131133 / 550046,,000015          HRRZ  TAC,PRGNUM(DDB)        ;
131134 / 275040,,000006          SUBI  TAC,DPYNUM             ;
131135 / 260140,,135553         PUSHJ    P,VDRST1             ;
131136 / 254000,,135430          JRST       VDOUT             ;
                       ; CALLED FROM <ESC>N IN LINE EDITOR BY A CLOCK REQUEST
                       PPNSET:
131137 / 260140,,131147         PUSHJ    P,131147             ;; SET UP DDB AND DAT PROPERLY
151760 / 000000,,131143                                       ;
131140 / 261140,,151760          PUSH    P,151760             ;
131141 / 261140,,000006          PUSH    P,   DDB             ;
131142 / 254000,,131115          JRST        PPC2             ;
                       PPNST1:
131143 / 474640,,000000          SETO  AC1,                   ;; MARK SIZE AND Y-POSITION SET BY USER
131144 / 137640,,126344           DPB  AC1,SIZSBU             ;
131145 / 137640,,126345           DPB  AC1,POSSBU             ;
131146 / 263140,,000000          POPJ    P,                   ;
                       SETPHD:
131147 / 550300,,000005          HRRZ  DDB,000005             ;; PUT PROGRAM HEADER ADDRESS IN DDB
131150 / 336006,,000040         SKIPN         III(DDB)        ;; SEE IF WE ARE A DATA DISK DISPLAY
131151 / 661300,,400000           TLO  DDB,400000             ;; IF SO, SET DATA DISK FLAG
131152 / 200246,,000017          MOVE  DAT, CURPP(DDB)        ;
131153 / 500240,,000006           HLL  DAT,   DDB             ;
131154 / 263140,,000000          POPJ    P,                   ;
                       ; CALLED FROM <ESC>G IN LINE EDITOR. SETS NUMBER OF GLITCHES
                       PPGSET:
131155 / 260140,,131147         PUSHJ    P,SETPHD             ;
131156 / 201740,,000014         MOVEI  AC3,NGSIII             ;
131157 / 337000,,000005         SKIPG         DAT             ;
131160 / 201740,,000004         MOVEI  AC3, NGSDD             ;
131161 / 336606,,000117         SKIPN  UUO, LEARG(DDB)        ;; PICK UP NUMBER OF GLITCHES REQUESTED
131162 / 200600,,000017          MOVE  UUO,   AC3             ;
131163 / 242600,,000011           LSH  UUO,000011             ;; PUT IN LH OF RH
131164 / 270605,,000023           ADD  UUO,   DEL(DAT)        ;
                       PPGST1:
131165 / 260140,,130544         PUSHJ    P,130544             ;; SET IT
131166 / 474640,,000000          SETO  AC1,                   ;
131167 / 137640,,126344           DPB  AC1,126344             ;; NOTE SIZE WAS SET BY USER
131170 / 263140,,000000          POPJ    P,                   ;
                       ; CALLED FROM <ESC>L IN LINE EDITOR. SETS LINES/GLITCH
                       PPLSET:
131171 / 260140,,131147         PUSHJ    P,SETPHD             ;
131172 / 201740,,000002         MOVEI  AC3,NLSIII             ;
131173 / 337000,,000005         SKIPG         DAT             ;
131174 / 201740,,000011         MOVEI  AC3, NLSDD             ;
131175 / 200605,,000026          MOVE  UUO, PGSIZ(DAT)        ;
131176 / 242600,,000011           LSH  UUO,000011             ;
131177 / 336706,,000117         SKIPN  AC2, LEARG(DDB)        ;
131200 / 200700,,000017          MOVE  AC2,   AC3             ;
131201 / 270600,,000016           ADD  UUO,   AC2             ;
131202 / 254000,,131165          JRST      PPGST1             ;
                       ; CALLED FROM <ESC>Y IN LINE EDITOR. SETS Y POSITION
                       PPYSET:
131203 / 260140,,131147         PUSHJ    P,SETPHD             ;
131204 / 201740,,000600         MOVEI  AC3, YPIII             ;
131205 / 200606,,000117          MOVE  UUO, LEARG(DDB)        ;
131206 / 321300,,131220         JUMPL  DDB, PPYDD             ;
131207 / 201740,,000600         MOVEI  AC3, YPIII             ;
151666 / 777777,,777750                                       ;
131210 / 220600,,151666          IMUL  UUO,151666             ;
131211 / 271600,,001020          ADDI  UUO,001020             ;
                       PPYS2:
131212 / 301600,,001000          CAIL  UUO,  1000             ;
131213 / 201617,,000000         MOVEI  UUO,      (AC3)        ;;SET TO NORM ON ZERO (NULL) ARG
131214 / 260140,,130414         PUSHJ    P,PPYPOS             ;
131215 / 474640,,000000          SETO  AC1,                   ;
131216 / 137640,,126345           DPB  AC1,POSSBU             ;
131217 / 263140,,000000          POPJ    P,                   ;
                       PPYDD:
131220 / 201740,,000660         MOVEI  AC3,  YPDD             ;
131221 / 242600,,000007           LSH  UUO,     7             ;
151672 / 777777,,777773                                       ;
131222 / 230600,,151672          IDIV  UUO,151672             ;
131223 / 271600,,001000          ADDI  UUO,  1000             ;
131224 / 254000,,131212          JRST       PPYS2             ;
                       ; SET PAGE PRINTER HOLD COUNTS. GIVE LINE COUNT IN BITS 18-26 AND
                       ; GLITCH COUNT IN 27-35. HIGH ORDER BIT OF FIELD ON MEANS DO NOT SET.
                       PPHLD:
131225 / 400640,,000000          SETZ  AC1,                   ;
131226 / 602600,,400000          TRNE  UUO,400000             ;; DOES HE WANT TO SET LINE COUNT?
131227 / 254000,,131236          JRST      131236             ;; NO, SKIP IT
131230 / 137640,,126346           DPB  AC1,126346             ;; NOTE SET BY UUO
152332 / 000000,,000014                                       ;
152332 / 111000,,000014 POINT 8,00000014,26                   ;
131231 / 135700,,152332           LDB  AC2,152332             ;;used to say 25 instead of 26--ME 8-19-73
131232 / 137700,,126350           DPB  AC2,126350             ;; SET INTO PROGRAM HEADER
131233 / 336000,,000016         SKIPN      000016             ;; ZERO MEANS DON'T HOLD AT ALL
131234 / 474700,,000000          SETO  AC2,                   ;; WHICH IS SIGNIFIED BY -1
131235 / 202706,,000033         MOVEM  AC2, LHCNT(DDB)        ;; START IT GOING NOW
                       PPHLD1:
131236 / 602600,,000400          TRNE  UUO,000400             ;;used to say 1b26--ME 8-19-73
131237 / 254000,,131246          JRST      131246             ;; NOW GO UNHOLD US
131240 / 137640,,126347           DPB  AC1,GHCSBU             ;
152071 / 000000,,000014                                       ;
152071 / 001000,,000014 POINT 8,00000014,35                   ;
131241 / 135700,,152071           LDB  AC2,152071             ;
131242 / 137700,,126351           DPB  AC2,HGLTCH             ;
131243 / 336000,,000016         SKIPN         AC2             ;
131244 / 474700,,000000          SETO  AC2,                   ;
131245 / 202706,,000034         MOVEM  AC2,GLHCNT(DDB)        ;
                       PPHLD2:
131246 / 400640,,000000          SETZ  AC1,                   ;
131247 / 250646,,000031          EXCH  AC1,DPHOLD(DDB)        ;
131250 / 322640,,037403         JUMPE  AC1, CPOPJ             ;
131251 / 550646,,000015          HRRZ  AC1,PRGNUM(DDB)        ;
152352 / 132473,,000020           XWD UNHOLD,DPYL0            ;
131252 / 270640,,152352           ADD  AC1,152352             ;
131253 / 700600,,000400          CONO   PI, PIOFF             ;
131254 / 136640,,013624          IDPB  AC1,  CLKQ             ;
131255 / 700600,,000200          CONO   PI,  PION             ;
131256 / 263140,,000000          POPJ    P,                   ;
                       ; THIS ROUTINE GIVES THE USER A NICE LITTLE TABLE OF DATA ABOUT HIS
                       ; PAGE PRINTER. THE TABLE IS =20 WORDS LONG. THE FIRST WORD IS
                       ; XWD <POG ACT BITS>,<PP ACT BITS> WHICH ARE IN PPACT OR PGACT FORMAT.
                       ; THE SECOND WORD IS THE NUMBER OF THE PIECE OF PAPER CURRENTLY SELECTED.
                       ; THE THIRD WORD IS THE LINE EDITOR POSITION IN THE RH, BIT ZERO IS
                       ; THE PAGE COLOR, AND BIT 1 SAYS WHETHER <ESC>C HAS BEEN TYPED SINCE YOU
                       ; LAST GAVE THIS UUO, BIT 2 IS ON IF YOU ARE A DATA DISK DISPLAY.
                       ; THE FOURTH THROUGH THE 19.TH WORDS ARE XWD <Y-POS>,<NG*1000+LPG> WHERE
                       ; NG IS THE NUMBER OF GLITCHES AND LPG IS THE NUMBER OF LINES PER GLITCH.
                       ; THIS IS CLEVERLY ARRANGED SO THAT A PPYPOS UUO WITH THE ARGUEMENT
                       ; IN THE LH OF THIS WORD FOLLOWED BY A PPXSIZ WITH THE ARGUEMENT IN
                       ; THE RH OF THIS WORD COMPLETELY RESTORES THAT PAGE.
                       ; THE 20TH WORD IS A COPY OF GWORD. B0 MEANS PAGE PRINTER SIZE SET LAST
                       ; BY USER COMMAND RATHER THAN BY UUO, B1 FOR Y-POSITION, B2 FOR LINE HOLD COUNT,
                       ; AND B3 FOR GLITCH HOLD COUNT. BITS 9-17 HAVE THE ACTUAL LINE HOLD COUNT
                       ; AND BITS 18-25 HAVE THE ACTUAL GLITCH HOLD COUNT. ZERO IF NOT BEING USED.
                       PPSPY:
131257 / 540600,,000001           HRR  UUO,000001             ;;VERSION OF PPINFO FOR ANOTHER JOB'S DPY
131260 / 574200,,000001          HLRE ITEM,000001             ;;ARG IS JOB#,,OUTPUT BLOCK ADDR
131261 / 321200,,131343         JUMPL ITEM,131343             ;; OR - LINE # IN LH
131262 / 322200,,037403         JUMPE ITEM,037403             ;;NON-SKIP RETURN IF NO JOB OR NO DPY
131263 / 303200,,000100         CAILE ITEM,  JOBN             ;
131264 / 263140,,000000          POPJ    P,                   ;
131265 / 200644,,026114          MOVE  AC1,JBTSTS(ITEM)       ;
131266 / 607640,,040000          TLNN  AC1,   JNA             ;
131267 / 263140,,000000          POPJ    P,                   ;
131270 / 260140,,131000         PUSHJ    P,131000             ;;DON'T USE PRGFND TO FLANK DPYMAP HACK
                       PPSPY2:
131271 / 334246,,000017         SKIPA  DAT, CURPP(DDB)        ;;PRGF1 SKIP RETURNS ON FAILURE
131272 / 263140,,000000          POPJ    P,                   ;;NO DISPLAY
131273 / 500240,,000006           HLL  DAT,   DDB             ;
131274 / 350003,,000000           AOS            (P)          ;;OK, SET SKIP RETURN AND DROP THROUGH
                       PPINFO:
131275 / 200646,,000021          MOVE  AC1,PRGACT(DDB)        ;; PICK UP HIS ACTIVATION BITS
152603 / 202654,,000000         MOVEM  AC1,      (UUO)        ;
131276 / 256040,,152603          XCTR   XW,152603             ;
131277 / 200645,,000012          MOVE  AC1,  PPNO(DAT)        ;; GET CURRENT PIECE OF PAPER NUMBER
152604 / 202654,,000001         MOVEM  AC1,     1(UUO)        ;
131300 / 256040,,152604          XCTR   XW,152604             ;
152436 / 000006,,000007                                       ;
152436 / 161306,,000007 POINT 11,06000007,21                  ;
131301 / 135640,,152436           LDB  AC1,152436             ;
131302 / 602640,,002000          TRNE  AC1,002000             ;; EXTEND SIGN BIT
131303 / 435640,,776000           ORI  AC1,776000             ;
131304 / 200705,,000004          MOVE  AC2,  DDCW(DAT)        ;; PUT IN BLACK-WHITE BIT
131305 / 603700,,010000          TLNE  AC2,      (1B5)        ;
131306 / 661640,,400000           TLO  AC1,      (1B0)        ;
131307 / 400700,,000000          SETZ  AC2,                   ;; PUT IN <ESC>C BIT
131310 / 250706,,000137          EXCH  AC2,  LECC(DDB)        ;
131311 / 332000,,000016         SKIPE         AC2             ;
131312 / 661640,,200000           TLO  AC1,      (1B1)        ;
131313 / 325300,,131315        JUMPGE  DDB,131315             ;;DD OR III?
131314 / 661640,,100000           TLO  AC1,      (1B2)        ;;DD, TURN ON BIT
152605 / 202654,,000002         MOVEM  AC1,     2(UUO)        ;
131315 / 256040,,152605          XCTR   XW,152605             ;
131316 / 271600,,000003          ADDI  UUO,     3             ;
131317 / 201654,,000017         MOVEI  AC1,    17(UUO)        ;
                       PPINF0:
151342 / 402015,,000000         SETZM            (AC1)        ;
131320 / 256040,,151342          XCTR   XW,151342             ;
131321 / 302654,,000000          CAIE  AC1,      (UUO)        ;
131322 / 364640,,131320          SOJA  AC1,PPINF0             ;
                       ; PPINFO CONT - RUN DOWN LIST OF PP CTRL BLOCKS
131323 / 554646,,000006          HLRZ  AC1,PPCALL(DDB)        ;; PICK UP POINTER TO FIRST PAGE PRINTER CONTROL BLOCK
                       PPINF1:
152437 / 000015,,000000                                       ;
152437 / 161315,,000000 POINT 11,15000000,21                  ;
131324 / 135700,,152437           LDB  AC2,152437             ;
131325 / 602700,,000400          TRNE  AC2,000400             ;; SPREAD SIGN BIT ALL DOWN WORD
151661 / 777777,,777400                                       ;
131326 / 434700,,151661            OR  AC2,151661             ;
131327 / 242700,,000011           LSH  AC2,000011             ;; MOVE IT OVER
131330 / 270715,,000026           ADD  AC2, PGSIZ(AC1)        ;; PUT IN THE NUMBER OF GLITCHES
131331 / 242700,,000011           LSH  AC2,000011             ;
131332 / 270715,,000023           ADD  AC2,   DEL(AC1)        ;; AND THE NUMBER OF LINES PER GLITCH
131333 / 200755,,000012          MOVE  AC3,  PPNO(AC1)        ;; PICK UP THE PIECE OF PAPER NUMBER
131334 / 270740,,000014           ADD  AC3,   UUO             ;
152615 / 202717,,000000         MOVEM  AC2,      (AC3)        ;
131335 / 256040,,152615          XCTR   XW,152615             ;; GIVE HIM THE WORD
131336 / 550655,,000065          HRRZ  AC1,  LINK(AC1)        ;; PICK UP LINK TO NEXT PAGE PRINTER CONTROL BLOCK
131337 / 326640,,131324         JUMPN  AC1,131324             ;; LOOP AROUND IF THERE IS ONE
131340 / 200646,,000032          MOVE  AC1, GWORD(DDB)        ;; PICK UP GARBAGE DUMP WORD
152611 / 202654,,000020         MOVEM  AC1,000020(UUO)        ;
131341 / 256040,,152611          XCTR   XW,152611             ;
131342 / 263140,,000000          POPJ    P,                   ;
                       PPSPY1:
131343 / 217000,,000004         MOVMS      000004             ;;NEGATIVE ARG TO PPSPY IS LINE #
131344 / 200304,,017717          MOVE  DDB,LINTAB(ITEM)       ;
131345 / 607300,,420000          TLNN  DDB,420000             ;
131346 / 263140,,000000          POPJ    P,                   ;
131347 / 550306,,012567          HRRZ  DDB,012567(DDB)        ;
131350 / 322300,,037403         JUMPE  DDB,037403             ;;NO DDB
131351 / 260140,,131010         PUSHJ    P,131010             ;;SETS UP DD BIT IN DDB
131352 / 254000,,131271          JRST      PPSPY2             ;
                       ; THIS IS THE ROUTINE FOR A UUO WHICH SETS YOUR LINE EDITOR'S VERTICAL
                       ; POSITION. THE EFFECTIVE ADDRESS OF THE UUO IS SAID POSITION IN
                       ; PPYPOS FORMAT. Y-POSITION OF ZERO IS VERBOTTEN AND MEANS RETURN TO
                       ; THE BOTTOM OF THE PAGE PRINTER.
                       LEYPOS:
151542 / 777777,,777001                                       ;
131353 / 200640,,151542          MOVE  AC1,151542             ;
131354 / 606600,,777777          TRNN  UUO,777777             ;; IS THE POSITION ZERO?
151707 / 000000,,000014                                       ;
131355 / 334640,,151707         SKIPA  AC1,151707             ;; YES, PUT A NO-OP IN
152432 / 000000,,000015                                       ;
152432 / 161300,,000015 POINT 11,00000015,21                  ;
131356 / 137600,,152432           DPB  UUO,152432             ;
131357 / 202646,,000007         MOVEM  AC1, LEPOS(DDB)        ;; PUT IT IN BEFORE THE LINE EDITOR CALL
131360 / 327240,,037403         JUMPG  DAT, CPOPJ             ;
131361 / 474640,,000000          SETO  AC1,                   ;; QUEUE UP A LINE EDITOR REQUEST TO GET IT REPOSITIONED
131362 / 250646,,000134          EXCH  AC1, LECLK(DDB)        ;
131363 / 326640,,037403         JUMPN  AC1, CPOPJ             ;
131364 / 540640,,000006           HRR  AC1,   DDB             ;
131365 / 505640,,133117          HRLI  AC1, DPLED             ;
131366 / 700600,,000400          CONO   PI, PIOFF             ;
131367 / 136640,,013624          IDPB  AC1,  CLKQ             ;
131370 / 700600,,000200          CONO   PI,  PION             ;
131371 / 263140,,000000          POPJ    P,                   ;
                       ;;FREEL FREES A LIST OF BLOCKS POINTED TO BY AC1, AND UPDATES
                       ;; THE USER'S BLKTOT.  
                       FOOFRL:
131372 / 550640,,000014          HRRZ  AC1,   UUO             ;
131373 / 260140,,074163         PUSHJ    P,FSGIVE             ;
131374 / 550640,,000002          HRRZ  AC1,  TAC1             ;
131375 / 322640,,037403         JUMPE  AC1, CPOPJ             ;
                       FREEL:
131376 / 550755,,000065          HRRZ  AC3,  LINK(AC1)        ;;GET CDR OF LIST.
131377 / 260140,,127313         PUSHJ    P,127313             ;;FREE CAR OF LIST.
131400 / 202740,,000015         MOVEM  AC3,   AC1             ;
131401 / 326640,,131376         JUMPN  AC1,131376             ;;FREE CDR.
131402 / 263140,,000000          POPJ    P,                   ;
                       DPYFOO:
131403 / 265740,,151260           JSP  AC3,151260             ;;GET JOB NO. (GETJOB IS IN MAIL).
131404 / 250240,,000004          EXCH  DAT,000004             ;;PRETEND IT'S OURS...
131405 / 260140,,131014         PUSHJ    P,131014             ;;FIND ASSOCIATED DPY PRGM.
131406 / 263140,,000000          POPJ    P,                   ;;SHOULDN'T LOSE ANY MORE THAN ANYONE ELSE
131407 / 202305,,013646         MOVEM  DDB,DPYMAP(DAT)        ;;ENTER IN OUR TABLE.
131410 / 263140,,000000          POPJ    P,                   ;;WE WILL NOW USE OTHER GUY'S DPY PRGM.
                       ;;UPG IS THE DEMOCRATIC UUO WHICH ALLOWS ALL MEN,
                       ;; HOWEVER HUMBLE THEIR STATION (PROVIDED IT IS TY20
                       ;; OR HIGHER) TO RUN THEIR VERY OWN DISPLAY 
                       ;; PROGRAMS.
                       UPGIOT:
131411 /                 ;::   BEGIN STANFO.DPYSER.UPG.
131411 / 260140,,132042         PUSHJ    P,132042             ;;GET REQUESTED P OF G .
131412 / 263140,,000000          POPJ    P,                   ;;NO SUCH DPY, LEAVE NOW
131413 / 321300,,131623         JUMPL  DDB, DDUPG             ;
131414 / 202206,,000020         MOVEM ITEM, CURPG(DDB)        ;
151444 / 514414,,000000          HRLZ  TEM,      (UUO)        ;
131415 / 256200,,151444          XCTR   XR,151444             ;;STARTING ADDR. OF PRGM.
152635 / 214754,,000001          MOVM  AC3,     1(UUO)        ;
131416 / 256200,,152635          XCTR   XR,152635             ;;LENGTH OF PRGM.
131417 / 301740,,011444          CAIL  AC3,011444             ;;IS PIECE OF GLASS GOING TO BE TOO BIG ?
131420 / 254000,,131477          JRST       UPGTB             ;
131421 / 516740,,000012         HRLZM  AC3,000012             ;;SAVE WC IN LEFT OF UCHN, MAKE RIGHT HALF 0 FOR NOW.
131422 / 201057,,000062         MOVEI  TAC,000062(AC3)        ;
131423 / 231040,,000061         IDIVI  TAC,000061             ;; FIND OUT HOW MANY BLOCKS THIS PROGRAM WILL CONSUME
131424 / 201441,,000000         MOVEI   T2,      (TAC)        ;
131425 / 274044,,000021           SUB  TAC,  SIZE(ITEM)       ;;HOW BIG IS THIS PG NOW ?
131426 / 270046,,000016           ADD  TAC,BLKTOT(DDB)        ;;THIS IS HOW MUCH IT GROWS.
131427 / 327040,,131620         JUMPG  TAC,131620             ;;IS USER OVER HIS ALLOTMENT ?
131430 / 571051,,777777         HRREI  TAC,777777(T2)         ;;SAVE IT.
131431 / 402004,,000021         SETZM        SIZE(ITEM)       ;;...SEE FOLLOWING INSTR.
131432 / 201100,,000014         MOVEI TAC1,000014             ;;SEE FOLLOWING INSTR...
131433 / 322740,,131514         JUMPE  AC3,131514             ;;IF WC IS 0, RELEAS PAGE.
131434 / 201740,,000146         MOVEI  AC3,000146             ;; NICE BIG PIECE
131435 / 260140,,127331         PUSHJ    P,127331             ;;GET BLOCK FOR THE RELOCATION TABLE.
131436 / 321640,,037403         JUMPL  AC1,037403             ;;IF WE ARE AT SPACEWAR LEVEL AND NO FREE STG., JUST RETURN.
131437 / 202640,,000014         MOVEM  AC1,   UUO             ;
131440 / 201100,,000000         MOVEI TAC1,                   ;
131441 / 665600,,000001          TLOA  UUO,000001             ;;MAKE UUO AN INDEXED POINTER TO REL. TBL.
                       L1:
131442 / 202640,,000002         MOVEM  AC1,000002             ;;SAVE LOC. OF THIS BLOCK.
131443 / 260140,,127302         PUSHJ    P,127302             ;;GET A BLOCK OF FREE STG.
131444 / 321640,,131372         JUMPL  AC1,131372             ;;GO AWAY IF SPACEWAR AND NO FREE STG.
131445 / 206660,,000014         MOVSM  AC1,@000014            ;;ENTER IN RELOCATION TABLE.
131446 / 202115,,000065         MOVEM TAC1,  LINK(AC1)        ;;LINK TO PREVIOUS BLOCK.
131447 / 365040,,131442         SOJGE  TAC,131442             ;;GET REST OF BLOCKS NEEDED.
131450 / 202444,,000021         MOVEM   T2,  SIZE(ITEM)       ;;UPDATE SIZE OF THIS PG.
131451 / 210100,,000012          MOVN TAC1,000012             ;;LENGTH OF USERS CODE.
131452 / 544100,,000010           HLR TAC1,000010             ;;STARTING ADDR.
131453 / 540500,,000014           HRR UCHN,000014             ;;BOTTOM OF RELOCATION TABLE.
131454 / 554454,,000000          HLRZ   T2,      (UUO)        ;
151772 / 000002,,000000           XWD PGNP,0                  ;
131455 / 270500,,151772           ADD UCHN,151772             ;
131456 / 556511,,000000         HLRZM UCHN,      (T2)         ;
131457 / 556411,,000001         HLRZM  TEM,  PGSA(T2)         ;
151637 / 777721,,000002           XWD -PBSZ+PGNP,PGNP         ;
131460 / 270440,,151637           ADD   T2,151637             ;
                       LOOP:
152446 / 200002,,000000          MOVE            (TAC1)       ;
131461 / 256200,,152446          XCTR   XR,152446             ;;PICK UP WORD FROM PRGM.
131462 / 606000,,000003          TRNN      000003             ;;DOES IT NEED EXAMINING ?
131463 / 260140,,131502         PUSHJ    P,131502             ;;YES, IT IS A POTENTIALLY DANGEROUS INSTR.
131464 / 202011,,000000         MOVEM            (T2)         ;;STORE THE INSTR.
131465 / 252100,,131505         AOBJP TAC1,131505             ;;AT END OF PGM. ?
131466 / 253440,,131461         AOBJN   T2,131461             ;;NO. END OF BLOCK ?
131467 / 200012,,000001          MOVE           1(UCHN)       ;;YES. GET START OF NEXT ONE.
131470 / 541000,,000020          HRRI      000020             ;;FORM JMP INSTR. TO IT.
131471 / 202011,,000000         MOVEM            (T2)         ;;PLACE AT END OF LAST BLOCK.
151762 / 000001,,000000           XWD 1,0                     ;
131472 / 270000,,151762           ADD      151762             ;;MAKE JMP GO TO 2ND WORD OF NEW BLOCK..
131473 / 202011,,000001         MOVEM           1(T2)         ;;...IN CASE THERE IS A TSS WHICH SKIPS..
131474 / 544452,,000001           HLR   T2,     1(UCHN)       ;;GET START OF CURRENT BLOCK.
131475 / 505440,,777717          HRLI   T2,777717             ;;LENGTH OF BLOCK.
131476 / 344500,,131461          AOJA UCHN,131461             ;;GO FILL NEXT BLOCK.
                       UPGTB:
131477 / 266200,,014113           JSA ITEM,  ERRP             ;
131500 / 000000,,154043                                       ;
131500 / 440700,,154043 POINT 7,00154043,                     ;
131501 / 263140,,000000          POPJ    P,                   ;
                       SPECOP:
152203 / 020300,,000000 POINT 3,00000000,33                   ;
131502 / 135640,,152203           LDB  AC1,152203             ;;GET OPCODE.
131503 / 256015,,131531           XCT      SPCTBL(AC1)        ;;DO APPROPRIATE THING.
131504 / 263140,,000000          POPJ    P,                   ;;STORE INSTR.
                       DONE:
131505 / 200114,,000000          MOVE TAC1,      (UUO)        ;;START OF BLOCK 0 OF PRGM.
151775 / 000002,,000020           XWD PGNP,DISJMP             ;
131506 / 270100,,151775           ADD TAC1,151775             ;
131507 / 202111,,000001         MOVEM TAC1,     1(T2)         ;;MAKE END OF PGM JMP BACK TO START.
131510 / 202111,,000002         MOVEM TAC1,     2(T2)         ;
131511 / 550640,,000014          HRRZ  AC1,000014             ;;NOW RELEASE THE RELOC. TABLE.
131512 / 260140,,074163         PUSHJ    P,FSGIVE             ;
131513 / 541100,,000024          HRRI TAC1,000024             ;;JSR TO START OF PGM.
                       UPREL1:
131514 / 554646,,000011          HLRZ  AC1,PGCALL(DDB)        ;
131515 / 275644,,000000          SUBI  AC1,      (ITEM)       ;;GET NEG POG #
131516 / 205700,,400000         MOVSI  AC2,400000             ;
131517 / 242715,,000000           LSH  AC2,      (AC1)        ;;MAKE PGACT BIT
131520 / 602100,,000020          TRNE TAC1,    20             ;
131521 / 436706,,000021          IORM  AC2,PRGACT(DDB)        ;;IS JSR - MARK ACTIVE
131522 / 606100,,000020          TRNN TAC1,    20             ;
131523 / 412706,,000021        ANDCAM  AC2,PRGACT(DDB)        ;;IS NOP - MARK INACTIVE
131524 / 250104,,000000          EXCH TAC1,      (ITEM)       ;;EXCHANGE FOR OLD ONE.
131525 / 557640,,000002         HLRZS  AC1,000002             ;;GET START OF OLD PRGM.
131526 / 322100,,037403         JUMPE TAC1,037403             ;;RETURN IF NO OLD PRGM.
                       ;FREE THE OLD PRGM.,AND FIX PRGM TO RESTART AT TOP.
131527 / 275640,,000002          SUBI  AC1,  PGNP             ;
131530 / 254000,,130163          JRST      130163             ;;SETRST IS IN PRINT.
                       ;;MORE OF UPG.
                       ;;SPCTBL IS DISPATCH TABLE FOR HANDLING SPECIAL DPY INSTRS.
                       SPCTBL:
131531 / 254000,,131615          JRST      131615             ;;HALT
131532 / 254000,,131611          JRST      131611             ;;JMS
131533 / 254000,,131541          JRST      SELCHK             ;
131534 / 254000,,131570          JRST      131570             ;;RST (NO BITS ON -- NOOP) (DCS-5/29/70)
131535 / 254000,,131572          JRST      131572             ;;JMP
131536 / 254000,,131572          JRST      131572             ;;JSR OR SAVE
131537 / 254000,,131541          JRST      SELCHK             ;
131540 / 254000,,131572          JRST      131572             ;;RST (AGAIN.)
                       SELCHK:
131541 / 200040,,024061          MOVE  TAC,   JOB             ;
131542 / 200041,,027420          MOVE  TAC,JBTPRV(TAC)        ;
131543 / 603040,,004000          TLNE  TAC,004000             ;;RETURN QUICK IF HE HAS THE PRIV
131544 / 263140,,000000          POPJ    P,                   ;;HE HAS THE PRIVILEGE
152144 / 000077,,770010                                       ;
152144 / 007777,,001000                                       ;
131545 / 200040,,152144          MOVE  TAC,152144             ;;DESELECT ANYONE.
131546 / 201700,,000005         MOVEI  AC2,000005             ;;DPY'S ONLY.
131547 / 261140,,000002          PUSH    P,  TAC1             ;
                       LOOPS:
131550 / 242040,,777777           LSH  TAC,777777             ;;SHIFT MASK.
131551 / 336756,,032367         SKIPN  AC3,032367(AC2)        ;;POINTER TO DPY DDB.
131552 / 254000,,131557          JRST      131557             ;;SELECT OK!
131553 / 200117,,000004          MOVE TAC1,DEVMOD(AC3)        ;
153170 / 000017,,000001                                       ;
153170 / 360617,,000001 POINT 6,17000001,5                    ;
131554 / 135740,,153170           LDB  AC3,153170             ;;GET # OF JOB THAT HAS THAT DPY.
152200 / 020000,,600000           XWD TTYATC,ASSCON!ASSPRG    ;
131555 / 612100,,152200          TDNE TAC1,152200             ;
131556 / 316753,,024061          CAMN  AC3,   JOB(PID)        ;;THIS ONE?
                       DCHNOK:
131557 / 661040,,400000           TLO  TAC,400000             ;;SELECT BIT.
131560 / 365700,,131550         SOJGE  AC2, LOOPS             ;
131561 / 262140,,000002           POP    P,  TAC1             ;
131562 / 205700,,400000         MOVSI  AC2,400000             ;;GET A BIT.
131563 / 210746,,000015          MOVN  AC3,PRGNUM(DDB)        ;;DPY NUMBER THIS PROG.(0 TO DPYNUM-1)
131564 / 242717,,000000           LSH  AC2,      (AC3)        ;
131565 / 670040,,000016           TDO  TAC,000016             ;;MAKE SURE HE GETS HIS OWN.
131566 / 404000,,000001           AND         TAC             ;
131567 / 263140,,000000          POPJ    P,                   ;
                       ; RST WITH NO PARAM BITS ON IS A NOOP -- ALLOW ANY ARGUMENT
                       ; TO APPEAR UNCHANGED IN THE LEFT HALF
                       ADRRST:
131570 / 606000,,000060          TRNN      000060             ;;SIZE OR [X,Y] FIELDS ON?  (DCS-5/29/70)
131571 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE IT ALONE	   (DCS)
                       ;CALL ADROP WITH THE FOLLOWING
                       ;	0	XWD <ADDRESS TO CHECK>,<ANYTHING>
                       ;	TEM	XWD <USER BASE ADDRESS>,<ANYTHING>
                       ;	UCHN	XWD <LENGTH OF USER BUFFER>,<ANYTHING>
                       ;	UUO	XWD TAC,<ADDRESS OF RELOCATION TABLE>
                       ;	TAC1	XWD <ANYTHING>,<ADDRESS TO TYPE OUT ON ERROR>
                       ADROP:
131572 / 274000,,000010           SUB      000010             ;;AN ADDRESSABLE INSTR. UNRELOCATE IT.
131573 / 311000,,000012          CAML      000012             ;;ADDRESS TOO HIGH ?
131574 / 254000,,131604          JRST      131604             ;;YUP.
151772 / 000002,,000000           XWD PGNP,0                  ;
131575 / 270000,,151772           ADD      151772             ;; SKIP OVER HEADER WORDS
131576 / 574640,,000000          HLRE  AC1,                   ;; PICK UP ADDRESS
131577 / 231640,,000061         IDIVI  AC1,000061             ;; GET # BLOCKS AND DISPLACEMENT INTO LAST BLOCK
131600 / 504000,,000016           HRL      000016             ;; USE DISPLACEMENT INTO BLOCK PLUS ADDRESS OF BLOCK
131601 / 200040,,000015          MOVE  TAC,   AC1             ;
131602 / 270020,,000014           ADD      @000014            ;;ADD IN RIGHT RELOCATION.
131603 / 325640,,037403        JUMPGE  AC1,037403             ;;WAS ADDRESS TOO SMALL ?
                       ILLAD:
131604 / 260140,,132076         PUSHJ    P,132076             ;;ILLEGAL ADDRESS IN DPY INSTR.
131605 / 266200,,014113           JSA ITEM,  ERRP             ;
131606 / 000000,,154013                                       ;
131606 / 440700,,154013 POINT 7,00154013,                     ;
                       ILL1:
131607 / 201000,,000014         MOVEI      000014             ;;REPLACE OFFENDING INSTR. WITH NOP.
131610 / 263140,,000000          POPJ    P,                   ;
                       ILLJMS:
131611 / 260140,,132076         PUSHJ    P,DPYERR             ;
131612 / 266200,,014113           JSA ITEM,  ERRP             ;
131613 / 000000,,154035                                       ;
131613 / 440700,,154035 POINT 7,00154035,                     ;
131614 / 254000,,131607          JRST        ILL1             ;
                       HLTOP:
131615 / 200014,,000000          MOVE            (UUO)        ;;REPLACE HLT WITH RETURN JMP.
151775 / 000002,,000020           XWD PGNP,DISJMP             ;
131616 / 270000,,151775           ADD      151775             ;
131617 / 263140,,000000          POPJ    P,                   ;
                       UPGER1:
131620 / 266200,,014113           JSA ITEM,  ERRP             ;
131621 / 000000,,154231                                       ;
131621 / 440700,,154231 POINT 7,00154231,                     ;
131622 / 263140,,000000          POPJ    P,                   ;
                       ; DATA DISC PROGRAM HANDLER
                       ; SENDS THE PROGRAM DIRECTLY OUT OF LOSER CORE IN EXEC MODE
                       ;EXTENDED FEATURES:
                       ;BIT 0 OF HEADER WD 0 => OVERLAPPED XFER (RETURNS WITHOUT WAITING)
                       ; IN THIS MODE HEADER WD 2 ≠ 0 => XFER GOING.
                       ; DPYOUT ALWAYS WAITS FOR PREV XFER, SO DPYOUT WITH WC=0 WILL
                       ; WAIT FOR BUFFER TO BE AVAIL.
                       ;BIT 1 OF HEADER WD 0 => DOUBLE FIELD MODE, WHICH DOES XFER
                       ; TWICE - ONCE ON EACH FIELD. HEADER WD 3 SHOULD POINT TO WORD
                       ; OF BUFFER CONTAINING (ONLY) LOW-ORDER LINE ADDRESS SELECT
                       ; AS 3RD COMMAND BYTE. THIS BYTE WILL BE ADJUSTED TO APPROP
                       ; FIELD ON EACH XFER.
                       DDUPG:
131623 / 332000,,014150         SKIPE      014150             ;; DO WE HAVE A DATA DISC TODAY
131624 / 263140,,000000          POPJ    P,                   ;; NO, SPEAK NO EVIL!
131625 / 260140,,131647         PUSHJ    P,131647             ;;WAIT FOR PREV XFER, IF ANY
153075 / 335654,,000000        SKIPGE  AC1,      (UUO)        ;
131626 / 256200,,153075          XCTR   XR,153075             ;; PICK UP ADDRESS OF USER BUFFER
151340 / 402014,,000002         SETZM           2(UUO)        ;
131627 / 256040,,151340          XCTR   XW,151340             ;;INIT XFER IN PROGRESS FLAG IF USED
153121 / 337714,,000001         SKIPG  AC2,     1(UUO)        ;
131630 / 256200,,153121          XCTR   XR,153121             ;; PICK UP WORD COUNT OF BUFFER
131631 / 263140,,000000          POPJ    P,                   ;;THAT WAS EASY
131632 / 271715,,777777          ADDI  AC2,777777(AC1)        ;; MAKE POINTER TO LAST WORD
153064 / 332016,,000000         SKIPE            (AC2)        ;
131633 / 256200,,153064          XCTR   XR,153064             ;;DON'T CLOBBER IF OK (MIGHT BE UPPER)
151343 / 402016,,000000         SETZM            (AC2)        ;
131634 / 256040,,151343          XCTR   XW,151343             ;; PUT A HALT THERE AT THE END OF THE BUFFER
131635 / 201740,,000010         MOVEI  AC3,000010             ;; WE WILL LOOK IN THIS FAR FOR A CHANNEL SELECT
                       DDCWL:
152526 / 200715,,000000          MOVE  AC2,      (AC1)        ;
131636 / 256200,,152526          XCTR   XR,152526             ;; PICK UP WORD OF PROGRAM
152043 / 000000,,000016                                       ;
152043 / 000300,,000016 POINT 3,00000016,35                   ;
131637 / 135040,,152043           LDB  TAC,152043             ;
131640 / 306040,,000004          CAIN  TAC,000004             ;; IS IT A COMMAND WORD?
131641 / 254000,,131746          JRST      131746             ;; YES, SEE IF IT HAS A CHANNEL SELECT IN IT
                       DDCINC:
131642 / 271640,,000001          ADDI  AC1,000001             ;; BUMP POINTER INTO USER CORE
131643 / 367740,,131636          SOJG  AC3,131636             ;; BUMP COUNT OF DEPTH AND LOOP BACK
131644 / 574046,,000015          HLRE  TAC,PRGNUM(DDB)        ;; NO CHANNEL SELECT, SEE IF WE CAN SEND TO HIS OWN SCREEN
131645 / 325040,,131667        JUMPGE  TAC,DDSCHN             ;
131646 / 254000,,132027          JRST      ILLCHN             ;
                       DDWAIT:
131647 / 336006,,000030         SKIPN      PRGCNT(DDB)        ;
131650 / 263140,,000000          POPJ    P,                   ;;NOTHING GOING ON
131651 / 211700,,000006         MOVNI  AC2, DIOWQ             ;
131652 / 201740,,400000         MOVEI  AC3,400000             ;
131653 / 700600,,001020          CONO   PI,APROFF             ;
131654 / 336006,,000030         SKIPN      PRGCNT(DDB)        ;
131655 / 254000,,131665          JRST      131665             ;;MUST HAVE JUST FINISHED
131656 / 202704,,020574         MOVEM  AC2,JOBQUE(J)          ;
131657 / 436746,,000027          IORM  AC3,PRGJMP(DDB)        ;;TELL PI ROUTINES TO WAKE US
131660 / 700600,,002020          CONO   PI, APRON             ;
131661 / 335004,,027320        SKIPGE      JBTLIN(J)          ;
131662 / 254000,,046124          JRST      046124             ;;AVOID RETESTING IF DETACHED (HEADER WILL GO AWAY)
131663 / 260140,,046124         PUSHJ    P,046124             ;;WAIT FOR IT
131664 / 254000,,131647          JRST      131647             ;;THEN CHECK AGAIN TO BE SURE
                       APRONJ:
131665 / 700600,,002020          CONO   PI, APRON             ;
131666 / 263140,,000000          POPJ    P,                   ;
                       ; HERE WE ARE, READY TO SET THE CHANNEL ADDRESS OF HIS DATA DISC PROGRAM
                       DDSCHN:
152340 / 000000,,000047                                       ;
152340 / 000000,,000001                                       ;
152340 / 000000,,000000                                       ;
152340 / 000000,,000001                                       ;
152340 / 000000,,000003                                       ;
152340 / 000000,,000002                                       ;
152340 / 116004,,001324                                       ;
131667 / 200640,,152340          MOVE  AC1,152340             ;
152404 / 000000,,000015                                       ;
152404 / 141000,,000015 POINT 8,00000015,23                   ;
131670 / 137040,,152404           DPB  TAC,152404             ;
131671 / 202646,,000026         MOVEM  AC1, PRGCW(DDB)        ;; PUT IN COMMAND WORD WITH CHANNEL SELECT
152522 / 200714,,000000          MOVE  AC2,      (UUO)        ;
131672 / 256200,,152522          XCTR   XR,152522             ;
131673 / 260140,,131767         PUSHJ    P,CHKADR             ;
131674 / 505700,,000020          HRLI  AC2,DISJMP             ;
131675 / 206706,,000027         MOVSM  AC2,PRGJMP(DDB)        ;; PUT IN JUMP TO USER'S PROGRAM
131676 / 201040,,000000         MOVEI  TAC,                   ;
153043 / 331014,,000000         SKIPL            (UUO)        ;
131677 / 256200,,153043          XCTR   XR,153043             ;;OVERLAPPED MODE?
131700 / 254000,,131705          JRST      131705             ;;NO
152620 / 203014,,000002         MOVES           2(UUO)        ;
131701 / 256240,,152620          XCTR  XRW,152620             ;;BE SURE WE CAN WRITE HERE
131702 / 201714,,000002         MOVEI  AC2,     2(UUO)        ;
131703 / 260140,,131767         PUSHJ    P,CHKADR             ;
131704 / 201056,,000000         MOVEI  TAC,      (AC2)        ;;SAVE ABS ADR FOR PI ROUTINES
                       UPGQ0:
131705 / 260140,,127323         PUSHJ    P,  GETQ             ;
152530 / 200754,,000000          MOVE  AC3,      (UUO)        ;
131706 / 256200,,152530          XCTR   XR,152530             ;
131707 / 607740,,200000          TLNN  AC3,200000             ;;DOUBLE FIELD MODE?
131710 / 254000,,131722          JRST      131722             ;;NO
151512 / 550714,,000003          HRRZ  AC2,     3(UUO)        ;
131711 / 256200,,151512          XCTR   XR,151512             ;;ADR OF WORD WITH LINE SELECT
152622 / 203016,,000000         MOVES            (AC2)        ;
131712 / 256240,,152622          XCTR  XRW,152622             ;;CHECK WRT ACCESS HERE
131713 / 260140,,131767         PUSHJ    P,CHKADR             ;
131714 / 505056,,000000          HRLI  TAC,      (AC2)        ;;SAVE THIS ADR
131715 / 261140,,000015          PUSH    P,   AC1             ;
131716 / 260140,,127323         PUSHJ    P,127323             ;;WILL NEED 2 Q BLKS
131717 / 476015,,000002         SETOM      QFIELD(AC1)        ;
131720 / 260140,,131727         PUSHJ    P,  UPGQ             ;
131721 / 262140,,000015           POP    P,   AC1             ;
                       UPGQ1:
131722 / 402015,,000002         SETZM      QFIELD(AC1)        ;
131723 / 260140,,131727         PUSHJ    P,  UPGQ             ;
153043 / 331014,,000000         SKIPL            (UUO)        ;
131724 / 256200,,153043          XCTR   XR,153043             ;;OVERLAPPED?
131725 / 254000,,131647          JRST      131647             ;;NO - WAIT
131726 / 263140,,000000          POPJ    P,                   ;;YES - RETURN
                       UPGQ:
131727 / 506315,,000000          HRLM  DDB,      (AC1)        ;;LOAD UP TASK BLOCK WITH PROGRAM HEADER
131730 / 201700,,134642         MOVEI  AC2,134642             ;;DISPATCH TO USER PROGRAM SERVICE
131731 / 542715,,000000          HRRM  AC2,      (AC1)        ;
131732 / 201706,,000030         MOVEI  AC2,PRGCNT(DDB)        ;;PICK UP ADDRESS OF FAKE COUNT FIELD
131733 / 202715,,000006         MOVEM  AC2,QCOUNT(AC1)        ;
131734 / 202055,,000003         MOVEM  TAC, QHPOS(AC1)        ;;STORE SPEC ADRS
131735 / 602040,,777777          TRNE  TAC,777777             ;
131736 / 350001,,000000           AOS            (TAC)        ;;COUNT XFER GOING (FOR LOSER)
131737 / 350006,,000030           AOS      PRGCNT(DDB)        ;;AND FOR US
131740 / 202215,,000005         MOVEM    J, QWAKE(AC1)        ;
151766 / 000001,,000050           XWD 1,50                    ;
131741 / 200700,,151766          MOVE  AC2,151766             ;; MAKE IT LOOK LIKE IT WILL TAKE ENTIRE SCREEN
131742 / 202715,,000001         MOVEM  AC2, QLINE(AC1)        ;
131743 / 350004,,033165           AOS      JBTGLU(J)          ;;KEEP US AROUND
131744 / 260140,,072444         PUSHJ    P,GLUSTT             ;
131745 / 254000,,133426          JRST      QBLOCK             ;
                       ; GET HERE TO LOOK AT A USER'S COMMAND WORD AND SEE IF THERE IS A CHANNEL SELECT
                       CHKAD:
152327 / 000000,,000016                                       ;
152327 / 110300,,000016 POINT 3,00000016,26                   ;
131746 / 135040,,152327           LDB  TAC,152327             ;
131747 / 306040,,000002          CAIN  TAC,000002             ;; IS IT A CHANNEL SELECT?
131750 / 254000,,131760          JRST      131760             ;; YES, SEE IF IT IS LEGAL.
152271 / 000000,,000016                                       ;
152271 / 060300,,000016 POINT 3,00000016,29                   ;
131751 / 135040,,152271           LDB  TAC,152271             ;
131752 / 306040,,000002          CAIN  TAC,     2             ;
131753 / 254000,,131763          JRST      CHKAC2             ;
152225 / 000000,,000016                                       ;
152225 / 030300,,000016 POINT 3,00000016,32                   ;
131754 / 135040,,152225           LDB  TAC,152225             ;
131755 / 306040,,000002          CAIN  TAC,     2             ;
131756 / 254000,,131765          JRST      CHKAC3             ;
131757 / 254000,,131642          JRST      DDCINC             ;
                       CHKAC1:
153127 / 000000,,000016                                       ;
153127 / 341000,,000016 POINT 8,00000016,7                    ;
131760 / 135040,,153127           LDB  TAC,153127             ;
                       CHKAC4:
131761 / 260140,,132010         PUSHJ    P,  CHAD             ;
131762 / 254000,,131667          JRST      DDSCHN             ;
                       CHKAC2:
152700 / 000000,,000016                                       ;
152700 / 241000,,000016 POINT 8,00000016,15                   ;
131763 / 135040,,152700           LDB  TAC,152700             ;
131764 / 254000,,131761          JRST      CHKAC4             ;
                       CHKAC3:
152405 / 000000,,000016                                       ;
152405 / 141000,,000016 POINT 8,00000016,23                   ;
131765 / 135040,,152405           LDB  TAC,152405             ;
131766 / 254000,,131761          JRST      CHKAC4             ;
                       ;CHECK & RELOC USER ADR
                       CHKADR:
131767 / 554744,,027120          HLRZ  AC3,JBTADR(J)          ;
131770 / 305756,,000000         CAIGE  AC3,      (AC2)        ;
131771 / 254000,,131774          JRST      131774             ;;PAST LOWER - TRY UPPER
131772 / 270704,,027120           ADD  AC2,JBTADR(J)          ;
131773 / 263140,,000000          POPJ    P,                   ;
                       CHKADU:
131774 / 626700,,400000          TRZN  AC2,400000             ;
131775 / 254000,,043340          JRST      043340             ;;CAN'T BE UPPER
131776 / 622740,,400000          TRZE  AC3,400000             ;
131777 / 275717,,000001          SUBI  AC2,     1(AC3)        ;
132000 / 135740,,037600           LDB  AC3, PSEGN             ;
132001 / 322740,,043340         JUMPE  AC3,043340             ;;NO UPPER
132002 / 554757,,027120          HLRZ  AC3,JBTADR(AC3)        ;
132003 / 305756,,000000         CAIGE  AC3,      (AC2)        ;
132004 / 254000,,043340          JRST      043340             ;;TOO BIG
132005 / 135740,,037600           LDB  AC3, PSEGN             ;
132006 / 270717,,027120           ADD  AC2,JBTADR(AC3)        ;
132007 / 263140,,000000          POPJ    P,                   ;
                       ;CHANNEL ADDRESS CHECKING. HE CAN WRITE ON HIS OWN SCREEN,
                       ;OR ON ANY CHANNEL HE OWNS, OR ON ANY FREE CHANNEL.
                       CHAD:
132010 / 322040,,132024         JUMPE  TAC,132024             ;;GIVE HIM HIS OWN FOR 0
132011 / 405040,,000037          ANDI  TAC,    37             ;
132012 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
132013 / 260140,,135327         PUSHJ    P,DDCHEK             ;
132014 / 263140,,000000          POPJ    P,                   ;;FREE
132015 / 254000,,132017          JRST      132017             ;
132016 / 263140,,000000          POPJ    P,                   ;;HE OWNS IT
132017 / 200644,,027420          MOVE  AC1,JBTPRV(J)          ;
132020 / 200701,,014525          MOVE  AC2, DDTAB(TAC)        ;
132021 / 607700,,200000          TLNN  AC2,200000             ;;MAYBE OWNER SAYS IT'S OK
132022 / 603640,,004000          TLNE  AC1,UPGPRV             ;
132023 / 263140,,000000          POPJ    P,                   ;;HE CAN WRITE ANYWHERE WITH THE PRIVILEGE
                       MYCHN:
132024 / 574046,,000015          HLRE  TAC,PRGNUM(DDB)        ;;GIVE HIM HIS OWN CHANNEL (IF ANY)
132025 / 325040,,037403        JUMPGE  TAC,037403             ;;WIN
151763 / 000001,,000001                                       ;
132026 / 274140,,151763           SUB    P,151763             ;
                       ILLCHN:
132027 / 201646,,000000         MOVEI  AC1,      (DDB)        ;
132030 / 332006,,000025         SKIPE      DPRLSF(DDB)        ;
132031 / 260140,,074163         PUSHJ    P,074163             ;;MAKE SURE THE PHONY HEADER GETS RETURNED
132032 / 260140,,137616         PUSHJ    P,TTYFUW             ;
132033 / 260140,,042676         PUSHJ    P,INLMES             ;
132041 / 254000,,143040          JRST       TYPGO             ;
                       ;;PGSET  SETS UP REQUESTED PIECE OF GLASS.
                       PGSET:
132042 / 260140,,131014         PUSHJ    P,131014             ;;FIND USER'S DPY PGM.
132043 / 263140,,000000          POPJ    P,                   ;;NO DISPLAY HERE
132044 / 321300,,037401         JUMPL  DDB,CPOPJ1             ;
                       PGSETA:
132045 / 554206,,000011          HLRZ ITEM,PGCALL(DDB)        ;;PTR. TO PG HEADER.
132046 / 322200,,132053         JUMPE ITEM,132053             ;;IF NONE, START FROM SCRATCH.
132047 / 313506,,000023         CAMLE UCHN, LSTPG(DDB)        ;;DOES THIS PG ALREADY "EXIST" ?
132050 / 254000,,132063          JRST      132063             ;;NO. GO EXTEND THE HEADER.
132051 / 271212,,000000          ADDI ITEM,      (UCHN)       ;;YES. MAKE ITEM POINT AT
132052 / 254000,,037401          JRST      037401             ;;THE CALLING INSTR. FOR IT.
                       PGSET1:
132053 / 260140,,127302         PUSHJ    P,127302             ;;GET BLOCK TO USE FOR PG HEADER.
132054 / 202640,,000004         MOVEM  AC1,  ITEM             ;
132055 / 476006,,000023         SETOM       LSTPG(DDB)        ;;NO PG'S EXIST YET.
132056 / 505106,,000012          HRLI TAC1,000012(DDB)        ;;INVENT RETURN JMP TO PGM HEADER.
132057 / 541100,,000020          HRRI TAC1,DISJMP             ;
132060 / 202104,,000000         MOVEM TAC1,      (ITEM)       ;;PUT IN FIRST WORD OF PG HEADER.
132061 / 505200,,000020          HRLI ITEM,DISJMP             ;
132062 / 206206,,000011         MOVSM ITEM,PGCALL(DDB)        ;;FIX CALL ON PG HEADER.
                       PGSET2:
132063 / 201100,,000014         MOVEI TAC1,000014             ;;EXTEND ACTIVE PART OF PG HEADER.
132064 / 270206,,000023           ADD ITEM, LSTPG(DDB)        ;;GET LAST CURRENT PAGE.
132065 / 250506,,000023          EXCH UCHN, LSTPG(DDB)        ;
132066 / 274506,,000023           SUB UCHN, LSTPG(DDB)        ;;NO. OF PLACES TO EXTEND.
132067 / 505212,,000000          HRLI ITEM,      (UCHN)       ;;MAKE AOBJN WORD.
132070 / 200504,,000001          MOVE UCHN,     1(ITEM)       ;;GET RETURN JMP.
                       PGSL1:
132071 / 202504,,000002         MOVEM UCHN,     2(ITEM)       ;;PUT RTN JMP FARTHER UP.
132072 / 202104,,000001         MOVEM TAC1,     1(ITEM)       ;;PUT NOP WHERE IT USED TO BE.
132073 / 402004,,000022         SETZM      000022(ITEM)       ;;THIS PG IS NOW 0 SIZE.
132074 / 253200,,132071         AOBJN ITEM, PGSL1             ;
132075 / 254000,,037401          JRST      CPOPJ1             ;
                       ; THIS IS THE DPY ERROR ROUTINE. IT TYPES OUT THE PC IN TAC1 ON
                       ; THE DISPLAY.
                       DPYERR:
132076 / 261140,,000010          PUSH    P,   TEM             ;
132077 / 261140,,000002          PUSH    P,  TAC1             ;
132100 / 266200,,014113           JSA ITEM,014113             ;;DO THIS SO NO TERMINATING CRLF
132101 / 000000,,153744                                       ;
132101 / 440700,,153744 POINT 7,00153744,                     ;
132102 / 540643,,000000           HRR  AC1,      (P)          ;
132103 / 201700,,000006         MOVEI  AC2,     6             ;
                       DPYER1:
132104 / 553000,,000015         HRRZS         AC1             ;
132105 / 242640,,000003           LSH  AC1,000003             ;;GET ONE OCTAL DIGIT.
132106 / 661640,,000060           TLO  AC1,    60             ;
152652 / 000000,,000015                                       ;
152652 / 220700,,000015 POINT 7,00000015,17                   ;
132107 / 135400,,152652           LDB  CHR,152652             ;
132110 / 261140,,000015          PUSH    P,000015             ;; SAVE ALL OUR RELEVANT DATA
132111 / 261140,,000016          PUSH    P,   AC2             ;
132112 / 200246,,000017          MOVE  DAT, CURPP(DDB)        ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
132113 / 500240,,000006           HLL  DAT,000006             ;; PUT IN DD BIT
132114 / 700600,,001004          CONO   PI,001004             ;;TURN OFF RPH
132115 / 260140,,127416         PUSHJ    P,127416             ;;PRINT  IT.
132116 / 700600,,002004          CONO   PI,002004             ;;TURN ON RPH
132117 / 262140,,000016           POP    P,   AC2             ;
132120 / 262140,,000015           POP    P,   AC1             ;
132121 / 367700,,132104          SOJG  AC2,DPYER1             ;
132122 / 266200,,014113           JSA ITEM,  ERRP             ;
132123 / 000000,,152275                                       ;
132123 / 440700,,152275 POINT 7,00152275,                     ;
132124 / 262140,,000002           POP    P,  TAC1             ;
132125 / 262140,,000010           POP    P,   TEM             ;
132126 / 263140,,000000          POPJ    P,                   ;
                       UPGMVM:
132127 / 260140,,132145         PUSHJ    P,132145             ;;DO `MOVEM' INTO P OF G: TAKE CARE OF PRELIMINARIES.
132130 / 263140,,000000          POPJ    P,                   ;;IGNORE IF NO CAN DO
132131 / 606000,,000003          TRNN      000003             ;;IF THING BEING STORED IS A COMPLICATED DPY INSTR.,
132132 / 260140,,131502         PUSHJ    P,131502             ;; THEN CHECK AND RELOCATE IT.
132133 / 207000,,000005         MOVSS      000005             ;;GET RELOCATED ADDRESS OF THE UPGMVM.
132134 / 202005,,000000         MOVEM            (DAT)        ;;DO THE STORE.
132135 / 263140,,000000          POPJ    P,                   ;
                       UPGMOV:
132136 / 261140,,000012          PUSH    P,000012             ;;DO A `MOVE' FROM THE CURRENT P OF G.
132137 / 260140,,132145         PUSHJ    P,132145             ;;LET SOMEBODY ELSE DO THE REAL WORK !
132140 / 634240,,000005          TDZA  DAT,000005             ;;RETURN 0 IF NO CAN DO
132141 / 267240,,132142           JRA  DAT,132142             ;;HO, HO, HO.  SEE THE CLEVER PROGRAMMER.
132142 / 262140,,000012           POP    P,000012             ;; P1ULOC DOESN'T HAVE OUR UUO ANY MORE, MUST SAVE CHANNEL NUMBER OURSELVES
152573 / 202252,,000000         MOVEM  DAT,      (UCHN)       ;
132143 / 256040,,152573          XCTR   XW,152573             ;;PUT RESULT IN USER'S AC.
132144 / 263140,,000000          POPJ    P,                   ;
                       UPGMV:
132145 / 260140,,131014         PUSHJ    P,131014             ;;COMMON ROUTINE FOR UPGMOV AND UPGMVM. FIND PRGM.
132146 / 263140,,000000          POPJ    P,                   ;;NO DPY, NO MOVY
132147 / 321300,,037403         JUMPL  DDB, CPOPJ             ;
132150 / 332206,,000020         SKIPE ITEM, CURPG(DDB)        ;;GET CURRENTLY SELECTED P OF G.
132151 / 336004,,000021         SKIPN        SIZE(ITEM)       ;;MAKE SURE IT EXISTS.
132152 / 263140,,000000          POPJ    P,                   ;
152501 / 200252,,000000          MOVE  DAT,      (UCHN)       ;
132153 / 256200,,152501          XCTR   XR,152501             ;;PICK UP CONTENTS OF USER'S AC.
132154 / 204444,,000000          MOVS   T2,      (ITEM)       ;;GET PTR. TO THE P OF G.
132155 / 275440,,000002          SUBI   T2,000002             ;;MAKE IT POINT TO THE DESCRIPTOR WORDS.
132156 / 514411,,000001          HRLZ  TEM,  PGSA(T2)         ;;STARTING ADDR. (IN USER CORE) OF P OF G.
132157 / 514511,,000000          HRLZ UCHN,      (T2)         ;;LENGTH OF P OF G.
132160 / 514000,,000014          HRLZ      000014             ;;ADDRESS OF THE `MOVE' OR `MOVEM'.
151770 / 000001,,013746           XWD TAC,TBL                 ;
132161 / 200600,,151770          MOVE  UUO,151770             ;;PREPARE TO GENERATE A BLOCK MAP FOR
132162 / 516454,,000000         HRLZM   T2,      (UUO)        ;;THE P OF G. (PUT IN BOTTOM PTR.).
132163 / 332451,,000065         SKIPE   T2,  LINK(T2)         ;;GET NEXT BLOCK, IF ANY.
132164 / 344600,,132162          AOJA  UUO,132162             ;;PUT IT IN MAP.
132165 / 541600,,013746          HRRI  UUO,013746             ;;MAKE UUO POINT TO MAP.
132166 / 554100,,000000          HLRZ TAC1,                   ;;PRINT THIS ADDRESS IN EVENT OF ERROR!
132167 / 260140,,131572         PUSHJ    P,131572             ;;NOW RELOCATE AND CHECK ADDR. OF MOVE.
132170 / 250240,,000000          EXCH  DAT,                   ;;PUT OPERAND (IF `MOVEM') INTO 0.
132171 / 254000,,037401          JRST      CPOPJ1             ;
                       PGIOT:
132172 / 301500,,000005          CAIL UCHN,000005             ;;GENERAL P OF G SERVICE IOT.
132173 / 254000,,043340          JRST      UUOERR             ;
132174 / 260140,,131031         PUSHJ    P,131031             ;; FIND A PROGRAM HEADER (UCHN =3 GAURANTEES ONE)
132175 / 263140,,000000          POPJ    P,                   ;;IGNORE IF NO DISPLAY
132176 / 327332,,132202         JUMPG  DDB,@ PGDSP(UCHN)      ;; IF III, DISPATCH NOW
132177 / 305500,,000003         CAIGE UCHN,000003             ;; ONLY ONES LEGAL FOR DD CURRENTLY
132200 / 263140,,000000          POPJ    P,                   ;; ALL THE OTHERS DON'T MAKE SENSE.
132201 / 254032,,132202          JRST      @ PGDSP(UCHN)      ;;INDEX REG FIELD WAS MISSING, SO
                       ; ONLY PGSEL WAS AVAILABLE -- DCS (6/2/70)
                       ; UUOMAC PGDSP,PGIOT
                       PGDSP:
132202 / 000000,,132215                                       ;
132203 / 000000,,132226                                       ;
132204 / 000000,,132244                                       ;
132205 / 000000,,131623                                       ;
132206 / 000000,,132257                                       ;
132207 / 715200,,131066         PGIOT UUOCNT-1,UUOLNK             ;
                       PGSEL:
132215 / 550500,,000014          HRRZ UCHN,000014             ;;SELECT THE P OF G INDICATED BY THE ADDR. FIELD.
132216 / 301500,,000020          CAIL UCHN,000020             ;;IS IT LEGAL ?
132217 / 254000,,043211          JRST      ADRERR             ;
132220 / 260140,,132045         PUSHJ    P,132045             ;;FIND THE P OF G.
132221 / 263140,,000000          POPJ    P,                   ;;SHOULD NEVER GET HERE, BUT PGSETA SKIP RETURNS
132222 / 202206,,000020         MOVEM ITEM, CURPG(DDB)        ;;MAKE IT THE CURRENTLY SELECTED ONE.
132223 / 263140,,000000          POPJ    P,                   ;
                       VPGACT:
132224 / 201305,,000000         MOVEI  DDB,      (DAT)        ;;HERE ON CLK RQ FROM VDSTR
132225 / 554606,,000021          HLRZ  UUO,PRGACT(DDB)        ;;THIS MAKES THE PROGRAM AGREE WITH THE BITS
                       PGACT:
132226 / 554206,,000011          HLRZ ITEM,PGCALL(DDB)        ;
132227 / 322200,,037403         JUMPE ITEM, CPOPJ             ;
132230 / 506606,,000021          HRLM  UUO,PRGACT(DDB)        ;
132231 / 200046,,000023          MOVE  TAC, LSTPG(DDB)        ;
132232 / 201640,,000014         MOVEI  AC1,DISNOP             ;
132233 / 201700,,000024         MOVEI  AC2,DISJSR             ;
                       PGACL:
132234 / 336004,,000021         SKIPN        SIZE(ITEM)       ;
132235 / 254000,,132241          JRST       PGAC1             ;
132236 / 542644,,000000          HRRM  AC1,      (ITEM)       ;
132237 / 602600,,400000          TRNE  UUO,400000             ;
132240 / 542704,,000000          HRRM  AC2,      (ITEM)       ;
                       PGAC1:
132241 / 241600,,000001           ROT  UUO,     1             ;
132242 / 361040,,037403          SOJL  TAC, CPOPJ             ;
132243 / 344200,,132234          AOJA ITEM, PGACL             ;
                       ;;PGCLR FLUSHES ANY PIECES OF GLASS A LOSER MAY HAVE.  DDB SHOULD BE SET UP POINTING TO PRGM HEADER.
                       PGCLR:
132244 / 402006,,000020         SETZM       CURPG(DDB)        ;
132245 / 554206,,000011          HLRZ ITEM,PGCALL(DDB)        ;;GET PTR. TO PG HEADER BLK.
132246 / 322200,,037403         JUMPE ITEM,037403             ;;IF NONE, GO AWAY.
                       PGCLR1:
132247 / 201100,,000014         MOVEI TAC1,000014             ;;FREE A PIECE OF GLASS.
132250 / 260140,,131514         PUSHJ    P,131514             ;;(SEE ABOVE.)
132251 / 371006,,000023          SOSL       LSTPG(DDB)        ;;HAVE WE GOT ALL THE PG'S ?
132252 / 344200,,132247          AOJA ITEM,132247             ;;NO. GET SOME MORE.
132253 / 201500,,000014         MOVEI UCHN,000014             ;;TURN OFF CALL ON THE PG HEADER.
132254 / 250506,,000011          EXCH UCHN,PGCALL(DDB)        ;
132255 / 554640,,000012          HLRZ  AC1,000012             ;;PTR. TO HEADER.
132256 / 254000,,127313          JRST      127313             ;;FREE THE PG HEADER BLOCK.
                       ; THIS UUO GETS INFORMATION FROM THE SYSTEM ABOUT THE USER'S PIECES
                       ; OF GLASS. IT IS GIVEN IN A 17. WORD TABLE. THE FIRST WORD IS
                       ; XWD <POG ACTIVE BITS>,<PP ACTIVE BITS> IN PPACT AND PGACT FORMAT.
                       ; THE NEXT 16. WORDS, ONE WORD FOR EACH POG, IS XWD <WORD COUNT>,<STARTING ADDRESS>
                       PGINFO:
132257 / 200646,,000021          MOVE  AC1,PRGACT(DDB)        ;; PICK UP THE ACTIVATION BITS
152603 / 202654,,000000         MOVEM  AC1,      (UUO)        ;
132260 / 256040,,152603          XCTR   XW,152603             ;
132261 / 271600,,000001          ADDI  UUO,     1             ;
132262 / 554646,,000011          HLRZ  AC1,PGCALL(DDB)        ;; PICK UP ADDRESS OF UPG CONTROL BLOCK
132263 / 400740,,000000          SETZ  AC3,                   ;
                       PGCLP:
132264 / 554415,,000000          HLRZ  CHR,      (AC1)        ;; PICK UP ADDRESS OF FIRST BLOCK OF CODE
132265 / 322400,,132274         JUMPE  CHR,132274             ;; IF NOTHING THERE, CLEAR WORD IN TABLE
132266 / 275400,,000002          SUBI  CHR,000002             ;; POINT US TO THE CONTROL INFORMATION
132267 / 550710,,000001          HRRZ  AC2,  PGSA(CHR)        ;; PICK UP THE STARTING ADDRESS
151462 / 542714,,000000          HRRM  AC2,      (UUO)        ;
132270 / 256240,,151462          XCTR  XRW,151462             ;
132271 / 550650,,000000          HRRZ  AC1,      (CHR)        ;; AND THE WORD COUNT
151440 / 506654,,000000          HRLM  AC1,      (UUO)        ;
132272 / 256240,,151440          XCTR  XRW,151440             ;
132273 / 254000,,132275          JRST       PGCNT             ;
                       PGSZ:
151336 / 402014,,000000         SETZM            (UUO)        ;
132274 / 256040,,151336          XCTR   XW,151336             ;
                       PGCNT:
132275 / 271600,,000001          ADDI  UUO,000001             ;; BUMP POINTER INTO USER'S TABLE
132276 / 271640,,000001          ADDI  AC1,000001             ;; AND POINTER TO UPG CONTROL BLOCK
132277 / 271740,,000001          ADDI  AC3,000001             ;; AND COUNT OF NUMBER OF POGS SEEN
132300 / 307746,,000023          CAIG  AC3, LSTPG(DDB)        ;; ARE WE PAST THE LAST?
132301 / 254000,,132264          JRST      132264             ;; NO, LOOP BACK
                       PGXLP:
132302 / 303740,,000017         CAILE  AC3,000017             ;; ARE WE DONE?
132303 / 263140,,000000          POPJ    P,                   ;; YES, LEAVE
151336 / 402014,,000000         SETZM            (UUO)        ;
132304 / 256040,,151336          XCTR   XW,151336             ;
132305 / 271740,,000001          ADDI  AC3,000001             ;; AND COUNT
132306 / 344600,,132302          AOJA  UUO,132302             ;; BUMP POINTER AND LOOP
132307 /                 ;::    BEND STANFO.DPYSER.UPG.
                       ;;DPYTYP IS CALLED AT CLOCK LEVEL TO TYPE SOME CHRS. FROM A 
                       ;; TTY OUTPUT BUFFER ONTO A DISPLAY.  DAT CONTAINS LINE NUMBER.
                       DPYTY1:
132307 / 602240,,777600          TRNE  DAT,777600             ;; LEGAL LINE NUMBER?
132310 / 254000,,132433          JRST      132433             ;; NO, GIVE ERROR MESSAGE
132311 / 336305,,032347         SKIPN  DDB,TTYTAB(DAT)        ;; PICK UP DEVICE DATA BLOCK ADDRESS
132312 / 263140,,000000          POPJ    P,                   ;; IF NONE, LEAVE NOW, NO CHARACTERS TO TYPE
132313 / 550100,,000005          HRRZ TAC1,000005             ;; SAVE LINE NUMBER
                       DPYERT:
132314 / 541246,,000016          HRRI  DAT,TTIBUF(DDB)        ;; PICK UP INPUT BUFFER ADDRESS
132315 / 505240,,132307          HRLI  DAT,132307             ;; MAKE US COME BACK TO THIS ROUTINE IF WE HAVE TO WAIT
132316 / 254000,,132331          JRST      DPYTY4             ;
                       DPYTYP:
132317 / 326540,,132322         JUMPN  PID,132322             ;
151723 / 000000,,000034                                       ;
132320 / 261140,,151723          PUSH    P,151723             ;
132321 / 262140,,036260           POP    P,036260             ;
132322 / 602240,,777600          TRNE  DAT,777600             ;
132323 / 254000,,132433          JRST      132433             ;; ILLEGAL LINE NUMBER
132324 / 505240,,132317          HRLI  DAT,132317             ;; COME BACK TO HERE IF WE HAVE TO WAIT
132325 / 336305,,032347         SKIPN  DDB,TTYTAB(DAT)        ;; IS THERE A DDB THERE?
132326 / 263140,,000000          POPJ    P,                   ;; NO, NOT MUCH TO DO NOW!
132327 / 550100,,000005          HRRZ TAC1,000005             ;; SAVE LINE NUMBER
132330 / 541246,,000025          HRRI  DAT,TTOBUF(DDB)        ;; PICK UP OUTPUT BUFFER ADDRESS
                       DPYTY4:
132331 / 201446,,000000         MOVEI DSER,      (DDB)        ;;PRESERVE A COPY OF DDB ADDR.
132332 / 550302,,012567          HRRZ  DDB,012567(TAC1)       ;;FIND DPY FOR THIS JOB.
132333 / 326300,,132340         JUMPN  DDB,132340             ;; IF WE HAVE A BLOCK, OK
                       DPYTY5:
132334 / 260140,,126421         PUSHJ    P,126421             ;; OTHERWISE, TRY TO MAKE ONE
132335 / 254000,,132554          JRST      132554             ;; NOONE HOME, LOSE LOSE
132336 / 350000,,154746           AOS      154746             ;; BUMP NUMBER OF TIMES WE HAD TO DO THIS
132337 / 550302,,012567          HRRZ  DDB,012567(TAC1)       ;
                       DPYTY2:
132340 / 211000,,000012         MOVNI      000012             ;;TYPE NO MORE THAN 12 CHARS/TICK.
132341 / 332606,,000017         SKIPE  UUO, CURPP(DDB)        ;;TYPE ON CURRENTLY SELECTED P OF P.
132342 / 254000,,132355          JRST      DPYTL1             ;
                       DPYTY6:
132343 / 261140,,000005          PUSH    P,000005             ;; SAVE THE OUTPUT BUFFER ADDRESS
132344 / 574046,,000015          HLRE  TAC,PRGNUM(DDB)        ;; PICK UP DPY NUMBER
132345 / 260140,,127200         PUSHJ    P,127200             ;; SEE IF WE CAN GET A PAGE PRINTER
132346 / 254000,,132353          JRST      132353             ;; NO, COME BACK NEXT TICK AND TRY AGAIN
132347 / 260140,,126623         PUSHJ    P,126623             ;; YES, INITIALIZE IT
132350 / 550606,,000017          HRRZ  UUO, CURPP(DDB)        ;; PICK UP ADDRESS OF PAGE PRINTER CONTROL BLOCK
132351 / 262140,,000005           POP    P,000005             ;; GET BACK TTY OUTPUT BUFFER ADDRESS
132352 / 254000,,132355          JRST      DPYTL1             ;
                       DPYTY3:
132353 / 262140,,000005           POP    P,   DAT             ;
132354 / 254000,,132554          JRST      DPYTLN             ;
                       ; HERE WE ARE AT CLOCK LEVEL WITH (SUPPOSEDLY) DAT SET TO
                       ; THE TTY BUFFER AND UUO POINTING TO THE PAGE PRINTER CONTROL BLOCK
                       DPYTL1:
132355 / 332014,,000044         SKIPE        PPDD(UUO)        ;; IS THIS A DD DISPLAY?
132356 / 661600,,400000           TLO  UUO,400000             ;; YES, FLAG THIS TO DPYSER
132357 / 332006,,000031         SKIPE      DPHOLD(DDB)        ;; ARE WE IN HOLD MODE?
132360 / 254000,,132443          JRST      132443             ;; YES, PRINT STARS AND GO AWAY
132361 / 332014,,000047         SKIPE       PPENQ(UUO)        ;; DO WE CURRENTLY HAVE ANYTHING IN THE QUEUE?
132362 / 263140,,000000          POPJ    P,                   ;; YES, GO AWAY UNTIL IT IS DONE.
                       DPYTL2:
132363 / 700600,,001004          CONO   PI,001004             ;; AVOID EMBARASSING CONFUSION OVER BUFFER EMPTY
                       DPTL2A:
132364 / 260140,,140755         PUSHJ    P,140755             ;; GET A CHARACTER
132365 / 322400,,132714         JUMPE  CHR,132714             ;; BUFFER EMPTY
132366 / 331014,,000042         SKIPL      LSTCHR(UUO)        ;;REG 1/25/74 DID TYO INVENT CRLF LAST TIME?
132367 / 254000,,132377          JRST      132377             ;;NO. BEHAVE NORMALLY
132370 / 306400,,000015          CAIN  CHR,000015             ;;YES. CR'S GET FLUSHED NOW.
132371 / 254000,,132364          JRST      132364             ;;
132372 / 202414,,000042         MOVEM  CHR,LSTCHR(UUO)        ;;SAVE CHR
132373 / 201400,,000012         MOVEI  CHR,    12             ;
132374 / 250414,,000042          EXCH  CHR,LSTCHR(UUO)        ;;RESTORE CHR. LSTCHR NOW LOOKS LIKE NORMAL LF.
132375 / 306400,,000012          CAIN  CHR,000012             ;;FIRST LF AFTER LSTCHR WAS SET TO -1 IS FLUSHED.
132376 / 254000,,132364          JRST      132364             ;;ONLY IF NO PREVIOUS CHARACTER (EXCEPT CR) SEEN
                       DPTL2B:
132377 / 261140,,000010          PUSH    P,000010             ;; SAVE THE CHARACTER
132400 / 250240,,000014          EXCH  DAT,000014             ;; GET PP CONTROL BLOCK ADDRESS IN DAT
132401 / 260140,,127416         PUSHJ    P,127416             ;; SEND THE CHARACTER OUT
132402 / 700600,,002004          CONO   PI, SCNON             ;
132403 / 250240,,000014          EXCH  DAT,   UUO             ;
132404 / 262140,,000010           POP    P,   CHR             ;
132405 / 335014,,000042        SKIPGE      LSTCHR(UUO)        ;;DID TYO INVENT CRLF AT LONG LINE?  REG 1/25/74
132406 / 201400,,000012         MOVEI  CHR,000012             ;;YES. PRETEND WE WERE THE ONE WHO ASKED FOR LF.
132407 / 306400,,000012          CAIN  CHR,000012             ;; IS IT END OF LINE TIME?
132410 / 372006,,000033          SOSE       LHCNT(DDB)        ;; YES, ARE WE SUPPOSED TO HOLD NOW?
132411 / 254000,,132416          JRST      132416             ;; NO, GO ON
132412 / 135640,,126350           LDB  AC1,126350             ;; YES, RESET HOLD COUNT
132413 / 202646,,000033         MOVEM  AC1, LHCNT(DDB)        ;
132414 / 476006,,000031         SETOM      DPHOLD(DDB)        ;
132415 / 254000,,132443          JRST        STAR             ;
                       DPYTL3:
132416 / 332014,,000045         SKIPE       GLTCH(UUO)        ;; GLITCH TIME?
132417 / 332006,,000034         SKIPE      GLHCNT(DDB)        ;; YES, IS IT TIME TO HOLD?
132420 / 254000,,132425          JRST      DPYTL4             ;
132421 / 135640,,126351           LDB  AC1,126351             ;; YES, RESET COUNT
132422 / 202646,,000034         MOVEM  AC1,GLHCNT(DDB)        ;
132423 / 476006,,000031         SETOM      DPHOLD(DDB)        ;
132424 / 254000,,132443          JRST        STAR             ;
                       DPYTL4:
132425 / 321600,,132544         JUMPL  UUO,132544             ;; IF DD, GO TO SPECIAL ROUTINE
                       ;*** RPH PATCH TO SLOW DOWN OUTPUT OF BLANK LINES
132426 / 302400,,000012          CAIE  CHR,    12             ;
132427 / 306400,,000015          CAIN  CHR,    15             ;
132430 / 254000,,132554          JRST      DPYTLN             ;
                       ;*** END SLOW DOWN PATCH
132431 / 346000,,132363          AOJN      132363             ;; OTHERWISE, COUNT DOWN AND LOOP BACK
132432 / 254000,,132554          JRST      132554             ;; AND PUT IN ANOTHER CLOCK REQUEST IF TOO MANY CHARACTERS THIS TICK
                       ; ROUTINE TO TYPE CTY ERROR MESSAGE ON ILLEGAL LINE NUMBER
                       DPYTER:
132433 / 261140,,000005          PUSH    P,   DAT             ;
132434 / 260140,,044120         PUSHJ    P,DISERR             ;
132435 / 000000,,154157                                       ;
132436 / 000103,,777777        OCTQQQ      777777(P)          ;
132437 / 000000,,152275                                       ;
132440 / 777777,,777777                                       ;
132441 / 262140,,000005           POP    P,   DAT             ;
132442 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO TYPE STAR ON LINE THREE WHEN TYPEOUT IS HELD UP
                       STAR:
132443 / 327600,,132465         JUMPG  UUO,132465             ;; SEPARATE ROUTINE FOR III
132444 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
132445 / 261140,,000015          PUSH    P,000015             ;; SAVE ITS ADDRESS
132446 / 260140,,127323         PUSHJ    P,127323             ;; PICK UP ONE FOR THE OTHER FIELD
132447 / 200703,,000000          MOVE  AC2,      (P)          ;; GET THE ADDRESS OF THE FIRST ONE BACK
132450 / 505600,,134701          HRLI  UUO,134701             ;; SET UP DISPATCH TO ROUTINE THAT DRAWS STAR ON LINE THREE
132451 / 206615,,000000         MOVSM  UUO,      (AC1)        ;; SET IT IN FIRST TASK BLOCK
132452 / 206616,,000000         MOVSM  UUO,      (AC2)        ;; AND IN SECOND ONE
132453 / 402015,,000006         SETZM      QCOUNT(AC1)        ;; DON'T WAKE ANYBODY UP ABOUT THIS
132454 / 402016,,000006         SETZM      QCOUNT(AC2)        ;
132455 / 402015,,000002         SETZM      QFIELD(AC1)        ;; FIRST FIELD OF ERASURE
132456 / 476016,,000002         SETOM      QFIELD(AC2)        ;; SECOND FIELD
151777 / 000003,,000003           XWD 3,3                     ;
132457 / 200740,,151777          MOVE  AC3,151777             ;; TELL QBLOCK WHERE TO QUEUE THIS REQUEST
132460 / 202755,,000001         MOVEM  AC3, QLINE(AC1)        ;
132461 / 202756,,000001         MOVEM  AC3, QLINE(AC2)        ;
132462 / 260140,,133426         PUSHJ    P,133426             ;; NOW QUEUE UP THE REQUESTS
132463 / 262140,,000015           POP    P,   AC1             ;
132464 / 254000,,133426          JRST      QBLOCK             ;
                       IISTAR:
132465 / 200646,,000013          MOVE  AC1, PSELB(DDB)        ;; PICK UP GUY'S SELECT WORD
151610 / 770000,,000000                                       ;
132466 / 404640,,151610           AND  AC1,151610             ;; MASK OUT ALL BUT HIS SELECT BIT
132467 / 436640,,014431           ORM  AC1,014431             ;; SELECT HIM FOR THE MASSAGE
132470 / 242640,,777764           LSH  AC1,777764             ;; MOVE OVER TO DESELECT FIELD
132471 / 412640,,014431        ANDCAM  AC1,DPYHLD             ;
132472 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE, CALLED FROM CLOCK CALL WITH LINE NUMBER IN DAT, TO CONTINUE PAGE PRINTER
                       UNHOLD:
132473 / 505240,,132317          HRLI  DAT,132317             ;; SET UP TO COME BACK TO PRINT ROUTINE IF DONE
132474 / 602240,,777600          TRNE  DAT,777600             ;; IS THE LINE NUMBER LEGAL?
132475 / 254000,,132433          JRST      132433             ;; NO, TYPE MESSAGE
132476 / 336305,,032347         SKIPN  DDB,TTYTAB(DAT)        ;; IS THERE A TTY DDB?
132477 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT.
132500 / 550100,,000005          HRRZ TAC1,000005             ;; SAVE LINE NUMBER
132501 / 541246,,000025          HRRI  DAT,TTOBUF(DDB)        ;; PICK UP OUTPUT BUFFER ADDRESS
132502 / 201446,,000000         MOVEI DSER,      (DDB)        ;; COPY THE DEVICE DATA BLOCK POINTER
132503 / 550302,,012567          HRRZ  DDB,012567(TAC1)       ;
132504 / 322300,,132331         JUMPE  DDB,132331             ;; IF NO PROGRAM HEADER, NO STAR TO ERASE
132505 / 336606,,000017         SKIPN  UUO, CURPP(DDB)        ;; GET ADDRESS OF PAGE PRINTER CONTROL BLOCK
132506 / 254000,,132343          JRST      132343             ;; IF NONE, GO MAKE ONE UP
132507 / 332014,,000044         SKIPE        PPDD(UUO)        ;
132510 / 661300,,400000           TLO  DDB,400000             ;
132511 / 500600,,000006           HLL  UUO,   DDB             ;
132512 / 327600,,132536         JUMPG  UUO,UNHIII             ;
132513 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
132514 / 261140,,000015          PUSH    P,000015             ;; SAVE ITS ADDRESS
132515 / 260140,,127323         PUSHJ    P,127323             ;; GET ANOTHER ONE FOR THE OTHER FIELD
132516 / 200703,,000000          MOVE  AC2,      (P)          ;; PICK UP ADDRESS OF FIRST ONE
132517 / 402015,,000002         SETZM      QFIELD(AC1)        ;; SEND IT OUT ON ONE FIELD
132520 / 476016,,000002         SETOM      QFIELD(AC2)        ;; THE OTHER ON THE OTHER
132521 / 505600,,134373          HRLI  UUO,134373             ;; DISPATCH TO THE ERASURE ROUTINE
132522 / 206615,,000000         MOVSM  UUO,      (AC1)        ;; SET THAT IN DISPATCH ADDRESS
132523 / 206616,,000000         MOVSM  UUO,      (AC2)        ;
132524 / 402015,,000006         SETZM      QCOUNT(AC1)        ;; DON'T WAKE ANYBODY UP
132525 / 402016,,000006         SETZM      QCOUNT(AC2)        ;
151777 / 000003,,000003           XWD 3,3                     ;
132526 / 200740,,151777          MOVE  AC3,151777             ;; ERASE LINE 3
132527 / 202755,,000001         MOVEM  AC3, QLINE(AC1)        ;
132530 / 202756,,000001         MOVEM  AC3, QLINE(AC2)        ;
132531 / 260140,,133426         PUSHJ    P,QBLOCK             ;
132532 / 262140,,000015           POP    P,   AC1             ;
132533 / 260140,,133426         PUSHJ    P,QBLOCK             ;
132534 / 505600,,400000          HRLI  UUO,400000             ;; RESTORE DD FLAG
132535 / 254000,,132355          JRST      DPYTL1             ;
                       UNHIII:
132536 / 200646,,000013          MOVE  AC1, PSELB(DDB)        ;
151610 / 770000,,000000                                       ;
132537 / 404640,,151610           AND  AC1,151610             ;
132540 / 412640,,014431        ANDCAM  AC1,DPYHLD             ;
132541 / 242640,,777764           LSH  AC1,777764             ;
132542 / 436640,,014431           ORM  AC1,DPYHLD             ;
132543 / 254000,,132355          JRST      DPYTL1             ;
                       ; COME HERE FOR DATA DISK TO SEE IF IT IS END OF LINE OR GLITCH TIME.
                       DPTDD:
132544 / 336014,,000045         SKIPN       GLTCH(UUO)        ;; HAS THE PAGE PRINTER GLITCHED?
132545 / 306400,,000012          CAIN  CHR,000012             ;; OR IS THIS END OF LINE?
132546 / 254000,,132550          JRST      132550             ;; YES, QUEUE UP A DD REQUEST AND LEAVE
132547 / 254000,,132363          JRST      132363             ;; OTHERWISE, PUT IN ANOTHER CHARACTER
                       DPTDDK:
132550 / 550654,,000001          HRRZ  AC1, TPJMP(UUO)        ;; FIRST, IS THE P OF P ACTIVE?
132551 / 306640,,000014          CAIN  AC1,DISNOP             ;
132552 / 254000,,132363          JRST      132363             ;; NO, JUST EMPTY THE BUFFER
132553 / 254000,,132561          JRST        QDDR             ;
                       DPYTLN:
132554 / 540240,,000002           HRR  DAT,000002             ;; PUT IN LINE NUMBER AS DATUM
                       DPYTIM:
132555 / 700600,,000400          CONO   PI, PIOFF             ;
132556 / 136240,,013624          IDPB  DAT,013624             ;;PUT IN CLOCK REQUEST.
132557 / 700600,,000200          CONO   PI,  PION             ;
132560 / 263140,,000000          POPJ    P,                   ;
                       ; THESE ROUTINES ARE CALLED BY THE FOLLOWING IN APRINT
                       ;	SOSGE DDCNT
                       ;	JRST DDCLK
                       ;	SKIPE DDSTART
                       ;	JRST DDSTRT
                       ;APRADD:
                       ; THE DATA DISK ROUTINES KNOW ALL ABOUT THE PAGE PRINTER
                       ; AND THE PIECE OF GLASS MECHANISM. TRANSFERS ARE STARTED
                       ; BY PLACING AN ADDRESS IN THE QUEUE WITH THE LEFT HALF GIVING
                       ; THE TYPE OF TRANSFER.
                       ; HERE ARE THE DD HARDWARE BITS
                       ; CONO BITS
                       ; CONI BITS
                       ; $M+2/     -1775,,770707
                       ; TASKS ARE QUEUED UP IN SMALL BLOCKS IN THE FOLLOWING FORM:
                       ; FIRST WORD CONTAINS XWD <RELEVANT DATA BLOCK>,<ROUTINE>
                       ; CLOCK LEVEL QUEING SCHEME. PLANTS TASKS IN QUEUE AND LEAVES.
                       ; LAST TASK TO FINISH PLANTS CLOCK REQUEST TO TRANSFER MORE DATA.
                       QDDR:
132561 / 200754,,000033          MOVE  AC3,  VPOS(UUO)        ;; PICK UP VERTICAL POSITION
132562 / 275740,,000001          SUBI  AC3,000001             ;; DON'T GO ALL THE WAY TO THE CURRENT LINE
132563 / 202754,,000037         MOVEM  AC3,    VP(UUO)        ;; STORE IT
132564 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
132565 / 261140,,000015          PUSH    P,000015             ;; SAVE ADDRESS OF FIRST TASK BLOCK
132566 / 260140,,127323         PUSHJ    P,127323             ;; GET ANOTHER TASK BLOCK
132567 / 200703,,000000          MOVE  AC2,      (P)          ;; PICK UP ADDRESS OF FIRST TASK BLOCK TOO
132570 / 540240,,000002           HRR  DAT,000002             ;; PUT IN LINE NUMBER AS DATUM OF CLOCK REQUEST
132571 / 202255,,000005         MOVEM  DAT, QWAKE(AC1)        ;; PUT THE OUTPUT BUFFER ADDRESS AS WAKEUP WORD
132572 / 202256,,000005         MOVEM  DAT, QWAKE(AC2)        ;
132573 / 350014,,000047           AOS       PPENQ(UUO)        ;; BUMP TASK COUNT BY TWO
132574 / 350014,,000047           AOS       PPENQ(UUO)        ;
132575 / 201754,,000047         MOVEI  AC3, PPENQ(UUO)        ;; COUNT US DOWN ON THE PAGE PRINTER COUNTER
                       DOXFR:
132576 / 402014,,000051         SETZM      PPVIRG(UUO)        ;; NOTE THAT SOMETHING HAS GONE OUT ON THIS PIECE OF PAPER
132577 / 202754,,000040         MOVEM  AC3,    SC(UUO)        ;; SAVE THE COUNT ADDRESS, IF ANY, FOR FUTURE REFERENCE
132600 / 202755,,000006         MOVEM  AC3,QCOUNT(AC1)        ;
132601 / 202756,,000006         MOVEM  AC3,QCOUNT(AC2)        ;
132602 / 402015,,000002         SETZM      QFIELD(AC1)        ;; SEND ONE OUT ON ONE FIELD
132603 / 476016,,000002         SETOM      QFIELD(AC2)        ;; AND THE OTHER OUT ON THE OTHER
132604 / 506615,,000000          HRLM  UUO,      (AC1)        ;
132605 / 506616,,000000          HRLM  UUO,      (AC2)        ;; SAVE PAGE PRINTER CONTROL BLOCK ADDRESS AS DATA BLOCK ADDRESS
132606 / 201740,,134261         MOVEI  AC3,134261             ;; PICK UP ADDRESS OF I-LEVEL SUBROUTINE
132607 / 542755,,000000          HRRM  AC3,      (AC1)        ;; PLACE IT IN ROUTINE ADDRESS POSITION
132610 / 542756,,000000          HRRM  AC3,      (AC2)        ;
132611 / 336014,,000045         SKIPN       GLTCH(UUO)        ;; IS THIS A WHOLE SCREEN TRANSFER?
132612 / 254000,,132700          JRST      132700             ;; NO, JUST DO ONE LINE
132613 / 402014,,000045         SETZM       GLTCH(UUO)        ;; WE ARE DONE GLITCHING
132614 / 250240,,000014          EXCH  DAT,000014             ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
132615 / 260140,,130032         PUSHJ    P,130032             ;; GET LINE NUMBER OF FIRST LINE OF TRANSFER
132616 / 250240,,000014          EXCH  DAT,   UUO             ;
132617 / 311754,,000033          CAML  AC3,  VPOS(UUO)        ;; IS THERE REALLY A PAGE HERE?
132620 / 254000,,132673          JRST      132673             ;; NO!
132621 / 506755,,000001          HRLM  AC3, QLINE(AC1)        ;
132622 / 506756,,000001          HRLM  AC3, QLINE(AC2)        ;; THAT WILL BE STARTING LINE NUMBER ON BOTH FIELDS
132623 / 200754,,000037          MOVE  AC3,    VP(UUO)        ;; PICK UP NUMBER OF LAST LINE OF TRANSFER
132624 / 542755,,000001          HRRM  AC3, QLINE(AC1)        ;; THIS WILL BE ENDING LINE NUMBER
132625 / 542756,,000001          HRRM  AC3, QLINE(AC2)        ;
132626 / 260140,,133426         PUSHJ    P,133426             ;; QUEUE UP FIRST TASK
132627 / 262140,,000015           POP    P,000015             ;; GET ADDRESS OF SECOND TASK BACK
132630 / 260140,,133426         PUSHJ    P,133426             ;; QUEUE IT UP
                       ; WE GET HERE AT CLOCK LEVEL IN THE MIDDLE OF QUEUEING UP A WHOLE SCREEN REQUEST.
                       ; WE HAVE PUT IN THE TEXT REQUESTS AND ARE NOW GOING TO PUT IN THE ERASURE
                       ; REQUEST.
132631 / 200714,,000037          MOVE  AC2,    VP(UUO)        ;; FIRST, IS THERE ANYTHING TO DO?
132632 / 202714,,000034         MOVEM  AC2,   LLW(UUO)        ;; UPDATE LAST LINE WRITTEN
132633 / 311714,,000043          CAML  AC2,   GLW(UUO)        ;
132634 / 263140,,000000          POPJ    P,                   ;; NO, WE ARE DONE
132635 / 260140,,127323         PUSHJ    P,  GETQ             ;
132636 / 261140,,000015          PUSH    P,000015             ;; GET ANOTHER TASK BLOCK AND SAVE ITS ADDRESS
132637 / 260140,,127323         PUSHJ    P,127323             ;; GET ONE FOR EACH ERASURE FIELD
132640 / 200743,,000000          MOVE  AC3,      (P)          ;; GET BACK ADDRESS OF FIRST ONE
132641 / 506615,,000000          HRLM  UUO,      (AC1)        ;; PUT IN PAGE PRINTER CONTROL BLOCK ADDRESS
132642 / 506617,,000000          HRLM  UUO,      (AC3)        ;
132643 / 201700,,134373         MOVEI  AC2,134373             ;; WE WILL CALL THE ERASE CODE
132644 / 542715,,000000          HRRM  AC2,      (AC1)        ;
132645 / 542717,,000000          HRRM  AC2,      (AC3)        ;
132646 / 202255,,000005         MOVEM  DAT, QWAKE(AC1)        ;; PUT THE CLOCK REQUEST WORD IN
132647 / 202257,,000005         MOVEM  DAT, QWAKE(AC3)        ;
132650 / 200714,,000040          MOVE  AC2,    SC(UUO)        ;; PICK UP COUNT ADDRESS
132651 / 202715,,000006         MOVEM  AC2,QCOUNT(AC1)        ;; COUNT DOWN THROUGH IT.
132652 / 202717,,000006         MOVEM  AC2,QCOUNT(AC3)        ;
132653 / 402015,,000002         SETZM      QFIELD(AC1)        ;; SEND THEM OUT ON OPPOSITE FIELDS
132654 / 476017,,000002         SETOM      QFIELD(AC3)        ;
132655 / 200714,,000043          MOVE  AC2,   GLW(UUO)        ;; ERASE TO THE LAST LINE WRITTEN
132656 / 542715,,000001          HRRM  AC2, QLINE(AC1)        ;
132657 / 542717,,000001          HRRM  AC2, QLINE(AC3)        ;
132660 / 200714,,000037          MOVE  AC2,    VP(UUO)        ;; ERASE FROM THE CURRENT POSITION
132661 / 202714,,000043         MOVEM  AC2,   GLW(UUO)        ;; UPDATE LAST LINE WRITTEN
132662 / 506715,,000001          HRLM  AC2, QLINE(AC1)        ;
132663 / 506717,,000001          HRLM  AC2, QLINE(AC3)        ;
132664 / 336014,,000040         SKIPN          SC(UUO)        ;; IS THERE A COUNT ADDRESS?
132665 / 254000,,132670          JRST      132670             ;; NO, DON'T INCREMENT IT!
132666 / 350034,,000040           AOS      @    SC(UUO)       ;; YES, BUMP IT TWICE
132667 / 350034,,000040           AOS      @    SC(UUO)       ;
                       QDD1:
132670 / 260140,,133426         PUSHJ    P,133426             ;; QUEUE UP THE FIRST ONE
132671 / 262140,,000015           POP    P,   AC1             ;
132672 / 254000,,133426          JRST      133426             ;; AND THE SECOND ONE
                       ; WE GET HERE IF THERE REALLY ISN'T ANYTHING ON THE PAGE
                       NOPAGE:
132673 / 260140,,133561         PUSHJ    P,133561             ;; WAKE UP ANYONE WHO'S THERE
132674 / 260140,,133550         PUSHJ    P,133550             ;; JUST RETURN EVERYTHING TO FREE STORAGE.
132675 / 262140,,000015           POP    P,   AC1             ;
132676 / 260140,,133561         PUSHJ    P, WAKEQ             ;
132677 / 254000,,133550          JRST       GIVQB             ;
                       ; WE GET HERE TO QUEUE UP A ONE LINE REQUEST.
                       DPTDL:
132700 / 200754,,000034          MOVE  AC3,   LLW(UUO)        ;; PICK UP LINE NUMBER
132701 / 313754,,000037         CAMLE  AC3,    VP(UUO)        ;; IS THIS PAST WHERE WE ARE SUPPOSED TO BE?
132702 / 200754,,000037          MOVE  AC3,    VP(UUO)        ;; YES, USE OUR ARGUEMENT
132703 / 506755,,000001          HRLM  AC3, QLINE(AC1)        ;; STORE THIS
132704 / 506756,,000001          HRLM  AC3, QLINE(AC2)        ;
132705 / 200754,,000037          MOVE  AC3,    VP(UUO)        ;; END UP ON LINE THE CALLER REQUESTED
132706 / 542755,,000001          HRRM  AC3, QLINE(AC1)        ;
132707 / 542756,,000001          HRRM  AC3, QLINE(AC2)        ;
132710 / 202754,,000034         MOVEM  AC3,   LLW(UUO)        ;; AND THIS IS NOW THE LAST LINE WRITTEN
132711 / 260140,,133426         PUSHJ    P,133426             ;; PUT THIS BLOCK IN THE QUEUE
132712 / 262140,,000015           POP    P,000015             ;; GET BACK ADDRESS OF SECOND BLOCK
132713 / 254000,,133426          JRST      133426             ;; QUEUE IT UP TOO
                       ; WE GET TO THIS ROUTINE WHEN THE BUFFER IS EMPTY.
                       DPYTLX:
132714 / 327600,,144747         JUMPG  UUO,144747             ;; III DISPLAYS CAN GO ON TO TTYSER NOW
132715 / 336014,,000041         SKIPN      DPYCHR(UUO)        ;; HAS AT LEAST ONE CHARACTER BEEN TYPED?
132716 / 254000,,144747          JRST      144747             ;; NO, EXIT
132717 / 402014,,000041         SETZM      DPYCHR(UUO)        ;; CLEAR TYPEOUT FLAG
132720 / 210654,,000013          MOVN  AC1,DPHPOS(UUO)        ;; PICK UP HORIZONTAL POSITION POINTER
132721 / 261140,,000005          PUSH    P,000005             ;; SAVE TTY BUFFER ADDRESS
132722 / 540240,,000014           HRR  DAT,000014             ;; PUT PAGE PRINTER CONTROL BLOCK ADDRESS IN DAT FOR REFLINE
132723 / 200714,,000034          MOVE  AC2,   LLW(UUO)        ;; SEE IF PAGE PRINTER IS UP TO DATE
132724 / 316714,,000033          CAMN  AC2,  VPOS(UUO)        ;; COMPARE LAST LINE WRITTEN WITH VERTICAL POSITION
132725 / 312654,,000052          CAME  AC1,LNLNGT(UUO)        ;; IF NOT AT COLUMN ZERO,
132726 / 260140,,132776         PUSHJ    P,132776             ;; PUT IN A SINGLE LINE REQUEST
132727 / 262140,,000005           POP    P,   DAT             ;
132730 / 550654,,000010          HRRZ  AC1,HEDPTR(UUO)        ;; PICK UP POINTER TO DPY PROGRAM HEADER
132731 / 205700,,133117         MOVSI  AC2,133117             ;; MAKE A POINTER TO THE LINE EDITOR QUEUE ROUTINE
132732 / 540700,,000015           HRR  AC2,000015             ;; AND MAKE IT INTO A CLOCK REQUEST WORD
132733 / 474740,,000000          SETO  AC3,                   ;; SEE IF LINE EDITOR CLOCK FLAG IS SET
132734 / 250755,,000134          EXCH  AC3, LECLK(AC1)        ;; IF NOT SET, SET IT NOW
132735 / 321740,,144747         JUMPL  AC3,144747             ;; IF ALREADY IN, LEAVE NOW
132736 / 700600,,000400          CONO   PI,000400             ;; NOT IN, PLANT CLOCK REQUEST
132737 / 136700,,013624          IDPB  AC2,  CLKQ             ;
132740 / 700600,,000200          CONO   PI,  PION             ;
132741 / 254000,,144747          JRST      DPYDON             ;
                       ; THIS ROUTINE QUEUES UP AN ERASURE REQUEST FOR THE LINE EDITOR <ESC>C COMMAND
                       LEERSN:
132742 / 645240,,003675          TLCA  DAT,003675             ;;CHANGE CLK RQ TO CALL PPNSET
                       RFPCS:
132743 / 505240,,133016          HRLI  DAT, LERFP             ;
132744 / 332005,,000040         SKIPE         III(DAT)        ;
132745 / 254000,,132770          JRST       LEPGC             ;
132746 / 201705,,000113         MOVEI  AC2,LEENQ2(DAT)        ;;ENTER HERE FOR SOMETHING ELSE TO BE QUEUED AFTER THE ERASE
132747 / 354005,,000113          AOSA      LEENQ2(DAT)        ;
                       LEERS:
132750 / 201700,,000000         MOVEI  AC2,                   ;
132751 / 332005,,000040         SKIPE         III(DAT)        ;
132752 / 254000,,132774          JRST      132774             ;;DIFFERENT "ERASE" ON III
132753 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
132754 / 202715,,000006         MOVEM  AC2,QCOUNT(AC1)        ;
132755 / 202255,,000005         MOVEM  DAT, QWAKE(AC1)        ;
132756 / 476005,,000137         SETOM        LECC(DAT)        ;
                       LEERS3:
151766 / 000001,,000050           XWD 1,=40                   ;
132757 / 200700,,151766          MOVE  AC2,151766             ;
132760 / 202715,,000001         MOVEM  AC2, QLINE(AC1)        ;
132761 / 402015,,000002         SETZM      QFIELD(AC1)        ;; START ON FIELD ZERO
132762 / 506255,,000000          HRLM  DAT,      (AC1)        ;; GIVE IT DPY PROGRAM HEADER ADDRESS
132763 / 201700,,134574         MOVEI  AC2,134574             ;; GO TO THE ERASURE ROUTINE
132764 / 542715,,000000          HRRM  AC2,      (AC1)        ;
132765 / 476005,,000127         SETOM        LEVP(DAT)        ;;TELL DPLED OUR CURSORS BIT THE DUST
132766 / 476005,,000132         SETOM       LECVP(DAT)        ;
132767 / 254000,,133426          JRST      133426             ;; PUT IT IN THE QUEUE
                       LEPGC:
132770 / 554040,,000005          HLRZ  TAC,   DAT             ;
132771 / 261140,,000005          PUSH    P,   DAT             ;
132772 / 260141,,000000         PUSHJ    P,      (TAC)        ;;DO PP STUFF FIRST
132773 / 262140,,000005           POP    P,   DAT             ;
                       LEPGC2:
132774 / 201305,,000000         MOVEI  DDB,      (DAT)        ;
132775 / 254000,,132244          JRST       PGCLR             ;
                       ; THE LINE EDITOR PLANTS A CLOCK REQUEST TO HERE WHEN IT
                       ; IS DONE TRANSFERRING A LINE INTO THE PAGE PRINTER BUFFER.
                       ; WE SEND OUT THE LINE IT HAS JUST TRANSFERRED.
                       REFLIN:
132776 / 550645,,000001          HRRZ  AC1, TPJMP(DAT)        ;; PICK UP JUMP TO TEXT
132777 / 306640,,000014          CAIN  AC1,000014             ;; IS IT REALLY A JUMP?
133000 / 263140,,000000          POPJ    P,                   ;; NO, DON'T BOTHER
133001 / 260140,,127323         PUSHJ    P,127323             ;; GET US A TASK BLOCK
133002 / 261140,,000015          PUSH    P,   AC1             ;
133003 / 260140,,127323         PUSHJ    P,  GETQ             ;
133004 / 200703,,000000          MOVE  AC2,      (P)          ;
133005 / 200745,,000033          MOVE  AC3,  VPOS(DAT)        ;; PICK UP VERTICAL POSITION
133006 / 202745,,000037         MOVEM  AC3,    VP(DAT)        ;; SAVE THIS AS ARGUEMENT FOR QDD
133007 / 201745,,000050         MOVEI  AC3, PPNQT(DAT)        ;; COUNT DOWN THROUGH OTHER COUNT CELL
133010 / 550600,,000005          HRRZ  UUO,000005             ;; IT EXPECTS THE PAGE PRINTER ADDRESS IN UUO
133011 / 350005,,000050           AOS       PPNQT(DAT)        ;; COUNT DOWN SO THE LINE EDITOR WILL KNOW WHEN WE ARE DONE
133012 / 350005,,000050           AOS       PPNQT(DAT)        ;
133013 / 402015,,000005         SETZM       QWAKE(AC1)        ;; DON'T WAKE UP ANYBODY
133014 / 403256,,000005         SETZB  DAT, QWAKE(AC2)        ;
133015 / 254000,,132576          JRST      132576             ;; USE QDD TO DO ALL THIS
                       ; HERE LIES A ROUTINE TO QUEUE UP A WHOLE PAGE TRANSFER WHEN NOT GLITCHING
                       LERFP:
133016 / 201305,,000000         MOVEI  DDB,      (DAT)        ;
133017 / 332005,,000040         SKIPE         III(DAT)        ;
133020 / 254000,,130166          JRST      130166             ;;RESTART PROG IF III
133021 / 550605,,000017          HRRZ  UUO, CURPP(DAT)        ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
133022 / 200654,,000010          MOVE  AC1,HEDPTR(UUO)        ;
133023 / 302645,,000000          CAIE  AC1,      (DAT)        ;
133024 / 254000,,133102          JRST      133102             ;;CURPP IS CLOBBERED OR SOMETHING
133025 / 550654,,000001          HRRZ  AC1, TPJMP(UUO)        ;; PICK UP JUMP TO TEXT
133026 / 306640,,000014          CAIN  AC1,000014             ;; IS IT REALLY A JUMP?
133027 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT
133030 / 332014,,000047         SKIPE       PPENQ(UUO)        ;; IS THERE ANYTHING IN THE PAGE PRINTER'S QUEUE?
133031 / 254000,,133065          JRST      133065             ;; YES, IT WILL GET CAUGHT LATER
133032 / 402014,,000051         SETZM      PPVIRG(UUO)        ;; NO LONGER A VIRGIN PIECE OF PAPER
133033 / 265740,,133067           JSP  AC3, GET2Q             ;
133034 / 201745,,000113         MOVEI  AC3,LEENQ2(DAT)        ;
133035 / 202755,,000006         MOVEM  AC3,QCOUNT(AC1)        ;
133036 / 202756,,000006         MOVEM  AC3,QCOUNT(AC2)        ;
133037 / 201740,,000002         MOVEI  AC3,     2             ;
133040 / 272745,,000113          ADDM  AC3,LEENQ2(DAT)        ;
133041 / 540740,,000005           HRR  AC3,   DAT             ;
133042 / 505740,,133076          HRLI  AC3,LERELE             ;
133043 / 202755,,000005         MOVEM  AC3, QWAKE(AC1)        ;
133044 / 202756,,000005         MOVEM  AC3, QWAKE(AC2)        ;
133045 / 506615,,000000          HRLM  UUO,      (AC1)        ;; PUT IN ADDRESS OF PAGE PRINTER CONTROL BLOCK
133046 / 506616,,000000          HRLM  UUO,      (AC2)        ;
133047 / 201740,,134261         MOVEI  AC3,134261             ;; THE I-LEVEL SUBROUTINE ADDRESS
133050 / 542755,,000000          HRRM  AC3,      (AC1)        ;
133051 / 542756,,000000          HRRM  AC3,      (AC2)        ;
133052 / 250240,,000014          EXCH  DAT,000014             ;; PICK UP THE NUMBER OF THE LINE AT THE TOP OF THE PAGE
133053 / 260140,,130032         PUSHJ    P,POSLIN             ;
133054 / 250240,,000014          EXCH  DAT,   UUO             ;
133055 / 506755,,000001          HRLM  AC3, QLINE(AC1)        ;; PUT IN THAT AS OUR STARTING LINE NUMBER
133056 / 506756,,000001          HRLM  AC3, QLINE(AC2)        ;
133057 / 200754,,000033          MOVE  AC3,  VPOS(UUO)        ;; PICK UP THE CURRENT POSITION OF THE BOTTOM OF THE PAGE
133060 / 542755,,000001          HRRM  AC3, QLINE(AC1)        ;
133061 / 542756,,000001          HRRM  AC3, QLINE(AC2)        ;
                       Q2BLCK:
133062 / 260140,,133426         PUSHJ    P,133426             ;; QUEUE THEM UP
133063 / 262140,,000015           POP    P,   AC1             ;
133064 / 254000,,133426          JRST      133426             ;; QUEUE UP THE LAST TASK AND LEAVE
                       LERFP1:
133065 / 476014,,000045         SETOM       GLTCH(UUO)        ;; FORCE THE PAGE PRINTER TO REFRESH NEXT TIME AROUND
133066 / 263140,,000000          POPJ    P,                   ;
                       GET2Q:
133067 / 260140,,127323         PUSHJ    P,127323             ;; OTHERWISE, GET A TASK BLOCK TO DO IT OURSELVES
133070 / 261140,,000015          PUSH    P,   AC1             ;
133071 / 260140,,127323         PUSHJ    P,  GETQ             ;
133072 / 550703,,000000          HRRZ  AC2,      (P)          ;
133073 / 402015,,000002         SETZM      QFIELD(AC1)        ;; SEND THESE OUT ON OPPOSITE FIELDS
133074 / 476016,,000002         SETOM      QFIELD(AC2)        ;
133075 / 254020,,000017          JRST      @   AC3            ;
                       LERELE:
                       ;REFRESH LINE EDITOR
133076 / 250240,,000004          EXCH  DAT,  ITEM             ;
133077 / 260140,,147641         PUSHJ    P,147641             ;;QLETXT IS IN LINED
133100 / 250240,,000004          EXCH  DAT,  ITEM             ;
133101 / 263140,,000000          POPJ    P,                   ;
                       PPCLB:
133102 / 260140,,000316         PUSHJ    P,PUSHIT             ;
133103 / 260140,,044320         PUSHJ    P,DISDAT             ;
133104 / 260140,,044066         PUSHJ    P,DISMES             ;
133113 / 332000,,000500         SKIPE      000500             ;
133114 / 260140,,000347         PUSHJ    P,000347             ;
133115 / 260140,,000341         PUSHJ    P, POPIT             ;
133116 / 263140,,000000          POPJ    P,                   ;
                       ; HERE IS THE MIGHTY LINE EDITOR AND CURSOR GENERATOR.
                       ; THIS ROUTINE SINGLEHANDEDLY SENDS OUT LINE EDITOR TRANSFERS, LINE EDITOR
                       ; ERASURES, ALL CURSORS AND ALL CURSOR ERASURES.
                       DPLED:
133117 / 326540,,133122         JUMPN  PID,133122             ;
151722 / 000000,,000033                                       ;
133120 / 261140,,151722          PUSH    P,151722             ;
133121 / 262140,,036260           POP    P,036260             ;
133122 / 332005,,000112         SKIPE       LEENQ(DAT)        ;; DO WE HAVE SOMETHING IN THE QUEUE ALREAD
133123 / 263140,,000000          POPJ    P,                   ;; YES, THIS ISN'T SUPPOSED TO HAPPEN!
133124 / 550605,,000017          HRRZ  UUO, CURPP(DAT)        ;; PICK UP ADDRESS OF PAGE PRINTER CONTROL BLOCK
133125 / 332014,,000047         SKIPE       PPENQ(UUO)        ;; IS THERE ANYTHING IN THE PAGE PRINTER QUEUE?
133126 / 254000,,132555          JRST      132555             ;; YES, COME BACK LATER
133127 / 700600,,001004          CONO   PI,001004             ;;FREEZE EVERYTHING
133130 / 200654,,000033          MOVE  AC1,  VPOS(UUO)        ;; ASSUME WE ARE GOING IN THE USUAL POSITION
133131 / 202645,,000140         MOVEM  AC1,LELINE(DAT)        ;
133132 / 200654,,000013          MOVE  AC1,DPHPOS(UUO)        ;
133133 / 270654,,000052           ADD  AC1,LNLNGT(UUO)        ;
133134 / 202645,,000042         MOVEM  AC1,PPHPOS(DAT)        ;;INITIALLY ASSUME LINE EDITOR X = PP X
133135 / 331745,,000007         SKIPL  AC3, LEPOS(DAT)        ;
133136 / 254000,,133145          JRST      DPLEVS             ;
152433 / 000000,,000017                                       ;
152433 / 161300,,000017 POINT 11,00000017,21                  ;
133137 / 135740,,152433           LDB  AC3,152433             ;
133140 / 602740,,002000          TRNE  AC3,002000             ;; EXTEND SIGN BIT
151660 / 777777,,776000                                       ;
133141 / 434740,,151660            OR  AC3,151660             ;
133142 / 260140,,130037         PUSHJ    P,POSLI2             ;
133143 / 202745,,000140         MOVEM  AC3,LELINE(DAT)        ;
133144 / 403645,,000042         SETZB  AC1,PPHPOS(DAT)        ;;NOW LINE EDITOR X IS ALWAYS ZERO
                       DPLEVS:
133145 / 201745,,000112         MOVEI  AC3, LEENQ(DAT)        ;; GET ADDRESS OF COUNT WORD
133146 / 202754,,000040         MOVEM  AC3,    SC(UUO)        ;; USE IT TO COUNT DOWN OUR TASKS
133147 / 200745,,000015          MOVE  AC3,PRGNUM(DAT)        ;; PICK UP DPY NUMBER
133150 / 337217,,012607         SKIPG    J, LETAB(AC3)        ;; IS THE LINE EDITOR CURRENTLY INITIALIZED??
133151 / 254000,,133173          JRST      133173             ;; YES, GET ITS POSITION FROM THE CHARACTER COUNT
                       ; HERE WE SET UP THE CURSOR POSITION AND START ON THE DECISION TREE
                       DPLGC2:
133152 / 202645,,000142         MOVEM  AC1,   CHP(DAT)        ;; SAVE THE HORIZONTAL POSITION
133153 / 200645,,000140          MOVE  AC1,LELINE(DAT)        ;
                       DPLGC1:
133154 / 202645,,000141         MOVEM  AC1,   CVP(DAT)        ;; AND THE VERTICAL POSITION
133155 / 200645,,000140          MOVE  AC1,LELINE(DAT)        ;; GET VERTICAL POSITION
133156 / 316645,,000127          CAMN  AC1,  LEVP(DAT)        ;; HAS THE VERTICAL POSITION OF THE LINE EDITOR CHANGED?
133157 / 254000,,133201          JRST      133201             ;; NO, SEE IF ANYTHING ELSE HAS CHANGED.
133160 / 260140,,133362         PUSHJ    P,133362             ;; ERASE THE LINE EDITOR CURSOR
133161 / 260140,,133363         PUSHJ    P,133363             ;; ERASE THE PAGE PRINTER CURSOR
133162 / 260140,,133304         PUSHJ    P,133304             ;; WRITE OUT THE TEXT AGAIN.
133163 / 200645,,000141          MOVE  AC1,   CVP(DAT)        ;; PICK UP CURSOR POSITION
133164 / 316645,,000140          CAMN  AC1,LELINE(DAT)        ;; IS IT THE SAME AS THE PAGE PRINTER POSITION?
133165 / 254000,,133171          JRST      133171             ;; YES, WRITE OUT BOTH CURSORS ON THE SAME LINE
133166 / 260140,,133414         PUSHJ    P,133414             ;; NO, WRITE OUT THE LINE EDITOR CURSOR
133167 / 260140,,133404         PUSHJ    P,133404             ;; THEN WRITE OUT THE PAGE PRINTER CURSOR
133170 / 254000,,133266          JRST      133266             ;; GO UPDATE STATE OF HISTORY TO REFLECT OUR TRANSFERS.
                       DPTL14:
133171 / 260140,,133420         PUSHJ    P,133420             ;; SAME LINE, WRITE OUT BOTH CURSORS AT ONCE
133172 / 254000,,133266          JRST      DPTLE5             ;
                       DPLGCP:
133173 / 270645,,000105           ADD  AC1,LEHPOS(DAT)        ;; ADD IN LINE EDITOR CURSOR HORIZONTAL POSITION
133174 / 322640,,133152         JUMPE  AC1,133152             ;; IF NO DISTANCE INTO LINE, SET POSITIONS TO ZERO
133175 / 230654,,000052          IDIV  AC1,LNLNGT(UUO)        ;; CONVERT TO NUMBER OF LINES AND DISPLACEMENT INTO LAST LINE
133176 / 270645,,000140           ADD  AC1,LELINE(DAT)        ;; ADD IN STARTING LINE NUMBER
133177 / 202705,,000142         MOVEM  AC2,   CHP(DAT)        ;; THE REMAINDER IS THE HORIZONTAL POSITION
133200 / 254000,,133154          JRST      133154             ;; AND WE NOW HAVE IT ALL!
                       ; WE GET HERE IF THE VERTICAL POSITION OF THE LINE EDITOR HAS NOT CHANGED.
                       ; WE CHECK IF ANYTHING ELSE ABOUT THE LINE MIGHT HAVE CHANGED.
                       DPTLE1:
133201 / 325200,,133210        JUMPGE    J,133210             ;;DON'T BOTHER CHECKING EMPTY EDITOR
133202 / 200645,,000042          MOVE  AC1,PPHPOS(DAT)        ;
133203 / 250645,,000111          EXCH  AC1, LSTHP(DAT)        ;
133204 / 316645,,000111          CAMN  AC1, LSTHP(DAT)        ;;SEE IF LE HAS MOVED HORIZONTALLY
133205 / 254000,,133210          JRST      133210             ;;NO
133206 / 260140,,147661         PUSHJ    P,147661             ;;YES - RECALCULATE TABS & LONG-LINE CRLFS
133207 / 476005,,000135         SETOM       LETXC(DAT)        ;;TEXT NOW NEEDS WRITING
                       DPTL1A:
133210 / 200645,,000126          MOVE  AC1,  NCRS(DAT)        ;; WE GET HERE IF THE VERTICAL POSITION IS THE SAME
133211 / 315645,,000131         CAMGE  AC1,LENCRS(DAT)        ;; NOW HAS THE LINE SHRUNK ANY?
133212 / 260140,,133341         PUSHJ    P,133341             ;; YES, ERASE LINES PAST FIRST ONE.
133213 / 200645,,000141          MOVE  AC1,   CVP(DAT)        ;; PICK UP CURSOR VERTICAL POSITION
133214 / 312645,,000132          CAME  AC1, LECVP(DAT)        ;; HAS THE CURSOR VERTICAL POSITION CHANGED?
133215 / 254000,,133241          JRST      133241             ;; YES, SEE HOW MUCH AND WHERE IT IS NOW.
133216 / 200645,,000142          MOVE  AC1,   CHP(DAT)        ;; IF THE VERTICAL POSITION IS THE SAME,
133217 / 312645,,000133          CAME  AC1, LECHP(DAT)        ;; THEN HOW ABOUT THE HORIZONTAL POSITION?
133220 / 254000,,133252          JRST      133252             ;; DIFFERENT, GO SEND OUT A NEW ONE.
133221 / 200645,,000042          MOVE  AC1,PPHPOS(DAT)        ;;SEE IF PP CURSOR MOVED
133222 / 312645,,000130          CAME  AC1,  LEHP(DAT)        ;
133223 / 254000,,133232          JRST      133232             ;; YES, GO SEND IT OUT AGAIN
133224 / 336005,,000135         SKIPN       LETXC(DAT)        ;; HAS THE TEXT CHANGED?
133225 / 332005,,000136         SKIPE      LEMISS(DAT)        ;; OR DID THE LINE EDITOR MISS A BEAT DUE TO AN INVALID BUFFER?
133226 / 254000,,133265          JRST      133265             ;; YES, SEND OUT THE TEXT AGAIN
133227 / 402005,,000134         SETZM       LECLK(DAT)        ;; NO, NOTHING AT ALL TO DO!
133230 / 700600,,002004          CONO   PI, SCNON             ;
133231 / 263140,,000000          POPJ    P,                   ;
                       ; LINE EDITOR DECISION TREE. WE GET HERE IF THE LINE EDITOR CURSOR HAS NOT
                       ; MOVED, BUT THE PAGE PRINTER CURSOR HAS(???)
                       DPTLE6:
133232 / 200645,,000141          MOVE  AC1,   CVP(DAT)        ;; ARE THE TWO CURSORS ON THE SAME LINE?
133233 / 312654,,000033          CAME  AC1,  VPOS(UUO)        ;
133234 / 254000,,133237          JRST      133237             ;; NO, THEY CAN BE SENT OUT SEPARATELY.
                       DPTLE9:
133235 / 260140,,133420         PUSHJ    P,133420             ;; YES, SEND OUT BOTH
133236 / 254000,,133263          JRST      DPTLE4             ;
                       DPTLE7:
133237 / 260140,,133404         PUSHJ    P,133404             ;; WRITE OUT THE PAGE PRINTER CURSOR ALONE
133240 / 254000,,133263          JRST      133263             ;; DO TEXT CHECK AND LEAVE
                       DPTLE2:
133241 / 200645,,000140          MOVE  AC1,LELINE(DAT)        ;; WE COME HERE IF THE CURSOR VERTICAL POSITION HAS CHANGED
133242 / 312645,,000132          CAME  AC1, LECVP(DAT)        ;; IS THE OLD VERTICAL POSITION THE SAME AS THE PAGE PRINTER?
133243 / 260140,,133362         PUSHJ    P,133362             ;; NO, ERASE THE OLD CURSOR
133244 / 200645,,000140          MOVE  AC1,LELINE(DAT)        ;; PICK UP VERTICAL POSITION AGAIN
133245 / 316645,,000141          CAMN  AC1,   CVP(DAT)        ;; IS IT THE SAME AS THE CURSOR POSITION?
133246 / 254000,,133235          JRST      133235             ;; YES, SEND OUT BOTH CURSORS
                       DPTLE8:
133247 / 260140,,133404         PUSHJ    P,133404             ;; NO, SEND OUT THE PAGE PRINTER'S
                       DPTL11:
133250 / 260140,,133414         PUSHJ    P,133414             ;; SEND OUT THE LINE EDITOR CURSOR TOO
133251 / 254000,,133263          JRST      DPTLE4             ;
                       DPTLE3:
133252 / 260140,,133362         PUSHJ    P,133362             ;; ERASE THE CURSOR
133253 / 200645,,000140          MOVE  AC1,LELINE(DAT)        ;; PICK UP THE VERTICAL POSITION
133254 / 316645,,000141          CAMN  AC1,   CVP(DAT)        ;; IS IT THE SAME AS THE CURSOR POSITION
133255 / 254000,,133235          JRST      133235             ;; YES, SEND THEM BOTH OUT
133256 / 260140,,133414         PUSHJ    P,133414             ;; WRITE OUT OUR CURSOR
133257 / 200645,,000042          MOVE  AC1,PPHPOS(DAT)        ;;GET PP CURSOR POS
133260 / 312645,,000130          CAME  AC1,  LEHP(DAT)        ;; IS IT THE SAME AS THE CURRENT POSITION?
133261 / 260140,,133404         PUSHJ    P,133404             ;; NO, WRITE OUT ANOTHER PAGE PRINTER CURSOR
133262 / 254000,,133263          JRST      133263             ;; YES, NO NEED TO WRITE A NEW ONE
                       ; EVERYBODY COMES HERE TO EXIT
                       DPTLE4:
133263 / 336005,,000135         SKIPN       LETXC(DAT)        ;; HAS THE TEXT CHANGED?
133264 / 332005,,000136         SKIPE      LEMISS(DAT)        ;; OR DID I-LEVEL MISS DUE TO BUFFER INVALID?
                       DPTL12:
133265 / 260140,,133304         PUSHJ    P,133304             ;; YES, QUEUE UP A TEXT REQUEST
                       DPTLE5:
133266 / 200645,,000140          MOVE  AC1,LELINE(DAT)        ;; SAVE NEW STATE OF LINE EDITOR AND CURSORS
133267 / 202645,,000127         MOVEM  AC1,  LEVP(DAT)        ;
133270 / 200645,,000042          MOVE  AC1,PPHPOS(DAT)        ;
133271 / 202645,,000130         MOVEM  AC1,  LEHP(DAT)        ;
133272 / 200645,,000126          MOVE  AC1,  NCRS(DAT)        ;; NUMBER OF CRLFS IN LINE TOO
133273 / 202645,,000131         MOVEM  AC1,LENCRS(DAT)        ;
133274 / 200645,,000141          MOVE  AC1,   CVP(DAT)        ;; CURSOR VERTICAL POSITION
133275 / 202645,,000132         MOVEM  AC1, LECVP(DAT)        ;
133276 / 402005,,000135         SETZM       LETXC(DAT)        ;; CLEAR THE FLAGS
133277 / 402005,,000136         SETZM      LEMISS(DAT)        ;
133300 / 200645,,000142          MOVE  AC1,   CHP(DAT)        ;; CURSOR HORIZONTAL POSITION
133301 / 202645,,000133         MOVEM  AC1, LECHP(DAT)        ;
133302 / 700600,,002004          CONO   PI, SCNON             ;
133303 / 263140,,000000          POPJ    P,                   ;; BYE NOW. Y'ALL HAVE A GOOD TIME!
                       ; THIS ROUTINE QUEUES UP A LINE EDITOR TEXT REQUEST
                       DPWT:
133304 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
133305 / 261140,,000015          PUSH    P,000015             ;; SAVE ITS ADDRESS
133306 / 260140,,127323         PUSHJ    P,127323             ;; GET ANOTHER ONE
133307 / 200703,,000000          MOVE  AC2,      (P)          ;; PICK UP ADDRESS OF FIRST ONE AGAIN
133310 / 201740,,134507         MOVEI  AC3,134507             ;; CALL THE LINE EDITOR I-LEVEL ROUTINE
133311 / 542755,,000000          HRRM  AC3,      (AC1)        ;; PUT IT IN THE DISPATCH ADDRESS OF EACH TASK BLOCK
133312 / 542756,,000000          HRRM  AC3,      (AC2)        ;
133313 / 200745,,000140          MOVE  AC3,LELINE(DAT)        ;; PICK UP VERTICAL POSITION OF LINE EDITOR BUFFER
133314 / 506755,,000001          HRLM  AC3, QLINE(AC1)        ;; START THE TRANSFER HERE
133315 / 506756,,000001          HRLM  AC3, QLINE(AC2)        ;
133316 / 506255,,000000          HRLM  DAT,      (AC1)        ;; PUT IN ADDRESS OF DPY PROGRAM HEADER
133317 / 506256,,000000          HRLM  DAT,      (AC2)        ;
133320 / 270745,,000126           ADD  AC3,  NCRS(DAT)        ;; GET NUMBER OF LAST LINE OF TRANSFER
                       DPWT1:
133321 / 542755,,000001          HRRM  AC3, QLINE(AC1)        ;; SET THAT AS LAST LINE
133322 / 542756,,000001          HRRM  AC3, QLINE(AC2)        ;
133323 / 402015,,000002         SETZM      QFIELD(AC1)        ;; SEND OUT TASKS OUT ON OPPOSITE FIELDS
133324 / 476016,,000002         SETOM      QFIELD(AC2)        ;
133325 / 505240,,133117          HRLI  DAT,133117             ;; MAKE UP A CLOCK REQUEST WORD
133326 / 202255,,000005         MOVEM  DAT, QWAKE(AC1)        ;
133327 / 202256,,000005         MOVEM  DAT, QWAKE(AC2)        ;
133330 / 336754,,000040         SKIPN  AC3,    SC(UUO)        ;; IS THERE A COUNT WORD?
133331 / 254000,,133334          JRST      133334             ;; NO, DON'T BOTHER
133332 / 350034,,000040           AOS      @    SC(UUO)       ;; YES, BUMP IT TWICE
133333 / 350034,,000040           AOS      @    SC(UUO)       ;
                       DPWT2:
133334 / 202755,,000006         MOVEM  AC3,QCOUNT(AC1)        ;
133335 / 202756,,000006         MOVEM  AC3,QCOUNT(AC2)        ;
133336 / 260140,,133426         PUSHJ    P,133426             ;; QUEUE UP THE FIRST ONE
133337 / 262140,,000015           POP    P,000015             ;; GET THE ADDRESS OF THE SECOND ONE
133340 / 254000,,133426          JRST      133426             ;; QUEUE IT UP TOO.
                       ; THIS ROUTINE ERASES THE OLD SECOND LINE OF THE LINE EDITOR
                       DPEOSL:
133341 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
133342 / 261140,,000015          PUSH    P,   AC1             ;
133343 / 260140,,127323         PUSHJ    P,  GETQ             ;
133344 / 200703,,000000          MOVE  AC2,      (P)          ;
133345 / 201740,,134373         MOVEI  AC3, ERASE             ;
133346 / 542755,,000000          HRRM  AC3,      (AC1)        ;
133347 / 542756,,000000          HRRM  AC3,      (AC2)        ;
133350 / 200745,,000140          MOVE  AC3,LELINE(DAT)        ;; PICK UP VERTICAL POSITION
133351 / 270745,,000126           ADD  AC3,  NCRS(DAT)        ;; ADD IN LENGTH OF TRANSFER
133352 / 271740,,000001          ADDI  AC3,000001             ;; BUMP LINE NUMBER TO ONE PAST THE CURRENT LAST LINE
133353 / 506755,,000001          HRLM  AC3, QLINE(AC1)        ;; PUT THAT IN AS STARTING AND ENDING LINE
133354 / 506756,,000001          HRLM  AC3, QLINE(AC2)        ;
133355 / 200745,,000127          MOVE  AC3,  LEVP(DAT)        ;; PICK UP LAST VERTICAL POSITION
133356 / 270745,,000131           ADD  AC3,LENCRS(DAT)        ;; ADD IN LENGTH OF LAST TRANSFER
                       DPEOS1:
133357 / 506615,,000000          HRLM  UUO,      (AC1)        ;; PUT IN ADDRESS OF PAGE PRINTER CONTROL BLOCK
133360 / 506616,,000000          HRLM  UUO,      (AC2)        ;
133361 / 254000,,133321          JRST       DPWT1             ;
                       ; THIS ROUTINE ERASES THE OLD CURSOR
                       DPEC:
133362 / 334705,,000132         SKIPA  AC2, LECVP(DAT)        ;;OLD POSITION
                       DPEOPC:
133363 / 200705,,000127          MOVE  AC2,  LEVP(DAT)        ;;SAME THING FOR PP CURSOR
133364 / 321700,,037403         JUMPL  AC2,037403             ;;WARN'T NONE
133365 / 260140,,127323         PUSHJ    P,  GETQ             ;
                       DPEC1:
133366 / 506715,,000001          HRLM  AC2, QLINE(AC1)        ;; PUT THAT IN AS STARTING LINE
                       ;	ADDI AC2,1		; BUMP IT BY ONE
133367 / 542715,,000001          HRRM  AC2, QLINE(AC1)        ;; FOR PESSIMISM
133370 / 476015,,000003         SETOM       QHPOS(AC1)        ;; CLEAR THE HORIZONTAL POSITION, INDICATING CURSOR ERASURE
                       DPEC2:
133371 / 402015,,000002         SETZM      QFIELD(AC1)        ;; GOING OUT ON FIELD 1
133372 / 505240,,133117          HRLI  DAT, DPLED             ;
133373 / 202255,,000005         MOVEM  DAT, QWAKE(AC1)        ;; WAKE UP THE LINE EDITOR DECISION TREE WHEN DONE
133374 / 200754,,000040          MOVE  AC3,    SC(UUO)        ;; COUNT THROUGH OUR COUNTER TOO
133375 / 202755,,000006         MOVEM  AC3,QCOUNT(AC1)        ;
133376 / 332014,,000040         SKIPE          SC(UUO)        ;; IS THERE A COUNT WORD?
133377 / 350034,,000040           AOS      @    SC(UUO)       ;; YES, BUMP IT BY ONE
133400 / 506615,,000000          HRLM  UUO,      (AC1)        ;; SAVE THE PAGE PRINTER CONTROL BLOCK ADDRESS
133401 / 201740,,134424         MOVEI  AC3,134424             ;; USE THE CURSOR SUBROUTINE
133402 / 542755,,000000          HRRM  AC3,      (AC1)        ;
133403 / 254000,,133426          JRST      133426             ;; QUEUE UP THE REQUEST
                       ; THESE ROUTINES QUEUE UP THE VARIOUS COMBINATIONS OF CURSORS THAT MAY ARISE.
                       DPWPC:
133404 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK FOR THE PAGE PRINTER'S CURSOR
133405 / 200705,,000140          MOVE  AC2,LELINE(DAT)        ;; GET IT'S VERTICAL POSITION
133406 / 200745,,000042          MOVE  AC3,PPHPOS(DAT)        ;
                       DPWPC1:
133407 / 476015,,000003         SETOM       QHPOS(AC1)        ;; CLEAR OUT ONE OF THE HORIZONTAL POSITION WORDS
                       DPWPC2:
133410 / 506715,,000001          HRLM  AC2, QLINE(AC1)        ;; STORE THE STARTING LINE NUMBER OF THE TRANSFER
                       ;	ADDI AC2,1		; FOR SAFETY, MAKE IT LOOK LIKE IT IS TWO LINES LONG
133411 / 542715,,000001          HRRM  AC2, QLINE(AC1)        ;; AND STORE THAT AS THE DESTINATION LINE NUMBER
133412 / 506755,,000003          HRLM  AC3, QHPOS(AC1)        ;; STORE THE HORIZONTAL POSITION
133413 / 254000,,133371          JRST      133371             ;; FINISH QUEUEING UP THE BLOCK
                       ; THIS ROUTINE QUEUES UP A LINE EDITOR CURSOR ONLY.
                       DPWC:
133414 / 260140,,127323         PUSHJ    P,127323             ;; GET A TASK BLOCK
133415 / 200705,,000141          MOVE  AC2,   CVP(DAT)        ;; PICK UP THE CURSOR VERTICAL POSITION
133416 / 200745,,000142          MOVE  AC3,   CHP(DAT)        ;; GET THE HORIZONTAL POSITION
133417 / 254000,,133407          JRST      133407             ;; LET THE ABOVE ROUTINE DO ALL THE WORK
                       ; THIS ROUTINE QUEUES UP A TRANSFER WITH TWO CURSORS ON THE SAME LINE
                       DPWB:
133420 / 260140,,127323         PUSHJ    P,  GETQ             ;
133421 / 200705,,000140          MOVE  AC2,LELINE(DAT)        ;
133422 / 200745,,000142          MOVE  AC3,   CHP(DAT)        ;; PICK UP THE LINE EDITOR CURSOR'S HORIZONTAL POSITION
133423 / 542755,,000003          HRRM  AC3, QHPOS(AC1)        ;; PUT IT IN AS ONE OF THE HORIZONTAL POSITIONS INVOLVED
133424 / 200745,,000042          MOVE  AC3,PPHPOS(DAT)        ;;GET PP CURSOR POS
133425 / 254000,,133410          JRST      133410             ;; USE IT TOO.
                       ;QBLOCK	  HERE IS THE MAGIC SCHEDULING QUEUE ROUTINE
                       ; IT IS CALLED WITH THE ADDRESS OF A TASK BLOCK IN AC1. SAID BLOCK
                       ; MUST HAVE QLINE AND QFIELD SET, BECAUSE THE BLOCK IS MERGED INTO
                       ; THE QUEUE STRUCTURE IN THE RIGHT PLACE ON THE BASIS OF THOSE DATA.
                       ;   ∃ BLOCKS CALLED "FRAMES".  EACH FRAME HAS A POINTER TO A LIST OF ONE OR
                       ; MORE TASK BLOCKS, ALL OF WHICH HAVE THE SAME FIELD (EITHER EVEN OR ODD).
                       ; THE TASK BLOCKS ARE LISTED IN ASCENDING ORDER OF LINE NUMBER. IN GENERAL,
                       ; THE LIST OF FRAMES ALTERNATES BY FIELD PARITY, THE EXCEPTION BEING 
                       ; "MISSING" FRAMES.  FRAME BLOCK FORMAT IS:
                       ; 		XWD 0,<POINTER TO NEXT FRAME, OR 0>
                       ;	QLINE:	BITS 0-19 INDICATE WHICH LINES ARE USED BY TASK BLOCKS
                       ;		  IN THIS FRAME.  BITS 0,1,2 FOR LINES 1&2,3&4,5&6, ETC.
                       ;	QFIELD:	SAME AS IN A TASK BLOCK, 0 OR -1 FOR EVEN OR ODD FIELD.
                       ;	QHPOS:	NOT USED
                       ;	QLINK:	XWD 0,<ADDRESS OF 1ST TASK BLOCK>
                       QBLOCK:
133426 / 326540,,133431         JUMPN  PID,133431             ;
151721 / 000000,,000032                                       ;
133427 / 261140,,151721          PUSH    P,151721             ;
133430 / 262140,,036260           POP    P,036260             ;
133431 / 201700,,000010         MOVEI  AC2,000010             ;; SET FOR 8 TIMES THROUGH
133432 / 202715,,000007         MOVEM  AC2, QTIME(AC1)        ;; BEFORE WE DECLARE IT A LOSING TRANSFER
                       REQBLK:
133433 / 550715,,000000          HRRZ  AC2,      (AC1)        ;
133434 / 301700,,134261          CAIL  AC2, PPXFR             ;
133435 / 303700,,134701         CAILE  AC2,PPSTAR             ;
133436 / 254000,,133551          JRST      QBLERR             ;
133437 / 554715,,000000          HLRZ  AC2,      (AC1)        ;
133440 / 311700,,022067          CAML  AC2,MEMSIZ             ;
133441 / 313700,,022066         CAMLE  AC2,022066             ;
133442 / 326700,,133551         JUMPN  AC2,133551             ;; IF THERE IS SOMETHING THERE NOT IN FREE STORAGE, ERROR!
133443 / 336013,,023431         SKIPN      INTACT(PID)        ;; IS SOME WISEASS CALLING US AT USER INTERRUPT LEVEL?
133444 / 254000,,133453          JRST      133453             ;; NO, ALL IS WELL.
133445 / 505640,,133452          HRLI  AC1,133452             ;; YES, PUT IN A CLOCK REQUEST TO DO THIS TASK AT REAL CLOCK LEVEL
133446 / 700600,,000400          CONO   PI, PIOFF             ;
133447 / 136640,,013624          IDPB  AC1,  CLKQ             ;
133450 / 700600,,000200          CONO   PI,  PION             ;
133451 / 263140,,000000          POPJ    P,                   ;; PRETEND WE DID IT.
                       ; HERE WE SEE IF THE TASK IS AN EASY OUTSIDER.
                       ; IF IT IS NOT, WE MAKE UP A MASK FOR THE NUMBER OF
                       ; LINES IT COVERS.
                       QBLCLK:
133452 / 550640,,000005          HRRZ  AC1,000005             ;; PICK UP THE TASK BLOCK ADDRESS
                       QBLCLC:
133453 / 261140,,000001          PUSH    P,000001             ;; SAVE THE WORLD
133454 / 261140,,000002          PUSH    P,  TAC1             ;
133455 / 261140,,000005          PUSH    P,   DAT             ;
133456 / 261140,,000012          PUSH    P,  UCHN             ;
133457 / 261140,,000010          PUSH    P,   CHR             ;
133460 / 574255,,000001          HLRE  DAT, QLINE(AC1)        ;; PICK UP STARTING POSITION
133461 / 570515,,000001          HRRE UCHN, QLINE(AC1)        ;; AND THE ENDING LINE NUMBER
133462 / 323500,,133542        JUMPLE UCHN,133542             ;; IF ENDING LINE IS OUT OF BOUNDS, THIS IS AN EASY OUTSIDER
133463 / 336000,,014150         SKIPN      014150             ;; IF DD IS BEING MAINTAINED, PRETEND THE TRANSFER IS OUT OF BOUNDS
133464 / 303240,,000050         CAILE  DAT,000050             ;; OR IF STARTING LINE IS BELOW SCREEN . . .
133465 / 254000,,133542          JRST      133542             ;; IS AN EASY OUTSIDER
133466 / 307252,,000000          CAIG  DAT,      (UCHN)       ;; IS THE STARTING LESS THAN THE FINISHING?
133467 / 344500,,133475          AOJA UCHN,133475             ;;CAN'T MAKE NEXT LINE
133470 / 260140,,000316         PUSHJ    P,PUSHIT             ;
133471 / 260140,,044120         PUSHJ    P,DISERR             ;
133472 / 000000,,154542                                       ;
133473 / 777777,,777777                                       ;
133474 / 260140,,000341         PUSHJ    P, POPIT             ;
                       QBLGO:
133475 / 400040,,000000          SETZ  TAC,                   ;; HERE WE MAKE A 20-BIT MASK, IN BITS
133476 / 474100,,000000          SETO TAC1,                   ;;	0-19 OF TAC, WHERE EACH BIT
133477 / 271240,,000001          ADDI  DAT,000001             ;;	REPRESENTS 2 LINES, AND IS ON
133500 / 271500,,000001          ADDI UCHN,000001             ;;	IF EITHER LINE IS TO BE WRITTEN
133501 / 242240,,777777           LSH  DAT,777777             ;
133502 / 242500,,777777           LSH UCHN,777777             ;
133503 / 276240,,000012          SUBM  DAT,  UCHN             ;
133504 / 245052,,777777          ROTC  TAC,777777(UCHN)       ;
133505 / 210500,,000005          MOVN UCHN,   DAT             ;
133506 / 241052,,000001           ROT  TAC,     1(UCHN)       ;; C(TAC) IS THE PROPER 20-BIT MASK
                       ; HERE WE SCAN THE QUEUE SYSTEM LOOKING FOR A FRAME WITH SOME FREE LINES
                       QBL1:
133507 / 200255,,000002          MOVE  DAT,QFIELD(AC1)        ;; WE WILL ENTER THE TASK ON ITS FIELD
133510 / 200755,,000001          MOVE  AC3, QLINE(AC1)        ;; MERGE BY LINE NUMBER
133511 / 200700,,000001          MOVE  AC2,000001             ;; SET THE FIELD SAVED WORD TO DIFFERENT FROM ANY LEGAL FIELD
133512 / 202700,,014153         MOVEM  AC2, DDLFD             ;
133513 / 403700,,014147         SETZB  AC2,014147             ;; NOTE THAT THERE IS NO LAST FRAME
133514 / 250700,,014151          EXCH  AC2,014151             ;; PICK UP (SHUDDER!) THE ENTIRE QUEUE STRUCTURE
133515 / 322700,,133610         JUMPE  AC2,133610             ;; IF THERE ISN'T ANY, MAKE UP ONE FROM SCRATCH.
133516 / 202700,,014152         MOVEM  AC2,014152             ;; IF THERE IS ONE, SAVE IT FIRST.
                       CNXTFR:
133517 / 312256,,000002          CAME  DAT,QFIELD(AC2)        ;; IS THIS FRAME ON THE RIGHT FIELD?
133520 / 254000,,133625          JRST      133625             ;; NO, MOVE ON TO NEXT FRAME
133521 / 612056,,000001          TDNE  TAC, QLINE(AC2)        ;; YES, IS THERE ROOM ON THIS FRAME?
133522 / 254000,,133635          JRST      133635             ;; NO, GO ON TO NEXT FRAME
133523 / 436056,,000001           ORM  TAC, QLINE(AC2)        ;; YES, MARK OUR LINES AS CLAIMED
                       QBL6:
133524 / 550416,,000004          HRRZ  CHR, QLINK(AC2)        ;; PICK UP ADDRESS OF TASK LIST FOR THIS FRAME
133525 / 322400,,133537         JUMPE  CHR,133537             ;; NONE THERE, ANNEX OUR TASK
133526 / 200700,,000010          MOVE  AC2,000010             ;; SAVE THIS TASK BLOCK ADDRESS FOR ANNEXATION PURPOSES
133527 / 313756,,000001         CAMLE  AC3, QLINE(AC2)        ;; NOW, DO WE GO ABOVE THIS BLOCK?
133530 / 254000,,133524          JRST      133524             ;; NO, TRY NEXT BLOCK
133531 / 542715,,000004          HRRM  AC2, QLINK(AC1)        ;; YES, LINK US IN BETWEEN THESE TWO BLOCKS
133532 / 554756,,000004          HLRZ  AC3, QLINK(AC2)        ;; PICK UP POINTER TO PREVIOUS TASK
133533 / 506755,,000004          HRLM  AC3, QLINK(AC1)        ;; MAKE OUR BACKWARD LINK POINT TO THE LAST BLOCK
133534 / 542657,,000004          HRRM  AC1, QLINK(AC3)        ;; MAKE THE LAST BLOCK POINT TO US
133535 / 506656,,000004          HRLM  AC1, QLINK(AC2)        ;; MAKE THE NEXT BLOCK'S REVERSE POINTER POINT TO US
133536 / 254000,,133645          JRST      133645             ;; PUT THE QUEUE STRUCTURE BACK AND LEAVE
                       QBL7:
133537 / 542656,,000004          HRRM  AC1, QLINK(AC2)        ;; ANNEX US BY PUTTING OUR ADDRESS IN THE LAST BLOCK'S FORWARD POINTER
133540 / 516715,,000004         HRLZM  AC2, QLINK(AC1)        ;; AND POINT OUR REVERSE POINTER TO HIM
133541 / 254000,,133645          JRST      QBLXIT             ;
                       ; WE GET HERE IF THE TASK IS ENTIRELY OUT OF BOUNDS
                       QOOB:
133542 / 260140,,133561         PUSHJ    P,133561             ;; WAKE UP ANYONE WAITING.
133543 / 262140,,000010           POP    P,000010             ;; RESTORE THE WORLD.
133544 / 262140,,000012           POP    P,  UCHN             ;
133545 / 262140,,000005           POP    P,   DAT             ;
133546 / 262140,,000002           POP    P,  TAC1             ;
133547 / 262140,,000001           POP    P,   TAC             ;
                       GIVQB:
133550 / 254000,,134256          JRST        GIVQ             ;
                       ; WE GET HERE IF EITHER THE DISPATCH ADDRESS OR THE DATA BLOCK ADDRESS
                       ; IS ILLEGAL.
                       QBLERR:
133551 / 261155,,000000          PUSH    P,      (AC1)        ;
133552 / 260140,,044120         PUSHJ    P,DISERR             ;
133553 / 000000,,154027                                       ;
133554 / 000103,,777777        OCTQQQ      777777(P)          ;
133555 / 000000,,152275                                       ;
133556 / 777777,,777777                                       ;
151763 / 000001,,000001           XWD 1,1                     ;
133557 / 274140,,151763           SUB    P,151763             ;
133560 / 254000,,134256          JRST        GIVQ             ;
                       WAKEQ:
133561 / 332015,,000006         SKIPE      QCOUNT(AC1)        ;; IS THERE A COUNT HERE?
133562 / 373035,,000006         SOSLE      @QCOUNT(AC1)       ;; PERHAPS WE HAVE TO GO THROUGH THE WAKEUP RITUAL?
133563 / 263140,,000000          POPJ    P,                   ;; NOT YET.
133564 / 336715,,000005         SKIPN  AC2, QWAKE(AC1)        ;; YES WE DO. PICK UP WAKEUP WORD
133565 / 263140,,000000          POPJ    P,                   ;
151663 / 777777,,777700                                       ;
133566 / 612700,,151663          TDNE  AC2,151663             ;; IS IT A JOB NUMBER?
133567 / 254000,,133604          JRST      133604             ;; NO, MUST BE A CLOCK REQUEST
133570 / 331016,,026114         SKIPL      JBTSTS(AC2)        ;; MAKE SURE HE IS STILL RUNABLE
133571 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
133572 / 211740,,000014         MOVNI  AC3,000014             ;; PUT THAT JOB IN THE RUN QUEUE
133573 / 202756,,020574         MOVEM  AC3,JOBQUE(AC2)        ;
133574 / 201756,,021660         MOVEI  AC3,  QJOB(AC2)        ;
133575 / 700600,,000400          CONO   PI, PIOFF             ;
133576 / 332017,,000000         SKIPE            (AC3)        ;
133577 / 254000,,133602          JRST      133602             ;
133600 / 250740,,021660          EXCH  AC3,  QJOB             ;
133601 / 562760,,021660         HRROM  AC3,@  QJOB            ;
133602 / 700600,,000200          CONO   PI,  PION             ;
133603 / 263140,,000000          POPJ    P,                   ;
                       WAKEQ1:
133604 / 700600,,000400          CONO   PI,000400             ;; STOP THE WORLD!
133605 / 136700,,013624          IDPB  AC2,013624             ;; PUT IN THE CLOCK REQUEST
133606 / 700600,,000200          CONO   PI,  PION             ;
133607 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE WHEN THERE IS NO QUEUE AT ALL.
                       QBL3:
133610 / 260140,,133613         PUSHJ    P,133613             ;; MAKE UP A NEW FRAME HEADER
133611 / 202640,,014152         MOVEM  AC1,014152             ;; MAKE THIS THE NEW QUEUE
133612 / 254000,,133645          JRST      133645             ;; RESTORE ACCUMULATORS AND LEAVE.
                       ; HERE IS A ROUTINE TO MAKE UP A NEW FRAME HEADER AND PUT THE CURRENT
                       ; BLOCK IN IT AS ITS ONLY TASK.
                       MAKFRM:
133613 / 261140,,000015          PUSH    P,000015             ;; SAVE THE TASK BLOCK ADDRESS
133614 / 350000,,036176           AOS      036176             ;; COUNT ONE MORE FRAME CREATION
133615 / 260140,,127323         PUSHJ    P,127323             ;; GET A BLOCK FOR THE FRAME HEADER
133616 / 402015,,000000         SETZM            (AC1)        ;; LINK IT TO NOWHERE FOR NOW.
133617 / 202055,,000001         MOVEM  TAC, QLINE(AC1)        ;; PUT IN OUR MASK AS THE INITIAL MASK FOR THE FRAME
133620 / 202255,,000002         MOVEM  DAT,QFIELD(AC1)        ;; STORE THE FIELD WORD AS THIS FRAME'S FIELD
133621 / 262140,,000016           POP    P,000016             ;; GET BACK THE TASK BLOCK ADDRESS
133622 / 552715,,000004         HRRZM  AC2, QLINK(AC1)        ;; POINT THE FRAME HEADER TO US
133623 / 516656,,000004         HRLZM  AC1, QLINK(AC2)        ;; AND OUR BACKWARD POINTER TO THE FRAME HEADER
133624 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE IF THIS FRAME HAS THE WRONG FIELD
                       QBL4:
133625 / 312240,,014153          CAME  DAT,014153             ;; DOES THE LAST FRAME ALSO HAVE THE WRONG FIELD?
133626 / 336000,,014147         SKIPN      014147             ;; YES, DO WE EVEN HAVE A LAST FRAME?
133627 / 254000,,133637          JRST      133637             ;; NO TO EITHER, MOVE ON TO NEXT FRAME
133630 / 261140,,000016          PUSH    P,000016             ;; SAVE POINTER TO CURRENT FRAME
133631 / 260140,,133613         PUSHJ    P,133613             ;; MAKE UP A BRAND NEW AND DIFFERENT FRAME
133632 / 202660,,014147         MOVEM  AC1,@014147            ;; INSERT IT BETWEEN THESE TWO
133633 / 262155,,000000           POP    P,      (AC1)        ;; POINT IT TO THE SUCCESSOR
133634 / 254000,,133645          JRST      QBLXIT             ;
                       ; HERE IS A ROUTINE THAT MOVES ON TO THE NEXT FRAME, IF THERE IS NO NEXT
                       ; FRAME, IT MAKES UP A FRAME AND ANNEXES IT ONTO THE FRAME LIST.
                       QBL8:
133635 / 202240,,014153         MOVEM  DAT,014153             ;; SAVE THE FIELD OF THE FRAME
133636 / 254000,,133640          JRST        QBL9             ;
                       QBL5:
133637 / 452240,,014153        SETCAM  DAT,014153             ;; SAVE THE FIELD OF THE FRAME (OPPOSITE FROM US)
                       QBL9:
133640 / 552700,,014147         HRRZM  AC2,014147             ;; SAVE THE ADDRESS OF THE LAST FRAME
133641 / 550716,,000000          HRRZ  AC2,      (AC2)        ;; PICK UP ADDRESS OF NEXT FRAME
133642 / 326700,,133517         JUMPN  AC2,133517             ;; IF THERE IS ONE, GO CHECK IT OUT.
133643 / 260140,,133613         PUSHJ    P,133613             ;; OTHERWISE, MAKE UP A NEW FRAME HEADER
133644 / 552660,,014147         HRRZM  AC1,@014147            ;; LINK US ON TO THE FRAME LIST
                       QBLXIT:
133645 / 260140,,133663         PUSHJ    P,DDQCHK             ;
133646 / 200700,,014152          MOVE  AC2,014152             ;; ALL DONE, PUT THE TASK QUEUE BACK
133647 / 202700,,014151         MOVEM  AC2, DDQUE             ;
133650 / 350000,,036153           AOS      036153             ;; MARK ONE MORE IN THE QUEUE
133651 / 262140,,000010           POP    P,000010             ;; RESTORE THE ACCUMULATORS
133652 / 262140,,000012           POP    P,  UCHN             ;
133653 / 262140,,000005           POP    P,   DAT             ;
133654 / 262140,,000002           POP    P,  TAC1             ;
133655 / 262140,,000001           POP    P,   TAC             ;
133656 / 700600,,000400          CONO   PI,000400             ;; STOP THE WORLD WHILE WE START UP THE DATA DISC
133657 / 336000,,014262         SKIPN      014262             ;; IS THE DISK RUNNING?
133660 / 476000,,014127         SETOM      014127             ;; NO, START IT UP NEXT TICK
133661 / 700600,,000200          CONO   PI,  PION             ;
133662 / 263140,,000000          POPJ    P,                   ;
                       ;CHECK STATE OF DD QUEUE.  CALL BEFORE SETTING UP DDQUE FROM DDSQ
                       DDQCHK:
133663 / 201240,,014152         MOVEI  DAT,  DDSQ             ;
                       DDQCH1:
133664 / 336645,,000000         SKIPN  AC1,      (DAT)        ;
133665 / 263140,,000000          POPJ    P,                   ;
133666 / 315640,,022067         CAMGE  AC1,MEMSIZ             ;
133667 / 254000,,133705          JRST      133705             ;;ADDRESS OUT OF BOUNDS
133670 / 205400,,777777         MOVSI  CHR,777777             ;
133671 / 616415,,000000          TDNN  CHR,      (AC1)        ;
133672 / 612415,,000004          TDNE  CHR, QLINK(AC1)        ;
133673 / 254000,,133732          JRST      133732             ;;EXTRANEOUS BITS ON IN FRAME
                       ;reg	MOVEI CHR,77777
                       ;	TDNE CHR,QLINE(AC1)
                       ;	JRST DDQCE1		;EXTRANEOUS BITS IN QLINE
133674 / 332415,,000002         SKIPE  CHR,QFIELD(AC1)        ;
133675 / 346400,,133722          AOJN  CHR,133722             ;;QFIELD NOT 0 OR -1
133676 / 550715,,000004          HRRZ  AC2, QLINK(AC1)        ;;POINTER TO TASK BLOCK
133677 / 322700,,133703         JUMPE  AC2,DDQCH4             ;
133700 / 315700,,022067         CAMGE  AC2,MEMSIZ             ;
133701 / 254000,,133705          JRST      DDQCE3             ;
133702 / 260140,,134007         PUSHJ    P,134007             ;;CHECK LIST OF TASK BLOCKS
                       DDQCH4:
133703 / 200240,,000015          MOVE  DAT,   AC1             ;
133704 / 254000,,133664          JRST      DDQCH1             ;
                       DDQCE3:
133705 / 265400,,133775           JSP  CHR,DDCHER             ;
133706 / 260140,,044066         PUSHJ    P,DISMES             ;
133721 / 254000,,133740          JRST      DDCKR1             ;
                       DDQCE2:
133722 / 265400,,133775           JSP  CHR,DDCHER             ;
133723 / 260140,,044066         PUSHJ    P,DISMES             ;
133731 / 254000,,133740          JRST      DDCKR1             ;
                       DDQCE1:
133732 / 265400,,133775           JSP  CHR,DDCHER             ;
133733 / 260140,,044066         PUSHJ    P,DISMES             ;
                       DDCKR1:
133740 / 260140,,044066         PUSHJ    P,DISMES             ;
133745 / 200043,,777776          MOVE  TAC,777776(P)          ;
133746 / 260140,,044170         PUSHJ    P,DISLOC             ;
133747 / 260140,,044066         PUSHJ    P,DISMES             ;
133756 / 200043,,777766          MOVE  TAC,777766(P)          ;
133757 / 260140,,044170         PUSHJ    P,DISLOC             ;
                       DDCKR3:
133760 / 260140,,044066         PUSHJ    P,DISMES             ;
133771 / 260140,,043761         PUSHJ    P,043761             ;
133772 / 260140,,000341         PUSHJ    P, POPIT             ;
133773 / 260140,,000347         PUSHJ    P,000347             ;
133774 / 254000,,133703          JRST      133703             ;;MAYBE IT'S POSSIBLE TO CONTINUE
                       DDCHER:
133775 / 260140,,000316         PUSHJ    P,PUSHIT             ;
133776 / 260140,,044066         PUSHJ    P,DISMES             ;
134006 / 254023,,777771          JRST      @777771(P)         ;
                       ;CHECK TASK LIST POINTED TO BY AC2 , AC1 POINTS TO FRAME IT COMES FROM
                       DDTSCH:
134007 / 261140,,000015          PUSH    P,   AC1             ;
                       DDTSC2:
134010 / 550416,,000000          HRRZ  CHR,      (AC2)        ;;ADDRESS OF TASK ROUTINE
134011 / 301400,,126352          CAIL  CHR,DWPINI             ;
134012 / 301400,,135634          CAIL  CHR,WHOINI             ;
134013 / 254000,,134031          JRST      DDTSE4             ;
134014 / 332416,,000002         SKIPE  CHR,QFIELD(AC2)        ;
134015 / 346400,,134064          AOJN  CHR,134064             ;;QFIELD NOT 0 OR -1
134016 / 554416,,000004          HLRZ  CHR, QLINK(AC2)        ;;BACKWARDS LINK
134017 / 302415,,000000          CAIE  CHR,      (AC1)        ;
134020 / 254000,,134054          JRST      134054             ;;BACKWARDS LINK IS WRONG
134021 / 550640,,000016          HRRZ  AC1,   AC2             ;
134022 / 550716,,000004          HRRZ  AC2, QLINK(AC2)        ;;GET FORWARD LINK
134023 / 322700,,134027         JUMPE  AC2,134027             ;;END OF LIST
134024 / 315700,,022067         CAMGE  AC2,MEMSIZ             ;
134025 / 254000,,134043          JRST      134043             ;;TASK LINK OUT OF BOUNDS
134026 / 254000,,134010          JRST      DDTSC2             ;
                       DDTSC1:
134027 / 262140,,000015           POP    P,   AC1             ;
134030 / 263140,,000000          POPJ    P,                   ;
                       DDTSE4:
134031 / 265400,,133775           JSP  CHR,DDCHER             ;
134032 / 260140,,044066         PUSHJ    P,DISMES             ;
134042 / 254000,,134073          JRST      DDCKR2             ;
                       DDTSE3:
134043 / 265400,,133775           JSP  CHR,DDCHER             ;
134044 / 260140,,044066         PUSHJ    P,DISMES             ;
134053 / 254000,,134073          JRST      DDCKR2             ;
                       DDTSE2:
134054 / 265400,,133775           JSP  CHR,DDCHER             ;
134055 / 260140,,044066         PUSHJ    P,DISMES             ;
134063 / 254000,,134073          JRST      DDCKR2             ;
                       DDTSE1:
134064 / 265400,,133775           JSP  CHR,DDCHER             ;
134065 / 260140,,044066         PUSHJ    P,DISMES             ;
                       DDCKR2:
134073 / 260140,,044066         PUSHJ    P,DISMES             ;
134100 / 200043,,777777          MOVE  TAC,777777(P)          ;
134101 / 260140,,044170         PUSHJ    P,DISLOC             ;
134102 / 260140,,044066         PUSHJ    P,DISMES             ;
134115 / 200043,,777776          MOVE  TAC,777776(P)          ;
134116 / 260140,,044170         PUSHJ    P,DISLOC             ;
134117 / 254000,,133760          JRST      DDCKR3             ;
                       ; HERE LIES THE INCREDIBLE INTERRUPT-LEVEL ROUTINES!
                       ; LET THE READER BEWARE.
                       DDSTRT:
134120 / 402000,,014127         SETZM      014127             ;
134121 / 336000,,014151         SKIPN      014151             ;; IS THERE ANYTHING FOR US?
134122 / 254000,,046320          JRST      046320             ;; NO, LEAVE NOW
134123 / 476000,,014262         SETOM      014262             ;; WE ARE NOW OFFICIALLY RUNNING.
134124 / 202040,,014140         MOVEM  TAC,014140             ;; SAVE THE ACCUMULATORS
134125 / 202640,,014135         MOVEM  AC1,DDSAC1             ;
134126 / 202700,,014136         MOVEM  AC2,DDSAC2             ;
134127 / 202740,,014137         MOVEM  AC3,DDSAC3             ;
134130 / 202240,,014141         MOVEM  DAT,DDSDAT             ;
134131 / 250153,,023516          EXCH    P,APRPDL(PID)        ;; GET US A PDL TOO
134132 / 201740,,046320         MOVEI  AC3,046320             ;; WE WILL RETURN TO APRINT WHEN WE ARE DONE
134133 / 202740,,014132         MOVEM  AC3, DDRET             ;
134134 / 200640,,014151          MOVE  AC1,014151             ;; REMOVE THE FIRST FRAME FROM THE QUEUE ENTIRELY
                       NEWFRM:
134135 / 200715,,000000          MOVE  AC2,      (AC1)        ;; PICK UP THE ADDRESS OF THE NEXT FRAME
134136 / 202700,,014151         MOVEM  AC2,014151             ;; MAKE IT THE NEW QUEUE
134137 / 202640,,014145         MOVEM  AC1,014145             ;; SAVE THIS ADDRESS AS OUR CURRENT FRAME
134140 / 550055,,000004          HRRZ  TAC, QLINK(AC1)        ;; PICK UP THE ADDRESS OF THE FIRST TASK IN THE FRAME
                       SCNLOP:
134141 / 550701,,000004          HRRZ  AC2, QLINK(TAC)        ;; PICK UP THE ADDRESS OF THE NEXT TASK
134142 / 202700,,014142         MOVEM  AC2,014142             ;; SAVE IT FOR FUTURE REFERENCE
134143 / 554241,,000000          HLRZ  DAT,      (TAC)        ;; PICK UP THE DATA BLOCK ADDRESS
134144 / 550741,,000000          HRRZ  AC3,      (TAC)        ;; AND THE ROUTINE ADDRESS
134145 / 301740,,126352          CAIL  AC3,DWPINI             ;
134146 / 301740,,135634          CAIL  AC3,WHOINI             ;
134147 / 304000,,000000          CAIA                         ;
134150 / 254017,,000000          JRST            (AC3)        ;; JUMP OFF TO THE ROUTINE
134151 / 261140,,000010          PUSH    P,000010             ;;IN CASE WE WANT TO LOOK AT CHR
134152 / 201240,,014145         MOVEI  DAT,DDCURQ             ;
134153 / 260140,,133664         PUSHJ    P,133664             ;;SHOULDN'T EVER RETURN
134154 / 260140,,000347         PUSHJ    P,000347             ;
134155 / 254000,,000365          JRST      000365             ;
                       ; ALL THE I-LEVEL ROUTINES RETURN TO HERE WHEN THEY ARE DONE
                       RESCAN:
134156 / 332040,,014142         SKIPE  TAC,014142             ;; IS THERE ANOTHER TASK IN THIS FRAME?
134157 / 254000,,134141          JRST      134141             ;; YES, SERVE IT NOW.
134160 / 550640,,014145          HRRZ  AC1,014145             ;; PICK UP THE FRAME HEAD WE WERE WORKING ON.
134161 / 550715,,000004          HRRZ  AC2, QLINK(AC1)        ;; SEE IF THERE ARE ANY TASKS LEFT ON IT.
134162 / 322700,,134167         JUMPE  AC2,134167             ;; NO, THEY MUST HAVE ALL SUCCEEDED
134163 / 505700,,134203          HRLI  AC2,134203             ;; YES, PUT IN A CLOCK REQUEST TO REQUEUE THEM
134164 / 700600,,000400          CONO   PI,000400             ;; THIS WAY, THEY WILL GET TRIED AGAIN
134165 / 136700,,013624          IDPB  AC2,  CLKQ             ;
134166 / 700600,,000200          CONO   PI,  PION             ;
                       DDEXIT:
134167 / 260140,,134256         PUSHJ    P,134256             ;; RELEASE THE FRAME HEADER
134170 / 332640,,014151         SKIPE  AC1,014151             ;; SEE IF THERE IS ANOTHER FRAME
134171 / 254000,,134135          JRST      134135             ;; YES, DO IT.
134172 / 402000,,014262         SETZM      014262             ;; NO, DIE QUIETLY
134173 / 751200,,000010          CONO  DDD,000010             ;; CLEAR OUT THE BEAST
134174 / 200040,,014140          MOVE  TAC,014140             ;; RESTORE ALL OUR ACCUMULATORS
134175 / 200640,,014135          MOVE  AC1,DDSAC1             ;
134176 / 200700,,014136          MOVE  AC2,DDSAC2             ;
134177 / 200740,,014137          MOVE  AC3,DDSAC3             ;
134200 / 200240,,014141          MOVE  DAT,DDSDAT             ;
134201 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
134202 / 264000,,014133           JSR      014133             ;; RETURN TO LOSER
                       ; THIS ROUTINE IS CALLED AT CLOCK LEVEL WITH A LIST OF TASKS THAT
                       ; TIMED OUT OR LOST IN SOME OBSCURE WAY. WE JUST REQUEUE THEM AND
                       ; TRY AGAIN.
                       DDREQ:
134203 / 550640,,000005          HRRZ  AC1,000005             ;; PICK UP THE TASK LIST
                       DDREQ1:
134204 / 550255,,000004          HRRZ  DAT, QLINK(AC1)        ;; GET ADDRESS OF NEXT BLOCK ON LIST
134205 / 377015,,000007          SOSG       QTIME(AC1)        ;; HAVE WE TRIED TOO MANY TIMES
134206 / 254000,,134213          JRST      134213             ;; YES, DON'T REQUE IT.
134207 / 260140,,133433         PUSHJ    P,133433             ;; REQUE THE TASK
                       DDREQ3:
134210 / 322240,,037403         JUMPE  DAT,037403             ;; IF NO MORE TASKS, LEAVE
134211 / 200640,,000005          MOVE  AC1,   DAT             ;
134212 / 254000,,134204          JRST      DDREQ1             ;
                       DDREQ2:
134213 / 200040,,000015          MOVE  TAC,   AC1             ;
134214 / 260140,,134224         PUSHJ    P,134224             ;; WAKE UP CALLER
134215 / 254000,,134210          JRST      DDREQ3             ;
                       ; THIS ROUTINE TAKES A TASK OUT OF THE QUEUE AND WAKES UP ANYONE IF
                       ; IT IS SUPPOSED TO.
                       DEQ:
                       ;SOSGE NDDQUE		; NOTE ONE MORE GONE FROM QUEUE
                       ;SETZM NDDQUE		; DON'T LET IT GET NEGATIVE
134216 / 200701,,000004          MOVE  AC2, QLINK(TAC)        ;; PICK UP ADDRESS OF SUCCESSOR
134217 / 602700,,777777          TRNE  AC2,777777             ;; IS THERE ANYONE HOME?
134220 / 502716,,000004          HLLM  AC2, QLINK(AC2)        ;; YES, MAKE REVERSE LINK OF SUCCESSOR POINT TO OUR PREDECESSOR
134221 / 207000,,000016         MOVSS      000016             ;; SAME DEAL FOR OTHER SIDE
134222 / 602700,,777777          TRNE  AC2,777777             ;; ANYONE HOME?
134223 / 546716,,000004          HLRM  AC2, QLINK(AC2)        ;; MAKE FORWARD LINK OF PREDECESSOR POINT TO SUCCESSOR
                       DEQWAK:
134224 / 332001,,000006         SKIPE      QCOUNT(TAC)        ;; IS THERE A COUNT WORD SOMEWHERE?
134225 / 373021,,000006         SOSLE      @QCOUNT(TAC)       ;; YES, COUNT IT DOWN.
134226 / 254000,,134255          JRST      134255             ;; NO COUNT OR COUNT NOT EXPIRED
134227 / 336641,,000005         SKIPN  AC1, QWAKE(TAC)        ;; PICK UP WAKEUP WORD
134230 / 254000,,134255          JRST      134255             ;; IF NONE THERE, DON'T BOTHER
151663 / 777777,,777700                                       ;
134231 / 612640,,151663          TDNE  AC1,151663             ;; IS IT A JOB NUMBER?
134232 / 254000,,134252          JRST      134252             ;; NO, MUST BE CLOCK REQUEST
134233 / 331015,,026114         SKIPL      JBTSTS(AC1)        ;
134234 / 254000,,134255          JRST      134255             ;;DON'T REQUE IF ↑C
134235 / 554701,,000000          HLRZ  AC2,      (TAC)        ;
134236 / 570716,,000027          HRRE  AC2,PRGJMP(AC2)        ;;CHECK WAIT FLAG
134237 / 325700,,134255        JUMPGE  AC2,134255             ;;NOT WAITING - DON'T REQUE
134240 / 211700,,000014         MOVNI  AC2,000014             ;; IS JOB NUMBER, PUT THIS JOB IN THE RUN QUEUE
134241 / 202715,,020574         MOVEM  AC2,JOBQUE(AC1)        ;
134242 / 201655,,021660         MOVEI  AC1,  QJOB(AC1)        ;
134243 / 700600,,000400          CONO   PI, PIOFF             ;
134244 / 332015,,000000         SKIPE            (AC1)        ;
134245 / 254000,,134250          JRST      134250             ;
134246 / 250640,,021660          EXCH  AC1,  QJOB             ;
134247 / 562660,,021660         HRROM  AC1,@  QJOB            ;
134250 / 700600,,000200          CONO   PI,  PION             ;
134251 / 254000,,134255          JRST        DEQ1             ;
                       DEQ2:
134252 / 700600,,000400          CONO   PI, PIOFF             ;
134253 / 136640,,013624          IDPB  AC1,  CLKQ             ;
134254 / 700600,,000200          CONO   PI,  PION             ;
                       DEQ1:
134255 / 200640,,000001          MOVE  AC1,000001             ;; PUT TASK BLOCK ADDRESS IN AC1 FOR THE FOLLOWING ROUTINE
                       GIVQ:
134256 / 260140,,074643         PUSHJ    P,SFSGIV             ;
134257 / 000000,,022513                                       ;
134260 / 263140,,000000          POPJ    P,                   ;
                       ; PAGE PRINTER TRANSFERS
                       PPXFR:
134261 / 331645,,000010         SKIPL  AC1,HEDPTR(DAT)        ;;LET'S SEE IF THIS IS A LEGAL PP
134262 / 311640,,022066          CAML  AC1,RMEMSI             ;
134263 / 254000,,134356          JRST      134356             ;;GARBAGEY HEADER ADR
134264 / 554655,,000015          HLRZ  AC1,PRGNUM(AC1)        ;
152704 / 241005,,000004                                       ;
134265 / 135740,,152704           LDB  AC3,152704             ;
134266 / 302657,,000000          CAIE  AC1,      (AC3)        ;
134267 / 254000,,134356          JRST      134356             ;;DD CHNL DOESN'T MATCH
134270 / 402005,,000031         SETZM       DDSAV(DAT)        ;; INITIALIZE THE SAVE WORD
134271 / 332005,,000046         SKIPE       PPINV(DAT)        ;; IS THE TEXT VALID?
134272 / 254000,,134344          JRST      134344             ;; NO, FLUSH THE TRANSFER
134273 / 260140,,130032         PUSHJ    P,130032             ;; GET NUMBER OF FIRST LINE ON PAGE IN AC3
134274 / 574641,,000001          HLRE  AC1, QLINE(TAC)        ;; PICK UP FIRST LINE OF TRANSFER
134275 / 317645,,000033          CAMG  AC1,  VPOS(DAT)        ;; IS FIRST LINE OF TRANSFER BELOW CURRENT SCREEN?
134276 / 315640,,000017         CAMGE  AC1,000017             ;; OR ABOVE FIRST LINE OF SCREEN?
134277 / 254000,,134344          JRST      134344             ;; YES, ABORT TRANSFER
134300 / 570641,,000001          HRRE  AC1, QLINE(TAC)        ;; SAME FOR LAST LINE OF TRANSFER
134301 / 317645,,000033          CAMG  AC1,  VPOS(DAT)        ;
134302 / 315640,,000017         CAMGE  AC1,   AC3             ;
134303 / 254000,,134344          JRST      PPXFR2             ;
134304 / 574741,,000001          HLRE  AC3, QLINE(TAC)        ;; PICK UP STARTING LINE NUMBER
134305 / 337000,,000017         SKIPG      000017             ;; IF IT IS ABOVE SCREEN . . .
134306 / 201740,,000001         MOVEI  AC3,000001             ;; USE TOP OF SCREEN AS FIRST LINE
134307 / 201657,,777777         MOVEI  AC1,777777(AC3)        ;; GET NORMALIZED LINE NUMBER
134310 / 260140,,127757         PUSHJ    P,127757             ;; GET LINE ADDRESS FROM LINE NUMBER
152013 / 000020,,000001           XWD DISJMP,1                ;
134311 / 270700,,152013           ADD  AC2,152013             ;; BUMP PAST CRLF ON LAST LINE
134312 / 206705,,000006         MOVSM  AC2,000006(DAT)        ;; PLACE JUMP TO TEXT IN CODE
134313 / 221640,,000014         IMULI  AC1,000014             ;
134314 / 332001,,000002         SKIPE      QFIELD(TAC)        ;; CHECK THE FIELD
134315 / 435640,,000001           ORI  AC1,000001             ;; PUT IT OUT ON THE ODD FIELD THIS TIME
152400 / 000005,,000005                                       ;
152400 / 140405,,000005 POINT 4,05000005,23                   ;
134316 / 137640,,152400           DPB  AC1,152400             ;
134317 / 242640,,777774           LSH  AC1,777774             ;
152674 / 000005,,000005                                       ;
152674 / 240505,,000005 POINT 5,05000005,15                   ;
134320 / 137640,,152674           DPB  AC1,152674             ;
134321 / 570741,,000001          HRRE  AC3, QLINE(TAC)        ;; PICK UP FINISHING LINE OF TRANSFER
134322 / 303740,,000050         CAILE  AC3,000050             ;; IS IT OFF THE SCREEN?
134323 / 201740,,000050         MOVEI  AC3,000050             ;; YES, USE THE LAST LINE ON THE SCREEN
134324 / 316745,,000033          CAMN  AC3,  VPOS(DAT)        ;; IS THIS THE SAME AS THE VERTICAL POSITION OF THE PAGE PRINTER
134325 / 254000,,134352          JRST      134352             ;; YES, NO NEED TO SAVE ANY WORDS.
134326 / 271740,,000001          ADDI  AC3,000001             ;; BUMP LINE POINTER BY ONE TO GET TO THE END OF THIS LINE
134327 / 260140,,127757         PUSHJ    P,127757             ;; PICK UP THE ADDRESS OF THE END OF THAT LINE
134330 / 200656,,000000          MOVE  AC1,      (AC2)        ;; PICK UP THE WORD AT THE END OF THE LINE
134331 / 202705,,000030         MOVEM  AC2, DDSPT(DAT)        ;; SAVE THE POINTER TO THE SAVED WORD.
134332 / 202645,,000031         MOVEM  AC1, DDSAV(DAT)        ;; STORE IT IN THE PAGE PRINTER CONTROL BLOCK
134333 / 205645,,000031         MOVSI  AC1, DDSAV(DAT)        ;; PICK UP ADDRESS OF SAVED WORD
134334 / 541640,,000020          HRRI  AC1,000020             ;; PLACE A JUMP TO IT WHERE IT WAS IN THE BUFFER
134335 / 202656,,000000         MOVEM  AC1,      (AC2)        ;
                       PPXFR3:
134336 / 201645,,000004         MOVEI  AC1,  DDCW(DAT)        ;; PICK UP ADDRESS OF START OF TRANSFER
134337 / 751200,,000563          CONO  DDD,000563             ;; SET UP THE DATA DISC
134340 / 751140,,000015         DATAO  DDD,000015             ;; SEND OUT THE ADDRESS
134341 / 260140,,134712         PUSHJ    P,134712             ;; WAIT FOR IT
134342 / 255000,,000000          JFCL                         ;
134343 / 254000,,134345          JRST      134345             ;; LOSE BIG, LEAVE THE TRANSFER IN THE QUEUE
                       PPXFR2:
134344 / 260140,,134216         PUSHJ    P,134216             ;; WIN, TAKE THE TASK OUT OF THE QUEUE
                       PPXFR1:
134345 / 205640,,040000         MOVSI  AC1,040000             ;; CLEAR THE 'NO ERASE' BIT IF WE SET IT
134346 / 412645,,000004        ANDCAM  AC1,  DDCW(DAT)        ;
134347 / 332645,,000031         SKIPE  AC1, DDSAV(DAT)        ;; RESTORE THE SAVED WORD, IF THERE IS ANY
134350 / 202665,,000030         MOVEM  AC1,@ DDSPT(DAT)       ;
134351 / 254000,,134156          JRST      RESCAN             ;
                       PPXFR4:
134352 / 205640,,040000         MOVSI  AC1,040000             ;; IF WE ARE AT THE BOTTOM OF THE SCREEN,
134353 / 316705,,000033          CAMN  AC2,  VPOS(DAT)        ;; THEN DON'T ERASE THE REST OF THE LINE
134354 / 436645,,000004           ORM  AC1,  DDCW(DAT)        ;; BECAUSE WE MIGHT BE ERASING PART OF THE LINE EDITOR
134355 / 254000,,134336          JRST      134336             ;; THE LINE EDITOR WILL ERASE THE REST OF THE LINE ITSELF
                       ILLPP:
134356 / 260140,,000316         PUSHJ    P,PUSHIT             ;
134357 / 260140,,044320         PUSHJ    P,DISDAT             ;
134360 / 260140,,044066         PUSHJ    P,DISMES             ;
134366 / 332000,,000500         SKIPE      000500             ;
134367 / 260140,,000347         PUSHJ    P,000347             ;
134370 / 260140,,000341         PUSHJ    P, POPIT             ;
134371 / 260140,,134216         PUSHJ    P,   DEQ             ;
134372 / 254000,,134156          JRST      RESCAN             ;
                       ; HERE IS THE ERASE CODE.
                       ERASE:
134373 / 574701,,000001          HLRE  AC2, QLINE(TAC)        ;; PICK UP STARTING ADDRESS
134374 / 337000,,000016         SKIPG      000016             ;; IS IT ABOVE THE SCREEN?
134375 / 201640,,000001         MOVEI  AC1,000001             ;; YES, START FROM LINE 1
134376 / 201656,,777777         MOVEI  AC1,777777(AC2)        ;; CONVERT IT TO HARDWARE FORM
134377 / 221640,,000014         IMULI  AC1,000014             ;
134400 / 332001,,000002         SKIPE      QFIELD(TAC)        ;; WHAT FIELD DOES THIS GO OUT ON?
134401 / 435640,,000001           ORI  AC1,000001             ;; ODD FIELD
152377 / 000000,,014264                                       ;
152377 / 140400,,014264 POINT 4,00014264,23                   ;
134402 / 137640,,152377           DPB  AC1,152377             ;
134403 / 242640,,777774           LSH  AC1,777774             ;
152672 / 000000,,014264                                       ;
152672 / 240500,,014264 POINT 5,00014264,15                   ;
134404 / 137640,,152672           DPB  AC1,152672             ;
134405 / 200645,,000004          MOVE  AC1,  DDCW(DAT)        ;; PICK UP FUNCTION SELECT
134406 / 202640,,014263         MOVEM  AC1,014263             ;; USE IT FOR THE ERASURE
134407 / 570641,,000001          HRRE  AC1, QLINE(TAC)        ;; GET ENDING LINE NUMBER
134410 / 303640,,000050         CAILE  AC1,000050             ;; IF OFF THE BOTTOM OF THE SCREEN . . .
134411 / 201640,,000050         MOVEI  AC1,000050             ;; THEN USE THE NUMBER OF THE LAST LINE ON THE SCREEN
134412 / 274700,,000015           SUB  AC2,000015             ;; GET THE NUMBER OF LINES TO BE ERASED
152016 / 000020,,014260           XWD DISJMP,DDCRLF+=39       ;
134413 / 270700,,152016           ADD  AC2,152016             ;
134414 / 206700,,014265         MOVSM  AC2,014265             ;; JUMP TO THE POSITION IN THE ERASURES THAT CORRESPONDS TO THAT MANY LINES.
134415 / 751200,,000563          CONO  DDD, USUAL             ;
151740 / 000000,,014263                                       ;
134416 / 751140,,151740         DATAO  DDD,151740             ;
                       CWAIT:
134417 / 260140,,134712         PUSHJ    P, ISYNC             ;
134420 / 255000,,000000          JFCL                         ;
134421 / 254000,,134156          JRST      134156             ;; LOSE BIG, JUST DO ANOTHER TASK
134422 / 260140,,134216         PUSHJ    P,134216             ;; WIN, TAKE US OUT OF THE QUEUE
134423 / 254000,,134156          JRST      134156             ;; AND GO DO SOMETHING ELSE.
                       ; CURSOR TRANSFERS.
                       CURSOR:
152137 / 000000,,014204                                       ;
152137 / 004400,,014204 POINT 36,00014204,35                  ;
134424 / 200640,,152137          MOVE  AC1,152137             ;
134425 / 202640,,014204         MOVEM  AC1,014204             ;; INITIALIZE LIST OF WORDS IN CURSOR CODE WE USED
134426 / 200645,,000004          MOVE  AC1,  DDCW(DAT)        ;; PICK UP COMMAND WORD WITH FUNCTION SELECT IN IT
134427 / 661640,,002000           TLO  AC1,002000             ;; MAKE IT A GRAPHICS WORD
134430 / 202640,,014160         MOVEM  AC1,014160             ;; AND USE IT AS OUR SELECT WORD
134431 / 574641,,000001          HLRE  AC1, QLINE(TAC)        ;; PICK UP LINE NUMBER OF TRANSFER
134432 / 323640,,134455        JUMPLE  AC1,134455             ;; IF OUT OF BOUNDS, FORGET IT
134433 / 303640,,000050         CAILE  AC1,000050             ;; IS IT OFF THE BOTTOM OF THE SCREEN?
134434 / 254000,,134455          JRST      134455             ;; YES, RESTORE CURSOR CODE AND LEAVE
134435 / 221640,,000014         IMULI  AC1,000014             ;
134436 / 275640,,000002          SUBI  AC1,000002             ;; BACK UP THE LINE TO BEFORE THE NEXT TEXT
152376 / 000000,,014161                                       ;
152376 / 140400,,014161 POINT 4,00014161,23                   ;
134437 / 137640,,152376           DPB  AC1,152376             ;
134440 / 242640,,777774           LSH  AC1,777774             ;
152671 / 000000,,014161                                       ;
152671 / 240500,,014161 POINT 5,00014161,15                   ;
134441 / 137640,,152671           DPB  AC1,152671             ;
134442 / 574641,,000003          HLRE  AC1, QHPOS(TAC)        ;; PICK UP FIRST HORIZONTAL POSITION
134443 / 331000,,000015         SKIPL      000015             ;; IS THERE ANY?
134444 / 260140,,134464         PUSHJ    P,134464             ;; YES, MAKE UP CODE FOR IT
134445 / 570641,,000003          HRRE  AC1, QHPOS(TAC)        ;; PICK UP SECOND HORIZONTAL POSITION
134446 / 331000,,000015         SKIPL      000015             ;; IS THERE ANY?
134447 / 260140,,134464         PUSHJ    P,134464             ;; YES, COMPILE IT.
134450 / 751200,,000563          CONO  DDD, USUAL             ;
151737 / 000000,,014160                                       ;
134451 / 751140,,151737         DATAO  DDD,151737             ;
134452 / 260140,,134712         PUSHJ    P, ISYNC             ;
134453 / 255000,,000000          JFCL                         ;
134454 / 254000,,134456          JRST      134456             ;; UNFORGIVABLE LOSSAGE, TRY AGAIN LATER
                       CDX:
134455 / 260140,,134216         PUSHJ    P,134216             ;; REMOVE US FROM THE QUEUE
                       CURS2:
134456 / 550640,,014204          HRRZ  AC1,014204             ;; PICK UP POINTER TO CURSOR CODE ADDRESSES
134457 / 201700,,000002         MOVEI  AC2,000002             ;; PICK UP A BLANK GRAPHICS WORD
                       CURS1:
134460 / 305640,,014205         CAIGE  AC1,014205             ;; ARE WE BACK TO THE START YET?
134461 / 254000,,134156          JRST      134156             ;; YES, GO BACK FOR ANOTHER TASK
134462 / 202735,,000000         MOVEM  AC2,@      (AC1)       ;; NO, CLEAR OUT THIS CURSOR
134463 / 364640,,134460          SOJA  AC1,134460             ;; BACK UP FOR THE NEXT ONE, IF ANY.
                       ; THIS ROUTINE MAKES UP THE CODE FOR A CURSOR.
                       CMAKE:
134464 / 221640,,000006         IMULI  AC1,000006             ;; CONVERT TO NUMBER OF BITS FROM LEFT MARGIN
134465 / 271640,,000001          ADDI  AC1,000001             ;; THE UNIVERSAL FUDGE FACTOR STRIKES AGAIN!
152051 / 000000,,000015                                       ;
152051 / 000500,,000015 POINT 5,00000015,35                   ;
134466 / 135700,,152051           LDB  AC2,152051             ;
134467 / 242640,,777773           LSH  AC1,777773             ;; IT IS NOW CONVERTED TO NUMBER OF WORDS AND BITS WITHIN LAST WORD
134470 / 271640,,014162          ADDI  AC1,014162             ;; MAKE UP POINTER TO THE GRAPHICS WORD IN QUESTION
134471 / 136640,,014204          IDPB  AC1,014204             ;; SAVE THIS ADDRESS SO WE CAN ZERO IT WHEN WE LEAVE
134472 / 205740,,360000         MOVSI  AC3,360000             ;; SHIFT OVER A CURSOR
134473 / 213000,,000016         MOVNS         AC2             ;
134474 / 242756,,000000           LSH  AC3,      (AC2)        ;
134475 / 421740,,000017        ANDCMI  AC3,000017             ;; ZERO OUT POSSIBLE OVERFLOW INTO OPCODE
134476 / 436755,,000000           ORM  AC3,      (AC1)        ;; PUT THOSE BITS INTO THE LOCATION WE CALCULATED
151665 / 777777,,777744                                       ;
134477 / 313700,,151665         CAMLE  AC2,151665             ;; IS THERE TWO WORDS WORTH?
134500 / 263140,,000000          POPJ    P,                   ;; NO, RETURN NOW
134501 / 271640,,000001          ADDI  AC1,000001             ;; YES, BUMP POINTER
134502 / 136640,,014204          IDPB  AC1,014204             ;; AND SAVE IT
134503 / 205740,,360000         MOVSI  AC3,360000             ;; MAKE UP ANOTHER CURSOR
134504 / 242756,,000040           LSH  AC3,000040(AC2)        ;
134505 / 436755,,000000           ORM  AC3,      (AC1)        ;; SET IT IN PLACE
134506 / 263140,,000000          POPJ    P,                   ;
                       ; LINE EDITOR TRANSFERS
                       LEXFR:
134507 / 550645,,000017          HRRZ  AC1, CURPP(DAT)        ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
134510 / 332015,,000050         SKIPE       PPNQT(AC1)        ;; IS THERE ANYTHING NOT COUNTED IN THE QUEUE
134511 / 254000,,134554          JRST      LEXFR2             ;
134512 / 336015,,000047         SKIPN       PPENQ(AC1)        ;; IF ANYONE THERE, ABORT THE TRANSFER
134513 / 332005,,000124         SKIPE       LEINV(DAT)        ;; IS THE BUFFER VALID?
134514 / 254000,,134554          JRST      134554             ;; NO, SET 'MISSED IT' FLAG AND QUIT
134515 / 574641,,000001          HLRE  AC1, QLINE(TAC)        ;; PICK UP LINE NUMBER
134516 / 323640,,134555        JUMPLE  AC1,134555             ;; IF STARTING LINE IS ABOVE SCREEN, FORGET IT
134517 / 275640,,000001          SUBI  AC1,000001             ;; OTHERWISE WE WILL SHOW AS MUCH AS WE CAN
134520 / 221640,,000014         IMULI  AC1,000014             ;; CONVERT TO DD FLAVOR LINE ADDRESS
134521 / 332001,,000002         SKIPE      QFIELD(TAC)        ;; WHAT FIELD DOES THIS TRANSFER WANT TO GO TO?
134522 / 435640,,000001           ORI  AC1,000001             ;; ODD FIELD, MAKE LINE ADDRESS ODD
152375 / 000000,,014155                                       ;
152375 / 140400,,014155 POINT 4,00014155,23                   ;
134523 / 137640,,152375           DPB  AC1,152375             ;
134524 / 242640,,777774           LSH  AC1,777774             ;
152670 / 000000,,014155                                       ;
152670 / 240500,,014155 POINT 5,00014155,15                   ;
134525 / 137640,,152670           DPB  AC1,152670             ;
134526 / 200645,,000107          MOVE  AC1, FCPOS(DAT)        ;; PICK UP NUMBER OF CHARACTERS IN BUFFER
134527 / 200705,,000015          MOVE  AC2,PRGNUM(DAT)        ;; GET DPY NUMBER
134530 / 331016,,012607         SKIPL       LETAB(AC2)        ;; IS THE LINE EDITOR INITIALIZED?
134531 / 400640,,000000          SETZ  AC1,                   ;; NO, NO CHARACTERS IN IT
134532 / 326640,,134570         JUMPN  AC1,134570             ;; IF SOME CHARACTERS THERE, WE ARE SET.
134533 / 200640,,152534          MOVE  AC1,152534             ;
134534 / 202640,,014156         MOVEM  AC1,014156             ;; IF NONE, CLEAR OUT THE LINE WITH A SPACE AND A CRLF
                       LEXFR4:
134535 / 200645,,000017          MOVE  AC1, CURPP(DAT)        ;; PICK UP ADDRESS OF PAGE PRINTER CONTROL BLOCK
134536 / 200715,,000004          MOVE  AC2,  DDCW(AC1)        ;; GET FUNCTION SELECT WORD
134537 / 202700,,014154         MOVEM  AC2,014154             ;; USE IT FOR US
134540 / 201700,,000002         MOVEI  AC2,000002             ;;COLUMN OFFSET
134541 / 335005,,000007        SKIPGE       LEPOS(DAT)        ;
134542 / 254000,,134545          JRST      134545             ;;THAT'S THE POS IF LEYPOS IN EFFECT
134543 / 270715,,000013           ADD  AC2,DPHPOS(AC1)        ;
134544 / 270715,,000052           ADD  AC2,LNLNGT(AC1)        ;;ELSE FOLLOW PP
153133 / 000000,,014155                                       ;
153133 / 341000,,014155 POINT 8,00014155,7                    ;
134545 / 137700,,153133           DPB  AC2,153133             ;
134546 / 751200,,000563          CONO  DDD,000563             ;; START UP THE BEAST
151736 / 000000,,014154                                       ;
134547 / 751140,,151736         DATAO  DDD,151736             ;; AND AWAY WE GO . . .
134550 / 260140,,134712         PUSHJ    P, ISYNC             ;
134551 / 254000,,134156          JRST      RESCAN             ;
134552 / 254000,,134156          JRST      RESCAN             ;
134553 / 254000,,134555          JRST      134555             ;; WIN, DEQUEUE US AND LEAVE
                       ; WE GET HERE WHEN THE TRANSFER IS DONE OR ABORTED.
                       LEXFR2:
134554 / 476005,,000136         SETOM      LEMISS(DAT)        ;; NOTE THAT WE MISSED THIS TRANSFER DUE TO BUFFER INVALID
                       LEXFR1:
134555 / 260140,,134216         PUSHJ    P,134216             ;; REMOVE US FROM THE QUEUE
134556 / 550705,,000017          HRRZ  AC2, CURPP(DAT)        ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
134557 / 550756,,000034          HRRZ  AC3,   LLW(AC2)        ;; PICK UP LAST LINE TRANSFERRED
134560 / 312756,,000033          CAME  AC3,  VPOS(AC2)        ;; IS THE PAGE PRINTER UP TO DATE?
134561 / 332016,,000047         SKIPE       PPENQ(AC2)        ;; YES, IS IT BUSY NOW?
134562 / 254000,,134156          JRST      134156             ;; UP TO DATE OR BUSY
134563 / 505700,,132776          HRLI  AC2,132776             ;; NOT UP TO DATE AND NOT BUSY, REFRESH ITS LINE
134564 / 700600,,000400          CONO   PI,000400             ;; PLANT A CLOCK REQUEST
134565 / 136700,,013624          IDPB  AC2,  CLKQ             ;
134566 / 700600,,000200          CONO   PI,  PION             ;
134567 / 254000,,134156          JRST      RESCAN             ;
                       LEXFR3:
134570 / 201645,,000045         MOVEI  AC1, LEBUF(DAT)        ;; GET THE ADDRESS OF THE LINE EDITOR TEXT
134571 / 505640,,000020          HRLI  AC1,000020             ;; MAKE A JUMP TO IT
134572 / 206640,,014156         MOVSM  AC1,014156             ;; AND PUT IT IN THE STARTUP CODE
134573 / 254000,,134535          JRST      LEXFR4             ;
                       ; WHOLE SCREEN ERASURE AND AVAILABLE MESSAGE
                       WSE:
134574 / 200645,,000017          MOVE  AC1, CURPP(DAT)        ;; PICK UP ADDRESS OF PAGE PRINTER CONTROL BLOCK
134575 / 200715,,000004          MOVE  AC2,  DDCW(AC1)        ;; GET FUNCTION SELECT WORD
134576 / 201740,,000013         MOVEI  AC3,000013             ;; MAKE IT INTO AN ERASE REQUEST
134577 / 202700,,014267         MOVEM  AC2,014267             ;; PUT DOWN NORMAL COPY FIRST
134600 / 603700,,010000          TLNE  AC2,      (1B5)        ;; WHAT FLAVOR?
134601 / 435740,,000004           ORI  AC3,     4             ;
153127 / 000000,,000016                                       ;
153127 / 341000,,000016 POINT 8,00000016,7                    ;
134602 / 137740,,153127           DPB  AC3,153127             ;
134603 / 202700,,014266         MOVEM  AC2, WSERC             ;
134604 / 751200,,000563          CONO  DDD, USUAL             ;
151741 / 000000,,014266                                       ;
134605 / 751140,,151741         DATAO  DDD,151741             ;
134606 / 254000,,134417          JRST      134417             ;; GO WAIT FOR TRANSFER AND LEAVE
                       ; HERE IS THE WHO LINE ROUTINE.
                       WHOWRT:
134607 / 200641,,000003          MOVE  AC1, QHPOS(TAC)        ;; PICK UP SAVED DPY NUMBER
134610 / 302640,,000200          CAIE  AC1,000200             ;;AVAILABLE CHANNEL?
134611 / 254000,,134615          JRST      134615             ;;NO
134612 / 201240,,014320         MOVEI  DAT,014320             ;;GET PTR TO DD PROG
134613 / 200640,,014406          MOVE  AC1,014406             ;;GET DD CW TO RANDOM POSITION ON SCREEN
134614 / 254000,,134620          JRST      WHOWR3             ;
                       WHOWR2:
134615 / 336015,,035300         SKIPN      FRETAB(AC1)        ;; IS OUR FREE STORAGE STILL HERE?
134616 / 254000,,134637          JRST      134637             ;; NO, EXIT NOW
152132 / 000000,,000002                                       ;
152132 / 000000,,000000                                       ;
152132 / 000000,,000000                                       ;
152132 / 000000,,000003                                       ;
152132 / 000000,,000004                                       ;
152132 / 000000,,000005                                       ;
152132 / 004000,,003454                                       ;
134617 / 200640,,152132          MOVE  AC1,152132             ;
                       WHOWR3:
134620 / 332001,,000002         SKIPE      QFIELD(TAC)        ;
134621 / 435640,,010000           ORI  AC1,  1B23             ;
134622 / 202645,,000001         MOVEM  AC1,     1(DAT)        ;; PUT IT IN THE DD PROG
134623 / 201645,,000003         MOVEI  AC1,     3(DAT)        ;; PUT RETURN ADDRESS INTO SYSTEM WHO LINE DPY CODE
134624 / 506640,,014524          HRLM  AC1,DDDRET             ;
134625 / 751200,,000563          CONO  DDD, USUAL             ;
134626 / 751140,,000005         DATAO  DDD,   DAT             ;
134627 / 260140,,134712         PUSHJ    P, ISYNC             ;
134630 / 255000,,000000          JFCL                         ;
134631 / 255000,,000000          JFCL                         ;
134632 / 200641,,000003          MOVE  AC1, QHPOS(TAC)        ;; GET DPY NBR/AVL CODE BACK
134633 / 302640,,000200          CAIE  AC1,000200             ;; ARE WE DOING THE AVL CHN?
134634 / 254000,,134637          JRST      134637             ;; NO
134635 / 515700,,020000         HRLZI  AC2,020000             ;; YES, TURN OFF ERASE BIT IN CW
134636 / 412705,,000000        ANDCAM  AC2,      (DAT)        ;
                       WHOWR1:
134637 / 260140,,134216         PUSHJ    P,   DEQ             ;
134640 / 350000,,035275           AOS      035275             ;;COUNT ANOTHER FIELD DONE.
134641 / 254000,,134156          JRST      RESCAN             ;
                       ; USER DATA DISC PROGRAM . . .
                       POG:
134642 / 554641,,000003          HLRZ  AC1, QHPOS(TAC)        ;;ADR OF CELL TO SET FIELD
134643 / 322640,,134647         JUMPE  AC1,134647             ;;NONE
134644 / 505640,,140100          HRLI  AC1,140100             ;;MAKE BYTE PNTR TO FIELD BIT
134645 / 200701,,000002          MOVE  AC2,QFIELD(TAC)        ;
134646 / 137700,,000015           DPB  AC2,000015             ;;STORE FIELD
                       POG2:
134647 / 751200,,001563          CONO  DDD,001563             ;
134650 / 201645,,000026         MOVEI  AC1, PRGCW(DAT)        ;; PICK UP ADDRESS OF START OF PROGRAM
134651 / 751140,,000015         DATAO  DDD,000015             ;; SEND IT OUT
                       ;DONT	MOVE AC1,TIME
                       ;SAVE	SKIPN DPGTIM(DAT)
                       ;TIME	MOVEM AC1,DPGTIM(DAT)	; NOTE TIME PROGRAM WENT OUT
134652 / 260140,,134712         PUSHJ    P, ISYNC             ;
134653 / 255000,,000000          JFCL                         ;
134654 / 255000,,000000          JFCL                         ;
134655 / 550641,,000003          HRRZ  AC1, QHPOS(TAC)        ;;ADR OF LOSER'S COUNT CELL
134656 / 322640,,134660         JUMPE  AC1,134660             ;;NONE
134657 / 370015,,000000           SOS            (AC1)        ;
134660 / 200641,,000005          MOVE  AC1, QWAKE(TAC)        ;; PICK UP JOB NUMBER
134661 / 370015,,033165           SOS      JBTGLU(AC1)        ;; RELEASE US FROM CORE
134662 / 261140,,000004          PUSH    P,     J             ;
134663 / 200200,,000015          MOVE    J,   AC1             ;
134664 / 260140,,072444         PUSHJ    P,GLUSTT             ;
134665 / 262140,,000004           POP    P,     J             ;
134666 / 336005,,000025         SKIPN      DPRLSF(DAT)        ;; ARE WE A DETACHED JOB?
134667 / 254000,,134675          JRST      134675             ;; NO, LEAVE
134670 / 551645,,000000         HRRZI  AC1,      (DAT)        ;; PICK UP ADDRESS OF DPY PROGRAM HEADER TO BE RETURNED
134671 / 505640,,134677          HRLI  AC1,134677             ;; RETURN IT AT FREE STORAGE
134672 / 700600,,000400          CONO   PI, PIOFF             ;
134673 / 136640,,013624          IDPB  AC1,  CLKQ             ;
134674 / 700600,,000200          CONO   PI,  PION             ;
                       POG1:
134675 / 260140,,134216         PUSHJ    P,134216             ;; REMOVE THE TASK
134676 / 254000,,134156          JRST      RESCAN             ;
                       POGCLK:
134677 / 550640,,000005          HRRZ  AC1,000005             ;; RETURN PROGRAM HEADER ITSELF
134700 / 254000,,074163          JRST      FSGIVE             ;
                       ; ROUTINE TO PRINT 'PAGE PRINTER HOLDING' MESSAGE
                       PPSTAR:
134701 / 200645,,000004          MOVE  AC1,  DDCW(DAT)        ;
134702 / 202640,,014410         MOVEM  AC1,DDSTRS             ;
134703 / 400640,,000000          SETZ  AC1,                   ;
134704 / 332001,,000002         SKIPE      QFIELD(TAC)        ;
134705 / 201640,,000001         MOVEI  AC1,000001             ;; SET LINE ADDRESS ODD
152372 / 000000,,014411                                       ;
152372 / 140100,,014411 POINT 1,00014411,23                   ;
134706 / 137640,,152372           DPB  AC1,152372             ;
134707 / 751200,,000563          CONO  DDD, USUAL             ;
151742 / 000000,,014410                                       ;
134710 / 751140,,151742         DATAO  DDD,151742             ;
134711 / 254000,,134417          JRST       CWAIT             ;
                       ; ALL TRANSFERS COME BACK TO HERE WHEN THEY ARE DONE OR TIMED OUT
                       ISYNC:
134712 / 262140,,014131           POP    P,014131             ;; SAVE RETURN ADDRESS
134713 / 201740,,000006         MOVEI  AC3,000006             ;; TIMEOUT IF NO INTERRUPT IN 8 TIX
134714 / 202740,,014130         MOVEM  AC3,014130             ;; STORE IN THE COUNT WORD
134715 / 202240,,014143         MOVEM  DAT,014143             ;; SAVE CONTROL BLOCK ADDRESS
134716 / 202040,,014144         MOVEM  TAC,014144             ;; SAVE TASK BLOCK ADDRESS TOO.
134717 / 200240,,014141          MOVE  DAT,014141             ;; RESTORE ACCUMULATORS
134720 / 200640,,014135          MOVE  AC1,DDSAC1             ;
134721 / 200700,,014136          MOVE  AC2,DDSAC2             ;
134722 / 200740,,014137          MOVE  AC3,DDSAC3             ;
134723 / 200040,,014140          MOVE  TAC,DDSTAC             ;
134724 / 250153,,023516          EXCH    P,APRPDL(PID)        ;; RESTORE THE PDL
134725 / 264000,,014133           JSR      014133             ;; AND RETURN TO WHEREVER
                       DDINT:
134726 / 336000,,014262         SKIPN       DDRUN             ;
134727 / 254000,,135000          JRST       DDILL             ;
134730 / 202740,,014137         MOVEM  AC3,014137             ;; SAVE ONE ACCUMULATOR
134731 / 201740,,134776         MOVEI  AC3,134776             ;; MAKE US RETURN THROUGH CH3 NEXT TIME OUT
134732 / 202740,,014132         MOVEM  AC3,014132             ;; SO WE CAN RE-ENABLE THE CHANNEL
134733 / 200740,,014131          MOVE  AC3,014131             ;; PICK UP RETURN ADDRESS
134734 / 250540,,023512          EXCH  PID,023512             ;; PICK UP PROCESSOR IDENTIFICATION
134735 / 751300,,002000         CONSZ  510, DDNXM             ;
134736 / 254000,,134743          JRST        DDNX             ;
134737 / 751340,,000200         CONSO  510,000200             ;; DID DD MISS A WORD FROM MEMORY?
134740 / 254000,,134754          JRST      134754             ;; NO, GO AHEAD
                       DDINT2:
134741 / 751200,,000010          CONO  510,000010             ;; YES, STOP IT AMID-TRANSFER
134742 / 254000,,134755          JRST       DDCMR             ;
                       ; DATA DISC NON-EX MEM TYPEOUT, ACCUMULATOR SAVER, AND CLOCK TIMEOUT ROUTINES
                       DDNX:
134743 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
134744 / 260140,,000316         PUSHJ    P,PUSHIT             ;
134745 / 260140,,044320         PUSHJ    P,044320             ;
134746 / 260140,,044120         PUSHJ    P,DISERR             ;
134747 / 000000,,153636                                       ;
134750 / 777777,,777777                                       ;
134751 / 260140,,000341         PUSHJ    P, POPIT             ;
134752 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
134753 / 254000,,134741          JRST      DDINT2             ;
                       DDINT1:
134754 / 271740,,000002          ADDI  AC3,000002             ;; ALL OK, BUMP RETURN ADDRESS TO SUCCESS RETURN
                       DDCMR:
134755 / 202240,,014141         MOVEM  DAT,014141             ;; SAVE THE REST OF THE ACCUMULATORS
134756 / 202040,,014140         MOVEM  TAC,DDSTAC             ;
134757 / 202640,,014135         MOVEM  AC1,DDSAC1             ;
134760 / 202700,,014136         MOVEM  AC2,DDSAC2             ;
134761 / 250153,,023516          EXCH    P,APRPDL(PID)        ;
134762 / 200240,,014143          MOVE  DAT,014143             ;; PICK UP ADDRESS OF CONTROL BLOCK
134763 / 200040,,014144          MOVE  TAC,014144             ;; PICK UP ADDRESS OF TASK BLOCK
134764 / 525700,,377777         HRLOI  AC2,377777             ;; SET COUNT TO MAXIMUM WHEN NO TRANSFER IN PROGRESS
134765 / 202700,,014130         MOVEM  AC2, DDCNT             ;
134766 / 254017,,000000          JRST            (AC3)        ;; RETURN TO LOSER
                       DDCLK:
134767 / 202740,,014137         MOVEM  AC3,014137             ;; STORE THIS ACCUMULATOR
134770 / 201740,,046320         MOVEI  AC3,046320             ;; MAKE US RETURN TO APRSER
134771 / 202740,,014132         MOVEM  AC3,014132             ;; NEXT TIME OUT
134772 / 200740,,014131          MOVE  AC3,014131             ;; PICK UP RETURN ADDRESS
134773 / 271740,,000001          ADDI  AC3,000001             ;; BUMP BY ONE TO NOTE THAT CLOCK TIMEOUT HAS HAPPENED
134774 / 751200,,000010          CONO  510,000010             ;; TIMED OUT, MUST BE HUNG. CLEAR IT OUT.
134775 / 254000,,134755          JRST       DDCMR             ;
                       DDIXIT:
134776 / 250540,,023512          EXCH  PID,023512             ;; RESTORE PID
134777 / 254520,,000616           JEN      @000616            ;; DISMISS CHANNES
                       ; WE GET HERE IF WE GET AN INTERRUPT FROM THE DATA DISK AND
                       ; OUR MAGIC FLAG INDICATES THAT NO TRANSFER WAS IN PROGRESS.
                       DDILL:
135000 / 250140,,023516          EXCH    P,023516             ;; GET A PUSHDOWN LIST
135001 / 260140,,000316         PUSHJ    P,PUSHIT             ;
135002 / 260140,,044066         PUSHJ    P,044066             ;; GIVE HARDWARE PEOPLE NASTY MESSAGE!
135013 / 751200,,000010          CONO  510,000010             ;; CLEAR ITS MIND
135014 / 260140,,000341         PUSHJ    P, POPIT             ;
135015 / 250140,,023516          EXCH    P,023516             ;; RESTORE P
135016 / 254520,,000616           JEN      @   CH3            ;
                       ;DEFINITIONS FOR DATA DISC ALLOCATION
135017 / 000600,,014525                                       ;
135017 / 060600,,014525                                       ;
135017 / 221000,,014525                                       ;
135017 / 000600,,021527                                       ;
                       ;SPECIAL USER CODES
                       ;DEFINITIONS FOR VIDEO SWITCH ROUTINES
                       ;INITIALIZATION FOR DATA DISC ALLOCATION AND VIDEO SWITCH
                       DDINI:
135017 / 476000,,014525         SETOM       DDTAB             ;
152166 / 014525,,014526                                       ;
135020 / 200040,,152166          MOVE  TAC,152166             ;
135021 / 251040,,014565           BLT  TAC,014565             ;;CLEAR TABLE FOR DUPLICATION TEST
151367 / 440600,,135107                                       ;
135022 / 200040,,151367          MOVE  TAC,151367             ;
135023 / 201700,,000040         MOVEI  AC2,DDELNK             ;
                       DDINI1:
135024 / 134640,,000001          ILDB  AC1,   TAC             ;
135025 / 331015,,014525         SKIPL       DDTAB(AC1)        ;
135026 / 254200,,135026          JRST    4,135026             ;;OOPS - WE'VE BEEN HERE BEFORE
135027 / 202715,,014525         MOVEM  AC2, DDTAB(AC1)        ;;INITIALIZE DDTAB WITH ALLOC LIST & FREE LIST
152274 / 060616,,014525                                       ;
135030 / 137640,,152274           DPB  AC1,152274             ;
135031 / 201715,,000000         MOVEI  AC2,      (AC1)        ;
135032 / 302640,,000040          CAIE  AC1,DDELNK             ;
135033 / 254000,,135024          JRST      DDINI1             ;
135034 / 201200,,000077         MOVEI    J,000077             ;
135035 / 201040,,000000         MOVEI  TAC,                   ;
152056 / 000604,,021527                                       ;
135036 / 137040,,152056           DPB  TAC,152056             ;;INIT JOB CHNL LISTS
135037 / 367200,,135036          SOJG    J,135036             ;
135040 / 201040,,000040         MOVEI  TAC,    40             ;
135041 / 202040,,014566         MOVEM  TAC,014566             ;;INIT FREE CHNL COUNT
135042 / 205040,,000200         MOVSI  TAC,   200             ;
135043 / 540040,,014567           HRR  TAC,AVLCHN             ;
135044 / 260140,,135230         PUSHJ    P,135230             ;;GET CHN FOR AVAIL MSG
135045 / 254200,,135045          JRST    4,135045             ;
135046 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
135047 / 260140,,135371         PUSHJ    P, VDBIT             ;
135050 / 202740,,014570         MOVEM  AC3,AVLBIT             ;
135051 / 205640,,777706         MOVSI  AC1,777706             ;
                       DDINI2:
135052 / 202755,,014571         MOVEM  AC3, VDMAP(AC1)        ;;MAP EVERYONE TO MSG
135053 / 734215,,000006          CONO  VDS,DPYNUM(AC1)        ;
135054 / 734140,,000017         DATAO  VDS,   AC3             ;
135055 / 253640,,135052         AOBJN  AC1,DDINI2             ;
152703 / 000000,,014320                                       ;
152703 / 241000,,014320 POINT 8,00014320,15                   ;
135056 / 137040,,152703           DPB  TAC,152703             ;
135057 / 260140,,136272         PUSHJ    P,136272             ;;INITIALIZE SYSTEM WHOLINE
135060 / 476000,,014407         SETOM      014407             ;;THIS MAKES WHOSER PUT THE MSG OUT
135061 / 263140,,000000          POPJ    P,                   ;
                       DDAVST:
135062 / 201700,,000001         MOVEI  AC2,     1             ;
135063 / 336000,,014566         SKIPN      014566             ;;ARE THERE ANY CHANNELS FREE?
152163 / 014354,,000020                                       ;
135064 / 200700,,152163          MOVE  AC2,152163             ;;NO MAKE UNAVAIL MESSAGE HAPPEN
135065 / 336000,,000567         SKIPN      000567             ;
135066 / 332000,,017714         SKIPE      TTYLOK             ;
152164 / 014371,,000020           XWD DDDMES,DISJMP           ;
135067 / 200700,,152164          MOVE  AC2,152164             ;
135070 / 202700,,014324         MOVEM  AC2,DDWMES             ;
135071 / 744440,,000015         DATAI  DSK,000015             ;;CHOOSE A (RANDOM) NUMBER, ANY NUMBER
135072 / 270640,,024633           ADD  AC1,  TIME             ;
135073 / 231640,,000300         IDIVI  AC1,   300             ;
135074 / 271700,,000010          ADDI  AC2,    10             ;
135075 / 201656,,000000         MOVEI  AC1,      (AC2)        ;
152413 / 150300,,014406                                       ;
135076 / 137700,,152413           DPB  AC2,152413             ;;STORE LOW ORDER PART
135077 / 242700,,777775           LSH  AC2,777775             ;;REMOVE LOW ORDER PART
152673 / 240500,,014406                                       ;
135100 / 137700,,152673           DPB  AC2,152673             ;;STORE HI PART
135101 / 231640,,000014         IDIVI  AC1,000014             ;;CONVERT RASTER LINE TO TEXT LINE
135102 / 505655,,000003          HRLI  AC1,     3(AC1)        ;;AVL MSG USES 4 DIFFERENT TEXT LINES
135103 / 206640,,014405         MOVSM  AC1, AVLLN             ;
135104 / 515700,,020000         HRLZI  AC2, 20000             ;
135105 / 436700,,014320          IORM  AC2,014320             ;;TURN ON ERASE BIT TO FORCE ERASE BEFORE FIRST FIELD
135106 / 263140,,000000          POPJ    P,                   ;
                       DDLIST:
                       VDSYNC:
135115 / 000000,,000000                                       ;
135116 / 000000,,000011                                       ;
135117 / 000000,,000012                                       ;
135120 / 000000,,000013                                       ;
135121 / 000000,,000014                                       ;
135122 / 000000,,000015                                       ;
135123 / 000000,,000006                                       ;
135124 / 000000,,000007                                       ;
                       ;ALL-PURPOSE DD CHANNEL DIDDLING UUO:
                       ;AC31-35 = CHAN, AC30 => NO SPECIFIC CHAN (CONSOLE CHAN FOR STATUS)
                       ;AC28-29: 0-RELEASE, 1-GET, 2-GET STATUS, 3-SET STATUS
                       ;AC29=1 => FAILURE POSSIBLE, SKIP ON SUCCESS
                       ;AC0 PRIVATE CHAN, SET ON GET OR SET STATUS
                       ;REST OF LH READ-ONLY STATUS BITS, RETURNED ON SINGLE-CHAN OPS OR GETTING CHAN:
                       ;AC10-17 USE: 0=FREE, 1-77=JOB N, 100-177=TTY N-100+DDL0, 200-377 SPECIAL
                       DDCHAN:
152662 / 222000,,000001                                       ;
135125 / 137200,,152662           DPB    J,152662             ;
152263 / 050300,,000001                                       ;
135126 / 135640,,152263           LDB  AC1,152263             ;
135127 / 421040,,777740        ANDCMI  TAC,777740             ;
135130 / 260175,,135134         PUSHJ    P,@DDCDSP(AC1)       ;
135131 / 254000,,060225          JRST      STOTAC             ;
135132 / 350003,,000000           AOS            (P)          ;
135133 / 254000,,060225          JRST      STOTAC             ;
                       DDCDSP:
135134 / 000000,,135160                                       ;
135135 / 000000,,135144                                       ;
135136 / 000000,,135230                                       ;
135137 / 000000,,135252                                       ;
135140 / 000000,,135336                                       ;
135141 / 000000,,135334                                       ;
135142 / 000000,,135351                                       ;
135143 / 000000,,135347                                       ;
                       ;RELEASE ALL CHANS OWNED BY JOB (ALSO CALLED ON RESET)
                       DDAREL:
135144 / 261140,,000001          PUSH    P,   TAC             ;
152056 / 000604,,021527                                       ;
135145 / 135040,,152056           LDB  TAC,152056             ;
135146 / 361040,,037376          SOJL  TAC, TPOPJ             ;
135147 / 500043,,000000           HLL  TAC,      (P)          ;
135150 / 201640,,000000         MOVEI  AC1,                   ;
152056 / 000604,,021527                                       ;
135151 / 137640,,152056           DPB  AC1,152056             ;;CLEAR THE LIST HERE IN ONE SWELL FOOP
                       DDARL1:
152053 / 000601,,014525                                       ;
135152 / 135740,,152053           LDB  AC3,152053             ;
135153 / 260140,,135173         PUSHJ    P,135173             ;;SO WE DON'T HAVE TO DO IT HERE
135154 / 541057,,000000          HRRI  TAC,      (AC3)        ;
135155 / 302740,,000040          CAIE  AC3,DDELNK             ;
135156 / 254000,,135152          JRST      DDARL1             ;
135157 / 254000,,037376          JRST       TPOPJ             ;
                       ;RELEASE CHANNEL C(TAC)
                       DDCREL:
152053 / 000601,,014525                                       ;
135160 / 135700,,152053           LDB  AC2,152053             ;;HERE CHAN BELONGS TO JOB
152056 / 000604,,021527                                       ;
135161 / 135640,,152056           LDB  AC1,152056             ;;& MUST BE DELINKED FROM JOB'S LIST
135162 / 306641,,000001          CAIN  AC1,     1(TAC)        ;
153626 / 301700,,000041          CAIL  AC2,    41             ;
153627 / 201700,,000000         MOVEI  AC2,                   ;
152056 / 000604,,021527                                       ;
153630 / 137700,,152056           DPB  AC2,152056             ;
153631 / 254000,,135173          JRST       DDREL             ;
135163 / 344700,,153626          AOJA  AC2,153626             ;
135164 / 361640,,135173          SOJL  AC1, DDREL             ;
                       DDCRL1:
152061 / 000615,,014525                                       ;
135165 / 135740,,152061           LDB  AC3,152061             ;
135166 / 306741,,000000          CAIN  AC3,      (TAC)        ;
152061 / 000615,,014525                                       ;
153276 / 137700,,152061           DPB  AC2,152061             ;
153277 / 254000,,135173          JRST       DDREL             ;
135167 / 254000,,153276          JRST      153276             ;
135170 / 201657,,000000         MOVEI  AC1,      (AC3)        ;
135171 / 302640,,000040          CAIE  AC1,DDELNK             ;
135172 / 254000,,135165          JRST      DDCRL1             ;
                       DDREL:
152653 / 221001,,014525                                       ;
135173 / 135640,,152653           LDB  AC1,152653             ;;ENTER TO JUST RELEASE CHANNEL
135174 / 651640,,000001           TSC  AC1,   TAC             ;
135175 / 602640,,000377          TRNE  AC1,   377             ;
135176 / 254000,,135216          JRST      135216             ;;DOESN'T BELONG TO HIM
135177 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
135200 / 350700,,014566           AOS  AC2,DDFCNT             ;
135201 / 306700,,000001          CAIN  AC2,     1             ;
135202 / 476000,,014407         SETOM      014407             ;;CHANGE TO AVAILABLE MESSAGE
135203 / 205700,,000377         MOVSI  AC2,   377             ;
135204 / 700600,,001004          CONO   PI,SCNOFF             ;
152273 / 060615,,014525                                       ;
135205 / 135640,,152273           LDB  AC1,152273             ;
135206 / 612715,,014525          TDNE  AC2, DDTAB(AC1)        ;;SCAN UP ALLOC LIST (ORDERED)
135207 / 254000,,135205          JRST      135205             ;
152061 / 000615,,014525                                       ;
135210 / 135700,,152061           LDB  AC2,152061             ;;SO WE CAN PUT IN RIGHT PLACE IN FREE LIST
152061 / 000615,,014525                                       ;
135211 / 137040,,152061           DPB  TAC,152061             ;
152053 / 000601,,014525                                       ;
135212 / 137700,,152053           DPB  AC2,152053             ;
135213 / 553001,,014525         HRRZS       DDTAB(TAC)        ;
                       SCNONJ:
135214 / 700600,,002004          CONO   PI, SCNON             ;
135215 / 263140,,000000          POPJ    P,                   ;
                       DDREL2:
135216 / 607040,,000300          TLNN  TAC,   300             ;
135217 / 263140,,000000          POPJ    P,                   ;;JUST SOME LOSER
135220 / 260140,,000316         PUSHJ    P,PUSHIT             ;
135221 / 260140,,044120         PUSHJ    P,DISERR             ;
135222 / 000000,,153777                                       ;
135223 / 000103,,777761        OCTQQQ      777761(P)          ;
135224 / 000000,,152275                                       ;
135225 / 777777,,777777                                       ;
135226 / 260140,,000341         PUSHJ    P, POPIT             ;
135227 / 263140,,000000          POPJ    P,                   ;
                       ;GET CHAN SPECIFIED BY TAC(31-35) IF FREE
                       DDCGET:
135230 / 510740,,000001          HLLZ  AC3,   TAC             ;
135231 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
135232 / 205700,,000377         MOVSI  AC2,   377             ;
135233 / 700600,,001004          CONO   PI,SCNOFF             ;
135234 / 616715,,014525          TDNN  AC2, DDTAB(AC1)        ;
135235 / 254000,,135241          JRST       DDCG1             ;
135236 / 700600,,002004          CONO   PI, SCNON             ;
135237 / 500055,,014525           HLL  TAC, DDTAB(AC1)        ;;TELL HIM HOW HE LOST
135240 / 263140,,000000          POPJ    P,                   ;
                       DDCG1:
152273 / 060615,,014525                                       ;
135241 / 135640,,152273           LDB  AC1,152273             ;;IT'S FREE - SCAN FOR GUY POINTING TO IT
135242 / 612715,,014525          TDNE  AC2, DDTAB(AC1)        ;
135243 / 254000,,135241          JRST       DDCG1             ;
135244 / 436741,,014525          IORM  AC3, DDTAB(TAC)        ;
152053 / 000601,,014525                                       ;
135245 / 135740,,152053           LDB  AC3,152053             ;;SO WE CAN LINK IT OUT
152061 / 000615,,014525                                       ;
135246 / 137740,,152061           DPB  AC3,152061             ;
135247 / 700600,,002004          CONO   PI, SCNON             ;
135250 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
135251 / 254000,,135264          JRST      DDGET2             ;
                       ;GET ANY FREE CHAN
                       DDAGET:
135252 / 510740,,000001          HLLZ  AC3,   TAC             ;
135253 / 700600,,001004          CONO   PI,SCNOFF             ;
135254 / 200640,,014565          MOVE  AC1,DDFLST             ;
135255 / 306640,,000040          CAIN  AC1,DDELNK             ;
135256 / 254000,,135214          JRST      SCNONJ             ;
152061 / 000615,,014525                                       ;
135257 / 135700,,152061           LDB  AC2,152061             ;
135260 / 202700,,014565         MOVEM  AC2,DDFLST             ;
135261 / 436755,,014525          IORM  AC3, DDTAB(AC1)        ;
135262 / 700600,,002004          CONO   PI, SCNON             ;
135263 / 541055,,000000          HRRI  TAC,      (AC1)        ;
                       ;COMMON CODE FOR BOTH FLAVORS OF GET. PUTS IN LIST IF GETTING FOR JOB.
                       ;SETS AND ENFORCES PRIVACY BIT.
                       DDGET2:
135264 / 377000,,014566          SOSG      DDFCNT             ;
135265 / 476000,,014407         SETOM      014407             ;;SET NO CHANNELS LEFT MESSAGE
135266 / 607040,,000300          TLNN  TAC,   300             ;
152056 / 000604,,021527                                       ;
153572 / 135700,,152056           LDB  AC2,152056             ;;JOB - ADD TO ITS LIST
152056 / 000604,,021527                                       ;
153573 / 137640,,152056           DPB  AC1,152056             ;
153173 / 364640,,135271          SOJA  AC1,DDGET3             ;
153574 / 365700,,153173         SOJGE  AC2,153173             ;
153575 / 364640,,153576          SOJA  AC1,153576             ;
135267 / 344640,,153572          AOJA  AC1,153572             ;
135270 / 201700,,000040         MOVEI  AC2,DDELNK             ;
                       DDGET3:
152061 / 000615,,014525                                       ;
135271 / 137700,,152061           DPB  AC2,152061             ;
135272 / 350003,,000000           AOS            (P)          ;
135273 / 325040,,037403        JUMPGE  TAC,037403             ;;THAT'S ALL IF HE'S NOT PARANOID
135274 / 201641,,000000         MOVEI  AC1,      (TAC)        ;;ELSE FALL THRU
                       ;ROUTINE TO THROW ALL SPIES OFF PRIVATE CHANNEL.
                       DDFLSH:
135275 / 260140,,135371         PUSHJ    P, VDBIT             ;
135276 / 261140,,000001          PUSH    P,   TAC             ;
135277 / 261140,,000002          PUSH    P,  TAC1             ;
152656 / 221015,,014525                                       ;
135300 / 135100,,152656           LDB TAC1,152656             ;
135301 / 205040,,777714         MOVSI  TAC,777714             ;;INCLUDE "SHADOW" CHANNELS HERE
                       DDFLS0:
135302 / 616741,,014571          TDNN  AC3, VDMAP(TAC)        ;;HERE WE SCAN THE PERM MAPS
                       DDFLS3:
135303 / 253040,,135302         AOBJN  TAC,DDFLS0             ;
135304 / 325040,,135313        JUMPGE  TAC,DDFLS1             ;
135305 / 306101,,000100          CAIN TAC1,   100(TAC)        ;
135306 / 254000,,135303          JRST      DDFLS3             ;
135307 / 260140,,135377         PUSHJ    P,VDSTR1             ;
135310 / 412756,,000041        ANDCAM  AC3, VDTMP(AC2)        ;
135311 / 260140,,135431         PUSHJ    P,VDOUT1             ;
135312 / 253040,,135302         AOBJN  TAC,DDFLS0             ;
                       DDFLS1:
135313 / 205040,,777706         MOVSI  TAC,777706             ;
                       DDFLS2:
135314 / 332701,,012615         SKIPE  AC2,012615(TAC)        ;;HERE WE SCAN THE TEMP MAPS
135315 / 616756,,000041          TDNN  AC3, VDTMP(AC2)        ;
                       DDFLS4:
135316 / 253040,,135314         AOBJN  TAC,DDFLS2             ;
135317 / 325040,,135325        JUMPGE  TAC,DDFLSX             ;
135320 / 306101,,000100          CAIN TAC1,   100(TAC)        ;
135321 / 254000,,135316          JRST      DDFLS4             ;
135322 / 412756,,000041        ANDCAM  AC3, VDTMP(AC2)        ;
135323 / 260140,,135431         PUSHJ    P,VDOUT1             ;
135324 / 253040,,135314         AOBJN  TAC,DDFLS2             ;
                       DDFLSX:
135325 / 262140,,000002           POP    P,  TAC1             ;
135326 / 254000,,037376          JRST       TPOPJ             ;
                       ;SEE IF THIS GUY CAN HACK THIS DD CHAN (AC1)
                       ;0 SKIPS FREE. 1 SKIP LOSE. 2 SKIPS HE'S GOT IT.
                       DDCHEK:
152656 / 221015,,014525                                       ;
135327 / 135700,,152656           LDB  AC2,152656             ;
135330 / 322700,,037403         JUMPE  AC2, CPOPJ             ;
135331 / 350003,,000000           AOS            (P)          ;
135332 / 570744,,027320          HRRE  AC3,JBTLIN(J)          ;
135333 / 254000,,135615          JRST      VDCCK0             ;
                       ;GET STATUS & # OF CONSOLE CHAN, AC UNCHANGED IF NONE (NOT DD)
                       DDCSGT:
135334 / 260140,,135340         PUSHJ    P,DDCFND             ;
135335 / 263140,,000000          POPJ    P,                   ;
                       ;FALL THRU
                       ;GET STATUS OF CHAN TAC(31-35)
                       DDSGET:
135336 / 500041,,014525           HLL  TAC, DDTAB(TAC)        ;
135337 / 263140,,000000          POPJ    P,                   ;
                       ;FIND CONSOLE CHAN FOR JOB
                       DDCFND:
135340 / 200644,,027320          MOVE  AC1,JBTLIN(J)          ;
135341 / 607640,,020000          TLNN  AC1,DDDLIN             ;
135342 / 263140,,000000          POPJ    P,                   ;
135343 / 321640,,037403         JUMPL  AC1,037403             ;;DETACHED
135344 / 550655,,012567          HRRZ  AC1,012567(AC1)        ;
135345 / 544055,,000015           HLR  TAC,PRGNUM(AC1)        ;;PRETEND HE USED HIS CHAN AS ARG (PRESERVE LH)
135346 / 254000,,037401          JRST      CPOPJ1             ;
                       ;SET STATUS OF CONSOLE CHANNEL
                       DDCSST:
135347 / 260140,,135340         PUSHJ    P,DDCFND             ;
135350 / 263140,,000000          POPJ    P,                   ;
                       ;FALL THRU
                       ;HERE HE CAN SET THE STATUS OF A CHANNEL IF IT'S HIS
                       DDSSET:
135351 / 201641,,000000         MOVEI  AC1,      (TAC)        ;
135352 / 260140,,135327         PUSHJ    P,DDCHEK             ;
135353 / 263140,,000000          POPJ    P,                   ;
135354 / 263140,,000000          POPJ    P,                   ;
135355 / 200715,,014525          MOVE  AC2, DDTAB(AC1)        ;
135356 / 205740,,600000         MOVSI  AC3,DDSMSK             ;
135357 / 700600,,001004          CONO   PI,SCNOFF             ;
135360 / 412755,,014525        ANDCAM  AC3, DDTAB(AC1)        ;
135361 / 404740,,000001           AND  AC3,   TAC             ;
135362 / 437755,,014525          IORB  AC3, DDTAB(AC1)        ;
135363 / 500040,,000017           HLL  TAC,   AC3             ;
135364 / 700600,,002004          CONO   PI, SCNON             ;
135365 / 325040,,037401        JUMPGE  TAC,CPOPJ1             ;
135366 / 321700,,037401         JUMPL  AC2,CPOPJ1             ;
135367 / 350003,,000000           AOS            (P)          ;
135370 / 254000,,135275          JRST      135275             ;;TURNING PRIVATE - FLUSH LOSERS
                       ;MAKES UP BIT (AC3) FROM DD CHAN (AC1)
                       VDBIT:
135371 / 211715,,000000         MOVNI  AC2,      (AC1)        ;
135372 / 205740,,400000         MOVSI  AC3,400000             ;
135373 / 242756,,000000           LSH  AC3,      (AC2)        ;
135374 / 263140,,000000          POPJ    P,                   ;
                       ;THIS ROUTINE UPDATES BOTH PERMANENT & TEMPORARY (IF EXISTENT) MAPS
                       ;WITH INTS OFF TO AVOID INCONSISTENT STATES
                       ;TAC=CONSOLE #, @(P) IS DIDDLE INSTRUCTION
                       VDSTRB:
135375 / 260140,,135371         PUSHJ    P, VDBIT             ;
                       VDSTR:
135376 / 321040,,135406         JUMPL  TAC,VDSTRI             ;
                       VDSTR1:
135377 / 201701,,014530         MOVEI  AC2,014530(TAC)        ;
135400 / 700600,,001004          CONO   PI,SCNOFF             ;
135401 / 256023,,000000           XCT      @      (P)         ;
135402 / 332701,,012615         SKIPE  AC2,012615(TAC)        ;
135403 / 256023,,000000           XCT      @      (P)         ;
135404 / 700600,,002004          CONO   PI, SCNON             ;
135405 / 254000,,037401          JRST      CPOPJ1             ;
                       VDSTRI:
135406 / 603640,,777777          TLNE  AC1,777777             ;
135407 / 510740,,000015          HLLZ  AC3,000015             ;;PICK UP BITS PASSED, IF ANY
135410 / 336701,,012615         SKIPN  AC2,012615(TAC)        ;
135411 / 254000,,037401          JRST      CPOPJ1             ;
135412 / 505700,,132224          HRLI  AC2,VPGACT             ;
135413 / 700600,,000400          CONO   PI, PIOFF             ;
135414 / 136700,,013624          IDPB  AC2,013624             ;;SET TO DO PGACT AT CLK LEVEL
135415 / 700600,,000200          CONO   PI,  PION             ;
135416 / 476016,,000123         SETOM       LEACT(AC2)        ;;SO HEADER STAYS AROUND
135417 / 201716,,777760         MOVEI  AC2,777760(AC2)        ;;MAKE PNTR TO PGACT BITS
135420 / 331023,,000000         SKIPL      @      (P)         ;;SEE IF DIDDLING INSTR IS BOOLEAN
135421 / 540756,,000041           HRR  AC3, VDTMP(AC2)        ;;NOT BOOLEAN, COPY RH SO IT WON'T GET CLOBBERED
135422 / 256023,,000000           XCT      @      (P)         ;
135423 / 254000,,037401          JRST      CPOPJ1             ;
                       ;SET EITHER TEMPORARY OR PERMANENT MAPPING, DETERMINED BY
                       ;SIGN BIT OF DSER (CALLED FROM VDSMAP ROUTINES)
                       VDSTRU:
135424 / 321440,,135376         JUMPL DSER, VDSTR             ;
135425 / 332701,,012615         SKIPE  AC2,012615(TAC)        ;
135426 / 256023,,000000           XCT      @      (P)         ;
135427 / 254000,,037401          JRST      CPOPJ1             ;
                       ;OUTPUTS CURRENT MAPPING (TEMPORARY, IF EXISTENT, ELSE PERMANENT)
                       ;FOR CONSOLE C(TAC)
                       VDOUT:
135430 / 321040,,037403         JUMPL  TAC,037403             ;;NO III'S HERE
                       VDOUT1:
135431 / 336701,,012615         SKIPN  AC2,012615(TAC)        ;
135432 / 201701,,014530         MOVEI  AC2,014530(TAC)        ;
135433 / 700600,,001004          CONO   PI,SCNOFF             ;
135434 / 734201,,000006          CONO  VDS,DPYNUM(TAC)        ;;THIS WRAPS AROUND TO "SHADOW" WITH TAC>DDNUM
135435 / 734156,,000041         DATAO  VDS, VDTMP(AC2)        ;
135436 / 700600,,002004          CONO   PI, SCNON             ;
135437 / 263140,,000000          POPJ    P,                   ;
                       ;ALL-PURPOSE VDS DIDDLING UUO:
                       ;RH(AC)=ADR
                       ;AC11-17 = TTY#, 0 => OWN CONSOLE; AC9=1 => USE "SHADOW" CHAN INDICATED BY AC11-17
                       ;AC0=1 => PERMANENT CHANGE, 0 => TEMP CHANGE (GOES AWAY ON RESET)
                       ;FINAL STATUS (TEMP/PERM PER AC0) STORED IN AC, -1 IF TTY NOT DD.
                       ;AC6-8 = OPCODE:
                       ;	0 - NOP, NEVER SKIPS, USEFUL FOR GETTING STATUS ALONE
                       ;	1 - SET MAP FROM C(ADR), SKIPS IF ENTIRELY SUCCESSFUL (NO PRIVACY PROBLEM)
                       ;	2 - IOR MAP FROM C(ADR), SET ANALOG IF ≠0. SKIPS ON COMPLETE SUCCESS.
                       ;	3 - ANDCAM MAP FROM C(ADR), CLEAR ANALOG IF ≠0. FAILS ONLY ON BAD TTY #.
                       ;	4 - RESET MAP. IN TEMP MODE THIS RESETS TEMP←PERM. IN PERM MODE PERM MAP
                       ;			IS SET TO MAIN CHANNEL ALONE. FAILS ONLY ON BAD TTY #.
                       ;	5-7 ILLEGAL. CURRENTLY NO-OPS.
                       VDSMAP:
152500 / 200241,,000000          MOVE  DAT,      (TAC)        ;
135440 / 256200,,152500          XCTR   XR,152500             ;
153037 / 330300,,000001                                       ;
135441 / 135640,,153037           LDB  AC1,153037             ;
135442 / 301640,,000005          CAIL  AC1,NVDOPS             ;
135443 / 263140,,000000          POPJ    P,                   ;
135444 / 200440,,000001          MOVE DSER,   TAC             ;
152651 / 220700,,000001                                       ;
135445 / 135040,,152651           LDB  TAC,152651             ;
135446 / 603440,,000400          TLNE DSER,VDXBIT             ;
135447 / 254000,,135516          JRST      VDMAP5             ;
135450 / 326040,,135452         JUMPN  TAC,135452             ;
135451 / 570044,,027320          HRRE  TAC,JBTLIN(J)          ;
135452 / 275040,,000026          SUBI  TAC,  DDL0             ;
135453 / 305040,,000072         CAIGE  TAC, DDNUM             ;
135454 / 325040,,135456        JUMPGE  TAC,135456             ;
135455 / 254000,,135521          JRST      VDMAP4             ;
135456 / 331015,,135523         SKIPL       VDDSP(AC1)        ;
135457 / 254000,,135503          JRST      VDMAP2             ;
135460 / 334704,,027320         SKIPA  AC2,JBTLIN(J)          ;
                       VDMAP1:
135461 / 200716,,027320          MOVE  AC2,JBTLIN(AC2)        ;
151674 / 777777,,777777                                       ;
135462 / 316700,,151674          CAMN  AC2,151674             ;;DETACHED?
135463 / 254000,,135470          JRST      VDMP1A             ;
135464 / 306056,,777752          CAIN  TAC,777752(AC2)        ;
135465 / 254000,,135503          JRST      135503             ;;LET HIM BY IF IT'S HIS CHAN
135466 / 603700,,004000          TLNE  AC2,PTYLIN             ;
135467 / 336716,,017743         SKIPN  AC2,017743(AC2)        ;;OR IF IT'S HIS VIA SOME PTY CHAIN
                       VDMP1A:
135470 / 334704,,027420         SKIPA  AC2,JBTPRV(J)          ;
135471 / 254000,,135461          JRST      VDMAP1             ;
135472 / 603700,,004000          TLNE  AC2,004000             ;;OR IF HE HAS THE MAGIC PRIVILEGE
135473 / 254000,,135503          JRST      VDMAP2             ;
152200 / 020000,,600000                                       ;
135474 / 200700,,152200          MOVE  AC2,152200             ;
135475 / 332301,,032375         SKIPE  DDB,032375(TAC)        ;
135476 / 616706,,000004          TDNN  AC2,DEVMOD(DDB)        ;
135477 / 254000,,135503          JRST      135503             ;;OR IF IT'S FREE
135500 / 135700,,037575           LDB  AC2, PJOBN             ;
135501 / 302704,,000000          CAIE  AC2,      (J)          ;
135502 / 254000,,135511          JRST      VDMAP3             ;
                       ;FALL THRU TO VDMAP2 IF HE OWNS THE CONSOLE
                       VDMAP2:
135503 / 500055,,135523           HLL  TAC, VDDSP(AC1)        ;
135504 / 621040,,400000           TLZ  TAC,400000             ;;DON'T CONFUSE VDOUT, after all we're not a III
135505 / 260175,,135523         PUSHJ    P,@ VDDSP(AC1)       ;
135506 / 260140,,135430         PUSHJ    P, VDOUT             ;
135507 / 603040,,200000          TLNE  TAC,200000             ;;DON'T SKIP IF NOT REQUESTED
135510 / 350003,,000000           AOS            (P)          ;;NOTE THIS BIT WAS CLEARED BY ANY FAILURE
                       VDMAP3:
135511 / 607440,,400000          TLNN DSER,400000             ;;GIVE HIM APPROPRIATE FLAVOR OF STATUS
135512 / 336241,,012615         SKIPN  DAT,012615(TAC)        ;
135513 / 334041,,014571         SKIPA  TAC, VDMAP(TAC)        ;
135514 / 200045,,000041          MOVE  TAC, VDTMP(DAT)        ;
135515 / 254000,,060225          JRST      STOTAC             ;
                       VDMAP5:
135516 / 271040,,000072          ADDI  TAC,000072             ;;HERE TO MAP "SHADOW" CHANNELS
135517 / 305040,,000100         CAIGE  TAC,000100             ;
135520 / 254000,,135503          JRST      VDMAP2             ;
                       VDMAP4:
151430 / 476014,,000000         SETOM            (UUO)        ;
135521 / 256040,,151430          XCTR   XW,151430             ;;NOT DD - USE POSSIBLE BUT UNLIKELY VALUE TO FLAG THIS.
135522 / 263140,,000000          POPJ    P,                   ;
                       VDDSP:
135523 / 000000,,037401                                       ;;DON'T EVEN BOTHER WITH VDOUT
135524 / 600000,,135530                                       ;
135525 / 600000,,135534                                       ;
135526 / 600000,,135545                                       ;
135527 / 600000,,135552                                       ;
                       VDSET:
135530 / 260140,,135570         PUSHJ    P,VDWCHK             ;
135531 / 260140,,135424         PUSHJ    P,VDSTRU             ;
135532 / 202256,,000041         MOVEM  DAT, VDTMP(AC2)        ;
135533 / 263140,,000000          POPJ    P,                   ;
                       VDIOR:
135534 / 606240,,000017          TRNN  DAT,    17             ;
135535 / 254000,,135541          JRST      VDIOR1             ;
135536 / 201740,,000017         MOVEI  AC3,    17             ;
135537 / 260140,,135424         PUSHJ    P,135424             ;;CLEAR ANALOG HERE SO THESE DON'T GET OR'ED
135540 / 412756,,000041        ANDCAM  AC3, VDTMP(AC2)        ;
                       VDIOR1:
135541 / 260140,,135570         PUSHJ    P,VDWCHK             ;
135542 / 260140,,135424         PUSHJ    P,VDSTRU             ;
135543 / 436256,,000041          IORM  DAT, VDTMP(AC2)        ;
135544 / 263140,,000000          POPJ    P,                   ;
                       VDACM:
135545 / 602240,,000017          TRNE  DAT,    17             ;
135546 / 660240,,000017           TRO  DAT,000017             ;;ANYTHING IN ANALOG FIELD CLEARS IT ALL
135547 / 260140,,135424         PUSHJ    P,VDSTRU             ;
135550 / 412256,,000041        ANDCAM  DAT, VDTMP(AC2)        ;
135551 / 263140,,000000          POPJ    P,                   ;
                       VDRST:
135552 / 321440,,135562         JUMPL DSER,VDNORM             ;
                       VDRST1:
135553 / 336701,,012615         SKIPN  AC2,012615(TAC)        ;
135554 / 263140,,000000          POPJ    P,                   ;
135555 / 700600,,001004          CONO   PI,SCNOFF             ;
135556 / 200741,,014571          MOVE  AC3, VDMAP(TAC)        ;
135557 / 202756,,000041         MOVEM  AC3, VDTMP(AC2)        ;;SET TEMP MAP FROM PERM
135560 / 700600,,002004          CONO   PI, SCNON             ;
135561 / 263140,,000000          POPJ    P,                   ;
                       VDNORM:
135562 / 336701,,012615         SKIPN  AC2,012615(TAC)        ;
135563 / 334640,,014567         SKIPA  AC1,AVLCHN             ;
135564 / 554656,,000015          HLRZ  AC1,PRGNUM(AC2)        ;
135565 / 260140,,135375         PUSHJ    P,135375             ;;SET BOTH MAPS TO HIS CHAN OR AVAILABLE
135566 / 202756,,000041         MOVEM  AC3, VDTMP(AC2)        ;
135567 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO BLESS BITS ABOUT TO BE TURNED ON FOR PRIVACY VIOLATION
                       ;LOSING BITS ARE FLUSHED, AND SKIP FLAG IS CLEARED
                       VDWCHK:
135570 / 205640,,777740         MOVSI  AC1,777740             ;
                       VDWCHL:
135571 / 325240,,135577        JUMPGE  DAT, VDWOK             ;
135572 / 331015,,014525         SKIPL       DDTAB(AC1)        ;
135573 / 254000,,135577          JRST       VDWOK             ;
135574 / 570744,,027320          HRRE  AC3,JBTLIN(J)          ;
135575 / 260140,,135612         PUSHJ    P,135612             ;;TRYING TO LOOK AT PRIVATE CHAN, SEE IF IT'S OK
135576 / 254000,,135607          JRST      VDWLUZ             ;
                       VDWOK:
135577 / 241240,,000001           ROT  DAT,     1             ;
135600 / 253640,,135571         AOBJN  AC1,VDWCHL             ;
135601 / 241240,,000004           ROT  DAT,     4             ;
135602 / 606240,,000017          TRNN  DAT,    17             ;
135603 / 263140,,000000          POPJ    P,                   ;
152042 / 000300,,000005                                       ;
135604 / 135640,,152042           LDB  AC1,152042             ;
135605 / 434255,,135115           IOR  DAT,VDSYNC(AC1)        ;
135606 / 263140,,000000          POPJ    P,                   ;
                       VDWLUZ:
135607 / 621240,,400000           TLZ  DAT,400000             ;
135610 / 621040,,200000           TLZ  TAC,200000             ;
135611 / 254000,,135577          JRST       VDWOK             ;
                       ;ROUTINE TO SEE IF LOOKING AT PRIVATE CHAN IS LEGAL
                       ;AC1=CHAN, TAC=MAPPED CONSOLE, AC3=MAPPING CONSOLE, J=MAPPING JOB.
                       VDCCHK:
152656 / 221015,,014525                                       ;
135612 / 135700,,152656           LDB  AC2,152656             ;
135613 / 306701,,000100          CAIN  AC2,   100(TAC)        ;
135614 / 254000,,037401          JRST      037401             ;;CAN ALWAYS MAP CONSOLE TO ITSELF
                       VDCCK0:
135615 / 602700,,000300          TRNE  AC2,   300             ;
135616 / 254000,,135627          JRST      135627             ;;CONSOLE CHAN
                       VDCCK1:
135617 / 306216,,000000          CAIN    J,      (AC2)        ;
135620 / 254000,,037401          JRST      037401             ;;JOB OWNS IT
135621 / 200716,,027320          MOVE  AC2,JBTLIN(AC2)        ;
135622 / 342700,,037403          AOJE  AC2,037403             ;;DETACHED
135623 / 607700,,004000          TLNN  AC2,PTYLIN             ;
135624 / 254000,,135630          JRST      VDCCK3             ;
135625 / 200716,,017742          MOVE  AC2,017742(AC2)        ;;SEE IF IT CAN GET TO IT VIA PTY
135626 / 254000,,135617          JRST      VDCCK1             ;
                       VDCCK2:
152175 / 017777,,777727                                       ;
135627 / 270700,,152175           ADD  AC2,152175             ;
                       VDCCK3:
135630 / 603700,,020000          TLNE  AC2,DDDLIN             ;
135631 / 302756,,777777          CAIE  AC3,777777(AC2)        ;;JOB'S OWN CONSOLE WINS
135632 / 263140,,000000          POPJ    P,                   ;
135633 / 254000,,037401          JRST      CPOPJ1             ;
135634 /                 ;::    BEND STANFO.DPYSER.
135634 /                 ;::   BEGIN STANFO.WHOSER.
                       ;AC'S USED
                       ;WHO IS FOR DPY # AND JOB STATUS WORD.
                       ;TAC AND TAC1 AND AC2 ARE SORT OF TEMPORARY
                       ;AC1 LOCATION OF FREE STORAGE BUFFER.
                       ;AC3 BYTE POINTER TO FREE STORAGE, INDEXED BY AC1
                       ;J CONTAINS JOB NUMBER OF WHO LINE.
                       ;WHOPTR 0 = LINE IS FREE.
                       ;      >0 = LINE IS WAITING TO BE QUEUED
                       ;      -2 OR -1 = LINE HAS BEEN QUEUED.
                       WHOINI:
                       ;END REPEAT 0
135634 / 263140,,000000          POPJ    P,                   ;
                       WHOSER:
135635 / 200240,,024633          MOVE  DAT,  TIME             ;
135636 / 602240,,000001          TRNE  DAT,000001             ;;EVEN TIC?
135637 / 263140,,000000          POPJ    P,                   ;;NO, SKIP IT.
135640 / 200640,,035277          MOVE  AC1,FREWAT             ;
135641 / 322640,,135643         JUMPE  AC1,135643             ;;WAITING TO GIVE BACK FREE STORAGE?
135642 / 260140,,074163         PUSHJ    P,074163             ;;YES. DO IT.
135643 / 402000,,035277         SETZM      FREWAT             ;
                       ;WE DO WHO LINES FOR 5 III DISPLAYS IN 10. TICKS, THEN
                       ;ON THE 12.TH  TICK WE DO ONE DD LINE AND THE OTHER III.
                       WHOIII:
135644 / 371400,,035273          SOSL  WHO,035273             ;;NEXT GUY TO DO.
135645 / 254000,,135676          JRST      135676             ;;JUMP IF THERE'S ANOTHER III TO DO
                       WHODO:
135646 / 200040,,014150          MOVE  TAC,014150             ;;DATA DISK IS OFF?
135647 / 326040,,135652         JUMPN  TAC,135652             ;;JUMP IF DD IS OFF.
135650 / 200040,,035275          MOVE  TAC,035275             ;;DD WHO LINE STILL BUSY?
135651 / 326040,,135674         JUMPN  TAC,135674             ;;IF SO, LEAVE EARLY.
                       WHODO9:
135652 / 373640,,014407         SOSLE  AC1,014407             ;;COUNT DOWN TO AVL MSG SHIFT
135653 / 254000,,135661          JRST      WHODO4             ;
135654 / 260140,,135062         PUSHJ    P,135062             ;;THIS MOVES IT
135655 / 201640,,000454         MOVEI  AC1,000454             ;
135656 / 202640,,014407         MOVEM  AC1,014407             ;;300 WHODO'S IS A MINUTE (BEFORE NEXT SHIFT OF MSG)
135657 / 201400,,000200         MOVEI  WHO,000200             ;;WHOKLU SET, SERVICE AVLCHN NOW
135660 / 254000,,135673          JRST      WHODO3             ;
                       WHODO4:
135661 / 375400,,035274         SOSGE  WHO,035274             ;;WHO'S NEXT FOR WHO
135662 / 260140,,136272         PUSHJ    P,136272             ;;END OF DD.  RECALCULATE SYSTEM LINE
152655 / 221010,,014525                                       ;
135663 / 135400,,152655           LDB  WHO,152655             ;;MAP FROM DD CHANNEL TO TTY NUMBER
135664 / 306400,,000200          CAIN  WHO,000200             ;;AVAILABLE CHANNEL?
135665 / 254000,,135673          JRST      135673             ;;YES, SKIP WHODO1
135666 / 301400,,000100          CAIL  WHO,   100             ;
135667 / 303400,,000177         CAILE  WHO,   177             ;
135670 / 254000,,135674          JRST      135674             ;;NOT USER'S CONSOLE
135671 / 275400,,000072          SUBI  WHO,000072             ;;MAKE DPY (TTY) NUMBER
135672 / 260140,,135676         PUSHJ    P,135676             ;;GO REFRESH ONE MORE DD WHO LINE
                       WHODO3:
135673 / 202400,,035275         MOVEM  WHO,035275             ;;SET TO FLAG WHOQUE.
                       WHODO2:
135674 / 201400,,000005         MOVEI  WHO,000005             ;;START ON III DISPLAYS AGAIN
135675 / 202400,,035273         MOVEM  WHO,035273             ;;SAVE INDEX OF WHO WAS DONE LAST
                       WHODO1:
135676 / 200650,,035300          MOVE  AC1,FRETAB(WHO)        ;;GET THE FREE STORAGE BLOCK
135677 / 200310,,012607          MOVE  DDB, LETAB(WHO)        ;;GET PTR TO DPY HEADER
135700 / 322300,,135714         JUMPE  DDB,135714             ;;JUMP IF NO DPY HEADER
135701 / 550206,,000143          HRRZ    J,WHOTAB(DDB)        ;;GET JOB NUMBER FOR THIS LINE.
135702 / 200244,,026114          MOVE  DAT,JBTSTS(J)          ;;GET JOB'S STATUS WORD
135703 / 607240,,040000          TLNN  DAT,040000             ;;IS IT STILL THERE?
135704 / 403206,,000143         SETZB    J,WHOTAB(DDB)        ;;NO, FLUSH!
135705 / 322200,,135714         JUMPE    J,135714             ;;JUMP IF NO WHO REQUEST
                       ;CHECK FOR RELEASE OF FREE STORAGE
135706 / 322640,,136135         JUMPE  AC1,136135             ;;JUMP IF WE NEED TO MAKE FS BLOCK.
135707 / 200240,,035274          MOVE  DAT,035274             ;
135710 / 305400,,000006         CAIGE  WHO,000006             ;;ALWAYS UPDATE SLOW PART FOR DD
135711 / 606240,,000003          TRNN  DAT,000003             ;;UPDATE WHOLE III AFTER 4 DATA DISKS
135712 / 254000,,136166          JRST      136166             ;;COMPUTE ENTIRE LINE.
135713 / 254000,,136012          JRST      136012             ;;JUST DO THE FAST PART THIS TIME
                       WHOCLR:
135714 / 322640,,037403         JUMPE  AC1,037403             ;;DO WE HAVE FREE STORAGE BLOCK
135715 / 402010,,035300         SETZM      FRETAB(WHO)        ;;YES. CLEAR FRETAB
135716 / 552640,,035277         HRRZM  AC1,035277             ;;YES, QUEUE IT FOR NEXT TIC.
135717 / 301400,,000006          CAIL  WHO,000006             ;;IS THIS A DATA DISC DISPLAY?
135720 / 263140,,000000          POPJ    P,                   ;;YES, LEAVE EARLY
135721 / 550310,,012607          HRRZ  DDB, LETAB(WHO)        ;
135722 / 322300,,037403         JUMPE  DDB,037403             ;;IF SLIPPED OUT FROM UNDER US, FORGET IT
135723 / 201040,,000012         MOVEI  TAC,000012             ;;RESET WHOCALL.
135724 / 202046,,000005         MOVEM  TAC,000005(DDB)        ;
135725 / 205040,,400000         MOVSI  TAC,400000             ;;DONT SELECT III FOR SYS WHO LINE
135726 / 211710,,000000         MOVNI  AC2,      (WHO)        ;
135727 / 242056,,000000           LSH  TAC,      (AC2)        ;
135730 / 412040,,014500        ANDCAM  TAC,014500             ;;TURN OFF SET BIT
135731 / 242040,,777764           LSH  TAC,777764             ;;DESELECT THIS III FOR SYS WHO LINE
135732 / 436040,,014500           ORM  TAC,014500             ;;TURN ON RESET BIT
135733 / 254000,,130164          JRST      130164             ;;RESTART POOLE AND RETURN TO CLKSER
                       WHOSIX:
135734 / 201700,,000006         MOVEI  AC2,000006             ;;CHARACTER COUNT
                       WHOSXX:
135735 / 201040,,000000         MOVEI  TAC,                   ;;DATA IN TAC1
135736 / 246040,,000006          LSHC  TAC,     6             ;
135737 / 271040,,000040          ADDI  TAC,000040             ;
135740 / 136040,,000017          IDPB  TAC,   AC3             ;
135741 / 367700,,135735          SOJG  AC2,WHOSXX             ;
135742 / 263140,,000000          POPJ    P,                   ;
                       ;WSDPAD - CALL WITH
                       ;	AC3 = BYTE POINTER
                       ;	AC2 = CHARACTER COUNT
                       ;	TAC = DATA
                       ;	TAC1, UCHN, DAT ARE CLOBBERED.
                       ;	PRINTS NUMBER WITH LEADING SPACES.
                       ;CALL WSDPD2 WITH UCHN = RADIX; DAT = PADDING CHARACTER. AC3,AC2,TAC AS ABOVE.
                       ;CALL WSDPD3 WITH UCHN = RADIX.  USES BLANK PADDING.
                       WSDPAD:
135743 / 201500,,000012         MOVEI UCHN,000012             ;
                       WSDPD3:
135744 / 201240,,000040         MOVEI  DAT,000040             ;;PADDING CHARACTER
                       WSDPD2:
135745 / 231052,,000000         IDIVI  TAC,      (UCHN)       ;
135746 / 506103,,000000          HRLM TAC1,      (P)          ;
135747 / 275700,,000001          SUBI  AC2,000001             ;;COUNT A CHARACTER GENERATED.
135750 / 322040,,135756         JUMPE  TAC,WSDPD1             ;
135751 / 260140,,135745         PUSHJ    P,WSDPD2             ;
                       WSDPD0:
135752 / 554043,,000000          HLRZ  TAC,      (P)          ;
135753 / 271040,,000060          ADDI  TAC,000060             ;
135754 / 136040,,000017          IDPB  TAC,   AC3             ;
135755 / 263140,,000000          POPJ    P,                   ;
                       WSDPD1:
135756 / 361700,,135752          SOJL  AC2,WSDPD0             ;
135757 / 136240,,000017          IDPB  DAT,   AC3             ;
135760 / 254000,,135756          JRST      WSDPD1             ;
                       WPER2D:
135761 / 221040,,000144         IMULI  TAC,000144             ;;PRINT TAC/TAC1 AS A PERCENTAGE IN 2 DIGITS
135762 / 230040,,000002          IDIV  TAC,  TAC1             ;
135763 / 301040,,000144          CAIL  TAC,000144             ;
135764 / 201040,,000143         MOVEI  TAC,000143             ;;PRINT 99 FOR 100
                       ;FALL INTO W0PD2
                       ;PRINT A 2 DIGIT DECIMAL NUMBER PADDED WITH A LEADING ZERO IF NECESSARY
                       ;CALL WITH NUMBER IN TAC, BYTE POINTER IN AC3.  CLOBBERS TAC1
                       W0PD2:
135765 / 231040,,000012         IDIVI  TAC,000012             ;
135766 / 271040,,000060          ADDI  TAC,000060             ;
135767 / 136040,,000017          IDPB  TAC,   AC3             ;
135770 / 271100,,000060          ADDI TAC1,000060             ;
135771 / 136100,,000017          IDPB TAC1,   AC3             ;
135772 / 263140,,000000          POPJ    P,                   ;
                       ;PRINT A DECIMAL NUMBER PADDING WITH FOLLOWING BLANKS
                       ;	TAC = DATA
                       ;	AC2 = CHARACTER COUNT
                       ;	AC3 = BYTE POINTER
                       ;TAC, AC2, TAC1 AND DAT ARE CLOBBERED
                       DECPDF:
135773 / 201240,,000040         MOVEI  DAT,000040             ;;THIS IS THE CHARACTER TO PAD WITH
135774 / 260140,,136001         PUSHJ    P,136001             ;;CONVERT TAC TO ASCII AND SAVE CHARACTERS
135775 / 361700,,037403          SOJL  AC2,037403             ;;ANY PADDING NEEDED?
135776 / 136240,,000017          IDPB  DAT,000017             ;;YES.  PAD WITH A BLANK
135777 / 365700,,135776         SOJGE  AC2,135776             ;;MORE PADDING NEEDED?
136000 / 263140,,000000          POPJ    P,                   ;;NOPE
                       WHPRNT:
136001 / 231040,,000012         IDIVI  TAC,000012             ;;ROUTINE TO DO THE WORK FOR DECPDF
136002 / 506103,,000000          HRLM TAC1,      (P)          ;
136003 / 322040,,136005         JUMPE  TAC,136005             ;
136004 / 260140,,136001         PUSHJ    P,WHPRNT             ;
136005 / 554043,,000000          HLRZ  TAC,      (P)          ;
136006 / 271040,,000060          ADDI  TAC,000060             ;
136007 / 136040,,000017          IDPB  TAC,000017             ;;DEPOSIT ONE DECIMAL DIGIT
136010 / 275700,,000001          SUBI  AC2,000001             ;;NOTE THAT WE HAVE PUT OUT A CHARACTER
136011 / 263140,,000000          POPJ    P,                   ;
                       ;THIS IS THE PART WE ALWAYS UPDATE.
                       ALWAYS:
136012 / 405200,,777777          ANDI    J,777777             ;
136013 / 200244,,026114          MOVE  DAT,JBTSTS(J)          ;
                       ;	TLNN	DAT,JNA
                       ;	JRST	[SETZM WHOTAB(DDB)	;JOB HAS GONE AWAY.
                       ;		POPJ P,]
152154 / 000015,,000007                                       ;
152154 / 010715,,000007 POINT 7,15000007,34                   ;
136014 / 200740,,152154          MOVE  AC3,152154             ;
136015 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;;GET QUEUE NUMBER.
136016 / 200041,,037636          MOVE  TAC, QNAMS(TAC)        ;;GET PRINT NAME.
136017 / 660040,,000001           TRO  TAC,     1             ;
136020 / 202060,,000017         MOVEM  TAC,@   AC3            ;
136021 / 201040,,000040         MOVEI  TAC,000040             ;
136022 / 316200,,024061          CAMN    J,024061             ;;CURRENTLY RUNNING JOB?
136023 / 201040,,000055         MOVEI  TAC,000055             ;;YES
136024 / 603240,,002000          TLNE  DAT,002000             ;;SWAPPED OUT?
136025 / 201040,,000052         MOVEI  TAC,000052             ;;YES
136026 / 602240,,100000          TRNE  DAT,100000             ;;LOCKED IN CORE?
136027 / 201040,,000026         MOVEI  TAC,   026             ;;"⊗"			;YES
136030 / 137040,,000017           DPB  TAC,   AC3             ;
136031 / 201040,,000040         MOVEI  TAC,000040             ;
136032 / 200104,,020273          MOVE TAC1, SPWGO(J)          ;;SPACEWAR ON THE 10?
136033 / 322100,,136041         JUMPE TAC1,136041             ;;NO
136034 / 201040,,000134         MOVEI  TAC,000134             ;;YES
136035 / 200104,,020373          MOVE TAC1, SP2GO(J)          ;;SPACEWAR ON 6 ALSO?
136036 / 322100,,136044         JUMPE TAC1,136044             ;;NO
136037 / 201040,,000130         MOVEI  TAC,000130             ;;YES
136040 / 254000,,136044          JRST      ALWAY2             ;
                       ALWAY1:
136041 / 200104,,020373          MOVE TAC1, SP2GO(J)          ;;SPACEWAR ON THE 6?
136042 / 322100,,136044         JUMPE TAC1,136044             ;;NO
136043 / 201040,,000057         MOVEI  TAC,000057             ;;YES
                       ALWAY2:
136044 / 135100,,037600           LDB TAC1,037600             ;;IS THERE A SEGMENT?
136045 / 322100,,136051         JUMPE TAC1,136051             ;;NO
136046 / 200102,,026114          MOVE TAC1,JBTSTS(TAC1)       ;;YES
136047 / 603100,,002000          TLNE TAC1,002000             ;;IS IT SWAPPED OUT?
136050 / 201040,,000052         MOVEI  TAC,000052             ;;YES
                       ALWAY3:
136051 / 136040,,000017          IDPB  TAC,   AC3             ;
                       ;PRINT XTIME INCREMENT
136052 / 200044,,031443          MOVE  TAC, XTIME(J)          ;;GET RUN TIME AT LAST INTERACTION
136053 / 201100,,000047         MOVEI TAC1,000047             ;;PUNCTUATE TICKS WITH RIGHT QUOTE
136054 / 623040,,400000          TLZE  TAC,400000             ;; UNLESS NO-UPDATE FLAG SET
136055 / 201100,,000042         MOVEI TAC1,000042             ;;IN WHICH CASE USE double QUOTE
152320 / 000015,,000016                                       ;
152320 / 100715,,000016 POINT 7,15000016,27                   ;
136056 / 137100,,152320           DPB TAC1,152320             ;;DEPOSIT PUNCTUATOR
136057 / 210040,,000001          MOVN  TAC,   TAC             ;
136060 / 270044,,031243           ADD  TAC, TTIME(J)          ;;CALCULATE INCREMENT IN RUN TIME
136061 / 322300,,136066         JUMPE  DDB,136066             ;;ALWAYS IF TTY (DDB=0)
136062 / 554106,,000143          HLRZ TAC1,WHOTAB(DDB)        ;;GET INCREMENT FROM LAST TIME
136063 / 306101,,000000          CAIN TAC1,      (TAC)        ;;SAME?
136064 / 254000,,136075          JRST      136075             ;;YES.  DON'T UPDATE INCREMENT
136065 / 506046,,000143          HRLM  TAC,WHOTAB(DDB)        ;;NO.  SAVE INCREMENT THIS TIME FOR NEXT TIME
                       XTALL:
136066 / 231040,,000074         IDIVI  TAC,000074             ;;CONVERT TO SECONDS
136067 / 261140,,000002          PUSH    P,000002             ;;SAVE TICKS
152750 / 000015,,000015                                       ;
152750 / 260715,,000015 POINT 7,15000015,13                   ;
136070 / 200740,,152750          MOVE  AC3,152750             ;
136071 / 260140,,136114         PUSHJ    P,136114             ;;PRINT X INCREMENT
136072 / 133000,,000017           IBP      000017             ;;SKIP OVER PUNCTUATOR (ALREADY DEPOSITED)
136073 / 262140,,000001           POP    P,000001             ;;RETRIEVE TICKS
136074 / 260140,,135765         PUSHJ    P,135765             ;;PRINT TICKS
                       NOXTIM:
136075 / 200044,,031243          MOVE  TAC, TTIME(J)          ;;GET RUN TIME
136076 / 322300,,136105         JUMPE  DDB,136105             ;;ALWAYS DO FOR TTY WHO (DDB=0)
136077 / 311046,,000144          CAML  TAC,WHORUN(DDB)        ;;TIME TO UPDATE RUN TIME YET?
136100 / 254000,,136105          JRST      136105             ;;YES
136101 / 271040,,000074          ADDI  TAC,000074             ;;MAYBE NOT.  IS WHORUN REASONABLE?
136102 / 311046,,000144          CAML  TAC,WHORUN(DDB)        ;
136103 / 263140,,000000          POPJ    P,                   ;;YES
136104 / 275040,,000074          SUBI  TAC,000074             ;;NO, READJUST RUN TIME AND THEN UPDATE
                       DOTIME:
136105 / 200240,,000001          MOVE  DAT,000001             ;;COPY RUN TIME
136106 / 231040,,000074         IDIVI  TAC,000074             ;;LEAVE SECONDS IN TAC.
136107 / 275242,,000000          SUBI  DAT,      (TAC1)       ;;ADJUST DAT TO LAST WHOLE SECOND OF RUN TIME
136110 / 271240,,000074          ADDI  DAT,000074             ;; AND THEN ADD ONE SECOND
136111 / 332000,,000006         SKIPE      000006             ;;NOT FOR TTY WHO
136112 / 202246,,000144         MOVEM  DAT,WHORUN(DDB)        ;; AND SAVE THAT AS TIME FOR NEXT UPDATE
153143 / 000015,,000013                                       ;
153143 / 350715,,000013 POINT 7,15000013,6                    ;
136113 / 200740,,153143          MOVE  AC3,153143             ;;FALL INTO WHOTIM
                       WHOTIM:
136114 / 231040,,007020         IDIVI  TAC,007020             ;;HOURS IN TAC, MINUTES, SECONDS IN TAC1
153725 / 201240,,000040         MOVEI  DAT,000040             ;;FILL HOURS FIELD WITH ONE SPACE
153726 / 137240,,000017           DPB  DAT,   AC3             ;
153727 / 201240,,000000         MOVEI  DAT,                   ;; AND ONE NULL.  THEN FILL MINUTES WITH NULLS
153730 / 136240,,000017          IDPB  DAT,   AC3             ;
153731 / 254000,,136123          JRST        WMIN             ;
136115 / 322040,,153725         JUMPE  TAC,153725             ;
136116 / 201240,,000060         MOVEI  DAT,000060             ;;FLAG TO FILL MINUTES FIELD WITH 0'S
136117 / 271040,,000060          ADDI  TAC,000060             ;
136120 / 137040,,000017           DPB  TAC,   AC3             ;
136121 / 201040,,000072         MOVEI  TAC,000072             ;
136122 / 136040,,000017          IDPB  TAC,   AC3             ;
                       WMIN:
136123 / 200040,,000002          MOVE  TAC,  TAC1             ;
136124 / 231040,,000074         IDIVI  TAC,000074             ;
136125 / 261140,,000002          PUSH    P,000002             ;;SAVE SECONDS
136126 / 201500,,000012         MOVEI UCHN,000012             ;;SET RADIX. DAT SET WITH FILL CHARACTER
136127 / 201700,,000002         MOVEI  AC2,000002             ;;NUMBER OF CHARACTERS TO FILL.
136130 / 260140,,135745         PUSHJ    P,135745             ;;WRITE DECIMAL WITH FILL.
136131 / 201040,,000072         MOVEI  TAC,000072             ;
136132 / 136040,,000017          IDPB  TAC,   AC3             ;
136133 / 262140,,000001           POP    P,   TAC             ;
136134 / 254000,,135765          JRST      135765             ;;WRITE SECONDS AS TWO CHARACTERS.  RETURN.
                       ; THIS ROUTINE SETS UP A NEW WHO TABLE FROM A PIECE OF FREE STORAGE
                       WHOSET:
136135 / 201740,,000027         MOVEI  AC3,000027             ;;GET SIZE.
136136 / 260140,,073353         PUSHJ    P,073353             ;;GET FREE STORAGE.
136137 / 263140,,000000          POPJ    P,                   ;;NONE, RETURN.
136140 / 202650,,035300         MOVEM  AC1,FRETAB(WHO)        ;;SAVE FREE STORAGE POINTER.
136141 / 200040,,000015          MOVE  TAC,   AC1             ;
136142 / 505040,,014450          HRLI  TAC, TITLE             ;
136143 / 251055,,000026           BLT  TAC, WLINK(AC1)        ;;PUT LINE MODEL INTO FREE STORAGE.
136144 / 402006,,000144         SETZM      WHORUN(DDB)        ;;ZERO THE TIME TO UPDATE RUN TIME NEXT
136145 / 301400,,000006          CAIL  WHO,000006             ;;IS THIS A DD DISPLAY?
136146 / 254000,,136166          JRST      136166             ;;YES, NOTHING SPECIAL TO DO
136147 / 201040,,000012         MOVEI  TAC,000012             ;;IIIs DONT DO THEIR OWN SYSTEM WHO LINE
136150 / 202055,,000002         MOVEM  TAC,     2(AC1)        ;; SO A NO-OP REPLACES THE JMP TO SYS LINE
136151 / 505640,,000020          HRLI  AC1,DISJMP             ;
136152 / 206655,,000026         MOVSM  AC1, WLINK(AC1)        ;;STORE JUMP BACK TO FRONT OF BLOCK.
136153 / 505640,,000024          HRLI  AC1,DISJSR             ;
136154 / 200750,,012607          MOVE  AC3, LETAB(WHO)        ;
136155 / 322740,,135714         JUMPE  AC3,135714             ;;JUMP IF DPY HEADER DISAPPEARED
136156 / 206657,,000005         MOVSM  AC1,000005(AC3)        ;;STORE JSR TO FS BLOCK WHERE III WILL HIT IT
136157 / 405640,,777777          ANDI  AC1,777777             ;;CLEAR LEFT SIDE.
136160 / 205040,,400000         MOVSI  TAC,400000             ;;SELECT THIS III FOR SYS WHO LINE
136161 / 211710,,000000         MOVNI  AC2,      (WHO)        ;
136162 / 242056,,000000           LSH  TAC,      (AC2)        ;
136163 / 436040,,014500           ORM  TAC,014500             ;;TURN ON SET BIT
136164 / 242040,,777764           LSH  TAC,777764             ;;DONT DESELECT THIS III FOR SYS WHO LINE
136165 / 412040,,014500        ANDCAM  TAC,014500             ;;TURN OFF RESET BIT
                       WHOLIN:
136166 / 260140,,136012         PUSHJ    P,ALWAYS             ;
                       ;	HRRZ	TAC,WHOTAB(DDB)		;HAS JOB GONE AWAY?
                       ;	JUMPE	TAC,CPOPJ		;YES. DON'T WORK AT IT.
136167 / 550040,,000004          HRRZ  TAC,     J             ;
151406 / 000015,,000003                                       ;
151406 / 440715,,000003 POINT 7,15000003,                     ;
136170 / 200740,,151406          MOVE  AC3,151406             ;
136171 / 201700,,000002         MOVEI  AC2,000002             ;;2 CHARACTERS
136172 / 260140,,135743         PUSHJ    P,135743             ;;WRITE DECIMAL JOB NUMBER
152317 / 000015,,000003                                       ;
152317 / 100715,,000003 POINT 7,15000003,27                   ;
136173 / 200740,,152317          MOVE  AC3,152317             ;
136174 / 200104,,027720          MOVE TAC1,PRJPRG(J)          ;;PROJECT-PROGRAMMER INITIALS.
136175 / 260140,,135734         PUSHJ    P,135734             ;;DO SIXBIT OUTPUT
136176 / 570044,,027320          HRRE  TAC,JBTLIN(J)          ;;GET LINE NUMBER AND SEE IF DETACHED
153432 / 200100,,152537          MOVE TAC1,152537             ;
153433 / 202115,,000005         MOVEM TAC1,000005(AC1)        ;
153434 / 254000,,136203          JRST       WLRET             ;
136177 / 321040,,153432         JUMPL  TAC,153432             ;
136200 / 201700,,000005         MOVEI  AC2,000005             ;;NOT DETACHED.  PRINT LINE NO IN 5 SPACES
136201 / 201500,,000010         MOVEI UCHN,000010             ;;OCTAL RADIX
136202 / 260140,,135744         PUSHJ    P,135744             ;;WRITE IT WITH BLANK PADDING
                       WLRET:
152444 / 000015,,000010                                       ;
152444 / 170715,,000010 POINT 7,15000010,20                   ;
136203 / 200740,,152444          MOVE  AC3,152444             ;
136204 / 200104,,030142          MOVE TAC1,JOBNAM(J)          ;;JOB NAME
136205 / 260140,,135734         PUSHJ    P,WHOSIX             ;
136206 / 200044,,027120          MOVE  TAC,JBTADR(J)          ;;CORE SIZE.
153274 / 135040,,037612           LDB  TAC,037612             ;;IF SWAPPED OUT, GET SWAPPED SIZE
153275 / 254000,,136213          JRST       WSIZE             ;
136207 / 322040,,153274         JUMPE  TAC,153274             ;
136210 / 554040,,000001          HLRZ  TAC,   TAC             ;
136211 / 340040,,000000           AOJ  TAC,                   ;
136212 / 242040,,777766           LSH  TAC,777766             ;
                       WSIZE:
136213 / 201700,,000004         MOVEI  AC2,000004             ;;4 CHARACTERS OUT, PAD WITH BLANKS
136214 / 260140,,135743         PUSHJ    P,135743             ;;WHOSER DECIMAL PAD OUTPUT
152445 / 000015,,000014                                       ;
152445 / 170715,,000014 POINT 7,15000014,20                   ;
136215 / 200740,,152445          MOVE  AC3,152445             ;;OVERALL RUN/WAIT PERCENTAGE
136216 / 200044,,031243          MOVE  TAC, TTIME(J)          ;;RUN TIME
136217 / 200104,,031543          MOVE TAC1,JBTWAT(J)          ;;WAIT TIME
136220 / 325100,,136222        JUMPGE TAC1,136222             ;;IS WAIT TIME HONEST?
136221 / 270100,,024635           ADD TAC1,024635             ;;NO.  ADJUST IT
136222 / 261140,,000002          PUSH    P,000002             ;;SAVE TOTAL WAIT TIME
136223 / 260140,,135761         PUSHJ    P,135761             ;;PRINT PERCENTAGE IN 2 COLS WITH LEADING ZERO
152751 / 000015,,000017                                       ;
152751 / 260715,,000017 POINT 7,15000017,13                   ;
136224 / 200740,,152751          MOVE  AC3,152751             ;;INCREMENTAL RUN/WAIT PERCENTAGE
136225 / 200044,,031243          MOVE  TAC, TTIME(J)          ;;RUN TIME
136226 / 200104,,031443          MOVE TAC1, XTIME(J)          ;;RUN TIME LAST SAVED
136227 / 621100,,400000           TLZ TAC1,400000             ;;CLEAR NO-UPDATE BIT
136230 / 274040,,000002           SUB  TAC,000002             ;;CALCULATE INCREMENTAL RUN TIME
136231 / 262140,,000002           POP    P,000002             ;;RETRIEVE CURRENT WAIT TIME
136232 / 274104,,031643           SUB TAC1,JB2WAT(J)          ;;CALCULATE INCREMENTAL WAIT TIME
136233 / 260140,,135761         PUSHJ    P,135761             ;;PRINT PERCENTAGE IN 2 COLS WITH LEADING ZERO
136234 / 204104,,012230          MOVS TAC1,DSKOPS(J)          ;;GET NUMBER OF DSK OPS
136235 / 554040,,000002          HLRZ  TAC,000002             ;;TOTAL NO OF DSK OPS
136236 / 275042,,000000          SUBI  TAC,      (TAC1)       ;;LESS PREVIOUS TOTAL
136237 / 201700,,000006         MOVEI  AC2,000006             ;;6 COLS
136240 / 260140,,135743         PUSHJ    P,135743             ;;LEADING BLANKS, DECIMAL NUMBER
136241 / 135040,,037600           LDB  TAC,037600             ;;DOES HE HAVE A SECOND SEGMENT?
153576 / 201040,,000012         MOVEI  TAC,000012             ;;NO
153577 / 202055,,000021         MOVEM  TAC,000021(AC1)        ;
153600 / 202055,,000022         MOVEM  TAC,000022(AC1)        ;
153601 / 254000,,136254          JRST      WALIAS             ;
136242 / 322040,,153576         JUMPE  TAC,153576             ;
153144 / 000015,,000021                                       ;
153144 / 350715,,000021 POINT 7,15000021,6                    ;
136243 / 200740,,153144          MOVE  AC3,153144             ;;YES
136244 / 201100,,000001         MOVEI TAC1,     1             ;
136245 / 202115,,000021         MOVEM TAC1,000021(AC1)        ;
136246 / 202115,,000022         MOVEM TAC1,000022(AC1)        ;
136247 / 201100,,000040         MOVEI TAC1,000040             ;
136250 / 137100,,000017           DPB TAC1,000017             ;;PRECEDE SEGMENT NAME WITH 1 SPACE
136251 / 200101,,030142          MOVE TAC1,JOBNAM(TAC)        ;
136252 / 201700,,000007         MOVEI  AC2,000007             ;;WRITE SIXBIT + 1 SPACE
136253 / 260140,,135735         PUSHJ    P,WHOSXX             ;
                       WALIAS:
136254 / 200104,,030020          MOVE TAC1,DSKPPN(J)          ;;DOES HE HAVE AN ALIAS?
153602 / 201040,,000012         MOVEI  TAC,000012             ;;NOPE
153603 / 202055,,000023         MOVEM  TAC,000023(AC1)        ;
153604 / 202055,,000024         MOVEM  TAC,000024(AC1)        ;
153605 / 263140,,000000          POPJ    P,                   ;
136255 / 322100,,153602         JUMPE TAC1,153602             ;
136256 / 201040,,000001         MOVEI  TAC,000001             ;;YES
136257 / 202055,,000023         MOVEM  TAC,000023(AC1)        ;
136260 / 202055,,000024         MOVEM  TAC,000024(AC1)        ;
153145 / 000015,,000023                                       ;
153145 / 350715,,000023 POINT 7,15000023,6                    ;
136261 / 200740,,153145          MOVE  AC3,153145             ;
136262 / 201040,,000040         MOVEI  TAC,000040             ;
136263 / 137040,,000017           DPB  TAC,   AC3             ;
136264 / 201040,,000050         MOVEI  TAC,   050             ;;;"("
136265 / 136040,,000017          IDPB  TAC,   AC3             ;
136266 / 260140,,135734         PUSHJ    P,135734             ;;PUT IN 6 SIXBIT CHARS FROM DSKPPN
136267 / 201040,,000051         MOVEI  TAC,   051             ;;;")"				; SURROUNDED BY PARENTHESES
136270 / 136040,,000017          IDPB  TAC,   AC3             ;
136271 / 263140,,000000          POPJ    P,                   ;
                       WHOSYS:
136272 / 210040,,031243          MOVN  TAC,031243             ;;GET CURRENT NULL TIME
136273 / 250040,,035270          EXCH  TAC,035270             ;;SAVE IT AND GET PREVIOUS NULL TIME
136274 / 270040,,031243           ADD  TAC,031243             ;;FIND INCREMENT IN NULL TIME
136275 / 210100,,024635          MOVN TAC1,024635             ;;GET CURRENT UPTIME
136276 / 250100,,035267          EXCH TAC1,035267             ;;SAVE IT AND GET PREVIOUS UP TIME
136277 / 270100,,024635           ADD TAC1,024635             ;;FIND INCREMENT IN UP TIME
136300 / 322100,,136306         JUMPE TAC1,NONULL             ;
136301 / 221040,,000144         IMULI  TAC,000144             ;;CALCULATE NULL TIME IN PERCENT
136302 / 230040,,000002          IDIV  TAC,  TAC1             ;
152745 / 000000,,014510                                       ;
152745 / 260700,,014510 POINT 7,00014510,13                   ;
136303 / 200740,,152745          MOVE  AC3,152745             ;
136304 / 201700,,000003         MOVEI  AC2,000003             ;;PRINT NULL PERCENTAGE IN 3 SPACES,
136305 / 260140,,135743         PUSHJ    P,135743             ;; PADDING WITH SPACES
                       NONULL:
152747 / 000000,,014516                                       ;
152747 / 260700,,014516 POINT 7,00014516,13                   ;
136306 / 200740,,152747          MOVE  AC3,152747             ;
136307 / 550040,,023423          HRRZ  TAC,023423             ;;GET TIME OF DAY IN SECS
136310 / 231040,,000074         IDIVI  TAC,000074             ;;MINS INTO TAC, SECS INTO TAC1
136311 / 231040,,000074         IDIVI  TAC,000074             ;;HOURS INTO TAC, MINS INTO TAC1
136312 / 261140,,000002          PUSH    P,000002             ;;SAVE MINS
136313 / 260140,,135765         PUSHJ    P,135765             ;;WRITE HOURS AS 2 DECIMAL DIGITS, PADDING WITH 0'S
136314 / 133000,,000017           IBP      000017             ;;SKIP OVER COLON AFTER HOURS
136315 / 262140,,000001           POP    P,000001             ;;RETRIEVE MINS
136316 / 260140,,135765         PUSHJ    P,135765             ;; AND WRITE 2 DIGIT NUMBER
136317 / 200640,,024634          MOVE  AC1,024634             ;;GET TODAY'S DATE
136320 / 316640,,035276          CAMN  AC1,035276             ;;NEW DAY ARRIVED YET?
136321 / 254000,,136354          JRST      136354             ;;NO. DONT RECOMPUTE DAY AND DATE
136322 / 202640,,035276         MOVEM  AC1,035276             ;;YES
136323 / 200740,,152536          MOVE  AC3,152536             ;
136324 / 202740,,014512         MOVEM  AC3,014512             ;;PUT SPACES INTO WHOLINE
136325 / 202740,,014513         MOVEM  AC3,014513             ;
136326 / 231640,,000037         IDIVI  AC1,000037             ;;DAY INTO AC2
136327 / 261140,,000016          PUSH    P,000016             ;;SAVE DAY
136330 / 231640,,000014         IDIVI  AC1,000014             ;;MONTH INTO AC2
136331 / 200656,,037621          MOVE  AC1,MONTAB(AC2)        ;;GET TEXT OF MONTH
152155 / 000000,,014512                                       ;
152155 / 012500,,014512 POINT 21,00014512,34                  ;
136332 / 137640,,152155           DPB  AC1,152155             ;
136333 / 262140,,000001           POP    P,000001             ;;GET DAY BACK
136334 / 271040,,000001          ADDI  TAC,000001             ;; AND CORRECT IT
153141 / 000000,,014513                                       ;
153141 / 350700,,014513 POINT 7,00014513,6                    ;
136335 / 200740,,153141          MOVE  AC3,153141             ;
136336 / 201700,,000002         MOVEI  AC2,000002             ;;WRITE IT IN 2 COLS
136337 / 201500,,000012         MOVEI UCHN,000012             ;; IN DECIMAL
136340 / 201240,,000000         MOVEI  DAT,                   ;; WITH LEADING NULLS
136341 / 260140,,135745         PUSHJ    P,WSDPD2             ;
136342 / 200040,,035276          MOVE  TAC,035276             ;;GET DATE AGAIN
136343 / 260140,,055434         PUSHJ    P,055434             ;;CONVERT TO NUMBER OF DAYS SINCE 1-1-64
136344 / 231040,,000007         IDIVI  TAC,000007             ;;GET DAY OF WEEK (REMAINDER)
136345 / 242100,,000001           LSH TAC1,000001             ;;(TABLE ENTRIES ARE 2 WORDS EACH)
136346 / 200042,,055402          MOVE  TAC,DAYTAB(TAC1)       ;
136347 / 435040,,000001           ORI  TAC,     1             ;
136350 / 202040,,014514         MOVEM  TAC,014514             ;;STORE FIRST PART OF DAY
136351 / 200042,,055403          MOVE  TAC,055403(TAC1)       ;
136352 / 435040,,000001           ORI  TAC,     1             ;
136353 / 202040,,014515         MOVEM  TAC,014515             ;;STORE SECOND HALF OF DAY
                       WHOSY1:
136354 / 200040,,002432          MOVE  TAC,002432             ;;GET NBR OF JOBS IN DISK QUEUE
152746 / 000000,,014511                                       ;
152746 / 260700,,014511 POINT 7,00014511,13                   ;
136355 / 200740,,152746          MOVE  AC3,152746             ;
136356 / 201700,,000002         MOVEI  AC2,000002             ;; AND WRITE IT IN 2 COLS
136357 / 260140,,135743         PUSHJ    P,135743             ;; PADDING WITH BLANKS
152443 / 000000,,014503                                       ;
152443 / 170700,,014503 POINT 7,00014503,20                   ;
136360 / 200740,,152443          MOVE  AC3,152443             ;
136361 / 210040,,014566          MOVN  TAC,014566             ;;GET NUMBER OF FREE DD CHANS
136362 / 271040,,000037          ADDI  TAC,000037             ;; AND SUBTRACT FROM TOTAL NUMBER
136363 / 201700,,000002         MOVEI  AC2,000002             ;;PRINT NUMBER OF DD CHANS IN USE
136364 / 260140,,135743         PUSHJ    P,135743             ;; IN 2 SPACES PADDING WITH BLANKS
136365 / 200640,,035271          MOVE  AC1,035271             ;;GET BITS FOR JOBS RUN LATELY
136366 / 200700,,035272          MOVE  AC2,035272             ;
136367 / 246640,,000010          LSHC  AC1,000010             ;;ADJUST HIGHEST JOB'S BIT TO SIGN BIT OF AC1
136370 / 403040,,035271         SETZB  TAC,035271             ;;TAC = # OF JOBS LOGGED IN.  CLEAR RUN BITS.
136371 / 403100,,035272         SETZB TAC1,035272             ;;TAC1= # OF JOBS RUN LATELY.
136372 / 403300,,000005         SETZB  DDB,000005             ;;DDB = CORE OF JOBS RUN LATELY.
                       ;DAT = CORE OF ALL JOBS
136373 / 205400,,040000         MOVSI  WHO,   JNA             ;
136374 / 201200,,000077         MOVEI    J,000077             ;
                       WRUN1:
136375 / 616404,,026114          TDNN  WHO,JBTSTS(J)          ;;IS THIS JOB LOGGED IN?
136376 / 254000,,136411          JRST      136411             ;;NOPE
136377 / 271040,,000001          ADDI  TAC,000001             ;;YES.  COUNT HIM
136400 / 554504,,027120          HLRZ UCHN,JBTADR(J)          ;;GET HIS CORE SIZE
136401 / 326500,,136404         JUMPN UCHN,136404             ;;IS HE SWAPPED OUT?
136402 / 135500,,037612           LDB UCHN,037612             ;;YES.  GET SIZE
136403 / 242500,,000012           LSH UCHN,000012             ;; AND ADJUST TO ACTUAL SIZE (NOT 1K BLOCKS)
136404 / 270240,,000012           ADD  DAT,000012             ;;ADD CORE SIZE TO TOTAL FOR ALL JOBS
136405 / 607640,,400000          TLNN  AC1,400000             ;;HAS THIS JOB RUN LATELY?
136406 / 254000,,136411          JRST      136411             ;;NOPE.  FORGET HIM
136407 / 271100,,000001          ADDI TAC1,000001             ;;YES.  COUNT HIM
136410 / 270300,,000012           ADD  DDB,000012             ;; AND ADD IN HIS CORE
                       WRUN2:
136411 / 246640,,000001          LSHC  AC1,000001             ;;PUT NEXT JOB'S BIT IN SIGN OF AC1
136412 / 367200,,136375          SOJG    J,136375             ;;MOVE ON TO NEXT JOB, IF ANY
136413 / 261140,,000002          PUSH    P,000002             ;;SAVE # OF JOBS RUN LATELY
136414 / 261140,,000005          PUSH    P,000005             ;;SAVE TOTAL CORE SIZE
136415 / 201700,,000004         MOVEI  AC2,000004             ;;WRITE # OF JOBS IN 4 SPACES,
136416 / 260140,,135743         PUSHJ    P,135743             ;; PADDING WITH BLANKS,
136417 / 133000,,000017           IBP      000017             ;; AND SKIP OVER THE COMMA (EG: 12,888)
136420 / 262140,,000001           POP    P,000001             ;;GET BACK TOTAL CORE SIZE,
136421 / 271040,,001777          ADDI  TAC,001777             ;; ROUND IT UP,
136422 / 242040,,777766           LSH  TAC,777766             ;; CONVERT TO 1K BLOCKS,
136423 / 201700,,000004         MOVEI  AC2,000004             ;; AND PRINT IN 4 SPACES
136424 / 260140,,135773         PUSHJ    P,135773             ;; WITH FOLLOWING BLANKS
136425 / 262140,,000001           POP    P,000001             ;;GET BACK # OF JOBS RUN LATELY
136426 / 201700,,000003         MOVEI  AC2,000003             ;; AND WRITE IT IN 3 SPACES,
136427 / 260140,,135743         PUSHJ    P,135743             ;; PADDING WITH BLANKS,
136430 / 133000,,000017           IBP      000017             ;; AND SKIP OVER THE COMMA AGAIN
136431 / 200040,,000006          MOVE  TAC,000006             ;;GET CORE OF JOBS RUN LATELY,
136432 / 271040,,001777          ADDI  TAC,001777             ;; ROUND IT UP,
136433 / 242040,,777766           LSH  TAC,777766             ;; AND CONVERT TO 1K BLOCKS.
136434 / 201700,,000003         MOVEI  AC2,000003             ;;WRITE IT IN 4 SPACES,
136435 / 260140,,135773         PUSHJ    P,135773             ;; PADDING WITH FOLLOWING BLANKS
136436 / 200040,,022200          MOVE  TAC,022200             ;;GET AMOUNT OF AVAILABLE CORE,
136437 / 242040,,777766           LSH  TAC,777766             ;; CONVERT IT TO 1K BLOCKS,
136440 / 201700,,000004         MOVEI  AC2,000004             ;; AND PRINT IT IN 4 SPACES,
136441 / 260140,,135743         PUSHJ    P,135743             ;; PADDING WITH BLANKS
136442 / 201400,,000037         MOVEI  WHO,000037             ;;START OVER WITH FIRST DD CHAN
136443 / 202400,,035274         MOVEM  WHO,035274             ;
136444 / 263140,,000000          POPJ    P,                   ;
136445 /                 ;::    BEND STANFO.WHOSER.
136445 /               ;: DPYSER[J17,SYS] EOF.
136445 /               ;: TTYSER[J17,SYS]
136445 /                 ;::   BEGIN STANFO.TTYSER.
                       ;SCNSER IS ORGANIZED(?) INTO THE FOLLOWING SECTIONS
                       ;	I.	COMMENTARY ON OPERATION AND DATA STRUCTURES
                       ;      II.	SYSTEM INITIALIZATION ROUTINE - SCNINI
                       ;      III.	COMMAND LEVEL ROUTINES
                       ;			A. TTYATT
                       ;			B. TTYCOM
                       ;			C. TTYDCM
                       ;			D. TTYDET
                       ;			E. TTYFND,TTYFNU
                       ;			F. TTYKIL
                       ;			G. TTYSET
                       ;			H. TTYSRC
                       ;			I. TTYSTR
                       ;			J. TTYTLK
                       ;			K. TTYUSR
                       ;     IV.	UUO LEVEL ROUTINES
                       ;			A. DDTIN
                       ;			B. DDTOUT
                       ;			C. TTYUUO
                       ;			D. TTYIN
                       ;			E. TTYOUT
                       ;	V.	INTERRUPT SERVICE ROUTINES
                       ;			A. CTYINT
                       ;			B. SCNINT
                       ;			C. RECINT - ALL LINES RECEIVER INTERRUPT
                       ;				1. TTEDIT - EDITS AND ECHOS
                       ;			D. XMTINT -  TRANSMIT INTERRUPT
                       ;				1. GETCHR
                       ;				2. TYP
                       ;	VI.	PSUEDO-TELETYPE SERVICE ROUTINES
                       ;			A. PTYGET
                       ;			B. PTYCLR
                       ;			C. PTYUUO
                       ;DATA STRUCTURES AND PARAMETERS
                       ;	DEFINED ON CONFIGURATION TAPE
                       ;		SCNLIN=OCTAL NO. OF SCANNER LINES (0 THRU SCNLIN-1)
                       ;	DEFINED BELOW
                       ;		TRANSLATOR TABLE PARAMETERS
                       ;		TTYLEN=SCNLIN+DPYNUM+1	LENGTH OF TTY TRANSLATOR TABLE (INCLUDING CTY)
                       ;		TTYTAB:	BLOCK TTYLEN	TTY TRANSLATOR TABLE
                       ;			SIGN BIT=1 IF COMMAND JUST TYPED
                       ;			BIT 1 = 1  IF DELAYED COMMAND
                       ;			BITS 3-10 = UNUSED
                       ;			BITS 11-17=TALK RING LINE # (PTALK)
                       ;			BITS 18-35=ADDR. OF DEVICE DATA BLOCK 
                       ;				FOR THIS LINE.
                       ;		DEVOPR:	0	SIXBIT PHYSICAL NAME OF OPERATORS
                       ;				CONSOLE SET BY SCNIN0 TO FIRST
                       ;				ACTIVE TTY.
                       ;	DEFINED BELOW
                       ;		LINE NUMBER PARAMETERS
                       ;		TCONLN=SCNLIN	CTY LINE NUMBER
                       ;		MTTYLN=-TTYLEN	-LENGTH OF TRANSLATOR TABLE
                       ;		FSNCHN=SCNCHN*101	CHANNEL ASSIGNMENT FOR
                       ;				FULL DUPLEX SCANNER
                       ;		TTYLST=TTY0DB	FIRST TTY DEVICE DATA BLOCK
                       ;TTY DEVICE DATA BLOCK FORMAT
                       ;THE FOLLOWING ARE DEFINITIONS OF THE RELATIVE LOCATIONS OF THE
                       ;BUFFER PARAMETER WORDS OF THE DEVICE DATA BLOCK FOR EACH BUFFER, WITH
                       ;TTX'BUF AS THE BASE (DETAILED DESCRIPTIN IN SCNDDB COMMENTS):
                       ;		DEVNAM:	PHYSICAL DEVICE NAME SET UP DYNAMICALLY
                       ;			VIA SCNIN0.
                       ;		DEVCHR:	LEFT HALF IS STANDARD
                       ;			BITS 18-24=LINE NUMBER(BYTE POINTER=PUNIT)
                       ;			BITS 25-35=MONITOR BUFFER SIZE + 1(BYTE POINTER=PDVBLN)
                       ;IOS BITS
                       ;		DEVIOS:	LEFT HALF
                       ;			1,2,4,20,40 ARE STANDARD
                       ;WHEN OUTPUT FINISHES
                       ;TILL NEXT INPUT OR INIT (↑O).
                       ;COMMAND MODE.
                       ;TAKER IS BEHIND PUTR
                       ;SIGNAL TO INCREMENT SYNC COUNT
                       ;FOR BUFFER INVOLVED
                       ;		RIGHT HALF BITS (USER MODE)
                       ;ON ALL CHARACTERS EXCEPT ↑C
                       ;NO SPECIAL CHARACTER PROCESSING
                       ;THE INPUT BUFFER IS IN USE.
                       ;		DEVSER:	STANDARD
                       ;		DEVBUF:	STANDARD
                       ;		DEVIAD:	BITS 6-12=HORIZONTAL POSITION (BYTE
                       ;				POINTER = PHPOS).
                       ;			BITS 13-35 ARE STANDARD.
                       ;		DEVOAD:	BITS 0-8=NUMBER OF CHARACTERS TO FIT
                       ;				;INTO OUTPUT BUFFER
                       ;				(POINTER= PFITCH)
                       ;			BITS 13-35 ARE STANDARD
                       ;NON-ZERO TO INCLUDE CALLI DDTIN,OUT
                       ;LINE BITS, LINE # DEFS
                       ;DEFINITION OF LINE CHARACTERISTICS TABLE BITS
                       ;LINTAB MADE BY SYSTEM BUILDER
                       ;FOLLOWING IS FORMAT AS SET UP BY SCNINI
                       ;	XWD BITS,LOGICAL LINE#
                       ;ABOVE ARE "PERMANENT" CHARACTERISTICS
                       ; DPY LINE EDITOR DURING RE-EDITS. SEE LINED.
                       ;ABOVE ARE TEMPORARY BITS, TURNED ON AND OFF BY VARIOUS MEANS
                       ;(BY MONITOR, TYPE-IN COMMANDS, OR PROGRAM)
                       ;BITS BELOW CAN BE SET OR ZEROED BY PROGRAM
                       ; THESE ARE INSERTED HERE BECAUSE THEY AREN'T DEFINED ANYWHERE ELSE
                       ; IN THIS SYSTEM
                       ;AC'S, BYTE POINERS, CTLV
                       ;ACCUMULATOR ASSIGNMENTS
                       ;SPECIAL SYMBOLS
                       ; SHOULD BE ↑V, BUT FOR 37'S
                       ;BYTE POINTERS
                       PFITCH:
136445 / 000006,,000010                                       ;
136445 / 331106,,000010 POINT 9,06000010,8                    ;
                       ;NR OF CHARACTERS TO FIT
                       PHPOS:
136446 / 000006,,000007                                       ;
136446 / 270706,,000007 POINT 7,06000007,12                   ;
                       ;HORIZONTAL POSITION
                       PTALK:
136447 / 000002,,032347                                       ;
136447 / 220702,,032347 POINT 7,02032347,17                   ;
                       ;POINTER TO ANOTHER TTY IN TALK RING
                       ;(SAME SIZE BYTE AS SYS UNIT #)
                       PLASTC:
136450 / 000006,,000015                                       ;
136450 / 000706,,000015 POINT 7,06000015,35                   ;
                       ; FOR ECHO CHECKING ON HDX LINES
                       PCOMIC:
136451 / 000006,,000015                                       ;
136451 / 201106,,000015 POINT 9,06000015,19                   ;
                       ; FOR RESCANNING COMMAND INPUT LINE
                       ;"COMMAND INPUT COUNTER" SAVES TITCTR
                       PLSTLC:
136452 / 000006,,000015                                       ;
136452 / 071106,,000015 POINT 9,06000015,28                   ;
                       ;FOR ↑U DELETION
                       ;TTYPTR CONTAINS THE FOLLOWING BYTES:
                       ;	0-3	SPARE
                       ;	4-10	PTYJOB, FOR NO. OF JOB OWNING THE PTY (IF ANY) USING THE DDB.
                       ;	11-19	PCOMIC, FOR COMMAND RESCAN
                       ;	20-28	PLSTLC, FOR ↑U
                       ;	29-35	PLASTC, FOR ECHO CHECKING HALF DUPLEX LINES
                       CTLV1:
136453 / 260140,,137612         PUSHJ    P,TTYFNU             ;
136454 / 201000,,000200         MOVEI      NOECHO             ;
136455 / 432006,,000002          XORM      DEVIOS(DDB)        ;
136456 / 263140,,000000          POPJ    P,                   ;
                       ;LINBIT, TTYINI
                       ;SCNINI IS CALLED AT SYSTEM INITIALIZATION TIME FROM
                       ;IOGO IN SYSINI VIA DISPATCH TABLE
                       ;IT	1)CLEARS ALL RECEIVER FLAGS,
                       ;	2)CLEARS THE PHYSICAL NAME (DEVNAM) OF ALL UNUSED
                       ;	  (TTYUSE=0) TTY DEVICE DATA BLOCKS,
                       ;	3)SETS DEVIOS TO XWD TPMON+IOFST,0  IN ALL TTY DEVICE
                       ;	  DATA BLOCKS,
                       ;	4)SETS TTYUSE=1 IN ALL TTY DDBS IN THE TRANSLATOR TABLE.
                       LINBIT:
136457 / 000030,,000000           XWD TBXPND!FCS,.-LINBIT     ;
136460 / 000030,,000001           XWD TBXPND!FCS,.-LINBIT     ;
136461 / 000030,,000002           XWD TBXPND!FCS,.-LINBIT     ;
136462 / 000030,,000003           XWD TBXPND!FCS,.-LINBIT     ;
136463 / 000030,,000004           XWD TBXPND!FCS,.-LINBIT     ;
136464 / 000030,,000005           XWD TBXPND!FCS,.-LINBIT     ;
136465 / 000030,,000006           XWD TBXPND!FCS,.-LINBIT     ;
136466 / 000030,,000007           XWD TBXPND!FCS,.-LINBIT     ;
                       ;0-7 ARE MODEL 33
136467 / 000030,,000010           XWD TBXPND!FCS,.-LINBIT     ;
136470 / 000030,,000011           XWD TBXPND!FCS,.-LINBIT     ;
                       ;10,11 DATAPHONES
136471 / 010030,,000012           XWD TBXPND!M37!FCS,.-LINBIT ;
136472 / 010030,,000013           XWD TBXPND!M37!FCS,.-LINBIT ;
136473 / 010030,,000014           XWD TBXPND!M37!FCS,.-LINBIT ;
                       ;12-14 ARE MODEL 37
136474 / 002020,,000015           XWD IMLIN!FCS,.-LINBIT      ;
136475 / 002020,,000016           XWD IMLIN!FCS,.-LINBIT      ;
136476 / 002020,,000017           XWD IMLIN!FCS,.-LINBIT      ;
                       ;15-17 ARE IMLACS
136477 / 400020,,000020           XWD DISLIN!FCS,.-LINBIT     ;
136500 / 400020,,000021           XWD DISLIN!FCS,.-LINBIT     ;
136501 / 400020,,000022           XWD DISLIN!FCS,.-LINBIT     ;
136502 / 400020,,000023           XWD DISLIN!FCS,.-LINBIT     ;
136503 / 400020,,000024           XWD DISLIN!FCS,.-LINBIT     ;
136504 / 400020,,000025           XWD DISLIN!FCS,.-LINBIT     ;
136505 / 020020,,000026           XWD DDDLIN!FCS,.-LINBIT     ;
136506 / 020020,,000027           XWD DDDLIN!FCS,.-LINBIT     ;
136507 / 020020,,000030           XWD DDDLIN!FCS,.-LINBIT     ;
136510 / 020020,,000031           XWD DDDLIN!FCS,.-LINBIT     ;
136511 / 020020,,000032           XWD DDDLIN!FCS,.-LINBIT     ;
136512 / 020020,,000033           XWD DDDLIN!FCS,.-LINBIT     ;
136513 / 020020,,000034           XWD DDDLIN!FCS,.-LINBIT     ;
136514 / 020020,,000035           XWD DDDLIN!FCS,.-LINBIT     ;
136515 / 020020,,000036           XWD DDDLIN!FCS,.-LINBIT     ;
136516 / 020020,,000037           XWD DDDLIN!FCS,.-LINBIT     ;
136517 / 020020,,000040           XWD DDDLIN!FCS,.-LINBIT     ;
136520 / 020020,,000041           XWD DDDLIN!FCS,.-LINBIT     ;
136521 / 020020,,000042           XWD DDDLIN!FCS,.-LINBIT     ;
136522 / 020020,,000043           XWD DDDLIN!FCS,.-LINBIT     ;
136523 / 020020,,000044           XWD DDDLIN!FCS,.-LINBIT     ;
136524 / 020020,,000045           XWD DDDLIN!FCS,.-LINBIT     ;
136525 / 020020,,000046           XWD DDDLIN!FCS,.-LINBIT     ;
136526 / 020020,,000047           XWD DDDLIN!FCS,.-LINBIT     ;
136527 / 020020,,000050           XWD DDDLIN!FCS,.-LINBIT     ;
136530 / 020020,,000051           XWD DDDLIN!FCS,.-LINBIT     ;
136531 / 020020,,000052           XWD DDDLIN!FCS,.-LINBIT     ;
136532 / 020020,,000053           XWD DDDLIN!FCS,.-LINBIT     ;
136533 / 020020,,000054           XWD DDDLIN!FCS,.-LINBIT     ;
136534 / 020020,,000055           XWD DDDLIN!FCS,.-LINBIT     ;
136535 / 020020,,000056           XWD DDDLIN!FCS,.-LINBIT     ;
136536 / 020020,,000057           XWD DDDLIN!FCS,.-LINBIT     ;
136537 / 020020,,000060           XWD DDDLIN!FCS,.-LINBIT     ;
136540 / 020020,,000061           XWD DDDLIN!FCS,.-LINBIT     ;
136541 / 020020,,000062           XWD DDDLIN!FCS,.-LINBIT     ;
136542 / 020020,,000063           XWD DDDLIN!FCS,.-LINBIT     ;
136543 / 020020,,000064           XWD DDDLIN!FCS,.-LINBIT     ;
136544 / 020020,,000065           XWD DDDLIN!FCS,.-LINBIT     ;
136545 / 020020,,000066           XWD DDDLIN!FCS,.-LINBIT     ;
136546 / 020020,,000067           XWD DDDLIN!FCS,.-LINBIT     ;
136547 / 020020,,000070           XWD DDDLIN!FCS,.-LINBIT     ;
136550 / 020020,,000071           XWD DDDLIN!FCS,.-LINBIT     ;
136551 / 020020,,000072           XWD DDDLIN!FCS,.-LINBIT     ;
136552 / 020020,,000073           XWD DDDLIN!FCS,.-LINBIT     ;
136553 / 020020,,000074           XWD DDDLIN!FCS,.-LINBIT     ;
136554 / 020020,,000075           XWD DDDLIN!FCS,.-LINBIT     ;
136555 / 020020,,000076           XWD DDDLIN!FCS,.-LINBIT     ;
136556 / 020020,,000077           XWD DDDLIN!FCS,.-LINBIT     ;
136557 / 020020,,000100           XWD DDDLIN!FCS,.-LINBIT     ;
136560 / 020020,,000101           XWD DDDLIN!FCS,.-LINBIT     ;
136561 / 020020,,000102           XWD DDDLIN!FCS,.-LINBIT     ;
136562 / 020020,,000103           XWD DDDLIN!FCS,.-LINBIT     ;
136563 / 020020,,000104           XWD DDDLIN!FCS,.-LINBIT     ;
136564 / 020020,,000105           XWD DDDLIN!FCS,.-LINBIT     ;
136565 / 020020,,000106           XWD DDDLIN!FCS,.-LINBIT     ;
136566 / 020020,,000107           XWD DDDLIN!FCS,.-LINBIT     ;
136567 / 020020,,000110           XWD DDDLIN!FCS,.-LINBIT     ;
136570 / 020020,,000111           XWD DDDLIN!FCS,.-LINBIT     ;
136571 / 020020,,000112           XWD DDDLIN!FCS,.-LINBIT     ;
136572 / 020020,,000113           XWD DDDLIN!FCS,.-LINBIT     ;
136573 / 020020,,000114           XWD DDDLIN!FCS,.-LINBIT     ;
136574 / 020020,,000115           XWD DDDLIN!FCS,.-LINBIT     ;
136575 / 020020,,000116           XWD DDDLIN!FCS,.-LINBIT     ;
136576 / 020020,,000117           XWD DDDLIN!FCS,.-LINBIT     ;
136577 / 200000,,000120           XWD CTYLIN,.-LINBIT         ;
136600 / 000000,,000121           XWD 0,.-LINBIT              ;
136601 / 000000,,000122           XWD 0,.-LINBIT              ;
136602 / 000000,,000123           XWD 0,.-LINBIT              ;
136603 / 000000,,000124           XWD 0,.-LINBIT              ;
136604 / 000000,,000125           XWD 0,.-LINBIT              ;
136605 / 000000,,000126           XWD 0,.-LINBIT              ;
136606 / 000000,,000127           XWD 0,.-LINBIT              ;
136607 / 000000,,000130           XWD 0,.-LINBIT              ;
136610 / 000000,,000131           XWD 0,.-LINBIT              ;
136611 / 000000,,000132           XWD 0,.-LINBIT              ;
136612 / 000000,,000133           XWD 0,.-LINBIT              ;
136613 / 000000,,000134           XWD 0,.-LINBIT              ;
136614 / 000000,,000135           XWD 0,.-LINBIT              ;
136615 / 000000,,000136           XWD 0,.-LINBIT              ;
136616 / 000000,,000137           XWD 0,.-LINBIT              ;
136617 / 000000,,000140           XWD 0,.-LINBIT              ;
136620 / 000000,,000141           XWD 0,.-LINBIT              ;
136621 / 000000,,000142           XWD 0,.-LINBIT              ;
136622 / 000000,,000143           XWD 0,.-LINBIT              ;
136623 / 000000,,000144           XWD 0,.-LINBIT              ;
                       ;JUST IN CASE SOMEONE LOOKS HERE
                       ;END OF BIT TABLE
                       TTYINI:
136624 / 260140,,126352         PUSHJ    P,126352             ;;LET JAM THROW AWAY THE DPY FREE STORAGE
                       ;BEFORE WE DO OUR BUGEY!
136625 / 260140,,145571         PUSHJ    P,DILINI             ;
                       ;INITIALIZE DIALER STUFF
136626 / 205100,,777657         MOVSI LINE,777657             ;;REAL TTY'S ONLY
                       SCN0:
136627 / 200042,,136457          MOVE  TAC,LINBIT(LINE)       ;;GET PERMANENT LINE CHARACTERISTICS
136630 / 542042,,017717          HRRM  TAC,LINTAB(LINE)       ;;SET LOG. LINE NUMBERS
136631 / 437042,,017717          IORB  TAC,LINTAB(LINE)       ;;SET SIGNIFICANT BITS
136632 / 621040,,045543           TLZ  TAC,045543             ;;ZAP INSIGNIFICANT BITS
136633 / 502042,,017717          HLLM  TAC,LINTAB(LINE)       ;;LEAVING REST OF BITS AS THEY WERE
136634 / 253100,,136627         AOBJN LINE,  SCN0             ;
136635 / 712200,,003605          CONO  CTY,003605             ;; CLEAR	CTY, ASSIGN CHANNEL
136636 / 731200,,000015          CONO  DKB,000015             ;; CLEAR DDD TTY SCANNER AND ASSIGN CHANNEL
136637 / 260140,,136754         PUSHJ    P,136754             ;;DEVICE DEPENDENT SCANNER INIT
136640 / 402000,,032347         SETZM      TTYTAB             ;
136641 / 402000,,026105         SETZM      026105             ;;NO COMMANDS TO PROCESS
152230 / 032347,,032350           XWD TTYTAB,TTYTAB+1         ;
136642 / 200040,,152230          MOVE  TAC,152230             ;
136643 / 251040,,032513           BLT  TAC,032513             ;;CLEAR ALL DDB ADDRESSES
152035 / 000120,,017574                                       ;
136644 / 200040,,152035          MOVE  TAC,152035             ;;INIT CTY TO USE DDB IN ALLDAT
136645 / 202040,,032467         MOVEM  TAC,032467             ;;  BH 5/6/74
136646 / 402000,,032346         SETZM      PAGNOW             ;
136647 / 402000,,032246         SETZM      032246             ;;CLEAR ALL BEEP DURATIONS
152227 / 032246,,032247                                       ;
136650 / 200040,,152227          MOVE  TAC,152227             ;
136651 / 251040,,032345           BLT  TAC,032345             ;
136652 / 331000,,017714         SKIPL      TTYLOK             ;
136653 / 332000,,000567         SKIPE      MAINTM             ;
136654 / 254000,,136660          JRST      136660             ;;DON'T INIT AUDIO SW IF SYS NOT FOR REAL
136655 / 402000,,032146         SETZM       ASTAB             ;
152226 / 032146,,032147                                       ;
136656 / 200040,,152226          MOVE  TAC,152226             ;
136657 / 251040,,032245           BLT  TAC,032245             ;
                       NOASIN:
136660 / 553000,,017577         HRRZS      017577             ;;CLEAR DDB CHAIN
136661 / 403000,,017576         SETZB      017576             ;;SO DDB WILL GET FLUSHED
                       ;	MOVEI	DDB,TTYLST		;2 LINES COMMENTED OUT BH 5/6/74
                       ;	PUSHJ	P,TTYKIL		;HERE.
136662 / 201200,,000077         MOVEI ITEM,000077             ;;REGENERATE DDB'S FOR ALL LIVE JOBS
                       SCNC1:
136663 / 200044,,026114          MOVE  TAC,JBTSTS(ITEM)       ;
136664 / 607040,,040000          TLNN  TAC,040000             ;;IS THIS A JOB
136665 / 254000,,136706          JRST      136706             ;;NO, IGNORE HIM.
136666 / 570104,,027320          HRRE LINE,JBTLIN(ITEM)       ;;GET LINE HE IS USING
136667 / 321100,,136700         JUMPL LINE,136700             ;;DETACHED LINE
136670 / 260140,,140123         PUSHJ    P,140123             ;;GET HIM A DDB
136671 / 254000,,136706          JRST      136706             ;;IF NO DDB AVAILABLE OR NO LINE OR DETACHED
136672 / 260140,,137231         PUSHJ    P,137231             ;;ATTACH JOB
136673 / 603100,,004000          TLNE LINE,PTYLIN             ;
136674 / 332002,,017743         SKIPE      017743(LINE)       ;;IS THIS PTY REALLY ATTACHED TO SOMEONE?
136675 / 254000,,136706          JRST      136706             ;;YES
136676 / 260140,,137532         PUSHJ    P,137532             ;;NO, DETACH HIM.
136677 / 254000,,136706          JRST      136706             ;;NEXT PLEASE
                       SCNC2:
136700 / 603040,,001000          TLNE  TAC,001000             ;;IS IT AN UPPER SEGMENT?
136701 / 254000,,136706          JRST      136706             ;;YES, NO DDB FOR HIM
136702 / 211100,,000001         MOVNI LINE,000001             ;;YES, GET A DETACHED LINE
136703 / 260140,,140123         PUSHJ    P,140123             ;;GET DDB
136704 / 254000,,136706          JRST       SCNC3             ;
136705 / 137200,,037575           DPB ITEM, PJOBN             ;
                       SCNC3:
136706 / 367200,,136663          SOJG ITEM, SCNC1             ;
                       ;MORE TTYINI, SCNINI
                       ; HERE WE GET THE DDB'S FOR THE REST OF THE TTY'S (I.E., NOT
                       ; THE ONES ATTATCHED TO JOBS ALREADY).
136707 / 205100,,777657         MOVSI LINE,777657             ;;SET DDB USE BITS FROM TRANSLATOR TABLE
                       SCN2:
136710 / 205000,,600000         MOVSI      600000             ;
136711 / 412002,,032347        ANDCAM      TTYTAB(LINE)       ;;NO COMMAND WAITING !
136712 / 550040,,000002          HRRZ  TAC,  LINE             ;
136713 / 305040,,000121         CAIGE  TAC,000121             ;;PTY LINE?
136714 / 254000,,136725          JRST      NOTPTY             ;
136715 / 336002,,032347         SKIPN      TTYTAB(LINE)       ;;DOES HE HAVE A DDB
136716 / 254000,,136722          JRST        SCN6             ;
136717 / 505040,,004202          HRLI  TAC,004202             ;; MAGIC PTY BITS
136720 / 202042,,017717         MOVEM  TAC,LINTAB(LINE)       ;; INITIALIZE THIS PTY
136721 / 254000,,136747          JRST      136747             ;; STUFF IN 0'S
                       SCN6:
136722 / 402002,,017743         SETZM      017743(LINE)       ;
136723 / 402002,,017717         SETZM      LINTAB(LINE)       ;;CLEAR PTY BITS
136724 / 254000,,136747          JRST        SCN3             ;
                       NOTPTY:
136725 / 332002,,032347         SKIPE      TTYTAB(LINE)       ;; IS THERE A DDB ADDRESS THERE?
136726 / 254000,,136747          JRST        SCN3             ;
136727 / 332000,,017714         SKIPE      TTYLOK             ;
136730 / 306040,,000120          CAIN  TAC,TCONLN             ;
136731 / 304000,,000000          CAIA                         ;
136732 / 254000,,136747          JRST        SCN3             ;
136733 / 261140,,000002          PUSH    P,  LINE             ;
136734 / 550100,,000002          HRRZ LINE,  LINE             ;
136735 / 301100,,000020          CAIL LINE, DPYL0             ;
136736 / 301100,,000120          CAIL LINE,000120             ;
136737 / 304000,,000000          CAIA                         ;
136740 / 254000,,136752          JRST      136752             ;;FOR DPYS ONLY
136741 / 302100,,000007          CAIE LINE, IMSSS             ;
136742 / 306100,,000012          CAIN LINE,APLINE             ;
136743 / 254000,,136746          JRST      136746             ;;DON'T MAKE DDB (I.E. DON'T TYPE OUT) ON THESE LINES
136744 / 260140,,140123         PUSHJ    P,140123             ;;MAKE TTY DDB AND SET UP TTYTAB
136745 / 255000,,000000          JFCL                         ;
136746 / 262140,,000002           POP    P,  LINE             ;
                       SCN3:
136747 / 253100,,136710         AOBJN LINE,  SCN2             ;
136750 / 402000,,017712         SETZM      017712             ;;SO INIT. MESSAGE WILL GET TO EVERYONE.
136751 / 263140,,000000          POPJ    P,                   ;;ALL DONE
                       SCN5:
136752 / 262140,,000002           POP    P,  LINE             ;
136753 / 254000,,136747          JRST        SCN3             ;
                       ;DEVICE DEPENDENT PORTION OF INITIALIZATION CODE
                       ;CALL:	MOVEI	TAC,CHANNEL NUMBER
                       ;	PUSHJ	P,SCNINI
                       SCNINI:
136754 / 201040,,100000         MOVEI  TAC,100000             ;
136755 / 730200,,004010          CONO DCSA,004010             ;;RELEASE XMITTER, RECEIVER
136756 / 730300,,001000         CONSZ DCSA,  1000             ;
136757 / 730200,,004000          CONO DCSA,  4000             ;
136760 / 730300,,000010         CONSZ DCSA,    10             ;
136761 / 730440,,000002         DATAI DCSB,  LINE             ;
136762 / 367040,,136756          SOJG  TAC,136756             ;
136763 / 730200,,000505          CONO DCSA,000505             ;;ASSIGN INTERRUPT CHANNELS
136764 / 263140,,000000          POPJ    P,                   ;
                       ;TTYCOM, TTYCM, CNTCOM, COMBCK
                       ;ROUTINE TO SETUP AC DDB TO ADDRESS OF TTY WHICH HAS TYPED A COMMAND
                       ;AC DAT TO BYTE POINTER TO OUTPUT BUFFER FOR COMMAND MESSAGES
                       ;AC ITEM TO JOB NUMBER TTY IS ATTACHED TO
                       ;CALL:	PUSHJ P,TTYCOM
                       ;	NONE FOUND
                       ;	AC'S SETUP
                       ;CALLED FROM COMMAND
                       TTYCOM:
136765 / 335100,,017712        SKIPGE LINE,LINSAV             ;
136766 / 254000,,136771          JRST      136771             ;;GIVE SOMEONE ELSE A CHANCE
136767 / 205100,,777633         MOVSI LINE,MTTYLN             ;
136770 / 331042,,032347         SKIPL  TAC,TTYTAB(LINE)       ;
                       TTYCM1:
136771 / 253100,,136770         AOBJN LINE,136770             ;
136772 / 202100,,017712         MOVEM LINE,LINSAV             ;
136773 / 327100,,037403         JUMPG LINE, CPOPJ             ;
136774 / 550302,,032347          HRRZ  DDB,TTYTAB(LINE)       ;
136775 / 322300,,137026         JUMPE  DDB,137026             ;;IT HAPPENS!!!!
136776 / 200246,,000004          MOVE  DAT,DEVMOD(DDB)        ;
136777 / 607240,,020000          TLNN  DAT,020000             ;;IS HE ATTACHED TO IT BY JOB?
137000 / 606240,,600000          TRNN  DAT,600000             ;;NO, ASSIGNED OR INITED TTY'S CAN'T TYPE COMMANDS
137001 / 254000,,137003          JRST      137003             ;
137002 / 254000,,137026          JRST      137026             ;;(THIS CAN'T HAPPEN (IT SAYS SO IN COMSET))
137003 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;SO GETCHR CAN BE CALLED FROM COMCON
137004 / 200106,,000022          MOVE LINE,TITCTR(DDB)        ;
137005 / 137100,,136451           DPB LINE,136451             ;;SAVE COMMAND INPUT COUNTER
137006 / 135100,,037577           LDB LINE,037577             ;;LINE NO.
137007 / 135200,,037575           LDB    J,037575             ;;JOB NO. TTY ATTACHED TO
137010 / 205400,,020000         MOVSI  CHR,TTYATC             ;
137011 / 616406,,000004          TDNN  CHR,DEVMOD(DDB)        ;
137012 / 201200,,000000         MOVEI    J,                   ;;NO JOB ATTACHED TO THIS TTY
137013 / 607040,,200000          TLNN  TAC,200000             ;;IS THIS A DELAYED COMMAND?
137014 / 254000,,037401          JRST      037401             ;;NO, RETURN TO SCAN IT
137015 / 205040,,200000         MOVSI  TAC,200000             ;;INDICATE NO LONGER DELAYED COMMAND
137016 / 412042,,032347        ANDCAM  TAC,TTYTAB(LINE)       ;
137017 / 254000,,037401          JRST      037401             ;;RETURN TO COMMAND SCAN
                       TTYCM:
137020 / 200100,,017712          MOVE LINE,017712             ;;HERE WHEN COMMAND MUST BE DELAYED
137021 / 205300,,200000         MOVSI  DDB,200000             ;;INDICATE DELAYED COMMAND
137022 / 437302,,032347          IORB  DDB,TTYTAB(LINE)       ;
137023 / 260140,,137546         PUSHJ    P,137546             ;;BACK UP TO START OF COMMAND
137024 / 200100,,017712          MOVE LINE,017712             ;;TRESCN HAS CALLED STLNAC
137025 / 254000,,136771          JRST      136771             ;;LOOK FOR OTHER COMMAND TO PROCESS
                       TTYCM2:
137026 / 260140,,000316         PUSHJ    P,PUSHIT             ;
137027 / 261140,,000006          PUSH    P,   DDB             ;
137030 / 261140,,000002          PUSH    P,  LINE             ;
137031 / 260140,,044066         PUSHJ    P,DISMES             ;
137044 / 262140,,000001           POP    P,   TAC             ;
137045 / 260140,,044170         PUSHJ    P,DISLOC             ;
137046 / 260140,,044066         PUSHJ    P,DISMES             ;
137051 / 262140,,000001           POP    P,000001             ;
137052 / 260140,,044170         PUSHJ    P,DISLOC             ;
137053 / 260140,,044076         PUSHJ    P,044076             ;
137054 / 260140,,000341         PUSHJ    P, POPIT             ;
137055 / 205300,,600000         MOVSI  DDB,600000             ;;CLEAR THESE BITS!
137056 / 370000,,026105           SOS      026105             ;;FIX COMCNT
137057 / 412302,,032347        ANDCAM  DDB,TTYTAB(LINE)       ;
137060 / 260140,,137150         PUSHJ    P,COMBCK             ;
137061 / 260140,,137063         PUSHJ    P,137063             ;;MAKE SURE ALL IS OK
137062 / 254000,,136771          JRST      136771             ;;LET COMMAND FIGURE OUT THAT COMCNT IS MAYBE NOW ZERO
                       ;WELL, WE FIXED THIS PROBLEM, I THINK. 12/1/73 
                       ;THIS AWFUL KLUDGE IS TO HELP SOLVE THE COMCNT MYSTERY
                       ;IF IT STAYS FOR MORE THAN TWO WEEKS, I SHOULD BE SHOT.  REG 10/5/73
                       CNTCOM:
137063 / 261140,,000001          PUSH    P,   TAC             ;
137064 / 261140,,000002          PUSH    P,  TAC1             ;
137065 / 700640,,000002          CONI   PI,  TAC1             ;
137066 / 405100,,000004          ANDI TAC1,000004             ;;SCANNER CHANNEL ACTIVE BIT
137067 / 261140,,000002          PUSH    P,  TAC1             ;
137070 / 700600,,001004          CONO   PI,001004             ;;TURN OFF THE SCANNER
137071 / 201100,,000000         MOVEI TAC1,                   ;
137072 / 205040,,777633         MOVSI  TAC,MTTYLN             ;
137073 / 335001,,032347        SKIPGE      TTYTAB(TAC)        ;
137074 / 271100,,000001          ADDI TAC1,     1             ;
137075 / 253040,,137073         AOBJN  TAC,137073             ;
137076 / 316100,,026105          CAMN TAC1,COMCNT             ;
137077 / 254000,,137143          JRST      CNTCM1             ;
137100 / 260140,,000316         PUSHJ    P,PUSHIT             ;
137101 / 260140,,044066         PUSHJ    P,DISMES             ;
137112 / 200043,,777755          MOVE  TAC,777755(P)          ;
137113 / 260140,,044170         PUSHJ    P,DISLOC             ;
137114 / 260140,,044066         PUSHJ    P,DISMES             ;
137117 / 200040,,026105          MOVE  TAC,COMCNT             ;
137120 / 260140,,044170         PUSHJ    P,DISLOC             ;
137121 / 260140,,044102         PUSHJ    P,DISTAB             ;
137122 / 200043,,777763          MOVE  TAC,777763(P)          ;
137123 / 260140,,044170         PUSHJ    P,DISLOC             ;
137124 / 260140,,044076         PUSHJ    P,044076             ;
137125 / 200040,,032143          MOVE  TAC,TTCBCK             ;
137126 / 260140,,044200         PUSHJ    P,DISOCT             ;
137127 / 260140,,044102         PUSHJ    P,DISTAB             ;
137130 / 200040,,032144          MOVE  TAC,032144             ;
137131 / 260140,,044200         PUSHJ    P,DISOCT             ;
137132 / 260140,,044102         PUSHJ    P,DISTAB             ;
137133 / 200040,,032145          MOVE  TAC,032145             ;
137134 / 260140,,044200         PUSHJ    P,DISOCT             ;
137135 / 260140,,044076         PUSHJ    P,044076             ;
                       COMBUG:
137136 / 254000,,137141          JRST      137141             ;;PATCH HERE TO STOP THE WORLD
137137 / 260140,,043761         PUSHJ    P,043761             ;
137140 / 260140,,000347         PUSHJ    P,000347             ;
137141 / 260140,,000341         PUSHJ    P, POPIT             ;
137142 / 202100,,026105         MOVEM TAC1,026105             ;;FIX IT!
                       CNTCM1:
137143 / 262140,,000002           POP    P,  TAC1             ;
137144 / 700602,,002000          CONO   PI,  2000(TAC1)       ;
137145 / 262140,,000002           POP    P,  TAC1             ;
137146 / 262140,,000001           POP    P,   TAC             ;
137147 / 263140,,000000          POPJ    P,                   ;
                       ;THE 230VERKILL, CALL IMMED AFTER IORM OR ANDCAM OF TTYTAB
                       COMBCK:
137150 / 261140,,000000          PUSH    P,                   ;
137151 / 261140,,000001          PUSH    P,   TAC             ;
137152 / 200043,,777776          MOVE  TAC,777776(P)          ;
137153 / 200001,,777776          MOVE      777776(TAC)        ;;FETCH IORM OR ANDCAM
137154 / 262140,,000001           POP    P,   TAC             ;
137155 / 541020,,000000          HRRI      @                  ;
137156 / 621000,,000037           TLZ          37             ;
137157 / 261140,,000000          PUSH    P,                   ;
152774 / 270400,,000000                                       ;
137160 / 135000,,152774           LDB      152774             ;;AC FIELD
137161 / 336000,,000000         SKIPN                         ;
137162 / 334003,,777777         SKIPA      777777(P)          ;
137163 / 200020,,000000          MOVE      @                  ;
153470 / 262140,,000000           POP    P,                   ;;NOT COM BIT
153471 / 262140,,000000           POP    P,                   ;
153472 / 263140,,000000          POPJ    P,                   ;
137164 / 325000,,153470        JUMPGE      153470             ;
137165 / 262140,,000000           POP    P,                   ;;GET INSTRUCTION BACK
137166 / 261140,,000001          PUSH    P,   TAC             ;
137167 / 261140,,000002          PUSH    P,  TAC1             ;
137170 / 261140,,000015          PUSH    P,   AC1             ;
137171 / 607000,,020000          TLNN      020000             ;;IORM=436, ANDCAM=412 (SKIP IF IORM)
137172 / 621000,,400000           TLZ      400000             ;;INDICATE ANDCAM
137173 / 550040,,000000          HRRZ  TAC,                   ;
137174 / 275040,,032347          SUBI  TAC,032347             ;;LINE NUMBER
137175 / 321040,,137214         JUMPL  TAC,COMBCX             ;
137176 / 301040,,000145          CAIL  TAC,TTPLEN             ;
137177 / 254000,,137214          JRST      COMBCX             ;
137200 / 231040,,000044         IDIVI  TAC,000044             ;;TAC←INDEX INTO TTCBCK, TAC1←SHIFT CNT
137201 / 201640,,000001         MOVEI  AC1,     1             ;
137202 / 242642,,000000           LSH  AC1,      (TAC1)       ;
137203 / 331000,,000000         SKIPL                         ;
137204 / 412641,,032143        ANDCAM  AC1,TTCBCK(TAC)        ;
137205 / 335000,,000000        SKIPGE                         ;
137206 / 436641,,032143          IORM  AC1,TTCBCK(TAC)        ;
                       COMBCY:
137207 / 262140,,000015           POP    P,   AC1             ;
137210 / 262140,,000002           POP    P,  TAC1             ;
137211 / 262140,,000001           POP    P,   TAC             ;
137212 / 262140,,000000           POP    P,                   ;
137213 / 263140,,000000          POPJ    P,                   ;
                       COMBCX:
137214 / 260140,,000316         PUSHJ    P,PUSHIT             ;
137215 / 260140,,044066         PUSHJ    P,DISMES             ;
137225 / 200043,,777762          MOVE  TAC,777762(P)          ;
137226 / 260140,,044170         PUSHJ    P,DISLOC             ;
137227 / 260140,,044076         PUSHJ    P,044076             ;
137230 / 254000,,137207          JRST      COMBCY             ;
                       ;END FTTTYBUG
                       ;TTYATI, TTYSUB
                       ;ROUTINE TO ATTACH TTY TO A JOB
                       ;CALL:	MOVE DDB,ADDRESS OF TTY DEVICE DATA BLOCK
                       ;	MOVE ITEM,JOB NUMBER
                       ;	PUSHJ P,TTYATT
                       ;	OK RETURN	;DDB, DAT AND TRANSLATOR TABLE SET
                       ;CALLED FROM COMCON (ATTACH) AND COMCSS (JOBINI).
                       ;ON OK RETURN	1)SETS TTYATC
                       ;		3)PUTS ADDRESS OF ATTACHED DDB INTO DDB.
                       ;		4)SETS PHYSICAL NAME TO SIXBIT /TTY LINE #/
                       ;		  OR SIXBIT /CTY/,
                       ;		5)SETS DEVOPR IF IT IS NON-ZERO.
                       ;COME HERE TO ATTACH TTY IN DDB TO JOB IN ITEM.
                       TTYATI:
137231 / 260140,,140030         PUSHJ    P,140030             ;;SETUP LINE
137232 / 202104,,027320         MOVEM LINE,JBTLIN(ITEM)       ;;SET LINE # FOR JOB
137233 / 137200,,037575           DPB ITEM,037575             ;;SET JOB NUMBER OF OWNER
137234 / 205040,,020000         MOVSI  TAC,020000             ;;MAKE IT ATTACHED TO JOB
137235 / 436046,,000004          IORM  TAC,DEVMOD(DDB)        ;
137236 / 205000,,002000         MOVSI      002000             ;;MAKE DDB ATTACHED TO TTY
137237 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
137240 / 263140,,000000          POPJ    P,                   ;
                       ;CLOCK LEVEL (CONSOLE) "TTY" COMMAND
                       TTYSUB:
137241 / 553003,,000000         HRRZS            (P)          ;;USE STACK AS FLAG
                       TTYSB1:
137242 / 260140,,042552         PUSHJ    P,042552             ;;READ TTY COMMAND
153756 / 302400,,000055          CAIE  TEM,000055             ;;ALLOW - ALSO
153757 / 254000,,042706          JRST      042706             ;;NOPE
153760 / 260140,,042607         PUSHJ    P,042607             ;;YES, GOBBLE TO NEXT CHAR SO WE DON'T LOOP
153761 / 563003,,000000         HRROS            (P)          ;;FLAG -
153762 / 254000,,137242          JRST      TTYSB1             ;
137243 / 322100,,153756         JUMPE TAC1,153756             ;
151533 / 565700,,000000                                       ;
137244 / 316100,,151533          CAMN TAC1,151533             ;
153244 / 563003,,000000         HRROS            (P)          ;;FLAG 5657 SEEN
153245 / 254000,,137242          JRST      TTYSB1             ;
137245 / 254000,,153244          JRST      153244             ;;NOTE THAT REPEATED 'NO' IS OK, BUT DOESN'T COMPLEMENT
137246 / 205040,,777771         MOVSI  TAC,777771             ;
                       TCOMLP:
137247 / 313101,,137274         CAMLE TAC1,TCOMND(TAC)        ;
137250 / 253040,,137247         AOBJN  TAC,137247             ;
137251 / 325040,,042645        JUMPGE  TAC,042645             ;;ERROR, COMMAND NOT FOUND
137252 / 316101,,137274          CAMN TAC1,TCOMND(TAC)        ;
137253 / 254000,,137272          JRST      TCMGOT             ;
137254 / 200700,,000002          MOVE  AC2,  TAC1             ;
151610 / 770000,,000000                                       ;
137255 / 334640,,151610         SKIPA  AC1,151610             ;
                       TCMMSK:
137256 / 240640,,777772           ASH  AC1,777772             ;
137257 / 420700,,000015         ANDCM  AC2,   AC1             ;
137260 / 326700,,137256         JUMPN  AC2,TCMMSK             ;
137261 / 200701,,137274          MOVE  AC2,TCOMND(TAC)        ;
137262 / 404700,,000015           AND  AC2,   AC1             ;
137263 / 312700,,000002          CAME  AC2,000002             ;;PARTIAL MATCH ON CURRENT WORD?
137264 / 254000,,042645          JRST      042645             ;;NO
137265 / 574700,,000001          HLRE  AC2,   TAC             ;
137266 / 342700,,137272          AOJE  AC2,137272             ;;ONLY COMMAND LEFT?
137267 / 404641,,137275           AND  AC1,137275(TAC)        ;
137270 / 316640,,000002          CAMN  AC1,  TAC1             ;
137271 / 254000,,042645          JRST      042645             ;;TOO MANY MATCHES
                       TCMGOT:
137272 / 260140,,140030         PUSHJ    P,STLNAC             ;
137273 / 254021,,137303          JRST      @TCOMDS(TAC)       ;
                       ;TTYSUB TABLES
                       ;"TTY" COMMANDS, MUST BE IN ALPHABETICAL ORDER
                       TCOMND:
                       TCOMDS:
137303 / 000000,,137321                                       ;
137304 / 000000,,137312                                       ;
137305 / 000000,,137325                                       ;
137306 / 000000,,137331                                       ;
137307 / 000000,,137344                                       ;
137310 / 000000,,137335                                       ;
137311 / 000000,,137361                                       ;
                       ;FILL, ECHO, FULL, TABS, TIME, WHO
                       FILTTY:
137312 / 603100,,420000          TLNE LINE,420000             ;;THESE GUYS MAY SCREW UP
137313 / 263140,,000000          POPJ    P,                   ;
137314 / 335003,,000000        SKIPGE            (P)          ;;'NO' TYPED?
137315 / 625100,,100000          TLZA LINE,100000             ;;YES, DO NOFILL
137316 / 661100,,100000           TLO LINE,100000             ;;FILL CR'S
                       STOLIN:
137317 / 502102,,017717          HLLM LINE,LINTAB(LINE)       ;
137320 / 263140,,000000          POPJ    P,                   ;
                       TTECHO:
137321 / 335003,,000000        SKIPGE            (P)          ;;'NO' TYPED?
137322 / 665100,,000004          TLOA LINE,000004             ;;YES, SET AS FULL DUPLEX
137323 / 621100,,000004           TLZ LINE,000004             ;;CLEAR FULL DUPLEX
137324 / 254000,,137317          JRST      STOLIN             ;
                       TTFULL:
137325 / 335003,,000000        SKIPGE            (P)          ;
137326 / 625100,,000020          TLZA LINE,   FCS             ;
137327 / 661100,,000020           TLO LINE,   FCS             ;
137330 / 254000,,137317          JRST      STOLIN             ;
                       TTTAB:
137331 / 335003,,000000        SKIPGE            (P)          ;
137332 / 665100,,000010          TLOA LINE,000010             ;;EXPAND
137333 / 621100,,000010           TLZ LINE,000010             ;;DON'T EXPAND
137334 / 254000,,137317          JRST      STOLIN             ;
                       TTYUPD:
137335 / 322200,,037403         JUMPE    J,037403             ;;IF NO JOB, NO XTIME
137336 / 205040,,400000         MOVSI  TAC,400000             ;;THIS IS THE NO-UPDATE BIT IN XTIME
137337 / 335103,,000000        SKIPGE TAC1,      (P)          ;;'NO' TYPED?
137340 / 436044,,031443           ORM  TAC, XTIME(J)          ;;YES.  SET NO-UPDATE BIT.
137341 / 321100,,137343         JUMPL TAC1,137343             ;;'NO' TYPED?
137342 / 412044,,031443        ANDCAM  TAC, XTIME(J)          ;;NO.  CLEAR NO-UPDATE BIT.
137343 / 263140,,000000          POPJ    P,                   ;
                       TTYTIM:
137344 / 322200,,037403         JUMPE    J,037403             ;;NO JOB, NO XTIME
137345 / 205040,,400000         MOVSI  TAC,400000             ;;THE NO-UPDATE BIT IN XTIME
137346 / 331103,,000000         SKIPL TAC1,      (P)          ;;'NO' TYPED?
137347 / 270044,,031243           ADD  TAC, TTIME(J)          ;;NO.  UPDATE XTIME AND SET NO-UPDATE BIT
137350 / 202044,,031443         MOVEM  TAC, XTIME(J)          ;;IF 'NO' TYPED, CLEAR XTIME AND SET NO-UPDATE.
137351 / 553004,,012230         HRRZS      DSKOPS(J)          ;;MAKE ALL DISK OPERATIONS "RECENT"
137352 / 400040,,000000          SETZ  TAC,                   ;;ASSUME NO WAIT TIME
137353 / 321100,,137357         JUMPL TAC1,137357             ;;'NO' TYPED?
137354 / 507004,,012230          HRLS      DSKOPS(J)          ;;NO.  MAKE NO DISK OPS RECENT
137355 / 335044,,031543        SKIPGE  TAC,JBTWAT(J)          ;;GET WAIT TIME
137356 / 270040,,024635           ADD  TAC,024635             ;;MAKE IT HONEST
                       TTYTI1:
137357 / 202044,,031643         MOVEM  TAC,JB2WAT(J)          ;;SAVE CURRENT WAIT TIME
137360 / 263140,,000000          POPJ    P,                   ;
                       TTYWHO:
137361 / 331003,,000000         SKIPL            (P)          ;;'NO' TYPED?
137362 / 254000,,137365          JRST      137365             ;;NO NO.
                       TTWHSY:
137363 / 201740,,014503         MOVEI  AC3,014503             ;;TYPE OUT SYSTEM WHO LINE
137364 / 254000,,137407          JRST       UWHO1             ;
                       UWHO:
137365 / 260140,,042747         PUSHJ    P, DECIN             ;
137366 / 334100,,000004         SKIPA TAC1,000004             ;;NO ARG, USE OUR JOB #
137367 / 254000,,042645          JRST      042645             ;;LOSE
137370 / 322100,,137363         JUMPE TAC1,137363             ;;0 ARG, OR NO ARG & NOT LOGGED IN
137371 / 301100,,000100          CAIL TAC1,000100             ;;TOO BIG?
137372 / 254000,,052440          JRST      052440             ;;YES
137373 / 200042,,026114          MOVE  TAC,JBTSTS(TAC1)       ;
137374 / 607040,,040000          TLNN  TAC,040000             ;;IS IT A JOB?
137375 / 254000,,052440          JRST      052440             ;;NO
137376 / 261140,,000004          PUSH    P,000004             ;;SAVE J
137377 / 261140,,000006          PUSH    P,000006             ;;AND DDB ON STACK
137400 / 200200,,000002          MOVE    J,  TAC1             ;
137401 / 201640,,014450         MOVEI  AC1,014450             ;;USE WHO LINE MODEL
137402 / 400300,,000000          SETZ  DDB,                   ;;FLAG THAT IT IS TTY CALLING
137403 / 260140,,136166         PUSHJ    P,WHOLIN             ;
137404 / 262140,,000006           POP    P,000006             ;;RESTORE DDB
137405 / 262140,,000004           POP    P,000004             ;;AND J
137406 / 201740,,014453         MOVEI  AC3,014453             ;;START HERE
                       UWHO1:
137407 / 336717,,000000         SKIPN  AC2,      (AC3)        ;;PICKUP WORD AND CHECK FOR END
137410 / 263140,,000000          POPJ    P,                   ;;DONE
137411 / 626700,,000001          TRZN  AC2,000001             ;;TEXT WORD?
137412 / 344740,,137407          AOJA  AC3,137407             ;;NO
151377 / 000000,,000016                                       ;
151377 / 440700,,000016 POINT 7,00000016,                     ;
137413 / 200640,,151377          MOVE  AC1,151377             ;;YES, MAKE BYTE POINTER
                       UWHO2:
137414 / 607640,,760000          TLNN  AC1,760000             ;
137415 / 344740,,137407          AOJA  AC3, UWHO1             ;
137416 / 134400,,000015          ILDB  TEM,000015             ;;UNPACK THE CHARACTERS
137417 / 322400,,137414         JUMPE  TEM, UWHO2             ;
137420 / 261140,,000015          PUSH    P,   AC1             ;
137421 / 261140,,000016          PUSH    P,   AC2             ;
137422 / 261140,,000017          PUSH    P,   AC3             ;
137423 / 256000,,042674           XCT      042674             ;;OUTPUT THE CHAR.
137424 / 262140,,000017           POP    P,   AC3             ;
137425 / 262140,,000016           POP    P,   AC2             ;
137426 / 262140,,000015           POP    P,   AC1             ;
137427 / 254000,,137414          JRST       UWHO2             ;
                       WHOUUO:
151505 / 550612,,000000          HRRZ  UUO,      (UCHN)       ;
137430 / 256200,,151505          XCTR   XR,151505             ;;POINTER TO WHERE USER WANTS STRING
137431 / 440700,,000000 POINT 7,00000000,                     ;
137431 / 505600,,440700          HRLI  UUO,      (<POINT 7,0>)  ;;MAKE IT BYTE POINTER
137432 / 201740,,014503         MOVEI  AC3,014503             ;;SKIP SOME SPACES
151535 / 574052,,000000          HLRE  TAC,      (UCHN)       ;
137433 / 256200,,151535          XCTR   XR,151535             ;;GET JOB NUMBER FIELD
137434 / 321040,,137452         JUMPL  TAC,137452             ;;IF -, JUST REPORT SYSTEM WHO LINE
137435 / 322040,,137437         JUMPE  TAC,137437             ;
137436 / 301040,,000100          CAIL  TAC,  JOBN             ;
137437 / 200040,,000004          MOVE  TAC,000004             ;;ZERO OR >JOBN IS US
137440 / 200104,,026114          MOVE TAC1,JBTSTS(J)          ;
137441 / 607100,,040000          TLNN TAC1,040000             ;;JOB THERE?
137442 / 254000,,137465          JRST      137465             ;;NO, ZERO STRING
137443 / 261140,,000004          PUSH    P,     J             ;
137444 / 200200,,000001          MOVE    J,   TAC             ;
137445 / 201640,,014450         MOVEI  AC1,014450             ;;USE PROTOTYPE
137446 / 400300,,000000          SETZ  DDB,                   ;;FLAG WHOSER NO TTY HERE
137447 / 260140,,136166         PUSHJ    P,WHOLIN             ;
137450 / 262140,,000004           POP    P,     J             ;
137451 / 201740,,014453         MOVEI  AC3,014453             ;;WHERE TO PICKUP STRING FROM
                       WHOUU1:
137452 / 336717,,000000         SKIPN  AC2,      (AC3)        ;
137453 / 254000,,137465          JRST      137465             ;;FINISH OUT WORD WITH NULLS
137454 / 626700,,000001          TRZN  AC2,000001             ;;TEXT WORD?
137455 / 344740,,137452          AOJA  AC3,137452             ;;NO, CHECK NEXT WORD
151377 / 000000,,000016                                       ;
151377 / 440700,,000016 POINT 7,00000016,                     ;
137456 / 200640,,151377          MOVE  AC1,151377             ;
                       WHOUU0:
137457 / 607640,,760000          TLNN  AC1,760000             ;
137460 / 344740,,137452          AOJA  AC3,WHOUU1             ;
137461 / 134400,,000015          ILDB  TEM,   AC1             ;
137462 / 322400,,137457         JUMPE  TEM,WHOUU0             ;
152366 / 136400,,000014          IDPB  TEM,   UUO             ;
137463 / 256040,,152366          XCTR  XLB,152366             ;
137464 / 254000,,137457          JRST      WHOUU0             ;
                       WHOUU2:
137465 / 400400,,000000          SETZ  TEM,                   ;;MAKE IT ASCIZ STRING
                       WHOUU3:
152366 / 136400,,000014          IDPB  TEM,   UUO             ;
137466 / 256040,,152366          XCTR  XLB,152366             ;
137467 / 603600,,760000          TLNE  UUO,760000             ;
137470 / 254000,,137466          JRST      WHOUU3             ;
137471 / 263140,,000000          POPJ    P,                   ;
                       ;TTYATT
                       ;COME HERE TO ATTACH TTY TO DDB THAT JOB IS ALREADY ATTACHED TO
                       ;AND FLUSH OLD DDB IF NECESSARY.
                       TTYATT:
137472 / 260140,,140030         PUSHJ    P,140030             ;; GET LINE CHARACTERISTICS
137473 / 201300,,017574         MOVEI  DDB,017574             ;;SEARCH FOR DDB THAT IS ATTACHED
137474 / 254000,,137476          JRST      137476             ;
                       TTYAT2:
137475 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;
137476 / 322300,,037403         JUMPE  DDB,037403             ;;HAVE ALL TTY DDB'S BEEN LOOKED AT?
137477 / 135040,,037575           LDB  TAC,037575             ;;NO, GET JOB NUMBER.
137500 / 500046,,000004           HLL  TAC,DEVMOD(DDB)        ;;ATTACH AND USE BITS
137501 / 607040,,000010          TLNN  TAC,000010             ;;IS THIS STILL A TTY DDB?
137502 / 254000,,137475          JRST      137475             ;;NO, THIS MUST BE IJOB.
137503 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
137504 / 306201,,000000          CAIN ITEM,      (TAC)        ;;JOB NUMBER THE ONE TO ATTACH?
137505 / 607040,,020000          TLNN  TAC,020000             ;;YES, IS DDB ATTACHED TO JOB?
137506 / 254000,,137475          JRST      137475             ;;NO, KEEP LOOKING.
137507 / 607000,,002000          TLNN      002000             ;;IS DDB DETACHED FROM LINE?
137510 / 263140,,000000          POPJ    P,                   ;;NO, ERROR RETURN WITH DDB SET
137511 / 261140,,000006          PUSH    P,000006             ;;SAVE NEW DDB ADDRESS.
137512 / 200302,,032347          MOVE  DDB,TTYTAB(LINE)       ;;ZAP, CHANGE LINES
137513 / 135040,,037575           LDB  TAC,037575             ;;GET JOB # OF OLD DDB
137514 / 326040,,137517         JUMPN  TAC,137517             ;;IF IT'S ZERO
137515 / 205040,,010020         MOVSI  TAC,010020             ;;THEN CLEAR THESE BITS
137516 / 412046,,000002        ANDCAM  TAC,DEVIOS(DDB)        ;;SO DDB GETS KILLED BY TTYDET
                       TTYAT3:
137517 / 260140,,137532         PUSHJ    P,137532             ;;DO YO STUFF
137520 / 262140,,000006           POP    P,000006             ;;GET BACK NEW GUY
137521 / 202302,,032347         MOVEM  DDB,TTYTAB(LINE)       ;;TTYDET CLOBBERS THIS.
137522 / 260140,,137063         PUSHJ    P,137063             ;
                       ;MAKE SURE THAT ALL IS WELL?
137523 / 137100,,037577           DPB LINE,037577             ;;SET THIS LINE IN DDB
137524 / 260140,,137231         PUSHJ    P,137231             ;;SET UP NEW DDB
                       ;NOW, GO TO INTERUPT LEVEL TO SET DAT
                       ;AND CHECK IF TYPING NEEDS TO BE STARTED.
137525 / 261140,,000004          PUSH    P,000004             ;;SAVE THIS
137526 / 260140,,144726         PUSHJ    P,144726             ;;START TYPING
137527 / 262140,,000004           POP    P,  ITEM             ;
137530 / 400040,,000000          SETZ  TAC,                   ;
137531 / 254000,,140222          JRST       SCNIN             ;
                       ;FTATTACH
                       ;TTYDET, TRESCN, TRESCU
                       ;ROUTINE TO DETACH TTY FROM JOB
                       ;CALL:	MOVE DDB,ADDRESS OF TTY DDB TO BE DETACHED
                       ;	PUSHJ P,TTYDET
                       ;CALLED FROM TTYATT AND COMCON (DETACH).
                       ;CLEARS TTYATC AND TRANSLATOR TABLE ENTRY.
                       ;SETS TTYDTC IN DEVIOS(DDB)
                       TTYDET:
137532 / 135040,,037575           LDB  TAC,037575             ;;GET JOB NO.
137533 / 476001,,027320         SETOM      JBTLIN(TAC)        ;;FLAG LINE AS DETACHED.
137534 / 205000,,002000         MOVSI      TTYDTC             ;
137535 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;SET TTY DETACHED BIT
137536 / 603040,,020000          TLNE  TAC,020000             ;;WAS TTY ALREADY DETACHED?
137537 / 612006,,000002          TDNE      DEVIOS(DDB)        ;
137540 / 254000,,140274          JRST      140274             ;;YES, MAKE TTY AVAIL. EXTRA DETACH COMMAND
137541 / 437006,,000002          IORB      DEVIOS(DDB)        ;
137542 / 700600,,001004          CONO   PI,SCNOFF             ;
137543 / 260140,,140243         PUSHJ    P,TTYSKL             ;
137544 / 700600,,002004          CONO   PI, SCNON             ;
137545 / 254000,,140367          JRST      140367             ;;GO CLEAR TRANSLATOR TABLE
                       ; ROUTINE TO RESET COUNTS AND BYTE POINTERS TO RESCAN THE LAST COMMAND LINE
                       TRESCN:
137546 / 135040,,136451           LDB  TAC,136451             ;; GET OLD TITCTR
                       TRESC2:
                       ;HERE TO SCAN BACK TO CURRENT INPUT.
137547 / 202046,,000022         MOVEM  TAC,TITCTR(DDB)        ;;RESTORE IT
137550 / 260140,,137602         PUSHJ    P,TBYTEP             ;
137551 / 202046,,000021         MOVEM  TAC,TITAKR(DDB)        ;
                       TRESC1:
137552 / 200046,,000020          MOVE  TAC,TIPCTR(DDB)        ;;CALLED HERE FROM ↑U CODE
137553 / 700600,,001004          CONO   PI,SCNOFF             ;
137554 / 274046,,000022           SUB  TAC,TITCTR(DDB)        ;; THIS IS NOW THE NEW CHR. COUNT TO END OF BUFFER
137555 / 337000,,000001         SKIPG         TAC             ;
137556 / 271040,,000140          ADDI  TAC,TTICHR             ;
137557 / 202046,,000023         MOVEM  TAC,TIFCTR(DDB)        ;
137560 / 700600,,002004          CONO   PI, SCNON             ;
137561 / 254000,,140030          JRST      STLNAC             ;
                       ; ROUTINE TO RESCAN ALL COMMAND LINES IN BUFFER. CALLS TRESCN, THEN
                       ; COUNTS NUMBER OF COMMAND LINES IN BUFFER, THEN CALLS TRESCN AGAIN
                       TRESCU:
137562 / 603000,,000400          TLNE      000400             ;;MONITOR MODE?
137563 / 263140,,000000          POPJ    P,                   ;;OH WELL, LOSERS LOSE
137564 / 606600,,777777          TRNN  UUO,777777             ;
137565 / 254000,,137573          JRST      TRESCA             ;
137566 / 135040,,136451           LDB  TAC,PCOMIC             ;
137567 / 274046,,000022           SUB  TAC,TITCTR(DDB)        ;
137570 / 337000,,000001         SKIPG         TAC             ;
137571 / 271040,,000140          ADDI  TAC,TTICHR             ;
152550 / 202054,,000000         MOVEM  TAC,      (UUO)        ;
137572 / 256040,,152550          XCTR   XW,152550             ;
                       TRESCA:
137573 / 260140,,137546         PUSHJ    P,137546             ;;RESCAN LINE
137574 / 254000,,141542          JRST      141542             ;;RE-CALCULATE ACTIVATED CHAR. COUNT.
                       ;TBYTEP
                       ; ROUTINE TO MAKE A POINTER TO THE BUFFER OUT OF A COUNT OF CHARACTERS
                       ; FROM THE START OF THE BUFFER.
137575 / 441100,,000000           XWD 441100,0                ;
                       TLHBYT:
137576 / 331100,,000000           XWD 331100,0                ;
137577 / 221100,,000000           XWD 221100,0                ;
137600 / 111100,,000000           XWD 111100,0                ;
137601 / 001100,,000000           XWD 001100,0                ;
                       TBYTEP:
137602 / 261140,,000002          PUSH    P,000002             ;;SAVE LINE
137603 / 213000,,000001         MOVNS         TAC             ;
137604 / 271040,,000140          ADDI  TAC,TTICHR             ;
137605 / 231040,,000004         IDIVI  TAC,     4             ;
137606 / 270046,,000016           ADD  TAC,TTIBUF(DDB)        ;
137607 / 500042,,137576           HLL  TAC,TLHBYT(LINE)       ;
137610 / 262140,,000002           POP    P,000002             ;;RESTORE LINE
137611 / 344040,,037403          AOJA  TAC, CPOPJ             ;
                       ;TTYGET, TTYFNU, TTYFND, TTYFUW, TTYERP, TTYERR
                       ;ROUTINE TO FIND TTY FOR A JOB
                       ;CALL:	MOVE ITEM,JOB NUMBER
                       ;	PUSHJ P, TTYFND
                       ;	RETURN WITH DDB SET TO ADR OF DDB
                       ;	AND DAT SET TO BYTE POINTER TO MONITOR OUTPUT BUFFER
                       TTYGET:
                       TTYFNU:
137612 / 200213,,024061          MOVE ITEM,   JOB(PID)        ;
                       TTYFND:
137613 / 260140,,140002         PUSHJ    P,TTYSRC             ;
                       TTYDAT:
137614 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;
137615 / 263140,,000000          POPJ    P,                   ;
                       ;PUT JOB IN IO WAIT IF TTY BUFFER NOT EMPTY
                       ;CALLED BY NON ERROR MESSAGE ROUTINES AT UUO LEVEL
                       TTYFUW:
137616 / 322540,,137643         JUMPE  PID,TTYFU1             ;
137617 / 260140,,000316         PUSHJ    P,PUSHIT             ;
137620 / 700340,,000040         CONSO  APR, MAOFF             ;
137621 / 254000,,137634          JRST      TTYFU2             ;
137622 / 260140,,044066         PUSHJ    P,DISMES             ;
137631 / 260140,,000341         PUSHJ    P, POPIT             ;
137632 / 400540,,000000          SETZ  PID,                   ;
137633 / 254000,,137643          JRST      TTYFU1             ;
                       TTYFU2:
137634 / 260140,,044066         PUSHJ    P,DISMES             ;
137641 / 260140,,000341         PUSHJ    P, POPIT             ;
137642 / 263140,,000000          POPJ    P,                   ;
                       TTYFU1:
137643 / 260140,,137612         PUSHJ    P,TTYFNU             ;
137644 / 135040,,037575           LDB  TAC,037575             ;; GET JOB # OF DDB
137645 / 312040,,024061          CAME  TAC,024061             ;; IS THIS OURS?
137646 / 263140,,000000          POPJ    P,                   ;; NO, FORGET IT.
137647 / 200046,,000026          MOVE  TAC,TOPUTR(DDB)        ;
137650 / 316046,,000030          CAMN  TAC,TOTAKR(DDB)        ;
137651 / 263140,,000000          POPJ    P,                   ;
137652 / 201000,,010000         MOVEI      010000             ;;YES
137653 / 437006,,000002          IORB      DEVIOS(DDB)        ;
137654 / 254000,,046176          JRST       WSYNC             ;
                       ;ROUTINE TO INDICATE MONITOR ERROR MESSAGE TO BE FORCED OUT
                       ;WHEN NO MORE ROOM IN TTO BUFFER, TTI BUFFER WILL BE USED
                       TTYERP:
137655 / 260140,,137657         PUSHJ    P,TTYERR             ;
137656 / 254000,,140775          JRST      SETBFI             ;
                       TTYERR:
                       ;DON'T NECESSARILY NEED TO FLUSH INPUT
137657 / 260140,,140002         PUSHJ    P,140002             ;; FIND TTY DDB
137660 / 201000,,400000         MOVEI      400000             ;;SET MONITOR ERROR PRINT OUT BIT
137661 / 437006,,000002          IORB      DEVIOS(DDB)        ;
137662 / 603000,,002000          TLNE      002000             ;; LEAVE IF DETACHED LINE
137663 / 263140,,000000          POPJ    P,                   ;
137664 / 260140,,140030         PUSHJ    P,STLNAC             ;
137665 / 607100,,420000          TLNN LINE,420000             ;
137666 / 263140,,000000          POPJ    P,                   ;
137667 / 260140,,000316         PUSHJ    P,PUSHIT             ;
137670 / 550302,,012567          HRRZ  DDB,012567(LINE)       ;;GET THE RIGHT SIDE ONLY
137671 / 322300,,137677         JUMPE  DDB,137677             ;;NO LINE.
137672 / 554246,,000006          HLRZ  DAT,PPCALL(DDB)        ;
137673 / 603100,,020000          TLNE LINE,020000             ;;SKIP IF THIS IS III
137674 / 661300,,400000           TLO  DDB,400000             ;;SET BIT IF DD
137675 / 500240,,000006           HLL  DAT,   DDB             ;
137676 / 260140,,131104         PUSHJ    P, PPCLR             ;
                       TTYDX1:
137677 / 260140,,000341         PUSHJ    P, POPIT             ;
137700 / 263140,,000000          POPJ    P,                   ;
                       ;TTYSET, TTYSTC
                       ;ROUTINE TO SET TTY INTO USER MODE NOW.
                       ;CALL:	MOVE DDB,ADDRESS OF DEVICE DATA BLOCK
                       ;	PUSHJ P,TTYSET
                       ;CALLED FROM RUNCSS (START1)
                       ;CLEARS DDTM,IOSUPR,USRB,TTYIOW AND IOW
                       TTYSET:
151332 / 401101,,001000           XWD DDTM+USRB+TTYIOW+IOW,IOSUPR ;
137701 / 200000,,151332          MOVE      151332             ;
137702 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
137703 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO START TTY OUTPUT AFTER CLEARING USRB
                       TTYSTC:
137704 / 205040,,000100         MOVSI  TAC,000100             ;; CLEAR BIT IN MEMORY
137705 / 412046,,000002        ANDCAM  TAC,DEVIOS(DDB)        ;
137706 / 254000,,137707          JRST      TTYSTR             ;
                       ;TTYSTR, TTYUSR
                       ;ROUTINE TO START TTY OUTPUT
                       ;CALL:	MOVE DAT,BYTE POINTER TO LAST OUTPUT ITEM
                       ;	MOVE DDB,ADDRESS OF TTY DDB
                       ;	MOVE ITEM,JOB NUMBER		;(MUST BE PRESERVED)
                       ;	PUSHJ P,TTYSTR
                       ;CALLED FROM COMINI
                       ;INITIALIZED TTY FOR MONITOR OUTPUT AND STARTS OUTPUT
                       TTYSTR:
152112 / 001422,,051000           XWD DDTM!IOBEG!IO!TPMON,IOSUPR!IOBKTL!IOACT ;
137707 / 200000,,152112          MOVE      152112             ;
137710 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
137711 / 603000,,002000          TLNE      002000             ;;DON'T START DETACHED LINES
137712 / 263140,,000000          POPJ    P,                   ;
137713 / 260140,,140030         PUSHJ    P,140030             ;;GET LINE CHARACTERISTICS
137714 / 205040,,000420         MOVSI  TAC,000420             ;
137715 / 603000,,000100          TLNE      000100             ;;GOING OUT OF MONITOR MODE?
137716 / 621040,,000400           TLZ  TAC,000400             ;;YES, DON'T DIDLE THESE
137717 / 436046,,000002          IORM  TAC,DEVIOS(DDB)        ;
137720 / 205040,,000500         MOVSI  TAC,000500             ;
137721 / 603000,,000100          TLNE        USRB             ;
137722 / 412046,,000002        ANDCAM  TAC,DEVIOS(DDB)        ;
137723 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET CORRECT IOS
137724 / 333006,,000024        SKIPLE      TISYNC(DDB)        ;;ANY TYPE AHEAD?
137725 / 260140,,144203         PUSHJ    P,144203             ;;YES.
137726 / 254000,,143016          JRST      143016             ;;GO TYPE FIRST CHAR.
                       ;ROUTINES TO SET SCANNER TO START UP JOB WHEN OUTPUT FINISHES
                       ;CALL:	MOVE DDB,TTY DDB ADR.
                       ;	PUSHJ P,TTYUSR
                       ;	TTY WILL GO TO USER MODE WHEN TYPING OUT STOPS
                       TTYUSR:
137727 / 205000,,000100         MOVSI      000100             ;; SET BIT TO SWITCH TTY TO USER MODE
137730 / 436006,,000002          IORM      DEVIOS(DDB)        ;; WHEN MONITOR OUTPUT FINISHES
137731 / 254000,,046021          JRST      046021             ;;GO FLAG JOB AS RUNABLE IMMEDIATELY
                       ;TTYTLK
                       ;ROUTINE TO ADD TTY TO TALK RING
                       ;CALL:	ADR. OF DDB TO BE ADDED TO RING AT -3(P)
                       ;	MOVE TAC,SIXBIT /TTYN/
                       ;	PUSHJ P,TTYTLK
                       ;	TTY IS BUSY RETURN OR NOT A TTY OR TOO BIG A LINE NO.
                       ;	OK RETURN, TTY ADDED TO TALK RING
                       TTYTLK:
137732 / 260140,,140062         PUSHJ    P,140062             ;; IN CASE NOT SET UP
137733 / 263140,,000000          POPJ    P,                   ;;NONE AVAIL. GIVE UP
                       ;FTTKBG
137734 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
137735 / 607040,,000010          TLNN  TAC, DVTTY             ;
137736 / 263140,,000000          POPJ    P,                   ;
137737 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;IS TTY IN MONITOR MODE AND LEFT HAND MARGIN?
137740 / 603000,,100000          TLNE      100000             ;;EVIL THINGS MIGHT HAPPEN IF WE TRY TALKING
137741 / 263140,,000000          POPJ    P,                   ;;TO A LINE THAT'S HOLDING.
137742 / 200103,,777775          MOVE LINE,777775(P)          ;;TTY GIVING TALK COMMAND
137743 / 200102,,000000          MOVE LINE,      (LINE)       ;;ITS NAME
137744 / 200046,,000000          MOVE  TAC,      (DDB)        ;;OPR IS NEVER TOO BUSY...
137745 / 316100,,000001          CAMN LINE,000001             ;;IF THE SAME,
137746 / 263140,,000000          POPJ    P,                   ;;  NO SOAP
137747 / 312100,,037564          CAME LINE,037564             ;;EITHER ONE OPR?
137750 / 316040,,037564          CAMN  TAC,DEVOPR             ;
137751 / 254000,,137760          JRST      TTYTK1             ;
137752 / 205040,,000010         MOVSI  TAC,TLKPRV             ;
137753 / 612044,,027420          TDNE  TAC,JBTPRV(J)          ;;CHECK PRIVILEGE
137754 / 326200,,137760         JUMPN    J,137760             ;;JUMP IF PRIV SET
137755 / 603000,,000400          TLNE       TPMON             ;
137756 / 607000,,000004          TLNN       IOFST             ;
137757 / 263140,,000000          POPJ    P,                   ;;NO, HE IS BUSY.
                       TTYTK1:
137760 / 700600,,001004          CONO   PI,SCNOFF             ;
                       ;FTTKBG
137761 / 135100,,037577           LDB LINE,037577             ;;LINE NUMBER IN RING.
137762 / 205040,,000001         MOVSI  TAC,TLKRNG             ;
137763 / 135400,,136447           LDB  CHR, PTALK             ;
137764 / 616042,,017717          TDNN  TAC,LINTAB(LINE)       ;
137765 / 550400,,000002          HRRZ  CHR,  LINE             ;
137766 / 436042,,017717          IORM  TAC,LINTAB(LINE)       ;
137767 / 250303,,777775          EXCH  DDB,777775(P)          ;;GET DDB OF TALKER
137770 / 135100,,037577           LDB LINE,037577             ;;LINE NO. OF TALKER
137771 / 137400,,136447           DPB  CHR,136447             ;;SET TO POINT INTO RING
137772 / 205040,,000001         MOVSI  TAC,TLKRNG             ;
137773 / 436042,,017717          IORM  TAC,LINTAB(LINE)       ;
137774 / 202100,,000001         MOVEM LINE,000001             ;;SAVE LINE NO. OF TALKER
137775 / 250303,,777775          EXCH  DDB,777775(P)          ;;RESTORE
137776 / 135100,,037577           LDB LINE,037577             ;;LINE NO. IN RING AGAIN
137777 / 137040,,136447           DPB  TAC,136447             ;;MAOE IT POINT TO TALKER
140000 / 700600,,002004          CONO   PI, SCNON             ;
140001 / 254000,,037401          JRST      037401             ;;OK RETURN
                       ;FTTKBG
                       ;TTYSRC, STLNAC
                       ;ROUTINE TO SEARCH TRANSLATOR TABLE FOR TTY
                       ;CALL:	MOVE J,JOB NUMBER
                       ;	PUSHJ P,TTYSRC
                       ;	RETURN WITH ADDRESS OF DEVICE DATA BLOCK IN DDB.
                       TTYSRC:
140002 / 322200,,140014         JUMPE    J,140014             ;;SEARCH FOR OPER. TTY IF JOB NO. 0
140003 / 205100,,020000         MOVSI LINE,TTYATC             ;
140004 / 201300,,017574         MOVEI  DDB,017574             ;;TTYDDBS START HERE
                       TTYSRA:
140005 / 135040,,037575           LDB  TAC,037575             ;;JOB ATTACHED TO THIS DDB
140006 / 302044,,000000          CAIE  TAC,      (J)          ;;IS THIS THE ONE
140007 / 254000,,140012          JRST       TTYF0             ;
140010 / 612106,,000004          TDNE LINE,DEVMOD(DDB)        ;;IS HE ATTACHED TO IT?
140011 / 254000,,140024          JRST      140024             ;;YES.
                       TTYF0:
140012 / 554306,,000003          HLRZ  DDB,DEVSER(DDB)        ;;FOLLOW CHAIN
140013 / 326300,,140005         JUMPN  DDB,140005             ;;TO ITS END
                       TTYF1:
140014 / 332040,,037564         SKIPE  TAC,DEVOPR             ;
140015 / 254000,,140022          JRST       TTYF3             ;
140016 / 201100,,000120         MOVEI LINE,000120             ;;NO USE CTY.
140017 / 332302,,032347         SKIPE  DDB,TTYTAB(LINE)       ;;DOES IT HAVE A DDB?
140020 / 254000,,140024          JRST       TTYF9             ;
140021 / 205040,,436471         MOVSI  TAC,436471             ;;NO
                       TTYF3:
140022 / 260140,,140062         PUSHJ    P,140062             ;;GET A DDB FOR DEVOPR
140023 / 254000,,140033          JRST      140033             ;;OH BOY HERE WE GO
                       TTYF9:
140024 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;SET UP IOS
140025 / 400100,,000000          SETZ LINE,                   ;
140026 / 603000,,002000          TLNE      TTYDTC             ;
140027 / 263140,,000000          POPJ    P,                   ;
                       STLNAC:
140030 / 135100,,037577           LDB LINE,037577             ;; GET UNIT # FROM DDB
140031 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;;AND LINE BITS
140032 / 263140,,000000          POPJ    P,                   ;;RETURN
                       SCREW:
140033 / 260140,,000316         PUSHJ    P,PUSHIT             ;
140034 / 260140,,044320         PUSHJ    P,044320             ;
140035 / 260140,,044066         PUSHJ    P,DISMES             ;
140056 / 260140,,000341         PUSHJ    P, POPIT             ;
140057 / 700700,,077400         CONSZ   PI,077400             ;;WHERE ARE WE
140060 / 263140,,000000          POPJ    P,                   ;;CROSS FINGERS AND PRAY
140061 / 265240,,043257           JSP  DAT,043257             ;;UUO LEVEL, A WAY OUT.
                       ;GETDDB, LOG2LN
                       ;ROUTINE TO SETUP DDB FOR OUTPUT
                       ;CALL	MOVE TAC,[SIXBIT /TTY#/
                       ;	PUSHJ P,GETDDB
                       ;	NONE AVAILABLE RETURN
                       ;	RETURN WITH LINE AND DDB SETUP
                       GETDDB:
140062 / 260140,,140101         PUSHJ    P,140101             ;;CONVERT TO LINE NUMBER
140063 / 263140,,000000          POPJ    P,                   ;;ILLEGAL
                       GETDBA:
140064 / 301100,,000145          CAIL LINE,000145             ;;LEGAL LINE NUMBER?
140065 / 263140,,000000          POPJ    P,                   ;;NO
                       GETDB1:
140066 / 332302,,032347         SKIPE  DDB,TTYTAB(LINE)       ;;DOES THIS LINE ALREADY HAVE A DDB?
140067 / 254000,,037401          JRST      037401             ;;YES
140070 / 301100,,000121          CAIL LINE, PTYL0             ;
140071 / 263140,,000000          POPJ    P,                   ;;ONLY DDBSRC WILL CREATE PTY DDB! (BH 3/18/74)
140072 / 260140,,140123         PUSHJ    P,140123             ;;NO. SEARCH FOR FREE DDB
140073 / 263140,,000000          POPJ    P,                   ;;NONE AVAILABLE
140074 / 512006,,000002         HLLZM      DEVIOS(DDB)        ;;INITIALIZE STATE
140075 / 261146,,000000          PUSH    P,      (DDB)        ;
140076 / 201040,,600000         MOVEI  TAC,600000             ;
140077 / 412046,,000004        ANDCAM  TAC,DEVMOD(DDB)        ;
140100 / 254000,,037375          JRST      TPOPJ1             ;
                       LOG2LN:
140101 / 204040,,000001          MOVS  TAC,   TAC             ;
140102 / 201100,,000120         MOVEI LINE,TCONLN             ;
140103 / 306040,,436471          CAIN  TAC,436471             ;
140104 / 254000,,037401          JRST      CPOPJ1             ;
140105 / 640040,,646471           TRC  TAC,646471             ;
140106 / 602040,,777777          TRNE  TAC,777777             ;
140107 / 263140,,000000          POPJ    P,                   ;;NOT TTY#
                       SIX2LN:
140110 / 322040,,037403         JUMPE  TAC,037403             ;;JUST TTY
140111 / 201100,,000000         MOVEI LINE,                   ;
                       LOG2LL:
140112 / 241040,,000003           ROT  TAC,     3             ;
140113 / 622040,,000002          TRZE  TAC,     2             ;
140114 / 602040,,000005          TRNE  TAC,     5             ;
140115 / 263140,,000000          POPJ    P,                   ;;NOT DIGIT
140116 / 245040,,000003          ROTC  TAC,000003             ;;DIGIT → LINE
140117 / 326040,,140112         JUMPN  TAC,140112             ;;MORE?
140120 / 305100,,000145         CAIGE LINE,000145             ;;NO, CHECK LEGALITY
140121 / 350003,,000000           AOS            (P)          ;
140122 / 263140,,000000          POPJ    P,                   ;
                       ;DDBSRC, STDTBL
                       ;ROUTINE TO SEARCH FOR FREE TTY DEV DATA BLOCK
                       ;CALL:	MOVE LINE,TTY LINE NO.
                       ;	PUSHJ P,DDBSRC
                       ;	NONE FOUND OR LINE NO. TOO BIG
                       ;	RETURN DDB,LINE AND DEVNAM SET AND BITS TPMON,IOFST,IOACT,
                       ;		TTYUSE,ASSCON SET.
                       ;	IF CALLED WITH LINE SET TO -1 A DETTACHED
                       ;	DDB IS CREATED AND GIVEN TO JOB IN ITEM.
                       DDBSRC:
140123 / 570040,,000002          HRRE  TAC,000002             ;; NUMBER OF LINE ONLY
140124 / 303040,,000145         CAILE  TAC,000145             ;;IS LINE NO. TOO BIG
140125 / 263140,,000000          POPJ    P,                   ;;YES.
140126 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;
140127 / 607100,,020000          TLNN LINE,DDDLIN             ;
140130 / 254000,,140136          JRST      DDBSR1             ;
140131 / 200740,,014570          MOVE  AC3,AVLBIT             ;
140132 / 700740,,770000         CONSO   PI,770000             ;
140133 / 612742,,014543          TDNE  AC3,014543(LINE)       ;;NOT AT PI LEVEL - SEE IF COMPLETELY FREE
140134 / 332000,,014150         SKIPE      014150             ;;ALSO SEE IF DD UP
140135 / 263140,,000000          POPJ    P,                   ;
                       DDBSR1:
140136 / 201740,,022520         MOVEI  AC3, TTYFS             ;
140137 / 260140,,074554         PUSHJ    P,SFSGET             ;
140140 / 263140,,000000          POPJ    P,                   ;
140141 / 201315,,000001         MOVEI  DDB,DDBSKW(AC1)        ;
140142 / 505640,,017573          HRLI  AC1,017573             ;
140143 / 251646,,000015           BLT  AC1,TTYPTR(DDB)        ;;COPY PART OF A REAL DDB INTO OUR NEW BLOCK
140144 / 402006,,000002         SETZM      DEVIOS(DDB)        ;
140145 / 402006,,000005         SETZM      DEVLOG(DDB)        ;
140146 / 402006,,000000         SETZM            (DDB)        ;
140147 / 402006,,000006         SETZM      DEVBUF(DDB)        ;
140150 / 402006,,000033         SETZM      PTYPTR(DDB)        ;
140151 / 402006,,000034         SETZM      SAVDDB(DDB)        ;
140152 / 205640,,000140         MOVSI  AC1,TTICHR             ;
140153 / 137640,,037575           DPB  AC1,037575             ;;CLEAR JOB NUMBER IN DEVCHR
140154 / 137640,,037577           DPB  AC1,037577             ;;UNIT NUMBER TOO  BH 5/6/74
140155 / 541646,,000035          HRRI  AC1,000035(DDB)        ;
140156 / 202646,,000016         MOVEM  AC1,TTIBUF(DDB)        ;
140157 / 205640,,000170         MOVSI  AC1,TTOCHR             ;
140160 / 541646,,000065          HRRI  AC1,000065(DDB)        ;
140161 / 202646,,000025         MOVEM  AC1,TTOBUF(DDB)        ;
140162 / 260140,,140774         PUSHJ    P,TSETBF             ;
140163 / 205040,,140216         MOVSI  TAC,STDTBL             ;
140164 / 541046,,000011          HRRI  TAC,ACTBTS(DDB)        ;
140165 / 251046,,000014           BLT  TAC,ACTMOD(DDB)        ;
152223 / 030000,,600000           XWD TTYUSE!TTYATC,ASSCON!ASSPRG ;
140166 / 200040,,152223          MOVE  TAC,152223             ;
140167 / 412046,,000004        ANDCAM  TAC,DEVMOD(DDB)        ;
140170 / 515646,,000000         HRLZI  AC1,      (DDB)        ;
140171 / 540646,,000003           HRR  AC1,DEVSER(DDB)        ;
140172 / 700600,,001004          CONO   PI,SCNOFF             ;
140173 / 250640,,017577          EXCH  AC1,017577             ;
140174 / 202646,,000003         MOVEM  AC1,DEVSER(DDB)        ;
140175 / 700600,,002004          CONO   PI, SCNON             ;
140176 / 205040,,000007         MOVSI  TAC,  PROG             ;
140177 / 202046,,000007         MOVEM  TAC,DEVIAD(DDB)        ;;CLEARS PHPOS
140200 / 202046,,000010         MOVEM  TAC,DEVOAD(DDB)        ;;CLEARS PFITCH
152047 / 000404,,010000           XWD TPMON+IOFST,IOACT       ;
140201 / 200000,,152047          MOVE      152047             ;
140202 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;MAKE SURE HE LOOKS LIKE A VIRGIN.
140203 / 260140,,140774         PUSHJ    P,140774             ;;INITIALIZE BUFFERS
152146 / 010000,,000000           XWD TTYUSE,0                ;
140204 / 200040,,152146          MOVE  TAC,152146             ;;INITIALIZE DATA BLOCK.
140205 / 302100,,777777          CAIE LINE,777777             ;;IS SOME ONE GETTING A DETTACHED DDB?
153713 / 607100,,420000          TLNN LINE,420000             ;
153714 / 254000,,140222          JRST      140222             ;; NO, FINISH UP AND LEAVE
153715 / 260140,,126421         PUSHJ    P,126421             ;; MAKE UP A DPY HEADER
153716 / 254000,,140326          JRST      140326             ;;LOSE - RELEASE THE DDB & LEAVE
153717 / 254000,,140222          JRST       SCNIN             ;
140206 / 254000,,153713          JRST      153713             ;
140207 / 661040,,020000           TLO  TAC,020000             ;;ATTACH JOB TO DDB
140210 / 436046,,000004          IORM  TAC,DEVMOD(DDB)        ;
140211 / 476004,,027320         SETOM      JBTLIN(ITEM)       ;;YES, FLAG AS DETTACHED
140212 / 137200,,037575           DPB ITEM,037575             ;;MAKE IT HIS;
140213 / 205000,,002000         MOVSI      002000             ;;FLAG AS DETTACHED FROM LINE
140214 / 437006,,000002          IORB      DEVIOS(DDB)        ;
140215 / 254000,,037401          JRST      037401             ;;SKIP RETURN
                       ;STANDARD SPECIAL ACTIVATION MODE BREAK TABLE
                       ;BREAK ON ANYTHING BUT LETTER OR NUMBER
                       STDTBL:
140216 / 777777,,777777                                       ;
140217 / 777700,,037600                                       ;
140220 / 000000,,374000                                       ;
140221 / 000007,,600000                                       ;
                       ;SCNIN
                       ;INITIALIZE TTY DEVICE DATA BLOCK(CALLED FROM TTYATT TOO)
                       ;CALL:	MOVE TAC,BITS IN DEVMOD TO BE TURNED ON
                       ;	MOVE DDB,ADDRESS OF DEVICE DATA BLOCK
                       ;	PUSHJ P,SCNIN
                       ;	SKIP RETURN ALWAYS
                       ;	CALLED BY JRST FROM TTYATT
                       ;	AND FALLS IN FROM DDBSRC ABOVE
                       ;SETS PHYSICAL NAME TO SIXBIT /TTY#/ OR SIXBIT /CTY/
                       ;	WHERE # IS THE LINE NUMBER.
                       ;STORES LINE NUMBER IN DEVICE DATA BLOCK
                       SCNIN:
140222 / 436046,,000004          IORM  TAC,DEVMOD(DDB)        ;
140223 / 137100,,037577           DPB LINE,037577             ;;SET LINE NO. IN DDB.
140224 / 137100,,136447           DPB LINE,136447             ;;SETUP TALK RING TO CONTAIN
                       ;ONLY THIS TTY.
140225 / 201040,,000000         MOVEI  TAC,                   ;
140226 / 405100,,777777          ANDI LINE,777777             ;
                       SCNIN0:
140227 / 245040,,777775          ROTC  TAC,777775             ;
140230 / 541040,,000002          HRRI  TAC,     2             ;
140231 / 241040,,777775           ROT  TAC,777775             ;
140232 / 326100,,140227         JUMPN LINE,SCNIN0             ;
140233 / 541040,,646471          HRRI  TAC,646471             ;
140234 / 206046,,000000         MOVSM  TAC,      (DDB)        ;
140235 / 260140,,140030         PUSHJ    P,STLNAC             ;
140236 / 542302,,032347          HRRM  DDB,TTYTAB(LINE)       ;;SET DDB ADR. IN TRANSLATOR TABLE.
140237 / 205040,,436471         MOVSI  TAC,436471             ;
140240 / 603100,,200000          TLNE LINE,200000             ;;IS THIS CONSOLE TTY?
140241 / 202046,,000000         MOVEM  TAC,      (DDB)        ;;YES, SET NAME TO CTY.
140242 / 254000,,037401          JRST      037401             ;;SUCCESSFUL RETURN.
                       ;TTYSKL, TTYREL, TTYKIL
                       ;CALL TO MAKE REQUEST TO DPYKIL.
                       ;CONO PI,SCNOFF MUST HAVE BEEN DONE BEFORE THIS ROUTINE IS CALLED.
                       TTYSKL:
140243 / 260140,,140030         PUSHJ    P,140030             ;;GET LINE CHARACTERISTICS..
140244 / 603100,,420000          TLNE LINE,420000             ;
140245 / 336702,,012567         SKIPN  AC2,012567(LINE)       ;
140246 / 263140,,000000          POPJ    P,                   ;
140247 / 201642,,777760         MOVEI  AC1,777760(LINE)       ;
140250 / 474740,,000000          SETO  AC3,                   ;
140251 / 250756,,000024          EXCH  AC3,LECLIN(AC2)        ;
140252 / 321740,,037403         JUMPL  AC3, CPOPJ             ;
140253 / 402016,,000123         SETZM       LEACT(AC2)        ;; SEE IF THE LINE EDITOR SAYS ANYTHING IN THIS TIME
140254 / 242640,,000014           LSH  AC1,000014             ;
140255 / 270640,,127026           ADD  AC1,127026             ;; MAKE IT APPROPRIATE LENGTH
140256 / 700600,,000400          CONO   PI, PIOFF             ;
140257 / 136653,,024117          IDPB  AC1, CLOCK(PID)        ;
140260 / 700600,,000200          CONO   PI,  PION             ;
140261 / 263140,,000000          POPJ    P,                   ;
                       TTYREL:
140262 / 135100,,037577           LDB LINE,037577             ;;SETUP LINE
140263 / 260140,,145576         PUSHJ    P,145576             ;;CHECK FOR DIALER RELEASE
                       ;DILNUM
140264 / 513106,,000002         HLLZS TAC1,DEVIOS(DDB)        ;;CLEAR INITTED BITS IN IOS.
140265 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
140266 / 603040,,020000          TLNE  TAC,020000             ;;THAT'S ALL IF IT'S HIS CONSOLE
140267 / 263140,,000000          POPJ    P,                   ;
140270 / 205000,,000400         MOVSI      000400             ;;NO, PUT HIM BACK IN MONITOR MODE
140271 / 437006,,000002          IORB      DEVIOS(DDB)        ;
140272 / 602040,,400000          TRNE  TAC,400000             ;;DON'T KILL IF ASSIGNED BY CONSOLE
140273 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO SET SCNSER TO RETURN TTY TO VIRGIN STATE
                       ;CALL:	MOVE	DDB, ADDRESS OF DEVICE DATA BLOCK
                       ;	PUSHJ	P,TTYKIL
                       ;CALLED FROM COMCSS (JOBKIL).
                       ;IF NOT OPERATOR CONSOLE, THEN
                       ; 1)CLEAR PHYSICAL AND LOGICAL	NAMES,
                       ; 2)CLEAR JOB NUMBER ASSIGNMENT
                       ;	3)CLEAR	TTYUSE,TTYATC,ASSCON,ASSPRG,
                       ;	4)CLEAR ENTRY IN TRANSLATOR TABLE.
                       TTYKIL:
140274 / 700600,,001004          CONO   PI,001004             ;;LET'S DO IT RIGHT!
140275 / 603000,,002000          TLNE      TTYDTC             ;
140276 / 254000,,140326          JRST      140326             ;;TAKE 3 GIANT STEPS IF YOU'RE DETACHED.
140277 / 260140,,140243         PUSHJ    P,140243             ;;IF A DPY, MAKE IT AVAIL. (SETS LINE)
                       TTYKL7:
140300 / 336302,,032347         SKIPN  DDB,TTYTAB(LINE)       ;;DID SOMEONE ELSE GET IT?
140301 / 254000,,143033          JRST      143033             ;;YES.
140302 / 606300,,777777          TRNN  DDB,777777             ;;IS THERE REALLY ONE HERE?
153465 / 260140,,140427         PUSHJ    P,140427             ;;NO DDB, NO NOTHING!
153466 / 260140,,137063         PUSHJ    P,137063             ;
153467 / 254000,,143033          JRST       TYPT1             ;
140303 / 254000,,153465          JRST      153465             ;;AND THEY'RE OFF
140304 / 205000,,403001         MOVSI      403001             ;; CLEAR TTY INPUT AND OUTPUT
140305 / 412006,,000002        ANDCAM      DEVIOS(DDB)        ;;WAIT BITS SO TTY WILL BE KILLED
                       ;PROPERLY AT INTER. LEVEL IF STILL OUTPUTING
152200 / 020000,,600000                                       ;
140306 / 200040,,152200          MOVE  TAC,152200             ;
140307 / 412046,,000004        ANDCAM  TAC,DEVMOD(DDB)        ;;TTY IS NO LONGER A JOB'S CONSOLE.
140310 / 205000,,000400         MOVSI      000400             ;;CLEAR JOB NUMBER
140311 / 137000,,037575           DPB       PJOBN             ;
140312 / 437006,,000002          IORB      DEVIOS(DDB)        ;;TURN TPMON ON IN CASE TTY IS
                       ;STILL OUTPUTTING
140313 / 337002,,032347         SKIPG      TTYTAB(LINE)       ;;REQUEST IN ALREADY?
140314 / 254000,,143033          JRST      143033             ;;LEAVE NOW!
140315 / 200046,,000022          MOVE  TAC,TITCTR(DDB)        ;;TAKR COUNT
140316 / 316046,,000020          CAMN  TAC,TIPCTR(DDB)        ;;COMPARE WITH PUTR
140317 / 254000,,140323          JRST      140323             ;;NO TYPE AHEAD
140320 / 333006,,000024        SKIPLE      TISYNC(DDB)        ;;ANY LINES TO TELL MONITOR ABOUT?
140321 / 260140,,144203         PUSHJ    P,144203             ;;WAKE COMMAND DECODER
140322 / 254000,,143033          JRST       TYPT1             ;
                       NOTYPA:
140323 / 607100,,000200          TLNN LINE,000200             ;;DON'T KILL DDB FOR USED PTY'S.
140324 / 663000,,010020          TLOE      010020             ;;IS IT OUTPUTTING OR TALKING?
140325 / 254000,,140335          JRST      TTYKL6             ;
                       TTYKL5:
140326 / 201040,,017574         MOVEI  TAC,017574             ;;DON'T KILL THIS GUY
140327 / 302046,,000000          CAIE  TAC,      (DDB)        ;;IS THIS THE FIRST DDB
140330 / 254000,,140337          JRST      140337             ;;BLAST THE MOTHER
140331 / 513006,,000002         HLLZS      DEVIOS(DDB)        ;;CLEAR INITTED STUFF IN IOS
140332 / 260140,,140360         PUSHJ    P,140360             ;;CLEAR LINE TABLE.
140333 / 402006,,000005         SETZM      DEVLOG(DDB)        ;;CLEAR LOGICAL NAME
140334 / 254000,,143033          JRST      143033             ;;ON CLYDE.
                       TTYKL6:
140335 / 437006,,000002          IORB      DEVIOS(DDB)        ;;MAKE SURE IT GETS KILLED AT INTERUPT LEVEL.
140336 / 254000,,143033          JRST       TYPT1             ;
                       ;MORE TTYKIL
                       ;THIS RETURNS A DDB TO FREE STORAGE.
                       TTYKL2:
140337 / 201640,,017574         MOVEI  AC1,017574             ;;SEARCH CHAIN FOR POINTER TO DDB.
                       TTYKL3:
140340 / 200040,,000015          MOVE  TAC,   AC1             ;
140341 / 554655,,000003          HLRZ  AC1,DEVSER(AC1)        ;;LINK
140342 / 302646,,000000          CAIE  AC1,      (DDB)        ;;IS THIS THE GUY THAT POINTS TO OURS
140343 / 326640,,140340         JUMPN  AC1,TTYKL3             ;
140344 / 322640,,140376         JUMPE  AC1,TTYKL4             ;
140345 / 200646,,000003          MOVE  AC1,DEVSER(DDB)        ;
140346 / 202641,,000003         MOVEM  AC1,DEVSER(TAC)        ;;LINK HIM OUT
                       TTYKL8:
140347 / 260140,,140360         PUSHJ    P,140360             ;;CLEAR LINTAB BITS
140350 / 607000,,002000          TLNN      TTYDTC             ;
140351 / 260140,,140427         PUSHJ    P,TTYKL9             ;
140352 / 260140,,137063         PUSHJ    P,137063             ;
140353 / 700600,,002004          CONO   PI,002004             ;;AND AWAY THEY GO!!
140354 / 201646,,777777         MOVEI  AC1,777777(DDB)        ;
140355 / 260140,,074163         PUSHJ    P,FSGIVE             ;
140356 / 201300,,000000         MOVEI  DDB,                   ;
140357 / 263140,,000000          POPJ    P,                   ;
                       LINCLR:
140360 / 603000,,002000          TLNE      002000             ;;NO LINE IF DETACHED
140361 / 263140,,000000          POPJ    P,                   ;
140362 / 607100,,004000          TLNN LINE,004000             ;;PTY'S AREN'T IN THIS TABLE
140363 / 434102,,136457           IOR LINE,LINBIT(LINE)       ;;OR IN INITIALIZE BITS
140364 / 621100,,045543           TLZ LINE,045543             ;;CLEAR BITS IN LINE TABLE
140365 / 502102,,017717          HLLM LINE,LINTAB(LINE)       ;
140366 / 263140,,000000          POPJ    P,                   ;
                       TTYKL1:
140367 / 135100,,037577           LDB LINE,037577             ;;LINE NO.
140370 / 335002,,032347        SKIPGE      TTYTAB(LINE)       ;
140371 / 370000,,026105           SOS      COMCNT             ;
140372 / 260140,,140427         PUSHJ    P,140427             ;;CLEAR TRANSLATOR TABLE
140373 / 260140,,137063         PUSHJ    P,CNTCOM             ;
140374 / 402006,,000000         SETZM            (DDB)        ;
140375 / 254000,,140774          JRST      140774             ;;BLAST TYPE AHEAD AND OUTPUT.
                       TTYKL4:
140376 / 260140,,000316         PUSHJ    P,PUSHIT             ;
140377 / 261140,,000001          PUSH    P,   TAC             ;
140400 / 261140,,000006          PUSH    P,   DDB             ;
140401 / 260140,,044066         PUSHJ    P,DISMES             ;
140413 / 262140,,000001           POP    P,   TAC             ;
140414 / 260140,,044200         PUSHJ    P,DISOCT             ;
140415 / 260140,,044066         PUSHJ    P,DISMES             ;
140421 / 262140,,000001           POP    P,   TAC             ;
140422 / 260140,,044200         PUSHJ    P,DISOCT             ;
140423 / 260140,,044066         PUSHJ    P,DISMES             ;
140425 / 260140,,000341         PUSHJ    P, POPIT             ;
140426 / 254000,,140347          JRST      140347             ;;GIVE IT BACK ANYWAY
                       ;ALL THE "PUSHJ P,TTYKL9"S ABOVE USED TO BE "SETZM TTYTAB(LINE)"
                       ;IF LH OF TTYTAB ENTRY ≠ LINE THEN WE WERE IN A TALK RING AND
                       ;THIS ROUTINE PATCHES THE RING UP TO LEAVE US OUT
                       TTYKL9:
140427 / 135700,,136447           LDB  AC2,136447             ;;MY TALKRING POINTER
140430 / 201740,,000000         MOVEI  AC3,                   ;
140431 / 250742,,032347          EXCH  AC3,TTYTAB(LINE)       ;;DON'T NEED TTYTAB ANYMORE
140432 / 322740,,037403         JUMPE  AC3,037403             ;;GRUMBLE, SOMEBODY CLOBBERED IT ALREADY
140433 / 306702,,000000          CAIN  AC2,      (LINE)       ;;POINTS TO ME?
140434 / 263140,,000000          POPJ    P,                   ;;YES, NO PROBLEM
140435 / 261140,,000016          PUSH    P,000016             ;;SAVE NEXT GUY
140436 / 200740,,000002          MOVE  AC3,000002             ;;MY LINE NUMBER
                       TTYK91:
140437 / 200100,,000016          MOVE LINE,000016             ;;LOOP THROUGH TILL YOU FIND ME
140440 / 135700,,136447           LDB  AC2, PTALK             ;
140441 / 302717,,000000          CAIE  AC2,      (AC3)        ;
140442 / 254000,,140437          JRST      140437             ;;NOT ME YET
140443 / 262140,,000016           POP    P,000016             ;;RETRIEVE MY POINTEE
140444 / 137700,,136447           DPB  AC2,136447             ;;MAKE PREV POINT TO NEXT
140445 / 302702,,000000          CAIE  AC2,      (LINE)       ;
140446 / 254000,,140451          JRST      TTYK92             ;
140447 / 205700,,000001         MOVSI  AC2,TLKRNG             ;
140450 / 412702,,017717        ANDCAM  AC2,LINTAB(LINE)       ;;TURN OFF THE FLAG IF ONLY ONE LEFT
                       TTYK92:
140451 / 200100,,000017          MOVE LINE,000017             ;;FIX LINE
140452 / 263140,,000000          POPJ    P,                   ;
                       ;OUTCH6, OUTCHS, OUTCHR
                       ;MORE CHARACTER AND BUFFER HANDLING ROUTINES
                       ;OUTCHR CALLED AT UUO LEVEL TO OUTPUT A CHARACTER
                       ;DAT AND DDB MUST BE SET UP
                       ;CHECK IS MADE FOR WHETHER SPECIAL ECHO IS REQUIRED
                       ;RIGHT THINGS ARE DONE WITH PHPOS & HPOS(NEEDNT BE SET)
                       ;CALL	MOVE	CHR,CHAR TO BE OUTPUT
                       ;	PUSHJ	P,OUTCHR
                       ;	ONLY RETURN, WITH CHAR. OR ITS SPECIAL ECHO PLACED IN OUT BUFFER
                       OUTCH6:
140453 / 271400,,000040          ADDI  CHR,000040             ;;TYPE OUT SIXBIT.
                       OUTCHS:
140454 / 322540,,140476         JUMPE  PID,OUTC1S             ;
140455 / 700340,,000040         CONSO  APR,000040             ;;ARE WE REALLY THE TEN?
140456 / 254000,,044265          JRST      044265             ;;NO, JUST TYPE ON THE SIX'S CTY
140457 / 260140,,000316         PUSHJ    P,PUSHIT             ;
140460 / 260140,,044066         PUSHJ    P,DISMES             ;
140470 / 200040,,000013          MOVE  TAC,   PID             ;
140471 / 260140,,044200         PUSHJ    P,DISOCT             ;
140472 / 260140,,044066         PUSHJ    P,DISMES             ;
140474 / 260140,,000341         PUSHJ    P, POPIT             ;
140475 / 400540,,000000          SETZ  PID,                   ;;MAKE IT RIGHT!!
                       OUTC1S:
140476 / 261140,,000001          PUSH    P,   TAC             ;
140477 / 261140,,000004          PUSH    P,000004             ;;CALL OUTCHR ROUTINE
                       ; BUT SAVE ITEM AND TAC
140500 / 260140,,140514         PUSHJ    P,OUTCH5             ;
140501 / 262140,,000004           POP    P,  HPOS             ;
140502 / 254000,,037376          JRST       TPOPJ             ;
                       OUTCHR:
140503 / 200046,,000002          MOVE  TAC,DEVIOS(DDB)        ;;GET IOS
140504 / 603040,,002000          TLNE  TAC,TTYDTC             ;
140505 / 263140,,000000          POPJ    P,                   ;
140506 / 405040,,000016          ANDI  TAC,    16             ;
140507 / 306040,,000010          CAIN  TAC,000010             ;;MODE 10 OR 11?
140510 / 254000,,140544          JRST      140544             ;;YES, NO CONVERSION
140511 / 201740,,000020         MOVEI  AC3,000020             ;;CHECK FREE SPACE
140512 / 311746,,000032          CAML  AC3,TOFCTR(DDB)        ;; FOR EXPANDING CHARS
140513 / 254000,,140771          JRST      140771             ;;NOT ENOUGH ROOM
                       OUTCH5:
140514 / 200046,,000002          MOVE  TAC,DEVIOS(DDB)        ;
140515 / 603040,,002000          TLNE  TAC,TTYDTC             ;
140516 / 263140,,000000          POPJ    P,                   ;
140517 / 405040,,000016          ANDI  TAC,    16             ;
140520 / 306040,,000010          CAIN  TAC,000010             ;;MODE 10 OR 11?
140521 / 254000,,140544          JRST      140544             ;;YES, NO CONVERSION
140522 / 405400,,000177          ANDI  CHR,000177             ;;MASK ANY JUNK
140523 / 261140,,000002          PUSH    P,  LINE             ;
140524 / 260140,,140030         PUSHJ    P,140030             ;;SET UP LINE
140525 / 135200,,136446           LDB HPOS,136446             ;;GET HORIZONTAL POSITION
140526 / 200740,,000004          MOVE  AC3,000004             ;;SAVE FOR TAB
140527 / 260140,,140602         PUSHJ    P,140602             ;;NEW HPOS AFTER CHAR OUTPUT
140530 / 255000,,000000          JFCL                         ;
140531 / 603100,,426000          TLNE LINE,426000             ;
140532 / 254000,,140535          JRST      140535             ;;PAGE PRINTER WILL HANDLE CRLF
140533 / 301200,,000110          CAIL HPOS,000110             ;;DID IT GO OVER LINE?
140534 / 260140,,144465         PUSHJ    P,144465             ;;YES, OUTPUT CRLF
                       OUTCHA:
140535 / 137200,,136446           DPB HPOS,136446             ;;UPDATE IN CORE
140536 / 607040,,100000          TLNN  TAC,100000             ;;VT,FF,HT?
140537 / 254000,,140543          JRST      140543             ;;NO.
140540 / 603100,,004000          TLNE LINE,004000             ;;IS THIS A PTY?
140541 / 603100,,001000          TLNE LINE,001000             ;;YES. IS IT AN IMP?
140542 / 254000,,140550          JRST      140550             ;;NOT A PTY, OR AN ARPA-PTY. - EXPAND TABS, ETC.
                       OUTC1X:
140543 / 262140,,000002           POP    P,  LINE             ;
                       OUTCH2:
140544 / 700600,,001004          CONO   PI,001004             ;;PREVENT REENTRANT CALLS ON PUTCHO...
140545 / 260140,,140642         PUSHJ    P,140642             ;;PUT OUT THE CHAR.
140546 / 700600,,002004          CONO   PI, SCNON             ;
140547 / 263140,,000000          POPJ    P,                   ;
                       ;MORE OUTCHR  ADJHP
                       ;HERE ON UUO OUTPUT OF HT,FF,VT
                       OUTCH1:
140550 / 200200,,000017          MOVE HPOS,000017             ;;POS BEFORE THE TAB
140551 / 200040,,000010          MOVE  TAC,000010             ;;COPY THE CHARACTER
140552 / 306400,,000011          CAIN  CHR,000011             ;;IS IT A TAB
140553 / 603100,,000010          TLNE LINE,000010             ;;ARE WE ALWAYS EXPANDING THEM?
140554 / 254000,,140565          JRST      140565             ;;EXPAND!
140555 / 603100,,426000          TLNE LINE,426000             ;;NEED IDLE CHARS.?
140556 / 254000,,140543          JRST      140543             ;;NO
                       OUTC1A:
140557 / 262140,,000002           POP    P,000002             ;;HERE ON OUTPUT OF TAB TO SMART TTY
140560 / 405200,,000007          ANDI HPOS,000007             ;;JUST LOW PART FOR INDEX
154352 / 201200,,000006         MOVEI HPOS,000006             ;;8 SPACES-2 IDLES
154353 / 201200,,000007         MOVEI HPOS,000007             ;;7 SPACES-1 IDLE
154354 / 201200,,000007         MOVEI HPOS,000007             ;;6 SPACES-1 IDLE
154355 / 201200,,000007         MOVEI HPOS,000007             ;;5 SPACES-1 IDLE
154356 / 201200,,000007         MOVEI HPOS,000007             ;;4 SPACES-1 IDLE
154357 / 254000,,140544          JRST      140544             ;;3 SPACES-0 IDLES
154360 / 254000,,140544          JRST      140544             ;;2 SPACES-0 IDLES
154361 / 254000,,140566          JRST      OUTC1Z             ;
140561 / 256004,,154352           XCT      154352(HPOS)       ;;1 SPACE -CONVERT TO SPACE (OR CTY WILL MISS TAB STOP)
140562 / 260140,,140544         PUSHJ    P,140544             ;;SEND THE REAL CHAR
140563 / 201400,,000001         MOVEI  CHR,000001             ;;A DELAY CHARACTER
140564 / 254000,,140571          JRST      140571             ;;OUTPUT SLUFFS. COUNT WILL BE MODIFIED ON VT,FF
                       OUTC1Y:
140565 / 262140,,000002           POP    P,000002             ;;HERE TO EXPAND CHARACTER.
                       OUTC1Z:
140566 / 201400,,000040         MOVEI  CHR,000040             ;;STUPID TTY.
140567 / 302040,,000011          CAIE  TAC,000011             ;;H TAB?
140570 / 201400,,000012         MOVEI  CHR,000012             ;;NO. OUTPUT LF'S.
                       OUTC1C:
140571 / 306040,,000014          CAIN  TAC,000014             ;;FF?
140572 / 201200,,000000         MOVEI HPOS,                   ;;YES. 8 LF'S.
140573 / 306040,,000013          CAIN  TAC,000013             ;;VT?
140574 / 201200,,000004         MOVEI HPOS,000004             ;;YES. 4 LF'S.
                       OUTC1B:
140575 / 260140,,140544         PUSHJ    P,140544             ;;OUTPUT THE PHONY CHAR
140576 / 271200,,000001          ADDI HPOS,000001             ;;COUNT THE OUTPUTS
140577 / 602200,,000007          TRNE HPOS,000007             ;;ENOUGH?
140600 / 254000,,140575          JRST      140575             ;;NO. MORE.
140601 / 263140,,000000          POPJ    P,                   ;;NO MORE
                       ;CALLED AT UUO AND INT LEVEL
                       ;TO ADJUST HPOS FOR OUTPUT OF CHR
                       ;SKIPS IF SPCHECK SAYS SPECIAL CHAR
                       ADJHP:
140602 / 260140,,141026         PUSHJ    P,141026             ;;GET BITS FROM SPCTAB
140603 / 344200,,037403          AOJA HPOS,037403             ;;ORDINARY CHAR.
140604 / 301400,,000040          CAIL  CHR,000040             ;;WHICH SPECIALS?
140605 / 254000,,037401          JRST      037401             ;;HIGH ONES
140606 / 306400,,000015          CAIN  CHR,000015             ;;CARRIAGE RETURN?
140607 / 201200,,000000         MOVEI HPOS,                   ;;YES.
140610 / 302400,,000011          CAIE  CHR,000011             ;;TAB?
140611 / 254000,,037401          JRST      037401             ;;NO. NO HP MOD
140612 / 660200,,000007           TRO HPOS,000007             ;;TAB. TO NEXT 8
140613 / 344200,,037401          AOJA HPOS,CPOPJ1             ;
                       ;PUTCHI, PUTCHO
                       ;ROUTINE TO PUT A CHARACTER INTO A BUFFER (FOR INPUT,MERTPO, AND ONCE)
                       ;CALL	MOVEI DAT,TTXBUF(DDB)		;TO SPECIFY BUFFER
                       ;	PUSHJ	P,PUTCHI
                       ;	ERROR RETURN, BUFFER "FULL"
                       ;	SUCCESSFUL RETURN
                       PUTCHI:
140614 / 377005,,000005          SOSG        FCTR(DAT)        ;; ANY FREE SPACES LEFT?
140615 / 254000,,140772          JRST      140772             ;;NO
                       PUTCHA:
140616 / 373005,,000002         SOSLE        PCTR(DAT)        ;;LAST BYTE IN BUFFER FILLED?
140617 / 254000,,140625          JRST      140625             ;;NO. GO AHEAD
140620 / 261140,,000001          PUSH    P,   TAC             ;
140621 / 200045,,000000          MOVE  TAC,      (DAT)        ;;GET ADR AND SIZE OF BUFFER
140622 / 556045,,000002         HLRZM  TAC,  PCTR(DAT)        ;;INITIAL COUNTER
140623 / 542045,,000001          HRRM  TAC,  PUTR(DAT)        ;;BYTE POINTER.
140624 / 262140,,000001           POP    P,000001             ;;RESTORE TAC
                       PUTCI1:
140625 / 136405,,000001          IDPB  CHR,  PUTR(DAT)        ;
140626 / 254000,,037401          JRST      CPOPJ1             ;
                       ;ROUTINE TO STUFF MONITOR ERROR MESSAGE IN TTI BUFFER
                       ;CALLED IN LINE FROM PUTCHO
                       TTIOUT:
140627 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
140630 / 350006,,000032           AOS      TOFCTR(DDB)        ;;RE-ADJUST FREE CHAR COUNT
140631 / 606000,,400000          TRNN      400000             ;;MONITOR ERROR MESSAGE?
140632 / 254000,,140771          JRST      140771             ;;NO, ZERO CHR TO INDICATE
140633 / 666000,,002000          TRON      002000             ;;TEST FLAG AND SET IF NOT ON
140634 / 260140,,140775         PUSHJ    P,140775             ;;CLEAR INPUT
140635 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;AND MAKE SURE FLAG GETS ON
140636 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;YES, PUT REST IN TTI BUFFER
140637 / 260140,,140614         PUSHJ    P,PUTCHI             ;
140640 / 263140,,000000          POPJ    P,                   ;;ERROR RETURN
140641 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO PLACE A CHARACTER INTO THE OUTPUT BUFFER
                       ;CALLED AT INTERRUPT LEVEL 
                       ;CALL	MOVE	CHR,CHARACTER TO PLACE INTO BUFFER
                       ;	PUSHJ	P,PUTCHO
                       ;	ONLY RETURN, WHETHER OR NOT CHARACTER WAS PLACED
                       PUTCHO:
140642 / 261140,,000001          PUSH    P,   TAC             ;
140643 / 135040,,037577           LDB  TAC, PUNIT             ;
140644 / 500041,,017717           HLL  TAC,LINTAB(TAC)        ;
140645 / 603040,,100000          TLNE  TAC,100000             ;;FILLING THIS TTY?
140646 / 254000,,140665          JRST      FILLCR             ;
                       FILNCR:
140647 / 607040,,000020          TLNN  TAC,   FCS             ;
140650 / 254000,,140703          JRST      140703             ;;NOT FULL CHAR SET - CONVERT LOWER TO UPPER
                       PUTNLC:
140651 / 262140,,000001           POP    P,   TAC             ;
                       PUTCRS:
140652 / 377006,,000032          SOSG      TOFCTR(DDB)        ;;RETURN IMMEDIATELY IF NO ROOM
140653 / 254000,,140627          JRST      140627             ;;UNLESS MONITOR ERROR MESSAGE
140654 / 373006,,000027         SOSLE      TOPCTR(DDB)        ;;LAST BYTE IN BUFFER?
140655 / 254000,,140663          JRST      140663             ;;NO. GO ON.
140656 / 261140,,000001          PUSH    P,000001             ;;SAVE AN AC
140657 / 200046,,000025          MOVE  TAC,TTOBUF(DDB)        ;;GET COUNT AND ADDRESS
140660 / 556046,,000027         HLRZM  TAC,TOPCTR(DDB)        ;;INITIAL COUNTER
140661 / 542046,,000026          HRRM  TAC,TOPUTR(DDB)        ;;INITIAL POINTER
140662 / 262140,,000001           POP    P,000001             ;;RESTORE AC
                       PUTCO1:
140663 / 136406,,000026          IDPB  CHR,TOPUTR(DDB)        ;;PUT CHARACTER INTO BUFFER
140664 / 263140,,000000          POPJ    P,                   ;
                       FILLCR:
140665 / 302400,,000015          CAIE  CHR,    15             ;
140666 / 254000,,140647          JRST      FILNCR             ;
140667 / 135040,,037574           LDB  TAC,037574             ;;GET IO MODE
140670 / 302040,,000010          CAIE  TAC,    10             ;
140671 / 306040,,000011          CAIN  TAC,    11             ;
140672 / 254000,,140647          JRST      140647             ;;DON'T FILL IN IMAGE MODE
140673 / 201040,,000010         MOVEI  TAC,    10             ;
140674 / 250043,,000000          EXCH  TAC,      (P)          ;
                       PUTCRX:
140675 / 260140,,140652         PUSHJ    P,PUTCRS             ;
140676 / 322400,,140701         JUMPE  CHR,CRFULL             ;
140677 / 373003,,000000         SOSLE            (P)          ;;DONE YET?
140700 / 254000,,140675          JRST      140675             ;;NO
                       CRFULL:
140701 / 262143,,000000           POP    P,      (P)          ;
140702 / 263140,,000000          POPJ    P,                   ;
                       PUTCNV:
140703 / 301400,,000141          CAIL  CHR,000141             ;
140704 / 303400,,000172         CAILE  CHR,000172             ;
140705 / 254000,,140651          JRST      PUTNLC             ;
140706 / 421400,,000040        ANDCMI  CHR,000040             ;;CONVERT TO UPPER CASE
140707 / 254000,,140651          JRST      PUTNLC             ;
                       ;GETCHR, GETCHY
                       ;CHARACTER AND BUFFER HANDLING ROUTINES
                       ;ROUTINE TO PICK UP A CHARACTER FROM ANY BUFFER
                       ;CALL	MOVEI	DAT,TTXBUF(DDB)		;TO SPECIFY BUFFER
                       ;	PUSHJ	P,GETCHR
                       ;	ONLY RETURN			;CHARACTER OR ZERO IN CHR
                       ;					;ZERO INDICATES BUFFER "EMPTY"(TAKR=PUTR)
                       GETCHR:
140710 / 260140,,140713         PUSHJ    P,GETCHY             ;
140711 / 405400,,000177          ANDI  CHR,000177             ;;THROW OUT CONTROL BITS.
140712 / 263140,,000000          POPJ    P,                   ;
                       GETCHY:
140713 / 554405,,000000          HLRZ  CHR,      (DAT)        ;;CHARS IN BUFFER (THIS IS A BUG TRAP!!)
140714 / 306400,,000140          CAIN  CHR,000140             ;;TTICHR FOR INPUT.
140715 / 254000,,140736          JRST      GETCHA             ;
140716 / 260140,,000316         PUSHJ    P,PUSHIT             ;
140717 / 261140,,000002          PUSH    P,  LINE             ;
140720 / 260140,,044066         PUSHJ    P,DISMES             ;
140722 / 262140,,000001           POP    P,   TAC             ;
140723 / 260140,,044170         PUSHJ    P,DISLOC             ;
140724 / 260140,,044066         PUSHJ    P,DISMES             ;
140732 / 260140,,000341         PUSHJ    P, POPIT             ;
140733 / 332000,,000500         SKIPE      000500             ;
140734 / 260140,,000347         PUSHJ    P,000347             ;
140735 / 254000,,140755          JRST      GETCHO             ;
                       ;GETCHA, GETCHO
                       ; ROUTINE TO GET CHARACTER
                       GETCHA:
140736 / 375005,,000006         SOSGE       TSYNC(DAT)        ;;ALWAYS COME HERE FOR INPUT.
140737 / 402005,,000006         SETZM       TSYNC(DAT)        ;;DON'T LET IT GET NEGATIVE
152351 / 777777,,777763                                       ;
152351 / 130737,,777763 POINT 7,777777777763,35-PUNITP        ;
140740 / 135400,,152351           LDB  CHR,152351             ;
140741 / 301400,,000020          CAIL  CHR, DPYL0             ;
140742 / 303400,,000117         CAILE  CHR,000117             ;
140743 / 254000,,140755          JRST      GETCHO             ;
140744 / 554410,,012567          HLRZ  CHR,012567(CHR)        ;
140745 / 606400,,000001          TRNN  CHR,WTFLAG             ;
140746 / 254000,,140755          JRST      140755             ;; IF LINED NOT WAITING, JUST LEAVE WITH THE GOODS
140747 / 260140,,140755         PUSHJ    P,140755             ;; GET CHARACTER
140750 / 260140,,000316         PUSHJ    P,PUSHIT             ;
152351 / 777777,,777763                                       ;
152351 / 130737,,777763 POINT 7,777777777763,35-PUNITP        ;
140751 / 135240,,152351           LDB  DAT,152351             ;
140752 / 260140,,147550         PUSHJ    P,ACTIV3             ;
140753 / 260140,,000341         PUSHJ    P, POPIT             ;
140754 / 263140,,000000          POPJ    P,                   ;
                       GETCHO:
                       GETCHX:
140755 / 200405,,000004          MOVE  CHR,  TCTR(DAT)        ;; GET TAKR BUFFER
140756 / 316405,,000002          CAMN  CHR,  PCTR(DAT)        ;;IS IT SAME AS PUTR(BUFFER EMPTY)?
140757 / 254000,,140771          JRST      140771             ;;YES, LOAD CHR WITH ZERO AND EXIT
140760 / 373005,,000004         SOSLE        TCTR(DAT)        ;;NO, ARE WE AT END OF BUFFER?
140761 / 254000,,140765          JRST      140765             ;;NO. GO ON.
140762 / 200405,,000000          MOVE  CHR,      (DAT)        ;;YES. START AT TOP AGAIN
140763 / 556405,,000004         HLRZM  CHR,  TCTR(DAT)        ;;INITIAL COUNTER
140764 / 542405,,000003          HRRM  CHR,  TAKR(DAT)        ;;INITIAL POINTER
                       GETCH2:
140765 / 134405,,000003          ILDB  CHR,  TAKR(DAT)        ;;GET CHARACTER
140766 / 350005,,000005           AOS        FCTR(DAT)        ;;INCREMENT FREE CHAR. COUNT
140767 / 322400,,140755         JUMPE  CHR,140755             ;;SKIP NULLS
140770 / 263140,,000000          POPJ    P,                   ;
                       GETCH1:
140771 / 634400,,000010          TDZA  CHR,000010             ;;RETURN 0 INDICATING END OF BUFFER
                       PUTCI0:
140772 / 350005,,000005           AOS        FCTR(DAT)        ;;FIX FREE COUNTER
140773 / 263140,,000000          POPJ    P,                   ;
                       ;TSETBF, SETBFI, SETBF3, SETBFO
                       ;ROUTINES TO SET UP BUFFERS
                       TSETBF:
140774 / 260140,,141013         PUSHJ    P,141013             ;; INIT TTO BUFFER
                       SETBFI:
140775 / 200240,,000004          MOVE  DAT,000004             ;; SAVE J
140776 / 135200,,037575           LDB    J,037575             ;; GET JOB #
140777 / 322200,,141002         JUMPE    J,SETBF4             ;
141000 / 205040,,100000         MOVSI  TAC,COMSNB             ;
141001 / 260140,,067011         PUSHJ    P,067011             ;; CLEAR FROM SWAPIN LIST FOR COMMAND
                       SETBF4:
141002 / 200200,,000005          MOVE    J,000005             ;; RESTORE J
141003 / 201240,,000001         MOVEI  DAT,     1             ;
141004 / 137240,,136451           DPB  DAT,PCOMIC             ;
141005 / 137240,,136452           DPB  DAT,PLSTLC             ;
141006 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;SPECIFY USER MODE INPUT BUFFER
141007 / 402006,,000024         SETZM      TISYNC(DDB)        ;;NO LINES IN BUFFER
141010 / 505040,,001100          HRLI  TAC,001100             ;;9 BIT BYTES IN INPUT BUFFER !!
141011 / 254000,,141015          JRST      141015             ;;INIT BUFFER
                       SETBF3:
141012 / 260140,,144756         PUSHJ    P,144756             ;;MAKE SURE GUY ISN'T HUNG ON OUTPUT.
                       SETBF2:
141013 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;;SPECIFY OUTPUT BUFFER
                       SETBFO:
141014 / 505040,,000700          HRLI  TAC,000700             ;;7 BIT BYTES IN OUTPUT BUFFER.
                       SETBF0:
141015 / 540045,,000000           HRR  TAC,      (DAT)        ;
141016 / 202045,,000003         MOVEM  TAC,  TAKR(DAT)        ;
141017 / 202045,,000001         MOVEM  TAC,  PUTR(DAT)        ;
141020 / 201040,,000001         MOVEI  TAC,     1             ;
141021 / 202045,,000004         MOVEM  TAC,  TCTR(DAT)        ;;SO FIRST SOSG DOESNT SKIP
141022 / 202045,,000002         MOVEM  TAC,  PCTR(DAT)        ;
141023 / 554045,,000000          HLRZ  TAC,      (DAT)        ;;CHARACTER COUNT
141024 / 202045,,000005         MOVEM  TAC,  FCTR(DAT)        ;;UPDATE FREE CHARACTER COUNT
141025 / 263140,,000000          POPJ    P,                   ;
                       ;SPCHEK, SPCACT
                       ;ROUTINE TO CHECK IF A CHARACTER IS SPECIAL(ASCII 0-37, 175-177)
                       ;CALL	MOVE	CHR,CHAR. TO BE CHECKED
                       ;	PUSHJ	P,SPCHEK
                       ;	RETURN1 IF REGULAR ASCII CHAR (40-174), C(TAC)=0
                       ;	RETURN2 IF SPECIAL CHAR., TAC LOADED WITH WORD FROM SPCTAB
                       SPCHEK:
152065 / 000000,,000010                                       ;
152065 / 000700,,000010 POINT 7,00000010,35                   ;
141026 / 135040,,152065           LDB  TAC,152065             ;;GET CODE WITHOUT CTRL BITS.
141027 / 332041,,141054         SKIPE  TAC,SPCTAB(TAC)        ;
141030 / 607040,,534000          TLNN  TAC,534000             ;;MAYBE A SPECIAL...
141031 / 263140,,000000          POPJ    P,                   ;;NOT SPECIAL, AFTER ALL.
141032 / 254000,,037401          JRST      CPOPJ1             ;
                       ;SPECIAL CHARACTER TABLE
                       ;FORMAT	XWD BITS+CHAR,ADRESS OF ROUTINE
                       ;HIGH ORDER BITS IN LH:
                       SPCACT:
152065 / 000000,,000010                                       ;
152065 / 000700,,000010 POINT 7,00000010,35                   ;
141033 / 135040,,152065           LDB  TAC,152065             ;
141034 / 322040,,037403         JUMPE  TAC,037403             ;;ALWAYS ACTIVATE ON ↑C
141035 / 261140,,000002          PUSH    P,  LINE             ;
141036 / 231040,,000044         IDIVI  TAC,000044             ;
141037 / 271046,,000000          ADDI  TAC,      (DDB)        ;
141040 / 200041,,000011          MOVE  TAC,ACTBTS(TAC)        ;
141041 / 242042,,000000           LSH  TAC,      (LINE)       ;
141042 / 200106,,000014          MOVE LINE,ACTMOD(DDB)        ;
141043 / 603040,,400000          TLNE  TAC,400000             ;
141044 / 254000,,141052          JRST       TTPOP             ;
141045 / 602100,,000004          TRNE LINE,SUPSCM             ;
141046 / 302500,,000003          CAIE UCHN,     3             ;
141047 / 606100,,000001          TRNN LINE,SUPBTS             ;
141050 / 327500,,141052         JUMPG UCHN, TTPOP             ;
141051 / 350003,,777777           AOS      777777(P)          ;
                       TTPOP:
141052 / 262140,,000002           POP    P,  LINE             ;
141053 / 263140,,000000          POPJ    P,                   ;
                       ;SPCTAB
                       SPCTAB:
141054 / 623000,,144320           XWD ALLSPA+SPACTN+ECHSUP+BREAKB+SPBKDS,CONTC	 ;
                       ;↑C
141055 / 000000,,000000                                       ;;↑A
141056 / 642000,,144363           XWD ALLSPA+SPACTN+ECHSUP+IMLCHR,CONTB	 ;
                       ;↑B FULTWX&HOLD SW
141057 / 000000,,000000                                       ;; β
141060 / 000000,,000000                                       ;;↑D EOT
141061 / 000000,,000000                                       ;;↑E WRU
141062 / 000000,,000000                                       ;;	XWD	SPACTN+ECHSUP,CONTF		;↑F FCS SW
141063 / 000000,,000000                                       ;;↑G (BELL)
141064 / 000000,,000000                                       ;;↑H OR BACKSPACE KEY
141065 / 711000,,144432           XWD ALLSPA+SPACTN+SPHPOS+SPOUT+SPBKDS,CONTI	 ;
                       ;↑I OR TAB
141066 / 021000,,000000           XWD BREAKB+SPBKDS,0			      ;
                       ;↑J OR LINE FEED
141067 / 700000,,144413           XWD ALLSPA+SPACTN+SPOUT,CONTK	 ;
                       ;↑K OR VERT TAB
141070 / 700000,,144415           XWD ALLSPA+SPACTN+SPOUT,CONTL	 ;
                       ;↑L OR FORM FEED
141071 / 611000,,144504           XWD ALLSPA+SPACTN+SPHPOS+SPBKDS,CRLF ;
                       ;↑M OR CARRIAGE RETURN
141072 / 000000,,000000                                       ;;↑N
141073 / 400000,,144340           XWD SPACTN,CONTO			         ;
                       ;↑O SUPP OUTPUT
141074 / 000000,,000000                                       ;;	XWD	SPACTN+ECHSUP,CONTP		;↑P T35 SW
141075 / 000000,,000000                                       ;;↑Q XON (PAPERTAPE)
141076 / 000000,,000000                                       ;;↑R TAPE PUNCH ON
141077 / 000000,,000000                                       ;;↑S XOFF
141100 / 000000,,000000                                       ;;↑T TAPE PUNCH OFF
141101 / 400000,,144344           XWD SPACTN,CONTU			         ;
                       ;↑U DELETE LINE
141102 / 000000,,000000                                       ;;↑V OR IDLE
141103 / 000000,,000000                                       ;;↑W
141104 / 000000,,000000                                       ;;↑X
141105 / 000000,,000000                                       ;;↑Y
141106 / 642000,,144332           XWD ALLSPA+SPACTN+ECHSUP+IMLCHR,CONTZ	 ;
                       ;↑Z TTY EOF
141107 / 000000,,000000                                       ;;ASCII 33 (OLD ALT-MODE)
141110 / 000000,,000000                                       ;;ASCII 34
141111 / 000000,,000000                                       ;;ASCII 35
141112 / 000000,,000000                                       ;;ASCII 36
141113 / 000000,,000000                                       ;;ASCII 37
141114 / 000000,,000000                                       ;
141115 / 000000,,000000                                       ;
141116 / 000000,,000000                                       ;
141117 / 000000,,000000                                       ;
141120 / 000000,,000000                                       ;
141121 / 000000,,000000                                       ;
141122 / 000000,,000000                                       ;
141123 / 000000,,000000                                       ;
141124 / 000000,,000000                                       ;
141125 / 000000,,000000                                       ;
141126 / 000000,,000000                                       ;
141127 / 000000,,000000                                       ;
141130 / 000000,,000000                                       ;
141131 / 000000,,000000                                       ;
141132 / 000000,,000000                                       ;
141133 / 000000,,000000                                       ;
141134 / 000200,,000000           XWD NUMBER,0                ;
141135 / 000200,,000000           XWD NUMBER,0                ;
141136 / 000200,,000000           XWD NUMBER,0                ;
141137 / 000200,,000000           XWD NUMBER,0                ;
141140 / 000200,,000000           XWD NUMBER,0                ;
141141 / 000200,,000000           XWD NUMBER,0                ;
141142 / 000200,,000000           XWD NUMBER,0                ;
141143 / 000200,,000000           XWD NUMBER,0                ;
141144 / 000200,,000000           XWD NUMBER,0                ;
141145 / 000200,,000000           XWD NUMBER,0                ;
141146 / 000000,,000000                                       ;
141147 / 000000,,000000                                       ;
141150 / 000000,,000000                                       ;
141151 / 000000,,000000                                       ;
141152 / 000000,,000000                                       ;
141153 / 000000,,000000                                       ;
141154 / 000000,,000000                                       ;
141155 / 000400,,000000           XWD LETTER,0                ;
141156 / 000400,,000000           XWD LETTER,0                ;
141157 / 000400,,000000           XWD LETTER,0                ;
141160 / 000400,,000000           XWD LETTER,0                ;
141161 / 000400,,000000           XWD LETTER,0                ;
141162 / 000400,,000000           XWD LETTER,0                ;
141163 / 000400,,000000           XWD LETTER,0                ;
141164 / 000400,,000000           XWD LETTER,0                ;
141165 / 000400,,000000           XWD LETTER,0                ;
141166 / 000400,,000000           XWD LETTER,0                ;
141167 / 000400,,000000           XWD LETTER,0                ;
141170 / 000400,,000000           XWD LETTER,0                ;
141171 / 000400,,000000           XWD LETTER,0                ;
141172 / 000400,,000000           XWD LETTER,0                ;
141173 / 000400,,000000           XWD LETTER,0                ;
141174 / 000400,,000000           XWD LETTER,0                ;
141175 / 000400,,000000           XWD LETTER,0                ;
141176 / 000400,,000000           XWD LETTER,0                ;
141177 / 000400,,000000           XWD LETTER,0                ;
141200 / 000400,,000000           XWD LETTER,0                ;
141201 / 000400,,000000           XWD LETTER,0                ;
141202 / 000400,,000000           XWD LETTER,0                ;
141203 / 000400,,000000           XWD LETTER,0                ;
141204 / 000400,,000000           XWD LETTER,0                ;
141205 / 000400,,000000           XWD LETTER,0                ;
141206 / 000400,,000000           XWD LETTER,0                ;
141207 / 000000,,000000                                       ;
141210 / 000000,,000000                                       ;
141211 / 000000,,000000                                       ;
141212 / 000000,,000000                                       ;
141213 / 000000,,000000                                       ;
141214 / 000000,,000000                                       ;
141215 / 000400,,000000           XWD LETTER,0                ;
141216 / 000400,,000000           XWD LETTER,0                ;
141217 / 000400,,000000           XWD LETTER,0                ;
141220 / 000400,,000000           XWD LETTER,0                ;
141221 / 000400,,000000           XWD LETTER,0                ;
141222 / 000400,,000000           XWD LETTER,0                ;
141223 / 000400,,000000           XWD LETTER,0                ;
141224 / 000400,,000000           XWD LETTER,0                ;
141225 / 000400,,000000           XWD LETTER,0                ;
141226 / 000400,,000000           XWD LETTER,0                ;
141227 / 000400,,000000           XWD LETTER,0                ;
141230 / 000400,,000000           XWD LETTER,0                ;
141231 / 000400,,000000           XWD LETTER,0                ;
141232 / 000400,,000000           XWD LETTER,0                ;
141233 / 000400,,000000           XWD LETTER,0                ;
141234 / 000400,,000000           XWD LETTER,0                ;
141235 / 000400,,000000           XWD LETTER,0                ;
141236 / 000400,,000000           XWD LETTER,0                ;
141237 / 000400,,000000           XWD LETTER,0                ;
141240 / 000400,,000000           XWD LETTER,0                ;
141241 / 000400,,000000           XWD LETTER,0                ;
141242 / 000400,,000000           XWD LETTER,0                ;
141243 / 000400,,000000           XWD LETTER,0                ;
141244 / 000400,,000000           XWD LETTER,0                ;
141245 / 000400,,000000           XWD LETTER,0                ;
141246 / 000400,,000000           XWD LETTER,0                ;
141247 / 000000,,000000                                       ;
141250 / 000000,,000000                                       ;
141251 / 622000,,144352           XWD ALLSPA+SPACTN+BREAKB+ECHSUP,ALTMOD	 ;
                       ;OLD DEC ALTMODE 175
141252 / 000000,,000000                                       ;;CLOSE CURLY BRACKET
141253 / 407000,,144375           XWD SPACTN+ECHSUP+FCSBRK+SPBKDS,RUBOUT	 ;
                       ;177 RUBOUT
                       ;TTYUUO, CLRBUF, INSKIP
                       ;TTYUUO - QUANTITY IN AC FIELD DETERMINES ACTION OF UUO (051)
                       TTYUUO:
141254 / 301500,,000020          CAIL UCHN,000020             ;;TOO HIGH AC FIELD?
141255 / 263140,,000000          POPJ    P,                   ;;YES, NO-OP
141256 / 260140,,137612         PUSHJ    P,TTYFNU             ;
141257 / 554052,,141267          HLRZ  TAC,TTUUOT(UCHN)       ;;GET BITS
141260 / 603000,,002000          TLNE      TTYDTC             ;
141261 / 602040,,200000          TRNE  TAC,200000             ;;DO WE CALL ROUTINE IF DETACHED?
141262 / 304000,,000000          CAIA                         ;
141263 / 263140,,000000          POPJ    P,                   ;;QUIT NOW
141264 / 337012,,141267         SKIPG      TTUUOT(UCHN)       ;;IS IT AN INPUT TYPE ?
141265 / 260140,,142141         PUSHJ    P,142141             ;;YES. TURN OFF CTRL. O.
141266 / 254032,,141267          JRST      @TTUUOT(UCHN)      ;;DISPATCH TO UUO ROUTINES
                       ; UUOMAC TTUUOT,TTYUUO
                       TTUUOT:
141267 / 600000,,141461                                       ;
141270 / 000000,,141475                                       ;
141271 / 600000,,141370                                       ;
141272 / 000000,,141447                                       ;
141273 / 600000,,141410                                       ;
141274 / 600000,,141366                                       ;
141275 / 000000,,141506                                       ;
141276 / 000000,,141532                                       ;
141277 / 000000,,137562                                       ;
141300 / 000000,,141330                                       ;
141301 / 000000,,141012                                       ;
141302 / 600000,,141351                                       ;
141303 / 600000,,141432                                       ;
141304 / 000000,,141577                                       ;
141305 / 200000,,141755                                       ;
141306 / 000000,,141625                                       ;
141307 / 051740,,132210        TTYUUO UUOCNT-1,UUOLNK             ;
                       CLRBUF:
141330 / 603000,,000400          TLNE      000400             ;;NOT ALLOWED IN MONITOR MODE!
141331 / 263140,,000000          POPJ    P,                   ;;JUST RETURN
141332 / 603100,,002000          TLNE LINE, IMLIN             ;
141333 / 254000,,141343          JRST      IMLCLR             ;
141334 / 260140,,140775         PUSHJ    P,140775             ;;CLEAR INPUT BUFFER
141335 / 603100,,420000          TLNE LINE,420000             ;;THAT'S ALL FOR TTY'S
141336 / 331042,,012567         SKIPL  TAC,012567(LINE)       ;;DOES HE HAVE A LINE EDITOR
141337 / 263140,,000000          POPJ    P,                   ;;NO, DONE
141340 / 201400,,010044         MOVEI  CHR,010044             ;;GET A CLEAR
141341 / 400500,,000000          SETZ UCHN,                   ;;WITH NO BITS
141342 / 254000,,145330          JRST      145330             ;;AND SEND IT DOWN THE TUBES
                       IMLCLR:
141343 / 200400,,152234          MOVE  CHR,152234             ;;TELL IMLAC TO CLEAR ITS BUFFER.
141344 / 260140,,141633         PUSHJ    P,FIVOUT             ;
141345 / 260140,,140775         PUSHJ    P,140775             ;;CLEAR OURS
141346 / 205000,,040000         MOVSI      IMLTTY             ;
141347 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;AND THE BUCKY-BIT KLUDGE.
141350 / 263140,,000000          POPJ    P,                   ;
                       INSKIP:
141351 / 602600,,000001          TRNE  UUO,     1             ;
141352 / 333006,,000024        SKIPLE      TISYNC(DDB)        ;;INSKIP 1 WAITS FOR A WHOLE LINE
141353 / 603000,,002400          TLNE      002400             ;
141354 / 263140,,000000          POPJ    P,                   ;
141355 / 200046,,000017          MOVE  TAC,TIPUTR(DDB)        ;
141356 / 312046,,000021          CAME  TAC,TITAKR(DDB)        ;;ANY CHARS. IN INPUT BUFFER ?
141357 / 254000,,037401          JRST      037401             ;;YES. SKIP RETURN.
141360 / 607100,,420000          TLNN LINE,420000             ;;THAT'S ALL UNLESS HE'S A DPY
141361 / 263140,,000000          POPJ    P,                   ;
141362 / 335042,,012567        SKIPGE  TAC,012567(LINE)       ;;ANYTHING IN LINE EDITOR
141363 / 337001,,000106         SKIPG       CCPOS(TAC)        ;;I.E. CURSOR NOT AT LEFT
141364 / 263140,,000000          POPJ    P,                   ;;NO
141365 / 254000,,037401          JRST      037401             ;;YES, SKIP RETURN
                       ;INCHSL, INCHRS, INCHWL, IWAIT, OUTSTR, INCHGT, INCHGB
                       ;INPUT A CHARACTER AND SKIP---IF NONE TYPED, DON'T SKIP
                       INCHSL:
141366 / 337006,,000024         SKIPG      TISYNC(DDB)        ;;ANY LINES IN BUFFER?
141367 / 263140,,000000          POPJ    P,                   ;;NO, RETURN
                       INCHRS:
141370 / 603000,,000400          TLNE       TPMON             ;
141371 / 263140,,000000          POPJ    P,                   ;
141372 / 260140,,141450         PUSHJ    P,141450             ;;GET ANY CHRS. FROM LINE EDITOR.
141373 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;GET A CHARACTER
141374 / 260140,,140713         PUSHJ    P,140713             ;;FROM TTI BUFFER
141375 / 260140,,145074         PUSHJ    P,145074             ;;WAKE UP PTY WAITERS, IF ANY.
141376 / 322400,,037403         JUMPE  CHR,037403             ;;RETURN IF NULL(EMPTY BUFFER)
141377 / 306400,,000600          CAIN  CHR,   600             ;
141400 / 254000,,141403          JRST      141403             ;;STORED ↑C
                       INCHSY:
152577 / 202414,,000000         MOVEM  CHR,      (UUO)        ;
141401 / 256040,,152577          XCTR   XW,152577             ;;MOVE INTO LOC. SPECIFIED BY UUO
141402 / 254000,,037401          JRST      037401             ;;AND SKIP RETURN
                       INCHSZ:
141403 / 200406,,000004          MOVE  CHR,DEVMOD(DDB)        ;
141404 / 607400,,020000          TLNN  CHR,020000             ;;IF ATTACHED TO JOB
141405 / 606400,,600000          TRNN  CHR,600000             ;;OR NOT ASSIGNED OR INITED
141406 / 254000,,142332          JRST      142332             ;;THEN PROCESS CONTROL-C
141407 / 254000,,141401          JRST      141401             ;;GIVE THE LOSER THE CONTROL-C
                       ;INPUT CHARACTER AND WAIT, LINE MODE
                       INCHWL:
141410 / 260140,,141366         PUSHJ    P,141366             ;;SEE IF ANY CHARS.
141411 / 254000,,141413          JRST      141413             ;;NO
141412 / 263140,,000000          POPJ    P,                   ;;YES. GIVE IT TO USER
141413 / 603100,,002000          TLNE LINE,002000             ;;BY BO - IMLACS HAVE A COMMAND
141414 / 254000,,141425          JRST      141425             ;;FOR SPECIAL ACTIVATION.
                       IMCHW0:
151325 / 400000,,010000           XWD TTYIOW,IOACT            ;
141415 / 200000,,151325          MOVE      151325             ;;NONE. WAIT FOR IT
141416 / 436006,,000002          IORM      DEVIOS(DDB)        ;;TTY TO IOW STATE
141417 / 205000,,001000         MOVSI      001000             ;;JUST IN CASE
141420 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;CLEAR DDTMODE BREAK FLAG
141421 / 260140,,142250         PUSHJ    P,142250             ;;WAIT FOR CHAR(INTPTI IF APPROPRIATE).
141422 / 260140,,141366         PUSHJ    P,141366             ;;REPEATED TESTING HERE SO
141423 / 254000,,141415          JRST      141415             ;;IMLACS ONLY GET THE WORD-MODE
141424 / 263140,,000000          POPJ    P,                   ;;COMMAND ONCE.
                       IMCHWL:
141425 / 607100,,000100          TLNN LINE,000100             ;;IMLAC: SPECIAL ACTIVATION MODE?
141426 / 254000,,141415          JRST      IMCHW0             ;
141427 / 200400,,152147          MOVE  CHR,152147             ;;YES.  TELL IT WE'RE WAITING.
141430 / 260140,,141633         PUSHJ    P,FIVOUT             ;
141431 / 254000,,141415          JRST      IMCHW0             ;
                       IWAIT:
141432 / 135400,,136450           LDB  CHR,136450             ;;GET LENGTH OF LAST RE-EDITED LINE.
141433 / 602600,,777777          TRNE  UUO,777777             ;;IS ADDRESS OF IWAIT 0 ?
152636 / 216414,,000000         MOVMM  CHR,      (UUO)        ;
141434 / 256040,,152636          XCTR   XW,152636             ;;NO. USER WANTS GOOD NUMBER.
141435 / 333006,,000024        SKIPLE      TISYNC(DDB)        ;;IS THERE A LINE PRESENT ?
141436 / 603000,,000400          TLNE      000400             ;;NOTHING IN MONITOR MODE
141437 / 304000,,000000          CAIA                         ;
141440 / 263140,,000000          POPJ    P,                   ;
151325 / 400000,,010000           XWD TTYIOW,IOACT            ;
141441 / 200000,,151325          MOVE      151325             ;
141442 / 436006,,000002          IORM      DEVIOS(DDB)        ;
141443 / 205000,,001000         MOVSI        DDTM             ;
141444 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
141445 / 260140,,142250         PUSHJ    P,TWSYNC             ;
141446 / 254000,,141432          JRST       IWAIT             ;
                       ;OUTPUT A STRING--AT PRESENT LIKE DDTOUT
                       OUTSTR:
141447 / 254000,,142156          JRST      142156             ;;TO BE NEW ROUTINE
                       INCHGT:
141450 / 607100,,420000          TLNN LINE,420000             ;; ONLY DPY'S
141451 / 263140,,000000          POPJ    P,                   ;
141452 / 200046,,000021          MOVE  TAC,TITAKR(DDB)        ;
141453 / 312046,,000017          CAME  TAC,TIPUTR(DDB)        ;;WILL HE GET A CHAR. WITHOUT ACTIVATING THE LINE EDITOR?
141454 / 263140,,000000          POPJ    P,                   ;;YES
                       INCHGB:
141455 / 335042,,012567        SKIPGE  TAC,012567(LINE)       ;;ANYTHING IN LINE EDITOR?
141456 / 337001,,000106         SKIPG       CCPOS(TAC)        ;;IS POINTER INTO LINE?
141457 / 263140,,000000          POPJ    P,                   ;;NO
141460 / 254000,,147416          JRST      147416             ;;WILL TRANSFER SOME RIGHT NOW!
                       ;IF THERE ARE ANY!
                       ;INCHRW, ONEOUT, GETLIN, SETLIN, SYNCHK, SYNCHA, SETACT
                       ;MORE ROUTINES CALLED BY TTY UUO DISPATCHER
                       ;INCHRW GOES INTO I/O WAIT IF NO CHARACTER HAS BEEN TYPED--NO SKIPS
                       INCHRW:
141461 / 260140,,141370         PUSHJ    P,141370             ;;GET ACHAR IF ONE IS THERE
141462 / 254000,,141464          JRST      141464             ;;NONE THERE
141463 / 263140,,000000          POPJ    P,                   ;;CHAR. PICKED UP AND STORED
141464 / 603100,,002000          TLNE LINE,002000             ;;BY BO - IMLACS HAVE FANCY
141465 / 254000,,141472          JRST      141472             ;;COMMAND FOR THIS.
                       IMCHR0:
151330 / 401000,,010000           XWD TTYIOW+DDTM,IOACT       ;
141466 / 200000,,151330          MOVE      151330             ;;SETUP FOR IOWAITM
141467 / 437006,,000002          IORB      DEVIOS(DDB)        ;;SPECIFICALLY FOR INPUT WAIT
141470 / 260140,,142250         PUSHJ    P,142250             ;;WAIT FOR CHAR. TO BE TYPED
141471 / 254000,,141461          JRST      141461             ;;GO GET IT
                       IMCHRW:
141472 / 200400,,152131          MOVE  CHR,152131             ;;IMLAC COMMAND: SEND ONE CHAR.
141473 / 260140,,141633         PUSHJ    P,FIVOUT             ;
141474 / 254000,,141466          JRST      IMCHR0             ;
                       ;ONEOUT OUTPUTS ONE CHARACTER
                       ONEOUT:
152507 / 200414,,000000          MOVE  CHR,      (UUO)        ;
141475 / 256200,,152507          XCTR   XR,152507             ;;PICK UP CHAR. FROM USER
141476 / 602000,,001000          TRNE      001000             ;;IF ↑O MODE
141477 / 263140,,000000          POPJ    P,                   ;;RETURN
141500 / 405400,,000177          ANDI  CHR,000177             ;;MASK ANY JUNK
141501 / 322400,,037403         JUMPE  CHR,037403             ;;DONT STORE NULLS
141502 / 260140,,140503         PUSHJ    P,140503             ;;PLACE IT IN TTO BUFFER
141503 / 326400,,143040         JUMPN  CHR,143040             ;;IF IT STORED, RETURN
141504 / 260140,,142436         PUSHJ    P,142436             ;;BUFFER WAS FULL. TRY AGAIN LATER
141505 / 254000,,141475          JRST      ONEOUT             ;
                       ;GETLIN PUTS LINE CHARACTERISTICS WORD INTO ADR. IN UUO ADR. FIELD
                       GETLIN:
153072 / 335054,,000000        SKIPGE  TAC,      (UUO)        ;
141506 / 256200,,153072          XCTR   XR,153072             ;;DOES USER WANT OWN LINE CHAR. WD.?
141507 / 254000,,141515          JRST      141515             ;;YES
141510 / 201100,,000000         MOVEI LINE,                   ;;NO, CHECK SIZE OF NUMBER
141511 / 301040,,000145          CAIL  TAC,000145             ;;TOO HIGH?
141512 / 361100,,141530          SOJL LINE,GETLN3             ;
141513 / 200101,,017717          MOVE LINE,LINTAB(TAC)        ;;NO, GET IT
141514 / 541101,,000000          HRRI LINE,      (TAC)        ;
                       GETLN1:
141515 / 200040,,000002          MOVE  TAC,000002             ;;START WITH THIS LINE
141516 / 254000,,141523          JRST      141523             ;;JUMP IN
                       GETLN2:
141517 / 607040,,004000          TLNN  TAC,004000             ;;IS THIS A PTY?
141520 / 254000,,141526          JRST      GETLN4             ;
141521 / 200041,,017743          MOVE  TAC,017743(TAC)        ;;OWNER OF THIS PTY
141522 / 200041,,027320          MOVE  TAC,JBTLIN(TAC)        ;;HIS LINE CHARACTERISTICS
                       GETLN5:
151674 / 777777,,777777                                       ;
141523 / 312040,,151674          CAME  TAC,151674             ;;THAT'S ALL IF WE FIND A DETACHED LINE
141524 / 254000,,141517          JRST      141517             ;;DOWN THE CHAIN
141525 / 254000,,141530          JRST      GETLN3             ;
                       GETLN4:
151354 / 420000,,000000           XWD DISLIN!DDDLIN,0         ;
141526 / 404040,,151354           AND  TAC,151354             ;;COPY THESE BITS
141527 / 670100,,000001           TDO LINE,000001             ;;INTO LINE BITS, IN CASE WE ARE A PTY
                       GETLN3:
152567 / 202114,,000000         MOVEM LINE,      (UUO)        ;
141530 / 256040,,152567          XCTR   XW,152567             ;;GIVE IT TO USER
141531 / 263140,,000000          POPJ    P,                   ;
                       ;ROUTINE TO SET LINE CHARACTERISTICS THAT ARE SETABLE
                       SETLIN:
141532 / 205040,,140536         MOVSI  TAC,140536             ;;MAKE MASK OF ALL OF THEM
141533 / 603100,,426000          TLNE LINE,426000             ;
141534 / 621040,,000010           TLZ  TAC,TBXPND             ;
141535 / 412042,,017717        ANDCAM  TAC,LINTAB(LINE)       ;;SHUT OFF ALL SETABLE BITS
141536 / 661040,,001000           TLO  TAC,001000             ;;THIS CAN BE TURNED ON BUT NOT OFF
151344 / 404054,,000000           AND  TAC,      (UUO)        ;
141537 / 256200,,151344          XCTR   XR,151344             ;;SET ONLY THOSE BITS USER WANTS SET
141540 / 437042,,017717          IORB  TAC,LINTAB(LINE)       ;;SET RESULTANT
141541 / 500100,,000001           HLL LINE,000001             ;;NEW BITS TO LINE
                       SYNCHK:
141542 / 200646,,000022          MOVE  AC1,TITCTR(DDB)        ;;PREPARE TO SIMULATE GETCHY
141543 / 200706,,000021          MOVE  AC2,TITAKR(DDB)        ;
141544 / 201740,,000001         MOVEI  AC3,000001             ;;ONE FOR FIRST CHAR.
141545 / 402006,,000024         SETZM      TISYNC(DDB)        ;;IN CASE BUFFER EMPTY
                       SYNCH2:
141546 / 316646,,000020          CAMN  AC1,TIPCTR(DDB)        ;;IS THIS THE END?
141547 / 263140,,000000          POPJ    P,                   ;;YES, LEAVE
141550 / 367640,,141553          SOJG  AC1,141553             ;;TEST FOR WRAP AROUND
141551 / 540706,,000016           HRR  AC2,TTIBUF(DDB)        ;;RESET BYTE POINTER
141552 / 554646,,000016          HLRZ  AC1,TTIBUF(DDB)        ;;AND TAKR COUNTER
                       SYNCH3:
141553 / 134400,,000016          ILDB  CHR,000016             ;;PICK UP CHAR!
141554 / 603000,,000400          TLNE      000400             ;;MONITOR DOESN'T GET ANY OF THIS
141555 / 254000,,141566          JRST      SYNCH5             ;
141556 / 607100,,000100          TLNN LINE,000100             ;;ARE WE SPECIALLY ACTIVATING
141557 / 254000,,141564          JRST      141564             ;;NO
152302 / 000000,,000010                                       ;
152302 / 070200,,000010 POINT 2,00000010,28                   ;
141560 / 135500,,152302           LDB UCHN,152302             ;
141561 / 260140,,141033         PUSHJ    P,SPCACT             ;
141562 / 254000,,141571          JRST      SYNCH4             ;
141563 / 344740,,141546          AOJA  AC3,SYNCH2             ;
                       SYNCH1:
141564 / 602400,,000600          TRNE  CHR,000600             ;;CONTROL BITS?
141565 / 254000,,141571          JRST      141571             ;;YES, ACTIVATE THESE SO FAR
                       SYNCH5:
141566 / 260140,,141026         PUSHJ    P,SPCHEK             ;
141567 / 344740,,141546          AOJA  AC3,SYNCH2             ;
141570 / 603040,,024000          TLNE  TAC,024000             ;;BREAK CHARACTER?
                       SYNCH4:
141571 / 202746,,000024         MOVEM  AC3,TISYNC(DDB)        ;;UPDATE TISYNC WITH # OF CHARS SCANNED SO FAR
141572 / 344740,,141546          AOJA  AC3,SYNCH2             ;
                       SYNCHA:
141573 / 210645,,000005          MOVN  AC1,  FCTR(DAT)        ;;UNUSED SPACE IN BUFFER.
141574 / 271640,,000140          ADDI  AC1,000140             ;;SIZE OF BUFFER
141575 / 202645,,000006         MOVEM  AC1, TSYNC(DAT)        ;;SET TISYNC
141576 / 263140,,000000          POPJ    P,                   ;
                       ;SETACT		SET A BREAK TABLE
                       ;CALL
                       ;TTYUUO 15,ADDR
                       ;RIGHT HALF CONTAINS ADDRESS OF TABLE TO BE BLT'ED IN (NO NEW TABLE IF 0)
                       ;LEFT HALF CONTAINS ADDRESS OF WHERE TO STORE COPY OF OLD TABLE(NO STORE IF 0)
                       SETACT:
152625 / 204054,,000000          MOVS  TAC,      (UUO)        ;
141577 / 256200,,152625          XCTR   XR,152625             ;;GET POINTER WORD
141600 / 606040,,777777          TRNN  TAC,777777             ;
141601 / 254000,,141612          JRST      141612             ;;HE DOESN'T WANT TO KNOW WHAT HE HAD
141602 / 200106,,000011          MOVE TAC1,ACTBTS(DDB)        ;;GIVE HIM A COPY OF THE TABLE
152562 / 202101,,000000         MOVEM TAC1,      (TAC)        ;
141603 / 256040,,152562          XCTR   XW,152562             ;
141604 / 200106,,000012          MOVE TAC1,000012(DDB)        ;
152563 / 202101,,000001         MOVEM TAC1,     1(TAC)        ;
141605 / 256040,,152563          XCTR   XW,152563             ;
141606 / 200106,,000013          MOVE TAC1,000013(DDB)        ;
152564 / 202101,,000002         MOVEM TAC1,     2(TAC)        ;
141607 / 256040,,152564          XCTR   XW,152564             ;
141610 / 200106,,000014          MOVE TAC1,ACTMOD(DDB)        ;
152565 / 202101,,000003         MOVEM TAC1,     3(TAC)        ;
141611 / 256040,,152565          XCTR   XW,152565             ;
                       STACT1:
141612 / 554100,,000001          HLRZ TAC1,   TAC             ;
141613 / 322100,,037403         JUMPE TAC1, CPOPJ             ;
152450 / 200042,,000000          MOVE  TAC,      (TAC1)       ;
141614 / 256200,,152450          XCTR   XR,152450             ;;GET HIS NEW TABLE
141615 / 202046,,000011         MOVEM  TAC,ACTBTS(DDB)        ;
152451 / 200042,,000001          MOVE  TAC,     1(TAC1)       ;
141616 / 256200,,152451          XCTR   XR,152451             ;
141617 / 202046,,000012         MOVEM  TAC,000012(DDB)        ;
152452 / 200042,,000002          MOVE  TAC,     2(TAC1)       ;
141620 / 256200,,152452          XCTR   XR,152452             ;
141621 / 202046,,000013         MOVEM  TAC,000013(DDB)        ;
152453 / 200042,,000003          MOVE  TAC,     3(TAC1)       ;
141622 / 256200,,152453          XCTR   XR,152453             ;
141623 / 202046,,000014         MOVEM  TAC,ACTMOD(DDB)        ;
141624 / 263140,,000000          POPJ    P,                   ;
                       ;OUTFIV, FIVOUT
                       ;FIVOUT		ADDED BY BO FOR GIVING COMMANDS TO IMLACS
                       ;	TTYUUO 17,ADR
                       ;ADR: 5 LEFT-JUSTIFIED ASCII CHARACTERS.
                       ;PUTS THESE CHARACTERS, UP TO THE FIRST NULL, INTO THE OUTPUT BUFFER.
                       ;IF BIT 35 IS A ONE, PREFIXES THESE CHARS WITH A RUBOUT.
                       ;GUARANTEES THAT THESE CHARS WILL BE SENT AS AN INDIVISIBLE BLOCK.
                       OUTFIV:
152507 / 200414,,000000          MOVE  CHR,      (UUO)        ;
141625 / 256200,,152507          XCTR   XR,152507             ;;TTYUUO 17 comes here,
141626 / 260140,,141633         PUSHJ    P,141633             ;;other places in TTYSER go there.
141627 / 263140,,000000          POPJ    P,                   ;
                       FIVOU2:
141630 / 700600,,002004          CONO   PI, SCNON             ;
                       FIVOU1:
141631 / 260140,,142436         PUSHJ    P,142436             ;;Not enough room in buffer, so wait.
141632 / 304000,,000000          CAIA                         ;
                       FIVOUT:
141633 / 261140,,000010          PUSH    P,000010             ;;Make a temp cell for the data.
141634 / 201740,,000006         MOVEI  AC3,000006             ;;Check for enough buffer space.
141635 / 311746,,000032          CAML  AC3,TOFCTR(DDB)        ;
141636 / 254000,,141631          JRST      FIVOU1             ;
141637 / 700600,,001004          CONO   PI,001004             ;;Got room.  Turn off channel 5.
141640 / 603000,,002000          TLNE      002000             ;;Detached output gets flushed...
141641 / 254000,,143033          JRST      143033             ;;...Ch. 5 back on.
141642 / 311746,,000032          CAML  AC3,TOFCTR(DDB)        ;;Check again for room, this time with
141643 / 254000,,141630          JRST      141630             ;;the interrupt disabled.
141644 / 260140,,142141         PUSHJ    P,142141             ;;You can't ↑O a command by God!
141645 / 000003,,000000                                       ;
141645 / 440703,,000000 POINT 7,03000000,-1                   ;
141645 / 205040,,440703         MOVSI  TAC,      (<POINT 7,(P),-1>)       ;;Byte pointer into data.
141646 / 606400,,000001          TRNN  CHR,000001             ;;If bit 35 is on,
141647 / 254000,,141652          JRST      FIVOU3             ;
141650 / 201400,,000177         MOVEI  CHR,000177             ;;give out with a rubout.
141651 / 260140,,140642         PUSHJ    P,PUTCHO             ;
                       FIVOU3:
141652 / 134400,,000001          ILDB  CHR,000001             ;;Fetch next char,
141653 / 322400,,141657         JUMPE  CHR,141657             ;;terminate on a null.
141654 / 260140,,140642         PUSHJ    P,140642             ;;Stuff into buff.
141655 / 603040,,760000          TLNE  TAC,760000             ;;5th chr in wrd?
141656 / 254000,,141652          JRST      141652             ;;No.  Do it again.
                       FIVOU4:
141657 / 700600,,002004          CONO   PI,002004             ;;It's done like you wanted, Massa.
141660 / 262143,,000000           POP    P,      (P)          ;;Chan. 5 is back, so is the stack.
141661 / 254000,,143040          JRST       TYPGO             ;
                       ;TTYMES
                       ;A UUO TO SEND A MESSAGE TO ANOTHER TTY
                       ;FROM 1,2 TO ANYONE OR FROM ANYONE TO THE CTY OR FROM ANYONE
                       ;TO AN UNUSED TTY.
                       TTYMES:
141662 / 200600,,000001          MOVE  UUO,000001             ;;SAVE POINTER
152455 / 200054,,000000          MOVE  TAC,      (UUO)        ;
141663 / 256200,,152455          XCTR   XR,152455             ;;PICK UP TTYNN OR LINE NUMBER
141664 / 607040,,770000          TLNN  TAC,770000             ;;IS IT SIXBIT
141665 / 254000,,141673          JRST      141673             ;;NO
151561 / 646471,,000000                                       ;
141666 / 316040,,151561          CAMN  TAC,151561             ;;GETTING HIS OWN?
153342 / 260140,,137613         PUSHJ    P,137613             ;;GET HIS TTY
153343 / 254000,,141676          JRST      TTYMS0             ;
141667 / 254000,,153342          JRST      153342             ;;AND SKIP THE REST
141670 / 260140,,140062         PUSHJ    P,140062             ;;FIND DDB FOR IT BY SIXBIT TTY NAME
141671 / 263140,,000000          POPJ    P,                   ;
141672 / 254000,,141676          JRST      TTYMS0             ;
                       TTYMS1:
141673 / 200100,,000001          MOVE LINE,000001             ;;FOR GETDBA
141674 / 260140,,140064         PUSHJ    P,140064             ;;FIND DDB BY TTY LINE NUMBER
141675 / 263140,,000000          POPJ    P,                   ;;NO DDB OR ERROR
                       TTYMS0:
152514 / 200614,,000001          MOVE  UUO,     1(UUO)        ;
141676 / 256200,,152514          XCTR   XR,152514             ;;PICK UP POINTER
141677 / 607600,,770000          TLNN  UUO,770000             ;;ALREADY GOT P FIELD?
141700 / 661600,,440000           TLO  UUO,440000             ;;NO, MAKE IT PICK UP FIRST BYTE OF WORD
141701 / 554040,,000014          HLRZ  TAC,   UUO             ;
141702 / 405040,,007777          ANDI  TAC,007777             ;;GET COUNT FIELD
141703 / 621600,,007777           TLZ  UUO,  7777             ;
141704 / 661600,,000700           TLO  UUO,000700             ;;SET TO 7 BIT BYTES
141705 / 326040,,141707         JUMPN  TAC,141707             ;;IS THERE A COUNT?
141706 / 201040,,777777         MOVEI  TAC,777777             ;;NO, USE LARGE COUNT
152545 / 202040,,000046         MOVEM  TAC,JOBTM2             ;
141707 / 256040,,152545          XCTR   XW,152545             ;;SAVE COUNT IN USER CORE
141710 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;;SET-UP DAT
141711 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;MAKE SURE IOS IS SET UP.
141712 / 350003,,000000           AOS            (P)          ;;SKIP RETURN FROM HERE
141713 / 260140,,140030         PUSHJ    P,140030             ;;GET LINE CHARACTERISTICS. REG 7/20/73
141714 / 603100,,200000          TLNE LINE,200000             ;;IS THIS THE CTY THAT WE'RE TYPING ON?
141715 / 254000,,141750          JRST      141750             ;;YES.  USE DISASTER SERVICE FOR CTY.
                       TTYMS3:
153177 / 371400,,000046          SOSL  CHR,JOBTM2             ;
141716 / 256240,,153177          XCTR  XRW,153177             ;;COUNT OUT YET?
152353 / 134400,,000014          ILDB  CHR,   UUO             ;
141717 / 256040,,152353          XCTR  XLB,152353             ;;NO. GET A CHAR.
141720 / 323400,,143040        JUMPLE  CHR,143040             ;;QUIT ON NULL, OR COUNT EXHAUSTED.
141721 / 211040,,000010         MOVNI  TAC,000010             ;;TRY THIS MANY TIMES ON EACH CHAR.
152544 / 202040,,000045         MOVEM  TAC,JOBTM1             ;
141722 / 256040,,152544          XCTR   XW,152544             ;
                       TTYMS4:
141723 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET IOS
152117 / 002000,,001000           XWD TTYDTC,IOSUPR           ;
141724 / 612000,,152117          TDNE      152117             ;;DID SOMETHING HAPPEN?
141725 / 263140,,000000          POPJ    P,                   ;;YES, FLUSH THE REST!
141726 / 260140,,140503         PUSHJ    P,OUTCHR             ;
141727 / 326400,,141716         JUMPN  CHR,141716             ;;LOOP IF CHAR PLACED
153146 / 353000,,000045         AOSLE      JOBTM1             ;
141730 / 256240,,153146          XCTR  XRW,153146             ;;COUNT DOWN LOSSAGE
141731 / 254000,,141746          JRST      141746             ;;COUNT OUT, LOSE ON THIS CHAR
141732 / 260140,,143016         PUSHJ    P,143016             ;;NO, TRY TO GET HIM GOING
141733 / 135040,,037575           LDB  TAC,037575             ;;PICK UP JOB NUMBER
141734 / 200213,,024061          MOVE    J,   JOB(PID)        ;;NEED THIS FOR SLEEP
141735 / 316040,,000004          CAMN  TAC,000004             ;;DIFFERENT?
141736 / 254000,,141744          JRST      141744             ;;WAITING FOR OURSELVES IS SIMPLE
141737 / 201040,,000020         MOVEI  TAC,    20             ;
141740 / 260140,,060211         PUSHJ    P,060211             ;;SLEEP 20 TIC'S
                       TTYMSD:
141741 / 260140,,140030         PUSHJ    P,140030             ;;SLEEP CLOBBERS THIS
152363 / 135400,,000014           LDB  CHR,   UUO             ;
141742 / 256040,,152363          XCTR  XLB,152363             ;;GET CHAR. BACK
141743 / 254000,,141723          JRST      141723             ;;TRY AGAIN
                       TTYMSW:
141744 / 260140,,142172         PUSHJ    P,DDTWAT             ;
141745 / 254000,,141741          JRST      TTYMSD             ;
                       TTYMS8:
141746 / 370003,,000000           SOS            (P)          ;;HUNG TTY, GIVE LOSSAGE RETURN
141747 / 263140,,000000          POPJ    P,                   ;
                       ;HERE FOR SPECIAL CASE OF TYPING ON CTY.  REG 7/20/73
                       TTYMS9:
153177 / 371400,,000046          SOSL  CHR,JOBTM2             ;
141750 / 256240,,153177          XCTR  XRW,153177             ;;COUNT OUT YET?
152353 / 134400,,000014          ILDB  CHR,   UUO             ;
141751 / 256040,,152353          XCTR  XLB,152353             ;;NO. GET A CHAR.
141752 / 323400,,037403        JUMPLE  CHR,037403             ;;QUIT ON NULL, OR NEGATIVE COUNT.
141753 / 260140,,044024         PUSHJ    P,044024             ;;SEND CHARACTERS VIA DISASTER SERVICE
141754 / 254000,,141750          JRST      TTYMS9             ;
                       ;TTREAD, TTYJNO, TTYJOB
                       ;READ MICROSWITCH KEYBOARD USING SPCWAR MODE FEATURE
                       ;CALL
                       ;	TTYUUO 16,ADDR
                       ;WHERE ADDR CONTAINS LINE NUMBER YOU WISH TO READ
                       ;IF LINE IS ILLEGAL YOURS IS USED
                       ;IF IT IS NOT ON THE KEYBOARD SCANNER THIS IS A NO-OP
                       TTREAD:
153046 / 331054,,000000         SKIPL  TAC,      (UUO)        ;
141755 / 256200,,153046          XCTR   XR,153046             ;;PICK UP LINE HE WANTS
141756 / 301040,,000145          CAIL  TAC,000145             ;;HIGHER THAN HIGHEST?
141757 / 550040,,000002          HRRZ  TAC,000002             ;;YES
141760 / 275040,,000020          SUBI  TAC,000020             ;;NORMALIZE IT
141761 / 321040,,037403         JUMPL  TAC,037403             ;;NO-OP IF NOT ON KBD SCANNER
141762 / 301040,,000100          CAIL  TAC,000100             ;
141763 / 263140,,000000          POPJ    P,                   ;
141764 / 660040,,000100           TRO  TAC,000100             ;;SET SPW BIT
141765 / 201740,,000020         MOVEI  AC3,000020             ;;TRY THIS MANY TIMES
                       TTRED1:
141766 / 731140,,000001         DATAO  DKB,   TAC             ;
141767 / 731040,,000015         DATAI  DKB,000015             ;;READ KBD
141770 / 606640,,020000          TRNN  AC1,020000             ;;SHOULD HAVE SPW BIT ON
141771 / 367740,,141766          SOJG  AC3,141766             ;;NO, TRY AGAIN
141772 / 554700,,000015          HLRZ  AC2,   AC1             ;
141773 / 302701,,777700          CAIE  AC2,777700(TAC)        ;;DID WE GET THE RIGHT LINE?
141774 / 367740,,141766          SOJG  AC3,141766             ;;NO
                       TTRED3:
152603 / 202654,,000000         MOVEM  AC1,      (UUO)        ;
141775 / 256040,,152603          XCTR   XW,152603             ;;STORE RESULT
141776 / 263140,,000000          POPJ    P,                   ;
                       ;TTYJOB
                       ;CALL:
                       ;	MOVEI AC,<LINE #>
                       ;	TTYJOB AC,
                       ;	<# OF JOB OWNING TTY IN AC>
                       ;IF LINE # IS NOT TTY LINE, RETURN JOB CONTROLLING IF PTY
                       TTYJNO:
152466 / 200112,,000000          MOVE LINE,      (UCHN)       ;
141777 / 256200,,152466          XCTR   XR,152466             ;;GET ARG
142000 / 321100,,142014         JUMPL LINE,PTYJNO             ;
142001 / 305100,,000145         CAIGE LINE,000145             ;;LEGAL TTY LINE #?
142002 / 336302,,032347         SKIPN  DDB,TTYTAB(LINE)       ;;GET DDB POINTER
142003 / 254000,,142011          JRST      142011             ;;NONE
142004 / 135040,,037575           LDB  TAC,037575             ;;GET JOB NUMBER
142005 / 200646,,000004          MOVE  AC1,DEVMOD(DDB)        ;;CHECK IF CONTROLLING JOB
142006 / 607640,,020000          TLNN  AC1,020000             ;;JOBS CONSOLE?
142007 / 661040,,400000           TLO  TAC,400000             ;;NO, SET BIT TO INDICATE JUST OWNED
142010 / 304000,,000000          CAIA                         ;
                       TTYJN1:
142011 / 400040,,000000          SETZ  TAC,                   ;;FLAG NO JOB
                       TTYJN0:
152547 / 202052,,000000         MOVEM  TAC,      (UCHN)       ;
142012 / 256040,,152547          XCTR   XW,152547             ;;STORE ANSWER
142013 / 263140,,000000          POPJ    P,                   ;
                       PTYJNO:
142014 / 214100,,000002          MOVM LINE,  LINE             ;
142015 / 301100,,000145          CAIL LINE,TTPLEN             ;
142016 / 254000,,142021          JRST      PTYJN1             ;
142017 / 570104,,027320          HRRE LINE,JBTLIN(J)          ;;JOBS TTY
142020 / 321100,,142011         JUMPL LINE,142011             ;;RETURN 0 IF NONE
                       PTYJN1:
142021 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;;GET LINE CHARACTERISTICS
142022 / 607100,,004000          TLNN LINE,004000             ;;IS IT A PTY?
142023 / 254000,,142011          JRST      142011             ;;NO, NO CONTROLLING JOB
142024 / 200042,,017743          MOVE  TAC,017743(LINE)       ;;CONTROLLING JOB
142025 / 254000,,142012          JRST      TTYJN0             ;
                       ;SNEAKS, SNEAKW, ACTCHR
                       ;TWO UUO'S TO SEE THE NEXT CHAR. YOU WILL INPUT.
                       ;ONE (SNEAKS) WHICH SKIPS IF A CHAR IS WAITING
                       ;THE OTHER (SNEAKW) WAITS FOR A CHAR.
                       ;BOTH RETURN THE CHAR. IN THE AC.
                       SNEAKS:
142026 / 260140,,137612         PUSHJ    P,137612             ;;FIND USERS TTY
142027 / 603000,,002400          TLNE      002400             ;;DETACHED?
142030 / 263140,,000000          POPJ    P,                   ;;CAN'T GET ANYTHING IF DETACHED
142031 / 200706,,000021          MOVE  AC2,TITAKR(DDB)        ;
142032 / 312706,,000017          CAME  AC2,TIPUTR(DDB)        ;;ANYTHING IN TTY BUFFER
142033 / 254000,,142050          JRST      142050             ;;YES, RETURN IT
142034 / 603100,,420000          TLNE LINE,420000             ;
142035 / 331642,,012567         SKIPL  AC1,012567(LINE)       ;
142036 / 263140,,000000          POPJ    P,                   ;;NOT DISPLAY, OR NOT ACTIVE
142037 / 603640,,000001          TLNE  AC1,000001             ;;IF TRANSFER IN PROGRESS, LOSE
142040 / 254000,,142056          JRST      SNEAKX             ;
142041 / 337015,,000106         SKIPG       CCPOS(AC1)        ;;CAN WE GET ANYTHING
142042 / 263140,,000000          POPJ    P,                   ;;NO
151400 / 000000,,000045                                       ;
151400 / 440700,,000045 POINT 7,00000045,                     ;
142043 / 200700,,151400          MOVE  AC2,151400             ;
142044 / 271715,,000000          ADDI  AC2,      (AC1)        ;;POINT TO BEGINNING OF LOSER EDITOR BUFFER
142045 / 134040,,000016          ILDB  TAC,   AC2             ;
142046 / 322040,,142045         JUMPE  TAC,142045             ;;LOOP FOR CHAR.
142047 / 254000,,142054          JRST       SNLD1             ;
                       SNLOAD:
142050 / 200046,,000022          MOVE  TAC,TITCTR(DDB)        ;
142051 / 307040,,000001          CAIG  TAC,     1             ;
142052 / 540706,,000016           HRR  AC2,000016(DDB)        ;;WRAP AROUND BUFFER
142053 / 134040,,000016          ILDB  TAC,   AC2             ;
                       SNLD1:
152547 / 202052,,000000         MOVEM  TAC,      (UCHN)       ;
142054 / 256040,,152547          XCTR   XW,152547             ;;STORE RESULT
142055 / 254000,,037401          JRST      037401             ;;RETURN
                       SNEAKX:
142056 / 260140,,046124         PUSHJ    P,046124             ;;WAIT ONE TIC
142057 / 254000,,142026          JRST      142026             ;;THEN LOOK AGAIN
                       SNEAKW:
142060 / 260140,,142026         PUSHJ    P,SNEAKS             ;
142061 / 304000,,000000          CAIA                         ;
142062 / 263140,,000000          POPJ    P,                   ;;SUCCESS
151541 / 600000,,010000           XWD TTYIOW!SNKWAT,IOACT     ;
142063 / 200000,,151541          MOVE      151541             ;
142064 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142065 / 205000,,001000         MOVSI        DDTM             ;
142066 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
142067 / 260140,,142250         PUSHJ    P,142250             ;;WAIT FOR CHAR.
142070 / 254000,,142060          JRST      142060             ;;TRY AGAIN
                       ;WAITS FOR ACTIVATION AND RETURNS THE CHAR WHICH ACTIVATED IT BUT
                       ;ONLY ON RE-EDITED LINES
                       ACTCHR:
142071 / 260140,,137612         PUSHJ    P,137612             ;;FIND USER'S TTY
151674 / 777777,,777777                                       ;
142072 / 312100,,151674          CAME LINE,151674             ;;DETACHED?
142073 / 607100,,420000          TLNN LINE,420000             ;;ONLY DPY'S HAVE ACT. CHAR.
142074 / 254000,,060313          JRST      060313             ;;RETURN 0 (UUO NOT CLOBBERED YET)
142075 / 201600,,000000         MOVEI  UUO,                   ;;RPH & FW'S FAULT (NO STORE IN IWAIT)
142076 / 260140,,141432         PUSHJ    P,141432             ;;WAIT FOR A LINE
142077 / 200402,,012567          MOVE  CHR,012567(LINE)       ;
152105 / 000010,,000032                                       ;
152105 / 001110,,000032 POINT 9,10000032,35                   ;
142100 / 135400,,152105           LDB  CHR,152105             ;
152576 / 202412,,000000         MOVEM  CHR,      (UCHN)       ;
142101 / 256040,,152576          XCTR   XW,152576             ;
142102 / 263140,,000000          POPJ    P,                   ;
                       ;DDTIN
                       ;INPUT TO DDT
                       ;CALL AC,[SIXBIT /DDTIN/]	AC CONTAINS POINTER TO BUFFER AREA
                       ;BUFFER AREA MUST BE 21 WORDS LONG
                       DDTIN:
142103 / 260140,,137612         PUSHJ    P,137612             ;; SET UP DDB,LINE
                       DDTINA:
151330 / 401000,,010000           XWD TTYIOW+DDTM,IOACT       ;
142104 / 200000,,151330          MOVE      151330             ;
142105 / 437006,,000002          IORB      DEVIOS(DDB)        ;;PUT INTO I/O WAIT
142106 / 607000,,000400          TLNN      000400             ;; NOTHING THERE I IN MONITOR MODE.
142107 / 254000,,142112          JRST      DDTINB             ;
142110 / 260140,,142250         PUSHJ    P,TWSYNC             ;
142111 / 254000,,142104          JRST      DDTINA             ;
                       DDTINB:
142112 / 603100,,420000          TLNE LINE,420000             ;
142113 / 260140,,141455         PUSHJ    P,141455             ;;ACTIVATE LINE EDITOR, THEN WAIT ONE TIC IF NESCESARY.
142114 / 260140,,145074         PUSHJ    P,145074             ;;CHECK FOR PTY LINKAGE.
142115 / 200046,,000017          MOVE  TAC,TIPUTR(DDB)        ;
142116 / 316046,,000021          CAMN  TAC,TITAKR(DDB)        ;;ANYTHING IN BUFFER?
142117 / 260140,,142250         PUSHJ    P,142250             ;;NO, WAIT FOR SOME
                       DDTIW:
151330 / 401000,,010000           XWD TTYIOW+DDTM,IOACT       ;
142120 / 200000,,151330          MOVE      151330             ;
142121 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
142122 / 205040,,000004         MOVSI  TAC, IOFST             ;
142123 / 436046,,000002          IORM  TAC,DEVIOS(DDB)        ;;STOP ALL IO
142124 / 205700,,440700         MOVSI  AC2,440700             ;
142125 / 540720,,000014           HRR  AC2,@000014            ;;GET CONTENTS OF USER AC.
142126 / 200106,,000017          MOVE LINE,TIPUTR(DDB)        ;
142127 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;
142130 / 000000,,000125                                       ;
142130 / 201640,,000124         MOVEI  AC1,000124             ;;NUMBER OF CHARACTERS ALLOWED
                       XFRIN:
142131 / 260140,,140713         PUSHJ    P,140713             ;;TRANSFER INTO USER'S AREA
                       XFRIN1:
142132 / 306400,,000600          CAIN  CHR,000600             ;;PRESTORED CONTROL C?
142133 / 254000,,142144          JRST      142144             ;;YES, GO INTO MONITOR MODE
152370 / 136400,,000016          IDPB  CHR,   AC2             ;
142134 / 256040,,152370          XCTR  XDB,152370             ;
142135 / 312106,,000021          CAME LINE,TITAKR(DDB)        ;;PICKED UP ALL CHARACTERS YET?
142136 / 367640,,142131          SOJG  AC1,142131             ;;LOOP TILL DONE
                       XFRIN2:
142137 / 201400,,000000         MOVEI  CHR,                   ;;TERMINATE STRING
152370 / 136400,,000016          IDPB  CHR,   AC2             ;
142140 / 256040,,152370          XCTR  XDB,152370             ;
                       UNSUPR:
142141 / 201000,,001000         MOVEI      001000             ;;MAKE SURE IO NO LONGER SUPR.
142142 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
142143 / 263140,,000000          POPJ    P,                   ;
                       XFRIN0:
142144 / 200406,,000004          MOVE  CHR,DEVMOD(DDB)        ;;GET SOME GOOD BITS
142145 / 607400,,020000          TLNN  CHR,TTYATC             ;
142146 / 606400,,600000          TRNN  CHR,600000             ;;THESE GUYS CAN'T TYPE COMMANDS
142147 / 254000,,142151          JRST      DDTCNC             ;
142150 / 254000,,142131          JRST       XFRIN             ;
                       DDTCNC:
142151 / 260140,,140030         PUSHJ    P,140030             ;;GET LINE CHARACTERISTICS
142152 / 260140,,142137         PUSHJ    P,XFRIN2             ;
142153 / 254000,,142332          JRST      142332             ;;GO PROCESS ↑C
                       ;DDTOUT, DDTWAT
                       ;OUTPUT FROM DDT
                       ;CALL AC,[SIXBIT /DDTOUT/]	AC HAS POINTER TO DDT OUTPUT BUFFER
                       DDTOUT:
142154 / 260140,,137612         PUSHJ    P,TTYFNU             ;
142155 / 200620,,000014          MOVE  UUO,@   UUO            ;
                       DDT5:
142156 / 505600,,440700          HRLI  UUO,440700             ;
                       DDT3:
142157 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET IOS
152117 / 002000,,001000           XWD TTYDTC,IOSUPR           ;
142160 / 612000,,152117          TDNE      152117             ;;DID SOMETHING HAPPEN?
142161 / 263140,,000000          POPJ    P,                   ;;YES, FLUSH THE REST!
152353 / 134400,,000014          ILDB  CHR,   UUO             ;
142162 / 256040,,152353          XCTR  XLB,152353             ;
142163 / 322400,,143040         JUMPE  CHR,143040             ;;DONE, START OUTPUT
142164 / 260140,,140503         PUSHJ    P,140503             ;;PLACE CHAR IN OUTPUT BUFFER
142165 / 326400,,142157         JUMPN  CHR,142157             ;;LOOP IF CHARACTER WAS PLACED
152300 / 070000,,000000           XWD 070000,0                ;
142166 / 270600,,152300           ADD  UUO,152300             ;;BACK UP POINTER
142167 / 260140,,143040         PUSHJ    P, TYPGO             ;
142170 / 260140,,142172         PUSHJ    P,DDTWAT             ;
142171 / 254000,,142157          JRST        DDT3             ;
                       DDTWAT:
142172 / 201040,,000170         MOVEI  TAC,000170             ;;SPECIFY TO WAIT TILL BUFFER IS EMPTY
142173 / 137040,,136445           DPB  TAC,136445             ;;IF DDT TYPE-OUT IS TOO LONG
142174 / 205040,,400000         MOVSI  TAC,TTYIOW             ;
142175 / 412046,,000002        ANDCAM  TAC,DEVIOS(DDB)        ;;MAKE SURE WE LOOK LIKE WE'RE IN OUTPUT WAIT!
142176 / 201000,,010000         MOVEI      010000             ;;WAIT UNTIL MONITOR BUFFER EMPTY
142177 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142200 / 254000,,046176          JRST       WSYNC             ;
                       ;SCNDSP, TTYIN, TWSYNC, TTYSKP
                       ;DEVICE DEPENDENT PART OF IO UUOS.
                       ;DISPATCH TABLE
142201 / 254000,,136624          JRST      136624             ;;INITIALIZATION
142202 / 254000,,037401          JRST      037401             ;;NO DO NOTHING
                       SCNDSP:
142203 / 254000,,140262          JRST      140262             ;; RELEASE
142204 / 254000,,065347          JRST      065347             ;;CLOSE
142205 / 254000,,142356          JRST      142356             ;;OUTPUT
                       TTYIN:
151325 / 400000,,010000           XWD TTYIOW,IOACT            ;
142206 / 200000,,151325          MOVE      151325             ;;INDICATE INPUT WAIT
142207 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142210 / 603000,,002000          TLNE      TTYDTC             ;
142211 / 254000,,142216          JRST      TTYIN2             ;
142212 / 205040,,020000         MOVSI  TAC,TTYATC             ;
142213 / 612046,,000004          TDNE  TAC,DEVMOD(DDB)        ;
142214 / 607000,,000400          TLNN       TPMON             ;
142215 / 254000,,142220          JRST      TTYIN3             ;
                       TTYIN2:
142216 / 260140,,142250         PUSHJ    P,TWSYNC             ;
142217 / 254000,,142206          JRST       TTYIN             ;
                       TTYIN3:
142220 / 260140,,145074         PUSHJ    P,145074             ;;CHECK PTY WAITERS.
142221 / 205000,,001400         MOVSI      001400             ;
142222 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
142223 / 260140,,140030         PUSHJ    P,140030             ;;GET LINE CHARACTERISTICS
                       TTYIN1:
142224 / 337006,,000024         SKIPG      TISYNC(DDB)        ;
142225 / 260140,,142250         PUSHJ    P,TWSYNC             ;
142226 / 260140,,142267         PUSHJ    P,MONUSR             ;
151331 / 401000,,413000           XWD TTYIOW!DDTM,IOSUPR!MERTPO!MERTP1!IOACT ;
142227 / 200000,,151331          MOVE      151331             ;
                       T0POPJ:
142230 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
142231 / 263140,,000000          POPJ    P,                   ;
                       ;TTYSKP, SKIPS IF NEXT INPUT ON CHN WON'T HANG (MUST BE TTY)
                       TTYSKP:
142232 / 317500,,024066          CAMG UCHN,USRHCU             ;
142233 / 336312,,024071         SKIPN  DDB,USRJDA(UCHN)       ;
142234 / 254000,,043331          JRST      IOIERR             ;
142235 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
142236 / 607040,,000010          TLNN  TAC,000010             ;;IS IT A TTY?
142237 / 263140,,000000          POPJ    P,                   ;;NO, GIVE HANG RETURN
142240 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
142241 / 607000,,002000          TLNN      002000             ;;IF DETACHED,
142242 / 337006,,000024         SKIPG      TISYNC(DDB)        ;;OR NOTHING TO COME IN YET
142243 / 263140,,000000          POPJ    P,                   ;;WILL HANG
142244 / 603040,,020000          TLNE  TAC,020000             ;;IF NOT USER CONSOLE,
142245 / 607000,,000400          TLNN      000400             ;;OR NOT IN MONITOR MODE
142246 / 350003,,000000           AOS            (P)          ;;WON'T HANG
142247 / 263140,,000000          POPJ    P,                   ;
                       ;TWSYNC IS CALLED FOR INPUT IO WAIT
                       TWSYNC:
142250 / 607100,,004000          TLNN LINE,004000             ;; NO, IS IT A PTY?
142251 / 254000,,142263          JRST      142263             ;; NO, JUST GO INTO WAIT
142252 / 261140,,000004          PUSH    P,     J             ;
142253 / 200202,,017743          MOVE    J,017743(LINE)       ;
142254 / 205640,,010000         MOVSI  AC1,INTPTI             ;
142255 / 612644,,033665          TDNE  AC1,JBTIEN(J)          ;
142256 / 260140,,143061         PUSHJ    P, TTINT             ;
142257 / 262140,,000004           POP    P,     J             ;
142260 / 200406,,000002          MOVE  CHR,DEVIOS(DDB)        ;
142261 / 607400,,400000          TLNN  CHR,400000             ;;DID THE LOSER TYPE SOMETHING TO US AT INTERUPT LEVEL?
142262 / 254000,,142264          JRST        TWS2             ;
                       TWSYN1:
142263 / 260140,,046176         PUSHJ    P,046176             ;;WAIT FOR INPUT
                       TWS2:
151330 / 401000,,010000           XWD TTYIOW+DDTM,IOACT       ;
142264 / 200000,,151330          MOVE      151330             ;
142265 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
142266 / 263140,,000000          POPJ    P,                   ;
                       ;MONUSR
                       ;ROUTINE TO MOVE A LINE OR STRING FROM TTY INPUT BUFFER TO USER'S INPUT BUFFER
                       ;CALLED ONLY FROM UUO LEVEL,FROM INPUT UUO ONLY
                       MONUSR:
142267 / 550046,,000007          HRRZ  TAC,DEVIAD(DDB)        ;;ADDRESS OF BUFFER IN USER AREA
142270 / 260140,,045020         PUSHJ    P,045020             ;;CLEAR WHOLE BUFFER
142271 / 254000,,043211          JRST      043211             ;;ADDRESS CHECK RETURN
142272 / 260140,,140030         PUSHJ    P,140030             ;;SETUP LINE
142273 / 201700,,000140         MOVEI  AC2,000140             ;;MAX NR OF CHARACTERS
142274 / 550646,,000007          HRRZ  AC1,DEVIAD(DDB)        ;;ADRESS OF USR BUFFER-1
152153 / 010700,,000001           XWD 10700,1                 ;
142275 / 270640,,152153           ADD  AC1,152153             ;;MAKE BYTE POINTER POINT RIGHT
142276 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;SPECIFY USER MODE INPUT BUFFER
                       MONUS1:
142277 / 260140,,140713         PUSHJ    P,140713             ;;GET A CHAR. FROM IT
152065 / 000000,,000010                                       ;
152065 / 000700,,000010 POINT 7,00000010,35                   ;
142300 / 135040,,152065           LDB  TAC,152065             ;;NO CTRL BITS
142301 / 200041,,141054          MOVE  TAC,SPCTAB(TAC)        ;;GET GOOD BITS
142302 / 322400,,142315         JUMPE  CHR,142315             ;;ZERO IMPLIES EMPTY BFR
142303 / 302400,,000612          CAIE  CHR,000612             ;;↑Z? (END OF FILE FOR TTY).
142304 / 254000,,142310          JRST      MONUS9             ;
142305 / 205000,,000040         MOVSI      000040             ;;YES, SIGNIFY SO
142306 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142307 / 254000,,142315          JRST      MONUS3             ;
                       MONUS9:
152367 / 136400,,000015          IDPB  CHR,   AC1             ;
142310 / 256040,,152367          XCTR  XDB,152367             ;;PLACE CHAR. IN USER BUFFER
142311 / 607040,,024000          TLNN  TAC,024000             ;;IS IT A SYNC CHAR. ?
                       MONUS2:
142312 / 367700,,142277          SOJG  AC2,142277             ;;NO, USER BUFFER FULL?
142313 / 306400,,000600          CAIN  CHR,000600             ;;STORED CONTROL C?
142314 / 254000,,142342          JRST      142342             ;;YES, HANDLE IT
                       MONUS3:
142315 / 550706,,000007          HRRZ  AC2,DEVIAD(DDB)        ;;BREAK CHAR OR COUNTED OUT, INPUT UUO DONE
142316 / 275656,,000001          SUBI  AC1,     1(AC2)        ;;CALCULATE NUMBER OF WORDS
151461 / 542656,,000001          HRRM  AC1,     1(AC2)        ;
142317 / 256240,,151461          XCTR  XRW,151461             ;;STORE IN 3RD BUFFER WORD
                       MONUS4:
142320 / 260140,,044454         PUSHJ    P,044454             ;;INPUT UUO DONE,NEXT BUFFER FULL?
142321 / 254000,,142325          JRST      142325             ;;YES, INPUT REALLY IS DONE
142322 / 327700,,142325         JUMPG  AC2,142325             ;;IF WE GAVE HIM A WHOLE LINE THEN WE ARE DONE.
142323 / 333006,,000024        SKIPLE      TISYNC(DDB)        ;;NO, DO WE HAVE MORE LINES FOR IT?
142324 / 254000,,142353          JRST      142353             ;;YES, GIVE USER NEXT LINE, TOO
                       MONUS5:
142325 / 205000,,000004         MOVSI       IOFST             ;
142326 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142327 / 623000,,400000          TLZE      400000             ;;TTY IN INPUT WAIT?
142330 / 260140,,046107         PUSHJ    P,046107             ;;YES, TAKE IT OUT OF IT
142331 / 263140,,000000          POPJ    P,                   ;
                       MONUS6:
142332 / 260140,,144540         PUSHJ    P,144540             ;;CONTROL C MODE
142333 / 205040,,110000         MOVSI  TAC,110000             ;;DECREMENT TAKR POINTER
142334 / 272046,,000021          ADDM  TAC,TITAKR(DDB)        ;;SO NEXT ILDB WILL GET ↑C
142335 / 350006,,000022           AOS      TITCTR(DDB)        ;;ADJUST COUNTER
142336 / 370006,,000023           SOS      TIFCTR(DDB)        ;;ADJUST FREE CHAR. COUNT
142337 / 260140,,141542         PUSHJ    P,141542             ;;FIX UP ACTIVATED COUNT
142340 / 260140,,144203         PUSHJ    P,144203             ;;WAKE UP COMMAND DECODER
142341 / 254000,,046176          JRST      046176             ;;AND WAIT FOR INTERPRETATION
                       MONUS7:
142342 / 200406,,000004          MOVE  CHR,DEVMOD(DDB)        ;
142343 / 607400,,020000          TLNN  CHR,TTYATC             ;
142344 / 606400,,600000          TRNN  CHR,600000             ;;THESE LOSERS CAN'T TYPE COMMANDS
142345 / 304000,,000000          CAIA                         ;
142346 / 254000,,142315          JRST      142315             ;;SEND IT IN TO HIM
151325 / 400000,,010000           XWD TTYIOW,IOACT            ;
142347 / 200000,,151325          MOVE      151325             ;
142350 / 437006,,000002          IORB      DEVIOS(DDB)        ;;PUT JOB BACK IN IOWAIT
142351 / 260140,,142332         PUSHJ    P,MONUS6             ;
142352 / 254000,,142206          JRST      142206             ;;RESTART INPUT UUO
                       MONUS8:
142353 / 607000,,000040          TLNN      000040             ;;ROOM FOR ANOTHER BUFFER. ↑Z SEEN?
142354 / 254000,,142267          JRST      142267             ;;NO. GO PASS ANOTHER LINE
142355 / 263140,,000000          POPJ    P,                   ;;YES. LET UUOCON HANDLE EOF
                       ;TTYOUT
                       ;OUTPUT UUO
                       TTYOUT:
142356 / 205000,,000002         MOVSI       IOBEG             ;
142357 / 612006,,000002          TDNE      DEVIOS(DDB)        ;
142360 / 660000,,001000           TRO      001000             ;;KILL ↑O ON FIRST OUTPUT
152074 / 001000,,412000           XWD DDTM,MERTPO!MERTP1!IOACT ;
142361 / 434000,,152074           IOR      152074             ;
142362 / 412006,,000002        ANDCAM      DEVIOS(DDB)        ;
142363 / 205000,,000024         MOVSI      000024             ;
142364 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142365 / 607000,,002000          TLNN      TTYDTC             ;
142366 / 260140,,140030         PUSHJ    P,140030             ;;GET LINE CHARACTERISTICS
142367 / 261140,,000002          PUSH    P,000002             ;;SAVE INFO
152117 / 002000,,001000           XWD TTYDTC,IOSUPR           ;
142370 / 616000,,152117          TDNN      152117             ;;CONTROL O?
142371 / 260140,,142404         PUSHJ    P,142404             ;;NO, MOVE USER'S BUFFER TO TTO BUFFER
142372 / 260140,,044366         PUSHJ    P,044366             ;;ADVANCE USER'S HEADERS
142373 / 334000,,000000         SKIPA                         ;
142374 / 634000,,000000          TDZA                         ;;MORE BUFFERS. DON'T CLEAR IOACT.
142375 / 201000,,010000         MOVEI      010000             ;;NO MORE BUFFERS
142376 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;CLEAR ACTIVE IN IOS
142377 / 262140,,000002           POP    P,000002             ;;RESTORE LINE INFO
142400 / 260140,,143040         PUSHJ    P,143040             ;;GO START OUTPUT, IF NECESSARY.
142401 / 602000,,010000          TRNE      010000             ;;ARE WE DONE ?
142402 / 254000,,142356          JRST      142356             ;;NO. DO SOME MORE. 
142403 / 263140,,000000          POPJ    P,                   ;
                       ;USRMON
                       ;ROUTINE TO MOVE USER OUTPUT BUFFER TO MON. OUTPUT BUFFER
                       ;CALLED ONLY AT UUO LEVEL,BY OUTPUT UUO
                       USRMON:
142404 / 550706,,000010          HRRZ  AC2,DEVOAD(DDB)        ;;ADDRESS OF 2ND BUFFER WORD
151514 / 550716,,000001          HRRZ  AC2,     1(AC2)        ;
142405 / 256200,,151514          XCTR   XR,151514             ;;NUMBER OF WORDS TO OUTPUT
142406 / 221700,,000005         IMULI  AC2,000005             ;;NR OF CHARACTERS
                       USRMN1:
142407 / 550646,,000010          HRRZ  AC1,DEVOAD(DDB)        ;;ADDRESS OF BUFFER
152153 / 010700,,000001           XWD 10700,1                 ;
142410 / 270640,,152153           ADD  AC1,152153             ;;MAKE POINTER.
                       USRMN2:
152354 / 134400,,000015          ILDB  CHR,   AC1             ;
142411 / 256040,,152354          XCTR  XLB,152354             ;;PICK UP CHARACTER
                       USRMN4:
142412 / 322400,,142415         JUMPE  CHR,142415             ;;IF NULL, IGNORE
142413 / 260140,,140503         PUSHJ    P,140503             ;;PLACE IN OUTPUT BUFFER
142414 / 322400,,142420         JUMPE  CHR,142420             ;;IF NO MORE ROOM IN MON. BUFFER
                       USRMN5:
142415 / 367700,,142411          SOJG  AC2,142411             ;;LOOP AS LONG AS THERE ARE CHAR'S.
142416 / 137700,,136445           DPB  AC2,136445             ;;NO CHARACTERS TO FIT
142417 / 263140,,000000          POPJ    P,                   ;;DONE
                       USRMN3:
142420 / 261140,,000016          PUSH    P,   AC2             ;
142421 / 303700,,000777         CAILE  AC2,000777             ;;GREATER THAN MAX? (9 BIT FIELD)
142422 / 201700,,000777         MOVEI  AC2,000777             ;;YES, USE MAX
142423 / 137700,,136445           DPB  AC2,136445             ;;NUMBER OF CHARACTERS TO GO
142424 / 261140,,000015          PUSH    P,000015             ;;SAVE RELOCATABLE POINTER
142425 / 200103,,777775          MOVE LINE,777775(P)          ;;GET SAVED LINE CHAR WORD
142426 / 260140,,142436         PUSHJ    P,142436             ;;WAIT FOR IO
142427 / 262140,,000015           POP    P,000015             ;;RESTORE POINTER
142430 / 262140,,000016           POP    P,000016             ;;GET BACK CHR COUNT
142431 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;RESTORE IOS
152364 / 135400,,000015           LDB  CHR,   AC1             ;
142432 / 256040,,152364          XCTR  XLB,152364             ;;GET LAST CHARACTER
142433 / 606000,,001000          TRNN      001000             ;;USER TYPED ↑O?
142434 / 254000,,142412          JRST      142412             ;;RETURN TO OUT LOOP
142435 / 263140,,000000          POPJ    P,                   ;;YES, CONSIDER BUFFER MOVED
                       TTOUWS:
142436 / 201000,,010000         MOVEI      010000             ;;SET DEVICE ACTIVE (TTY)
142437 / 437006,,000002          IORB      DEVIOS(DDB)        ;
142440 / 260140,,143040         PUSHJ    P,143040             ;;START TYPING IF NEEDED
142441 / 254000,,046176          JRST      046176             ;;WAIT TILL ROOM IN BUFFER
                       ;SCNIN1, SCNTYP, KBDINT
                       ;COMMON PARTS OF CTY AND SCANNER INTERRUPT SERVICE ROUTINES.
                       SCNIN1:
142442 / 730040,,000002         DATAI DCSA,000002             ;;GET LINE NO. FROM FULL DUPLEX.
142443 / 730200,,004505          CONO DCSA,004505             ;
                       ; RELEASE XMITTER SCANNER
142444 / 254000,,144722          JRST      144722             ;;IN SCNSER OR TTYSER
                       ;ROUTINE TO OUTPUT A CHARACTER ON A LINE
                       ;CALLED FROM TYP OR TYPL IN SCNSER
                       SCNTYP:
142445 / 700600,,001004          CONO   PI,001004             ;;TURN SCANNER PI OFF IN CASE AT USER LEVEL
                       ;SO NO INTERRUPTS BETWEEN CONO, AND DATAO
142446 / 730602,,000000          CONO DCSB,      (LINE)       ;;NO
142447 / 730140,,000010         DATAO DCSA,   CHR             ;
142450 / 700600,,002004          CONO   PI,002004             ;;TURN SCANNER PI BACK ON
142451 / 332000,,000006         SKIPE         DDB             ;
142452 / 137400,,136450           DPB  CHR,136450             ;;SAVE CHAR FOR FULL DUPLEX
142453 / 263140,,000000          POPJ    P,                   ;
                       ;DKBINT
                       DKBINT:
142454 / 202400,,017715         MOVEM  CHR,017715             ;;SAVE ONE AC WHILE WE THINK ABOUT THIS CHAR
142455 / 731040,,000010         DATAI  DKB,   CHR             ;
142456 / 602400,,010000          TRNE  CHR,010000             ;;INVALID?
142457 / 602400,,020000          TRNE  CHR,020000             ;;SPW?
142460 / 254000,,142520          JRST      142520             ;;IGNORE
142461 / 250400,,017715          EXCH  CHR,017715             ;;STORE CHARACTER WHERE WE'LL SEE IT LATER
142462 / 264000,,001023           JSR      SCNSAV             ;
142463 / 260140,,037655         PUSHJ    P,037655             ;
142464 / 700040,,000010         DATAI         CHR             ;
142465 / 325400,,142467        JUMPGE  CHR,142467             ;
142466 / 700540,,017715         DATAO   PI,017715             ;;DISPLAY IN LIGHTS IF DATA SWITCH 0 SET
142467 / 200400,,017715          MOVE  CHR,017715             ;;GET BACK CHAR
142470 / 554100,,000010          HLRZ LINE,   CHR             ;
142471 / 405400,,001777          ANDI  CHR,001777             ;;MASK UNWANTED BITS
142472 / 301100,,000100          CAIL LINE,000100             ;
142473 / 263140,,000000          POPJ    P,                   ;
142474 / 271100,,000020          ADDI LINE, DPYL0             ;
142475 / 640400,,001700           TRC  CHR,001700             ;;MAKE SENSE OF THESE BITS RIGHT
142476 / 201710,,000000         MOVEI  AC2,      (CHR)        ;
152267 / 000000,,000010                                       ;
152267 / 060200,,000010 POINT 2,00000010,29                   ;
142477 / 135040,,152267           LDB  TAC,152267             ;;SHIFT-TOP
152316 / 000000,,000010                                       ;
152316 / 100200,,000010 POINT 2,00000010,27                   ;
142500 / 135500,,152316           LDB UCHN,152316             ;;CTRL-META
142501 / 405400,,000077          ANDI  CHR,000077             ;;JUST THESE FOR INDEX
142502 / 302400,,000041          CAIE  CHR,000041             ;;BREAK?
142503 / 306400,,000042          CAIN  CHR,000042             ;;ESCAPE?
142504 / 254000,,142516          JRST      142516             ;;SPECIAL CHARACTER
142505 / 306400,,000044          CAIN  CHR,000044             ;;CLEAR?
142506 / 254000,,142516          JRST      DKBSPC             ;
142507 / 135241,,142523           LDB  DAT,DKBBYT(TAC)        ;
142510 / 421040,,000001        ANDCMI  TAC,000001             ;;TOP ONLY
142511 / 135441,,142523           LDB DSER,DKBBYT(TAC)        ;;UNSHIFTED CHAR.
142512 / 201405,,000000         MOVEI  CHR,      (DAT)        ;;GET BACK SAVED CHAR.
142513 / 302400,,000600          CAIE  CHR,000600             ;;EXCEPT FOR ↑C
152302 / 000000,,000010                                       ;
152302 / 070200,,000010 POINT 2,00000010,28                   ;
142514 / 137500,,152302           DPB UCHN,152302             ;;GET BACK CONTROL BITS
142515 / 624440,,000600          TRZA DSER,000600             ;;NO CONTROL BITS HERE
                       DKBSPC:
142516 / 660400,,010000           TRO  CHR,010000             ;;MAKE IT SPECIAL
142517 / 254000,,142652          JRST      RECINA             ;
                       DKBLUZ:
142520 / 250400,,017715          EXCH  CHR,017715             ;;RESTORE CHR, LEAVE CHARACTER WHERE WE CAN SEE IT
142521 / 700540,,017715         DATAO   PI,017715             ;;DISPLAY LOSING LINE NUMBER (AND CHAR) IN LITES
142522 / 254520,,000646          JRST   12,@000646            ;;DISMISS INTERRUPT
                       DKBBYT:
142523 / 000010,,142527                                       ;
142523 / 331110,,142527 POINT 9,10142527,8                    ;
142524 / 000010,,142527                                       ;
142524 / 221110,,142527 POINT 9,10142527,17                   ;
142525 / 000010,,142527                                       ;
142525 / 111110,,142527 POINT 9,10142527,26                   ;
142526 / 000010,,142527                                       ;
142526 / 001110,,142527 POINT 9,10142527,35                   ;
                       ;DKBTBL
                       ;FORMAT IS   BYTE(9)CHAR	SHIFT CHAR	TOP CHAR	TOP SHIFT CHAR
                       DKBTBL:
142527 / 000000,,000000                                       ;
142530 / 000000,,000101                                       ;
142530 / 000000,,000101                                       ;
142530 / 000000,,000034                                       ;
142530 / 000000,,000034                                       ;
142531 / 000000,,000102                                       ;
142531 / 000000,,000102                                       ;
142531 / 000000,,000007                                       ;
142531 / 000000,,000007                                       ;
142532 / 000000,,000103                                       ;
142532 / 000000,,000103                                       ;
142532 / 000000,,000006                                       ;
142532 / 000000,,000006                                       ;
142536 / 000000,,000107                                       ;
142536 / 000000,,000107                                       ;
142536 / 000000,,000033                                       ;
142536 / 000000,,000033                                       ;
142537 / 000000,,000110                                       ;
142537 / 000000,,000110                                       ;
142537 / 000000,,000075                                       ;
142537 / 000000,,000075                                       ;
142540 / 000000,,000111                                       ;
142540 / 000000,,000111                                       ;
142540 / 000000,,000047                                       ;
142540 / 000000,,000047                                       ;
                       ;; DKBCHR	K,<→>
                       ;; DKBCHR	L,<double-arrow>
142544 / 000000,,000115                                       ;
142544 / 000000,,000115                                       ;
142544 / 000000,,000025                                       ;
142544 / 000000,,000025                                       ;
142545 / 000000,,000116                                       ;
142545 / 000000,,000116                                       ;
142545 / 000000,,000024                                       ;
142545 / 000000,,000024                                       ;
142550 / 000000,,000121                                       ;
142550 / 000000,,000121                                       ;
142550 / 000000,,000004                                       ;
142550 / 000000,,000004                                       ;
142551 / 000000,,000122                                       ;
142551 / 000000,,000122                                       ;
142551 / 000000,,000043                                       ;
142551 / 000000,,000043                                       ;
142552 / 000000,,000123                                       ;
142552 / 000000,,000123                                       ;
142552 / 000000,,000035                                       ;
142552 / 000000,,000035                                       ;
142553 / 000000,,000124                                       ;
142553 / 000000,,000124                                       ;
142553 / 000000,,000046                                       ;
142553 / 000000,,000046                                       ;
142555 / 000000,,000126                                       ;
142555 / 000000,,000126                                       ;
142555 / 000000,,000010                                       ;
142555 / 000000,,000010                                       ;
142556 / 000000,,000127                                       ;
142556 / 000000,,000127                                       ;
142556 / 000000,,000037                                       ;
142556 / 000000,,000037                                       ;
142557 / 000000,,000130                                       ;
142557 / 000000,,000130                                       ;
142557 / 000000,,000003                                       ;
142557 / 000000,,000003                                       ;
142561 / 000000,,000132                                       ;
142561 / 000000,,000132                                       ;
142561 / 000000,,000002                                       ;
142561 / 000000,,000002                                       ;
142563 / 000000,,000000                                       ;
142563 / 000000,,000000                                       ;
142563 / 000000,,000016                                       ;
142563 / 000000,,000016                                       ;
142565 / 000000,,000000                                       ;;36
142566 / 000000,,000000                                       ;;37 FUCK
                       ;40
142570 / 000000,,000000                                       ;;41 BREAK
142571 / 000000,,000000                                       ;;42 ESC
                       ;43 ↑C
142573 / 000000,,000000                                       ;;44 CLEAR
                       ;;	DKBCHR	<(>,[
                       ;;	DKBCHR	<)>,<]>
                       ;;DKBCHR	*,⊗
                       ;;DKBCHR	+,|
                       ;;DKBCHR	<,>,!
                       ;;DKBCHR	-,¬
142605 / 000000,,000056                                       ;
142605 / 000000,,000056                                       ;
142605 / 000000,,000077                                       ;
142605 / 000000,,000077                                       ;
142606 / 000000,,000057                                       ;
142606 / 000000,,000057                                       ;
142606 / 000000,,000017                                       ;
142606 / 000000,,000017                                       ;
142607 / 000000,,000060                                       ;
142607 / 000000,,000060                                       ;
142607 / 000000,,000060                                       ;
142607 / 000000,,000060                                       ;
142610 / 000000,,000061                                       ;
142610 / 000000,,000061                                       ;
142610 / 000000,,000036                                       ;
142610 / 000000,,000036                                       ;
142611 / 000000,,000062                                       ;
142611 / 000000,,000062                                       ;
142611 / 000000,,000022                                       ;
142611 / 000000,,000022                                       ;
142612 / 000000,,000063                                       ;
142612 / 000000,,000063                                       ;
142612 / 000000,,000023                                       ;
142612 / 000000,,000023                                       ;
142613 / 000000,,000064                                       ;
142613 / 000000,,000064                                       ;
142613 / 000000,,000020                                       ;
142613 / 000000,,000020                                       ;
142614 / 000000,,000065                                       ;
142614 / 000000,,000065                                       ;
142614 / 000000,,000021                                       ;
142614 / 000000,,000021                                       ;
142615 / 000000,,000066                                       ;
142615 / 000000,,000066                                       ;
142615 / 000000,,000044                                       ;
142615 / 000000,,000044                                       ;
142616 / 000000,,000067                                       ;
142616 / 000000,,000067                                       ;
142616 / 000000,,000045                                       ;
142616 / 000000,,000045                                       ;
142617 / 000000,,000070                                       ;
142617 / 000000,,000070                                       ;
142620 / 000000,,000071                                       ;
142620 / 000000,,000071                                       ;
142621 / 000000,,000072                                       ;
142621 / 000000,,000072                                       ;
142621 / 000000,,000001                                       ;
142621 / 000000,,000001                                       ;
142622 / 000000,,000074                                       ;
142622 / 000000,,000074                                       ;
142622 / 000000,,000000                                       ;
142622 / 000000,,000000                                       ;
142625 / 000000,,000000                                       ;
142626 / 000000,,000000                                       ;
                       ;SCNINT
                       ;SCANNER INTERRUPT SERVICE ROUTINE.
                       SCNINT:
142627 / 264000,,001023           JSR      SCNSAV             ;
142630 / 730340,,000010         CONSO DCSA,000010             ;;RECEIVER FLAG?
142631 / 254000,,142442          JRST      142442             ;;NO,XMITTER FLAG
142632 / 730640,,000002          CONI DCSB,000002             ;;SCANNER INPUT.
142633 / 730440,,000010         DATAI DCSB,   CHR             ;
142634 / 301100,,000020          CAIL LINE,000020             ;;ARE WE ENABLED FOR THIS LINE NUMBER?
142635 / 263140,,000000          POPJ    P,                   ;;NO, DISMISS INTERRUPT
142636 / 306100,,000012          CAIN LINE,APLINE             ;
142637 / 242400,,777776           LSH  CHR,777776             ;;PUT AP STUFF IN RIGHT PLACE
142640 / 254000,,142651          JRST      142651             ;;RECEIVER INT. HANDLER
                       ;CTYINT
                       ;CTY INTERRUPT SERVICE ROUTINE
                       CTYINT:
142641 / 264000,,001023           JSR      001023             ;;YES, SAVE AC'S
142642 / 201100,,000120         MOVEI LINE,000120             ;;LOAD LINE WITH PROPER
142643 / 712340,,000040         CONSO  TTY,000040             ;;YES. TTI FLAG?
142644 / 254000,,142647          JRST      142647             ;;NO.
142645 / 712040,,000010         DATAI  TTY,   CHR             ;
142646 / 254000,,142651          JRST      142651             ;;RECEIVER INTERRUPT HANDLER
                       CTYOU1:
142647 / 712200,,000205          CONO  TTY,000205             ;; CLEAR TTO FLAG
142650 / 254000,,144722          JRST      144722             ;;COMMON TRANSMIT INTERRUPT HANDLER
                       ;SCANNER INTERRUPT SERVICE ROUTINE IS IN SEPARATE DEVICE DEPENDENT SECTION
                       ;RECINT, RECINA, RECINB, RECINC, RECIM3, NOESC, ESCRET
                       ;COMMON RECEIVER INTERRUPT FOR ALL KEYBOARD DEVICES
                       RECINT:
142651 / 201500,,000000         MOVEI UCHN,                   ;;NO CONTROL BITS FROM MOST KEYBOARDS.
                       RECINA:
142652 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;
142653 / 200042,,017717          MOVE  TAC,LINTAB(LINE)       ;;TTYLOK TEST WAS HERE (SEE BELOW) (ME+BH)
                       PTYREC:
142654 / 322400,,037403         JUMPE  CHR,037403             ;;PTY output routines enter here (at uuo level).
142655 / 602400,,010000          TRNE  CHR, 10000             ;
142656 / 254000,,143101          JRST      SETESC             ;
                       NOESC:
142657 / 602040,,600000          TRNE  TAC,600000             ;
142660 / 254000,,143160          JRST       DOESC             ;
                       ESCRET:
142661 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;;TTYLOK TEST MOVED DOWN TO ALLOW SOME ESCS
142662 / 607100,,200000          TLNN LINE,200000             ;;ALWAYS LET CTY BY
142663 / 336000,,017714         SKIPN      017714             ;;ARE WE IN LOCKOUT MODE
142664 / 254000,,142673          JRST      142673             ;;NO
142665 / 205300,,400000         MOVSI  DDB,400000             ;;MAKE A TEST BIT
142666 / 211102,,000000         MOVNI LINE,      (LINE)       ;
142667 / 242302,,000000           LSH  DDB,      (LINE)       ;
142670 / 700040,,000002         DATAI  APR,000002             ;;READ CONSOLE SWITCHES
142671 / 616300,,000002          TDNN  DDB,000002             ;;DOES THIS GUY GET BY?
142672 / 263140,,000000          POPJ    P,                   ;;NO
                       NOLOCK:
152064 / 000700,,000001                                       ;
142673 / 135100,,152064           LDB LINE,152064             ;
142674 / 332302,,032347         SKIPE  DDB,TTYTAB(LINE)       ;;IS THERE A DDB FOR THIS LINE?
142675 / 254000,,142705          JRST      142705             ;;YES, GO ON
142676 / 302100,,000007          CAIE LINE, IMSSS             ;
142677 / 306100,,000012          CAIN LINE,000012             ;;FLUSH AP LINE OR IMSSS IF NO DDB
142700 / 263140,,000000          POPJ    P,                   ;
142701 / 261140,,000015          PUSH    P,   AC1             ;
142702 / 260140,,140123         PUSHJ    P,140123             ;;NO, FIND ONE
142703 / 254000,,144175          JRST        TYPX             ;
142704 / 262140,,000015           POP    P,   AC1             ;
                       RECIN1:
142705 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;
                       RECIN8:
142706 / 306400,,010044          CAIN  CHR,010044             ;;DID HE TYPE CLEAR?
142707 / 254000,,142712          JRST      142712             ;;YES, LET POOR FELLOW FLUSH HIS LINED
142710 / 603100,,000001          TLNE LINE,000001             ;;IN A TALK RING?
142711 / 254000,,144577          JRST      144577             ;;YES, GO TALK
                       RECINZ:
142712 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;SET UP IOS
142713 / 603100,,420000          TLNE LINE,420000             ;
142714 / 254000,,146023          JRST      146023             ;; IF A DPY, GO TO SMART EDITOR
                       RECIN2:
142715 / 603100,,002000          TLNE LINE,002000             ;;IMLAC LINE?
142716 / 254000,,144160          JRST      144160             ;;YES, SPECIAL INTERRUPT RECEIVER FOR IMLACS
                       RECIM2:
142717 / 405400,,000177          ANDI  CHR,000177             ;;7-BIT ASCII ONLY
                       ;*** BEGIN RPH HACK TO RUN DATAPHONES AS DATA DEVICES
142720 / 603000,,000400          TLNE      000400             ;;MONITOR HEAL THY SELF
142721 / 254000,,142726          JRST      142726             ;;NO SPECIAL MODE (IN CASE THIS IS HIS CONSOLE)
142722 / 135040,,037574           LDB  TAC,037574             ;;PICK UP IO MODE
142723 / 302040,,000010          CAIE  TAC,000010             ;;SPECIAL "IMAGE" MODE?
142724 / 306040,,000011          CAIN  TAC,000011             ;;ANOTHER SPECIAL MODE FOR AP WIRE
154657 / 621000,,040000           TLZ      040000             ;;**BO MOD TO TURN OFF IMLAC CONTROL FLAG**
154660 / 603000,,100000          TLNE      TTYHLD             ;
154661 / 260140,,144367         PUSHJ    P,144367             ;;ALSO DON1653646364111133445756T ACTIVATE YET
154662 / 254000,,142774          JRST      RECIN4             ;
142725 / 254000,,154657          JRST      154657             ;;ACTIVATE, BUT NOT COMMAND DECODER
                       NOSPMD:
                       ;*** END RPH HACK
142726 / 302400,,000000          CAIE  CHR,                   ;
                       RECINC:
142727 / 306400,,000003          CAIN  CHR,000003             ;;CONTROL C?
                       RECINB:
142730 / 260140,,144523         PUSHJ    P,144523             ;;YES, SEE IF 2ND CONTROL C
142731 / 603100,,002000          TLNE LINE, IMLIN             ;
142732 / 254000,,142737          JRST      142737             ;;IMLAC'S SEND ALL THE RIGHT CODES.
142733 / 607100,,004000          TLNN LINE,004000             ;;PTY'S WILL BE SENDING RIGHT CURLY BRACKET
142734 / 302400,,000176          CAIE  CHR,   176             ;
142735 / 306400,,000033          CAIN  CHR,000033             ;;CONVERT OLD LOSING ALTMODES INTO NEW.
142736 / 201400,,000175         MOVEI  CHR,   175             ;
                       RECIM3:
142737 / 135200,,136446           LDB HPOS,136446             ;;PICK UP HORIZONTAL POSITION OF OUTPUT CHAR.
142740 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;USER MODE INPUT BUFFER
142741 / 260140,,144224         PUSHJ    P,144224             ;;GO EDIT (AND ECHO) CHARACTER
142742 / 607000,,000400          TLNN      000400             ;;NOT IN MONITOR MODE
142743 / 607100,,004000          TLNN LINE,PTYLIN             ;
142744 / 254000,,142753          JRST      142753             ;;ONLY SPECIAL CHECK FOR PTYS
142745 / 322500,,142753         JUMPE UCHN,RECIN5             ;
142746 / 200046,,000014          MOVE  TAC,ACTMOD(DDB)        ;
142747 / 602040,,000004          TRNE  TAC,SUPSCM             ;
142750 / 302500,,000003          CAIE UCHN,     3             ;
142751 / 606040,,000001          TRNN  TAC,SUPBTS             ;
142752 / 661000,,020000           TLO      020000             ;;ACTIVATE PTY ON CTRL META
                       RECIN5:
142753 / 606000,,000200          TRNN      000200             ;;IF WE ECHOED IT,
142754 / 137200,,136446           DPB HPOS,136446             ;;STORE HORIZONTAL POSITION
142755 / 603000,,100000          TLNE      100000             ;;IF TYPEOUT IS HOLDING
142756 / 316040,,141056          CAMN  TAC,141056             ;;AND THE CHAR WASN'T ↑B...
142757 / 304000,,000000          CAIA                         ;
142760 / 260140,,144367         PUSHJ    P,144367             ;;THEN UNHOLD.
142761 / 502102,,017717          HLLM LINE,LINTAB(LINE)       ;;UPDATE LINE TABLE
142762 / 200046,,000023          MOVE  TAC,TIFCTR(DDB)        ;;FREE SPACES LEFT
142763 / 307040,,000012          CAIG  TAC,000012             ;;ONLY 10 LEFT?
142764 / 254000,,143051          JRST      143051             ;;YES. GO OUTPUT XOFF
142765 / 607000,,021000          TLNN      021000             ;;WAS A BREAK CHARACTER TYPED?
142766 / 254000,,143035          JRST      143035             ;;NO, GO SEE IF ECHO NEED BE TYPED
142767 / 607000,,020000          TLNN      020000             ;;DON'T CRANK UP CH7 UNLESS SYNC CHAR.
142770 / 254000,,142774          JRST      RECIN4             ;
                       ;RECIN3, RECIN4, UTYPET, TYPTST, TYPGO, TTINT
                       RECIN3:
142771 / 205040,,400000         MOVSI  TAC,400000             ;;IS IT IN COMMAND WAIT NOW?
142772 / 616042,,032347          TDNN  TAC,TTYTAB(LINE)       ;;..
142773 / 260140,,144203         PUSHJ    P,144203             ;;NO, WAKE UP COMMAND DECODER NOW
                       RECIN4:
142774 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;SET FOR SYNCHA
142775 / 623000,,021000          TLZE      021000             ;;ACTIVATION CHAR.?
142776 / 260140,,141573         PUSHJ    P,141573             ;;UPDATE ACTIVATED CHAR. COUNT
                       ;CLEAR SYNC IN CORE
142777 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;; ..
143000 / 200046,,000020          MOVE  TAC,TIPCTR(DDB)        ;;UPDATE COUNTER FOR ↑U
143001 / 137040,,136452           DPB  TAC,PLSTLC             ;
143002 / 603000,,000400          TLNE      000400             ;;NO INTERRUPTS IN MONITOR MODE.
143003 / 254000,,143016          JRST      TYPTST             ;
143004 / 135200,,037575           LDB    J,037575             ;; PICK UP JOB NUMBER
143005 / 205640,,020000         MOVSI  AC1,020000             ;; GIVE HIM A TTY INTERRUPT IF DESIRED
143006 / 612644,,033665          TDNE  AC1,JBTIEN(J)          ;; IS HE ENABLED FOR IT?
143007 / 260140,,143061         PUSHJ    P,143061             ;; YES, DO IT.
143010 / 627000,,400000          TLZN      400000             ;;IN TELETYPE INPUT WAIT?
143011 / 254000,,143016          JRST      143016             ;;NO, GO ECHO
                       SNKWAK:
143012 / 260140,,046105         PUSHJ    P,046105             ;;YES, SET IO DONE(OUT OF TTY IOW)
143013 / 260140,,143066         PUSHJ    P,143066             ;;UPDATE INTERACTION RUN TIME (XTIME)
143014 / 205000,,600001         MOVSI      600001             ;
143015 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;;CLEAR WAIT BITS
                       UTYPET:
                       TYPTST:
143016 / 603000,,002000          TLNE      TTYDTC             ;
143017 / 254000,,143033          JRST       TYPT1             ;
143020 / 260140,,140030         PUSHJ    P,140030             ;;CLOBBERED BY STTIOD
143021 / 603100,,004000          TLNE LINE,004000             ;;IS THIS A PTY
143022 / 254000,,145057          JRST      145057             ;;YES, JUST GO CHECK PTY STUFF
143023 / 205000,,010000         MOVSI        TOIP             ;
143024 / 700600,,001004          CONO   PI,SCNOFF             ;
143025 / 612006,,000002          TDNE      DEVIOS(DDB)        ;;TYPE OUT HAPPENNING?
143026 / 254000,,143033          JRST       TYPT1             ;
143027 / 437006,,000002          IORB      DEVIOS(DDB)        ;;NO, BUT THERE IS NOW
143030 / 700600,,002004          CONO   PI, SCNON             ;
143031 / 607000,,002000          TLNN      002000             ;;DON'T TYPE IF HE'S DETACHED...
143032 / 254000,,144726          JRST      144726             ;;START OUTPUT
                       TYPT1:
143033 / 700600,,002004          CONO   PI, SCNON             ;
143034 / 263140,,000000          POPJ    P,                   ;
                       SNKTST:
143035 / 607000,,200000          TLNN      200000             ;;IS LOSER IN SNEAK WAIT?
143036 / 254000,,143016          JRST      143016             ;;NO, PROCEED NORMALLY
143037 / 254000,,143012          JRST      SNKWAK             ;
                       TYPGO:
143040 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
152117 / 002000,,001000           XWD TTYDTC,IOSUPR           ;
143041 / 612000,,152117          TDNE      152117             ;
143042 / 254000,,143033          JRST      143033             ;;FLUSH OUTPUT
143043 / 260140,,140030         PUSHJ    P,STLNAC             ;
143044 / 205000,,000020         MOVSI          IO             ;
143045 / 607100,,004000          TLNN LINE,PTYLIN             ;
143046 / 700600,,001004          CONO   PI,001004             ;;MAKE SURE OF NO RACE!
143047 / 437006,,000002          IORB      DEVIOS(DDB)        ;
143050 / 254000,,143016          JRST      TYPTST             ;
                       RWARN:
143051 / 661000,,001000           TLO      001000             ;;ACTIVATE EVERYTHING SO FAR
143052 / 603100,,406004          TLNE LINE,406004             ;;CAN LINE BE STOPPED?
143053 / 254000,,142771          JRST      142771             ;;NO. WAKE JOB AND CROSS FINGERS.
143054 / 201400,,000023         MOVEI  CHR,000023             ;;YES. SEND AN XOFF.
143055 / 260140,,140642         PUSHJ    P,140642             ;; ..
143056 / 201400,,000001         MOVEI  CHR,000001             ;;AND AN IDLE FOR TTY TO THINK ON.
143057 / 260140,,140642         PUSHJ    P,140642             ;;OUTPUT IT.
143060 / 254000,,142771          JRST      142771             ;;GO WAKE JOB.
                       TTINT:
143061 / 436644,,033765          IORM  AC1,JBTIRQ(J)          ;
143062 / 476013,,023475         SETOM      INTREQ(PID)        ;
143063 / 523013,,024464         HLLOS      CLKFLG(PID)        ;
143064 / 700600,,004001          CONO   PI,004001(7-CLKCHN)   ;
143065 / 263140,,000000          POPJ    P,                   ;
                       STXTIM:
143066 / 135200,,037575           LDB    J,037575             ;;GET JOB NUMBER
                       STXTM2:
143067 / 322200,,037403         JUMPE    J,037403             ;;IF NO JOB, NO XTIME
143070 / 335004,,031443        SKIPGE       XTIME(J)          ;;IS NO-UPDATE BIT ON?
143071 / 263140,,000000          POPJ    P,                   ;;YES.  DONT DO ANYTHING!
143072 / 200044,,031243          MOVE  TAC, TTIME(J)          ;;PICK UP CURRENT RUN TIME
143073 / 202044,,031443         MOVEM  TAC, XTIME(J)          ;;UPDATE INTERACTION RUN TIME
143074 / 335044,,031543        SKIPGE  TAC,JBTWAT(J)          ;;PICK UP WAIT TIME
143075 / 270040,,024635           ADD  TAC,024635             ;;MAKE IT HONEST
143076 / 202044,,031643         MOVEM  TAC,JB2WAT(J)          ;;AND SAVE IT
143077 / 507004,,012230          HRLS      DSKOPS(J)          ;;SAVE CURRENT NUMBER OF DISK OPERATIONS
143100 / 263140,,000000          POPJ    P,                   ;
                       ;ESCAPE BITS
                       ;DEFINITIONS FOR ESCAPE PROCESSOR
                       ;ALL THIS STUFF GOES IN RH(LINTAB)
143101 / 000000,,000010                                       ;
143101 / 000000,,000013                                       ;
                       ;SETESC
                       ;HERE ON <ESC>,<BREAK>, OR <CLEAR> (ALSO FUNNY CHARS FROM PTYS)
                       ;ESCAPE CODE BITS ARE SET UP FOR NEXT TIME
                       SETESC:
143101 / 306400,,010044          CAIN  CHR, 10044             ;
143102 / 254000,,142657          JRST      142657             ;;<CLEAR> ISN'T REALLY AN ESC CHR
143103 / 201740,,000000         MOVEI  AC3,                   ;
143104 / 306400,,010042          CAIN  CHR, 10042             ;
143105 / 201740,,002377         MOVEI  AC3,002377             ;
143106 / 306400,,010041          CAIN  CHR, 10041             ;
153504 / 302500,,000001          CAIE UCHN,000001             ;;WATCH OUT FOR CTRL-BRK
153505 / 000000,,500000                                       ;
153505 / 201740,,002777         MOVEI  AC3,002777             ;
153506 / 254000,,153507          JRST      153507             ;
143107 / 254000,,153504          JRST      153504             ;
143110 / 306700,,001641          CAIN  AC2,  1641             ;
143111 / 201740,,001377         MOVEI  AC3,001377             ;
152311 / 071302,,017717                                       ;
143112 / 137740,,152311           DPB  AC3,152311             ;
143113 / 326740,,037403         JUMPN  AC3,037403             ;;EXIT IF ESC CHR
143114 / 574640,,000010          HLRE  AC1,   CHR             ;
143115 / 323640,,143117        JUMPLE  AC1,143117             ;
143116 / 405640,,000377          ANDI  AC1,ESCNUL             ;
143117 / 326640,,143121         JUMPN  AC1,143121             ;
143120 / 201640,,000377         MOVEI  AC1,000377             ;;ELSE MAP 10XXX→<ESC>XXX, 14XXX→<BRK>XXX
143121 / 602400,,004000          TRNE  CHR,004000             ;;(EASIER FORM FOR PTYUUO'S)
143122 / 210640,,000015          MOVN  AC1,   AC1             ;
                       STDESC:
143123 / 306440,,000141          CAIN DSER,000141             ;
143124 / 254000,,143255          JRST      VDESCA             ;
143125 / 306440,,000144          CAIN DSER,000144             ;
143126 / 254000,,143266          JRST      VDESCD             ;
143127 / 306440,,000163          CAIN DSER,000163             ;
143130 / 254000,,143276          JRST      VDESCS             ;
143131 / 306440,,000164          CAIN DSER,000164             ;
143132 / 254000,,143305          JRST      VDESCT             ;
143133 / 306440,,000165          CAIN DSER,000165             ;
143134 / 254000,,143417          JRST      143417             ;;AUDIO SWITCH CHANNEL SELECT
143135 / 306440,,000142          CAIN DSER,000142             ;
143136 / 254000,,143564          JRST      143564             ;;AUDIO SWITCH UNBEEPER
                       STDES2:
143137 / 660400,,010000           TRO  CHR,010000             ;;PASS IT ON TO LINED
143140 / 306640,,000377          CAIN  AC1,000377             ;;WITH ARG IN SIGN-MAGNITUDE FORM
143141 / 201640,,000000         MOVEI  AC1,                   ;
143142 / 325640,,142661        JUMPGE  AC1,ESCRET             ;
143143 / 210640,,000015          MOVN  AC1,   AC1             ;
143144 / 306640,,000377          CAIN  AC1,ESCNUL             ;
143145 / 201640,,000000         MOVEI  AC1,                   ;
143146 / 505640,,400000          HRLI  AC1,400000             ;
143147 / 254000,,142661          JRST      ESCRET             ;
                       ;REMEMBER THAT ARG WE READ IN IN DECIMAL? WELL, WE REALLY WANTED
                       ;TO READ IT IN OCTAL, SEE, SO . . .
                       ESCOCS:
143150 / 350003,,000000           AOS            (P)          ;
                       ESCOCT:
143151 / 231640,,000144         IDIVI  AC1,000144             ;
143152 / 231700,,000012         IDIVI  AC2,000012             ;
143153 / 242700,,000003           LSH  AC2,     3             ;
143154 / 270700,,000017           ADD  AC2,   AC3             ;
143155 / 242640,,000006           LSH  AC1,     6             ;
143156 / 270640,,000016           ADD  AC1,   AC2             ;
143157 / 263140,,000000          POPJ    P,                   ;
                       ;DOESC
                       ;HERE ON NEXT CHAR AFTER ESCAPE. ANY ARG IS ACCUMULATED LEAVING ESC BITS SET.
                       ;OTHER CHARS CLEAR BITS (LEAVING ESCAPE MODE) AND DISPATCH TO APPROP HANDLER
                       DOESC:
152306 / 071000,,000001                                       ;
143160 / 135640,,152306           LDB  AC1,152306             ;
152477 / 200200,,000001                                       ;
143161 / 135700,,152477           LDB  AC2,152477             ;
143162 / 302700,,000001          CAIE  AC2,     1             ;
143163 / 254000,,143166          JRST      143166             ;
143164 / 302500,,000003          CAIE UCHN,     3             ;
143165 / 364700,,143205          SOJA  AC2,ESCXIT             ;
143166 / 301440,,000060          CAIL DSER,000060             ;
143167 / 303440,,000071         CAILE DSER,000071             ;
143170 / 254000,,143201          JRST      DOESC1             ;
143171 / 306640,,000377          CAIN  AC1,ESCNUL             ;
143172 / 634640,,000015          TDZA  AC1,   AC1             ;
143173 / 221640,,000012         IMULI  AC1,    12             ;
143174 / 271651,,777720          ADDI  AC1,777720(DSER)       ;
143175 / 303640,,000376         CAILE  AC1,ESCMAX             ;
143176 / 201640,,000376         MOVEI  AC1,ESCMAX             ;
152307 / 071002,,017717                                       ;
143177 / 137640,,152307           DPB  AC1,152307             ;
143200 / 263140,,000000          POPJ    P,                   ;
                       DOESC1:
143201 / 306440,,000055          CAIN DSER,000055             ;
143202 / 254000,,143213          JRST      DOESCN             ;
143203 / 602040,,100000          TRNE  TAC,ESCNEG             ;
143204 / 210640,,000015          MOVN  AC1,   AC1             ;
                       ESCXIT:
143205 / 405040,,000177          ANDI  TAC,000177             ;
143206 / 542042,,017717          HRRM  TAC,LINTAB(LINE)       ;
143207 / 254036,,143210          JRST      @ESCDSP(AC2)       ;;NOTE AC2>0 OR WE WOULDN'T BE HERE
                       ESCDSP:
143210 / 000000,,142661                                       ;
143211 / 000000,,143216                                       ;
143212 / 000000,,143123                                       ;
                       DOESCN:
143213 / 201040,,100000         MOVEI  TAC,ESCNEG             ;
143214 / 432042,,017717          XORM  TAC,LINTAB(LINE)       ;
143215 / 263140,,000000          POPJ    P,                   ;
                       ;SPESC
                       SPESC:
143216 / 661040,,200000           TLO  TAC,200000             ;
143217 / 306400,,000600          CAIN  CHR,   600             ;
143220 / 302500,,000003          CAIE UCHN,     3             ;
143221 / 304000,,000000          CAIA                         ;
143222 / 254000,,000347          JRST      DDTCAL             ;
                       ;FTDDT
143223 / 302411,,000540          CAIE  CHR,000540(DSER)       ;
143224 / 254000,,142661          JRST      ESCRET             ;
143225 / 306400,,000714          CAIN  CHR,000714             ;
143226 / 254000,,143236          JRST      SPESCL             ;
143227 / 302400,,000715          CAIE  CHR,000715             ;
143230 / 254000,,143123          JRST      STDESC             ;
143231 / 260140,,143151         PUSHJ    P,ESCOCT             ;
143232 / 301640,,000145          CAIL  AC1,TTPLEN             ;
143233 / 201642,,000000         MOVEI  AC1,      (LINE)       ;
143234 / 542642,,017717          HRRM  AC1,LINTAB(LINE)       ;
143235 / 263140,,000000          POPJ    P,                   ;
                       SPESCL:
143236 / 200040,,000002          MOVE  TAC,  LINE             ;
143237 / 200701,,017717          MOVE  AC2,LINTAB(TAC)        ;
143240 / 607700,,020000          TLNN  AC2,DDDLIN             ;
143241 / 263140,,000000          POPJ    P,                   ;
143242 / 275040,,000026          SUBI  TAC,  DDL0             ;
143243 / 260140,,143151         PUSHJ    P,ESCOCT             ;
143244 / 301640,,000026          CAIL  AC1,  DDL0             ;
143245 / 301640,,000120          CAIL  AC1,000120             ;
143246 / 263140,,000000          POPJ    P,                   ;
143247 / 336715,,012567         SKIPN  AC2,012567(AC1)        ;
143250 / 334755,,014543         SKIPA  AC3,014543(AC1)        ;
143251 / 200756,,000041          MOVE  AC3, VDTMP(AC2)        ;
143252 / 260140,,135376         PUSHJ    P, VDSTR             ;
143253 / 202756,,000041         MOVEM  AC3, VDTMP(AC2)        ;
143254 / 254000,,135430          JRST       VDOUT             ;
                       ;ESCAPES
                       ;ADD CHANNEL TO MAPPING
                       VDESCA:
143255 / 260140,,143317         PUSHJ    P,VDESTV             ;
143256 / 260140,,143373         PUSHJ    P,VDECHK             ;
143257 / 260140,,143407         PUSHJ    P,VDVCHK             ;
152050 / 000416,,000041                                       ;
143260 / 137640,,152050           DPB  AC1,152050             ;
143261 / 260140,,135375         PUSHJ    P,VDSTRB             ;
143262 / 436756,,000041          IORM  AC3, VDTMP(AC2)        ;
143263 / 254000,,135430          JRST       VDOUT             ;
                       ;NORMALIZE SWITCH FOR THIS CHANNEL
                       VDESCN:
143264 / 260140,,135562         PUSHJ    P,VDNORM             ;
143265 / 254000,,135430          JRST       VDOUT             ;
                       ;DELETE CHANNEL FROM MAPPING
                       VDESCD:
143266 / 260140,,143331         PUSHJ    P,VDESET             ;
143267 / 263140,,000000          POPJ    P,                   ;
143270 / 260140,,135371         PUSHJ    P, VDBIT             ;
143271 / 301640,,000040          CAIL  AC1,    40             ;
143272 / 201740,,000017         MOVEI  AC3,000017             ;;ANY HIGH # CLEARS ANALOG SELECT
143273 / 260140,,135376         PUSHJ    P, VDSTR             ;
143274 / 412756,,000041        ANDCAM  AC3, VDTMP(AC2)        ;
143275 / 254000,,135430          JRST       VDOUT             ;
                       ;SELECT SINGLE CHANNEL INTO MAPPING
                       VDESCS:
143276 / 260140,,143317         PUSHJ    P,143317             ;;<ESC>S
143277 / 260140,,143373         PUSHJ    P,VDECHK             ;
143300 / 260140,,143407         PUSHJ    P,VDVCHK             ;
143301 / 202656,,000041         MOVEM  AC1, VDTMP(AC2)        ;
143302 / 260140,,135375         PUSHJ    P,VDSTRB             ;
143303 / 202756,,000041         MOVEM  AC3, VDTMP(AC2)        ;
143304 / 254000,,135430          JRST       VDOUT             ;
                       ;SELECT SINGLE CHANNEL TEMPORARILY
                       VDESCT:
143305 / 260140,,143317         PUSHJ    P,VDESTV             ;
143306 / 260140,,143373         PUSHJ    P,VDECHK             ;
143307 / 626640,,777740          TRZN  AC1,777740             ;
143310 / 254000,,143313          JRST      VDESC2             ;
143311 / 405640,,000007          ANDI  AC1,     7             ;
143312 / 334755,,135115         SKIPA  AC3,VDSYNC(AC1)        ;
                       VDESC2:
143313 / 260140,,135371         PUSHJ    P, VDBIT             ;
143314 / 332701,,012615         SKIPE  AC2,012615(TAC)        ;
143315 / 202756,,000041         MOVEM  AC3, VDTMP(AC2)        ;
143316 / 254000,,135430          JRST       VDOUT             ;
                       VDESTV:
143317 / 325640,,037403        JUMPGE  AC1,037403             ;;<ESC>S OR <ESC>T OR <ESC>A
151662 / 777777,,777401                                       ;
143320 / 312640,,151662          CAME  AC1,151662             ;;SKIP IF <BRK>
143321 / 263140,,000000          POPJ    P,                   ;
143322 / 261140,,000015          PUSH    P,   AC1             ;
143323 / 261140,,000001          PUSH    P,   TAC             ;
143324 / 551640,,000001         HRRZI  AC1,000001             ;;TV AUDIO CHANNEL
143325 / 260140,,143417         PUSHJ    P,143417             ;;SIMULATE ESC # U WHERE # = ASTVC
143326 / 262140,,000001           POP    P,   TAC             ;
143327 / 262140,,000015           POP    P,   AC1             ;
143330 / 263140,,000000          POPJ    P,                   ;
                       ;MORE ESCAPES	VDESET	VDECHK	VDVCHK
                       ;SET UP ARGS FOR VD CMDS, SKIP IF LEGAL.
                       ;NO ARG => MY CHAN. + ARG => DD CHAN #. - ARG => CHAN FOR TTY #.
                       VDESET:
143331 / 541042,,777752          HRRI  TAC,777752(LINE)       ;
143332 / 200701,,017745          MOVE  AC2,017745(TAC)        ;
143333 / 607700,,020000          TLNN  AC2,DDDLIN             ;
143334 / 254000,,143360          JRST      VDEST4             ;
143335 / 321640,,143346         JUMPL  AC1,VDEST3             ;
143336 / 302640,,000377          CAIE  AC1,ESCNUL             ;
143337 / 254000,,143150          JRST      ESCOCS             ;
143340 / 201656,,777752         MOVEI  AC1,777752(AC2)        ;
143341 / 661040,,200000           TLO  TAC,200000             ;
                       VDEST2:
143342 / 336715,,012615         SKIPN  AC2,012615(AC1)        ;
143343 / 334640,,014567         SKIPA  AC1,AVLCHN             ;
143344 / 554656,,000015          HLRZ  AC1,PRGNUM(AC2)        ;
143345 / 254000,,037401          JRST      CPOPJ1             ;
                       VDEST3:
143346 / 210640,,000015          MOVN  AC1,   AC1             ;
143347 / 306640,,000377          CAIN  AC1,ESCNUL             ;
143350 / 254000,,143356          JRST      VDEST1             ;
143351 / 260140,,143151         PUSHJ    P,ESCOCT             ;
143352 / 275640,,000026          SUBI  AC1,  DDL0             ;
143353 / 305640,,000072         CAIGE  AC1, DDNUM             ;
143354 / 325640,,143342        JUMPGE  AC1,VDEST2             ;
143355 / 263140,,000000          POPJ    P,                   ;
                       VDEST1:
143356 / 201640,,000045         MOVEI  AC1,000045             ;;<BRK> WITH NO ARG IS ALWAYS TV CHANNEL
143357 / 254000,,037401          JRST      037401             ;;RPH OCT-27-72
                       VDEST4:
143360 / 603700,,400000          TLNE  AC2,400000             ;;NOT DD, SEE IF III
143361 / 336001,,012615         SKIPN      012615(TAC)        ;
143362 / 263140,,000000          POPJ    P,                   ;;NOT III OR NO DPY HEADER MEANS ILLEGAL
143363 / 321640,,037403         JUMPL  AC1, CPOPJ             ;
143364 / 561041,,000000         HRROI  TAC,      (TAC)        ;;(THANK YOU MR. FROST - REG) SET SIGN FOR VDSTRI
143365 / 306640,,000377          CAIN  AC1,ESCNUL             ;
151654 / 777774,,000000                                       ;
143366 / 334640,,151654         SKIPA  AC1,151654             ;;NULL ARG MEANS ALL P OF G'S
143367 / 260140,,143151         PUSHJ    P,ESCOCT             ;
143370 / 606640,,777760          TRNN  AC1,777760             ;
143371 / 350003,,000000           AOS            (P)          ;;SKIP IF LEGAL P OF G #
143372 / 263140,,000000          POPJ    P,                   ;
                       ;SET UP ARGS & CHECK PRIVACY. RETURNS UPLEVEL ON LOSSAGE
                       VDECHK:
143373 / 260140,,143331         PUSHJ    P,VDESET             ;
143374 / 254000,,037376          JRST       TPOPJ             ;
143375 / 603040,,200000          TLNE  TAC,200000             ;
143376 / 263140,,000000          POPJ    P,                   ;
143377 / 305640,,000040         CAIGE  AC1,    40             ;
143400 / 331015,,014525         SKIPL       DDTAB(AC1)        ;
143401 / 263140,,000000          POPJ    P,                   ;
143402 / 201741,,000000         MOVEI  AC3,      (TAC)        ;
143403 / 201200,,000000         MOVEI    J,                   ;
143404 / 260140,,135612         PUSHJ    P,VDCCHK             ;
151763 / 000001,,000001                                       ;
143405 / 274140,,151763           SUB    P,151763             ;
143406 / 263140,,000000          POPJ    P,                   ;
                       ;CHECK IF CHANNEL IS REALLY ANALOG, AND HANDLE SPECIALLY
                       VDVCHK:
143407 / 626640,,777740          TRZN  AC1,777740             ;
143410 / 254000,,037401          JRST      CPOPJ1             ;
143411 / 405640,,000007          ANDI  AC1,     7             ;
143412 / 434655,,135115           IOR  AC1,VDSYNC(AC1)        ;
143413 / 260140,,135376         PUSHJ    P, VDSTR             ;
143414 / 256023,,777777           XCT      @777777(P)         ;
151763 / 000001,,000001                                       ;
143415 / 274140,,151763           SUB    P,151763             ;
143416 / 254000,,135430          JRST       VDOUT             ;
                       ;ASSCN, ASESC, ESCB  AUDIO SWITCH SERVICE
                       ;ASBTAB HAS DURATION OF BEEP IN 1/4 SEC UNITS
                       ;IF NON-ZERO, INDICATES BEEP IS HAPPENING
                       ;ASTAB BITS
                       ;RH HAS TIME REMAINING IN TEMP SELECTION IN 1/4 SEC UNITS
                       ;	ZERO MEANS INFINITE
                       ;BITS	  FUNCTION
                       ;0     => UUO IS HANGING UNTIL TEMPORARY SELECTION TIMES OUT
                       ;1     => CURRENT SELECTION IS TEMPORARY
                       ;2     => PAGING NOW
                       ;3     => BEEP WHEN TEMPORARY SELECTION TIMES OUT
                       ;4     => PERMANENT CHANNEL NOT PAGE INTERRUPTIBLE
                       ;5     => PERMANENT CHANNEL NOT BEEP INTERRUPTIBLE
                       ;6-7   => TEMPORARY CHANNEL BEEPING DISPOSITION
                       ;8-9   => TEMPORARY CHANNEL PAGING DISPOSTION
                       ;10-13 => TEMPORARY CHANNEL NUMBER
                       ;14-17 => PERMANENT CHANNEL NUMBER
                       ;DISPOSITION CODES
                       ;0: INTERRUPTIBLE
                       ;1: NON-INTERRUPTIBLE
                       ;2: INTERRUPTIBLE, BUT EXTEND DURATION OF TEMP CH
                       ;3: POSTPONE BEEP UNTIL TEMP SELECTION TIMES OUT
                       ;NOTE: 3 IS APPLICABLE ONLY TO BEEP DISPOSITION
                       ;AUDIO SWITCH CHANNEL PERMANENT SELECTION
                       ASESC:
143417 / 571042,,777760         HRREI  TAC,777760(LINE)       ;
143420 / 321040,,037403         JUMPL  TAC,037403             ;;NOT A DPY
143421 / 301040,,000100          CAIL  TAC,000100             ;
143422 / 263140,,000000          POPJ    P,                   ;
143423 / 201440,,000000         MOVEI DSER,                   ;
143424 / 325640,,143427        JUMPGE  AC1,143427             ;;JUMP IF PAGE INTERRUPTIBLE PERM SELECTION ESC U
143425 / 210640,,000015          MOVN  AC1,000015             ;;BRK#U MAKE PAGE UNINT.PERMANENT SELECTION
143426 / 201440,,020000         MOVEI DSER,020000             ;;PERM PAGE UNINTERRUPTIBLE
                       ASESC1:
143427 / 306640,,000377          CAIN  AC1,ESCNUL             ;
143430 / 201640,,000000         MOVEI  AC1,                   ;;FAKE OUT ESCOCT
143431 / 260140,,143151         PUSHJ    P,143151             ;;ASSUME TYPEIN WAS OCTAL
                       ASSEL:
151360 / 430101,,032146                                       ;
143432 / 135740,,151360           LDB  AC3,151360             ;;UUO HANG BIT
143433 / 435651,,000000          IORI  AC1,      (DSER)       ;;PERM SELECTION AND MAYBE PPUN BIT
143434 / 516641,,032146         HRLZM  AC1, ASTAB(TAC)        ;;CLEAR ALL OTHER BITS
143435 / 402001,,032246         SETZM      ASBTAB(TAC)        ;;CLEAR BEEP DURATION
143436 / 505641,,000000          HRLI  AC1,      (TAC)        ;
143437 / 777540,,000015         DATAO   AS,000015             ;;DO SELECTION NOW
143440 / 326740,,143541         JUMPN  AC3,143541             ;;UNHANG POOR UUO
143441 / 263140,,000000          POPJ    P,                   ;
                       ASSCN:
143442 / 737200,,000000          CONO   PK,                   ;;MAKE SURE WE DON'T RUN PAGING INT CODE
143443 / 000000,,000100                                       ;
143443 / 205040,,777700         MOVSI  TAC,777700             ;
143444 / 201100,,777777         MOVEI TAC1,777777             ;
                       ASSCNL:
143445 / 612101,,032246          TDNE TAC1,ASBTAB(TAC)        ;;CHECK FOR BEEPING GOING ON
143446 / 254000,,143465          JRST       ASSCB             ;
143447 / 616101,,032146          TDNN TAC1, ASTAB(TAC)        ;;SKIP IF NON-INFINITE TEMP SELECTION
143450 / 254000,,143462          JRST      ASSCLN             ;
143451 / 200641,,032146          MOVE  AC1, ASTAB(TAC)        ;
153027 / 320200,,000015                                       ;
143452 / 135700,,153027           LDB  AC2,153027             ;;TEMP PAGE DISPOSITION
143453 / 607640,,100000          TLNN  AC1,ASPAGN             ;
143454 / 254000,,143457          JRST      143457             ;;NOT PAGING NOW
143455 / 306700,,000002          CAIN  AC2,     2             ;
143456 / 254000,,143462          JRST      143462             ;;PAGING AND EXTEND, SO DON'T COUNT TEMP DURATION
                       ASSCN1:
143457 / 370641,,032146           SOS  AC1, ASTAB(TAC)        ;;DECREASE ITS COUNT
143460 / 606640,,777777          TRNN  AC1,777777             ;;SKIP IF NOT TIME YET
143461 / 254000,,143525          JRST      143525             ;;TIMED OUT, SET BACK TO PERMANENT
                       ASSCLN:
143462 / 253040,,143445         AOBJN  TAC,ASSCNL             ;
143463 / 737200,,000005          CONO   PK, PKCHN             ;
143464 / 263140,,000000          POPJ    P,                   ;
                       ;IN MIDDLE OF BEEP (CAN'T BE IN A PAGE -- SEE PKINT)
                       ASSCB:
143465 / 370641,,032246           SOS  AC1,ASBTAB(TAC)        ;;DECREMENT BEEP DURATION
143466 / 200701,,032146          MOVE  AC2, ASTAB(TAC)        ;
143467 / 607700,,200000          TLNN  AC2,200000             ;;SKIP IF BEEP INTERRUPTED TEMP SEL
143470 / 254000,,143501          JRST      143501             ;;BEEP IS DURING PERM SEL
153125 / 340200,,000016                                       ;
143471 / 135700,,153125           LDB  AC2,153125             ;;TEMP BEEP DISPOSITION
143472 / 612101,,032146          TDNE TAC1, ASTAB(TAC)        ;;IF TEMP SEL IS INFINITE OR ...
143473 / 306700,,000002          CAIN  AC2,     2             ;
143474 / 254000,,143501          JRST      143501             ;;IF EXTEND, THEN DON'T COUNT TEMP DURATION
143475 / 370701,,032146           SOS  AC2, ASTAB(TAC)        ;
143476 / 606700,,777777          TRNN  AC2,777777             ;;IF TEMP RUNS OUT DURING BEEP, ...
143477 / 621700,,200000           TLZ  AC2,200000             ;;MAKE IT LOOK LIKE INTERRUPTED PERM
143500 / 202701,,032146         MOVEM  AC2, ASTAB(TAC)        ;
                       ASSCB1:
143501 / 602640,,777777          TRNE  AC1,777777             ;
143502 / 254000,,143462          JRST      143462             ;;BEEP NOT DONE, CONTINUE SCAN
                       ASRVRT:
143503 / 200641,,032146          MOVE  AC1, ASTAB(TAC)        ;
143504 / 623640,,040000          TLZE  AC1,ASDBEP             ;
143505 / 254000,,143520          JRST      143520             ;;GO AND BEEP
143506 / 603640,,200000          TLNE  AC1,200000             ;;SKIP IF GOING BACK TO PERM
143507 / 254000,,143516          JRST      143516             ;;GOING BACK TO TEMP
143510 / 603640,,400000          TLNE  AC1,400000             ;;SKIP IF UUO NOT HUNG
143511 / 260140,,143541         PUSHJ    P,143541             ;;UNHANG UUO
152642 / 220400,,000015                                       ;
143512 / 135700,,152642           LDB  AC2,152642             ;;PERM SEL
                       ASRVR2:
143513 / 505701,,000000          HRLI  AC2,      (TAC)        ;
143514 / 777540,,000016         DATAO   AS,   AC2             ;
143515 / 254000,,143462          JRST      143462             ;;CONTINUE SCAN
                       ASRVR3:
152743 / 260400,,000015                                       ;
143516 / 135700,,152743           LDB  AC2,152743             ;;TEMP SEL
143517 / 254000,,143513          JRST      ASRVR2             ;
                       ASRVR1:
143520 / 202641,,032146         MOVEM  AC1, ASTAB(TAC)        ;;STORE BACK WITH BEEP BIT OFF
143521 / 201700,,000003         MOVEI  AC2,ASBPTM             ;
143522 / 202701,,032246         MOVEM  AC2,ASBTAB(TAC)        ;;SET UP BEEP DURATION
143523 / 201700,,000005         MOVEI  AC2,ASBEPC             ;
143524 / 254000,,143513          JRST      143513             ;;SELECT BEEP CHANNEL AND CONTINUE SCAN
                       ASSCTO:
143525 / 621640,,200000           TLZ  AC1,200000             ;;TEMP SEL TIMED OUT, CLEAR TEMP BIT
143526 / 603640,,100000          TLNE  AC1,ASPAGN             ;
143527 / 254000,,143537          JRST      143537             ;;PAGING NOW
143530 / 623640,,040000          TLZE  AC1,ASDBEP             ;
143531 / 254000,,143520          JRST      143520             ;;DO DELAYED BEEP
143532 / 202641,,032146         MOVEM  AC1, ASTAB(TAC)        ;
143533 / 603640,,400000          TLNE  AC1,ASHANG             ;
143534 / 260140,,143541         PUSHJ    P,143541             ;;UNHANG UUO
                       ASSCT1:
152642 / 220400,,000015                                       ;
143535 / 135700,,152642           LDB  AC2,152642             ;
143536 / 254000,,143513          JRST      143513             ;;SELECT PERM AND CONTINUE SCAN
                       ASSCT2:
143537 / 202641,,032146         MOVEM  AC1, ASTAB(TAC)        ;;JUST CLEAR TEMP BIT AND
143540 / 254000,,143462          JRST      143462             ;;CONTINUE SCAN
                       ;UNHANG UUO THAT WAS WAITING FOR TEMP SEL TO FINISH
                       ASUNHG:
143541 / 261140,,000006          PUSH    P,   DDB             ;
143542 / 261140,,000004          PUSH    P,     J             ;
143543 / 205200,,400000         MOVSI    J,ASHANG             ;
143544 / 412201,,032146        ANDCAM    J, ASTAB(TAC)        ;;CLEAR UUO HANG BIT
143545 / 550301,,032367          HRRZ  DDB,032367(TAC)        ;
143546 / 322300,,143561         JUMPE  DDB,143561             ;;NO DDB, DONE
143547 / 205200,,020000         MOVSI    J,TTYATC             ;
143550 / 616206,,000004          TDNN    J,DEVMOD(DDB)        ;
143551 / 254000,,143561          JRST      143561             ;;NOT CONSOLE, DONE
143552 / 135200,,037575           LDB    J,037575             ;;JOB NUMBER
143553 / 214304,,020574          MOVM  DDB,JOBQUE(J)          ;
143554 / 302300,,000005          CAIE  DDB,  IOWQ             ;
143555 / 254000,,143561          JRST      143561             ;;NOT IN IOWQ NOW
143556 / 201300,,000014         MOVEI  DDB,000014             ;;GRONK INTO RUNQ
143557 / 212304,,020574         MOVNM  DDB,JOBQUE(J)          ;
143560 / 260140,,046027         PUSHJ    P, REQUE             ;
                       ASUNHR:
143561 / 262140,,000004           POP    P,     J             ;
143562 / 262140,,000006           POP    P,   DDB             ;
143563 / 263140,,000000          POPJ    P,                   ;
                       ESCB:
143564 / 571702,,777760         HRREI  AC2,777760(LINE)       ;
143565 / 321700,,037403         JUMPL  AC2, CPOPJ             ;
143566 / 301700,,000100          CAIL  AC2,000100             ;
143567 / 263140,,000000          POPJ    P,                   ;;NOT A DPY
143570 / 205040,,010000         MOVSI  TAC,ASPBUN             ;
143571 / 321640,,143574         JUMPL  AC1, ESCB1             ;
143572 / 412056,,032146        ANDCAM  TAC, ASTAB(AC2)        ;;ESC B MAKES YOU BEEP INTERRUPTIBLE
143573 / 263140,,000000          POPJ    P,                   ;
                       ESCB1:
143574 / 436056,,032146          IORM  TAC, ASTAB(AC2)        ;;BRK B MAKES YOU BEEP UNINTERRUPTIBLE
143575 / 263140,,000000          POPJ    P,                   ;
                       ;PKINT	PAGING INTERRUPT SERVICE ROUTINE
                       PKINT:
143576 / 264000,,001023           JSR      001023             ;;SAVES ACS AND PUSHJS TO .+1
143577 / 737200,,000025          CONO   PK,000025             ;
143600 / 000000,,000100                                       ;
143600 / 205040,,777700         MOVSI  TAC,777700             ;
143601 / 737340,,000020         CONSO   PK,000020             ;;SKIP IF PAGING JUST BEGINNING
143602 / 254000,,143633          JRST      143633             ;;PAGING FINISHED
143603 / 476000,,032346         SETOM      032346             ;;INDICATE PAGING NOW IN PROGRESS
143604 / 201100,,777777         MOVEI TAC1,777777             ;
                       PKINL:
143605 / 201440,,000000         MOVEI DSER,                   ;;-1 => BEEPING
143606 / 612101,,032246          TDNE TAC1,ASBTAB(TAC)        ;
143607 / 211440,,000001         MOVNI DSER,000001             ;;BEEPING NOW
143610 / 200641,,032146          MOVE  AC1, ASTAB(TAC)        ;
143611 / 607640,,200000          TLNN  AC1,200000             ;;SKIP IF TEMP SELECTION NOW IN FORCE
143612 / 254000,,143630          JRST      143630             ;;PERM
153027 / 320200,,000015                                       ;
143613 / 135700,,153027           LDB  AC2,153027             ;
143614 / 306700,,000001          CAIN  AC2,     1             ;
143615 / 254000,,143626          JRST      143626             ;;NOT PAGE INTERRUPTIBLE
                       PKINLB:
143616 / 322440,,143621         JUMPE DSER,143621             ;;NOT BEEPING, JUST DO IT
143617 / 512001,,032246         HLLZM      ASBTAB(TAC)        ;;FLUSH BEEP
143620 / 661640,,040000           TLO  AC1,040000             ;;SET DELAYED BEEP BIT
                       PKINL1:
143621 / 661640,,100000           TLO  AC1,100000             ;;PAGING NOW
143622 / 202641,,032146         MOVEM  AC1, ASTAB(TAC)        ;
143623 / 201700,,000000         MOVEI  AC2,                   ;
143624 / 505701,,000000          HRLI  AC2,      (TAC)        ;
143625 / 777540,,000016         DATAO   AS,   AC2             ;
                       PKINLA:
143626 / 253040,,143605         AOBJN  TAC, PKINL             ;
143627 / 263140,,000000          POPJ    P,                   ;
                       ;PERMANENT SELECTION IS NOW IN FORCE
                       PKINP:
143630 / 603640,,020000          TLNE  AC1,020000             ;;SKIP IF PAGE INTERRUPTIBLE
143631 / 254000,,143626          JRST      143626             ;;CONTINUE SCAN
143632 / 254000,,143616          JRST      PKINLB             ;
                       ;HERE IF PAGING INTERRUPT BUT PAGING BIT IS OFF
                       PKINND:
143633 / 402000,,032346         SETZM      PAGNOW             ;
143634 / 200641,,032146          MOVE  AC1, ASTAB(TAC)        ;
143635 / 627640,,100000          TLZN  AC1,100000             ;;SKIP IF HAS BEEN INTERRUPTED FOR PAGING
143636 / 254000,,143647          JRST      143647             ;;DON'T HAVE TO MUNG HIM
143637 / 627640,,040000          TLZN  AC1,040000             ;;SKIP IF HAVE TO DO BEEP NOW
143640 / 254000,,143651          JRST      PKINN1             ;
143641 / 201700,,000003         MOVEI  AC2,ASBPTM             ;
143642 / 202701,,032246         MOVEM  AC2,ASBTAB(TAC)        ;;SET UP BEEP DURATION
143643 / 201700,,000005         MOVEI  AC2,000005             ;;SELECT BEEP CHANNEL AND CONTINUE SCAN
                       PKINN2:
143644 / 202641,,032146         MOVEM  AC1, ASTAB(TAC)        ;
143645 / 505701,,000000          HRLI  AC2,      (TAC)        ;
143646 / 777540,,000016         DATAO   AS,   AC2             ;
                       PKINNA:
143647 / 253040,,143633         AOBJN  TAC,PKINND             ;
143650 / 263140,,000000          POPJ    P,                   ;
                       ;DELAYED BEEP BIT WAS OFF
                       PKINN1:
143651 / 607640,,200000          TLNN  AC1,200000             ;;SKIP IF GOING BACK TO TEMP SEL
143652 / 254000,,143655          JRST      PKINNP             ;
152743 / 260400,,000015                                       ;
143653 / 135700,,152743           LDB  AC2,152743             ;;TEMP CHANNEL SELECTION
143654 / 254000,,143644          JRST      PKINN2             ;
                       ;GOING BACK TO PERMANENT SELECTION
                       PKINNP:
143655 / 623640,,400000          TLZE  AC1,400000             ;;SKIP IF UUO NOT HANGING
143656 / 260140,,143541         PUSHJ    P,143541             ;;UNHANG THE UUO
152642 / 220400,,000015                                       ;
143657 / 135700,,152642           LDB  AC2,152642             ;;PERMANENT CHANNEL SELECTION
143660 / 254000,,143644          JRST      PKINN2             ;
                       ;ADSMAP, BEEP UUOS
                       ;ADSMAP AC, (EFFECTIVE ONLY FROM A JOB THAT IS ATTACHED TO ITS CONSOLE)
                       ;AC BITS
                       ;0	1 => TEMPORARY, 0=> PERMANENT
                       ;1	1 => SET SELECTION, 0 => READ
                       ;2	1 => MAKE THE SELECTION IMMEDIATELY (IF TEMP SEL)
                       ;3	1 => DON'T HANG UNTIL PREVIOUS TEMP SEL IS COMPLETE
                       ;4	1 => DON'T HANG UNTIL THIS TEMP SEL IS COMPLETE
                       ;5-6	PAGING DISPOSITION
                       ;7-8	BEEPING DISPOSITION
                       ;14-17	NEW SELECTION (AS CHANNEL NUMBER)
                       ;RH	DURATION FOR TEMP SEL IN 1/4 SEC UNITS
                       ;THE FOLLOWING ADDITIONAL BITS ARE RETURNED ON A READ STATUS:
                       ;9	1 => THERE IS AN ACTIVE TEMP MAP FOR THIS LINE
                       ;10	1 => THERE IS A PAGE IN PROGRESS (WHETHER OR NOT ON THIS LINE)
                       ;11	1 => THERE IS A PAGE IN PROGRESS AND ENABLED ON THIS LINE
                       ;12	1 => THERE IS A BEEP IN PROGRESS ON THIS LINE
                       ;13	1 => THERE IS A DELAYED BEEP PENDING FOR THIS LINE
                       ;IF THE AC CONTAINS -1, THE MAP IS RESET TO ITS PERMANENT STATUS
                       ;IF TRYING TO MAKE A TEMP SEL WITHOUT WAITING FOR THE PREVIOUS TEMP
                       ;SEL TO FINISH, THE UUO WILL BE IGNORED IF THE PREV TEMP SEL HAS NOT
                       ;COMPLETED AND BIT 2 IS ZERO
                       ;IF PERMANENT THEN ONLY LOW BIT OF DISPOSITION FIELD IS LOOKED AT
                       ;DISPOSITIONS
                       ;0	INTERRUPTIBLE
                       ;1	NON-INTERRUPTIBLE
                       ;2	INTERRUPTIBLE, BUT EXTEND DURATION OF TEMP CH
                       ;3	POSTPONE BEEP UNTIL TEMP SELECTION TIMES OUT
                       ;NOTE: 3 IS APPLICABLE ONLY TO BEEP DISPOSITION
                       ADSMAP:
143661 / 570644,,027320          HRRE  AC1,JBTLIN(J)          ;
143662 / 321640,,037403         JUMPL  AC1,037403             ;;DETACHED
143663 / 275640,,000020          SUBI  AC1, DPYL0             ;
143664 / 321640,,037403         JUMPL  AC1,037403             ;;NOT DD OR DPY
143665 / 301640,,000100          CAIL  AC1,000100             ;
143666 / 263140,,000000          POPJ    P,                   ;;NOT DD OR DPY
143667 / 200700,,000001          MOVE  AC2,   TAC             ;
143670 / 342700,,144146          AOJE  AC2,144146             ;;TAC=-1 MEANS RESET TO PERM
143671 / 607040,,200000          TLNN  TAC,200000             ;;SKIP IF SETTING SELECTION
143672 / 254000,,144034          JRST      144034             ;;READ SELECTION
143673 / 700600,,001004          CONO   PI,SCNOFF             ;
143674 / 607040,,140000          TLNN  TAC,140000             ;;SKIP IF DON'T HAVE TO WAIT FOR PREV TEMP SEL
143675 / 260140,,144013         PUSHJ    P,144013             ;;WAIT FOR PREV (TURNS SCNOFF)
143676 / 321040,,143755         JUMPL  TAC,143755             ;;MAKE TEMP SEL
                       ADSRE1:
143677 / 554040,,000001          HLRZ  TAC,000001             ;;GET NEW CH # IN LOW 4 BITS
143700 / 201700,,000000         MOVEI  AC2,                   ;
152643 / 220400,,000016                                       ;
143701 / 137040,,152643           DPB  TAC,152643             ;;PERM CH #
143702 / 205740,,040000         MOVSI  AC3,ASDBEP             ;
143703 / 612755,,032146          TDNE  AC3, ASTAB(AC1)        ;
143704 / 434700,,000017           IOR  AC2,000017             ;;SET DELAYED BEEP BIT IF ALREADY SET
152044 / 000400,,000001                                       ;
143705 / 135740,,152044           LDB  AC3,152044             ;;CHANNEL TO SELECT TO
143706 / 606040,,004000          TRNN  TAC,004000             ;;SKIP IF PAGE UNINTERRUPTIBLE
153344 / 260140,,143727         PUSHJ    P,ADSMP1             ;
153345 / 254000,,153347          JRST      153347             ;
143707 / 254000,,153344          JRST      153344             ;
143710 / 661700,,020000           TLO  AC2,020000             ;;SET PERM PAGE UNINTERRUPTIBLE BIT
143711 / 606040,,001000          TRNN  TAC,001000             ;;SKIP IF BEEP UNINTERRUPTIBLE
153346 / 260140,,143740         PUSHJ    P,ADSMP2             ;
153347 / 254000,,143716          JRST      ADSMP4             ;
143712 / 254000,,153346          JRST      153346             ;
143713 / 661700,,010000           TLO  AC2,010000             ;;SET PERM BEEP UNINTERRUPTIBLE BIT
143714 / 621700,,040000           TLZ  AC2,040000             ;;CLEAR DELAYED BEEP BIT IF NOT INTERRUPTIBLE
143715 / 402015,,032246         SETZM      ASBTAB(AC1)        ;;FLUSH BEEPS
                       ADSMP4:
143716 / 202715,,032146         MOVEM  AC2, ASTAB(AC1)        ;
143717 / 505755,,000000          HRLI  AC3,      (AC1)        ;
143720 / 777540,,000017         DATAO   AS,000017             ;;MAKE SELECTION NOW
143721 / 606040,,400000          TRNN  TAC,400000             ;
143722 / 254000,,143725          JRST      143725             ;;MAKING PERM SEL, SO DON'T WAIT
143723 / 606040,,020000          TRNN  TAC, 20000             ;
143724 / 260140,,144013         PUSHJ    P,144013             ;;WAIT FOR TEMP SEL TO FINISH
                       ADSSCZ:
143725 / 700600,,002004          CONO   PI, SCNON             ;
143726 / 263140,,000000          POPJ    P,                   ;
                       ;PAGE INTERRUPTIBLE, SO CHECK FOR PAGING GOING ON
                       ADSMP1:
143727 / 336000,,032346         SKIPN      PAGNOW             ;
143730 / 263140,,000000          POPJ    P,                   ;
143731 / 661700,,100000           TLO  AC2,100000             ;;SET PAGING NOW BIT
143732 / 201740,,000000         MOVEI  AC3,                   ;;SELECT PAGING CHANNEL
143733 / 550455,,032246          HRRZ DSER,ASBTAB(AC1)        ;
143734 / 322440,,037403         JUMPE DSER,037403             ;;NOT BEEP IN PROGRESS
143735 / 661700,,040000           TLO  AC2,040000             ;;SET DELAYED BEEP BIT
143736 / 402015,,032246         SETZM      ASBTAB(AC1)        ;;FLUSH BEEP
143737 / 263140,,000000          POPJ    P,                   ;
                       ;BEEP INTERRUPTIBLE, SO CHECK FOR DELAYED BEEP OR BEEP IN PROGRESS
                       ADSMP2:
143740 / 603700,,040000          TLNE  AC2,040000             ;;SKIP IF NO DELAYED BEEP
143741 / 254000,,143746          JRST      ADSMP5             ;
143742 / 550455,,032246          HRRZ DSER,ASBTAB(AC1)        ;
143743 / 322440,,037403         JUMPE DSER,037403             ;;NO BEEP IN PROGRESS EITHER
143744 / 201740,,000005         MOVEI  AC3,000005             ;;CONTINUE WITH BEEP
143745 / 263140,,000000          POPJ    P,                   ;
                       ADSMP5:
143746 / 603700,,100000          TLNE  AC2,ASPAGN             ;
143747 / 263140,,000000          POPJ    P,                   ;;PAGING TAKES PRECEDENCE
143750 / 621700,,040000           TLZ  AC2,040000             ;;CLEAR DELAYED BEEP BIT
143751 / 201740,,000003         MOVEI  AC3,ASBPTM             ;
143752 / 202755,,032246         MOVEM  AC3,ASBTAB(AC1)        ;;START UP BEEP
143753 / 201740,,000005         MOVEI  AC3,ASBEPC             ;
143754 / 263140,,000000          POPJ    P,                   ;
                       ;MAKE TEMP SEL (SCNOFF)
                       ADSMT:
143755 / 200715,,032146          MOVE  AC2, ASTAB(AC1)        ;
143756 / 602700,,777777          TRNE  AC2,777777             ;;SKIP IF NO TEMP SEL IN PROG OR INF TEMP SEL IS
143757 / 603040,,100000          TLNE  TAC,100000             ;;SKIP IF GRONK IS OFF
143760 / 254000,,143762          JRST      143762             ;;OK TO MAKE NEW TEMP SEL NOW
143761 / 254000,,143725          JRST      143725             ;;TEMP SEL IN PROG, DON'T GRONK, DON'T WAIT (NOOP)
                       ADSMT1:
143762 / 204040,,000001          MOVS  TAC,000001             ;;NEW CH # IN LOW 4 BITS, DURATION IN LH
152044 / 000400,,000001                                       ;
143763 / 135740,,152044           LDB  AC3,152044             ;;NEW CHAN SELECTION
152744 / 260400,,000016                                       ;
143764 / 137740,,152744           DPB  AC3,152744             ;
152346 / 130200,,000001                                       ;
143765 / 135100,,152346           LDB TAC1,152346             ;;NEW PAGING DISPOSITION
143766 / 306100,,000003          CAIN TAC1,     3             ;
143767 / 201100,,000001         MOVEI TAC1,000001             ;;CHANGE 3 INTO 1
153030 / 320200,,000016                                       ;
143770 / 137100,,153030           DPB TAC1,153030             ;;SET PAGE DISP
152325 / 110200,,000001                                       ;
143771 / 135100,,152325           LDB TAC1,152325             ;;NEW BEEP DISPOSITION
153125 / 340200,,000016                                       ;
143772 / 137100,,153125           DPB TAC1,153125             ;;SET BEEP DISP
143773 / 606040,,000400          TRNN  TAC,000400             ;;SKIP IF NOT PAGE INTERRUPTIBLE
143774 / 260140,,143727         PUSHJ    P,ADSMP1             ;
                       ADSMT3:
143775 / 306100,,000003          CAIN TAC1,     3             ;
143776 / 254000,,144006          JRST      144006             ;;DELAY BEEP
143777 / 302100,,000001          CAIE TAC1,000001             ;;SKIP IF BEEP UNINTERRUPTIBLE
153350 / 260140,,143740         PUSHJ    P,ADSMP2             ;
153351 / 254000,,144003          JRST      ADSMT6             ;
144000 / 254000,,153350          JRST      153350             ;
144001 / 621700,,040000           TLZ  AC2,ASDBEP             ;
144002 / 402015,,032246         SETZM      ASBTAB(AC1)        ;
                       ADSMT6:
144003 / 544700,,000001           HLR  AC2,000001             ;;DURATION
144004 / 661700,,200000           TLO  AC2,200000             ;;SET TEMP SEL BIT
144005 / 254000,,143716          JRST      ADSMP4             ;
                       ;DELAY BEEP MODE
                       ADSMT4:
144006 / 550455,,032246          HRRZ DSER,ASBTAB(AC1)        ;
144007 / 322440,,144003         JUMPE DSER,ADSMT6             ;
144010 / 661700,,040000           TLO  AC2,040000             ;;SET DELAYED BEEP BIT
144011 / 402015,,032246         SETZM      ASBTAB(AC1)        ;;FLUSH BEEP NOW
144012 / 254000,,144003          JRST      ADSMT6             ;
                       ;WAIT UNTIL TEMP SELECTION IS DONE (RETURNS WITH SCNOFF)
                       ADSMWT:
144013 / 700600,,001004          CONO   PI,SCNOFF             ;
144014 / 200715,,032146          MOVE  AC2, ASTAB(AC1)        ;
144015 / 603700,,400000          TLNE  AC2,ASHANG             ;
144016 / 254000,,144025          JRST      ADSMW1             ;
144017 / 201740,,777777         MOVEI  AC3,777777             ;
144020 / 616755,,032246          TDNN  AC3,ASBTAB(AC1)        ;;SKIP IF BEEPING NOW
144021 / 603700,,100000          TLNE  AC2,100000             ;;SKIP IF NOT PAGING NOW
144022 / 254000,,144025          JRST      144025             ;;BEEP OR TEMP SEL - WAIT
144023 / 606700,,777777          TRNN  AC2,777777             ;;NOT BEEPING OR PAGING,TEST FOR TEMP SEL TO WAIT FOR
144024 / 263140,,000000          POPJ    P,                   ;;NOTHING TO WAIT FOR
                       ADSMW1:
144025 / 661700,,400000           TLO  AC2,ASHANG             ;
144026 / 202715,,032146         MOVEM  AC2, ASTAB(AC1)        ;
144027 / 201700,,000005         MOVEI  AC2,  IOWQ             ;
144030 / 212704,,020574         MOVNM  AC2,JOBQUE(J)          ;
144031 / 700600,,002004          CONO   PI, SCNON             ;
144032 / 260140,,046124         PUSHJ    P,046124             ;;GO INTO IOWQ
144033 / 254000,,144013          JRST      ADSMWT             ;
                       ;READ AS STATUS INTO AC
                       ADSMRD:
144034 / 700600,,001004          CONO   PI,001004             ;;PREVENT CHANGING OUT FROM UNDER US
144035 / 200700,,032346          MOVE  AC2,PAGNOW             ;
144036 / 550755,,032246          HRRZ  AC3,ASBTAB(AC1)        ;
144037 / 200115,,032146          MOVE TAC1, ASTAB(AC1)        ;
144040 / 700600,,002004          CONO   PI, SCNON             ;
144041 / 540040,,000002           HRR  TAC,000002             ;;READ BACK DURATION
144042 / 621040,,177777           TLZ  TAC,177777             ;
144043 / 603100,,200000          TLNE TAC1,ASTEMP             ;
144044 / 661040,,000400           TLO  TAC,000400             ;;TEMP MAP IN EFFECT NOW
144045 / 322700,,144047         JUMPE  AC2,144047             ;
144046 / 661040,,000200           TLO  TAC,000200             ;;THERE'S A PAGE GOING ON
144047 / 603100,,100000          TLNE TAC1,ASPAGN             ;
144050 / 661040,,000100           TLO  TAC,000100             ;;WE'RE PAGING ON THIS LINE
144051 / 322740,,144053         JUMPE  AC3,144053             ;
144052 / 661040,,000040           TLO  TAC,000040             ;;WE'RE BEEPING THIS LINE NOW
144053 / 603100,,040000          TLNE TAC1,ASDBEP             ;
144054 / 661040,,000020           TLO  TAC,000020             ;;WE'RE GOING TO BEEP IT LATER
144055 / 325040,,144067        JUMPGE  TAC,144067             ;;JUMP IF READING PERM
152741 / 260400,,000002                                       ;
144056 / 135700,,152741           LDB  AC2,152741             ;;TEMP CHAN SEL
153123 / 340200,,000002                                       ;
144057 / 135740,,153123           LDB  AC3,153123             ;;TEMP BEEP DISP
153026 / 320200,,000002                                       ;
144060 / 135100,,153026           LDB TAC1,153026             ;;TEMP PAGE DISP
                       ADSMR2:
144061 / 242100,,000002           LSH TAC1,     2             ;
144062 / 434100,,000017           IOR TAC1,   AC3             ;
144063 / 242100,,000011           LSH TAC1,     9             ;
144064 / 435116,,200000          IORI TAC1,200000(AC2)        ;
144065 / 671040,,000002           TSO  TAC,  TAC1             ;
144066 / 254000,,060225          JRST      STOTAC             ;
                       ADSMR1:
152640 / 220400,,000002                                       ;
144067 / 135700,,152640           LDB  AC2,152640             ;;PERM CHAN SEL
153147 / 360100,,000002                                       ;
144070 / 135740,,153147           LDB  AC3,153147             ;;PERM BEEP UNINTERRUPTIBLE BIT
153175 / 370100,,000002                                       ;
144071 / 135100,,153175           LDB TAC1,153175             ;;PERM PAGE UNINTERRUPTIBLE BIT
144072 / 254000,,144061          JRST      ADSMR2             ;
                       ;BEEP AC,
                       ;AC HAS TTY NUMBER TO BEEP OR -1 FOR YOURSELF
                       BEEP:
144073 / 325040,,144076        JUMPGE  TAC, BEEP1             ;
144074 / 570044,,027320          HRRE  TAC,JBTLIN(J)          ;
144075 / 321040,,037403         JUMPL  TAC,037403             ;;DETACHED
                       BEEP1:
144076 / 405040,,000177          ANDI  TAC,   177             ;
144077 / 275040,,000020          SUBI  TAC, DPYL0             ;
144100 / 321040,,144132         JUMPL  TAC,144132             ;;NOT A DPY, TRY ↑G
144101 / 301040,,000100          CAIL  TAC,000100             ;
144102 / 254000,,144132          JRST      BEEPND             ;
144103 / 700600,,001004          CONO   PI,SCNOFF             ;
144104 / 200641,,032146          MOVE  AC1, ASTAB(TAC)        ;
153124 / 340200,,000015                                       ;
144105 / 135700,,153124           LDB  AC2,153124             ;;GET TEMP BEEP DISP
144106 / 607640,,200000          TLNN  AC1,200000             ;;SKIP IF TEMP
153150 / 360100,,000015                                       ;
144107 / 135700,,153150           LDB  AC2,153150             ;;PERM BEEP DISP
144110 / 602700,,000001          TRNE  AC2,000001             ;;SKIP IF INTERRUPTIBLE
144111 / 254000,,144126          JRST       BEEPU             ;
144112 / 607640,,100000          TLNN  AC1,100000             ;;SKIP IF PAGING NOW
144113 / 254000,,144120          JRST      BEEPNP             ;
                       BEEPDX:
144114 / 661640,,040000           TLO  AC1,040000             ;;SET DELAYED BEEP
144115 / 202641,,032146         MOVEM  AC1, ASTAB(TAC)        ;
                       BEEPX:
144116 / 700600,,002004          CONO   PI, SCNON             ;
144117 / 263140,,000000          POPJ    P,                   ;
                       BEEPNP:
144120 / 201700,,000003         MOVEI  AC2,ASBPTM             ;
144121 / 202701,,032246         MOVEM  AC2,ASBTAB(TAC)        ;
144122 / 201740,,000005         MOVEI  AC3,ASBEPC             ;
144123 / 505741,,000000          HRLI  AC3,      (TAC)        ;
144124 / 777540,,000017         DATAO   AS,   AC3             ;
144125 / 254000,,144116          JRST       BEEPX             ;
                       BEEPU:
144126 / 603640,,200000          TLNE  AC1,200000             ;;SKIP IF PERM
144127 / 306700,,000001          CAIN  AC2,     1             ;
144130 / 254000,,144116          JRST      144116             ;;NOT INTERRUPTIBLE, SORRY
144131 / 254000,,144114          JRST      144114             ;;TEMP SEL (INF OR OTHERWISE), SET DELAYED BEEP
                       BEEPND:
144132 / 201101,,000020         MOVEI LINE, DPYL0(TAC)        ;;BEEP ADDRESSED TO NON-DPY:
144133 / 260140,,140064         PUSHJ    P,140064             ;;FIND OR CREATE DDB
144134 / 263140,,000000          POPJ    P,                   ;;NO SUCH TTY OR NO DDBS AVAILABLE
144135 / 201400,,000007         MOVEI  CHR,000007             ;;GOBBLE A BELL
144136 / 260140,,140503         PUSHJ    P,140503             ;;SOCK IT TO HIM!
144137 / 254000,,143016          JRST      TYPTST             ;
                       ;RESET AUDIO SWITCH MAP TO PERMANENT SETTING
                       ;CALLED BY ADSMAP WITH AC=-1 AND BY RESET
                       ADSRES:
144140 / 570644,,027320          HRRE  AC1,JBTLIN(J)          ;;RESET JOB TO PERMANENT ADS MAP
144141 / 321640,,037403         JUMPL  AC1,037403             ;;DETACHED
144142 / 275640,,000020          SUBI  AC1, DPYL0             ;
144143 / 321640,,037403         JUMPL  AC1,037403             ;;NOT DD OR DPY
144144 / 301640,,000100          CAIL  AC1,000100             ;
144145 / 263140,,000000          POPJ    P,                   ;;NOT DD OR DPY
                       ADSRE2:
144146 / 201040,,000000         MOVEI  TAC,                   ;
144147 / 700600,,001004          CONO   PI,SCNOFF             ;
153176 / 370115,,032146                                       ;
144150 / 135700,,153176           LDB  AC2,153176             ;
153137 / 000000,,000001                                       ;
153137 / 350100,,000001 POINT 1,00000001,6                    ;
144151 / 137700,,153137           DPB  AC2,153137             ;
153151 / 360115,,032146                                       ;
144152 / 135700,,153151           LDB  AC2,153151             ;
153036 / 000000,,000001                                       ;
153036 / 330100,,000001 POINT 1,00000001,8                    ;
144153 / 137700,,153036           DPB  AC2,153036             ;
152644 / 220415,,032146                                       ;
144154 / 135700,,152644           LDB  AC2,152644             ;
152637 / 000000,,000001                                       ;
152637 / 220400,,000001 POINT 4,00000001,17                   ;
144155 / 137700,,152637           DPB  AC2,152637             ;
144156 / 661040,,360000           TLO  TAC,360000             ;
144157 / 254000,,143677          JRST      ADSRE1             ;
                       ;RECIML
                       ;SPECIAL CODE FOR IMLACS (JHS CODE REPLACED BY BO)
                       RECIML:
144160 / 623000,,040000          TLZE      040000             ;;Flag left from preceding char?
144161 / 254000,,144173          JRST      144173             ;;Yes.  Add the bucky bits.
144162 / 606400,,000200          TRNN  CHR,000200             ;;No.  Test the 8th bit.
144163 / 254000,,142717          JRST      142717             ;;Off.  Just plain data.
144164 / 661000,,040000           TLO      040000             ;;On.  Flag it as extra special.
144165 / 301400,,000241          CAIL  CHR,000241             ;;Is it a prefix meaning bucky bits?
144166 / 303400,,000243         CAILE  CHR,   243             ;
144167 / 254000,,142717          JRST      142717             ;;No.
152152 / 000006,,000035                                       ;
152152 / 010206,,000035 POINT 2,06000035,34                   ;
144170 / 137400,,152152           DPB  CHR,152152             ;;Save the bucky bits and
144171 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;set the IMLTTY flag for the next char
144172 / 263140,,000000          POPJ    P,                   ;;and get out fast.
                       RECIM1:
152152 / 000006,,000035                                       ;
152152 / 010206,,000035 POINT 2,06000035,34                   ;
144173 / 135500,,152152           LDB UCHN,152152             ;
144174 / 254000,,142717          JRST      RECIM2             ;
                       ;TYPX, COMSET
                       ;ROUTINE TO TYPE X IF LINE CANNOT GET INTO SYSTEM
                       TYPX:
151763 / 000001,,000001                                       ;
144175 / 274140,,151763           SUB    P,151763             ;
144176 / 405400,,000177          ANDI  CHR,   177             ;
144177 / 306400,,000130          CAIN  CHR,000130             ;;CHAR. RECEIVED AN "X"
144200 / 263140,,000000          POPJ    P,                   ;;YES, MAY BE ECHO, DISMISS INT.
144201 / 201400,,000130         MOVEI  CHR,000130             ;
144202 / 254000,,145023          JRST      145023             ;;TYPE OUT "X"
                       ;ROUTINE TO WAKE UP COMMAND DECODER IF TPMON IS SET
                       COMSET:
144203 / 607000,,002000          TLNN      002000             ;;DTACHED GUYS CAN'T SAY ANYTHING!
144204 / 607000,,000400          TLNN      000400             ;;MONITOR MODE?
144205 / 263140,,000000          POPJ    P,                   ;;NO, NOT MONITOR COMMAND
144206 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;;GET SOME GOOD BITS
144207 / 607040,,020000          TLNN  TAC,020000             ;;IF NOT A CONSOLE
144210 / 606040,,600000          TRNN  TAC,600000             ;;AND ASSIGNED BY PROGRAM OR CONSOLE
144211 / 254000,,144213          JRST      144213             ;
144212 / 263140,,000000          POPJ    P,                   ;;THEN HE CAN'T TYPE COMMANDS
144213 / 205000,,000004         MOVSI       IOFST             ;
144214 / 437006,,000002          IORB      DEVIOS(DDB)        ;
144215 / 205040,,400000         MOVSI  TAC,400000             ;;SET SIGN BIT
144216 / 616042,,032347          TDNN  TAC,TTYTAB(LINE)       ;;SKIP IF COMMAND BIT IS ON
144217 / 350000,,026105           AOS      026105             ;;COUNT ANOTHER COMMAND WE HAVE
144220 / 436042,,032347          IORM  TAC,TTYTAB(LINE)       ;;IN TTY TRANSLATOR TABLE
144221 / 260140,,137150         PUSHJ    P,COMBCK             ;
144222 / 260140,,137063         PUSHJ    P,137063             ;;CALL THE DRD
144223 / 263140,,000000          POPJ    P,                   ;
                       ;TTEDIT
                       ;TTY KEYBOARD EDITOR ROUTINE
                       ;UPON RECEIPT OF A CHARACTER, THIS ROUTINE DETERMINES WHAT TO DO
                       ;WITH IT: WHETHER IT'S A SPECIAL CHARACTER NEEDING SPECIAL ECHOING,
                       ;WHETHER SOME OTHER CHARACTER IS TO BE STORED IN ITS PLACE, WHETHER
                       ;IT IS A BREAK CHARACTER (LINE TERMINATOR), OR WHETHER THE CHARACTER
                       ;TYPED IS A SIGNAL TO UNDERTAKE SOME SPECIAL ACTION.
                       ;IN ANY CASE, ALL SPECIAL ACTION, INCLUDING DUPLEXING TAKES PLACE ON
                       ;THE LEVEL OF THIS ROUTINE.
                       ;	THIS ROUTINE CALLS SPCHEK, WHICH MAKES USE OF THE  SPECIAL
                       ;CHARACTER TABLE, SPCTAB. TO MAKE ANY CHANGES IN THE ACTION GENERATED
                       ;BY SPECIFIC CHARACTERS MAKE THE ALTERATIONS REQUIRED BY THE
                       ;COMMENTS DESCRIBING SPCTAB.  NOTE THAT IF A CHARACTER IS TO DISPATCH
                       ;TO A "SPECIAL ACTION ROUTINE" OR A SPECIAL ECHO ROUTINE, THE LEFT
                       ;HALF OF THE CORRESPONDING CHARACTER-WORD MUST HAVE SPACTN
                       ;SET  AND THE ADDRESS OF THE SPECIAL ROUTINE MUST BE
                       ;ASSEMBLED INTO THE RIGHT HALF OF THE WORD.
                       ;CALL	HAVE 7-BIT ASCII CHARACTER IN CHR
                       ;	LDB	HPOS,PHPOS
                       ;	MOVEI	DAT,TTIBUF(DDB)
                       ;	PUSHJ	P,TTEDIT
                       ;	RETURN WITH ACTION DONE, SYNC (LH IOS) SET IF BREAK CHAR. STORED
                       TTEDIT:
144224 / 260140,,140602         PUSHJ    P,140602             ;;ADJUST HP AND CHECK SPECIAL
144225 / 255000,,000000          JFCL                         ;
144226 / 603100,,002000          TLNE LINE,002000             ;;IF AN IMLAC,
154342 / 623000,,040000          TLZE      040000             ;;TEST CONTROL FLAG.
154343 / 254000,,144244          JRST      144244             ;;NO SPECIAL ACTIVATION IF ON.
154344 / 306400,,000177          CAIN  CHR,000177             ;;LEAVE SPACTN FOR RUBOUT.
154345 / 322500,,144230         JUMPE UCHN,144230             ;;EXCEPT WITH BUCKY BITS
154346 / 607040,,040000          TLNN  TAC,040000             ;;PREVENT SPACTN ON ~ AND α
154347 / 607040,,200000          TLNN  TAC,200000             ;;AND ANYTHING ELSE THAT'S NOT
154350 / 621040,,612000           TLZ  TAC,612000             ;;ALWAYS SPECIAL.
154351 / 254000,,144230          JRST      TTEDT2             ;
144227 / 254000,,154342          JRST      154342             ;
                       TTEDT2:
144230 / 603100,,000100          TLNE LINE,000100             ;;SPECIAL ACTIVATION MODE?
144231 / 603000,,000400          TLNE       TPMON             ;
144232 / 254000,,144244          JRST      TTEDT0             ;
144233 / 261140,,000001          PUSH    P,   TAC             ;
144234 / 260140,,141033         PUSHJ    P,SPCACT             ;
144235 / 661000,,020000           TLO        SYNC             ;
144236 / 262140,,000001           POP    P,   TAC             ;
144237 / 607040,,200000          TLNN  TAC,ALLSPA             ;
144240 / 607000,,020000          TLNN        SYNC             ;
144241 / 304000,,000000          CAIA                         ;
144242 / 621040,,400000           TLZ  TAC,400000             ;;INHIBIT ANY SPECIAL ACTION IF A BREAK
144243 / 254000,,144246          JRST      TTEDT1             ;
                       TTEDT0:
144244 / 603040,,024000          TLNE  TAC,024000             ;
144245 / 661000,,020000           TLO      020000             ;;IT'S A BREAK CHAR.
                       TTEDT1:
144246 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;SET SYNC
144247 / 321041,,000000         JUMPL  TAC,      (TAC)        ;;JUMP IF CHARACTER HAS SPECIAL DISPATCH
                       TIPACK:
144250 / 307400,,000172          CAIG  CHR,000172             ;
144251 / 305400,,000141         CAIGE  CHR,000141             ;;LOWER CASE LETTER?
144252 / 254000,,144255          JRST      144255             ;;NO
                       ;TTIPUT, DUPLEX, DUPLX1, INBFUL
                       ;	TLNN IOS,TPMON			;ALWAYS GIVE MONITOR UPPER CASE.
144253 / 607100,,000020          TLNN LINE,000020             ;;YES. IS THIS TTY IN 37 MODE?
144254 / 620400,,000040           TRZ  CHR,000040             ;;NO. MAKE CHAR UPPER CASE
                       TTIPUT:
144255 / 623100,,000040          TLZE LINE,000040             ;;HAVE WE BEEN DELETING?
144256 / 260140,,144545         PUSHJ    P,144545             ;;YES. OUTPUT A BACKSLASH
                       TTIPT1:
152302 / 000000,,000010                                       ;
152302 / 070200,,000010 POINT 2,00000010,28                   ;
144257 / 137500,,152302           DPB UCHN,152302             ;;PUT IN CTRL. BITS.
                       TTPT2:
144260 / 260140,,140614         PUSHJ    P,140614             ;;PUT CHAR IN INPUT BUFFER
144261 / 254000,,144271          JRST      144271             ;;IT DIDNT FIT
144262 / 607040,,002000          TLNN  TAC,002000             ;;SHOULD THIS CHAR BE ECHOED?
                       DUPLEX:
144263 / 603100,,000004          TLNE LINE,000004             ;;IS THIS LINE ECHOING ITSELF?
144264 / 322500,,037403         JUMPE UCHN,037403             ;;DON'T ECHO UNLESS CTRL BITS ON.
                       DUPLX1:
144265 / 607000,,000400          TLNN      000400             ;;SHOULD ECHO IF IN MONITOR MODE
144266 / 606000,,000200          TRNN      000200             ;;AND UNLESS USER SAYS NO, IN USER MODE
144267 / 254000,,144275          JRST      144275             ;;SO ECHO IT.
144270 / 263140,,000000          POPJ    P,                   ;;DONT ECHO IF REQUESTED NOT TO BY USER
                       INBFUL:
144271 / 306400,,000600          CAIN  CHR,000600             ;;CHAR WONT FIT. WAS IT ↑C?
144272 / 254000,,144537          JRST      144537             ;;YES. PANIC OUT OF THIS BIND
144273 / 201400,,000007         MOVEI  CHR,000007             ;;NO. JUST ECHO BELL TO SHOW LOSS
144274 / 254000,,140642          JRST      140642             ;;OUTPUT BELL, IF NOT  DPY.
                       DUPIML:
144275 / 322500,,140642         JUMPE UCHN,140642             ;;IF BUCKY BITS OFF
144276 / 606000,,000400          TRNN      000400             ;;OR NOT TO BE ECHOED
144277 / 607100,,002000          TLNN LINE,002000             ;;OR NOT AN IMLAC,
144300 / 254000,,140642          JRST      140642             ;;JUST ECHO THE CHAR.
144301 / 261140,,000010          PUSH    P,   CHR             ;
144302 / 606500,,000001          TRNN UCHN,000001             ;;<CTL> BIT...
144303 / 254000,,144312          JRST      DUPIM2             ;
144304 / 201400,,000177         MOVEI  CHR,000177             ;;ECHO [BS] [VT].
144305 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144306 / 201400,,000013         MOVEI  CHR,    13             ;
144307 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144310 / 606500,,000002          TRNN UCHN,000002             ;;<META>...
144311 / 254000,,144316          JRST      DUPIM3             ;
                       DUPIM2:
144312 / 201400,,000177         MOVEI  CHR,000177             ;;ECHO [BS] [FF].
144313 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144314 / 201400,,000014         MOVEI  CHR,    14             ;
144315 / 260140,,140642         PUSHJ    P,PUTCHO             ;
                       DUPIM3:
144316 / 262140,,000010           POP    P,000010             ;;NOW ECHO THE CHAR.
144317 / 254000,,140642          JRST      PUTCHO             ;
                       ;CONTC, CONTOB, CONTO, CONTB, ALTMOD, TTYUNH
                       ;CALLED WITH A JUMPL TAC,(TAC), WHERE TAC IS LOADED FROM SPCTAB
                       ;SPECIAL CHARACTER HANDLING ROUTINES
                       CONTC:
144320 / 260140,,144572         PUSHJ    P,144572             ;;SINCE PEOPLE WANT FREE ↑U
144321 / 607100,,420000          TLNN LINE,420000             ;; IF THIS IS A DPY
144322 / 254000,,144325          JRST      144325             ;
144323 / 327500,,144325         JUMPG UCHN,144325             ;;AND IF NO CTRL BITS ARE ON,
144324 / 260140,,144537         PUSHJ    P,144537             ;;PROCESS CONTROL C IMMEDIATELY.
144325 / 200040,,141054          MOVE  TAC,141054             ;;SINCE DELETL CLOBBERS TAC
144326 / 260140,,144260         PUSHJ    P,144260             ;;PLACE IN BUFFER.
144327 / 201400,,000003         MOVEI  CHR,     3             ;
144330 / 260140,,144475         PUSHJ    P,CNTLEC             ;
144331 / 254000,,144465          JRST      CRLFEC             ;
                       CONTZ:
144332 / 260140,,144475         PUSHJ    P,144475             ;;OUTPUT ↑C OR ↑Z
144333 / 260140,,144465         PUSHJ    P,144465             ;;OUTPUT A CRLF
144334 / 201400,,000612         MOVEI  CHR,000612             ;;CHANGE TO INTERNAL CODE.
144335 / 661000,,020000           TLO        SYNC             ;
144336 / 254000,,144260          JRST      144260             ;;ACTIVATE BUT DON'T STORE
                       CONTOB:
144337 / 201400,,000017         MOVEI  CHR,000017             ;;INVENT A ↑O.
                       CONTO:
144340 / 260140,,141013         PUSHJ    P,141013             ;;CLEAR THE OUTPUT BUFFER
144341 / 201000,,001000         MOVEI      001000             ;;SET TO JUNK FURTHER OUTPUT
144342 / 433006,,000002          XORB      DEVIOS(DDB)        ;
144343 / 254000,,144350          JRST      144350             ;;ECHO, ETC.
                       CONTU:
144344 / 603000,,001000          TLNE      001000             ;;IN DDTMODE,
144345 / 254000,,144255          JRST      144255             ;; PASS THIS CHARACTER
144346 / 621100,,000040           TLZ LINE,000040             ;;NO MORE BACKSLASH
144347 / 260140,,144572         PUSHJ    P,144572             ;;↑U DELETES INPUT LINE
                       CONTU1:
144350 / 260140,,144475         PUSHJ    P,144475             ;;ECHO ↑O OR ↑U
144351 / 254000,,144465          JRST      144465             ;;OUTPUT A CRLF AND RETURN WITHOUT
                       ; STORING THE ↑O OR ↑U
                       ALTMOD:
144352 / 541050,,000000          HRRI  TAC,      (CHR)        ;;SAVE WHICH KIND OF ALTMOD
144353 / 607100,,002000          TLNN LINE, IMLIN             ;
144354 / 201400,,000044         MOVEI  CHR,000044             ;;ECHO A $ EXCEPT ON IMLACS.
144355 / 260140,,144407         PUSHJ    P,AOJDPX             ;
144356 / 201401,,000000         MOVEI  CHR,      (TAC)        ;;RESTORE THE CHARACTER
144357 / 254000,,144255          JRST      144255             ;;STORE THE CHARACTER
                       ;FOLLOWING CHANGE BY BO ON RPH'S ADVICE
                       ;CONTF:	TLCA	LINE,FCS		;COMPLEMENT FCS ON ↑F
                       ;CONTB:	TLC	LINE,FULTWX		;COMPLEMENT FULTWX ON ↑B
                       ;	POPJ	P,0			;AND RETURN WITHOUT STORING THESE
                       CONTB1:
144360 / 645100,,000004          TLCA LINE,FULTWX             ;
                       CONTF:
144361 / 641100,,000020           TLC LINE,   FCS             ;
144362 / 263140,,000000          POPJ    P,                   ;
                       CONTB:
144363 / 603100,,424000          TLNE LINE,424000             ;
144364 / 254000,,144360          JRST      CONTB1             ;
144365 / 603100,,000001          TLNE LINE,000001             ;;DON'T ALLOW HOLDING IF TALKING.
144366 / 263140,,000000          POPJ    P,                   ;;TALKING
                       TTYUNH:
144367 / 643000,,100000          TLCE      100000             ;;Toggle the hold flag.
144370 / 621000,,010000           TLZ      010000             ;;If it was on, turn off TOIP.  The
144371 / 202006,,000002         MOVEM      DEVIOS(DDB)        ;;STO IOS BACK
144372 / 263140,,000000          POPJ    P,                   ;;next call to TYPTST will restart
                       ;the output.
                       ;END BO
                       ;RUBOUT, AOJDPX, CONTK, CONTL
                       RUBOU4:
144373 / 205000,,020000         MOVSI      020000             ;;IF PAPER TAPE, NO BREAK
144374 / 254000,,142230          JRST      142230             ;;OR STORE. RETURN.
                       RUBOUT:
                       RUBOU3:
144375 / 603000,,000400          TLNE      000400             ;;IN MONITOR MODE, NOT A BREAK CHAR
144376 / 254000,,144401          JRST      RUBOU2             ;
152072 / 001000,,000100           XWD DDTM,BKSP               ;
144377 / 612000,,152072          TDNE      152072             ;
144400 / 254000,,144257          JRST      144257             ;;STORE RUBOUT IF DDT OR FCS
                       RUBOU2:
144401 / 260140,,144373         PUSHJ    P,144373             ;;NOT A BREAK AFTER ALL
144402 / 135405,,000001           LDB  CHR,  PUTR(DAT)        ;;GET LAST CHAR IN
144403 / 260140,,144551         PUSHJ    P,144551             ;;BACK UP TIPUTR
144404 / 254000,,144410          JRST      144410             ;;IT'S EMPTY ALREADY
144405 / 667100,,000040          TLON LINE,000040             ;;MARK IN RUBOUT SEQUENCE
144406 / 260140,,144545         PUSHJ    P,144545             ;;AND OUTPUT BACKSLASH IF FIRST
                       AOJDPX:
144407 / 344200,,144265          AOJA HPOS,144265             ;;OUTPUT AND COUNT HPOS
                       RUBOU1:
144410 / 623100,,000040          TLZE LINE,000040             ;;END OF INPUT STREAM REACHED
144411 / 260140,,144545         PUSHJ    P,144545             ;;OUTPUT A BACKSLASH
144412 / 254000,,144465          JRST      144465             ;;AND A CR LF
                       CONTK:
144413 / 541040,,000004          HRRI  TAC,000004             ;;HERE ON V TAB
144414 / 334000,,000000         SKIPA                         ;
                       CONTL:
144415 / 541040,,000010          HRRI  TAC,000010             ;;HERE ON FORMFEED
144416 / 607100,,004000          TLNN LINE,004000             ;;THIS TTY HAVE VERT MECHANICS?
144417 / 254000,,144426          JRST      144426             ;;NO. SIMULATE IT
                       ; FOR SOME REASON THE FOLLOWING INSTRUCTION WAS A PUSHJ P,TTIPUT, WHICH
                       ; CAUSED PTYS TO GET  10 26'S (⊗) UPON TYPING ↑L. - JAM (5-21-72)
144420 / 254000,,144255          JRST      144255             ;;PUT CHAR IN BUFFER AND ECHO IT
                       CONTI1:
144421 / 201400,,000001         MOVEI  CHR,000001             ;;SYNCHRONOUS IDLE CHARACTERS
                       SIMFF1:
144422 / 260140,,144265         PUSHJ    P,144265             ;;OUTPUT ECHO OF LF OR IDL
144423 / 602040,,000017          TRNE  TAC,000017             ;;DONE YET?
144424 / 364040,,144422          SOJA  TAC,144422             ;;NO. OUTPUT MORE
144425 / 263140,,000000          POPJ    P,                   ;;DONE
                       ;CONTI, CONTP
                       SIMFF:
144426 / 661040,,002000           TLO  TAC,002000             ;;DON'T OUTPUT FF OR VT TO A 33
144427 / 260140,,144255         PUSHJ    P,144255             ;;PUT IT IN BUFFER
144430 / 201400,,000012         MOVEI  CHR,000012             ;;SIMULATE WITH LF'S
144431 / 254000,,144422          JRST      SIMFF1             ;
                       CONTI:
144432 / 603100,,426000          TLNE LINE,426000             ;
144433 / 254000,,144255          JRST      144255             ;;ECHO AND RETURN FOR DISPLAYS
144434 / 135200,,136446           LDB HPOS, PHPOS             ;
144435 / 405200,,000007          ANDI HPOS,     7             ;
144436 / 302200,,000007          CAIE HPOS,000007             ;;IF ONLY 1, WE WILL CONVERT TO SPACE
144437 / 603100,,000010          TLNE LINE,000010             ;;FORCING TAB EXPANSION?
144440 / 661040,,002000           TLO  TAC,002000             ;;YES. DON'T OUTPUT TAB TO 33
144441 / 260140,,144255         PUSHJ    P,144255             ;;PUT IN BUFFER AND MAYBE ECHO
144442 / 603100,,000010          TLNE LINE,000010             ;;EXPANDING TABS?
144443 / 254000,,144450          JRST      144450             ;;YES
144444 / 135400,,136446           LDB  CHR,136446             ;;WHERE WAS TTY BEFORE TAB
144445 / 405400,,000007          ANDI  CHR,000007             ;;JUST LOW PART FOR INDEX
144446 / 201040,,000001         MOVEI  TAC,000001             ;;ASSUME 1
154452 / 344040,,144421          AOJA  TAC,144421             ;;8 SPACES-2 IDLES
154453 / 254000,,144421          JRST      144421             ;;7 SPACES-1 IDLE
154454 / 254000,,144421          JRST      144421             ;;6 SPACES-1 IDLE
154455 / 254000,,144421          JRST      144421             ;;5 SPACES-1 IDLE
154456 / 254000,,144421          JRST      144421             ;;4 SPACES-1 IDLE
154457 / 263140,,000000          POPJ    P,                   ;;3 SPACES-0 IDLES
154460 / 263140,,000000          POPJ    P,                   ;;2 SPACES-0 IDLES
154461 / 255000,,000000          JFCL                         ;
144447 / 256010,,154452           XCT      154452(CHR)        ;;1 SPACE -CONVERT TO SPACE (OR CTY WILL MISS TAB STOP)
                       CONTI2:
144450 / 201400,,000040         MOVEI  CHR,000040             ;;SPACES FOR THE 33'S
144451 / 135200,,136446           LDB HPOS,136446             ;;WHERE WAS I BEFORE TAB?
144452 / 260140,,144407         PUSHJ    P,144407             ;;OUTPUT A SPACE
144453 / 602200,,000007          TRNE HPOS,000007             ;;AT A TAB STOP?
144454 / 254000,,144452          JRST      144452             ;;NO. MORE SPACES.
144455 / 263140,,000000          POPJ    P,                   ;;RETURN FROM TTEDIT
                       CONTP:
144456 / 200042,,136457          MOVE  TAC,LINBIT(LINE)       ;;GET HIS INITIAL LINE BITS
144457 / 603040,,000010          TLNE  TAC,000010             ;;CAN ONLY TOGGLE IF HE HAS HARDWARE TABS!!!
144460 / 254000,,144463          JRST      144463             ;;NO CAN DO
144461 / 641100,,000010           TLC LINE,000010             ;;INVERT STATE OF TABS!
144462 / 263140,,000000          POPJ    P,                   ;
                       NCONTP:
144463 / 400040,,000000          SETZ  TAC,                   ;;MAKE SURE IT ECHOS!
144464 / 254000,,144255          JRST      144255             ;;AND BACK TO THE MAIN STREAM
                       ;CRLFEC, CRLF
                       CRLFEC:
144465 / 201200,,000000         MOVEI HPOS,                   ;;ECHO A CR LF, SAVING CHR
144466 / 261140,,000010          PUSH    P,   CHR             ;
144467 / 201400,,000015         MOVEI  CHR,000015             ;;CARRIAGE RETURN
144470 / 260140,,144265         PUSHJ    P,144265             ;;OUTPUT IT
144471 / 201400,,000012         MOVEI  CHR,000012             ;;LINE FEED
144472 / 260140,,144265         PUSHJ    P,144265             ;;OUTPUT THAT TOO
                       CHPOPJ:
144473 / 262140,,000010           POP    P,000010             ;;RESTORE CHR
144474 / 263140,,000000          POPJ    P,                   ;
                       CNTLEC:
144475 / 541050,,000100          HRRI  TAC,   100(CHR)        ;;SAVE UN-CNTL CHARACTER
144476 / 201400,,000136         MOVEI  CHR,000136             ;
144477 / 260140,,144407         PUSHJ    P,AOJDPX             ;
144500 / 201401,,000000         MOVEI  CHR,      (TAC)        ;;TYPE ↑ CHAR
144501 / 260140,,144407         PUSHJ    P,AOJDPX             ;
144502 / 620400,,000100           TRZ  CHR,000100             ;;RESTORE IT TO A CNTL CHAR
144503 / 263140,,000000          POPJ    P,                   ;
                       CRLF:
144504 / 201200,,000000         MOVEI HPOS,                   ;;HERE ON INPUT OF A CARRIAGE RETURN
144505 / 603100,,004000          TLNE LINE,004000             ;; IS THIS A PTY
144506 / 254000,,144511          JRST      144511             ;; YES, TEST XON ALWAYS
144507 / 603000,,000400          TLNE      000400             ;; ALWAYS GIVE LF AFTER CR IN MON. MODE
144510 / 254000,,144513          JRST      CRLFMM             ;
                       CRLFIP:
144511 / 603100,,000002          TLNE LINE,000002             ;;IF PAPER TAPE, NO FREE LF
144512 / 254000,,144255          JRST      144255             ;;JUST STORE THE CR
                       CRLFMM:
144513 / 260140,,144255         PUSHJ    P,144255             ;;ORDINARILY, STORE AND GO ON HERE
144514 / 201400,,000012         MOVEI  CHR,000012             ;;BY ADDING A LF
144515 / 205000,,020000         MOVSI      020000             ;;WHICH IS AN ACTIVATOR
144516 / 437006,,000002          IORB      DEVIOS(DDB)        ;
144517 / 607100,,000004          TLNN LINE,000004             ;;IF NOT SELF ECHOING,
144520 / 254000,,144255          JRST      144255             ;;THIS WILL GIVE LF ECHO
144521 / 260140,,144255         PUSHJ    P,144255             ;;OTHERWISE, THIS WONT
144522 / 254000,,144265          JRST      144265             ;;BUT THIS WILL
                       ;CNCTST, CNCMOD
                       CNCTST:
144523 / 603100,,002000          TLNE LINE, IMLIN             ;
144524 / 623000,,040000          TLZE      040000             ;;Char code 3 from an IMLAC needs
144525 / 304000,,000000          CAIA                         ;
144526 / 263140,,000000          POPJ    P,                   ;;IMLTTY on to be a ↑C.
144527 / 201400,,000600         MOVEI  CHR,000600             ;;INVENT INTERNAL CODE FOR ↑C.
144530 / 135040,,037575           LDB  TAC, PJOBN             ;
144531 / 200041,,026114          MOVE  TAC,JBTSTS(TAC)        ;
144532 / 603040,,100000          TLNE  TAC,100000             ;;REG 11/26/73 NO REASON TO LET PTYS THROUGH
144533 / 201400,,000033         MOVEI  CHR,000033             ;;SEND ALTMODE INSTEAD
                       ;	TLNN	TAC,JACCT
                       ;	JRST	CNCTSA
                       ;	TLNE	LINE,PTYLIN		;DON'T HOLD UP PTY'S
                       ;	CAIA
                       ;	MOVEI	CHR,33
                       ;CNCTSA:
144534 / 135046,,000017           LDB  TAC,TIPUTR(DDB)        ;
144535 / 302040,,000600          CAIE  TAC,   600             ;
144536 / 263140,,000000          POPJ    P,                   ;
                       CNCTS1:
144537 / 260140,,140775         PUSHJ    P,140775             ;;CLEAR INPUT BUFFER.
                       CNCMOD:
152107 / 001120,,403000           XWD DDTM!IO!USRB,IOSUPR!MERTPO!MERTP1 ;
144540 / 200000,,152107          MOVE      152107             ;
144541 / 412006,,000002        ANDCAM      DEVIOS(DDB)        ;
144542 / 205000,,000404         MOVSI      000404             ;
144543 / 437006,,000002          IORB      DEVIOS(DDB)        ;
144544 / 263140,,000000          POPJ    P,                   ;
                       ;BSECHO, DCPUTR, DELETL
                       ;ROUTINE TO ECHO BACK-SLASH
                       BSECHO:
144545 / 261140,,000010          PUSH    P,000010             ;;*
144546 / 201400,,000134         MOVEI  CHR,000134             ;
144547 / 260140,,144407         PUSHJ    P,AOJDPX             ;
144550 / 254000,,144473          JRST      CHPOPJ             ;
                       ;ROUTINE TO DECREMENT PUTR
                       DCPUTR:
144551 / 135040,,136452           LDB  TAC,136452             ;; CHECK FOR NONE TO DELETE
144552 / 316045,,000002          CAMN  TAC,  PCTR(DAT)        ;
144553 / 263140,,000000          POPJ    P,                   ;
144554 / 205040,,110000         MOVSI  TAC,110000             ;
144555 / 270045,,000001           ADD  TAC,  PUTR(DAT)        ;;*
144556 / 603040,,400000          TLNE  TAC,400000             ;
153122 / 337777,,777777           XWD 337777,-1               ;
144557 / 270040,,153122           ADD  TAC,153122             ;
144560 / 202045,,000001         MOVEM  TAC,  PUTR(DAT)        ;
144561 / 350005,,000005           AOS        FCTR(DAT)        ;
144562 / 350045,,000002           AOS  TAC,  PCTR(DAT)        ;
144563 / 307040,,000140          CAIG  TAC,000140             ;;*
144564 / 254000,,037401          JRST      037401             ;;*
144565 / 275040,,000140          SUBI  TAC,000140             ;;*
144566 / 202045,,000002         MOVEM  TAC,  PCTR(DAT)        ;
144567 / 201040,,000030         MOVEI  TAC,STTIBF             ;
144570 / 272045,,000001          ADDM  TAC,  PUTR(DAT)        ;;*
144571 / 254000,,037401          JRST      CPOPJ1             ;
                       ;ROUTINE TO DELETE CURRENT LINE (↑U)
                       DELETL:
144572 / 135040,,136452           LDB  TAC,136452             ;;WHERE WAS LAST BREAK?
144573 / 202046,,000020         MOVEM  TAC,TIPCTR(DDB)        ;;STORE COUNT
144574 / 260140,,137602         PUSHJ    P,137602             ;;CONVERT TO A BYTE POINTER
144575 / 202046,,000017         MOVEM  TAC,TIPUTR(DDB)        ;;SAVE POINTER
144576 / 254000,,137552          JRST      137552             ;;GO COMPUTE TIFCTR
                       ;DOTALK, NOTALK
                       DOTALK:
144577 / 405400,,000177          ANDI  CHR,   177             ;
144600 / 336302,,032347         SKIPN  DDB,TTYTAB(LINE)       ;
144601 / 263140,,000000          POPJ    P,                   ;
                       ;FTTKBG
                       DOTALY:
144602 / 302400,,000000          CAIE  CHR,                   ;
144603 / 306400,,000003          CAIN  CHR,     3             ;
144604 / 254000,,144644          JRST      NOTALK             ;
144605 / 200602,,017717          MOVE  UUO,LINTAB(LINE)       ;;SAVE TALKER'S XON BIT
144606 / 621100,,777777           TLZ LINE,777777             ;;NO BITS PLEASE
144607 / 261140,,000002          PUSH    P,  LINE             ;
                       DOTAL1:
144610 / 135100,,136447           LDB LINE, PTALK             ;
144611 / 550302,,032347          HRRZ  DDB,TTYTAB(LINE)       ;
144612 / 316103,,000000          CAMN LINE,      (P)          ;;BACK TO OURSELVES YET?
144613 / 254000,,144631          JRST      144631             ;;YES, WE ARE SPECIAL
144614 / 322300,,144610         JUMPE  DDB,144610             ;;SKIP GUYS WITHOUT DDBS
144615 / 261140,,000010          PUSH    P,   CHR             ;
144616 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144617 / 200403,,000000          MOVE  CHR,      (P)          ;;GET CHAR
144620 / 607600,,000002          TLNN  UUO,000002             ;;IF TALKER HAS XON OR
144621 / 302400,,000015          CAIE  CHR,000015             ;;IF NOT CR,
144622 / 254000,,144625          JRST      144625             ;;THEN NO LF
144623 / 201400,,000012         MOVEI  CHR,    12             ;
144624 / 260140,,140642         PUSHJ    P,140642             ;;YES, SEND IT
                       DOTAL3:
144625 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
144626 / 260140,,143016         PUSHJ    P,TYPTST             ;
144627 / 262140,,000010           POP    P,   CHR             ;
144630 / 254000,,144610          JRST      DOTAL1             ;
                       DOTAL2:
144631 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;;GET OUR CHARACTERISTICS
144632 / 202403,,000000         MOVEM  CHR,      (P)          ;;REPLACE SAVED LINE WITH CHR
144633 / 607100,,000004          TLNN LINE,FULTWX             ;
144634 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144635 / 262140,,000010           POP    P,   CHR             ;
144636 / 306400,,000015          CAIN  CHR,000015             ;;NEED LF?
144637 / 603100,,000002          TLNE LINE,000002             ;;MAYBE
144640 / 254000,,143016          JRST      143016             ;;NO
144641 / 201400,,000012         MOVEI  CHR,    12             ;
144642 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144643 / 254000,,143016          JRST      TYPTST             ;
                       ;IF I TYPE A ↑C IN TALK RING, THEN
                       ;ASSUME NEXT←ME←PREV
                       ;SET NEXT←PREV
                       ;IF NEXT=PREV, CLEAR ITS TLKRNG BIT
                       ;SET ME←ME
                       ;CLEAR TLKRNG BIT IN LINTAB(ME)
                       NOTALK:
144644 / 201202,,000000         MOVEI HPOS,      (LINE)       ;;ME
144645 / 603100,,200000          TLNE LINE,200000             ;;CTY?
144646 / 254000,,144714          JRST      144714             ;;YES, CLEAR EVERYONE IN THIS RING
144647 / 135400,,136447           LDB  CHR,136447             ;;NEXT
                       NOTAL1:
144650 / 135600,,136447           LDB  UUO, PTALK             ;
144651 / 316600,,000004          CAMN  UUO,000004             ;;ME←?
144652 / 254000,,144655          JRST      144655             ;;YES. LINE=PREV
144653 / 200100,,000014          MOVE LINE,000014             ;;NO. FIND PREV
144654 / 254000,,144650          JRST      NOTAL1             ;
                       NOTAL2:
144655 / 137400,,136447           DPB  CHR,136447             ;;MAKE NEXT←PREV
144656 / 302404,,000000          CAIE  CHR,      (HPOS)       ;;NO ↑←N BREAKING SOLITAIRE TALK
144657 / 302402,,000000          CAIE  CHR,      (LINE)       ;;RING NOW EMPTY?
144660 / 254000,,144702          JRST      144702             ;;NO
                       NOTLKA:
144661 / 205400,,000001         MOVSI  CHR,000001             ;;YES. CLR HIS BIT
144662 / 412402,,017717        ANDCAM  CHR,LINTAB(LINE)       ;
144663 / 200302,,032347          MOVE  DDB,TTYTAB(LINE)       ;;AND TELL HIM ABOUT IT BY GOLLY!!!
144664 / 261140,,000004          PUSH    P,  HPOS             ;
                       ;;FOR X ε {↑←N}	{
                       ;;	MOVEI	CHR,"X"
                       ;;	PUSHJ	P,PUTCHO
                       ;;}					;USING ANSI STANDARD TEXT 87
144665 / 201400,,000136         MOVEI  CHR,000136             ;
144666 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144667 / 201400,,000137         MOVEI  CHR,000137             ;
144670 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144671 / 201400,,000116         MOVEI  CHR,000116             ;
144672 / 260140,,140642         PUSHJ    P,PUTCHO             ;
144673 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
144674 / 260140,,143016         PUSHJ    P,TYPTST             ;
144675 / 262140,,000004           POP    P,  HPOS             ;
144676 / 200304,,032347          MOVE  DDB,TTYTAB(HPOS)       ;;RESTORE DDB
144677 / 200100,,000014          MOVE LINE,   UUO             ;
144700 / 302104,,000000          CAIE LINE,      (HPOS)       ;;IN WHICH CASE IT HAS NEXT IN RING
144701 / 254000,,144717          JRST      144717             ;;WHICH MAY BE ME ANYWAY
                       NOTAL3:
144702 / 205400,,000001         MOVSI  CHR,TLKRNG             ;
144703 / 200100,,000004          MOVE LINE,000004             ;;ME
144704 / 137200,,136447           DPB HPOS,136447             ;;ME←ME
144705 / 412402,,017717        ANDCAM  CHR,LINTAB(LINE)       ;;CLR MY BIT
144706 / 201400,,000600         MOVEI  CHR,000600             ;;GET A ↑C AGAIN
144707 / 137406,,000017           DPB  CHR,TIPUTR(DDB)        ;;LOOK LIKE 2 OF THEM
144710 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;;GET GOOD BITS!
144711 / 607100,,420000          TLNN LINE,420000             ;;FOR THESE GUYS, LEAVE IT ⊗00
144712 / 201400,,000003         MOVEI  CHR,000003             ;;EVERYBODY ELSE GETS THIS
144713 / 254000,,142652          JRST      142652             ;;AND PROCESS IT FROM THE TOP
                       NOTLKB:
144714 / 135100,,136447           LDB LINE,136447             ;;CTY: GET NEXT GUY
144715 / 306104,,000000          CAIN LINE,      (HPOS)       ;;IF ONLY ME,
144716 / 254000,,144702          JRST      144702             ;;  JUST CLEAR ME QUIETLY
                       NOTLKC:
144717 / 135600,,136447           LDB  UUO,136447             ;;SAVE HIS NEXT
144720 / 137100,,136447           DPB LINE,136447             ;;CLEAR HIM OUT
144721 / 254000,,144661          JRST      144661             ;;AND TELL HIM
                       ;FTTKBG
                       ;XMTINT, XMTIN1, DPYSTR, DPYDON
                       ;COMMON TRANSMITTER INTERRUPT FOR SCANNER AND CTY(TTY)
                       XMTINT:
144722 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;; GET LINE CHAR.
144723 / 336302,,032347         SKIPN  DDB,TTYTAB(LINE)       ;;GET DDB ADDRESS
144724 / 263140,,000000          POPJ    P,                   ;;IF NONE, X BEING TYPED
144725 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET IO STATUS
                       XMTIN1:
144726 / 135240,,037610           LDB  DAT,037610             ;;RESET HUNG COUNT
144727 / 137240,,037611           DPB  DAT,PDVCNT             ;
144730 / 201246,,000025         MOVEI  DAT,TTOBUF(DDB)        ;;GET PTR. FOR OUTPUT BUFFER.
144731 / 603100,,420000          TLNE LINE,420000             ;
144732 / 254000,,144744          JRST      144744             ;; IF A DISPLAY, GO TO OUR OWN STARTUP ROUTINE
                       XMTI1A:
144733 / 700600,,001004          CONO   PI,001004             ;;KEEP TOIP AND PUTR/TAKR EQUAL
144734 / 200045,,000003          MOVE  TAC,  TAKR(DAT)        ;;IS OUTPUT BUFFER EMPTY?
144735 / 312045,,000001          CAME  TAC,  PUTR(DAT)        ;;(I.E.,HAS TAKR CAUGHT UP WITH PUTR?)
144736 / 254000,,144773          JRST      144773             ;;NO, TYPING STILL IN PROGRESS
144737 / 602000,,002000          TRNE      002000             ;;MONITOR ERROR MESSAGE?
144740 / 302246,,000025          CAIE  DAT,TTOBUF(DDB)        ;;OUTPUT BUFFER?
144741 / 254000,,144756          JRST      144756             ;;NO, MUST REALLY BE DONE
144742 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;;YES, NOW EMPTY OUT TTI BUFFER
144743 / 254000,,144733          JRST      XMTI1A             ;
                       DPYSTR:
                       ;;INITIATE TYPEOUT ON A DISPLAY CONSOLE.
144744 / 505240,,132317          HRLI  DAT,132317             ;;MAKE INTO CLOCK REQUEST ON DPYTYP(IN DPYSER),
144745 / 541242,,000000          HRRI  DAT,      (LINE)       ;;PASS HIM THE LINE NUMBER
144746 / 254000,,132555          JRST      132555             ;;AND ENTER IN DPY CLOCK QUEUE.
                       DPYDON:
144747 / 200011,,000002          MOVE      DEVIOS(DSER)       ;;HERE FROM DPYTYP (IN DPYSER) WHEN OUTPUT BUFFER EMPTY.
144750 / 550300,,000011          HRRZ  DDB,000011             ;; DPYSER SAVES DDB ADDRESS IN DSER
144751 / 260140,,140030         PUSHJ    P,140030             ;;SET UP AC LINE.
144752 / 606000,,002000          TRNN      002000             ;;ERROR MESSAGE TYPEOUT ?
144753 / 254000,,144756          JRST      144756             ;; NO, GO FINISH UP
144754 / 306445,,777753          CAIN DSER,777753(DAT)        ;;YES. MUST WE STILL TYPE OUT THE INPUT BUFFER ?
144755 / 254000,,132314          JRST      132314             ;;YES. GO TYPE REST OF ERROR MESSAGE FROM INPUT BUFFER.
                       ;; FALL INTO XMTIN4.
                       ;XMTIN4, XMTIN2, LINDON, TTYPE
                       ;HERE WHEN OUTPUT BUFFER(S) EMPTIED.
                       XMTIN4:
152151 / 010000,,402000           XWD TOIP,MERTPO!MERTP1      ;
144756 / 200000,,152151          MOVE      152151             ;
144757 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
144760 / 700600,,002004          CONO   PI, SCNON             ;
144761 / 201400,,000000         MOVEI  CHR,                   ;
144762 / 135200,,037575           LDB HPOS,037575             ;;JOB NUMBER DDB IS ATTACHED TO
144763 / 607000,,000020          TLNN          IO             ;
144764 / 254000,,145010          JRST      LINDON             ;
144765 / 205000,,000020         MOVSI          IO             ;
144766 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
144767 / 603100,,000001          TLNE LINE,000001             ;;KEEP DDB IF TALKING .
144770 / 254000,,145010          JRST      145010             ;;YES
144771 / 326200,,145010         JUMPN HPOS,145010             ;;LINE DONE IF DDB IS A JOB.
144772 / 254000,,140274          JRST      140274             ;;KILL TTY DDB
                       XMTIN2:
144773 / 700600,,002004          CONO   PI, SCNON             ;
144774 / 603000,,100000          TLNE      100000             ;;IF HOLDING OUTPUT, RETURN.
144775 / 263140,,000000          POPJ    P,                   ;
144776 / 260140,,140755         PUSHJ    P,140755             ;;NO, GET NEXT CHAR. IN BUFFER
144777 / 322400,,144726         JUMPE  CHR,144726             ;;IGNORE NULLS
145000 / 321000,,145020         JUMPL      145020             ;;KEEP TYPING IF INPUT I/O WAIT
145001 / 606000,,010000          TRNN      010000             ;;ARE WE IN I/O WAIT?
145002 / 254000,,145020          JRST      145020             ;;NOT IN IO WAIT
145003 / 135200,,136445           LDB HPOS,136445             ;;YES, CHECK TO FIT INTO TTO BUFFER 
145004 / 301200,,000120          CAIL HPOS,000120             ;;ENOUGH ROOM TO ADD 8?
145005 / 201200,,000120         MOVEI HPOS,000120             ;;MAKE LINE BE NEARLY OUT
145006 / 311205,,000005          CAML HPOS,  FCTR(DAT)        ;;IS THERE ROOM ENOUGH NOW?
145007 / 254000,,145020          JRST      145020             ;;NO, KEEP TYPING
                       LINDON:
145010 / 603000,,000001          TLNE      000001             ;;IN IO WAIT?
145011 / 603000,,400000          TLNE      400000             ;;YES, TTY INPUT WAIT?
145012 / 254000,,145020          JRST      145020             ;;NO, GO TTYPE CHAR.
145013 / 261140,,000002          PUSH    P,000002             ;;SAVE LINE
145014 / 260140,,046107         PUSHJ    P,046107             ;;YES, SET IO DONE (OUT OF WSYNC)
145015 / 262140,,000002           POP    P,000002             ;;RESTORE LINE
151767 / 000001,,010000           XWD IOW,IOACT               ;
145016 / 200000,,151767          MOVE      151767             ;;INDICATE NO IO ACTIVE OR WAIT
145017 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
                       TTYPE:
145020 / 607100,,004000          TLNN LINE,004000             ;;DON'T TYPE IF THIS IS A PSEUDO-TTY.
145021 / 326400,,145023         JUMPN  CHR,145023             ;;IS TYPING STILL TO BE IN PROGRESS?
145022 / 263140,,000000          POPJ    P,                   ;;NO.
                       ;TYP, TYPL, CTYP
                       ;ROUTINE TO TYPE CHAR
                       ;CALL	MOVE LINE,LINE NO.
                       ;	MOVE CHR,CHARACTER
                       ;	PUSHJ P,TYP
                       TYP:
                       TYPL:
145023 / 603100,,420000          TLNE LINE,420000             ;
145024 / 263140,,000000          POPJ    P,                   ;;DON'T DO THIS ON DPYS (MAINLY TYPX)
145025 / 200040,,000010          MOVE  TAC,000010             ;;GENERATE PARITY BIT IN CASE THIS IS A
                       ;MODEL 37
145026 / 221040,,200401         IMULI  TAC,200401             ;;FORM 3 COPIES OF 8 BIT CHAS.
                       ;ASSUME PARITY BIT IS 0
152010 / 000011,,111111                                       ;
145027 / 404040,,152010           AND  TAC,152010             ;;FORM 8 COPIES OF ORIGINAL BITS
152010 / 000011,,111111                                       ;
145030 / 220040,,152010          IMUL  TAC,152010             ;;ADD 8 BITS TOGETHER
145031 / 603040,,000010          TLNE  TAC,000010             ;;TEST PARITY OF SUM
145032 / 660400,,000200           TRO  CHR,000200             ;;PARITY IS ODD, MAKE IT EVEN
145033 / 607100,,200000          TLNN LINE,200000             ;;NO,CONSOLE TTY?
145034 / 254000,,142445          JRST      142445             ;;TYPE CHAR.
                       CTYP:
145035 / 712140,,000010         DATAO  TTY,   CHR             ;
145036 / 137400,,136450           DPB  CHR,PLASTC             ;
145037 / 263140,,000000          POPJ    P,                   ;
                       ;PTYGET, PTOCK, PTICHK, PTYCLR
                       PTYGET:
                       ;CREATE A PTY LINE NO.
145040 / 332000,,017714         SKIPE      017714             ;;NO PTY'S UNDER TTYLOK
145041 / 263140,,000000          POPJ    P,                   ;
145042 / 205100,,777754         MOVSI LINE,777754             ;;HOW MANY ARE AVAIABLE ?
145043 / 205040,,004000         MOVSI  TAC,PTYLIN             ;
145044 / 612042,,020040          TDNE  TAC,020040(LINE)       ;
145045 / 253100,,145044         AOBJN LINE,145044             ;
145046 / 327100,,037403         JUMPG LINE, CPOPJ             ;
145047 / 271100,,000121          ADDI LINE, PTYL0             ;
145050 / 260140,,140123         PUSHJ    P,140123             ;;GET A DDB
145051 / 263140,,000000          POPJ    P,                   ;;NONE AVAILABLE
145052 / 505100,,004222          HRLI LINE,004222             ;;DON'T EXPAND TABS OR INVENT LF'S (XON).
                       ;ALSO FULL CHARACTER SET MODE
145053 / 202102,,017717         MOVEM LINE,LINTAB(LINE)       ;
145054 / 202202,,017743         MOVEM ITEM,017743(LINE)       ;;RECORD WHICH JOB OWNS THIS PTY.
152567 / 202114,,000000         MOVEM LINE,      (UUO)        ;
145055 / 256040,,152567          XCTR   XW,152567             ;;RETURN PTY LINE NO. TO LOSER.
145056 / 254000,,037401          JRST      037401             ;;GIVE SKIP RETURN
                       PTOCK:
                       ;COME HERE WHEN A PTY OUTPUTS ANYTHING, TO WAKE UP JOBS WAITING FOR IT.
145057 / 200646,,000030          MOVE  AC1,TOTAKR(DDB)        ;
145060 / 312646,,000026          CAME  AC1,TOPUTR(DDB)        ;;IS THERE REALLY ANYTHING IN PTY'S OUTPUT BUF ?
145061 / 607100,,000200          TLNN LINE,000200             ;;IS PTY STILL IN USE ?
145062 / 254000,,141012          JRST      141012             ;;NO. FLUSH THE OUTPUT BUFFER.
145063 / 333046,,000033        SKIPLE  TAC,PTYPTR(DDB)        ;;IS SOMEONE WAITING FOR OUR OUTPUT ?
145064 / 254000,,145076          JRST      PTCHK2             ;
145065 / 261140,,000004          PUSH    P,     J             ;
145066 / 200202,,017743          MOVE    J,017743(LINE)       ;
145067 / 205640,,001000         MOVSI  AC1,001000             ;; GIVE PTY OUTPUT INTERRUPT
145070 / 612644,,033665          TDNE  AC1,JBTIEN(J)          ;
145071 / 260140,,143061         PUSHJ    P, TTINT             ;
145072 / 262140,,000004           POP    P,     J             ;
145073 / 263140,,000000          POPJ    P,                   ;
                       PTICHK:
145074 / 331046,,000033         SKIPL  TAC,PTYPTR(DDB)        ;
145075 / 263140,,000000          POPJ    P,                   ;
                       PTCHK2:
145076 / 402006,,000033         SETZM      PTYPTR(DDB)        ;
145077 / 250040,,000006          EXCH  TAC,   DDB             ;
145100 / 260140,,046107         PUSHJ    P,SETIOD             ;
145101 / 205640,,400001         MOVSI  AC1,400001             ;
145102 / 412646,,000002        ANDCAM  AC1,DEVIOS(DDB)        ;
145103 / 250040,,000006          EXCH  TAC,   DDB             ;
145104 / 260140,,140030         PUSHJ    P,STLNAC             ;
145105 / 135200,,037575           LDB    J,037575             ;;SETIOD HAS CLOBBERED THIS, AND APRSER MAY CARE
145106 / 263140,,000000          POPJ    P,                   ;
                       PTYCLR:
145107 / 570104,,027320          HRRE LINE,JBTLIN(ITEM)       ;
145110 / 321100,,145125         JUMPL LINE,PTYCL2             ;
145111 / 205040,,040102         MOVSI  TAC,040102             ;
145112 / 500102,,017717           HLL LINE,LINTAB(LINE)       ;; GET LINE BITS BACK
145113 / 603100,,004000          TLNE LINE,004000             ;; IST DAS EINE PTY?
145114 / 621040,,000002           TLZ  TAC,000002             ;; YES, GIVE HIM BACK HIS LFS
145115 / 412042,,017717        ANDCAM  TAC,LINTAB(LINE)       ;
145116 / 412044,,027320        ANDCAM  TAC,JBTLIN(ITEM)       ;
145117 / 260140,,140002         PUSHJ    P,140002             ;;FIND HIS TTY DDB
145120 / 205040,,140216         MOVSI  TAC,140216             ;;AND SET HIS BREAK TABLE TO STANDARD.
145121 / 541046,,000011          HRRI  TAC,ACTBTS(DDB)        ;
145122 / 251046,,000014           BLT  TAC,ACTMOD(DDB)        ;
145123 / 201040,,000600         MOVEI  TAC,000600             ;
145124 / 412046,,000002        ANDCAM  TAC,DEVIOS(DDB)        ;;TURN ECHOING BACK ON!
                       PTYCL2:
145125 / 201100,,000121         MOVEI LINE,000121             ;;PREPARE TO SEARCH ALL PTY'S.
                       PTYCL1:
145126 / 301100,,000145          CAIL LINE,000145             ;;DONE ?
145127 / 263140,,000000          POPJ    P,                   ;
145130 / 261140,,000002          PUSH    P,000002             ;;GOD ONLY KNOWS.......
145131 / 261140,,000004          PUSH    P,  ITEM             ;
145132 / 260140,,145252         PUSHJ    P,145252             ;;YES. RELEASE IT FOR HIM.
145133 / 262140,,000004           POP    P,  ITEM             ;
145134 / 262140,,000002           POP    P,  LINE             ;
145135 / 344100,,145126          AOJA LINE,PTYCL1             ;
                       ;PTYUUO, LINMAP, PTOCNT, PTIFRE
                       PTYUUO:
145136 / 322500,,145040         JUMPE UCHN,PTYGET             ;
151471 / 550054,,000000          HRRZ  TAC,      (UUO)        ;
145137 / 256200,,151471          XCTR   XR,151471             ;
145140 / 622040,,400000          TRZE  TAC,400000             ;;USE THIS TO MAP REAL LINES
145141 / 254000,,145171          JRST      LINMAP             ;
145142 / 307040,,000145          CAIG  TAC,TTPLEN             ;
145143 / 303500,,000016         CAILE UCHN,PTYXNO             ;
145144 / 254000,,043340          JRST      UUOERR             ;
145145 / 326040,,145151         JUMPN  TAC,PTYUU3             ;
145146 / 570044,,027320          HRRE  TAC,JBTLIN(ITEM)       ;;IF HE ASKS FOR LINE 0,
145147 / 321040,,037403         JUMPL  TAC,037403             ;;NOT IF DETACHED.
145150 / 254000,,145154          JRST      145154             ;; GIVE HIM HIS OWN TTY.
                       PTYUU3:
145151 / 301040,,000121          CAIL  TAC,000121             ;;IS IT A PTY ?
145152 / 312201,,017743          CAME ITEM,017743(TAC)        ;;YES. DOES HE OWN IT ?
145153 / 306500,,000001          CAIN UCHN,000001             ;;NO. AN ERROR UNLESS HE IS MERELY RELEASING IT.
                       PTYUU2:
145154 / 334101,,017717         SKIPA LINE,LINTAB(TAC)        ;
145155 / 254000,,043340          JRST      043340             ;;SORRY, THE LINE YOU HAVE REQUESTED IS NOT YOURS AT THIS TIME.
145156 / 541101,,000000          HRRI LINE,      (TAC)        ;
145157 / 271600,,000001          ADDI  UUO,     1             ;
145160 / 004400,,000000 POINT 36,00000000,35                  ;
145160 / 505600,,004400          HRLI  UUO,      (<POINT 36,0,35>)      ;;MAKE FULL-WORD BYTE PTR. IN UUO.
145161 / 332302,,032347         SKIPE  DDB,TTYTAB(LINE)       ;;GET LOC. OF HIS DDB.
145162 / 254000,,145165          JRST      PTYUU4             ;
145163 / 260140,,140123         PUSHJ    P,140123             ;;NO DDB, SO GET HIM ONE.
145164 / 254000,,043340          JRST      043340             ;;NONE AVAILABLE.
                       PTYUU4:
145165 / 337012,,145204         SKIPG      PTYDIS(UCHN)       ;;LEGAL FOR TTY'S?
145166 / 603100,,004000          TLNE LINE,004000             ;;OR PTY?
145167 / 254032,,145204          JRST      @PTYDIS(UCHN)      ;
145170 / 254000,,043340          JRST      043340             ;;SOMETIMES YOU HAVE TO BE A PTY TO DO A PTY-UUO!
                       LINMAP:
145171 / 303040,,000145         CAILE  TAC,TTPLEN             ;
145172 / 254000,,043340          JRST      UUOERR             ;
145173 / 200644,,027420          MOVE  AC1,JBTPRV(J)          ;
145174 / 603640,,002000          TLNE  AC1,MESPRV             ;
145175 / 254000,,145154          JRST      145154             ;;ALL OK NOW
145176 / 336301,,032347         SKIPN  DDB,TTYTAB(TAC)        ;
145177 / 254000,,043340          JRST      UUOERR             ;
145200 / 135640,,037575           LDB  AC1, PJOBN             ;
145201 / 316640,,000004          CAMN  AC1,     J             ;
145202 / 254000,,145154          JRST      PTYUU2             ;
145203 / 254000,,043340          JRST      UUOERR             ;
                       ; UUOMAC PTYDIS,PTYUUO
                       PTYDIS:
145204 / 000000,,145040                                       ;
145205 / 000000,,145251                                       ;
145206 / 000000,,145244                                       ;
145207 / 000000,,145243                                       ;
145210 / 400000,,145273                                       ;
145211 / 400000,,145300                                       ;
145212 / 000000,,145322                                       ;
145213 / 000000,,145344                                       ;
145214 / 400000,,145367                                       ;
145215 / 000000,,145401                                       ;
145216 / 000000,,145402                                       ;
145217 / 000000,,141515                                       ;
145220 / 000000,,141532                                       ;
145221 / 000000,,147622                                       ;
145222 / 000000,,145414                                       ;
145223 / 711700,,141310        PTYUUO UUOCNT-1,UUOLNK             ;
                       PTOCNT:
145243 / 334406,,000032         SKIPA  CHR,TOFCTR(DDB)        ;
                       PTIFRE:
145244 / 334406,,000023         SKIPA  CHR,TIFCTR(DDB)        ;
145245 / 275400,,000167          SUBI  CHR,000167             ;;GET -(NO. OF CHRS. IN BUFFER).
145246 / 275400,,000001          SUBI  CHR,000001             ;;COUNT CAN ONLY GO TO 1 NOT 0.
                       PTSTOR:
152636 / 216414,,000000         MOVMM  CHR,      (UUO)        ;
145247 / 256040,,152636          XCTR   XW,152636             ;
145250 / 263140,,000000          POPJ    P,                   ;
                       ;PTYREL, PTRD1S, PTRD1W, PTWAIT
                       PTYREL:
145251 / 603100,,004000          TLNE LINE,004000             ;;RELEASE THE PTY, IF IT REALLY IS ONE.
                       PTYRL2:
145252 / 312202,,017743          CAME ITEM,017743(LINE)       ;;DOES THIS JOB OWN THIS PTY ?
145253 / 263140,,000000          POPJ    P,                   ;
145254 / 336302,,032347         SKIPN  DDB,TTYTAB(LINE)       ;;THIS IS NEEDED IF WE CAME FROM PTYCLR.
145255 / 254000,,140360          JRST      140360             ;;CLEAR LINE BITS AND RETURN.
145256 / 260140,,144756         PUSHJ    P,144756             ;;FINISH OUTPUT.
145257 / 260140,,140774         PUSHJ    P,140774             ;;CLEAR BOTH ITS BUFFERS.
145260 / 402002,,017743         SETZM      017743(LINE)       ;;CLEAR OWNERSHIP FLAG.
145261 / 205040,,000200         MOVSI  TAC,000200             ;;MARK PTY AS NO LONGER USED, SO DDB WILL BE
145262 / 412042,,017717        ANDCAM  TAC,LINTAB(LINE)       ;;KILLED BY TTYKIL.
145263 / 135200,,037575           LDB    J,037575             ;;GET JOB ON THIS PTY
145264 / 322200,,145266         JUMPE    J,145266             ;;IF ANY
145265 / 260140,,051042         PUSHJ    P,051042             ;;NOW KEEP HIM FROM FUTZING AROUND
145266 / 200600,,152160          MOVE  UUO,152160             ;
152601 / 202600,,000045         MOVEM  UUO,JOBTM1             ;
145267 / 256040,,152601          XCTR   XW,152601             ;;PUT IT IN USER CORE.
151400 / 000000,,000045                                       ;
151400 / 440700,,000045 POINT 7,00000045,                     ;
145270 / 200600,,151400          MOVE  UUO,151400             ;;THIS WILL BE RELOCATED.
145271 / 260140,,145410         PUSHJ    P,145410             ;;SEND JOB ↑C ↑C K<LF>.
145272 / 263140,,000000          POPJ    P,                   ;
                       PTRD1S:
145273 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET STATUS WORD.
145274 / 260140,,144726         PUSHJ    P,XMTIN1             ;
152371 / 137400,,000014           DPB  CHR,   UUO             ;
145275 / 256040,,152371          XCTR  XDB,152371             ;;GIVE CHAR. TO LOSER.
145276 / 322400,,037403         JUMPE  CHR, CPOPJ             ;
145277 / 254000,,037401          JRST      CPOPJ1             ;
                       PTRD1W:
145300 / 260140,,145273         PUSHJ    P,PTRD1S             ;
145301 / 334500,,000006         SKIPA UCHN,   DDB             ;
145302 / 263140,,000000          POPJ    P,                   ;
145303 / 260140,,137612         PUSHJ    P,TTYGET             ;
145304 / 552312,,000033         HRRZM  DDB,PTYPTR(UCHN)       ;
145305 / 205000,,401001         MOVSI      401001             ;
145306 / 603100,,000400          TLNE LINE,000400             ;;DO WE WANT TO HEAR TTY INPUT ?
145307 / 436006,,000002          IORM      DEVIOS(DDB)        ;
145310 / 260140,,145315         PUSHJ    P,PTWAIT             ;
145311 / 402006,,000033         SETZM      PTYPTR(DDB)        ;
145312 / 260140,,145273         PUSHJ    P,PTRD1S             ;
145313 / 263140,,000000          POPJ    P,                   ;
145314 / 263140,,000000          POPJ    P,                   ;
                       PTWAIT:
145315 / 201040,,000005         MOVEI  TAC,  IOWQ             ;
145316 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;
145317 / 200300,,000012          MOVE  DDB,000012             ;;RECOVER DDB FOR PTY.
145320 / 260140,,140030         PUSHJ    P,140030             ;;RESTORE LINE (CLOBBERED BY TTYGET).
145321 / 254000,,046124          JRST      WSCHED             ;
                       ;PTWR1S, PTLL3, PTWR1W, PTRDS, PTWRS7, PTWRS9
                       PTWR1S:
145322 / 201400,,000001         MOVEI  CHR,     1             ;
145323 / 311406,,000023          CAML  CHR,TIFCTR(DDB)        ;;IS THERE ROOM (>1 NOT 0).
145324 / 263140,,000000          POPJ    P,                   ;
145325 / 350003,,000000           AOS            (P)          ;;THERE IS ROOM FOR THE CHR., SO WE WILL SKIP.
152363 / 135400,,000014           LDB  CHR,   UUO             ;
145326 / 256040,,152363          XCTR  XLB,152363             ;
152302 / 000000,,000010                                       ;
152302 / 070200,,000010 POINT 2,00000010,28                   ;
145327 / 135500,,152302           LDB UCHN,152302             ;
                       PTLL3:
152065 / 000000,,000010                                       ;
152065 / 000700,,000010 POINT 7,00000010,35                   ;
145330 / 135440,,152065           LDB DSER,152065             ;;SIMULATE KBDINT, IN CASE THIS PTY IS REALLY A DPY.
145331 / 301440,,000101          CAIL DSER,000101             ;
145332 / 303440,,000132         CAILE DSER,000132             ;
145333 / 254000,,145335          JRST      145335             ;
145334 / 660440,,000040           TRO DSER,    40             ;
145335 / 201700,,000000         MOVEI  AC2,                   ;
145336 / 260140,,140030         PUSHJ    P,140030             ;;IN CASE KBDED IS AROUND CLOBBERING THINGS.
145337 / 200042,,017717          MOVE  TAC,LINTAB(LINE)       ;;SET UP ESCAPE BITS
152064 / 000700,,000001                                       ;
145340 / 137100,,152064           DPB LINE,152064             ;;BUT NULLIFY MAPPING
145341 / 700600,,001004          CONO   PI,SCNOFF             ;
145342 / 260140,,142654         PUSHJ    P,142654             ;;PRETEND CHR. HAS JUST BEEN TYPED IN.
145343 / 254000,,143033          JRST      143033             ;;TURN ON PI AND POPJ.
                       PTWR1W:
145344 / 603100,,002000          TLNE LINE,002000             ;;IMLAC FORWARD-SPACE KLUDGE
145345 / 254000,,145355          JRST      IMWR1W             ;
                       IMWR10:
145346 / 260140,,145322         PUSHJ    P,145322             ;;WRITE A CHAR.
145347 / 334500,,000006         SKIPA UCHN,000006             ;;DIDN'T GO. LET'S WAIT A WHILE.
145350 / 263140,,000000          POPJ    P,                   ;;ALL DONE.
145351 / 260140,,137612         PUSHJ    P,TTYGET             ;
145352 / 562312,,000033         HRROM  DDB,PTYPTR(UCHN)       ;
145353 / 260140,,145315         PUSHJ    P,PTWAIT             ;
145354 / 254000,,145344          JRST      PTWR1W             ;
                       IMWR1W:
152363 / 135400,,000014           LDB  CHR,   UUO             ;
145355 / 256040,,152363          XCTR  XLB,152363             ;;IMLAC...
145356 / 306400,,000211          CAIN  CHR,000211             ;;<CONTROL>TAB?
145357 / 254000,,145364          JRST      IMWR11             ;
145360 / 302400,,000240          CAIE  CHR,000240             ;;<CONTROL>SPACE?
145361 / 254000,,145346          JRST      145346             ;;NEITHER.  BACK TO OLD CODE.
145362 / 200400,,152224          MOVE  CHR,152224             ;;CTL-SPACE.  COMMAND TO MOVE FORWARD 1.
145363 / 304000,,000000          CAIA                         ;
                       IMWR11:
145364 / 200400,,152233          MOVE  CHR,152233             ;;CTL-TAB.  MOVE FORWARD A BUNCH.
145365 / 260140,,137612         PUSHJ    P,TTYFNU             ;
145366 / 254000,,141633          JRST      141633             ;;SEND THE COMMAND.
                       ; PTRDS, PTWRS7, PTWRS9 CHANGED 3-30-71 TO USE LH (ADR+1) AS BYTE
                       ; POINTER SPEC IF NON-ZERO ------ DCS
                       PTRDS:
152513 / 200614,,000000          MOVE  UUO,      (UUO)        ;
145367 / 256200,,152513          XCTR   XR,152513             ;;GET ADDRESS OF BUFFER IN LOSER CORE.
145370 / 627600,,007777          TLZN  UUO,007777             ;;CLEAR SIZE FIELD, CHECK FOR BP THERE --DCS
145371 / 505600,,440700          HRLI  UUO,440700             ;;NONE, GIVE 7-BIT PTR TO FIRST CHAR --DCS
145372 / 661600,,000700           TLO  UUO,000700             ;;ASSURE CORRECT SIZE FIELD, AT LEAST--DCS
145373 / 133000,,000014           IBP      000014             ;;STUPID SAIL!
                       PTRDSA:
145374 / 260140,,145300         PUSHJ    P,145300             ;;WAIT FOR AT LEAST ONE CHAR. TO APPEAR.
                       PTRDS2:
145375 / 133000,,000014           IBP         UUO             ;
145376 / 260140,,145273         PUSHJ    P,145273             ;;GET ANY FURTHER CHARS.
145377 / 263140,,000000          POPJ    P,                   ;;NO MORE.
145400 / 254000,,145375          JRST      145375             ;;MAYBE MORE.
                       PTWRS7:
145401 / 645600,,444300          TLCA  UUO,444300             ;;MAKE 7-BIT PTR. ...
                       PTWRS9:
145402 / 641600,,445500           TLC  UUO,445500             ;;MAKE 9-BIT PTR.
145403 / 544400,,000014           HLR  CHR,000014             ;;SAVE BP SPEC FOR FIRST CHAR--DCS
152513 / 200614,,000000          MOVE  UUO,      (UUO)        ;
145404 / 256200,,152513          XCTR   XR,152513             ;;GET ADDRESS OF BUFFER IN LOSER CORE.
145405 / 627600,,007777          TLZN  UUO,007777             ;;CLEAR SIZE AND INDEX, CHECK--DCS
145406 / 504600,,000010           HRL  UUO,000010             ;;ZERO, PROVIDE CORRECT PTR --DCS
152661 / 000000,,000014                                       ;
152661 / 221400,,000014 POINT 12,00000014,17                  ;
145407 / 137400,,152661           DPB  CHR,152661             ;;ASSURE CORRECT SIZE FIELD--DCS
                       PTWR2:
152353 / 134400,,000014          ILDB  CHR,   UUO             ;
145410 / 256040,,152353          XCTR  XLB,152353             ;
145411 / 322400,,140030         JUMPE  CHR,140030             ;;DONE IF NULL
145412 / 260140,,145344         PUSHJ    P,145344             ;;GIVE NEXT CHAR. TO PTY.
145413 / 254000,,145410          JRST      145410             ;;LOOP UNTIL WE SEE A NULL.
                       ;PTJOBX
                       PTJOBX:
145414 / 135040,,037575           LDB  TAC,037575             ;;GET JOB WHICH IS ON THIS PTY
152467 / 200114,,000000          MOVE TAC1,      (UUO)        ;
145415 / 256200,,152467          XCTR   XR,152467             ;;GET COMMAND
145416 / 607100,,770000          TLNN TAC1,770000             ;;IS IT SIXBIT OR DIRECT INDEX?
145417 / 254000,,145424          JRST      145424             ;;DIRECT
145420 / 201640,,000007         MOVEI  AC1,000007             ;;LENGTH OF TABLE
145421 / 312115,,145437          CAME TAC1,145437(AC1)        ;;MATCH?
145422 / 367640,,145421          SOJG  AC1,145421             ;
145423 / 200100,,000015          MOVE TAC1,   AC1             ;
                       PTJDIR:
145424 / 323100,,043340        JUMPLE TAC1,UUOERR             ;
145425 / 303100,,000007         CAILE TAC1,000007             ;;IS IT IN TABLE?
145426 / 254000,,043340          JRST      043340             ;;NO
145427 / 550102,,145430          HRRZ TAC1,145430(TAC1)       ;;GET DISPATCH
145430 / 254002,,000000          JRST            (TAC1)       ;;AND DISPATCH
                       PTJDIS:
145431 / 000000,,145447           XWD 0,PTJHLT                ;
145432 / 000000,,145474           XWD 0,PTJCON                ;
145433 / 000000,,145531           XWD 0,PTDOFF                ;
145434 / 000000,,145526           XWD 0,PTDON                 ;
145435 / 000000,,145534           XWD 0,PTLOGN                ;
145436 / 000000,,145513           XWD 0,PTIWTS                ;
145437 / 000000,,145525           XWD 0,PTCLRB                ;
                       PTJTAB:
                       ;PTJHLT, PTJCON, PTIWTS, PTCLRB
                       ;HALT JOB RUNNING ON THIS PTY
                       PTJHLT:
145447 / 322040,,037403         JUMPE  TAC, CPOPJ             ;
145450 / 261140,,000004          PUSH    P,000004             ;;SAVE OURSELVES FIRST.
145451 / 200200,,000001          MOVE    J,000001             ;;NOW DO IT TO HIM
145452 / 316200,,026107          CAMN    J,026107             ;;SYSTEM TAPE USER?
145453 / 254000,,145462          JRST      HLTOK0             ;
145454 / 260140,,056371         PUSHJ    P,056371             ;;NO, OK TO STOP?
145455 / 304000,,000000          CAIA                         ;
145456 / 254000,,145471          JRST      145471             ;;YES
                       NOTOK:
145457 / 262140,,000004           POP    P,     J             ;
145460 / 260140,,046124         PUSHJ    P,046124             ;;WAIT A WHILE
145461 / 254000,,145447          JRST      PTJHLT             ;
                       HLTOK0:
145462 / 336004,,027120         SKIPN      JBTADR(J)          ;
145463 / 254000,,145466          JRST      HLTOK1             ;
145464 / 260140,,071623         PUSHJ    P,ANYACT             ;
145465 / 254000,,145457          JRST       NOTOK             ;
                       HLTOK1:
145466 / 260140,,045550         PUSHJ    P, ESTOP             ;
145467 / 262140,,000004           POP    P,     J             ;
145470 / 254000,,037401          JRST      037401             ;;SUCCESS RETURN
                       HLTOK:
145471 / 260140,,045672         PUSHJ    P, STOP1             ;
145472 / 262140,,000004           POP    P,     J             ;
145473 / 254000,,037401          JRST      037401             ;;SUCCESS RETURN
                       ;CONTINUE THE JOB RUNNING ON THIS PTY
                       PTJCON:
145474 / 322040,,037403         JUMPE  TAC, CPOPJ             ;
145475 / 261140,,000004          PUSH    P,     J             ;
145476 / 200200,,000001          MOVE    J,   TAC             ;
145477 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;
145500 / 302040,,000011          CAIE  TAC,000011             ;;THIS IS ONLY PLACE YOU CAN CONTINUE FROM
145501 / 254000,,145511          JRST      NOCONT             ;
145502 / 200044,,026114          MOVE  TAC,JBTSTS(J)          ;
145503 / 603040,,020000          TLNE  TAC,  JERR             ;
145504 / 254000,,145511          JRST      NOCONT             ;
145505 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
145506 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
145507 / 260140,,046021         PUSHJ    P,SETRUN             ;
145510 / 350003,,777777           AOS      777777(P)          ;;SUCCESS RETURN
                       NOCONT:
145511 / 262140,,000004           POP    P,     J             ;
145512 / 254000,,037401          JRST      037401             ;;SUCCESS RETURN
                       ;SKIP IF PTY IS WAITING FOR INPUT
                       PTIWTS:
145513 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
145514 / 603000,,000400          TLNE      000400             ;;MONMODE OR USRMODE?
145515 / 254000,,145520          JRST      PTIWT1             ;
145516 / 321000,,037401         JUMPL      037401             ;;USER MODE, CHECK TTYIOW BIT
145517 / 263140,,000000          POPJ    P,                   ;;IT WAS OFF
                       PTIWT1:
145520 / 135100,,037577           LDB LINE,037577             ;;GRUMBLE, GRUMBLE, PTJOBX MUNGS "TAC1"!!
145521 / 200042,,032347          MOVE  TAC,TTYTAB(LINE)       ;;MONITOR MODE, GOBBLE TTYTAB
145522 / 607040,,600000          TLNN  TAC,600000             ;
145523 / 350003,,000000           AOS            (P)          ;
145524 / 263140,,000000          POPJ    P,                   ;
                       ;PTJOBX [N ; SIXBIT /CLRBFI/] -- DO CLRBFI FOR TTYN
                       PTCLRB:
145525 / 254000,,140775          JRST      140775             ;;YES, I KNOW THIS WASTES A CELL AND A CYCLE
                       ;PTDON, PTDOFF,PTLOGN,IMLOAD
                       ; ROUTINES TO SET DUPLEXING OF PTY
                       PTDON:
145526 / 201000,,000200         MOVEI      NOECHO             ;
145527 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
145530 / 263140,,000000          POPJ    P,                   ;
                       PTDOFF:
145531 / 201000,,000200         MOVEI      NOECHO             ;
145532 / 437006,,000002           ORB      DEVIOS(DDB)        ;
145533 / 263140,,000000          POPJ    P,                   ;
                       ;START A NEW JOB ON A PTY.  USES FORK CODE.
                       PTLOGN:
145534 / 326040,,145545         JUMPN  TAC,145545             ;;LOSE IF THERE'S A JOB ALREADY
145535 / 506203,,000000          HRLM    J,      (P)          ;;SAVE OUR JOBNUM
145536 / 260140,,051066         PUSHJ    P,051066             ;;GOBBLE A NEW JOB
145537 / 254000,,145544          JRST      145544             ;;SORRY, NO JOBS
145540 / 254000,,145544          JRST      145544             ;;THIS CAN'T HAPPEN (IT SAYS HERE)
145541 / 260140,,055144         PUSHJ    P,055144             ;;THIS COPIES THE OLD JOB'S STUFF
145542 / 201044,,000000         MOVEI  TAC,      (J)          ;;TO RETURN IT TO LOSER
145543 / 354003,,000000          AOSA            (P)          ;
                       PTLGN0:
145544 / 201040,,000000         MOVEI  TAC,                   ;
                       PTLGN1:
152550 / 202054,,000000         MOVEM  TAC,      (UUO)        ;
145545 / 256040,,152550          XCTR   XW,152550             ;
145546 / 263140,,000000          POPJ    P,                   ;
                       ;DO A PTLOAD TO AN IMLAC
                       IMLOAD:
145547 / 260140,,137612         PUSHJ    P,TTYFNU             ;
152513 / 200614,,000000          MOVE  UUO,      (UUO)        ;
145550 / 256200,,152513          XCTR   XR,152513             ;;GET GUY'S PTR.
145551 / 607600,,777777          TLNN  UUO,777777             ;;IS IT ALREADY (PRESUMABLY) A BYTE PTR. ?
145552 / 505600,,440700          HRLI  UUO,440700             ;;NO. MAKE IT ONE.
                       IMLOD0:
145553 / 200400,,153004          MOVE  CHR,153004             ;;Load command is "0"+no. of chars.
153140 / 000000,,000010                                       ;
153140 / 350700,,000010 POINT 7,00000010,6                    ;
145554 / 200040,,153140          MOVE  TAC,153140             ;
                       IMLOD1:
152356 / 134740,,000014          ILDB  AC3,   UUO             ;
145555 / 256040,,152356          XCTR  XLB,152356             ;;Get a char,
145556 / 322740,,145565         JUMPE  AC3,145565             ;;end on a null.
145557 / 270400,,152130           ADD  CHR,152130             ;;Count the chars.
145560 / 136740,,000001          IDPB  AC3,000001             ;;Stuff char into the command.
145561 / 603040,,760000          TLNE  TAC,760000             ;;Full word (4 chars)?
145562 / 254000,,145555          JRST      145555             ;;No.  Do it again.
145563 / 260140,,141633         PUSHJ    P,141633             ;;Send those 4 to the IMLAC
145564 / 254000,,145553          JRST      145553             ;;and keep going.
                       IMLOD2:
145565 / 312400,,153004          CAME  CHR,153004             ;;Done.  Put out the last few chars.
145566 / 260140,,141633         PUSHJ    P,FIVOUT             ;
145567 / 200400,,152215          MOVE  CHR,152215             ;;Command to move to beginning of
145570 / 254000,,141633          JRST      141633             ;;line and return to normal.
                       ;PHONE DIALER LIVES HERE
                       ;IF NO DIALER, UUOERR
                       ;DIALER BITS AND DEFINITIONS
                       ;CONI BITS
                       ;CONO BITS
                       ;DATAO BITS (LEFT HALF)
                       ;DIALER INITIALIZE ROUTINE
                       DILINI:
145571 / 737600,,000076          CONO  DIL,000076             ;;INIT HARDWARE
145572 / 402000,,020113         SETZM      020113             ;;BEGIN ZERO OF DIALER DATA
152201 / 020113,,020114                                       ;
145573 / 200040,,152201          MOVE  TAC,152201             ;
145574 / 251040,,020115           BLT  TAC,020115             ;;AND ZERO TO END
145575 / 263140,,000000          POPJ    P,                   ;
                       DILTRL:
145576 / 205640,,777777         MOVSI  AC1,777777             ;
                       DILTR1:
145577 / 550055,,145651          HRRZ  TAC,DILTTY(AC1)        ;
145600 / 302042,,000000          CAIE  TAC,      (LINE)       ;
145601 / 253640,,145577         AOBJN  AC1,DILTR1             ;
145602 / 325640,,037403        JUMPGE  AC1, CPOPJ             ;
145603 / 261140,,000002          PUSH    P,  LINE             ;
145604 / 550100,,000015          HRRZ LINE,   AC1             ;
145605 / 332002,,020113         SKIPE      DILJOB(LINE)       ;
145606 / 260140,,145734         PUSHJ    P,145734             ;;RELEASE DIALER
145607 / 262140,,000002           POP    P,  LINE             ;
145610 / 263140,,000000          POPJ    P,                   ;
                       ;DIAL UUO
                       ;CALL
                       ;	MOVEI AC,ADDR
                       ;	DIAL AC,
                       ;	<ERROR RETURN, AC CONTAINS STATUS BITS>
                       ;	<SUCCESS, AC CONTAINS ANY DATA RETURNED>
                       ;ADDR:	DIALER #,,FUNCTION CODE
                       ;	SEE INDIVIDUAL CALL FOR REST OF DATA
                       DILER0:
145611 / 265040,,145616           JSP  TAC,DILERR             ;
                       DILER1:
145612 / 265040,,145616           JSP  TAC,DILERR             ;
                       DILER2:
145613 / 265040,,145616           JSP  TAC,DILERR             ;
                       DILER3:
145614 / 265040,,145616           JSP  TAC,DILERR             ;
                       DILER4:
145615 / 265040,,145616           JSP  TAC,DILERR             ;
                       DILERR:
145616 / 275040,,145612          SUBI  TAC,145612             ;
145617 / 550040,,000001          HRRZ  TAC,   TAC             ;
                       DILSTT:
152547 / 202052,,000000         MOVEM  TAC,      (UCHN)       ;
145620 / 256040,,152547          XCTR   XW,152547             ;;STORE ERROR CODE BACK IN AC
145621 / 263140,,000000          POPJ    P,                   ;
                       ;ERROR CODES FOR ALL DIAL UUO'S
                       ;ERROR 0 -- ILLEGAL DIALER #
                       ;ERROR 1 -- DON'T OWN DIALER
                       ;ERROR 2 -- DON'T MEET DILOWN CONDITIONS
                       ;ERROR 3 -- DIALER BUSY
                       ;ERROR 4 -- DIALING FAILURE
                       DIAL:
151505 / 550612,,000000          HRRZ  UUO,      (UCHN)       ;
145622 / 256200,,151505          XCTR   XR,151505             ;;FETCH POINTER TO ARG BLOCK
151523 / 554114,,000000          HLRZ LINE,      (UUO)        ;
145623 / 256200,,151523          XCTR   XR,151523             ;;GET DIALER NUMBER
145624 / 301100,,000001          CAIL LINE,000001             ;;LEGAL?
145625 / 254000,,145611          JRST      145611             ;;NO, ERROR 0
151503 / 550454,,000000          HRRZ DSER,      (UUO)        ;
145626 / 256200,,151503          XCTR   XR,151503             ;;GET FUNCTION CODE
145627 / 301440,,000005          CAIL DSER,000005             ;;LEGAL FUNCTION CODE?
145630 / 254000,,043340          JRST      043340             ;;NO
145631 / 312202,,020113          CAME    J,DILJOB(LINE)       ;;HIS?
145632 / 326440,,145612         JUMPN DSER,145612             ;;NO, ERROR 1 (UNLESS DILGET)
145633 / 254031,,145634          JRST      @DILDIS(DSER)      ;;YES, CALL ROUTINE
                       DILDIS:
145634 / 000000,,145641                                       ;;0 GET DIALER
145635 / 000000,,145665                                       ;;1 GET DIALER STATUS
145636 / 000000,,145671                                       ;;2 DIAL A NUMBER
145637 / 000000,,145730                                       ;;3 HANG UP
145640 / 000000,,145732                                       ;;4 RELEASE
                       ;CODE 0	GET DIALER
                       DILGET:
145641 / 316202,,020113          CAMN    J,DILJOB(LINE)       ;;DOES HE OWN IT?
145642 / 254000,,037401          JRST      037401             ;;ALREADY HAS IT, SUCCESS
145643 / 332002,,020113         SKIPE      DILJOB(LINE)       ;;DOES ANYONE OWN IT?
145644 / 254000,,145612          JRST      145612             ;;YES, DON'T OWN ERROR
145645 / 256002,,145652           XCT      DILOWN(LINE)       ;;CHECK OTHER CONDITIONS
145646 / 254000,,145613          JRST      145613             ;;LOSE
145647 / 202202,,020113         MOVEM    J,DILJOB(LINE)       ;;CLAIM IT
145650 / 254000,,037401          JRST      CPOPJ1             ;
                       DILTTY:
145651 / 400000,,000011                                       ;;TTY NUMBER FOR THIS DIALER (SIGN BIT MEANS CONNECTED TO AD/DA)
                       DILOWN:
145652 / 260140,,145653         PUSHJ    P,145653             ;;CHECK ROUTINE FOR DIALER 0
                       DIL0CK:
145653 / 200302,,145651          MOVE  DDB,DILTTY(LINE)       ;
145654 / 336306,,032347         SKIPN  DDB,TTYTAB(DDB)        ;;CHECK TTY FOR DIALER
145655 / 263140,,000000          POPJ    P,                   ;;NO TTY THERE AT ALL
145656 / 135040,,037575           LDB  TAC, PJOBN             ;
145657 / 312040,,000004          CAME  TAC,000004             ;;IS IT HIS?
145660 / 263140,,000000          POPJ    P,                   ;;NO
145661 / 200046,,000004          MOVE  TAC,DEVMOD(DDB)        ;
145662 / 602040,,200000          TRNE  TAC,200000             ;;DOES HE HAVE IT INITED?
145663 / 350003,,000000           AOS            (P)          ;;YES, SUCCESS
145664 / 263140,,000000          POPJ    P,                   ;
                       ;CODE 1 GET STATUS
                       DILSTA:
145665 / 737640,,000001          CONI  DIL,000001             ;;GET CURRENT STATUS
145666 / 504042,,020114           HRL  TAC,DILCNI(LINE)       ;;LAST I-LEVEL CONI IN LEFT HALF
145667 / 350003,,000000           AOS            (P)          ;;ALWAYS SUCCESSFUL HERE
145670 / 254000,,145620          JRST      145620             ;;RETURN STATUS BITS IN AC
                       ;CODE 2 DIAL A NUMBER
                       DILDIL:
145671 / 737700,,001000         CONSZ  DIL,DILBSY             ;
145672 / 254000,,145614          JRST      145614             ;;DIALER BUSY
145673 / 737700,,000040         CONSZ  DIL,000040             ;;IS DIALER POWER OK?
145674 / 254000,,145615          JRST      145615             ;;NO, GIVE HIM AN ERROR RIGHT AWAY
152457 / 200054,,000002          MOVE  TAC,     2(UUO)        ;
145675 / 256200,,152457          XCTR   XR,152457             ;;PICKUP DATAO WORD
                       ;IFN 0
152517 / 200654,,000001          MOVE  AC1,     1(UUO)        ;
145676 / 256200,,152517          XCTR   XR,152517             ;;PICKUP CONO WORD
145677 / 405640,,777700          ANDI  AC1,777700             ;;JUST AREA CODE
145700 / 306640,,202500          CAIN  AC1,202500             ;;AREA 415?
145701 / 621040,,004000           TLZ  TAC,004000             ;;YES, DON'T DIAL AREA CODE
145702 / 700600,,001002          CONO   PI,001002             ;;DISABLE DIALER CHANNEL
145703 / 737615,,000056          CONO  DIL,000056(AC1)        ;;SETUP
145704 / 737540,,000001         DATAO  DIL,000001             ;;AND GO
                       DILWAT:
145705 / 211040,,000005         MOVNI  TAC,  IOWQ             ;
145706 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
145707 / 260140,,046027         PUSHJ    P, REQUE             ;
152730 / 254000,,145757          JRST      DILING             ;
145710 / 200640,,152730          MOVE  AC1,152730             ;;DISPATCH FOR I-LEVEL
145711 / 202642,,020115         MOVEM  AC1,DILIDS(LINE)       ;
145712 / 402002,,020114         SETZM      DILCNI(LINE)       ;;CLEAR CONI BITS FOR CHECK
145713 / 700600,,002002          CONO   PI, DILON             ;
145714 / 260140,,046124         PUSHJ    P,046124             ;;WAIT FOR DIALER
145715 / 700600,,001002          CONO   PI,001002             ;;INTERLOCK
145716 / 336042,,020114         SKIPN  TAC,DILCNI(LINE)       ;;GET CONI BITS
145717 / 254000,,145705          JRST      DILWAT             ;
145720 / 700600,,002002          CONO   PI, DILON             ;
145721 / 640040,,004600           TRC  TAC,004600             ;;ALL THESE SHOULD BE ON
145722 / 646040,,004600          TRCN  TAC,004600             ;
145723 / 602040,,002040          TRNE  TAC,002040             ;;THESE SHOULD BE OFF
145724 / 304000,,000000          CAIA                         ;
145725 / 254000,,145665          JRST      145665             ;;OK, RETURN STATUS
145726 / 737600,,000036          CONO  DIL,000036             ;;HANG IT IN YOUR EAR
145727 / 254000,,145615          JRST      145615             ;;DIALER ERROR
                       ;CODE 3 HANG UP
                       DILHNG:
145730 / 737600,,000036          CONO  DIL,000036             ;;HANG IT IN YOUR EAR
145731 / 254000,,145665          JRST      145665             ;;RETURN STATUS
                       ;CODE 4 RELEASE DIALER
                       DILREL:
145732 / 260140,,145734         PUSHJ    P,RELDIL             ;
145733 / 254000,,145665          JRST      145665             ;;RETURN STATUS
                       RELDIL:
145734 / 402002,,020115         SETZM      DILIDS(LINE)       ;;CLEAR I-LEVEL DISPATCH
145735 / 737600,,000036          CONO  DIL,000036             ;;HANG IT IN YOUR EAR
145736 / 402002,,020113         SETZM      DILJOB(LINE)       ;
145737 / 263140,,000000          POPJ    P,                   ;
                       ;DIALER INTERRUPTS COME HERE
                       DILINT:
145740 / 202100,,020110         MOVEM LINE,DILLIN             ;
145741 / 201100,,000000         MOVEI LINE,                   ;;ONLY ONE LINE FOR NOW
145742 / 202040,,020111         MOVEM  TAC,DILTAC             ;
145743 / 737640,,000001          CONI  DIL,000001             ;;GET STATUS BITS
145744 / 202042,,020114         MOVEM  TAC,DILCNI(LINE)       ;;LATEST CONI BITS
145745 / 332002,,020115         SKIPE      DILIDS(LINE)       ;;THIS DIALER ACTIVE?
145746 / 256002,,020115           XCT      DILIDS(LINE)       ;;DISPATCH TO DIALER ROUTINE OR EXIT
                       DILXIT:
145747 / 737740,,001000         CONSO  DIL,001000             ;;DIALER BUSY?
145750 / 254000,,145753          JRST      145753             ;;NO, DON'T CHECK FOR HANGUP
145751 / 737740,,000400         CONSO  DIL,000400             ;;IF NOT OK
145752 / 737600,,000020          CONO  DIL,000020             ;;HANG UP
                       DILXT1:
145753 / 737600,,000056          CONO  DIL,000056             ;;CLEAR INTERRUPT, ENABLE, SET CHANNEL
145754 / 200040,,020111          MOVE  TAC,DILTAC             ;
145755 / 200100,,020110          MOVE LINE,DILLIN             ;
145756 / 254520,,000666           JEN      @DILCHL            ;
                       DILING:
145757 / 602040,,004000          TRNE  TAC,004000             ;;SHOULD HAVE JUST CONNECTED
145760 / 606040,,000200          TRNN  TAC,000200             ;;AND STILL BE CONNECTED
145761 / 634040,,000001          TDZA  TAC,000001             ;;NOT CONNECTED, IDLE STATE
152731 / 254000,,146004          JRST      DILACT             ;
145762 / 200040,,152731          MOVE  TAC,152731             ;;CONNECTED, SET TO ACTIVE STATE
145763 / 202042,,020115         MOVEM  TAC,DILIDS(LINE)       ;;SET DISPATCH
145764 / 202200,,020112         MOVEM    J,  DILJ             ;
145765 / 200202,,020113          MOVE    J,DILJOB(LINE)       ;
145766 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;
145767 / 302040,,000005          CAIE  TAC,000005             ;;STILL WAITING FOR US?
145770 / 254000,,146002          JRST      DILIN1             ;
145771 / 211040,,000014         MOVNI  TAC,  RUNQ             ;
145772 / 202044,,020574         MOVEM  TAC,JOBQUE(J)          ;
145773 / 201044,,021660         MOVEI  TAC,  QJOB(J)          ;
145774 / 700600,,000400          CONO   PI, PIOFF             ;
145775 / 332001,,000000         SKIPE            (TAC)        ;
145776 / 254000,,146001          JRST      DILIN0             ;
145777 / 250040,,021660          EXCH  TAC,  QJOB             ;
146000 / 562060,,021660         HRROM  TAC,@  QJOB            ;
                       DILIN0:
146001 / 700600,,000200          CONO   PI,  PION             ;
                       DILIN1:
146002 / 200200,,020112          MOVE    J,  DILJ             ;
146003 / 254000,,145747          JRST      DILXIT             ;
                       DILACT:
146004 / 602040,,000400          TRNE  TAC,000400             ;;IF NOT OK,
146005 / 602040,,002040          TRNE  TAC,002040             ;;OR ANY ERRORS
146006 / 256002,,146010           XCT      DILERP(LINE)       ;;THEN REPORT ERROR
146007 / 254000,,145747          JRST      145747             ;;I WONDER WHAT WAS WRONG?
                       DILERP:
146010 / 254000,,146011          JRST      146011             ;;REPORT TO TTY
                       DILERT:
146011 / 200042,,145651          MOVE  TAC,DILTTY(LINE)       ;
146012 / 336041,,032347         SKIPN  TAC,TTYTAB(TAC)        ;;JUST IN CASE
146013 / 254000,,145747          JRST      145747             ;;FOO
146014 / 202200,,020112         MOVEM    J,  DILJ             ;
146015 / 205200,,200000         MOVSI    J,IODERR             ;
146016 / 436201,,000002          IORM    J,DEVIOS(TAC)        ;;FLAG ERROR TO TTY
146017 / 200200,,020112          MOVE    J,  DILJ             ;
146020 / 254000,,145747          JRST      DILXIT             ;
                       ;IFN DILNUM
146021 /               ;: TTYSER[J17,SYS] EOF.
146021 /               ;: LINED[J17,SYS]
146021 /                 ;::   BEGIN STANFO.TTYSER.LINED.
                       ;;STATUS BITS (LEFT HALF OF I).
                       ;; NOW SOME DISPLAY OPCODES AND MACROS FOR GENERATING DP INSTRS.
                       XDEL:
146021 / 003000,,000000                                       ;;X-SIZE OF A SIZE 2 CHARACTER, POSTIONED AT THE X-FIELD.
                       XDEL2:
146022 / 001400,,000000                                       ;;ONE HALF OF ABOVE.
                       KBDED:
146023 / 200240,,000002          MOVE  DAT,000002             ;;GET DPY NO. AND LINTAB BITS INTO DAT.
146024 / 200205,,012567          MOVE    I,012567(DAT)        ;;LOAD I WITH PRT. TO CONTROL BLOCK AND BITS
146025 / 621200,,070000           TLZ    I,070000             ;
146026 / 476004,,000124         SETOM       LEINV(I)          ;; SET BUFFER INVALID
146027 / 476004,,000123         SETOM       LEACT(I)          ;; MAKE SURE WE STICK AROUND FOR ANOTHER MINUTE
146030 / 603200,,000200          TLNE    I,000200             ;;Loser looking over our shoulder ?
146031 / 260140,,146056         PUSHJ    P,146056             ;;Hold up chr. for him to see. Hope he likes it.
146032 / 260140,,146072         PUSHJ    P,146072             ;; DO LINE EDITOR BIT
146033 / 402004,,000124         SETZM       LEINV(I)          ;
146034 / 623200,,020000          TLZE    I,020000             ;; WAS THIS A SILENT COMMAND?
146035 / 254000,,146041          JRST      146041             ;; YES, JUST LEAVE QUIETLY
146036 / 603200,,010000          TLNE    I,010000             ;; HAS THE TEXT BEEN CHANGED?
146037 / 260140,,147642         PUSHJ    P,147642             ;; NO, JUST UPDATE THE CURSOR
146040 / 623200,,010000          TLZE    I,NOTEXT             ;
                       KBDX1:
146041 / 332004,,000125         SKIPE      LEWAKE(I)          ;; DID WE CAUSE A TRANSFER TO ABORT?
146042 / 260140,,147641         PUSHJ    P,147641             ;; YES, UPDATE BOTH
146043 / 402004,,000125         SETZM      LEWAKE(I)          ;; CLEAR ABORT FLAG
146044 / 550244,,000015          HRRZ  DAT,PRGNUM(I)          ;; PICK UP DPY NUMBER
146045 / 502205,,012607          HLLM    I, LETAB(DAT)        ;
146046 / 603200,,000001          TLNE    I,000001             ;;ARE WE CURRENTLY ACTIVATING SOMETHING?
146047 / 263140,,000000          POPJ    P,                   ;;YES, SNEAK WILL GET WOKEN UP LATER!
146050 / 603000,,200000          TLNE      200000             ;; IN SNEAK WAIT?
146051 / 337004,,000106         SKIPG       CCPOS(I)          ;; ANYTHING FOR HIM TO SEE?
146052 / 263140,,000000          POPJ    P,                   ;
                       KBDX2:
151541 / 600000,,010000           XWD TTYIOW!SNKWAT,IOACT     ;
146053 / 200000,,151541          MOVE      151541             ;;YES, CLEAR FLAGS
146054 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
146055 / 254000,,046105          JRST      046105             ;;BRING HIM OUT OF WAIT
                       LSRSEE:
146056 / 261140,,000005          PUSH    P,   DAT             ;
146057 / 201246,,000016         MOVEI  DAT,TTIBUF(DDB)        ;
146060 / 260140,,140614         PUSHJ    P,140614             ;;Put chr. in loser's input buffer.
146061 / 255000,,000000          JFCL                         ;
146062 / 200646,,000023          MOVE  AC1,TIFCTR(DDB)        ;
146063 / 307640,,000030          CAIG  AC1,000030             ;;Is his buffer getting full ?
146064 / 607000,,400000          TLNN      400000             ;;Is he waiting for input ?
146065 / 254000,,146070          JRST      146070             ;;No.
146066 / 260140,,141573         PUSHJ    P,141573             ;;Prepare to activate loser.
146067 / 260140,,146053         PUSHJ    P,146053             ;;Wake him up.
                       LSRSEX:
146070 / 262140,,000005           POP    P,   DAT             ;
146071 / 263140,,000000          POPJ    P,                   ;
                       KBDBEG:
                       ;DONT	MOVE AC2,TIME		; PICK UP TIME OF DAY
                       ;SAVE	SKIPN DPKTIM(I)		; HAS THE TIME BEEN STORED YET?
                       ;TIME	MOVEM AC2,DPKTIM(I)	; NO, DO SO
146072 / 332004,,000040         SKIPE         III(I)          ;
146073 / 254000,,146102          JRST      KBDBG1             ;
146074 / 200744,,000017          MOVE  AC3, CURPP(I)          ;
146075 / 200717,,000013          MOVE  AC2,DPHPOS(AC3)        ;
146076 / 335004,,000007        SKIPGE       LEPOS(I)          ;
146077 / 634700,,000016          TDZA  AC2,   AC2             ;
146100 / 270717,,000052           ADD  AC2,LNLNGT(AC3)        ;
146101 / 202704,,000042         MOVEM  AC2,PPHPOS(I)          ;
                       KBDBG1:
146102 / 602400,,010000          TRNE  CHR, 10000             ;
146103 / 254000,,146712          JRST      146712             ;;<ESC>SOMETHING
146104 / 606400,,000177          TRNN  CHR,000177             ;;IS THIS MAYBE A CALL?
146105 / 254000,,146137          JRST      146137             ;;A CALL WILL BE A NULL NOW.
146106 / 321200,,146112         JUMPL    I,146112             ;;IS THIS THE FIRST CHAR OF A LINE?
146107 / 603200,,000001          TLNE    I,000001             ;;YES, IS LAST LINE IN USER BUFFER YET?
146110 / 254000,,037376          JRST      037376             ;;NO, JUST IGNORE HIM
146111 / 260140,,147321         PUSHJ    P,147321             ;;CLEANSE THE WORLD
                       NOINIT:
146112 / 405400,,000177          ANDI  CHR,000177             ;;REMOVE CTRL BITS FROM CHR.
146113 / 301400,,000141          CAIL  CHR,000141             ;;IS IT A LOWER CASE LETTER ?
146114 / 303400,,000172         CAILE  CHR,000172             ;
146115 / 254000,,146120          JRST      146120             ;;NO.
                       ;	TLNN IOS,TPMON		;YES. IF MONITOR MODE OR
146116 / 607240,,000020          TLNN  DAT,000020             ;; NOT FULL CHAR. SET MODE,
146117 / 275400,,000040          SUBI  CHR,000040             ;; CONVERT TO UPPER CASE.
                       LE20:
146120 / 623200,,000400          TLZE    I,000400             ;;WAS LAST CHR. AN S OR K COMMAND ?
146121 / 254000,,146654          JRST      146654             ;;YES.
146122 / 302400,,000177          CAIE  CHR,000177             ;;IF IT'S A BACKSPACE, PRETEND IT HAS CTRL 1.
146123 / 306500,,000001          CAIN UCHN,000001             ;;DO WE HAVE CTRL 1 ONLY ?
146124 / 603000,,001000          TLNE      001000             ;;YES. IS EDITOR DISABLED ?
146125 / 254000,,146222          JRST      146222             ;;NOT A COMMAND. GO PUT IT IN BUFFER.
146126 / 307400,,000071          CAIG  CHR,000071             ;;IS IT A DIGIT ?
146127 / 305400,,000060         CAIGE  CHR,000060             ;
146130 / 254000,,146162          JRST      146162             ;;NO.
146131 / 200644,,000116          MOVE  AC1,NUMARG(I)          ;;YES. CTRL NUMBERS ARE PART OF REPEAT ARGUMENT.
146132 / 221640,,000012         IMULI  AC1,000012             ;;DO DECIMAL CONVERSION.
146133 / 271650,,777720          ADDI  AC1,777720(CHR)        ;
146134 / 405640,,000777          ANDI  AC1,000777             ;;DON'T LET IT GET TOO BIG.
146135 / 202644,,000116         MOVEM  AC1,NUMARG(I)          ;
146136 / 263140,,000000          POPJ    P,                   ;
                       LECCN:
146137 / 261140,,000004          PUSH    P,000004             ;; SAVE THE DPY PROGRAM HEADER ADDRESS
146140 / 260140,,142730         PUSHJ    P,RECINB             ;
146141 / 262140,,000004           POP    P,     I             ;
146142 / 550240,,000002          HRRZ  DAT,000002             ;; RECINB CLOBBERS THIS
146143 / 400640,,000000          SETZ  AC1,                   ;
146144 / 250644,,000031          EXCH  AC1,DPHOLD(I)          ;
146145 / 322640,,146153         JUMPE  AC1,LFLUSH             ;
146146 / 550644,,000015          HRRZ  AC1,PRGNUM(I)          ;
152352 / 132473,,000020           XWD UNHOLD,DPYL0            ;
146147 / 270640,,152352           ADD  AC1,152352             ;
146150 / 700600,,000400          CONO   PI, PIOFF             ;
146151 / 136640,,013624          IDPB  AC1,  CLKQ             ;
146152 / 700600,,000200          CONO   PI,  PION             ;
                       LFLUSH:
146153 / 261140,,000006          PUSH    P,000006             ;;SAVE AN AC
146154 / 201304,,000035         MOVEI  DDB,   LEB(I)          ;;TURN OFF EDITOR BUFFER BY
146155 / 505300,,000020          HRLI  DDB,000020             ;;PUTTING A RETURN JUMP
146156 / 206304,,000037         MOVSM  DDB, LEPPV(I)          ;;ON TOP OF THE POSITION VECTOR.
                       ;	PUSHJ P,INIT1		;COMMENTED OUT BY FW SO CTRL-CR WILL WORK
146157 / 262140,,000006           POP    P,   DDB             ;
146160 / 553205,,012567         HRRZS    I,012567(DAT)        ;;RESET STATUS
146161 / 263140,,000000          POPJ    P,                   ;
                       LEC1:
146162 / 322500,,146166         JUMPE UCHN,  LECB             ;
146163 / 200640,,146021          MOVE  AC1,146021             ;;GET X DIMENSION OF A CHR.
146164 / 623200,,000004          TLZE    I,000004             ;;LEAVE INSERT MODE, IF WE ARE IN IT.
146165 / 260140,,146575         PUSHJ    P,146575             ;;READJUST CURSOR POSITION.
                       LECB:
146166 / 336644,,000116         SKIPN  AC1,NUMARG(I)          ;;DID GUY TYPE RPT ARG ?
146167 / 350644,,000116           AOS  AC1,NUMARG(I)          ;;NO. USE 1.
146170 / 306400,,000177          CAIN  CHR,   177             ;
146171 / 254000,,146532          JRST      146532             ;;BACKSPACE.
146172 / 306400,,000040          CAIN  CHR,000040             ;
146173 / 254000,,146471          JRST      146471             ;;CTRL1 SPACE.
146174 / 306400,,000014          CAIN  CHR,    14             ;
146175 / 254000,,146215          JRST       LECFF             ;
146176 / 603200,,000002          TLNE    I,000002             ;; AT END OF LINE?
146177 / 254000,,146222          JRST      146222             ;; YES, USER GETS TO SEE CTRL LETTERS.
146200 / 620440,,000040           TRZ DSER,000040             ;;CHANGE LOWER CASE LETTERS TO UPPER.
146201 / 306440,,000104          CAIN DSER,000104             ;;COMPARE UNSHIFTED CHAR.
146202 / 254000,,146604          JRST        LECD             ;
146203 / 306440,,000111          CAIN DSER,000111             ;
146204 / 254000,,146570          JRST        LECI             ;
146205 / 306400,,000011          CAIN  CHR,000011             ;;A TAB ?
146206 / 254000,,146470          JRST        LECT             ;
146207 / 306440,,000113          CAIN DSER,000113             ;
146210 / 665200,,001000          TLOA    I,KILLBT             ;
146211 / 306440,,000123          CAIN DSER,000123             ;
146212 / 665200,,000400          TLOA    I,SRCHBT             ;
146213 / 254000,,146222          JRST      146222             ;;RANDOM CTRL LETTER.
146214 / 254000,,146510          JRST      146510             ;;STORE NEW BITS IN I AND EXIT.
                       LECFF:
146215 / 201640,,000310         MOVEI  AC1,000310             ;;SIMULATE 200 CTRL BS'S
146216 / 202644,,000116         MOVEM  AC1,NUMARG(I)          ;
146217 / 254000,,146532          JRST        LEBS             ;
                       LE2CR:
146220 / 260140,,146470         PUSHJ    P,146470             ;;SIMULATE A CTRL TAB (GO TO END OF LINE).
146221 / 201400,,000015         MOVEI  CHR,000015             ;; RESTORE THE CR THAT MAKECR CLOBBERS
                       LE2:
                       ;;HERE IF CHR HAS NO CTRL1 BIT.
146222 / 607200,,000002          TLNN    I,000002             ;;AT END OF LINE ?
146223 / 254000,,146251          JRST      146251             ;;NO.
146224 / 603200,,004000          TLNE    I,004000             ;;ARE WE RE-EDITING THIS LINE ?
146225 / 302400,,000015          CAIE  CHR,000015             ;;YES. DON'T PUT ANOTHER CR AT ITS END.
146226 / 334000,,000000         SKIPA                         ;
146227 / 254000,,147426          JRST      147426             ;;JUST ACTIVATE GUY WHEN HE TYPES CR AT A RE-EDITED LINE.
146230 / 260140,,146324         PUSHJ    P,146324             ;;PLACE CHAR. IN BUFFER.
146231 / 202044,,000107         MOVEM  TAC, FCPOS(I)          ;;UPDATE FINAL CHAR. POS. CTR.
146232 / 327500,,147426         JUMPG UCHN,147426             ;;ACTIVATE ON ANY CTRL BITS AT EOL.
                       LE2X:
146233 / 200050,,141054          MOVE  TAC,SPCTAB(CHR)        ;;SPECIAL BITS.
146234 / 607040,,024000          TLNN  TAC,024000             ;;A BREAK CHAR. ?
146235 / 603000,,001000          TLNE      001000             ;;IS EVERY CHAR. AN ACTIVATOR ?
146236 / 254000,,147426          JRST      147426             ;;YES.
146237 / 623200,,200000          TLZE    I,200000             ;; ARE WE OUT OF BUFFER SPACE?
146240 / 254000,,147426          JRST      147426             ;; YES, ACTIVATE NOW
146241 / 603240,,000100          TLNE  DAT,000100             ;;ARE WE IN SPECIAL ACTIVATION MODE?
146242 / 603000,,000400          TLNE       TPMON             ;
146243 / 254000,,146246          JRST      146246             ;;NO
146244 / 260140,,141033         PUSHJ    P,141033             ;;TEST FOR BREAK.
146245 / 304000,,000000          CAIA                         ;
                       LE2XA:
146246 / 602500,,000001          TRNE UCHN,000001             ;;YES. ANY CTRL BITS ?
146247 / 254000,,147426          JRST      147426             ;;YES.
146250 / 254000,,146506          JRST        LECX             ;
                       LE2A:
146251 / 606500,,000002          TRNN UCHN,000002             ;;INSERT CHAR. IF CTRL 2. OR CTRL1 (OR BOTH)
146252 / 603200,,000004          TLNE    I,000004             ;;ARE WE IN INSERT MODE ?
146253 / 254000,,146301          JRST      146301             ;;YES.
146254 / 306400,,000015          CAIN  CHR,    15             ;
146255 / 254000,,146220          JRST      146220             ;;CR'S GO AT END OF LINE.
146256 / 602500,,000001          TRNE UCHN,000001             ;;NOW TEST CTRL BIT 1
146257 / 254000,,146301          JRST      146301             ;;INSERT
                       LEOV:
146260 / 261140,,000010          PUSH    P,000010             ;;WE'RE OVER-STRIKING. SAVE CHAR.
146261 / 201640,,000001         MOVEI  AC1,000001             ;;FAKE A RPT. ARG. OF 1.
146262 / 200044,,000120          MOVE  TAC,LEPNT1(I)          ;;IF WE ARE ABOUT TO OVERSTRIKE
                       LEOVS:
146263 / 134700,,000001          ILDB  AC2,000001             ;;A TAB, AND IF THE TAB IS MORE
146264 / 322700,,146263         JUMPE  AC2,146263             ;
146265 / 302400,,000011          CAIE  CHR,000011             ;;ALWAYS OVERTYPE IF NEW CHAR IS TAB
146266 / 302700,,000011          CAIE  AC2,000011             ;; IS THIS A TAB?
146267 / 254000,,146277          JRST      146277             ;; NO, JUST GO AHEAD AND OVERSTRIKE.
146270 / 134740,,000001          ILDB  AC3,000001             ;;WE WILL INSERT INSTEAD.
146271 / 322740,,146270         JUMPE  AC3,146270             ;; NO NULLS, PLEASE.
146272 / 302740,,000040          CAIE  AC3,000040             ;; IS THIS REALLY A TAB OR A LONG LINE CRLF?
146273 / 254000,,146316          JRST      146316             ;; IS LONG LINE CRLF, READ PAST IT
146274 / 134740,,000001          ILDB  AC3,000001             ;; PICK UP CHARACTER PAST SPACE
146275 / 322740,,146274         JUMPE  AC3,146274             ;
146276 / 306740,,000011          CAIN  AC3,000011             ;;YES. MORE THAN ONE SPACE ?
                       LEOVD:
146277 / 260140,,146604         PUSHJ    P,146604             ;;DELETE NEXT CHR. IN LINE.
146300 / 262140,,000010           POP    P,000010             ;;NOW INSERT NEW ONE.
                       LEINS:
146301 / 661200,,100000           TLO    I,100000             ;; FORCE REPOSITIONING OF THE LONG LINE CRLF
146302 / 302500,,000002          CAIE UCHN,000002             ;;IF INSERT VIA META,
146303 / 254000,,146307          JRST      LEINS1             ;
146304 / 201500,,000000         MOVEI UCHN,                   ;; DON'T LET IT ACTIVATE IN SPECIAL ACT MODE
146305 / 260140,,141033         PUSHJ    P,141033             ;; UNLESS IT WOULD'VE WITHOUT META
146306 / 201500,,000002         MOVEI UCHN, CBIT2             ;
                       LEINS1:
146307 / 260140,,146324         PUSHJ    P,146324             ;;PLACE NEW CHR. IN LINE.
146310 / 350004,,000107           AOS       FCPOS(I)          ;;INC. TOTAL CHR. COUNT.
146311 / 211757,,000001         MOVNI  AC3,     1(AC3)        ;;- NO. OF COLUMNS INSERTED.
146312 / 200104,,000120          MOVE TAC1,LEPNT1(I)          ;;GET CURRENT POINTER.
146313 / 260140,,146616         PUSHJ    P,146616             ;;GO FIDDLE NEXT TAB IN LINE.
146314 / 255000,,000000          JFCL                         ;
146315 / 254000,,146233          JRST        LE2X             ;
                       LEOVSC:
146316 / 134740,,000001          ILDB  AC3,000001             ;; PICK UP NEXT CHARACTER
146317 / 302740,,000011          CAIE  AC3,000011             ;; IS IT THE FINAL TAB YET?
146320 / 254000,,146316          JRST      146316             ;; NO, LOOK SOME MORE
146321 / 254000,,146263          JRST      146263             ;; YES, NOW LOOK AGAIN.
                       ;;SUBROUTINES FOR INSERTING CHARACTERS IN THE LINE.
                       PUTLF:
146322 / 201400,,000012         MOVEI  CHR,000012             ;;INVENT A LINE FEED.
146323 / 350004,,000107           AOS       FCPOS(I)          ;
                       PUTCHR:
146324 / 403744,,000116         SETZB  AC3,NUMARG(I)          ;;CLEAR REPEAT ARG.
146325 / 260140,,146375         PUSHJ    P,146375             ;;PLACE CHAR. INTO LINE.
146326 / 200700,,146021          MOVE  AC2,146021             ;;PREPARE TO MOVE CURSOR.
146327 / 306400,,000011          CAIN  CHR,000011             ;;DID WE INSERT A TAB ?
146330 / 260140,,146362         PUSHJ    P,146362             ;;YES.
146331 / 272704,,000037          ADDM  AC2, LEPPV(I)          ;;MOVE CURSOR OVER ONE PLACE.
146332 / 350444,,000105           AOS DSER,LEHPOS(I)          ;
146333 / 303440,,000110         CAILE DSER,000110             ;;ARE WE AT RIGHT SIDE OF SCREEN ?
146334 / 260140,,147407         PUSHJ    P,147407             ;;YES. SHIFT THE LINE LEFT SOME.
146335 / 350044,,000106           AOS  TAC, CCPOS(I)          ;;CURRENT POSITION IN CHARS.
146336 / 306400,,000015          CAIN  CHR,000015             ;;IS IT A CR ?
146337 / 254000,,146322          JRST      146322             ;;YES.
146340 / 332004,,000040         SKIPE         III(I)          ;; IS THIS A DD DISPLAY?
146341 / 263140,,000000          POPJ    P,                   ;; NO, LEAVE NOW
146342 / 261140,,000017          PUSH    P,000017             ;; SAVE NUMBER OF CHARACTERS INSERTED
146343 / 200744,,000017          MOVE  AC3, CURPP(I)          ;
146344 / 200644,,000042          MOVE  AC1,PPHPOS(I)          ;;GET INITIAL X POSITION
146345 / 270644,,000105           ADD  AC1,LEHPOS(I)          ;; ADD IN LINE EDITOR'S HORIZONTAL POSITION
146346 / 302400,,000011          CAIE  CHR,000011             ;; WAS THE CHARACTER A TAB?
146347 / 254000,,146356          JRST      146356             ;; NO, BREAK ONLY IF EVENLY AT END OF LINE
146350 / 271640,,000004          ADDI  AC1,000004             ;; CENTER TAB ON END OF SCREEN
146351 / 230657,,000052          IDIV  AC1,LNLNGT(AC3)        ;; SEE IF SE ARE NEAR THE END OF THE LINE
146352 / 307700,,000010          CAIG  AC2,000010             ;; WITHIN + OR - 4 CHARACTERS?
                       PUTCH2:
146353 / 661200,,100000           TLO    I,100000             ;; YES, DO LINE BREAKING CALCULATION THIS TIME
                       PUTCH3:
146354 / 262140,,000017           POP    P,000017             ;; RESTORE NUMBER OF CHARACTERS INSERTED
146355 / 263140,,000000          POPJ    P,                   ;
                       PUTCH1:
146356 / 275640,,000001          SUBI  AC1,     1             ;
146357 / 230657,,000052          IDIV  AC1,LNLNGT(AC3)        ;; SEE IF WE ARE EXACTLY AT THE END OF THE LINE
146360 / 322700,,146353         JUMPE  AC2,146353             ;; YES, BREAK OUR LINE THIS TIME
146361 / 254000,,146354          JRST      146354             ;; RESTORE ACCUMULATOR AND LEAVE
                       INSTAB:
146362 / 201400,,000040         MOVEI  CHR,000040             ;;A TAB. PREPARE TO (SIGH) SIMULATE IT.
146363 / 200644,,000105          MOVE  AC1,LEHPOS(I)          ;;GET LINE EDITOR HPOS
146364 / 336004,,000040         SKIPN         III(I)          ;
146365 / 270644,,000042           ADD  AC1,PPHPOS(I)          ;;MAKE IT ABSOLUTE ON DD
146366 / 411640,,000007        ANDCAI  AC1,000007             ;;HOW MANY SPACES TO INSERT (LESS 1).
146367 / 272644,,000105          ADDM  AC1,LEHPOS(I)          ;
146370 / 334740,,000015         SKIPA  AC3,000015             ;;REMEMBER THE MAGIC NUMBER.
                       INST1:
146371 / 272704,,000037          ADDM  AC2, LEPPV(I)          ;;MOVE CURSOR OVER ONE PLACE.
146372 / 260140,,146375         PUSHJ    P,146375             ;;INSERT A SPACE IN THE LINE.
146373 / 365640,,146371         SOJGE  AC1,146371             ;;BACK FOR MORE IF APPROPRIATE .
146374 / 201400,,000011         MOVEI  CHR,000011             ;;NOW FINISH OFF WITH ANOTHER TAB.
                       INSCHR:
146375 / 134044,,000120          ILDB  TAC,LEPNT1(I)          ;;LOOK AT NEXT CHR.
146376 / 322040,,146401         JUMPE  TAC,146401             ;;IF NULL, PUT NEW CHR. ON TOP OF IT.
146377 / 200044,,000120          MOVE  TAC,LEPNT1(I)          ;;GET PTR.
146400 / 260140,,146403         PUSHJ    P,146403             ;;INSERT A WORD OF NULLS.
                       INSCH1:
146401 / 137404,,000120           DPB  CHR,LEPNT1(I)          ;;PUT NEW CHR. IN LINE.
146402 / 263140,,000000          POPJ    P,                   ;
                       LEINSW:
146403 / 350444,,000110           AOS DSER, LELWD(I)          ;;UPDATE PTR. TO RETURN JMP.
146404 / 313444,,000115         CAMLE DSER, MAXPT(I)          ;;MORE ROOM IN BUFFER ?
146405 / 260140,,146422         PUSHJ    P,146422             ;; BUFFER NEARLY FULL, COMPRESS OUT ALL THE NULLS
                       INSW1:
146406 / 200111,,000000          MOVE TAC1,      (DSER)       ;;GET WORD FROM BUFFER AND
146407 / 202111,,000001         MOVEM TAC1,     1(DSER)       ;;MOVE IT UP ONE.
146410 / 303441,,000000         CAILE DSER,      (TAC)        ;;ARE WE DOWN TO WHERE WE WILL INSERT THE NULLS ?
146411 / 364440,,146406          SOJA DSER,146406             ;;NO.
146412 / 201440,,000000         MOVEI DSER,                   ;;PREPEARE TO INSERT NULLS.
146413 / 200100,,000001          MOVE TAC1,   TAC             ;
146414 / 136440,,000002          IDPB DSER,000002             ;;NULL NEXT CHAR. AFTER CURRENT ONE..
146415 / 136440,,000002          IDPB DSER,000002             ;;..AND ALSO NEXT 3 AFTER THAT.
146416 / 136440,,000002          IDPB DSER,  TAC1             ;
146417 / 136440,,000002          IDPB DSER,  TAC1             ;
146420 / 621200,,000010           TLZ    I,000010             ;;WE NO LONGER KNOW WHERE NEXT TAB IS.
146421 / 263140,,000000          POPJ    P,                   ;
                       ; THIS IS THE LINE EDITOR'S GARBAGE COLLECTOR. IT GOES THROUGH THE
                       ; BUFFER AND COMPRESSES OUT ALL THE NULL CHARACTERS. IT MUST RESET THE
                       ; POINTER TO THE LAST WORD IN THE TABLE, LELWD, MUST RESET THE BYTE POINTERS
                       ; IN LEPNT1 AND IN TAC.
                       GCOLL:
146422 / 261140,,000015          PUSH    P,000015             ;; FIRST, SAVE A FEW ACCUMULATORS
146423 / 261140,,000016          PUSH    P,   AC2             ;
146424 / 261140,,000017          PUSH    P,   AC3             ;
146425 / 261140,,000014          PUSH    P,   UUO             ;
146426 / 205640,,440700         MOVSI  AC1,440700             ;; NOW MAKE UP TWO BYTE POINTERS TO THE BUFFER
146427 / 205700,,440700         MOVSI  AC2,440700             ;
146430 / 541644,,000045          HRRI  AC1, LEBUF(I)          ;
146431 / 541704,,000045          HRRI  AC2, LEBUF(I)          ;
146432 / 400740,,000000          SETZ  AC3,                   ;; THIS WILL BE THE COUNT OF THE NULLS WE SQUEEZED OUT
                       GCOLL1:
146433 / 200600,,000015          MOVE  UUO,000015             ;; NOW, TEST FOR END OF BUFFER
146434 / 133000,,000014           IBP      000014             ;; SEE WHAT ADDRESS WE WOULD HAVE ENDED UP ON
146435 / 553000,,000014         HRRZS      000014             ;; CLEAN IT UP
146436 / 311604,,000110          CAML  UUO, LELWD(I)          ;; COMPARE TO END OF BUFFER
146437 / 254000,,146454          JRST      GCOLL4             ;
146440 / 134600,,000015          ILDB  UUO,000015             ;; PICK UP FIRST CHARACTER IN LINE
146441 / 326600,,146452         JUMPN  UUO,146452             ;; IF NOT A NULL, JUST STUFF IT IN THE BUFFER
146442 / 271740,,000001          ADDI  AC3,000001             ;; ANOTHER NULL, COUNT IT
                       GCOLL3:
146443 / 260140,,146445         PUSHJ    P,146445             ;; UPDATE BYTE POINTERS IF NECESSARY
146444 / 254000,,146433          JRST      146433             ;; GO BACK FOR MORE
                       PCHK:
146445 / 316644,,000120          CAMN  AC1,LEPNT1(I)          ;; ARE WE TO THE MAIN POINTER YET?
146446 / 202704,,000120         MOVEM  AC2,LEPNT1(I)          ;; YES, UPDATE IT
146447 / 316640,,000001          CAMN  AC1,000001             ;; HAVE WE GOTTEN TO THE POINTER IN TAC YET?
146450 / 202700,,000001         MOVEM  AC2,000001             ;; YES, UPDATE IT TOO
146451 / 263140,,000000          POPJ    P,                   ;
                       GCOLL2:
146452 / 136600,,000016          IDPB  UUO,000016             ;; PUT THE CHARACTER DOWN IN ITS NEW POSITION
146453 / 254000,,146443          JRST      146443             ;; GO BACK FOR MORE
                       GCOLL4:
146454 / 260140,,146445         PUSHJ    P,146445             ;; UPDATE FINAL POINTER
146455 / 305740,,000005         CAIGE  AC3,000005             ;; DID WE COLLECT A FULL WORD OF NULLS?
146456 / 661200,,200000           TLO    I,200000             ;; NO, ACTIVATE JOB NOW
146457 / 551716,,000001         HRRZI  AC2,     1(AC2)        ;; POINT FINAL POINTER TO LAST WORD IN BUFFER
146460 / 200624,,000110          MOVE  UUO,@ LELWD(I)         ;; PICK UP RETURN JUMP
146461 / 202616,,000000         MOVEM  UUO,      (AC2)        ;; PUT IT DOWN IN ITS NEW PLACE
146462 / 202704,,000110         MOVEM  AC2, LELWD(I)          ;; AND THIS IS THE NEW END OF BUFFER POINTER
146463 / 262140,,000014           POP    P,000014             ;; RESTORE OUR ACCUMULATORS
146464 / 262140,,000017           POP    P,   AC3             ;
146465 / 262140,,000016           POP    P,   AC2             ;
146466 / 262140,,000015           POP    P,   AC1             ;
146467 / 263140,,000000          POPJ    P,                   ;
                       ;;ROUTINES TO PERFORM EDITING FUNCTIONS.
                       LECT:
146470 / 201640,,000310         MOVEI  AC1,000310             ;;A CTRL TAB. SIMULATE 200 CTRL SPACES.
                       LECSP:
146471 / 265040,,146521           JSP  TAC,146521             ;;CTRL SPACE. PREPARE TO MOVE CURSOR FORWARD.
146472 / 260140,,147244         PUSHJ    P,147244             ;;MOVE IT.
146473 / 000000,,147254                                       ;;MOVE FORWARD, PLEASE.
146474 / 661200,,010000           TLO    I,010000             ;; NOTE THAT WE HAVE ONLY CHANGED THE CURSOR POSITION, NOT THE TEXT
                       MVX1:
146475 / 202104,,000120         MOVEM TAC1,LEPNT1(I)          ;;UPDATE THE BYTE POINTER.
146476 / 200440,,000016          MOVE DSER,   AC2             ;
                       MVX2:
146477 / 220700,,146022          IMUL  AC2,146022             ;;CALC. AMOUNT TO MOVE CURSOR.
146500 / 242700,,000001           LSH  AC2,000001             ;;THIS IS TO HANDLE OVERFLOW.
                       SHIFT2:
146501 / 272704,,000037          ADDM  AC2, LEPPV(I)          ;;UPDATE THE POSITION VECTOR.
146502 / 273444,,000105          ADDB DSER,LEHPOS(I)          ;;UPDATE HORIZONTAL POS. CNT.
146503 / 307440,,000110          CAIG DSER,000110             ;;PAST RIGHT HAND MARGIN ?
146504 / 325440,,146506        JUMPGE DSER,146506             ;;OR MAYBE PAST LEFT ?
146505 / 260140,,147405         PUSHJ    P, SHIFT             ;
                       LECX:
146506 / 621200,,001400           TLZ    I,001400             ;
146507 / 402004,,000116         SETZM      NUMARG(I)          ;
                       LECX1:
146510 / 200744,,000042          MOVE  AC3,PPHPOS(I)          ;
146511 / 250744,,000111          EXCH  AC3, LSTHP(I)          ;; SEE THAT AS OUR NEW HORIZONTAL STARTING POSITION
146512 / 316744,,000111          CAMN  AC3, LSTHP(I)          ;; IS IT THE SAME AS LAST TIME
146513 / 623200,,100000          TLZE    I,100000             ;; OR HAS THIS LINE BEEN UNTOUCHED
146514 / 260140,,147655         PUSHJ    P,147655             ;; VIRGIN LINE OR DIFFERENT HORIZONTAL POSITION
146515 / 623200,,200000          TLZE    I,200000             ;; DO WE HAVE TO ACTIVATE NOW?
146516 / 254000,,147426          JRST      147426             ;; YES, DO SO
146517 / 502205,,012567          HLLM    I,012567(DAT)        ;;UPDATE THE STATUS BITS.
146520 / 263140,,000000          POPJ    P,                   ;
                       CKNFOR:
146521 / 663200,,000002          TLOE    I,000002             ;;AT END OF LINE ALREADY ?
146522 / 254000,,146506          JRST      146506             ;;YES. CAN'T MOVE FORWARD.
146523 / 270644,,000106           ADD  AC1, CCPOS(I)          ;;FIND POS. AFTER MOVE.
146524 / 315644,,000107         CAMGE  AC1, FCPOS(I)          ;;WILL MOVE TAKE US TO END OF LINE ?
146525 / 625200,,000002          TLZA    I,000002             ;;NO. RESET FLAG SAYING WE ARE THERE.
146526 / 200644,,000107          MOVE  AC1, FCPOS(I)          ;;YES. DON'T LET IT TAKE US PAST END.
146527 / 250644,,000106          EXCH  AC1, CCPOS(I)          ;;PUT BACK NEW POSITION.
146530 / 274644,,000106           SUB  AC1, CCPOS(I)          ;;GET -NO. OF PLACES TO MOVE.
146531 / 254001,,000000          JRST            (TAC)        ;;RETURN.
                       LEBS:
146532 / 306500,,000003          CAIN UCHN,000003             ;
146533 / 254000,,146222          JRST      146222             ;;LET USER SEE CTRL-META BS
146534 / 336004,,000106         SKIPN       CCPOS(I)          ;;BACKSPACE OR CTRL BACKSPACE.
146535 / 254000,,146506          JRST      146506             ;;AT START OF LINE.
146536 / 622500,,000002          TRZE UCHN, CBIT2             ;
146537 / 254000,,146542          JRST      146542             ;;META-BS ALWAYS DELETES
146540 / 607200,,000006          TLNN    I,000006             ;;ARE WE AT END OF LINE OR IN INSERT MODE ?
146541 / 541500,,000010          HRRI UCHN,000010             ;;NO. FORCE NON-DELETING BS.
146542 / 210644,,000116          MOVN  AC1,NUMARG(I)          ;;- RPT. ARG.
146543 / 272644,,000106          ADDM  AC1, CCPOS(I)          ;;POSITION AFTER MOVE.
146544 / 331704,,000106         SKIPL  AC2, CCPOS(I)          ;;WILL MOVE GO PAST START OF LINE 
146545 / 254000,,146550          JRST      146550             ;;NO.
146546 / 274640,,000016           SUB  AC1,000016             ;;YES. RE-ADJUST CNT. SO IT WON'T.
146547 / 402004,,000106         SETZM       CCPOS(I)          ;;MARK AT BEGINNING OF LINE.
                       BSP1:
146550 / 327500,,146554         JUMPG UCHN,146554             ;;CTRL BITS ?
                       BSP2:
146551 / 272644,,000107          ADDM  AC1, FCPOS(I)          ;;NO. WE WILL ACTUALLY DELETE CHRS.
146552 / 621200,,004000           TLZ    I,004000             ;;THIS IS FOR BENEFIT OF INIT4.
146553 / 634400,,000010          TDZA  CHR,000010             ;;SET CHR TO 0 SO MOVEIT WILL DELETE.
                       BSP3:
146554 / 621200,,000002           TLZ    I,000002             ;;CTRL BACKSPACE. NO LONGER ARE WE AT END OF LINE.
146555 / 260140,,147244         PUSHJ    P,MOVEIT             ;
146556 / 000000,,147261                                       ;;MOVE BACKWARD RIGHT AMOUNT.
146557 / 213440,,000016         MOVNS DSER,000016             ;;- NO. OF COLUMNS MOVED.
146560 / 661200,,010000           TLO    I,010000             ;; MARK CURSOR CHANGE ONLY
146561 / 327500,,146475         JUMPG UCHN,146475             ;;IF NON-DELETING BACKSPACE, JUST UPDATE CURSOR AND LEAVE.
146562 / 621200,,010000           TLZ    I,010000             ;; AHA, TEXT IS CHANGED TOO!
146563 / 202104,,000120         MOVEM TAC1,LEPNT1(I)          ;
146564 / 260140,,146616         PUSHJ    P, ADJTB             ;
146565 / 334700,,000011         SKIPA  AC2,  DSER             ;
146566 / 200700,,000011          MOVE  AC2,  DSER             ;
146567 / 254000,,146477          JRST        MVX2             ;
                       LECI:
146570 / 663200,,000004          TLOE    I,000004             ;;FLAG INSERT MODE.
146571 / 254000,,146506          JRST      146506             ;;ALREADY IN THAT MODE !
146572 / 661200,,020000           TLO    I,020000             ;; THIS IS A SILENT ONE
146573 / 260140,,146506         PUSHJ    P,146506             ;;UPDATE STATUS WORD.
146574 / 210640,,146021          MOVN  AC1,  XDEL             ;
                       INSP1:
146575 / 240640,,777777           ASH  AC1,777777             ;;FOR INSERT MODE, WE MOVE CURSOR BY
146576 / 272644,,000037          ADDM  AC1, LEPPV(I)          ;; 1/2 A CHAR. WIDTH.
152434 / 000004,,000037                                       ;
152434 / 161304,,000037 POINT 11,04000037,21                  ;
146577 / 135700,,152434           LDB  AC2,152434             ;
                       ;NOW THE Y POS.
146600 / 240640,,777746           ASH  AC1,777746             ;;(MOVE IT BY 1/4 CHAR. WIDTH.)
146601 / 274700,,000015           SUB  AC2,000015             ;;(MOVE IT IN OTHER DIRECTION,TOO.)
152434 / 000004,,000037                                       ;
152434 / 161304,,000037 POINT 11,04000037,21                  ;
146602 / 137700,,152434           DPB  AC2,152434             ;
146603 / 263140,,000000          POPJ    P,                   ;
                       LECD:
146604 / 265040,,146521           JSP  TAC,146521             ;;CTRL D. PREPARE TO MOVE FORWARD.
146605 / 272644,,000107          ADDM  AC1, FCPOS(I)          ;;DECREMENT NO. OF CHRS. IN LINE.
146606 / 272644,,000106          ADDM  AC1, CCPOS(I)          ;;DON'T INCREMENT THE CURRENT POSITION.
146607 / 201400,,000000         MOVEI  CHR,                   ;;SET TO DELETE...
146610 / 260140,,147244         PUSHJ    P,147244             ;;MOVE FORWARD, DELETING.
146611 / 000000,,147254                                       ;
146612 / 254000,,146613          JRST      146613             ;; ADJUST NEXT TAB
                       ; THIS ROUTINE ADJUSTS THE NEXT TAB, AS GIVEN BY THE BYTE POINTER IN TAC.
                       ; THE COUNT OF THE NUMBER OF COLUMNS THE LINE HAS BEEN MOVED BY IS IN AC3.
                       ADJNTB:
146613 / 260140,,146616         PUSHJ    P,146616             ;; ADJUST OUR TABS
146614 / 254000,,146506          JRST        LECX             ;
146615 / 254000,,146506          JRST        LECX             ;
                       ADJTB:
146616 / 607200,,000030          TLNN    I,000030             ;;DO WE KNOW ABOUT NEXT TAB ?
146617 / 260140,,147212         PUSHJ    P,147212             ;;NO. FIND OUT.
146620 / 607200,,000010          TLNN    I,000010             ;;IS THERE ONE ?
146621 / 263140,,000000          POPJ    P,                   ;;NO.
146622 / 405740,,000007          ANDI  AC3,000007             ;;COUNT MOD 8 OF CHRS. DELETED.
146623 / 322740,,037403         JUMPE  AC3,037403             ;;NO CHANGE IF MULTIPLE OF 8.
146624 / 200704,,000122          MOVE  AC2,NTABCT(I)          ;;GET SIZE OF NEXT TAB.
146625 / 270700,,000017           ADD  AC2,000017             ;;NEW SIZE OF NEXT TAB.
146626 / 200044,,000121          MOVE  TAC,NTABPT(I)          ;;PTR. TO LAST SPACE IN NEXT TAB.
146627 / 307700,,000010          CAIG  AC2,000010             ;;IS NEW SIZE TOO BIG ?
146630 / 254000,,146644          JRST      146644             ;;NO. TAB NEEDS TO GROW.
146631 / 275700,,000010          SUBI  AC2,    10             ;
146632 / 250704,,000122          EXCH  AC2,NTABCT(I)          ;;YES. TAB MUST SHRINK.
146633 / 274704,,000122           SUB  AC2,NTABCT(I)          ;;FIND OUT HOW MUCH TO SHRINK IT.
146634 / 201640,,000000         MOVEI  AC1,                   ;
                       LECD4A:
146635 / 137640,,000001           DPB  AC1,000001             ;;NULL ONE OF THE SPACES IN THIS TAB.
152300 / 070000,,000000           XWD 70000,0                 ;
146636 / 270040,,152300           ADD  TAC,152300             ;;DECREMENT POINTER.
146637 / 327040,,146641         JUMPG  TAC,146641             ;
151356 / 430000,,000001           XWD 430000,1                ;
146640 / 274040,,151356           SUB  TAC,151356             ;
146641 / 367700,,146635          SOJG  AC2,LECD4A             ;
                       LECD6:
146642 / 202044,,000121         MOVEM  TAC,NTABPT(I)          ;;STORE UPDATED PTR.
146643 / 254000,,037401          JRST      CPOPJ1             ;
                       LECD5:
146644 / 201640,,000040         MOVEI  AC1,000040             ;;PREPARE TO MAKE TAB GROW.
146645 / 202704,,000122         MOVEM  AC2,NTABCT(I)          ;;STORE NEW SIZE.
                       LECD5A:
146646 / 134100,,000001          ILDB TAC1,   TAC             ;
146647 / 322100,,146651         JUMPE TAC1,146651             ;;IS THERE A NULL NEXT ?
146650 / 260140,,146403         PUSHJ    P,146403             ;;NO. PUT SOME IN.
146651 / 137640,,000001           DPB  AC1,000001             ;;ADD A SPACE.
146652 / 367740,,146646          SOJG  AC3,LECD5A             ;
146653 / 254000,,146642          JRST       LECD6             ;
                       SEARCH:
146654 / 201640,,000001         MOVEI  AC1,000001             ;;PREPARE TO SEARCH FOR INDICATED CHR.
146655 / 202400,,000001         MOVEM  CHR,000001             ;;SAVE CHR. TO BE SEARCHED FOR.
146656 / 200744,,000120          MOVE  AC3,LEPNT1(I)          ;;MAKE COPY OF CURRENT POINTER.
146657 / 201100,,000017         MOVEI TAC1,000017             ;;PARAMETER FOR GETEM.
146660 / 260140,,146672         PUSHJ    P,146672             ;;SKIP OVER CURRENT CHR. BEFORE STARTING SEARCH.
                       SRCHL:
146661 / 260140,,146672         PUSHJ    P,146672             ;;GET NEXT CHR. FROM LINE.
146662 / 306400,,000012          CAIN  CHR,000012             ;;ARE WE AT END OF LINE ?
146663 / 254000,,146506          JRST      146506             ;;YES. DO NOTHING, CHR. NOT FOUND.
146664 / 316400,,000001          CAMN  CHR,000001             ;;HAVE WE FOUND IT ?
146665 / 373004,,000116         SOSLE      NUMARG(I)          ;;YES. IS THE REPEAT COUNT EXHAUSTED ?
146666 / 344640,,146661          AOJA  AC1,146661             ;;NO. COUNT PLACES MOVED AND LOOK SOME MORE.
146667 / 627200,,001000          TLZN    I,001000             ;;YES.  ARE WE KILLING OR JUST MOVEING UP TO IT ?
146670 / 254000,,146471          JRST      146471             ;;MOVEING.
146671 / 254000,,146604          JRST      146604             ;;KILLING.
                       GETEM:
146672 / 134402,,000000          ILDB  CHR,      (TAC1)       ;;GET A NON-NULL CHAR. FROM LINE.
146673 / 322400,,146672         JUMPE  CHR,146672             ;
146674 / 306400,,000011          CAIN  CHR,000011             ;;IS IT A TAB ?
146675 / 647200,,000100          TLCN    I,000100             ;;YUP. ALREADY INSIDE A TAB ?
146676 / 607200,,000100          TLNN    I,000100             ;;INSIDE A TAB ?
146677 / 254000,,146705          JRST      146705             ;; NO, EXIT
146700 / 302400,,000011          CAIE  CHR,000011             ;; ARE WE INSIDE A CRLF?
146701 / 306400,,000040          CAIN  CHR,000040             ;
146702 / 254000,,146710          JRST      146710             ;; NO. PASS OVER THE TAB.
146703 / 661200,,040000           TLO    I,040000             ;; YES, MARK THIS AS A LONG LINE CRLF
146704 / 254000,,146672          JRST      146672             ;; LOOP BACK FOR NEXT CHARACTER
                       GETEM1:
146705 / 623200,,040000          TLZE    I,040000             ;; ARE WE COMING OUT OF A CRLF?
146706 / 254000,,146672          JRST      146672             ;; YES, GET NEXT CHARACTER PAST IT
146707 / 263140,,000000          POPJ    P,                   ;; NO
                       GETEM2:
146710 / 621200,,040000           TLZ    I, CRBIT             ;
146711 / 254000,,146672          JRST       GETEM             ;
                       LEDESC:
146712 / 306400,,010044          CAIN  CHR, 10044             ;
146713 / 254000,,147007          JRST       CLEAR             ;
146714 / 306400,,010041          CAIN  CHR, 10041             ;
146715 / 254000,,147020          JRST       ESCHX             ;
146716 / 661200,,020000           TLO    I,020000             ;; THIS IS A SILENT TRANSFER
146717 / 620440,,000040           TRZ DSER,000040             ;; CHANGE LOWER TO UPPER CASE
146720 / 306440,,000106          CAIN DSER,000106             ;;AN F ?
146721 / 254000,,147152          JRST      147152             ;;YES. GO SEE ABOUT FCS MODE.
146722 / 306440,,000117          CAIN DSER,000117             ;
146723 / 254000,,147141          JRST        ESCO             ;
146724 / 306440,,000111          CAIN DSER,000111             ;
146725 / 254000,,147157          JRST        ESCI             ;
146726 / 306440,,000127          CAIN DSER,000127             ;
146727 / 254000,,147073          JRST        ESCW             ;
146730 / 306440,,000121          CAIN DSER,000121             ;
146731 / 254000,,147110          JRST      147110             ;;GET WHO LINE FOR NEXT JOB WITH SAME PROG NAME
146732 / 306440,,000130          CAIN DSER,000130             ;
146733 / 254000,,147166          JRST      147166             ;;SET OR CLEAR UPDATE BIT IN XTIME FOR THIS JOB
146734 / 306440,,000107          CAIN DSER,000107             ;
146735 / 254000,,147054          JRST        ESCG             ;
146736 / 306440,,000114          CAIN DSER,000114             ;
146737 / 254000,,147056          JRST        ESCL             ;
146740 / 306440,,000131          CAIN DSER,000131             ;
146741 / 254000,,147060          JRST        ESCY             ;
146742 / 306440,,000116          CAIN DSER,000116             ;
146743 / 254000,,147063          JRST        ESCN             ;
146744 / 306440,,000105          CAIN DSER,000105             ;
146745 / 254000,,147027          JRST        ESCE             ;
146746 / 306440,,000112          CAIN DSER,000112             ;
146747 / 254000,,147022          JRST        ESCJ             ;
146750 / 306440,,000103          CAIN DSER,000103             ;; CLEAR SCREEN?
146751 / 254000,,146767          JRST      146767             ;; YES, GO QUEUE UP AN ERASE REQUEST
146752 / 306440,,000120          CAIN DSER,000120             ;; REFRESH HIS PAGE PRINTER?
146753 / 254000,,146764          JRST      146764             ;; YES, GO QUEUE UP A PAGE PRINTER REQUEST
146754 / 332004,,000040         SKIPE         III(I)          ;; THE REST OF THESE COMMANDS ONLY APPLY TO DATA DISK
146755 / 254000,,146510          JRST      146510             ;; IF III, JUST IGNORE
146756 / 306440,,000110          CAIN DSER,000110             ;
146757 / 254000,,147042          JRST      147042             ;;HIDE (OR UNHIDE) HIS CHANNEL
146760 / 302440,,000122          CAIE DSER,000122             ;; REFRESH HIS LINE EDITOR?
146761 / 254000,,146510          JRST      146510             ;; NO, LEAVE
                       ESCR:
146762 / 621200,,030000           TLZ    I,030000             ;; QUEUE UP A COMBINED TEXT AND CURSOR TRANSFER
146763 / 254000,,146510          JRST       LECX1             ;
                       ESCP:
146764 / 321640,,147005         JUMPL  AC1,147005             ;;<BREAK>P DOES THE WORKS
146765 / 505700,,133016          HRLI  AC2,133016             ;; USE THE MAGIC CLOCK LEVEL ROUTINE FOR REFRESHING THE PAGE
146766 / 254000,,147000          JRST       ESCC1             ;
                       ; WE GET HERE IF THE LOSER TYPES <ESC>C OR <ESC>¬C WHICH CAUSES
                       ; HIS SCREEN (IF HE IS A DATA DISC TYPE) TO GET ERASED TO BLACK OR
                       ; WHITE RESPECTIVLY.
                       ESCC:
146767 / 332004,,000040         SKIPE         III(I)          ;
146770 / 254000,,146777          JRST       ESCC0             ;
146771 / 550704,,000017          HRRZ  AC2, CURPP(I)          ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
146772 / 205740,,010000         MOVSI  AC3,      (1B5)        ;; PICK UP BLACK BIT
146773 / 321640,,146776         JUMPL  AC1,146776             ;
146774 / 436756,,000004           ORM  AC3,  DDCW(AC2)        ;
146775 / 254000,,146777          JRST      146777             ;
146776 / 412756,,000004        ANDCAM  AC3,  DDCW(AC2)        ;
                       ESCC0:
146777 / 205700,,132750         MOVSI  AC2,132750             ;; USE CLOCK LEVEL ROUTINE IN DPYSER THAT QUEUES IT UP
                       ESCC1:
147000 / 541704,,000000          HRRI  AC2,      (I)          ;; PUT IN THE DPY PROGRAM HEADER ADDRESS
                       ESCC2:
147001 / 700600,,000400          CONO   PI, PIOFF             ;
147002 / 136700,,013624          IDPB  AC2,  CLKQ             ;
147003 / 700600,,000200          CONO   PI,  PION             ;
147004 / 254000,,146510          JRST       LECX1             ;
                       ; <BREAK>P CLEARS THE SCREEN AND REFRESHES BOTH THE PAGE
                       ; PRINTER AND THE LINE EDITOR.
                       BRKP:
147005 / 505700,,132743          HRLI  AC2, RFPCS             ;
147006 / 254000,,147000          JRST       ESCC1             ;
                       CLEAR:
147007 / 306500,,000001          CAIN UCHN,000001             ;; <CTRL>CLEAR?
147010 / 254000,,147034          JRST      147034             ;; YES, UNHOLD
147011 / 326500,,037403         JUMPN UCHN,037403             ;; NO, JUST FLUSH LINE UNLESS IT'S GOT <META>
                       ; (FALL THROUGH INTO LECLR)
                       ; THIS ROUTINE CLEARS THE LINE EDITOR BUFFER WITHOUT DISTURBING
                       ; ITS STATUS. THIS MEANS THAT THE INFORMATION AS TO WHETHER
                       ; THIS IS A RE-EDITED LINE IS PRESERVED.
                       LECLR:
147012 / 336004,,000107         SKIPN       FCPOS(I)          ;
147013 / 263140,,000000          POPJ    P,                   ;
147014 / 621200,,000032           TLZ    I,000032             ;
147015 / 260140,,147372         PUSHJ    P, INIT3             ;
147016 / 200644,,000107          MOVE  AC1, FCPOS(I)          ;; JUST DELETE THAT MANY CHARACTERS
147017 / 254000,,146604          JRST        LECD             ;
                       ; ROUTINE TO PUT PAGE PRINTER IN HOLD
                       ESCHX:
147020 / 476004,,000031         SETOM      DPHOLD(I)          ;
147021 / 254000,,146510          JRST       LECX1             ;
                       ; ROUTINE TO SET NUMBER OF GLITCHES BEFORE HOLD
                       ESCJ:
152334 / 000004,,000032                                       ;
152334 / 111104,,000032 POINT 9,04000032,26                   ;
147022 / 137640,,152334           DPB  AC1,152334             ;
147023 / 202644,,000034         MOVEM  AC1,GLHCNT(I)          ;
147024 / 606640,,777777          TRNN  AC1,777777             ;
147025 / 476004,,000034         SETOM      GLHCNT(I)          ;
147026 / 254000,,146510          JRST       LECX1             ;
                       ; SET NUMBER OF LINES BEFORE HOLD
                       ESCE:
152657 / 000004,,000032                                       ;
152657 / 221104,,000032 POINT 9,04000032,17                   ;
147027 / 137640,,152657           DPB  AC1,152657             ;
147030 / 202644,,000033         MOVEM  AC1, LHCNT(I)          ;
147031 / 606640,,777777          TRNN  AC1,777777             ;
147032 / 476004,,000033         SETOM       LHCNT(I)          ;
147033 / 254000,,146510          JRST       LECX1             ;
                       ; ROUTINE TO UNHOLD THE PAGE PRINTER
                       ESCU:
147034 / 400640,,000000          SETZ  AC1,                   ;
147035 / 250644,,000031          EXCH  AC1,DPHOLD(I)          ;
147036 / 322640,,146510         JUMPE  AC1, LECX1             ;
147037 / 550704,,000015          HRRZ  AC2,PRGNUM(I)          ;
152352 / 132473,,000020           XWD UNHOLD,DPYL0            ;
147040 / 270700,,152352           ADD  AC2,152352             ;
147041 / 254000,,147001          JRST       ESCC2             ;
                       ;SET OR CLEAR CONSOLE PRIVACY BIT
                       ESCH:
147042 / 205740,,400000         MOVSI  AC3,400000             ;
147043 / 544644,,000015           HLR  AC1,PRGNUM(I)          ;
147044 / 321640,,147052         JUMPL  AC1,147052             ;;BREAK-H MEANS UNHIDE
147045 / 612755,,014525          TDNE  AC3, DDTAB(AC1)        ;
147046 / 254000,,146510          JRST       LECX1             ;
147047 / 436755,,014525          IORM  AC3, DDTAB(AC1)        ;
147050 / 260140,,135275         PUSHJ    P,DDFLSH             ;
147051 / 254000,,146510          JRST       LECX1             ;
                       UNHIDE:
147052 / 412755,,014525        ANDCAM  AC3, DDTAB(AC1)        ;
147053 / 254000,,146510          JRST       LECX1             ;
                       ; ROUTINE TO SET PAGE PRINTER GLITCHES/PAGE
                       ESCG:
147054 / 505700,,131155          HRLI  AC2,PPGSET             ;
147055 / 254000,,147061          JRST       ESCY1             ;
                       ; LINES/GLITCH
                       ESCL:
147056 / 505700,,131171          HRLI  AC2,PPLSET             ;
147057 / 254000,,147061          JRST       ESCY1             ;
                       ; Y-POSITION
                       ESCY:
147060 / 505700,,131203          HRLI  AC2,PPYSET             ;
                       ESCY1:
147061 / 552644,,000117         HRRZM  AC1, LEARG(I)          ;
147062 / 254000,,147000          JRST       ESCC1             ;
                       ; NORMALIZE PAGE PRINTER
                       ESCN:
147063 / 200440,,000015          MOVE DSER,   AC1             ;
147064 / 571042,,777752         HRREI  TAC,777752(LINE)       ;
147065 / 321040,,147067         JUMPL  TAC,147067             ;
147066 / 260140,,143264         PUSHJ    P,143264             ;;NORMALIZE VDS ON DD
147067 / 205700,,132742         MOVSI  AC2,LEERSN             ;
147070 / 321440,,147000         JUMPL DSER, ESCC1             ;
147071 / 205700,,131137         MOVSI  AC2,PPNSET             ;
147072 / 254000,,147000          JRST       ESCC1             ;
                       ;ESCAPE W,Q.
                       ESCW:
147073 / 325640,,147077        JUMPGE  AC1,147077             ;;TURN ON WHO LINE?
147074 / 402004,,000143         SETZM      WHOTAB(I)          ;;TURN OFF WHO LINE
147075 / 254000,,146510          JRST       LECX1             ;
                       ESCW2:
147076 / 621640,,777777           TLZ  AC1,777777             ;;THIS IS WHERE [ESC] # Q DOES [ESC] # W
                       ESCW1:
147077 / 606640,,777777          TRNN  AC1,777777             ;
147100 / 135640,,037575           LDB  AC1,037575             ;;GET JOB NUMBER OUT OF DDB IF NO ARGUMENT.
147101 / 301640,,000100          CAIL  AC1,000100             ;;LEGAL JOB?
147102 / 254000,,146510          JRST      146510             ;;NO
                       ;PUT INTO WHO TIME TABLE
147103 / 200715,,026114          MOVE  AC2,JBTSTS(AC1)        ;;GET JOB STATUS WORD.
147104 / 603700,,040000          TLNE  AC2,040000             ;;IS IT LOGGED IN?
147105 / 562644,,000143         HRROM  AC1,WHOTAB(I)          ;;YES, STORE JOB #.  ALSO PUT -1 IN INCR TIME SLOT.
147106 / 402004,,000144         SETZM      WHORUN(I)          ;;CLEAR TIME TO UPDATE RUNTIME NEXT
147107 / 254000,,146510          JRST      146510             ;;THAT'S ALL.
                       ESCQ:
147110 / 602640,,777777          TRNE  AC1,777777             ;;ANY ARGUMENT?
147111 / 254000,,147076          JRST      147076             ;;[ESC] # Q AND [BRK] # Q ARE SAME AS [ESC] # W
147112 / 336044,,000143         SKIPN  TAC,WHOTAB(I)          ;;GET NUMBER OF JOB ON WHO LINE
147113 / 135040,,037575           LDB  TAC,037575             ;;NO WHO LINE.  USE USER'S JOB.
147114 / 405040,,777777          ANDI  TAC,777777             ;;MAKE SURE TAC HAS ONLY THE JOB NUMBER
147115 / 322040,,146510         JUMPE  TAC,146510             ;;IF NOT LOGGED IN AND NO WHO LINE UP, FORGET IT
147116 / 550701,,027720          HRRZ  AC2,PRJPRG(TAC)        ;;GET PROGRAMMER NAME OF OLD WHO LINE JOB
147117 / 201740,,000001         MOVEI  AC3,000001             ;;ASSUME POSITIVE INCREMENT FOR GOING THRU TABLE
147120 / 325640,,147122        JUMPGE  AC1,147122             ;; UNLESS HE SAID [BRK] Q
147121 / 474740,,000000          SETO  AC3,                   ;; IN WHICH CASE WE USE NEGATIVE INCREMENT
147122 / 260140,,147126         PUSHJ    P,147126             ;;LOOK FROM TAC TO END OF TABLE
147123 / 431040,,000100          XORI  TAC,000100             ;;START OVER AT OTHER END OF TABLE
147124 / 260140,,147126         PUSHJ    P,147126             ;; AND LOOK THROUGH WHOLE TABLE
147125 / 254000,,146510          JRST      146510             ;;NO JOB FOUND WITH SAME PN, NOT EVEN ORIGINAL JOB.
                       ESCQ1:
147126 / 270040,,000017           ADD  TAC,000017             ;;MOVE ON TO NEXT JOB
147127 / 305040,,000100         CAIGE  TAC,000100             ;;AT END OF TABLE YET?
147130 / 327040,,147132         JUMPG  TAC,147132             ;; OR AT BEGINNING OF TABLE?
147131 / 263140,,000000          POPJ    P,                   ;;YES TO ONE OF THESE
147132 / 550641,,027720          HRRZ  AC1,PRJPRG(TAC)        ;;GET PROGRAMMER NAME FOR THIS JOB
147133 / 302656,,000000          CAIE  AC1,      (AC2)        ;;IS IT THE ONE WE ARE LOOKING FOR?
147134 / 254000,,147126          JRST      147126             ;;NO
147135 / 562044,,000143         HRROM  TAC,WHOTAB(I)          ;;YES!  SAVE JOB NUMBER.  -1 INTO INCR TIME.
147136 / 402004,,000144         SETZM      WHORUN(I)          ;; AND CLEAR TIME TO UPDATE RUNTIME NEXT
151763 / 000001,,000001                                       ;
147137 / 274140,,151763           SUB    P,151763             ;;DONT POPJ.  ADJUST STACK
147140 / 254000,,146510          JRST       LECX1             ;
                       ;ESCAPE	O,F,I,X.
                       ESCO:
147141 / 201000,,001000         MOVEI      001000             ;;ASSUME AN UN-↑O.
147142 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
147143 / 321640,,146510         JUMPL  AC1, LECX1             ;
147144 / 260140,,146510         PUSHJ    P,146510             ;;GET STATUS BITS STORED AND RESET.
147145 / 261140,,000004          PUSH    P,000004             ;; SAVE THE DPY PROGRAM HEADER
147146 / 260140,,144337         PUSHJ    P,144337             ;; DO A ↑O.
147147 / 260140,,143016         PUSHJ    P,143016             ;;AND MAKE SURE IT GETS OUT
147150 / 262140,,000004           POP    P,     I             ;
147151 / 263140,,000000          POPJ    P,                   ;
                       ESCF:
147152 / 321640,,147154         JUMPL  AC1,147154             ;
147153 / 665240,,000020          TLOA  DAT,000020             ;;TURN ON THE ↑F BIT (FULL CHR. SET).
147154 / 621240,,000020           TLZ  DAT,000020             ;;WRONG. TURN IT OFF.
147155 / 502245,,017717          HLLM  DAT,LINTAB(DAT)        ;
147156 / 254000,,146510          JRST       LECX1             ;
                       ; <ESC>I INTERRUPTS ON THE INTTTI BIT IN THE LEFT HALF
                       ESCI:
147157 / 205640,,000004         MOVSI  AC1,INTTTI             ;
147160 / 135700,,037575           LDB  AC2, PJOBN             ;
147161 / 616656,,033665          TDNN  AC1,JBTIEN(AC2)        ;
147162 / 254000,,146510          JRST       LECX1             ;
147163 / 436656,,033765           ORM  AC1,JBTIRQ(AC2)        ;
147164 / 476013,,023475         SETOM      INTREQ(PID)        ;
147165 / 254000,,146510          JRST       LECX1             ;
                       ESCX:
147166 / 135700,,037575           LDB  AC2,037575             ;;GET JOB NUMBER OF THIS GUY
147167 / 322700,,146510         JUMPE  AC2,146510             ;;IF YOU'RE NOT LOGGED IN, I CANT HELP YOU
147170 / 205040,,400000         MOVSI  TAC,400000             ;;THIS IS THE BIT WE WILL SET OR CLEAR
147171 / 326640,,147174         JUMPN  AC1,147174             ;;WAS IT PLAIN [ESC]X?
147172 / 412056,,031443        ANDCAM  TAC, XTIME(AC2)        ;;YES.  TURN OFF THE NO-UPDATE BIT IN XTIME
147173 / 254000,,146510          JRST      146510             ;;BYE
147174 / 602640,,777777          TRNE  AC1,777777             ;;WAS THERE AN ARGUMENT TO ESCAPE COMMAND?
147175 / 254000,,147200          JRST      147200             ;;YES
147176 / 436056,,031443           ORM  TAC, XTIME(AC2)        ;;NO.  MUST HAVE BEEN [BRK]X.  TURN ON NO-UPDATE FLAG
147177 / 254000,,146510          JRST       LECX1             ;
147200 / 400740,,000000          SETZ  AC3,                   ;
147201 / 553016,,012230         HRRZS      DSKOPS(AC2)        ;;MAKE ALL DISK OPS "RECENT"
147202 / 321640,,147207         JUMPL  AC1,147207             ;;WAS IT [ESC] OR [BRK]?
147203 / 335756,,031543        SKIPGE  AC3,JBTWAT(AC2)        ;;[ESC]1 X.  UPDATE JB2WAT
147204 / 270740,,024635           ADD  AC3,024635             ;;MAKE WAIT TIME HONEST
147205 / 507016,,012230          HRLS      DSKOPS(AC2)        ;;ZERO INCREMENTAL COUNT OF DISK OPERATIONS
147206 / 270056,,031243           ADD  TAC, TTIME(AC2)        ;;[ESC]1 X.  UPDATE XTIME AND SET NO-UPDATE BIT
                       ESCX1:
147207 / 202056,,031443         MOVEM  TAC, XTIME(AC2)        ;;[BRK]1 X MEANS CLEAR XTIME AND SET NO-UPDATE BIT
147210 / 202756,,031643         MOVEM  AC3,JB2WAT(AC2)        ;;SAVE NEW VALUE OF OLD WAIT TIME
147211 / 254000,,146510          JRST       LECX1             ;
                       FNTAB:
147212 / 661200,,000020           TLO    I,000020             ;;PREPARE TO FIND NEXT TAB IN LINE.
                       FNT1:
147213 / 134040,,000002          ILDB  TAC,000002             ;;LOOK AT NEXT CHR.
147214 / 306040,,000012          CAIN  TAC,000012             ;;ARE WE AT END OF LINE ?
147215 / 263140,,000000          POPJ    P,                   ;;YUP. RETURN LEAVING `NO TAB' BIT SET.
147216 / 302040,,000011          CAIE  TAC,000011             ;;A TAB ?
147217 / 254000,,147213          JRST      147213             ;;NO.
147220 / 200700,,000002          MOVE  AC2,000002             ;; SEE IF THIS TAB IS REALLY A LONG LINE CRLF
147221 / 134700,,000016          ILDB  AC2,000016             ;; PICK UP CHARACTER PAST TAB
147222 / 306700,,000040          CAIN  AC2,000040             ;; IS IT A SPACE?
147223 / 254000,,147230          JRST      147230             ;; YES, MUST BE REAL TAB
                       FNT4:
147224 / 134040,,000002          ILDB  TAC,000002             ;; NO, MUST BE LONG LINE CRLF. READ PAST IT.
147225 / 302040,,000011          CAIE  TAC,000011             ;; IS THIS A TAB?
147226 / 254000,,147224          JRST      147224             ;; NO, READ SOME MORE
147227 / 254000,,147213          JRST      147213             ;; YES, GET NEXT CHARACTER PAST CRLF
                       FNT3:
147230 / 201700,,000000         MOVEI  AC2,                   ;;COUNT NO. OF SPACES IN TAB.
147231 / 641200,,000030           TLC    I,000030             ;;SET BITS PROPERLY.
                       FNT2:
147232 / 134040,,000002          ILDB  TAC,  TAC1             ;
147233 / 322040,,147232         JUMPE  TAC,147232             ;; SKIP NULLS
147234 / 302040,,000040          CAIE  TAC,000040             ;;ARE WE OUT OF SPACES YET ?
147235 / 254000,,147240          JRST        FNT5             ;
147236 / 202104,,000121         MOVEM TAC1,NTABPT(I)          ;;STORE PTR. TO LAST SPACE IN TAB.
147237 / 344700,,147232          AOJA  AC2,147232             ;;NO. KEEP COUNTING.
                       FNT5:
147240 / 302040,,000011          CAIE  TAC,000011             ;; IS THIS REALLY THE TERMINATING TAB?
147241 / 254000,,147232          JRST      147232             ;; NO, GO BACK FOR MORE
147242 / 202704,,000122         MOVEM  AC2,NTABCT(I)          ;;STORE SIZE OF TAB.
147243 / 263140,,000000          POPJ    P,                   ;
                       ;;MOVEIT MOVES THE PTR. FORWARD OR BACKWARD BY THE NO. OF PLACES
                       ;; IN AC1, AND DELETES CHARS. PASSED OVER IF CHR=0.
                       MOVEIT:
147244 / 200104,,000120          MOVE TAC1,LEPNT1(I)          ;;GET CURRENT POINTER.
147245 / 403700,,000017         SETZB  AC2,   AC3             ;
147246 / 262140,,000011           POP    P,000011             ;;GET PTR. TO ARGUMENT.
147247 / 202643,,000001         MOVEM  AC1,     1(P)          ;;REMEMBER COUNT.
147250 / 336000,,000010         SKIPN      000010             ;; ARE WE DELETING?
147251 / 661200,,100000           TLO    I,100000             ;; YES, REDO THE LONG-LINE CRLF WHEN DONE
147252 / 621200,,000100           TLZ    I,000100             ;; CLEAR TAB BIT
147253 / 254031,,000000          JRST      @      (DSER)      ;;GO TO EITHER MVFOR OR MVBAK.
                       MVFOR:
147254 / 134040,,000002          ILDB  TAC,000002             ;;LOOK AT NEXT CHR.
147255 / 322040,,147254         JUMPE  TAC,147254             ;;IGNORE NULLS.
147256 / 326400,,147270         JUMPN  CHR,147270             ;;DON'T DELETE UNLESS CHR =0.
147257 / 137400,,000002           DPB  CHR,000002             ;;DELETE IT.
147260 / 254000,,147270          JRST         MVA             ;
                       MVBAK:
147261 / 135040,,000002           LDB  TAC,000002             ;;LOOK AT CURENT CHR.
147262 / 326400,,147264         JUMPN  CHR,147264             ;;DELETE IT IF APPROPRIATE,
147263 / 137400,,000002           DPB  CHR,  TAC1             ;
152300 / 070000,,000000           XWD 070000,0                ;
147264 / 270100,,152300           ADD TAC1,152300             ;;DECREMENT POINTER.
147265 / 327100,,147267         JUMPG TAC1,147267             ;
151356 / 430000,,000001           XWD 430000,1                ;
147266 / 274100,,151356           SUB TAC1,151356             ;
147267 / 322040,,147261         JUMPE  TAC,147261             ;;IF CURRENT CHR. WAS NULL,GET ANOTHER.
                       MVA:
147270 / 306040,,000011          CAIN  TAC,000011             ;;HAVE WE JUST ENCOUNTERED A TAB ?
147271 / 271740,,000001          ADDI  AC3,000001             ;;YES.
147272 / 606740,,000001          TRNN  AC3,000001             ;;ARE WE INSIDE A TAB ?
147273 / 254000,,147310          JRST      147310             ;; NO
147274 / 306040,,000011          CAIN  TAC,000011             ;; YES, IS THIS A REAL TAB OR A LONG LINE CRLF?
147275 / 344731,,000000          AOJA  AC2,@      (DSER)      ;
147276 / 306040,,000040          CAIN  TAC,000040             ;
147277 / 254000,,147317          JRST      147317             ;; MUST BE A REAL TAB, SET THE BIT THAT SAYS SO
147300 / 332000,,000010         SKIPE      000010             ;; IF WE ARE DELETING, WE MUST REPOSITION THE CRLF
147301 / 661200,,100000           TLO    I,100000             ;; DO SO BY PRETENDING THERE HAVEN'T BEEN ANY
147302 / 302040,,000015          CAIE  TAC,000015             ;; BUMP COUNT ONE AT THE CR TO MAKE THE ENTIRE CRLF INVISIBLE
147303 / 254031,,000000          JRST      @      (DSER)      ;; OTHERWISE, JUST LOOP AROUND
147304 / 603200,,000100          TLNE    I,000100             ;; IF THIS IS A LONG LINE CRLF ONLY, THEN
147305 / 254031,,000000          JRST      @      (DSER)      ;
147306 / 275640,,000001          SUBI  AC1,000001             ;; CORRECT COUNT
147307 / 344731,,000000          AOJA  AC2,@      (DSER)      ;
                       MVA1:
147310 / 621200,,000100           TLZ    I,XTABBT             ;
147311 / 341671,,000000          AOJL  AC1,@      (DSER)      ;; COUNT DOWN RPT. CNT AND LOOP.
147312 / 322740,,147314         JUMPE  AC3,147314             ;;ALL DONE. DID WE PASS ANY TABS ?
147313 / 621200,,000030           TLZ    I,000030             ;;YES. WE NO LONGER KNOW WHERE NEXT ONE IS.
147314 / 274703,,000001           SUB  AC2,     1(P)          ;;ADD NO. OF CHRS. PASSED TO NO. OF SPACES IN TABS PASSED.
147315 / 277700,,000017          SUBB  AC2,000017             ;;SUB. 2⊗NO. OF TABS. THIS (MIRABILE DICTU!) GIVES NO. OF COLUMNS MOVED.
147316 / 254011,,000001          JRST           1(DSER)       ;
                       MVA2:
147317 / 661200,,000100           TLO    I,XTABBT             ;
147320 / 344731,,000000          AOJA  AC2,@      (DSER)      ;
                       INIT2:
147321 / 200046,,000014          MOVE  TAC,ACTMOD(DDB)        ;;GET SPECIAL BITS
147322 / 606040,,000002          TRNN  TAC,000002             ;;SUPPRESS CTRL CR?
147323 / 302400,,000215          CAIE  CHR,000215             ;;HAS LOSER TYPED CTRL1 CR ?
147324 / 254000,,147360          JRST      147360             ;;NO. RESET EVERYTHING FOR NEW LINE.
147325 / 336004,,000120         SKIPN      LEPNT1(I)          ;; HAVE WE INITIALIZED AT LEAST ONCE?
147326 / 254000,,147360          JRST      147360             ;; NO, DO SO NOW.
147327 / 260140,,147641         PUSHJ    P,147641             ;; QUEUE UP A TRANSFER IF DD
                       INIT4:
147330 / 505200,,406000          HRLI    I,406000             ;
147331 / 402004,,000146         SETZM         LCH(I)          ;
147332 / 325500,,147335        JUMPGE UCHN,INIT4B             ;
147333 / 603240,,040000          TLNE  DAT,LERSEE             ;
147334 / 661200,,000200           TLO    I,SHLDRB             ;
                       ;LET LOSER EDIT PREVIOUS LINE SOME MORE.
                       INIT4B:
147335 / 201600,,000002         MOVEI  UUO,000002             ;;PREPARE TO REMOVE THE CR LF FROM END OF LINE.
                       INIT4A:
147336 / 135044,,000120           LDB  TAC,LEPNT1(I)          ;;(WE DON'T WANT TO LET THE LOSER EDIT THEM. )
147337 / 211640,,000001         MOVNI  AC1,000001             ;;TELL BACKSPACE ROUTINE TO DELETE ONE CHR.
147340 / 302040,,000012          CAIE  TAC,000012             ;;IF IT IS A LF ...
147341 / 306040,,000015          CAIN  TAC,000015             ;;... OR A CR ...
147342 / 260140,,147351         PUSHJ    P,147351             ;;... THEN WE THROW IT OUT.
147343 / 367600,,147336          SOJG  UUO,147336             ;;ALLOW FOR BOTH A LF AND A CR.
147344 / 137600,,136450           DPB  UUO,PLASTC             ;
147345 / 621200,,000020           TLZ    I,000020             ;;BS ROUTINE WILL HAVE SET THIS LOSER...
147346 / 336004,,000107         SKIPN       FCPOS(I)          ;;IS LINE EMPTY?
147347 / 661200,,000002           TLO    I,000002             ;;YES, TELL SOMEONE PLEASE!!!!!
147350 / 364140,,147372          SOJA    P,147372             ;;RESET ONLY THE POINTER POSITION, AND RETURN UPLEVEL.
                       ; THIS IS A ROUTINE FOR DELETING THE CRLF FROM THE END OF A LINE THAT
                       ; WE GOT FROM PTLOAD OR <CTRL-1>CR.
                       CRKILL:
147351 / 272644,,000107          ADDM  AC1, FCPOS(I)          ;; DECREMENT THE TOTAL NUMBER OF CHARACTERS IN THE BUFFER
147352 / 621200,,004000           TLZ    I,NOCRBT             ;
147353 / 400400,,000000          SETZ  CHR,                   ;; FLAG DELETING OPERATION TO MOVEIT
147354 / 260140,,147244         PUSHJ    P,147244             ;; BACK THE POINTER UP, DELETING THE CRLF AS IT GOES
147355 / 000000,,147261                                       ;
147356 / 202104,,000120         MOVEM TAC1,LEPNT1(I)          ;; STORE THE UPDATED POINTER
147357 / 263140,,000000          POPJ    P,                   ;
                       ; THIS IS THE INITIALIZE ROUTINE. HERE WE INITIALIZE ALL THE LINE
                       ; EDITOR VARIABLES
                       INITIT:
147360 / 201040,,000025         MOVEI  TAC,000025             ;;GET DPY CHAR. WORD WITH LINE TERMINATING CHR. IN IT.
147361 / 202044,,000045         MOVEM  TAC, LEBUF(I)          ;;PLACE IN FIRST WORD OF BUFFER.
147362 / 201044,,000035         MOVEI  TAC,   LEB(I)          ;; PUT RETURN JUMP IN SECOND WORD
147363 / 505040,,000020          HRLI  TAC,DISJMP             ;
147364 / 206044,,000046         MOVSM  TAC,000046(I)          ;
147365 / 402004,,000107         SETZM       FCPOS(I)          ;;NO. OF CHARS. IN LINE.
147366 / 505200,,400002          HRLI    I,400002             ;
147367 / 402004,,000146         SETZM         LCH(I)          ;
147370 / 201044,,000045         MOVEI  TAC, LEBUF(I)          ;;GET START OF LINE BUFFER.
147371 / 552044,,000110         HRRZM  TAC, LELWD(I)          ;;INIT. PTR. TO RETURN JMP.
                       INIT3:
147372 / 402004,,000105         SETZM      LEHPOS(I)          ;;HORIZONTAL POSITION.
147373 / 402004,,000116         SETZM      NUMARG(I)          ;; CLEAR THE REPEAT ARGUEMENT
147374 / 502205,,012567          HLLM    I,012567(DAT)        ;; STORE THE FLAG BITS BACK INTO THE LINE EDITOR TABLE
147375 / 402004,,000106         SETZM       CCPOS(I)          ;;CHARS. FROM START OF LINE.
                       ;MODE = `A' FOR ABSOLUTE.
                       ;TYPE = `I' FOR INVISIBLE.
                       ;2 = 0 IF OMITTED.
                       ;SAME FOR 2.
152126 / 000000,,000012                                       ;
152126 / 777777,,777774                                       ;
147376 / 200040,,152126          MOVE  TAC,152126             ;
147377 / 202044,,000037         MOVEM  TAC, LEPPV(I)          ;;INITIAL POS. OF CURSOR.
147400 / 553004,,000044         HRRZS      000044(I)          ;;RESET LEFT MARGIN.
                       INIT1:
147401 / 505040,,440700          HRLI  TAC,440700             ;;MAKE INITIAL BYTE PTR.
147402 / 541044,,000045          HRRI  TAC, LEBUF(I)          ;
147403 / 202044,,000120         MOVEM  TAC,LEPNT1(I)          ;
147404 / 263140,,000000          POPJ    P,                   ;
                       SHIFT:
147405 / 327440,,147407         JUMPG DSER,147407             ;;OVER LEFT MARGIN ?
                       SHIFTR:
147406 / 334700,,147407         SKIPA  AC2,147407             ;;SHIFT LINE RIGHT.
                       SHIFTL:
147407 / 211700,,000030         MOVNI  AC2,000030             ;;SHIFT LINE LEFT.
147410 / 336004,,000040         SKIPN         III(I)          ;; ARE WE A DD DISPLAY?
147411 / 263140,,000000          POPJ    P,                   ;; IF SO, DON'T SHIFT LINE OVER, CAUSE IT SCREWS UP DPHPOS
147412 / 573440,,000016         HRRES DSER,   AC2             ;
147413 / 220700,,146021          IMUL  AC2,  XDEL             ;
147414 / 272704,,000044          ADDM  AC2,000044(I)          ;;MOVE WHOLE LINE OVER.
147415 / 254000,,146501          JRST      146501             ;;SEE THE HAPPY RECURSIVE EDITOR !
                       LACTIV:
147416 / 634500,,000012          TDZA UCHN,000012             ;;NO SPURIOUS CTRL BITS PLEASE.
                       PTLLX:
147417 / 260140,,140030         PUSHJ    P,140030             ;;SETUP LINE!
147420 / 607100,,420000          TLNN LINE,420000             ;;IF A DPY, XFER EDITOR BUFFER TO INPUT BUFFER NOW.
147421 / 263140,,000000          POPJ    P,                   ;; IF NOT A DPY, RETURN NOW
147422 / 200240,,000002          MOVE  DAT,  LINE             ;
147423 / 335205,,012567        SKIPGE    I,012567(DAT)        ;
147424 / 337004,,000106         SKIPG       CCPOS(I)          ;
147425 / 263140,,000000          POPJ    P,                   ;;NOTHING IN EDITOR BUFFER. FERGIT IT.
                       ACTIV1:
147426 / 325200,,037403        JUMPGE    I,037403             ;;POOLE AND HIS RECURSIVE CALLS ON ACTIV1 !
147427 / 641200,,400001           TLC    I,400001             ;;READY FLAG OFF, WAIT FLAG ON.
147430 / 400640,,000000          SETZ  AC1,                   ;
147431 / 250644,,000031          EXCH  AC1,DPHOLD(I)          ;
147432 / 322640,,147440         JUMPE  AC1,147440             ;; IF NOT HOLDING, DON'T UNHOLD!
147433 / 550644,,000015          HRRZ  AC1,PRGNUM(I)          ;
152352 / 132473,,000020           XWD UNHOLD,DPYL0            ;
147434 / 270640,,152352           ADD  AC1,152352             ;
147435 / 700600,,000400          CONO   PI, PIOFF             ;
147436 / 136640,,013624          IDPB  AC1,  CLKQ             ;
147437 / 700600,,000200          CONO   PI,  PION             ;
                       ACTNH:
147440 / 347500,,147442          AOJG UCHN,147442             ;;IS PTYSER PRE-LOADING US WITH A LINE TO EDIT ?	
147441 / 260140,,147330         PUSHJ    P,147330             ;;YOU BETCHUM, R.R.  DON'T ACTIVATE GUY.
147442 / 260140,,147401         PUSHJ    P,147401             ;;RESET LEPNT1.
147443 / 202504,,000121         MOVEM UCHN,NTABPT(I)          ;;SAVE CTRL BITS OF ACTIVATION CHR.
147444 / 200044,,000107          MOVE  TAC, FCPOS(I)          ;;MAKE COPY OF NO. OF CHRS. IN BUFFER.
147445 / 627200,,002000          TLZN    I,002000             ;;IS THIS A RE-EDIT ?
147446 / 254000,,147456          JRST      ACTNH0             ;
152302 / 000000,,000010                                       ;
152302 / 070200,,000010 POINT 2,00000010,28                   ;
147447 / 137500,,152302           DPB UCHN,152302             ;
147450 / 275400,,000200          SUBI  CHR,   200             ;
152103 / 000004,,000032                                       ;
152103 / 001104,,000032 POINT 9,04000032,35                   ;
147451 / 137400,,152103           DPB  CHR,152103             ;
147452 / 137040,,136450           DPB  TAC,136450             ;;YES. REMEMBER LINE LENGTH.
147453 / 201400,,000400         MOVEI  CHR,   400             ;
147454 / 623200,,000200          TLZE    I,000200             ;;IS loser looking over our shoulder ?
147455 / 260140,,146056         PUSHJ    P,146056             ;;Yes. Flag end of edit chrs.
                       ACTNH0:
147456 / 202044,,000122         MOVEM  TAC,NTABCT(I)          ;
147457 / 502205,,012567          HLLM    I,012567(DAT)        ;; STORE NEW STATUS.
147460 / 505240,,147550          HRLI  DAT,147550             ;;DO THE DIRTY WORK AT CLOCK LEVEL.
                       ;	JRST DPYTIM
                       ;PATCH BY RPH TO TRANSFER AS MANY CHARS AS WILL FIT IN
                       ;TTY BUFFER NOW!!!!!! NOT LATER AT CLOCK LEVEL
147461 / 261140,,000005          PUSH    P,000005             ;;SAVE LINE NUMBER
147462 / 260140,,147550         PUSHJ    P,147550             ;;CALL HIM ONCE
147463 / 262140,,000005           POP    P,000005             ;;GET BACK LINE NUMBER
147464 / 200205,,012567          MOVE    I,012567(DAT)        ;;AND BITS
147465 / 263140,,000000          POPJ    P,                   ;;AND RETURN TO WHO EVER
                       ACTIV5:
147466 / 201506,,000016         MOVEI UCHN,TTIBUF(DDB)        ;;GET POINTER FOR PUTCHI.
147467 / 550300,,000004          HRRZ  DDB,000004             ;; PICK UP ADDRESS OF DPY PROGRAM HEADER
147470 / 336004,,000040         SKIPN         III(I)          ;; IS IT A DATA DISC DISPLAY?
147471 / 661300,,400000           TLO  DDB,400000             ;; YES, FLAG THAT FACT TO DPYTYO
                       ACTIVL:
147472 / 202500,,000005         MOVEM UCHN,000005             ;;GIVE PUTCHI A PTR. TO INPUT BUFFER.
147473 / 201104,,000120         MOVEI TAC1,LEPNT1(I)          ;;TELL GETEM TO USE LEPNT1.
147474 / 260140,,146672         PUSHJ    P,146672             ;;GET NEXT CHR. FROM BUFFER.
147475 / 260140,,140614         PUSHJ    P,140614             ;;PLACE CHAR. IN TTY INPUT BUFFER.
147476 / 254000,,147541          JRST      147541             ;;INPUT BUFFER FULL. WAIT A WHILE.
147477 / 376004,,000106          SOSN       CCPOS(I)          ;;IS THIS THE ACTIVATION CHAR. ?
147500 / 377044,,000121          SOSG  TAC,NTABPT(I)          ;;YES. DOES IT HAVE CTRL. BITS ?
147501 / 254000,,147512          JRST      147512             ;;NO.
152302 / 000000,,000010                                       ;
152302 / 070200,,000010 POINT 2,00000010,28                   ;
147502 / 137040,,152302           DPB  TAC,152302             ;
                       ;YES. PUT CTRL. BITS IN INPUT BUFFER.
147503 / 137405,,000001           DPB  CHR,  PUTR(DAT)        ;
147504 / 201400,,000013         MOVEI  CHR,000013             ;;ECHO CTRL. BITS, IF ANY.
147505 / 602040,,000001          TRNE  TAC, CBIT1             ;
147506 / 260140,,147577         PUSHJ    P,ECHOCB             ;
147507 / 201400,,000014         MOVEI  CHR,000014             ;
147510 / 602040,,000002          TRNE  TAC, CBIT2             ;
147511 / 260140,,147577         PUSHJ    P,ECHOCB             ;
                       ACTIV6:
147512 / 135404,,000120           LDB  CHR,LEPNT1(I)          ;;GET BACK DPY VERSION OF CHAR. CODE.
147513 / 260140,,147604         PUSHJ    P,147604             ;;ECHO IT ON PAGE PRINTER.
147514 / 332004,,000040         SKIPE         III(I)          ;;ARE WE A DD
147515 / 254000,,147521          JRST      ACTIVQ             ;
147516 / 135404,,000120           LDB  CHR,LEPNT1(I)          ;;GET LAST CHR PUT OUT
147517 / 306400,,000177          CAIN  CHR,000177             ;;IS IT A BS
147520 / 260140,,147604         PUSHJ    P,147604             ;;YES, ECHO TWICE FOR DD
                       ACTIVQ:
147521 / 373004,,000122         SOSLE      NTABCT(I)          ;;ALL CHRS. XFERED ?
147522 / 254000,,147472          JRST      ACTIVL             ;
                       ; WE GET HERE WHEN THE LINE EDITOR BUFFER IS EMPTY.
                       ; WE CLEAN UP AND LEAVE.
147523 / 201304,,000035         MOVEI  DDB,   LEB(I)          ;; YES, MAKE EDITOR BUFFER INVISIBLE BY PUTTING
147524 / 505300,,000020          HRLI  DDB,000020             ;; A RETURN JUMP ON TOP OF THE POSITION VECTOR
147525 / 206304,,000037         MOVSM  DDB, LEPPV(I)          ;
147526 / 505200,,000000          HRLI    I,                   ;;RESET STATUS BITS.
147527 / 621000,,021000           TLZ      021000             ;;DONT SCREW UP THE COUNT
                       ACTIV4:
147530 / 201312,,777762         MOVEI  DDB,777762(UCHN)       ;;RECOVER DDB.
147531 / 260140,,140030         PUSHJ    P,140030             ;;SET UP LINE.
147532 / 502202,,012567          HLLM    I,012567(LINE)       ;;RESET STATUS. 
147533 / 261146,,000024          PUSH    P,TISYNC(DDB)        ;;REMEMBER CURRENT ACTIVATION COUNT!
147534 / 260140,,141542         PUSHJ    P,141542             ;;UPDATE TISYNC
147535 / 262140,,000001           POP    P,000001             ;;GET BACK ORIGINAL COUNT
147536 / 315046,,000024         CAMGE  TAC,TISYNC(DDB)        ;;DID SYNCHK ACTIVATE SOME MORE CHARS?
147537 / 254000,,142771          JRST      142771             ;;YES, WAKE COMMAND DECODER!
147540 / 254000,,142774          JRST      RECIN4             ;
                       ACTIV2:
147541 / 661000,,021000           TLO      021000             ;;FORCE ACTIVATION
147542 / 260140,,147530         PUSHJ    P,147530             ;;GO ACTIVATE JOB.
147543 / 200042,,032347          MOVE  TAC,TTYTAB(LINE)       ;
147544 / 607040,,400000          TLNN  TAC,400000             ;;DOES HE ALREADY HAVE A COMMAND WAITING?
147545 / 260140,,144203         PUSHJ    P,144203             ;;NO, SET HIM
147546 / 200240,,000002          MOVE  DAT,  LINE             ;
147547 / 263140,,000000          POPJ    P,                   ;
                       ;WE WILL GO TO ACTIV3 NEXT TIC.
                       ACTIV3:
147550 / 550100,,000005          HRRZ LINE,   DAT             ;
147551 / 301100,,000020          CAIL LINE, DPYL0             ;
147552 / 301100,,000120          CAIL LINE,000120             ;
147553 / 263140,,000000          POPJ    P,                   ;
147554 / 200202,,012567          MOVE    I,012567(LINE)       ;
147555 / 607200,,000001          TLNN    I,WTFLAG             ;
147556 / 263140,,000000          POPJ    P,                   ;; IF NOT DOING ANY TRANSFER, LEAVE
147557 / 336305,,032347         SKIPN  DDB,TTYTAB(DAT)        ;
147560 / 254000,,147564          JRST      147564             ;;SOMEBODY HAS FLUSHED OUR DDB. QUIT NOW.
                       ACTIV9:
147561 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
147562 / 200202,,012567          MOVE    I,012567(LINE)       ;
152176 / 020000,,147466           XWD 020000,ACTIV5           ;
147563 / 254120,,152176          JRST    2,@152176            ;
                       ;SUPPRESS INCREMENTING OF NEXT ILDB.
                       ; WE GET HERE IF THE DDB HAS BEEN EATEN FROM UNDERNEATH US
                       ; WE TRY TO GET HIM A NEW DDB.
                       ACTIV7:
147564 / 700600,,001004          CONO   PI,SCNOFF             ;
147565 / 332305,,032347         SKIPE  DDB,TTYTAB(DAT)        ;; SEE IF IT IS REALLY GONE?
147566 / 254000,,147573          JRST      147573             ;; NOT REALLY, GO TO IT
147567 / 260140,,140123         PUSHJ    P,140123             ;; GET HIM A DDB
147570 / 254000,,147575          JRST      147575             ;; NONE AVAILABLE, REPLANT CLOCK REQUEST AND WAIT
147571 / 700600,,002004          CONO   PI, SCNON             ;
147572 / 254000,,147561          JRST      ACTIV9             ;
                       ACTIV8:
147573 / 700600,,002004          CONO   PI, SCNON             ;
147574 / 254000,,147561          JRST      ACTIV9             ;
                       ACTI10:
147575 / 700600,,002004          CONO   PI, SCNON             ;
147576 / 254000,,132555          JRST      DPYTIM             ;
                       ECHOCB:
147577 / 606000,,000400          TRNN      000400             ;;IS USER SUPPRESSING ECHO OF CTRL. BITS ?
147600 / 602000,,000200          TRNE      000200             ;;OR ALL CHARS?
147601 / 603000,,000400          TLNE      000400             ;;YES, MONITOR GETS THEM ANYWAY
147602 / 254000,,127412          JRST      127412             ;;ECHO BIT
147603 / 263140,,000000          POPJ    P,                   ;
                       ECHO:
147604 / 603000,,000400          TLNE      000400             ;; ALWAYS ECHO IN MONITOR MODE
147605 / 254000,,127412          JRST      DPYTYO             ;
147606 / 602000,,000200          TRNE      000200             ;;IS USER SUPPRESSING ALL ECHOING ?
147607 / 263140,,000000          POPJ    P,                   ;
147610 / 200644,,000146          MOVE  AC1,   LCH(I)          ;
147611 / 202404,,000146         MOVEM  CHR,   LCH(I)          ;
147612 / 306400,,000012          CAIN  CHR,    12             ;
147613 / 302640,,000015          CAIE  AC1,    15             ;
147614 / 254000,,127412          JRST      DPYTYO             ;
147615 / 550644,,000015          HRRZ  AC1,PRGNUM(I)          ;; PICK UP TTY NUMBER
147616 / 200655,,017737          MOVE  AC1,017737(AC1)        ;; FILL IN LINE CHARACTERISTICS
147617 / 607640,,000002          TLNN  AC1,000002             ;; LET THE LOSER TURN OFF LF AFTER CR IF HE WANTS TO
147620 / 254000,,127412          JRST      DPYTYO             ;
147621 / 263140,,000000          POPJ    P,                   ;
                       PTLLED:
147622 / 603100,,002000          TLNE LINE, IMLIN             ;
147623 / 254000,,145547          JRST      IMLOAD             ;
147624 / 607100,,420000          TLNN LINE,420000             ;
147625 / 263140,,000000          POPJ    P,                   ;
147626 / 553202,,012567         HRRZS    I,012567(LINE)       ;
                       ;SET NTABCT AS SIGNAL TO KBDED (ACTIV1).
152513 / 200614,,000000          MOVE  UUO,      (UUO)        ;
147627 / 256200,,152513          XCTR   XR,152513             ;;GET GUY'S PTR.
147630 / 607600,,777777          TLNN  UUO,777777             ;;IS IT ALREADY (PRESUMABLY) A BYTE PTR. ?
147631 / 505600,,440700          HRLI  UUO,440700             ;;NO. MAKE IT ONE.
                       PTLL2:
152353 / 134400,,000014          ILDB  CHR,   UUO             ;
147632 / 256040,,152353          XCTR  XLB,152353             ;;GET CHR. FROM LOSER.
147633 / 205500,,777777         MOVSI UCHN,777777             ;;FLAG TO KBDED SAYING IT'S US.
147634 / 322400,,147417         JUMPE  CHR,147417             ;;IF NULL, QUIT AND RESET EDITOR.
147635 / 260140,,145330         PUSHJ    P,145330             ;;FEED IT TO KBDED.
147636 / 606500,,000001          TRNN UCHN,000001             ;;DID KBDED SEE AN ACTIVATION CHR. ?
147637 / 254000,,147632          JRST      147632             ;;NO. 
147640 / 263140,,000000          POPJ    P,                   ;;RESET EDITOR AND GO AWAY.
                       ; HERE IS WHERE WE QUEUE UP LINE EDITOR TRANSFERS
                       QLETXT:
147641 / 476004,,000135         SETOM       LETXC(I)          ;; NOTE THAT TEXT HAS CHANGED
                       QLECUR:
147642 / 332004,,000040         SKIPE         III(I)          ;; IF III, THIS IS IRRELEVANT
147643 / 263140,,000000          POPJ    P,                   ;
147644 / 474700,,000000          SETO  AC2,                   ;; TEST THE FLAG
147645 / 250704,,000134          EXCH  AC2, LECLK(I)          ;; IS THERE A CLOCK REQUEST ALREADY IN?
147646 / 321700,,037403         JUMPL  AC2,037403             ;; IF SO, HE WILL GET IT.
147647 / 540640,,000004           HRR  AC1,000004             ;; IF NOT, MAKE UP ONE WITH THE DPY HEADER ADDRESS IN IT
147650 / 505640,,133117          HRLI  AC1,133117             ;; AND USE THE LINE EDITOR ROUTINE
147651 / 700600,,000400          CONO   PI, PIOFF             ;
147652 / 136640,,013624          IDPB  AC1,  CLKQ             ;
147653 / 700600,,000200          CONO   PI,  PION             ;
147654 / 263140,,000000          POPJ    P,                   ;
                       ; THIS IS A ROUTINE THAT GOES THROUGH THE LINE AND SETS UP EXTRA CRLFS TO BREAK
                       ; LONG LINES.
                       MAKECR:
147655 / 621200,,000030           TLZ    I,000030             ;; NEXT TAB IS UNKNOWN NOW
147656 / 603200,,400000          TLNE    I,400000             ;; IS IT REALLY THERE?
147657 / 332004,,000040         SKIPE         III(I)          ;
147660 / 263140,,000000          POPJ    P,                   ;; NOT THERE OR III
                       LEFIX:
147661 / 400740,,000000          SETZ  AC3,                   ;
147662 / 200704,,000017          MOVE  AC2, CURPP(I)          ;; PICK UP PAGE PRINTER CONTROL BLOCK ADDRESS
147663 / 200644,,000042          MOVE  AC1,PPHPOS(I)          ;
147664 / 274656,,000052           SUB  AC1,LNLNGT(AC2)        ;;ROOM LEFT TO END OF LINE
147665 / 505040,,440700          HRLI  TAC,440700             ;; PICK UP BYTE POINTER TO BEGINNING OF BUFFER
147666 / 541044,,000045          HRRI  TAC, LEBUF(I)          ;
147667 / 402004,,000126         SETZM        NCRS(I)          ;; INITIALIZE THE TRANSFER LENGTH COUNTER
                       MAKEC1:
147670 / 134400,,000001          ILDB  CHR,000001             ;; PICK UP CHARACTER
147671 / 322400,,147670         JUMPE  CHR,147670             ;; SKIP NULLS
147672 / 306400,,000012          CAIN  CHR,000012             ;; IF END OF BUFFER,
147673 / 254000,,147752          JRST      147752             ;; LEAVE
147674 / 306400,,000011          CAIN  CHR,000011             ;; IS THIS A TAB?
147675 / 254000,,147740          JRST      147740             ;; YES, IT IS, GO PROCESS IT
147676 / 341640,,147734          AOJL  AC1,147734             ;; NORMAL CHARACTER, BUMP COLLUMN COUNT
                       ; WE GET HERE IF THE LINE IS LONG AND MUST BE BROKEN UP.
                       MAKE12:
147677 / 200640,,000001          MOVE  AC1,000001             ;; PICK UP BYTE POINTER
                       MAKE23:
147700 / 134400,,000015          ILDB  CHR,000015             ;; LOOK AHEAD SOME
147701 / 322400,,147700         JUMPE  CHR,147700             ;
147702 / 302400,,000011          CAIE  CHR,000011             ;; MAYBE THIS IS JUST THE LONG-LINE CRLF?
147703 / 254000,,147714          JRST      147714             ;; APPARANTLY NOT, BUMP CR COUNT
147704 / 134400,,000015          ILDB  CHR,000015             ;; PICK UP NEXT CHARACTER
147705 / 322400,,147704         JUMPE  CHR,147704             ;
147706 / 302400,,000015          CAIE  CHR,000015             ;; IF THIS IS A CR, IS DEFINITELY A LONG-LINE CRLF
147707 / 254000,,147715          JRST      MAKE21             ;
                       MAKE22:
147710 / 134400,,000015          ILDB  CHR,000015             ;; IN WHICH CASE, READ PAST IT
147711 / 302400,,000011          CAIE  CHR,    11             ;
147712 / 254000,,147710          JRST      MAKE22             ;
147713 / 254000,,147700          JRST      MAKE23             ;
                       MAKE20:
147714 / 302400,,000012          CAIE  CHR,000012             ;; IF THERE ARE NO MORE CHARACTERS ON NEXT LINE, DON'T BUMP LINE COUNT
                       MAKE21:
147715 / 350004,,000126           AOS        NCRS(I)          ;; END OF LINE, BREAK THE LINE UP
147716 / 201400,,000011         MOVEI  CHR,000011             ;; END OF LINE, BREAK LINE
147717 / 260140,,150047         PUSHJ    P,MAKINS             ;
147720 / 201400,,000015         MOVEI  CHR,    15             ;
147721 / 260140,,150047         PUSHJ    P,MAKINS             ;
147722 / 201400,,000012         MOVEI  CHR,    12             ;
147723 / 260140,,150047         PUSHJ    P,MAKINS             ;
147724 / 201400,,000011         MOVEI  CHR,    11             ;
147725 / 260140,,150047         PUSHJ    P,MAKINS             ;
147726 / 210656,,000052          MOVN  AC1,LNLNGT(AC2)        ;; RESET COLUMN COUNT
                       MAKEC8:
147727 / 200100,,000001          MOVE TAC1,000001             ;; SAVE POINTER
                       MAKEC9:
147730 / 134400,,000002          ILDB  CHR,000002             ;; IS NEXT CHARACTER A NULL?
147731 / 326400,,147734         JUMPN  CHR,147734             ;; NO, ALL OK
147732 / 200040,,000002          MOVE  TAC,000002             ;; YES, SPACE POINTER OUT PAST NULLS
147733 / 254000,,147730          JRST      MAKEC9             ;
                       MAKEC7:
147734 / 271740,,000001          ADDI  AC3,000001             ;; BUMP COLUMN COUNT
                       MAKE10:
147735 / 316744,,000106          CAMN  AC3, CCPOS(I)          ;; IS THIS WHERE THE POINTER IS SUPPOSED TO BE?
147736 / 202044,,000120         MOVEM  TAC,LEPNT1(I)          ;; YES, STORE IT
147737 / 254000,,147670          JRST      MAKEC1             ;
                       ; HERE WE SEE IF THE TAB IS A REAL TAB OR IF IT IS JUST
                       ; THE THING WE USE TO DELIMIT A LONG-LINE CRLF
                       MAKEC2:
147740 / 200100,,000001          MOVE TAC1,000001             ;; SAVE BYTE POINTER
147741 / 134400,,000001          ILDB  CHR,000001             ;; PICK UP NEXT CHARACTER
147742 / 302400,,000015          CAIE  CHR,000015             ;; IS IT A CR?
147743 / 254000,,147765          JRST      147765             ;; NO, MUST BE REGULAR TAB, GO ADJUST IT
147744 / 400440,,000000          SETZ DSER,                   ;
147745 / 137440,,000002           DPB DSER,000002             ;; YES, ZERO OUT THE LONG LINE CRLF
147746 / 137440,,000001           DPB DSER,   TAC             ;
147747 / 136440,,000001          IDPB DSER,   TAC             ;
147750 / 136440,,000001          IDPB DSER,   TAC             ;
147751 / 254000,,147735          JRST      MAKE10             ;
                       MAKEC6:
147752 / 400400,,000000          SETZ  CHR,                   ;; ZERO OUT STUFF AFTER END OF LINE CHARACTER
                       MAKE17:
153152 / 000000,,000001                                       ;
153152 / 360600,,000001 POINT 6,00000001,5                    ;
147753 / 135100,,153152           LDB TAC1,153152             ;
147754 / 307100,,000007          CAIG TAC1,000007             ;; IS THERE ANY MORE ROOM IN THE LAST TEXT WORD
147755 / 254000,,147760          JRST      147760             ;; NO, SET UP LELWD AND LEAVE
147756 / 136400,,000001          IDPB  CHR,000001             ;; YES, PLOP DOWN A ZERO THERE
147757 / 254000,,147753          JRST      MAKE17             ;
                       MAKE18:
147760 / 550100,,000001          HRRZ TAC1,000001             ;; GET BARE ADDRESS OF LAST TEXT WORD IN BUFFER
147761 / 250104,,000110          EXCH TAC1, LELWD(I)          ;; STORE IT AND GET THE OLD VALUE
147762 / 200642,,000001          MOVE  AC1,     1(TAC1)       ;; PICK UP THE RETURN JUMP
147763 / 202641,,000001         MOVEM  AC1,     1(TAC)        ;; PUT IT RIGHT AFTER THE END OF LINE CHARACTER
147764 / 263140,,000000          POPJ    P,                   ;
                       ; WE GET HERE WHEN THE TAB SURROUNDS A BUNCH OF SPACES. FIRST WE
                       ; DELETE THE ORIGINAL SPACES, THEN WE FIGURE OUT HOW MANY WE NEED
                       ; TO MAKE THE TAB COME OUT RIGHT AND PUT THEM IN.
                       MAKEC3:
147765 / 261140,,000017          PUSH    P,000017             ;; SAVE BYTE POINTER
147766 / 261140,,000014          PUSH    P,000014             ;; GET AN ACCUMULATOR FOR COUNTING SPACES IN TABS
147767 / 403440,,000014         SETZB DSER,   UUO             ;
                       MAKEC4:
147770 / 137440,,000001           DPB DSER,000001             ;; ZERO OUT THE SPACES IN THE TAB
147771 / 306400,,000040          CAIN  CHR,000040             ;; COUNT IT AS A SPACE ONLY IF IT REALY IS A SPACE
147772 / 271600,,000001          ADDI  UUO,000001             ;; BUMP NUMBER OF SPACES IN THIS TAB
147773 / 134400,,000001          ILDB  CHR,   TAC             ;
147774 / 302400,,000011          CAIE  CHR,000011             ;; UNTIL WE GET TO THE TERMINATING TAB
147775 / 254000,,147770          JRST      MAKEC4             ;
147776 / 200044,,000126          MOVE  TAC,  NCRS(I)          ;; FIGURE OUT POSITION FROM BEGINNING OF FIRST LINE
147777 / 271040,,000001          ADDI  TAC,000001             ;; BUMP BY ONE TO CORRECT FOR NEGATIVITY OF AC1
150000 / 220056,,000052          IMUL  TAC,LNLNGT(AC2)        ;; MULTIPLY NUMBER OF LINES BY LENGTH OF LINES
150001 / 270040,,000015           ADD  TAC,000015             ;; ADD IN CHARACTERS INTO LAST LINE
150002 / 202044,,000114         MOVEM  TAC,LECHPS(I)          ;; SAVE FOR FUTURE REFERENCE
150003 / 405040,,000007          ANDI  TAC,000007             ;; MOD 10
150004 / 201740,,000010         MOVEI  AC3,    10             ;
150005 / 274740,,000001           SUB  AC3,000001             ;; THIS IS NUMBER OF COLUMNS TO GO
150006 / 270640,,000017           ADD  AC1,000017             ;; ADD LENGTH OF TAB INTO COLUMN POSITION
150007 / 276740,,000014          SUBM  AC3,000014             ;; GET CORRECTION TO THIS TAB
150010 / 323640,,150027        JUMPLE  AC1,150027             ;; IF NOT AT END OF LINE, GO ON AND ADJUST TAB
150011 / 200040,,000002          MOVE  TAC,000002             ;; GET POINTER TO TAB
150012 / 201400,,000040         MOVEI  CHR,000040             ;; NOW SPACE OUT TO END OF LINE
                       MAKE16:
150013 / 311640,,000017          CAML  AC1,000017             ;; OUT FAR ENOUGH?
150014 / 254000,,150017          JRST      150017             ;; YES, PUT IN CRLF NOW
150015 / 260140,,150047         PUSHJ    P,150047             ;; NO, PUT IN ANOTHER SPACE
150016 / 364740,,150013          SOJA  AC3,MAKE16             ;
                       ; AT THIS POINT, WE ARE IN THE PROCESS OF BREAKING A LONG LINE
                       ; IN THE MIDDLE OF A TAB. WE HAVE JUST INSERTED THE APROPRIATE
                       ; NUMBER OF SPACES TO FILL OUT THE LAST LINE, AND NOW WE
                       ; MUST INSERT THE CRLF ITSELF.
                       MAKE15:
150017 / 201400,,000015         MOVEI  CHR,    15             ;
150020 / 260140,,150047         PUSHJ    P,150047             ;; BREAK LINE IN THE MIDDLE OF A TAB
150021 / 201400,,000012         MOVEI  CHR,    12             ;
150022 / 260140,,150047         PUSHJ    P,MAKINS             ;
150023 / 350004,,000126           AOS        NCRS(I)          ;; UPDATE NUMBER OF CRLFS IN LINE
150024 / 200100,,000001          MOVE TAC1,000001             ;; SAVE BYTE POINTER TO TAB
150025 / 200740,,000015          MOVE  AC3,000015             ;; NUMBER OF SPACES IS NUMBER OF CHARACTERS INTO LINE
150026 / 274656,,000052           SUB  AC1,LNLNGT(AC2)        ;; RESET COLUMN COUNT
                       MAKE13:
150027 / 200044,,000114          MOVE  TAC,LECHPS(I)          ;; PICK UP NUMBER OF CHARACTERS FROM FIRST LINE
150030 / 315044,,000105         CAMGE  TAC,LEHPOS(I)          ;; ARE WE BEFORE THE HORIZONTAL POSITION POINTER?
150031 / 272604,,000105          ADDM  UUO,LEHPOS(I)          ;; YES, UPDATE IT
                       MAKE14:
150032 / 262140,,000014           POP    P,   UUO             ;
150033 / 200040,,000002          MOVE  TAC,000002             ;; GET BYTE POINTER BACK
150034 / 201400,,000040         MOVEI  CHR,    40             ;
150035 / 260140,,150047         PUSHJ    P,150047             ;; INSERT THAT MANY SPACES
150036 / 367740,,150035          SOJG  AC3,150035             ;
150037 / 135400,,000001           LDB  CHR,000001             ;; NOW UPDATE POINTER TO PAST TAB
                       MAKEC5:
150040 / 306400,,000011          CAIN  CHR,    11             ;
150041 / 254000,,150044          JRST      150044             ;; THEN GET BACK INTO THE LOOP
150042 / 134400,,000001          ILDB  CHR,000001             ;; NOT TAB, GET NEXT CHARACTER
150043 / 254000,,150040          JRST      MAKEC5             ;
                       MAKE11:
150044 / 262140,,000017           POP    P,000017             ;; RESTORE COLUMN COUNT
150045 / 325640,,147677        JUMPGE  AC1,147677             ;; IF WE GOT LINE OVERFLOW, BREAK LINE UP
150046 / 254000,,147727          JRST      MAKEC8             ;
                       MAKINS:
150047 / 134100,,000001          ILDB TAC1,000001             ;; IS THIS CHARACTER A NULL?
150050 / 322100,,150052         JUMPE TAC1,150052             ;
150051 / 260140,,146403         PUSHJ    P,146403             ;; NO, INSERT A WORD OF NULLS
150052 / 137400,,000001           DPB  CHR,000001             ;; DEPOSIT OUR CHARACTER OVER A NULL
150053 / 263140,,000000          POPJ    P,                   ;
150054 /                 ;::    BEND STANFO.TTYSER.LINED.
150054 /                 ;::    BEND STANFO.TTYSER.
150054 /               ;: LINED[J17,SYS] EOF.
150054 /               ;: SPWSER[J17,SYS]
150054 /                 ;::   BEGIN STANFO.SPWSER.
                       ; JAM. STANFORD, 8-NOV-68
                       ; INITIALIZE ALL SPACEWAR TABLES
                       SPWINI:
150054 / 402000,,020273         SETZM      020273             ;; ZERO OUT P1 SPW TABLE
152202 / 020273,,020274           XWD SPWGO,SPWGO+1           ;
150055 / 200040,,152202          MOVE  TAC,152202             ;
150056 / 251040,,020572           BLT  TAC,020572             ;;CLEAR SPWGO,SP2GO,JBTST2
150057 / 402000,,020267         SETZM      SPWCSC             ;
150060 / 402000,,020270         SETZM      020270             ;
150061 / 402000,,020271         SETZM      020271             ;
150062 / 402000,,020272         SETZM      020272             ;
150063 / 740640,,020265          CONI  404,020265             ;; SET UP SPW BUTTONS
150064 / 402000,,020266         SETZM      020266             ;; KILL SPW JOB COUNT
150065 / 402000,,023425         SETZM      023425             ;;NOT AT SPACEWAR LEVEL ON EITHER PROCESSOR
150066 / 402000,,024643         SETZM      024643             ;
150067 / 402000,,023426         SETZM      023426             ;;AND INITIALLY, NO TIMEOUT ACTIVE
150070 / 402000,,024644         SETZM      024644             ;
150071 / 263140,,000000          POPJ    P,                   ;
                       ; ROUTINE TO KILL 2-PROCESSOR SPACE WAR FOR JOB N
                       ; CALLING . . .
                       ;	MOVE	J,JOB		; GET JOB NUMBER IN ITEM
                       ;	PUSHJ	P,KILSPW	; KILLS SPACEWAR, SAVES AC'S
                       KILSPW:
150072 / 261140,,000001          PUSH    P,   TAC             ;
150073 / 205040,,020000         MOVSI  TAC,SPWSNB             ;
150074 / 260140,,067011         PUSHJ    P,067011             ;; CLEAR ANY SPACEWAR SWAPIN REQUEST
150075 / 262140,,000001           POP    P,   TAC             ;
150076 / 261140,,000002          PUSH    P,  TAC1             ;
150077 / 260140,,037464         PUSHJ    P, PWAIT             ;
150100 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150101 / 336004,,020473         SKIPN      JBTST2(J)          ;; IS A JOB ACTIVE HERE?
150102 / 254000,,150114          JRST      KILSP1             ;
150103 / 261140,,000001          PUSH    P,   TAC             ;
150104 / 201040,,447700         MOVEI  TAC,447700             ;
150105 / 260140,,072423         PUSHJ    P,STAPUT             ;
150106 / 262140,,000001           POP    P,   TAC             ;
                       ;FTSTAT
150107 / 332004,,020273         SKIPE       SPWGO(J)          ;;DOES HE HAVE A P1 SPW JOB
150110 / 260140,,150120         PUSHJ    P,150120             ;;RELEASE SPW ON PDP 10
150111 / 332004,,020373         SKIPE       SP2GO(J)          ;;AND P2
150112 / 260140,,150133         PUSHJ    P,150133             ;;RELEASE SPW ON PDP 6
150113 / 402004,,020473         SETZM      JBTST2(J)          ;
                       KILSP1:
150114 / 260140,,037501         PUSHJ    P, XWAIT             ;
150115 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150116 / 262140,,000002           POP    P,  TAC1             ;
150117 / 263140,,000000          POPJ    P,                   ;
                       P1REL:
150120 / 400100,,000000          SETZ TAC1,                   ;
150121 / 200040,,000002          MOVE  TAC,  TAC1             ;
153157 / 000001,,020273                                       ;
153157 / 360601,,020273 POINT 6,01020273,5                    ;
150122 / 135100,,153157           LDB TAC1,153157             ;
150123 / 312100,,000004          CAME TAC1,     J             ;
150124 / 326100,,150121         JUMPN TAC1,150121             ;
150125 / 322100,,037403         JUMPE TAC1, CPOPJ             ;
153161 / 000004,,020273                                       ;
153161 / 360604,,020273 POINT 6,04020273,5                    ;
150126 / 135100,,153161           LDB TAC1,153161             ;
153157 / 000001,,020273                                       ;
153157 / 360601,,020273 POINT 6,01020273,5                    ;
150127 / 137100,,153157           DPB TAC1,153157             ;
150130 / 402004,,020273         SETZM       SPWGO(J)          ;
150131 / 370000,,020266           SOS      SPWACT             ;
150132 / 263140,,000000          POPJ    P,                   ;
                       P2REL:
150133 / 400100,,000000          SETZ TAC1,                   ;
150134 / 200040,,000002          MOVE  TAC,  TAC1             ;
153160 / 000001,,020373                                       ;
153160 / 360601,,020373 POINT 6,01020373,5                    ;
150135 / 135100,,153160           LDB TAC1,153160             ;
150136 / 312100,,000004          CAME TAC1,     J             ;
150137 / 326100,,150134         JUMPN TAC1,150134             ;
150140 / 322100,,037403         JUMPE TAC1, CPOPJ             ;
153162 / 000004,,020373                                       ;
153162 / 360604,,020373 POINT 6,04020373,5                    ;
150141 / 135100,,153162           LDB TAC1,153162             ;
153160 / 000001,,020373                                       ;
153160 / 360601,,020373 POINT 6,01020373,5                    ;
150142 / 137100,,153160           DPB TAC1,153160             ;
150143 / 402004,,020373         SETZM       SP2GO(J)          ;
150144 / 370000,,020266           SOS      SPWACT             ;
150145 / 263140,,000000          POPJ    P,                   ;
                       OFSPW:
150146 / 260140,,150072         PUSHJ    P,150072             ;;HERE IF HE GOOFS.
150147 / 265040,,043640           JSP  TAC,UUOMES             ;
                       ; ENTER HERE FROM UUOCON TO SET UP A SPW JOB
                       ; CALL FROM UUOCON:
                       ;	MOVE	UCHN,[MODE-BITS,,TICKS]
                       ;	MOVE	UUO,[ANYTHING,,STARTING ADDRESS]
                       SPWCON:
150164 / 200213,,024061          MOVE    J,   JOB(PID)        ;; GET CURRENT JOB NUMBER
150165 / 201054,,000000         MOVEI  TAC,      (UUO)        ;;GET STARTING ADDRESS
150166 / 326500,,150171         JUMPN UCHN,150171             ;;ZERO TICKS?
150167 / 306040,,636367          CAIN  TAC,636367             ;;STOP CODE?
150170 / 254000,,150072          JRST      150072             ;;YES, STOP SPACEWAR
                       SPW0:
150171 / 305040,,000140         CAIGE  TAC,000140             ;;ABOVE JOB DATA AREA?
150172 / 254000,,043217          JRST      043217             ;;GIVE HIM ADDRESS CHECK FOR STARTING ADR
152447 / 200041,,000000          MOVE  TAC,      (TAC)        ;
150173 / 256200,,152447          XCTR   XR,152447             ;;ADDRESS CHECK HIS STARTING ADDRESS
                       ;HERE, P2 IS ALIVE.
150174 / 607500,,200000          TLNN UCHN,200000             ;;REQUESTING PDP-6?
150175 / 321500,,150232         JUMPL UCHN,150232             ;;NO, HOW ABOUT PDP-10?
150176 / 332004,,020373         SKIPE       SP2GO(J)          ;;IS THERE ALREADY A JOB RUNNING HERE?
150177 / 254000,,150146          JRST      150146             ;;YES, HE GOOFED
                       SPW4H:
150200 / 331000,,025477         SKIPL      025477             ;;IS THE PDP-6 REALLY THERE?
150201 / 254000,,150210          JRST       SPW4G             ;
150202 / 607500,,200000          TLNN UCHN,200000             ;;WAS HE REALLY SURE ABOUT USING THE SIX?
150203 / 254000,,150232          JRST      150232             ;;NO, TRY THE TEN
150204 / 326540,,150210         JUMPN  PID, SPW4G             ;
150205 / 201040,,153720         MOVEI  TAC,153720             ;
150206 / 260140,,043540         PUSHJ    P,HNGMES             ;
150207 / 254000,,150200          JRST       SPW4H             ;
                       SPW4G:
150210 / 350000,,020266           AOS      SPWACT             ;
150211 / 550040,,000012          HRRZ  TAC,  UCHN             ;
150212 / 242040,,000006           LSH  TAC,     6             ;
150213 / 660040,,444000           TRO  TAC,444000             ;;FLAG PDP-6
150214 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       ;FTSTAT
150215 / 260140,,037464         PUSHJ    P, PWAIT             ;
150216 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150217 / 205240,,400000         MOVSI  DAT,SPWRUN             ;
150220 / 603500,,040000          TLNE UCHN,040000             ;;SUPPRESS TIMEOUT?
150221 / 205240,,400400         MOVSI  DAT,400400             ;;YES. SET TIMEOUT SUPRESSION BIT TOO
150222 / 436244,,020473          IORM  DAT,JBTST2(J)          ;; MARK US AS RUNNING
150223 / 671500,,020373           TSO UCHN,020373             ;; COPY FIRST LINK INTO UCHN (RIGHT)
153155 / 000000,,020373                                       ;
153155 / 360600,,020373 POINT 6,00020373,5                    ;
150224 / 137200,,153155           DPB    J,153155             ;;NEW FIRST LINK
150225 / 506504,,020373          HRLM UCHN, SP2GO(J)          ;;DO THIS STUFF NOW TOO
150226 / 542604,,020373          HRRM  UUO, SP2GO(J)          ;
150227 / 260140,,037501         PUSHJ    P, XWAIT             ;
150230 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150231 / 325500,,037403        JUMPGE UCHN,037403             ;;IS HE REQUESTING IT TO BE RUN ON THE PDP-10 ALSO?
                       SPW1:
                       ;HERE FOR P1 SPACEWAR
150232 / 332004,,020273         SKIPE       SPWGO(J)          ;; IS THERE ALREADY A JOB THERE?
150233 / 254000,,150146          JRST      150146             ;; YES, GO SHOOT HIM!
150234 / 350000,,020266           AOS      020266             ;; WE HAVE ONE MORE SPW JOB NOW
150235 / 550040,,000012          HRRZ  TAC,  UCHN             ;
150236 / 242040,,000006           LSH  TAC,     6             ;
150237 / 660040,,440000           TRO  TAC,440000             ;;FLAG PDP-10
150240 / 260140,,072423         PUSHJ    P,STAPUT             ;
                       ;FTSTAT
150241 / 260140,,037464         PUSHJ    P, PWAIT             ;
150242 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150243 / 205240,,400000         MOVSI  DAT,400000             ;; INDICATE THAT A JOB IS RUNNING
150244 / 603500,,100000          TLNE UCHN,100000             ;;P1 TIMEOUT SUPRESSION?
150245 / 205240,,401000         MOVSI  DAT,401000             ;;YES. SET TIMEOUT SUPRESSION BIT
150246 / 436244,,020473          IORM  DAT,JBTST2(J)          ;; PUT IN 'RUNNING' BIT
150247 / 671500,,020273           TSO UCHN, SPWGO             ;
153154 / 000000,,020273                                       ;
153154 / 360600,,020273 POINT 6,00020273,5                    ;
150250 / 137200,,153154           DPB    J,153154             ;
150251 / 506504,,020273          HRLM UCHN, SPWGO(J)          ;; PUT JIFFIES IN LH
150252 / 542604,,020273          HRRM  UUO, SPWGO(J)          ;; PUT ADDRESS IN RH
150253 / 260140,,037501         PUSHJ    P, XWAIT             ;
150254 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150255 / 263140,,000000          POPJ    P,                   ;
                       ; BASIC LEVEL SPW CLOCK AND RUN ROUTINES
                       ; FIRST, ACCUMULATOR RE-DEFINITIONS
                       ; REGISTER AC CONTAINS THE ADDRESS OF THE PROCESSOR'S AC STORAGE TABLE
                       ; REGISTER GO CONTAINS SPWGO OR SP2GO, DEPENDING ON WHERE WE ARE
                       SPWP2:
150256 / 201300,,020204         MOVEI   AC,020204             ;; LOAD UP AC WITH P2 STORAGE TABLE ADDRGSS
150257 / 201240,,020373         MOVEI   GO,020373             ;; AND P2 RUN TABLE
150260 / 254000,,150263          JRST       SPWPP             ;
                       SPWP1:
150261 / 201300,,020164         MOVEI   AC,020164             ;; AC STORAGE FOR P1
150262 / 201240,,020273         MOVEI   GO,020273             ;; APPROPRIATE RUN TABLE
                       SPWPP:
150263 / 261153,,024061          PUSH    P,   JOB(PID)        ;;SAVE SO WE CAN RUN SPW UUOS.
150264 / 476013,,023425         SETOM      SPWUUF(PID)        ;; FLAG SPW LEVEL.
150265 / 505240,,000004          HRLI   GO,000004             ;; INDEX SPWGO BY JOB NUMBER
150266 / 201200,,000000         MOVEI    J,                   ;; START AT FRONT
                       SPWPP3:
150267 / 260140,,037464         PUSHJ    P, PWAIT             ;
150270 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
153172 / 000020,,000005                                       ;
153172 / 360620,,000005 POINT 6,20000005,5                    ;
150271 / 135200,,153172           LDB    J,153172             ;; LINK
150272 / 326200,,150307         JUMPN    J,150307             ;; DISPATCH IF NON-ZERO
150273 / 260140,,037501         PUSHJ    P, XWAIT             ;
150274 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150275 / 262153,,024061           POP    P,   JOB(PID)        ;
150276 / 200213,,024061          MOVE    J,   JOB(PID)        ;; PUT JOB NUMBER UP
150277 / 200444,,027120          MOVE    A,JBTADR(J)          ;; GET PROT-RELOC FOR JOB WE INTERRUPTED
150300 / 202453,,024063         MOVEM    A,JOBADR(PID)        ;;YES.
150301 / 556453,,024065         HLRZM    A,USRREL(PID)        ;
150302 / 402013,,023425         SETZM      SPWUUF(PID)        ;
150303 / 322200,,037403         JUMPE    J,037403             ;;DON'T RESTORE PROT-RELOC FOR JOB 0
150304 / 260140,,072621         PUSHJ    P,072621             ;;GET JOB'S PROT-RELOC
150305 / 700140,,000001         DATAO  APR,000001             ;;SET PR
150306 / 263140,,000000          POPJ    P,                   ;;END OF LOOP, GO HOME
                       SPWPP2:
150307 / 200360,,000005          MOVE    D,@000005            ;;GET LATEST COPY OF SPW WORD
150310 / 602340,,777777          TRNE    D,777777             ;;IS HE BEING FLUSHED?
150311 / 331444,,020473         SKIPL    A,JBTST2(J)          ;;IS THIS JOB RUNNABLE?
150312 / 254000,,150330          JRST      150330             ;;NO, EXIT NOW
150313 / 326540,,150323         JUMPN  PID,150323             ;;JUMP IF P2
150314 / 607440,,040000          TLNN    A,040000             ;;IS HE SUSPENDED SOMEHOW?
150315 / 254000,,150333          JRST      150333             ;;NO, GO RUN HIM
150316 / 332004,,020373         SKIPE       SP2GO(J)          ;;IS HE RUNNING ON P2 TOO?
150317 / 254000,,150330          JRST      150330             ;;YES THEN LET ONLY P2 COUNT THE SUSPENSION.
150320 / 271440,,000001          ADDI    A,000001             ;;INCREMENT THE SUSPENSION COUNT.
                       SWPP2A:
150321 / 542444,,020473          HRRM    A,JBTST2(J)          ;;STORE NEW SUSPENSION COUNT.
150322 / 254000,,150330          JRST      150330             ;;RELEASE CELLS AND CONTINUE SCAN.
                       SWPP2B:
150323 / 607440,,004000          TLNN    A,004000             ;;SUSPENDED ON P2?
150324 / 254000,,150333          JRST      150333             ;;NO.RUN THIS ONE.
150325 / 344440,,150321          AOJA    A,150321             ;;COUNT THE SUSPENSION
                       SPWPP9:
152742 / 000000,,000007                                       ;
152742 / 260400,,000007 POINT 4,00000007,13                   ;
150326 / 137440,,152742           DPB    A,152742             ;;UPDATE COUNT
150327 / 202360,,000005         MOVEM    D,@000005            ;;REPLACE IN CONTROL WORD
                       SPWPP5:
150330 / 260140,,037501         PUSHJ    P, XWAIT             ;
150331 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150332 / 254000,,150267          JRST      SPWPP3             ;
                       ; HERE, WE KNOW THIS JOB IS RUNABLE. NOW, IS IT TIME TO RUN?
                       SPWPP4:
152742 / 000000,,000007                                       ;
152742 / 260400,,000007 POINT 4,00000007,13                   ;
150333 / 135440,,152742           LDB    A,152742             ;; PICK UP SPW COUNT
152641 / 000000,,000007                                       ;
152641 / 220400,,000007 POINT 4,00000007,17                   ;
150334 / 135500,,152641           LDB    B,152641             ;; PICK UP SPW TIME
153370 / 326440,,150326         JUMPN    A,150326             ;;ZERO TICKS HE HAS RUN ONCE.
153371 / 344440,,150341          AOJA    A,SPWPP0             ;
150335 / 322500,,153370         JUMPE    B,153370             ;;RUN HIM HIS ONE TIME.
150336 / 305452,,777777         CAIGE    A,777777(B)          ;;WILL IT BE TIME WHEN WE INCREMENT A?
150337 / 344440,,150326          AOJA    A,150326             ;;NOT TIME YET. INCREMENT AND REPLACE.
150340 / 400440,,000000          SETZ    A,                   ;; YES, ZERO COUNT AND RUN JOB
                       SPWPP0:
152742 / 000000,,000007                                       ;
152742 / 260400,,000007 POINT 4,00000007,13                   ;
150341 / 137440,,152742           DPB    A,152742             ;
150342 / 202360,,000005         MOVEM    D,@    GO            ;
150343 / 200504,,020473          MOVE    B,JBTST2(J)          ;; GET STATUS REGISTER
150344 / 513004,,020473         HLLZS      JBTST2(J)          ;; NOW ZERO ERROR DELAY COUNT
150345 / 603500,,100000          TLNE    B,100000             ;; SHOULD WE WARN HIM OF AN IMPENDING DELAY?
150346 / 254000,,150351          JRST      150351             ;; YES
150347 / 550500,,000012          HRRZ    B,000012             ;; COUNT OF TICKS WHILE SUSPENDED.
150350 / 254000,,150356          JRST      150356             ;; RUN HIM.
                       SPWPP6:
150351 / 322540,,150353         JUMPE  PID,150353             ;; COME HERE IF WE MUST GIVE A WARNING
150352 / 665500,,002000          TLOA    B,002000             ;;TURN ON SUSPENSION WARNING FLAG P2
150353 / 661500,,010000           TLO    B,010000             ;;TELL JOB A SUSPENSION IS INDICATED P1
150354 / 202504,,020473         MOVEM    B,JBTST2(J)          ;; REPLACE JOB STATUS
150355 / 211500,,000001         MOVNI    B,000001             ;; PUT WARNING IN B
                       SPWPP8:
150356 / 205440,,001000         MOVSI    A,001000             ;;TIMEOUT SUPRESSION BIT (P1)
150357 / 322540,,150361         JUMPE  PID,150361             ;
150360 / 205440,,000400         MOVSI    A,000400             ;;TIMEOUT SUPRESSION BIT(P2)
150361 / 616444,,020473          TDNN    A,JBTST2(J)          ;;SKIP IF TSB IS ON
150362 / 201440,,000036         MOVEI    A,000036             ;;TIMEOUT IS HALF A SECOND
150363 / 552453,,023426         HRRZM    A,SPWTMO(PID)        ;;STORE THE TIMEOUT WORD
152734 / 254120,,024112          JRST    2,@  UUO0            ;
150364 / 200440,,152734          MOVE    A,152734             ;
150365 / 271453,,000000          ADDI    A,      (PID)        ;
150366 / 202453,,023430         MOVEM    A,SPWXCT(PID)        ;;SET UP THE UUO EXIT INSTRUCTION
                       ;WHICH IS CLOBBERED BY CH3 ON TIMEOUTS
150367 / 260140,,037501         PUSHJ    P, XWAIT             ;
150370 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150371 / 550440,,000006          HRRZ    A,    AC             ;
150372 / 251446,,000017           BLT    A,    17(AC)         ;; BLT THEM INTO SPWA OR SPWB
150373 / 402006,,000011         SETZM           A(AC)         ;; AND ZERO OUT ACCUMULATOR A IN CORE
150374 / 550740,,000007          HRRZ   17,000007             ;; GET JOB STARTING ADDRESS
150375 / 505740,,004000          HRLI   17,004000             ;; PUT IN IOT USER MODE BIT
150376 / 260140,,072621         PUSHJ    P,072621             ;; GET HIS PR
150377 / 700140,,000001         DATAO  APR,   TAC             ;
150400 / 200104,,027120          MOVE    2,JBTADR(J)          ;; GET HIS PROTECTION-RELOCATION
150401 / 621100,,001777           TLZ    2,001777             ;; ZERO OUT THESE BITS FOR PDP-10
150402 / 200040,,020265          MOVE    1,020265             ;; GET SPACEWAR BUTTONS FOR HIM
150403 / 210640,,000004          MOVN   15,000004             ;;
150404 / 205100,,400000         MOVSI    2,400000             ;
150405 / 242115,,000000           LSH    2,      (15)         ;
150406 / 326540,,150410         JUMPN  PID,150410             ;
150407 / 700540,,000002         DATAO   PI,000002             ;;TURN ON MI WITH JOB NUMBER.
150410 / 476004,,032043         SETOM       STIME(J)          ;;FLAG THAT CORE IMAGE HAS BEEN RUN (I.E. MODIFIED)
150411 / 200640,,000004          MOVE   15,000004             ;; SAVE JOB NUMBER
150412 / 200104,,027120          MOVE    2,JBTADR(J)          ;; RESTORE TRUE PROT-REL
150413 / 200347,,000115          MOVE    7,JOBRL2(PROG)       ;; UPPER TOO
150414 / 200304,,026114          MOVE    6,JBTSTS(J)          ;
150415 / 200140,,000012          MOVE    3,000012             ;; GET FLAG REGISTER
150416 / 201200,,000001         MOVEI    4,     1             ;
150417 / 332000,,000013         SKIPE         PID             ;
150420 / 201200,,000002         MOVEI    4,     2             ;
150421 / 402000,,000005         SETZM           5             ;
150422 / 336000,,000562         SKIPN       P2NUM             ;
150423 / 254000,,150431          JRST      SIXDED             ;
150424 / 326540,,150430         JUMPN  PID,SIXTST             ;
150425 / 335000,,025477        SKIPGE      025477             ;
150426 / 476000,,000005         SETOM           5             ;
150427 / 254160,,000017          JRST    3,@    17            ;
                       SIXTST:
150430 / 335000,,024261        SKIPGE      024261             ;
                       SIXDED:
150431 / 476000,,000005         SETOM           5             ;
150432 / 254160,,000017          JRST    3,@    17            ;
                       ; INTERRUPT LOCATIONS FOR BOTH PROCESSORS
                       SPWINT:
150433 / 700240,,000011          CONI  APR,     A             ;
150434 / 602440,,020000          TRNE    A,   ILM             ;
150435 / 661440,,000010           TLO    A,ILMSPW             ;
150436 / 602440,,010000          TRNE    A,   NXM             ;
150437 / 661440,,000004           TLO    A,NXMSPW             ;
150440 / 602440,,200000          TRNE    A,   POV             ;
150441 / 661440,,000002           TLO    A,POVSPW             ;
150442 / 700200,,531113          CONO  APR,531113             ;; CLEAR ANY CONCEIVABLE ERROR
150443 / 540440,,000616           HRR    A,000616             ;; GET LOCATION OF ERROR
150444 / 202440,,020175         MOVEM    A,020175             ;; SET INTO SAVED ACCUMULATOR
151676 / 000000,,000000                                       ;
150445 / 200540,,151676          MOVE  PID,151676             ;
150446 / 254400,,150542          JRST   10,150542             ;; TREAT AS A UUO
                       SPWERR:
150447 / 200213,,024061          MOVE    J,   JOB(PID)        ;
150450 / 200444,,026620          MOVE    A, UUOPC(J)          ;
150451 / 336000,,000013         SKIPN         PID             ;
150452 / 552440,,020175         HRRZM    A,020175             ;
150453 / 332000,,000013         SKIPE         PID             ;
150454 / 552440,,020215         HRRZM    A,020215             ;
                       SPWXIT:
150455 / 200140,,020167          MOVE    P,020167             ;
150456 / 332000,,000013         SKIPE         PID             ;
150457 / 200140,,020207          MOVE    P,020207             ;
150460 / 252140,,150461         AOBJP    P,150461             ;;GET OLD UUOPC (SAVED BY SPWUUO)
150461 / 262144,,026620           POP    P, UUOPC(J)          ;; RESTORE UUO-LEVEL PC WORD
150462 / 254000,,150542          JRST      SPWUUX             ;
                       SP2INT:
150463 / 700240,,000011          CONI  APR,     A             ;
150464 / 602440,,020000          TRNE    A,   ILM             ;
150465 / 661440,,000010           TLO    A,ILMSPW             ;
150466 / 602440,,010000          TRNE    A,   NXM             ;
150467 / 661440,,000004           TLO    A,NXMSPW             ;
150470 / 602440,,200000          TRNE    A,   POV             ;
150471 / 661440,,000002           TLO    A,POVSPW             ;
150472 / 602440,,400000          TRNE    A,   CNS             ;
150473 / 661440,,000001           TLO    A,CNSSPW             ;
150474 / 700200,,531113          CONO  APR,531113             ;; CLEAR APR ERROR
150475 / 540440,,000731           HRR    A,000731             ;; GET LOCATION OF ERROR
150476 / 202440,,020215         MOVEM    A,020215             ;
151732 / 000000,,001216                                       ;
150477 / 200540,,151732          MOVE  PID,151732             ;
150500 / 254400,,150542          JRST   10,SPWUUX             ;
                       SPWUUO:
                       ;THE FOLLOWING 2 INST. PREVENT UUO'S FROM SPACEWAR--RPH 12-26-71
                       ;	SKIPL	@UUOLOC(PID)
                       ;	JRST	SPWUUX
150501 / 326540,,150542         JUMPN  PID,150542             ;;NO UUO'S ON 6 GODDAMMIT!
150502 / 200200,,020170          MOVE    J,020170             ;;GET JOB NO. OF SPW JOB.
150503 / 332744,,034365         SKIPE   17,UUOPTR(J)          ;;MUST CHECK THIS HERE SO WE DON'T DO TESTS ON UUO
150504 / 254000,,150524          JRST      SPWUU3             ;
                       SPWUU1:
150505 / 332773,,024116         SKIPE   17,@UUOLOC(PID)       ;;STOP ON 0
152242 / 040000,,000000          CALL                         ;
150506 / 316740,,152242          CAMN   17,152242             ;;OR CALL WITH 0 ADR
150507 / 254000,,150542          JRST      SPWUUX             ;
150510 / 554740,,000017          HLRZ   17,    17             ;
150511 / 254200,,000000          JRST    4,                   ;
150511 / 306740,,254200          CAIN   17,      (<JRST 4,>)  ;;OR HALT
150512 / 254000,,150542          JRST      SPWUUX             ;
                       ;	SKIPE	PID
                       ;	MOVE	J,J+SPWB
                       SPWUU2:
150513 / 202213,,024061         MOVEM    J,   JOB(PID)        ;;PUT WHERE UUOCON WILL SEE IT.
150514 / 200344,,027120          MOVE PROG,JBTADR(J)          ;;ALSO RELOCATION.
150515 / 202353,,024063         MOVEM PROG,JOBADR(PID)        ;
150516 / 556353,,024065         HLRZM PROG,USRREL(PID)        ;
150517 / 200140,,020167          MOVE    P,020167             ;;GET A PDL FOR UUOCON.
                       ;	SKIPE	PID
                       ;	MOVE	P,SPWB+P
150520 / 261144,,026620          PUSH    P, UUOPC(J)          ;; AND SAVE THE OLD UUO PC WORD
150521 / 200253,,024112          MOVE  DAT,  UUO0(PID)        ;; PICK UP RETURN
150522 / 200633,,024116          MOVE  UUO,@UUOLOC(PID)       ;; AND UUO ITSELF
150523 / 254000,,057107          JRST      057107             ;;LET UUOCON HANDLE IT.
                       SPWUU3:
153103 / 336017,,000007         SKIPN      000007(17)         ;
150524 / 256200,,153103          XCTR   XR,153103             ;;IF SIMULATOR IS ENABLED FOR SPACEWAR,
153104 / 336017,,000010         SKIPN      000010(17)         ;
150525 / 256200,,153104          XCTR   XR,153104             ;;WE'LL BYPASS THE DISMISSAL TESTS
150526 / 254000,,150505          JRST      SPWUU1             ;
150527 / 254000,,150513          JRST      SPWUU2             ;
                       SPTMOE:
150530 / 201540,,000000         MOVEI  PID,                   ;;ASSUME PDP-10
150531 / 700340,,000040         CONSO  APR,000040             ;;SKIP IF WE ARE THE PDP-10
150532 / 201540,,001216         MOVEI  PID,001216             ;;PDP-6
150533 / 205440,,000020         MOVSI    A,000020             ;;SET TIMEOUT BIT
150534 / 540453,,023427           HRR    A,SPWBLO(PID)        ;;LOOK AT HOW WE WERE SHOT DOWN
150535 / 332000,,000013         SKIPE         PID             ;
150536 / 202440,,020215         MOVEM    A,020215             ;;STORE EVIL BITS
150537 / 336000,,000013         SKIPN         PID             ;
150540 / 202440,,020175         MOVEM    A,020175             ;
150541 / 254000,,150542          JRST      150542             ;;PRETEND UUO
                       ; WE GET HERE ON ERROR IN SPW MODE JOB OR DISMISS
                       SPWUUX:
150542 / 205740,,020164         MOVSI   17,020164             ;; RESTORE P1 ACCUMULATORS
150543 / 332000,,000013         SKIPE         PID             ;
150544 / 205740,,020204         MOVSI   17,020204             ;; RESTORE P2 ACCUMULATORS
150545 / 251740,,000017           BLT   17,    17             ;
150546 / 322440,,150556         JUMPE    A,150556             ;; NO ERRORS, SCAN FOR NEXT JOB.
150547 / 260140,,037464         PUSHJ    P, PWAIT             ;
150550 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150551 / 513020,,000005         HLLZS      @000005            ;; ERROR, KILL THIS JOB
150552 / 661440,,020000           TLO    A,020000             ;; ADD ERROR BIT TO THOSE ALREADY THERE
150553 / 202444,,020473         MOVEM    A,JBTST2(J)          ;; MOVE IN ERROR BIT
150554 / 260140,,037501         PUSHJ    P, XWAIT             ;
150555 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
                       SPWUU0:
151761 / 000000,,150557                                       ;
150556 / 254120,,151761          JRST    2,@151761            ;
                       SPWPPB:
150557 / 260140,,037464         PUSHJ    P, PWAIT             ;
150560 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150561 / 336020,,000005         SKIPN      @    GO            ;
150562 / 254000,,150575          JRST      SPWPPC             ;
152645 / 000020,,000005                                       ;
152645 / 220420,,000005 POINT 4,20000005,17                   ;
150563 / 135440,,152645           LDB    A,152645             ;;GET HIS TIME FIELD 
150564 / 326440,,150575         JUMPN    A,SPWPPC             ;
150565 / 326540,,150572         JUMPN  PID,SPWPPD             ;
150566 / 260140,,150120         PUSHJ    P,150120             ;;ZERO TICKS. RELEASE P1 SPACEWAR
150567 / 332004,,020373         SKIPE       SP2GO(J)          ;
150570 / 254000,,150575          JRST      SPWPPC             ;
150571 / 254000,,150574          JRST      SPWPPE             ;
                       SPWPPD:
150572 / 260140,,150133         PUSHJ    P,150133             ;;ZERO TICKS. RELEASE P2 SPACEWAR
150573 / 336004,,020273         SKIPN       SPWGO(J)          ;
                       SPWPPE:
150574 / 402004,,020473         SETZM      JBTST2(J)          ;;ZERO THIS IF NOT SPW ACTIVE ON OTHER P.
                       SPWPPC:
150575 / 200444,,020473          MOVE    A,JBTST2(J)          ;;PICK UP JOB STATUS
150576 / 326540,,150613         JUMPN  PID,SPWPPF             ;
150577 / 205340,,040000         MOVSI    D,040000             ;;P1 SUSPEND BIT
150600 / 336004,,020373         SKIPN       SP2GO(J)          ;;IS THERE SPACEWAR ON P2 ALSO?
150601 / 205340,,044000         MOVSI    D,044000             ;;NONE ON P2. GET BOTH PROC. SUSP BITS.
150602 / 623440,,010000          TLZE    A,010000             ;;HAS WARNING BEEN GIVEN?
150603 / 670440,,000007           TDO    A,000007             ;;YES, SUSPEND THIS JOB
150604 / 641440,,044000           TLC    A,044000             ;;ARE BOTH NOW SUSPENDED?
150605 / 647440,,044000          TLCN    A,044000             ;;
150606 / 621440,,100000           TLZ    A,100000             ;;BOTH NOW SUSPENDED, CLEAR SUSPENSION REQ.
150607 / 202444,,020473         MOVEM    A,JBTST2(J)          ;; AND REPLACE JOB STATUS
150610 / 260140,,037501         PUSHJ    P, XWAIT             ;
150611 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150612 / 254000,,150267          JRST      SPWPP3             ;
                       SPWPPF:
150613 / 205340,,004000         MOVSI    D,004000             ;;P2 SUSPEND BIT.
150614 / 336004,,020273         SKIPN       SPWGO(J)          ;
150615 / 205340,,044000         MOVSI    D,044000             ;
150616 / 623440,,002000          TLZE    A,002000             ;;HAS SUSPENSION WARNING BEEN GIVEN?
150617 / 670440,,000007           TDO    A,000007             ;;YES. SET SUSPENSION.
150620 / 641440,,044000           TLC    A,044000             ;;ARE BOTH NOW SUSPENDED?
150621 / 647440,,044000          TLCN    A,044000             ;;
150622 / 621440,,100000           TLZ    A,100000             ;;BOTH NOW SUSPENDED, CLEAR SUSPENSION REQ.
150623 / 202444,,020473         MOVEM    A,JBTST2(J)          ;;STORE JOB STATUS
150624 / 260140,,037501         PUSHJ    P, XWAIT             ;
150625 / 201040,,020267         MOVEI  TAC,SPWCSC             ;
150626 / 254000,,150267          JRST      SPWPP3             ;
150627 /                 ;::    BEND STANFO.SPWSER.
150627 /               ;: SPWSER[J17,SYS] EOF.
150627 /               ;: TVSER[J17,SYS]
150627 /                 ;::   BEGIN STANFO.TVSER.
                       TVINI:
150627 / 701200,,000000          CONO  IOP,                   ;;STOP THE 167.
150630 / 740600,,000000          CONO  404,                   ;;AND THE CAMERA
150631 / 263140,,000000          POPJ    P,                   ;;AND RETURN.
                       ;END IFE FTDISK
150632 / 254000,,150627          JRST      150627             ;;INITIALIZE
150633 / 254000,,150713          JRST      150713             ;;HUNG TV CAMERA
                       TVDSP:
150634 / 263140,,000000          POPJ    P,                   ;;RELEASE.
150635 / 263140,,000000          POPJ    P,                   ;;CLOSE OUTPUT
150636 / 265240,,043257           JSP  DAT,043257             ;;OUTPUT
150637 / 265240,,043257           JSP  DAT,043257             ;;INPUT
150640 / 254000,,037401          JRST      037401             ;;ENTER
150641 / 254000,,037401          JRST      037401             ;;LOOKUP
150642 / 265240,,043257           JSP  DAT,043257             ;;DUMP OUTPUT
150643 / 254000,,150653          JRST      150653             ;;DUMP INPUT
150644 / 263140,,000000          POPJ    P,                   ;;USETO
150645 / 263140,,000000          POPJ    P,                   ;;USETI
150646 / 263140,,000000          POPJ    P,                   ;;UGETF
150647 / 254000,,037401          JRST      037401             ;;RENAME
150650 / 263140,,000000          POPJ    P,                   ;;CLOSE INPUT
150651 / 263140,,000000          POPJ    P,                   ;;UTPCLR
150652 / 263140,,000000          POPJ    P,                   ;;MTAPE
                       TVINP:
151506 / 550654,,000000          HRRZ  AC1,      (UUO)        ;
150653 / 256200,,151506          XCTR   XR,151506             ;;ADDRESS CHECK THE COMMAND BLOCK
152472 / 200114,,000003          MOVE TAC1,     3(UUO)        ;
150654 / 256200,,152472          XCTR   XR,152472             ;;ADDRESS CHECK THE END.
152473 / 200115,,000000          MOVE TAC1,      (AC1)        ;
150655 / 256200,,152473          XCTR   XR,152473             ;;ADDRESS CHECK FIRST DATA LOCATION.
151531 / 564114,,000000          HLRO TAC1,      (UUO)        ;
150656 / 256200,,151531          XCTR   XR,151531             ;;GET -SIZE OF TRANSFER
150657 / 307640,,000114          CAIG  AC1,000114             ;;ABOVE AREA PROTECTED FROM I/O?
150660 / 254000,,043217          JRST      043217             ;;NO. ADDRESS ERROR.
150661 / 274640,,000002           SUB  AC1,000002             ;;CALCULATE THE END OF THE TRANSFER.+1
                       ;ADDRESS CHECK IS DONE BELOW.
150662 / 476006,,000020         SETOM      DSKCNT(DDB)        ;;FLAG WE ARE THE TV CAMERA (SEE DSKSER)
150663 / 554100,,000007          HLRZ TAC1,000007             ;;GET LOWERS PROTECTION.
150664 / 301114,,000000          CAIL TAC1,      (UUO)        ;;MAKE SURE COMMAND BLOCK IS IN LOWER
150665 / 315100,,000015         CAMGE TAC1,000015             ;;MAKE SURE DATA IS IN THE LOWER TOO.
150666 / 254000,,043217          JRST      043217             ;;ADDRESS ERROR.
150667 / 201060,,000014         MOVEI  TAC,@000014            ;;GET ADDRESS OF COMMAND BLOCK
150670 / 202046,,000017         MOVEM  TAC,DSKBUF(DDB)        ;;STORE ADDRESS OF COMMANDS. FOR TVRED
150671 / 514100,,000006          HRLZ TAC1,000006             ;;SET UP FOR MONITOR QUEUE
150672 / 661100,,400000           TLO TAC1,400000             ;;FLAG AS INPUT.
150673 / 260140,,045233         PUSHJ    P,045233             ;;YES, LOCK INTO CORE FIRST
150674 / 254000,,113306          JRST      113306             ;;THEN GO TO FAST-BAND SERVICE FOR QUEUEING
                       TVRED:
150675 / 201300,,022552         MOVEI  DDB,022552             ;;HERE FROM FBPACK
150676 / 200106,,000017          MOVE TAC1,DSKBUF(DDB)        ;
                       ;HERE FROM MONGO WITH IOP OURS AND ADDRESS OF USERS 4
                       ;WORD COMMAND BLOCK IN TAC1.  WE MAY BE AT UUO LEVEL
                       ;IF MONITOR BUFFER WAS EMPTY WHEN WE CALLED TVIN, OR WE
                       ;MAY BE AT INTERRUPT LEVEL, IF WE GOT HERE THROUGH THE
                       ;SUCCESSFUL COMPLETION OF THE PREVIOUS DISK OP.
150677 / 135200,,037575           LDB    J, PJOBN             ;
150700 / 550204,,027120          HRRZ    J,JBTADR(J)          ;;RELOCATION
150701 / 270202,,000000           ADD    J,      (TAC1)       ;;RELOCATE CORE ADDRESS
150702 / 201040,,300070         MOVEI  TAC,300070             ;;CONSO BITS FOR IOP.
150703 / 700600,,001002          CONO   PI,001002             ;;JUST IN CASE.
150704 / 701200,,000006          CONO  IOP,000006             ;;GIVE IOP ITS CHANNEL AND
                       ;SET IT UP FOR INPUT.
150705 / 701140,,000004         DATAO  IOP,000004             ;;FEED IT WC,MA (ABSOLUTE).
150706 / 740622,,000001          CONO   TV,@     1(TAC1)      ;;SEE TV INTERFACE WRITEUP.
150707 / 740542,,000002         DATAO   TV,     2(TAC1)       ;
150710 / 542040,,000673          HRRM  TAC, TVCON             ;
150711 / 700600,,002002          CONO   PI, DSKON             ;
150712 / 263140,,000000          POPJ    P,                   ;
                       HUNG:
150713 / 354003,,000000          AOSA            (P)          ;;SET SKIP RETURN SO JOB WON'T BE KILLED.
                       TVINT:
150714 / 264000,,001035           JSR      001035             ;;SAVE ACS, SET UP PDL.
                       TVIN1:
150715 / 201300,,022552         MOVEI  DDB, TVDDB             ;
150716 / 200046,,000017          MOVE  TAC,DSKBUF(DDB)        ;
150717 / 701241,,000003          CONI  IOP,     3(TAC)        ;;GIVE USER IOP STATUS
150720 / 200101,,000003          MOVE TAC1,     3(TAC)        ;;GET STATUS FOR US TOO.
150721 / 200006,,000002          MOVE      DEVIOS(DDB)        ;;GET IOS
150722 / 602100,,300060          TRNE TAC1,300060             ;;ANY IOP ERROR BITS?
150723 / 606000,,000100          TRNN      000100             ;;ENABLED FOR THIS DATA?
150724 / 254000,,150733          JRST      150733             ;;NO ERRORS OR NOT ENABLED FOR ERRORS
150725 / 135200,,037575           LDB    J, PJOBN             ;
150726 / 701040,,000000         DATAI  IOP,                   ;;GET THE IOP WCMA
150727 / 550000,,000000          HRRZ                         ;
150730 / 550104,,027120          HRRZ TAC1,JBTADR(J)          ;;GET THE USER'S ADDRESS
150731 / 274000,,000002           SUB      000002             ;;USER'S RELATIVE ADDRESS. 
150732 / 506001,,000003          HRLM           3(TAC)        ;;GIVE USER HIS ADDRESS.
                       TVIN2:
150733 / 701200,,000000          CONO  IOP,                   ;
150734 / 513000,,000673         HLLZS       TVCON             ;
150735 / 201000,,010000         MOVEI      010000             ;; FIRST, CLEAR THE ACTIVE BIT
150736 / 413006,,000002        ANDCAB      DEVIOS(DDB)        ;
150737 / 603000,,000001          TLNE      000001             ;; NOW, BRING HIM OUT OF IO WAIT
150740 / 260140,,046107         PUSHJ  PDP,SETIOD             ;
150741 / 254000,,113567          JRST      113567             ;; NOW TO FAST-BAND SERVICE TO BE DEQUEUED
150742 /                 ;::    BEND STANFO.TVSER.
150742 /               ;: TVSER[J17,SYS] EOF.
150742 /               ;: ADSER[J17,SYS]
150742 /                 ;::   BEGIN STANFO.ADSER.
150742 / 254000,,150763          JRST      150763             ;;INITIALIZE
150743 / 254000,,151124          JRST      151124             ;;HUNG: PRINT MESS & STOP JOB.
                       ADDSP:
150744 / 263140,,000000          POPJ    P,                   ;;RELEASE
150745 / 263140,,000000          POPJ    P,                   ;;CLOSE
150746 / 265240,,043257           JSP  DAT,043257             ;;BUFFERED OUTPUT
150747 / 265240,,043257           JSP  DAT,043257             ;;BUFFERED INPUT
150750 / 254000,,037401          JRST      037401             ;;ENTER
150751 / 254000,,037401          JRST      037401             ;;LOOKUP
150752 / 254000,,151004          JRST      151004             ;;DUMP OUTPUT (REALLY DAC)
150753 / 254000,,151003          JRST      151003             ;;DUMP INPUT
150754 / 263140,,000000          POPJ    P,                   ;;USETO
150755 / 263140,,000000          POPJ    P,                   ;;USETI
150756 / 263140,,000000          POPJ    P,                   ;;UGETF
150757 / 254000,,037401          JRST      037401             ;;RENAME
150760 / 263140,,000000          POPJ    P,                   ;;CLOSE INPUT
150761 / 263140,,000000          POPJ    P,                   ;;UTPCLR
150762 / 263140,,000000          POPJ    P,                   ;;MTAPE
                       ;SYSTEM INITIALIZATION OF AD
                       ADSET:
150763 / 000000,,000002                                       ;
150763 / 201040,,000042         MOVEI  TAC,000042             ;;ASSUMED LOCATION OF PI CHANNEL WORDS
150764 / 336100,,000562         SKIPN TAC1,000562             ;;IS P2 ACTIVE?
150765 / 200100,,000561          MOVE TAC1,000561             ;;NO. 
150766 / 603100,,000040          TLNE TAC1,000040             ;;IS THIS P IN MA OFFSET?
150767 / 271040,,000100          ADDI  TAC,000100             ;;YES: ADD OFFSET.
150770 / 202040,,022633         MOVEM  TAC,022633             ;;STORE LOCATION OF BLKI/O INSTRUCTION
152755 / 264000,,000611           JSR         CH1             ;
150771 / 200100,,152755          MOVE TAC1,152755             ;;;replaced;;CAT(CH,\ADCHN)]	;LOAD JSR FOR P1.
150772 / 332000,,000562         SKIPE      000562             ;;ARE WE USING P2?
152756 / 264000,,000716           JSR       P2CH1             ;
150773 / 200100,,152756          MOVE TAC1,152756             ;;;replaced;;CAT(P2CH,\ADCHN)]	;YES. LOAD JSR FOR P2
150774 / 202101,,000001         MOVEM TAC1,     1(TAC)        ;;STUFF IT INTO SECOND PI LOCATION
150775 / 202100,,022636         MOVEM TAC1,022636             ;;AND SAVE THE INSTRUCTION HERE
150776 / 271040,,000001          ADDI  TAC,     1             ;
150777 / 202040,,022637         MOVEM  TAC,022637             ;;POINTER TO THE JSR TO INTERRUPT ROUTINE.
151000 / 402000,,022630         SETZM       ADBKO             ;
151001 / 402000,,022632         SETZM       ADADV             ;
151002 / 263140,,000000          POPJ    P,                   ;
                       ;INPUT/OUTPUT UUOS
                       ADIN:
151003 / 625000,,000020          TLZA      000020             ;;CLEAR IO AND SKIP
                       ADOUT:
151004 / 665000,,000020          TLOA      000020             ;;SET IO AND SKIP
151600 / 720400,,022630          BLKI  DCB, ADBKO             ;
151005 / 334040,,151600         SKIPA  TAC,151600             ;;FOR INPUT GET BLKI AND SKIP.
151601 / 720500,,022630          BLKO  DCB, ADBKO             ;
151006 / 200040,,151601          MOVE  TAC,151601             ;;FOR OUTPUT, GET BLKO
151007 / 202060,,022633         MOVEM  TAC,@022633            ;;STORE BLKI/O IN FIRST PI LOCATION
151010 / 550040,,000014          HRRZ  TAC,000014             ;;NOW ADDRESS CHECK
151011 / 313040,,024065         CAMLE  TAC,USRREL             ;
151012 / 254000,,043211          JRST      043211             ;;COMMAND WORD OUT OF BOUNDS.
151013 / 550060,,000014          HRRZ  TAC,@000014            ;;GET FIRST IOWD.
151014 / 564260,,000014          HLRO  DAT,@   UUO            ;
151015 / 274040,,000005           SUB  TAC,000005             ;;IS FINAL ADDRESS IN BOUNDS?
151016 / 313040,,024065         CAMLE  TAC,USRREL             ;
151017 / 254000,,043211          JRST      043211             ;;NO.
151020 / 200060,,000014          MOVE  TAC,@000014            ;;YES.
151021 / 271047,,000000          ADDI  TAC,      (PROG)       ;;FORM ABSOLUTE ADDRESS.
151022 / 202040,,022635         MOVEM  TAC,022635             ;;STORE AS THE BLKO/I WORD
151023 / 201060,,000014         MOVEI  TAC,@000014            ;;GENERATE ABSOLUTE ADDRESS
151024 / 200101,,000001          MOVE TAC1,     1(TAC)        ;;CONO TO 136.
151025 / 421100,,000007        ANDCMI TAC1,000007             ;;REMOVE HIS PI NUMBER...
151026 / 435100,,000001          IORI TAC1,000001             ;;AND INSERT OURS
151027 / 552100,,022626         HRRZM TAC1,022626             ;;PUT WHERE IT WILL BE HIT.
151030 / 550101,,000002          HRRZ TAC1,     2(TAC)        ;;CONO TO 424.
151031 / 552100,,022627         HRRZM TAC1,022627             ;;REMEMBER IT LIKEWISE.
151032 / 201101,,000003         MOVEI TAC1,     3(TAC)        ;;CONI FROM 136.
151033 / 552100,,022624         HRRZM TAC1,022624             ;;TO BE REMEMBERED
151034 / 201101,,000004         MOVEI TAC1,     4(TAC)        ;;CONI FROM A/D.
151035 / 552100,,022625         HRRZM TAC1,022625             ;;LIKEWISE.
151036 / 260140,,045233         PUSHJ    P,045233             ;;MARK A/D IN USE AND STOP JOB.
                       AD2:
151037 / 201300,,022613         MOVEI  DDB, ADDDB             ;
151040 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
151041 / 135040,,037574           LDB  TAC,037574             ;;GET MODE.
                       ;	CAIN	TAC,SD			;MODE 15?	- FLUSHED 8/7/73
                       ;	POPJ	P,			;YES. RETURN.	- 
151042 / 602000,,000100          TRNE      000100             ;;CONTINUOUS MODE ?
151043 / 254000,,151053          JRST      151053             ;;YES.
151044 / 306040,,000017          CAIN  TAC,000017             ;;17?
152420 / 151065,,000001                                       ;
151045 / 334040,,152420         SKIPA  TAC,152420             ;;YES. JUST WAIT ONE JIFFIE.
                       WT:
152417 / 151063,,000003                                       ;
151046 / 200040,,152417          MOVE  TAC,152417             ;;NO. GET CLOCK DESCRIPTOR.
151047 / 700600,,000400          CONO   PI, PIOFF             ;
151050 / 136040,,024117          IDPB  TAC,024117             ;;ENTER CLOCK REQUEST
151051 / 700600,,000200          CONO   PI,  PION             ;
151052 / 263140,,000000          POPJ    P,                   ;;RETURN TO UUOCON.
                       FOO:
                       ;CONTINUOUS MODE.
152770 / 264000,,022640           JSR      AD2INT             ;
151053 / 200040,,152770          MOVE  TAC,152770             ;;MAKE INTERRUPT GO TO RIGHT PLACE.
151054 / 202060,,022637         MOVEM  TAC,@ADJSRL            ;
151055 / 552040,,022632         HRRZM  TAC,022632             ;;PREPARE TO GET JOB RESTARTED AT ONCE.
151056 / 331000,,022630         SKIPL      022630             ;;IS OUTPUT ALREADY GOING ON ?
151057 / 254000,,151065          JRST      151065             ;;NO. START IT. JOB WILL GO ON SINCE ADADV>0.
151060 / 200040,,022635          MOVE  TAC,022635             ;;YES. SAVE PTR. FOR NEXT BUFFER.
151061 / 202040,,022632         MOVEM  TAC,022632             ;;ADADV ALSO SERVES AS A FLAG (SEE ADP1).
151062 / 263140,,000000          POPJ    P,                   ;
                       ;HERE AT P1 CLOCK LEVEL. READY TO TELL P2 TO START.
                       CLOC2:
151063 / 740740,,000200         CONSO   TV,000200             ;;IS BUTTON BEING PUSHED?
151064 / 254000,,151046          JRST      151046             ;;NO. WAIT ANOTHER 3 TICKS
                       CLOC3:
151065 / 402000,,022631         SETZM       ADERR             ;
151066 / 200040,,022635          MOVE  TAC,022635             ;;GET BLKI/O WORD.
151067 / 202040,,022630         MOVEM  TAC, ADBKO             ;
151070 / 476000,,022634         SETOM      022634             ;;TELL P2 TO START RUNNING
151071 / 332000,,000562         SKIPE      000562             ;;IF THERE'S NO P2, WE DO IT OURSELVES.
151072 / 263140,,000000          POPJ    P,                   ;;WAIT FOR P2 CLOCK LEVEL TO START IT.
                       ADP2:
151073 / 200040,,022634          MOVE  TAC,022634             ;;HERE FROM P2 CLOCK LEVEL (OR P1 IF NO P2)
151074 / 322040,,037403         JUMPE  TAC,037403             ;;P2 DOESN'T SKIPN ON 2 PROCESSOR CELLS.
151075 / 332000,,022631         SKIPE      022631             ;;ERRORS YET?
151076 / 254000,,151113          JRST      151113             ;;YES. GO BLAST IT
151077 / 402000,,022634         SETZM      022634             ;;CLEAR CLOCK LEVEL REQUEST FLAG
151100 / 742600,,004000          CONO   AD,004000             ;; STOP IT IF IT IS RUNNING
151101 / 201040,,000020         MOVEI  TAC,000020             ;; WAIT FOR IT
151102 / 367040,,151102          SOJG  TAC,151102             ;
151103 / 724200,,000000          CONO  ADC,                   ;; KILL NEW AD-DA IF RUNNING
151104 / 724600,,000000          CONO  DAC,                   ;; OTHERWISE, WILL LOOP WITHOUT JSR P2CH1
151105 / 254000,,000000          JRST                         ;
151105 / 205040,,254000         MOVSI  TAC,      (<JRST>)     ;
151106 / 502040,,000717          HLLM  TAC,000717             ;; MAKE US JUMP TO APPROPRIATE ROUTINE
151107 / 720620,,022626          CONO  DCB,@ADLOC3            ;
151110 / 742620,,022627          CONO   AD,@ADLOC4            ;
151111 / 700600,,002100          CONO   PI,  ADON             ;
151112 / 263140,,000000          POPJ    P,                   ;
                       ;HERE TO STOP THE AD
                       AD6:
151113 / 720600,,200000          CONO  DCB,200000             ;;BLAST THE 136.
151114 / 742600,,004000          CONO   AD,004000             ;;AND THE A/D
151115 / 700600,,001100          CONO   PI,001100             ;;TURN OFF A/D CHANNEL.
151116 / 255000,,000000          JFCL                         ;
151116 / 205040,,255000         MOVSI  TAC,      (<JFCL>)     ;
151117 / 502040,,000717          HLLM  TAC,000717             ;; KILL AD INTERRUPT JUMP
151120 / 200040,,022636          MOVE  TAC,022636             ;;MAKE INTERRUPTS GO TO NORMAL PLACE.
151121 / 202060,,022637         MOVEM  TAC,@ADJSRL            ;
151122 / 402000,,022630         SETZM      022630             ;;NO XFER IN PROGRESS.
151123 / 263140,,000000          POPJ    P,                   ;;AND RETURN.
                       HUNG:
151124 / 476000,,022631         SETOM       ADERR             ;
151125 / 476000,,022634         SETOM       ADACT             ;
151126 / 402000,,022630         SETZM       ADBKO             ;
151127 / 254000,,151142          JRST         AD5             ;
                       ADINT:
151130 / 264020,,002341           JSR      @002341            ;;SAVE ACCUMULATORS.
151131 / 720660,,022624          CONI  DCB,@022624            ;;CONI FROM 136.
151132 / 742660,,022625          CONI   AD,@022625            ;;AND FROM A/D.
151133 / 260140,,151113         PUSHJ    P,151113             ;;KILL A/D AND 136.
151134 / 552140,,022632         HRRZM    P, ADADV             ;
151135 / 332000,,000562         SKIPE      000562             ;;ARE WE ON P2?
151136 / 263140,,000000          POPJ    P,                   ;;YES. RETURN
                       ;IN CLKSER WE HAVE:	SKIPL	ADADV
                       ;			PUSHJ	P,ADP1
                       ADP1:
151137 / 402000,,022632         SETZM      022632             ;;HERE AT P1 CLOCK LEVEL (OR IF NO P2)
151140 / 332000,,022631         SKIPE      022631             ;;ERRORS?
151141 / 263140,,000000          POPJ    P,                   ;;YES.
                       AD5:
151142 / 201300,,022613         MOVEI  DDB, ADDDB             ;
151143 / 200006,,000002          MOVE      DEVIOS(DDB)        ;
151144 / 623000,,000001          TLZE         IOW             ;
151145 / 260140,,046105         PUSHJ    P,STTIOD             ;
151146 / 331000,,022630         SKIPL      022630             ;;IS XFER STILL IN PROGRESS ?
151147 / 620000,,010000           TRZ      010000             ;;NO. LET JOB BE SWAPPED AND SHUFFLED.
151150 / 202006,,000002         MOVEM      DEVIOS(DEVDAT)     ;
151151 / 263140,,000000          POPJ    P,                   ;
151152 /                 ;::    BEND STANFO.ADSER.
151152 /               ;: ADSER[J17,SYS] EOF.
151152 /               ;: MAIL[J17,SYS]
151152 /                 ;::   BEGIN STANFO.MAIL.
                       UMAIL:
151152 / 303500,,000005         CAILE UCHN,000005             ;;AC FIELD IN BOUNDS?
151153 / 254000,,043340          JRST      043340             ;;NO LOSE.
151154 / 550640,,000014          HRRZ  AC1,000014             ;;GET THE EFFECTIVE ADDRESS
151155 / 311653,,024065          CAML  AC1,USRREL(PID)        ;;IS THIS INSIDE OF USER'S MAXIMUM?
151156 / 254000,,043340          JRST      043340             ;;NO LOSE.
151157 / 254032,,151160          JRST      @MALTBL(UCHN)      ;;DISPATCH TO APPROPRIATE ROUTINE
                       ; UUOMAC MALTBL,MAIL
                       MALTBL:
151160 / 000000,,151177                                       ;
151161 / 000000,,151234                                       ;
151162 / 000000,,151242                                       ;
151163 / 000000,,151253                                       ;
151164 / 000000,,151254                                       ;
151165 / 000000,,151175                                       ;
151166 / 710240,,145224          MAIL UUOCNT-1,UUOLNK             ;
                       SKPSEN:
151175 / 265740,,151260           JSP  AC3,151260             ;;THIS JSP MUST BE LABELED SKPSEN
151176 / 254000,,151200          JRST      151200             ;;ADDRESSEE EXISTS, BEHAVE LIKE "SEND" UUO
                       SEND:
151177 / 265740,,151260           JSP  AC3,151260             ;;DAT ← JOB# OF RECEIVING JOB
                       SEND1:
151200 / 332005,,033365         SKIPE      033365(DAT)        ;;DOES THIS GUY HAVE MAIL ALREADY?
151201 / 263140,,000000          POPJ    P,                   ;;YES. CAN'T DO IT.
151472 / 550054,,000001          HRRZ  TAC,     1(UUO)        ;
151202 / 256200,,151472          XCTR   XR,151472             ;;GET THE ADDRESS OF THE MAIL BLOCK
151203 / 201641,,000037         MOVEI  AC1,    37(TAC)        ;;GET ADDRESS OF LAST WORD.
151204 / 313653,,024065         CAMLE  AC1,USRREL(PID)        ;;GOD FORBID HE SHOULD SEND MAIL FROM UPPER.
151205 / 254000,,043211          JRST      ADRERR             ;
151206 / 201740,,000040         MOVEI  AC3,    40             ;
151207 / 260140,,074361         PUSHJ    P,UFSGET             ;
151210 / 552645,,033365         HRRZM  AC1,033365(DAT)        ;
151211 / 271047,,000000          ADDI  TAC,      (PROG)       ;
151212 / 504640,,000001           HRL  AC1,   TAC             ;
151213 / 200700,,000015          MOVE  AC2,   AC1             ;
151214 / 251656,,000037           BLT  AC1,    37(AC2)        ;
151215 / 201205,,000000         MOVEI    J,      (DAT)        ;
151216 / 214044,,020574          MOVM  TAC,JOBQUE(J)          ;; WAKE HIM UP IF HE IS IN IOWQ
151217 / 337004,,026114         SKIPG      JBTSTS(J)          ;; IF NOT RUNNABLE, DON'T REQUE HIM
151220 / 302040,,000005          CAIE  TAC,  IOWQ             ;
151221 / 254000,,151225          JRST      NOWAKE             ;
151222 / 201040,,000014         MOVEI  TAC,  RUNQ             ;
151223 / 212044,,020574         MOVNM  TAC,JOBQUE(J)          ;
151224 / 260140,,046027         PUSHJ    P, REQUE             ;
                       NOWAKE:
151225 / 205640,,004000         MOVSI  AC1,004000             ;; IS HE ENABLED FOR A MAIL INTERRUPT?
151226 / 350003,,000000           AOS            (P)          ;;SET UP SUCCESS RETURN FROM SEND
151227 / 616644,,033665          TDNN  AC1,JBTIEN(J)          ;
151230 / 263140,,000000          POPJ    P,                   ;;NO RETURN QUICK
151231 / 436644,,033765          IORM  AC1,JBTIRQ(J)          ;; YES, GIVE HIM THE INTERRUPT.
151232 / 476013,,023475         SETOM      INTREQ(PID)        ;
151233 / 254000,,046124          JRST      046124             ;;SHUT US OFF TO GET THE INTERRUPT PROCESSED.
                       WRCV:
151234 / 260140,,151242         PUSHJ    P,  SRCV             ;
151235 / 664640,,000005          TROA  AC1,  IOWQ             ;
151236 / 263140,,000000          POPJ    P,                   ;
151237 / 212644,,020574         MOVNM  AC1,JOBQUE(J)          ;
151240 / 260140,,046124         PUSHJ    P,WSCHED             ;
151241 / 254000,,151234          JRST        WRCV             ;
                       SRCV:
151242 / 336644,,033365         SKIPN  AC1,033365(J)          ;
151243 / 263140,,000000          POPJ    P,                   ;
151244 / 402004,,033365         SETZM      033365(J)          ;
151245 / 504040,,000015           HRL  TAC,   AC1             ;
151246 / 541060,,000014          HRRI  TAC,@   UUO            ;
151247 / 201101,,000037         MOVEI TAC1,    37(TAC)        ;
151250 / 251042,,000000           BLT  TAC,      (TAC1)       ;
151251 / 260140,,074163         PUSHJ    P,FSGIVE             ;
151252 / 254000,,037401          JRST      CPOPJ1             ;
                       SKPME:
151253 / 334240,,000004         SKIPA  DAT,     J             ;
                       SKPHIM:
151254 / 265740,,151260           JSP  AC3,GETJOB             ;
151255 / 336005,,033365         SKIPN      033365(DAT)        ;
151256 / 263140,,000000          POPJ    P,                   ;
151257 / 254000,,037401          JRST      CPOPJ1             ;
                       ; ROUTINE TO GET THE JOB NUMBER OF THE ADDRESSEE
                       FNDJOB:
                       GETJOB:
151260 / 200260,,000014          MOVE  DAT,@000014            ;;GET USER'S ARGUMENT
151663 / 777777,,777700                                       ;
151261 / 616240,,151663          TDNN  DAT,151663             ;;IS IT A NAME?
151262 / 254000,,151276          JRST      151276             ;;NO THIS IS A NUMBER
151263 / 205040,,777700         MOVSI  TAC,777700             ;;SEARCH ALL JOB NAMES.
151264 / 312241,,030142          CAME  DAT,JOBNAM(TAC)        ;;IS THIS ONE?
151265 / 253040,,151264         AOBJN  TAC,151264             ;;NOT A MATCH. LOOP.
151266 / 325040,,151301        JUMPGE  TAC,151301             ;;JUMP IF NO NAMES
151267 / 200100,,000001          MOVE TAC1,000001             ;;CONTINUE SCAN. LOOK FOR ANOTHER
151270 / 252100,,151275         AOBJP TAC1,151275             ;;TEST AT TOP OF LOOP. JUMP WHEN DONE
151271 / 312242,,030142          CAME  DAT,JOBNAM(TAC1)       ;;SAME NAME?
151272 / 254000,,151270          JRST      151270             ;;NO. LOOP.
151273 / 201040,,151316         MOVEI  TAC,151316             ;;PICKUP THE AMBIGUOUS NAME ERROR MESSAGE
151274 / 254000,,151302          JRST      151302             ;;GO TO ERROR STUFF
                       GJ2:
151275 / 201241,,000000         MOVEI  DAT,      (TAC)        ;;GET JOB NUMBER.
                       GJ1:
151276 / 200045,,026114          MOVE  TAC,JBTSTS(DAT)        ;;GET JOB STATUS
151277 / 603040,,040000          TLNE  TAC,040000             ;;IS THIS JOB SLOT ASSIGNED?
151300 / 254017,,000000          JRST            (AC3)        ;;YES. RETURN WITH JOB NUMBER IN DAT
                       GJERR:
151301 / 201040,,151307         MOVEI  TAC,151307             ;;GET ADDRESS OF ERROR ROUTINE
                       GJERR1:
151302 / 550740,,000017          HRRZ  AC3,000017             ;; FIND OUT WHO CALLED GETJOB
151303 / 306740,,151176          CAIN  AC3,151176             ;; WAS IT SKPSEN UUO?
151304 / 254000,,037400          JRST      037400             ;; YES, TERMINATE THE UUO
151305 / 260140,,043540         PUSHJ    P,043540             ;; NO, COME BACK WHEN HE TYPES CONTINUE
151306 / 254000,,151260          JRST      151260             ;; 
                       GTGAR1:
                       GTGARP:
151323 /                 ;::    BEND STANFO.MAIL.
151323 /               ;: MAIL[J17,SYS] EOF.
151323 /               ;: PATCH[J17,SYS]
                       ;FORCE OUT THE LITERALS (XLISTED FOR YOUR READING PLEASURE)
                       ;PATCH - PATCH AREA FOR T. S. MONITOR
                       ;THIS PROGRAM SHOULD BE LOADED AFTER LAST NEEDED PROGRAM
                       ;BUT BEFORE SYSMAK,EXEC DDT,USER DDT, AND ONCE
                       PATCH:
155055 /               ;: PATCH[J17,SYS] EOF.
155055 /               ;: SYSMAK[J17,SYS]
155055 /                 ;::   BEGIN STANFO.SYSMAK.
                       ;SYSMAK RUNS IN THE OLD SYSTEM AND CREATES A NEW ONE
                       ;ON TOP OF ITSELF.  WHEN THE SYSTEM IS HALTED AND STARTED
                       ;AT LOCATION 202 (SEE FIRST) CONTROL IS 
                       ;TRANSFERRED TO SYSMAK.  THIS ROUTINE ASSUMES THAT JOB 1
                       ;IS A CORE IMAGE TO RUN IN EXEC MODE.
                       ;IT BLT'S THE PROGRAM DOWN (FROM 140 THROUGH 77777) SO
                       ;THAT IT MAY RUN IN EXEC MODE, AND HALTS.  THE VARIOUS
                       ;INCOMPATABILITIES BETWEEN USER AND EXEC DDT ARE TAKEN
                       ;CARE OF AS WELL.
                       SYSMAK:
155055 / 402000,,000041         SETZM      000041             ;;TRY TO KILL THE 6
155056 / 402000,,000046         SETZM          46             ;
155057 / 402000,,000315         SETZM      SIXRUN             ;
155060 / 201040,,100000         MOVEI    1,100000             ;
155061 / 367040,,155061          SOJG    1,155061             ;;GIVE IT A CHANCE TO DIE
155062 / 550040,,027121          HRRZ    1,027121             ;;GET RELOCATION FOR JOB 1
155063 / 322040,,155105         JUMPE    1,155105             ;;NOT THERE?
155064 / 200101,,000116          MOVE    2,JOBSYM(1)          ;;GET HIS SYMBOL TABLE POINTER.
155065 / 202100,,000036         MOVEM    2,000036             ;;PUT WHERE EXEC DDT WILL SEE IT.
155066 / 251140,,000000           BLT    3,                   ;
155066 / 205400,,251140         MOVSI   10,      (<BLT 3,0>)  ;
155067 / 540401,,000044           HRR   10,JOBREL(1)          ;
155070 / 552400,,000037         HRRZM   10,000037             ;;SET INITIAL MEMORY LIMIT
155071 / 205141,,000140         MOVSI    3,   140(1)          ;
155072 / 541140,,000140          HRRI    3,   140             ;
155073 / 402000,,000000         SETZM                         ;
155073 / 205440,,402000         MOVSI   11,      (<SETZM>)    ;
155074 / 541450,,000001          HRRI   11,     1(10)         ;;ZERO FIRST LOC AFTER THE LAST MOVED BY BLT.
155075 / 205210,,000001         MOVSI    4,     1(10)         ;
155076 / 541210,,000002          HRRI    4,     2(10)         ;;BLT AC
155077 / 200500,,022066          MOVE   12,022066             ;;CLEAR ALL OF CORE
155100 / 275500,,000002          SUBI   12,000002             ;;EXCEPT THE LAST WORD (BLT WITH EA=-1 LOSES)
155101 / 251200,,000000           BLT    4,                   ;
155101 / 505500,,251200          HRLI   12,      (<BLT 4,0>)  ;
155102 / 254200,,000000          JRST    4,                   ;
155102 / 205540,,254200         MOVSI   13,      (<JRST 4,>)  ;
155103 / 540541,,000120           HRR   13, JOBSA(1)          ;;MAKE 11=HALT STARTING ADDRESS.
155104 / 254000,,000010          JRST      000010             ;;BLOCK IT DOWN.
                       SYSBUG:
155107 / 000000,,000007                                       ;
155105 / 712140,,155107         DATAO  CTY,155107             ;
155106 / 254200,,155055          HALT      155055             ;;LET HIM TRY AGAIN
                       MAKEND:
155110 /                 ;::    BEND STANFO.SYSMAK.
155110 /               ;: SYSMAK[J17,SYS] EOF.
155110 /               ;: DDT[J17,SYS]
                       ;SWITCHES:
                       ;	NONE FOR NORMAL, USER DDT
                       ;	UEDDTS←←1 FOR USER EXEC DDT
                       ;	EXEC DDT SETTINGS:
                       ;		EDDT&1=0		ASSUME UDDT
                       ;		EDDT&2=2		ASSUME EDDT WITH PAPER TAPE
                       ;		EDDT&10=10		ASSUME PDP-10 PAPER TAPE INSTEAD OF PDP-6
                       ;		EDDT&20=20		ASSUME SYSTEM EXEC DDT AND COMPILE SPECIAL CODE!
                       ;		EDDT&40=40		MAKE RELOCATABLE EXEC DDT
                       ;		IF LEFT HALF OF EDDT IS NOT=0, DO A LOC<EDDT>B53
                       ;;omit;; bothersome DDT conditional assembly. 'BEND DDT' sln#60065 `2013-02-21 bgbaumgart@mac.com'
                       ;;omit;;IFN FTDDT,<				;THIS ENTIRE ASSEMBLY IS CONDITIONAL
155110 /                 ;::   BEGIN STANFO.DDT.
                       ;SET UP A STARTING ADRESS
                       ;SET UP UEDDT
                       ;;edit;; replace dots with underbars in
                       ;; DEFINE XP' (X.,Y.),<
                       ;; X.←←Y.
                       ;; >
                       ;SETUP PUSHDOWN POINTER IF NOT SYSTEM
                       ;RIGHT HALF FLAGS
                       ;;IFN EDDT&<XWD -1,0>,<LOC <EDDT>B53>
155110 / 434000,,000000           IOR                         ;
                       ;BREAK POINT LOGIC
                       ;THE B
                       BP1:
155110 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155111 / 266240,,155300           JSA    T,  BCOM             ;
155112 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155113 / 000000,,000000                                       ;
155114 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155115 / 266240,,155300           JSA    T,  BCOM             ;
155116 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155117 / 000000,,000000                                       ;
155120 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155121 / 266240,,155300           JSA    T,  BCOM             ;
155122 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155123 / 000000,,000000                                       ;
155124 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155125 / 266240,,155300           JSA    T,  BCOM             ;
155126 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155127 / 000000,,000000                                       ;
155130 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155131 / 266240,,155300           JSA    T,  BCOM             ;
155132 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155133 / 000000,,000000                                       ;
155134 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155135 / 266240,,155300           JSA    T,  BCOM             ;
155136 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155137 / 000000,,000000                                       ;
155140 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155141 / 266240,,155300           JSA    T,  BCOM             ;
155142 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155143 / 000000,,000000                                       ;
155144 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155145 / 266240,,155300           JSA    T,  BCOM             ;
155146 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155147 / 000000,,000000                                       ;
155150 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155151 / 266240,,155300           JSA    T,  BCOM             ;
155152 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155153 / 000000,,000000                                       ;
155154 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155155 / 266240,,155300           JSA    T,  BCOM             ;
155156 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155157 / 000000,,000000                                       ;
155160 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155161 / 266240,,155300           JSA    T,  BCOM             ;
155162 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155163 / 000000,,000000                                       ;
155164 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155165 / 266240,,155300           JSA    T,  BCOM             ;
155166 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155167 / 000000,,000000                                       ;
155170 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155171 / 266240,,155300           JSA    T,  BCOM             ;
155172 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155173 / 000000,,000000                                       ;
155174 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155175 / 266240,,155300           JSA    T,  BCOM             ;
155176 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155177 / 000000,,000000                                       ;
155200 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155201 / 266240,,155300           JSA    T,  BCOM             ;
155202 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155203 / 000000,,000000                                       ;
155204 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155205 / 266240,,155300           JSA    T,  BCOM             ;
155206 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155207 / 000000,,000000                                       ;
155210 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155211 / 266240,,155300           JSA    T,  BCOM             ;
155212 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155213 / 000000,,000000                                       ;
155214 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155215 / 266240,,155300           JSA    T,  BCOM             ;
155216 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155217 / 000000,,000000                                       ;
155220 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155221 / 266240,,155300           JSA    T,  BCOM             ;
155222 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155223 / 000000,,000000                                       ;
155224 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155225 / 266240,,155300           JSA    T,  BCOM             ;
155226 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155227 / 000000,,000000                                       ;
155230 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155231 / 266240,,155300           JSA    T,  BCOM             ;
155232 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155233 / 000000,,000000                                       ;
155234 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155235 / 266240,,155300           JSA    T,  BCOM             ;
155236 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155237 / 000000,,000000                                       ;
155240 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155241 / 266240,,155300           JSA    T,  BCOM             ;
155242 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155243 / 000000,,000000                                       ;
155244 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155245 / 266240,,155300           JSA    T,  BCOM             ;
155246 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155247 / 000000,,000000                                       ;
155250 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155251 / 266240,,155300           JSA    T,  BCOM             ;
155252 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155253 / 000000,,000000                                       ;
155254 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155255 / 266240,,155300           JSA    T,  BCOM             ;
155256 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155257 / 000000,,000000                                       ;
155260 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155261 / 266240,,155300           JSA    T,  BCOM             ;
155262 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155263 / 000000,,000000                                       ;
155264 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155265 / 266240,,155300           JSA    T,  BCOM             ;
155266 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155267 / 000000,,000000                                       ;
155270 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155271 / 266240,,155300           JSA    T,  BCOM             ;
155272 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155273 / 000000,,000000                                       ;
155274 / 000000,,000000                                       ;;JSR TO HERE FOR BREAKPOINT
155275 / 266240,,155300           JSA    T,  BCOM             ;
155276 / 000000,,000000                                       ;;HOLDS INSTRUCTION WHILE BREAKPOINT IS IN PLACE
155277 / 000000,,000000                                       ;
                       BCOM:
155300 / 000000,,000000                                       ;
155301 / 262240,,155345           POP    T,155345             ;;MOVE INSTRUCTION TO LEAV
155302 / 201245,,000540         MOVEI    T,000540(T)          ;
155303 / 542240,,155317          HRRM    T,155317             ;;CONDITIONAL BREAK SETUP
155304 / 201245,,000001         MOVEI    T,000001(T)          ;
155305 / 542240,,155323          HRRM    T,155323             ;;PROCEDE COUNTER SETUP
155306 / 200245,,777236          MOVE    T,777236(T)          ;
155307 / 621240,,010000           TLZ    T,010000             ;;TURN OFF USER MODE BIT
155310 / 502240,,155340          HLLM    T,155340             ;;SAVE FLAGS FOR RESTORING
155311 / 250240,,155300          EXCH    T,  BCOM             ;
155312 / 700300,,000040         CONSZ  APR,000040             ;;DON'T LET PDP-6 TAKE BREAKS IF NO DDT!
155313 / 254000,,155317          JRST       BCOM3             ;
155314 / 332000,,156177         SKIPE       INDDT             ;
155315 / 336000,,156176         SKIPN      KEEPIN             ;
155316 / 254200,,155325          HALT      155325             ;
                       BCOM3:
155317 / 336000,,155651         SKIPN      155651             ;;ADDR MOD TO LOOK AT COND. INST.
155320 / 254000,,155323          JRST       BCOM2             ;
155321 / 256020,,155317           XCT      @ BCOM3            ;
155322 / 254000,,155325          JRST      155325             ;
                       BCOM2:
155323 / 377000,,155652          SOSG      155652             ;;ADDR MOD TO LOOK AT PROCEED COUNTER
155324 / 254000,,155351          JRST       BREAK             ;
                       NOBREA:
155325 / 202240,,156046         MOVEM    T,156046             ;
156741 / 000000,,155345                                       ;
156741 / 331100,,155345 POINT 9,00155345,8                    ;
155326 / 135240,,156741           LDB    T,156741             ;;GET INSTRUCTION
155327 / 301240,,000264          CAIL    T,000264             ;;JSR
155330 / 303240,,000266         CAILE    T,000266             ;;JSA,JSP
155331 / 606240,,000700          TRNN    T,000700             ;;UUO
155332 / 254000,,155341          JRST      155341             ;;MUST BE INTERPRETED
155333 / 302240,,000260          CAIE    T,000260             ;;PUSHJ
155334 / 306240,,000256          CAIN    T,000256             ;;XCT
155335 / 254000,,155341          JRST      155341             ;;MUST BE INTERPRETED
155336 / 200240,,156046          MOVE    T,156046             ;
155337 / 254120,,155340          JRST    2,@155340            ;;RESTORE FLAGS, GO TO LEAV
                       LEAV1:
155340 / 000000,,155345           XWD 0,LEAV                  ;
                       PROC1:
155341 / 200240,,156046          MOVE    T,156046             ;
155342 / 264000,,155354           JSR        SAVE             ;
155343 / 255000,,000000          JFCL                         ;
155344 / 254000,,160603          JRST       PROC2             ;
                       LEAV:
155345 / 000000,,000000                                       ;;INSTRUCTION MODIFIED
155346 / 254020,,155300          JRST      @  BCOM            ;
155347 / 350000,,155300           AOS        BCOM             ;
155350 / 254020,,155300          JRST      @  BCOM            ;
                       BREAK:
155351 / 264000,,155354           JSR        SAVE             ;
155352 / 254000,,160461          JRST      BREAKA             ;
155353 / 254000,,160462          JRST      160462             ;;;BREAKB
                       SAVE:
155354 / 000000,,000000                                       ;;SAVE THE ACS AND PI SYSTEM
155355 / 336000,,156064         SKIPN        SARS             ;
155356 / 254000,,155361          JRST        SAV1             ;
155357 / 350000,,155354           AOS        SAVE             ;
155360 / 254000,,155371          JRST        SAV5             ;
                       SAV1:
155361 / 700240,,155641          CONI  APR,SAVAPR             ;
155362 / 700640,,155635          CONI  PRS, SAVPI             ;
155363 / 700620,,155636          CONO  PRS,@155636            ;
155364 / 202740,,156060         MOVEM   17,  AC17             ;
155365 / 551740,,156041         HRRZI   17,   AC0             ;
155366 / 251740,,156057           BLT   17,156057             ;
155367 / 200240,,155354          MOVE    T,  SAVE             ;
155370 / 502240,,155635          HLLM    T, SAVPI             ;
                       SAV5:
155371 / 476000,,156064         SETOM        SARS             ;
155372 / 201140,,156066         MOVEI    P,    PS             ;
155373 / 260140,,156245         PUSHJ    P,156245             ;;DO THE SWAPPABLE DDT THING!
                       ;IN USER MODE, GET INTO DDT MODE
155374 / 201000,,000000         MOVEI                         ;
156736 / 156061,,000010           XWD SCHM,SCH                ;
155375 / 200240,,156736          MOVE    T,156736             ;
155376 / 251240,,000012           BLT    T,000012             ;;LOAD THE ACS WITH MODE SWITCHES
155377 / 254020,,155354          JRST      @  SAVE            ;
                       XCTBUF:
155400 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155401 / 000000,,000000                                       ;
155402 / 334000,,000000         SKIPA                         ;
155403 / 350000,,155404           AOS      155404             ;
155404 / 254000,,155404          JRST      155404             ;
155405 / 000000,,000000                                       ;
155406 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155407 / 000000,,000000                                       ;
155410 / 334000,,000000         SKIPA                         ;
155411 / 350000,,155412           AOS      155412             ;
155412 / 254000,,155412          JRST      155412             ;
155413 / 000000,,000000                                       ;
155414 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155415 / 000000,,000000                                       ;
155416 / 334000,,000000         SKIPA                         ;
155417 / 350000,,155420           AOS      155420             ;
155420 / 254000,,155420          JRST      155420             ;
155421 / 000000,,000000                                       ;
155422 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155423 / 000000,,000000                                       ;
155424 / 334000,,000000         SKIPA                         ;
155425 / 350000,,155426           AOS      155426             ;
155426 / 254000,,155426          JRST      155426             ;
155427 / 000000,,000000                                       ;
155430 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155431 / 000000,,000000                                       ;
155432 / 334000,,000000         SKIPA                         ;
155433 / 350000,,155434           AOS      155434             ;
155434 / 254000,,155434          JRST      155434             ;
155435 / 000000,,000000                                       ;
155436 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155437 / 000000,,000000                                       ;
155440 / 334000,,000000         SKIPA                         ;
155441 / 350000,,155442           AOS      155442             ;
155442 / 254000,,155442          JRST      155442             ;
155443 / 000000,,000000                                       ;
155444 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155445 / 000000,,000000                                       ;
155446 / 334000,,000000         SKIPA                         ;
155447 / 350000,,155450           AOS      155450             ;
155450 / 254000,,155450          JRST      155450             ;
155451 / 000000,,000000                                       ;
155452 / 700620,,155635          CONO  PRS,@ SAVPI            ;
155453 / 000000,,000000                                       ;
155454 / 334000,,000000         SKIPA                         ;
155455 / 350000,,155456           AOS      155456             ;
155456 / 254000,,155456          JRST      155456             ;
155457 / 000000,,000000                                       ;
                       RESTOR:
155460 / 476000,,156155         SETOM      156155             ;;RESTORE ACS AND PI SYSTEM
                       RESTR1:
155461 / 542240,,155354          HRRM    T,  SAVE             ;
155462 / 200240,,155635          MOVE    T, SAVPI             ;
155463 / 502240,,155354          HLLM    T,  SAVE             ;
155464 / 202200,,156137         MOVEM    W,TEMDDT             ;
155465 / 404240,,155636           AND    T,155636             ;
155466 / 405240,,000177          ANDI    T,   177             ;
155467 / 435240,,002000          IORI    T,002000             ;;TURN ON CHANNELS
155470 / 250240,,155635          EXCH    T, SAVPI             ;
155471 / 201200,,155400         MOVEI    W,XCTBUF             ;
155472 / 000000,,000010                                       ;
155472 / 602240,,000400          TRNE    T,000400             ;
155473 / 000000,,000052                                       ;
155473 / 201200,,155452         MOVEI    W,155452             ;
155474 / 000000,,000011                                       ;
155474 / 602240,,001000          TRNE    T,001000             ;
155475 / 000000,,000044                                       ;
155475 / 201200,,155444         MOVEI    W,155444             ;
155476 / 000000,,000012                                       ;
155476 / 602240,,002000          TRNE    T,002000             ;
155477 / 000000,,000036                                       ;
155477 / 201200,,155436         MOVEI    W,155436             ;
155500 / 000000,,000013                                       ;
155500 / 602240,,004000          TRNE    T,004000             ;
155501 / 000000,,000030                                       ;
155501 / 201200,,155430         MOVEI    W,155430             ;
155502 / 000000,,000014                                       ;
155502 / 602240,,010000          TRNE    T,010000             ;
155503 / 000000,,000022                                       ;
155503 / 201200,,155422         MOVEI    W,155422             ;
155504 / 000000,,000015                                       ;
155504 / 602240,,020000          TRNE    T,020000             ;
155505 / 000000,,000014                                       ;
155505 / 201200,,155414         MOVEI    W,155414             ;
155506 / 000000,,000016                                       ;
155506 / 602240,,040000          TRNE    T,040000             ;
155507 / 000000,,000006                                       ;
155507 / 201200,,155406         MOVEI    W,155406             ;
155510 / 500200,,155354           HLL    W,  SAVE             ;
155511 / 202200,,155535         MOVEM    W,  RES2             ;
155512 / 200240,,156137          MOVE    T,TEMDDT             ;
155513 / 202244,,000001         MOVEM    T,     1(W)          ;
155514 / 550240,,155354          HRRZ    T,  SAVE             ;
155515 / 542244,,000004          HRRM    T,     4(W)          ;
155516 / 335000,,156155        SKIPGE        TEM3             ;
155517 / 254000,,155524          JRST        RES3             ;
155520 / 200240,,155300          MOVE    T,  BCOM             ;
155521 / 202244,,000005         MOVEM    T,     5(W)          ;
155522 / 201244,,000005         MOVEI    T,     5(W)          ;
155523 / 542244,,000001          HRRM    T,     1(W)          ;
                       RES3:
155524 / 200040,,023021          MOVE  TAC,023021             ;; RECOMPUTE MONITOR CHECKSUM
155525 / 260140,,050100         PUSHJ    P, CHECK             ;
155526 / 336000,,155643         SKIPN      155643             ;; ONLY IF COMMANDS COMING FROM KEYBOARD!
155527 / 202100,,024120         MOVEM TAC1,MONSUM             ;
155530 / 260140,,156411         PUSHJ    P,156411             ;;DO THE SWAPPABLE DDT THING
155531 / 205740,,156041         MOVSI   17,   AC0             ;
155532 / 251740,,000017           BLT   17,    17             ;
155533 / 402000,,156064         SETZM        SARS             ;
155534 / 254120,,155535          JRST    2,@  RES2            ;
                       RES2:
155535 / 000000,,000000                                       ;
                       XEC0:
155536 / 202240,,156137         MOVEM    T,TEMDDT             ;
155537 / 260140,,162404         PUSHJ    P,   CRF             ;
155540 / 260140,,162523         PUSHJ    P,TTYLEV             ;
155541 / 260140,,160700         PUSHJ    P,INSRTB             ;
155542 / 200200,,156137          MOVE    W,156137             ;;IN CASE OF INTERUPTS (JS STUFF)
155543 / 265240,,155460           JSP    T,155460             ;;RESTORE WILL XCT W
                       XEC1:
155544 / 254000,,156717          JRST      156717             ;;USED  AT PROC0
155545 / 264000,,155354           JSR        SAVE             ;
155546 / 260140,,160713         PUSHJ    P,REMOVB             ;
155547 / 260140,,162404         PUSHJ    P,   CRF             ;
155550 / 254000,,157035          JRST         DD1             ;
                       RETB:
155551 / 550240,,155323          HRRZ    T,155323             ;;SET UP TEXT STRING
155552 / 332245,,000001         SKIPE    T,     1(T)          ;
155553 / 440700,,000000 POINT 7,00000000,                     ;
155553 / 505240,,440700          HRLI    T,      (<POINT 7,0>)  ;
155554 / 202240,,155643         MOVEM    T,STRING             ;
155555 / 254000,,157200          JRST         RET             ;
                       STARTA:
155556 / 000000,,000000                                       ;
                       ;START ADDRESS FROM PAPER TAPE
                       IOTBL:
155557 / 000000,,000000                                       ;
155560 / 000000,,000004                                       ;
155561 / 000000,,000010                                       ;
155562 / 000000,,000024                                       ;
155563 / 000000,,000100                                       ;
155564 / 000000,,000104                                       ;
155565 / 000000,,000120                                       ;
155566 / 000000,,000124                                       ;
155567 / 000000,,000200                                       ;
155570 / 000000,,000204                                       ;
155571 / 000000,,000210                                       ;
155572 / 000000,,000214                                       ;
155573 / 000000,,000220                                       ;
155574 / 000000,,000224                                       ;
155575 / 000000,,000230                                       ;
155576 / 000000,,000240                                       ;
155577 / 000000,,000244                                       ;
155600 / 000000,,000300                                       ;
155601 / 000000,,000304                                       ;
155602 / 000000,,000310                                       ;
155603 / 000000,,000364                                       ;
155604 / 000000,,000370                                       ;
155605 / 000000,,000374                                       ;
155606 / 000000,,000400                                       ;
155607 / 000000,,000404                                       ;
155610 / 000000,,000414                                       ;
155611 / 000000,,000420                                       ;
155612 / 000000,,000424                                       ;
155613 / 000000,,000430                                       ;
155614 / 000000,,000434                                       ;
155615 / 000000,,000440                                       ;
155616 / 000000,,000444                                       ;
155617 / 000000,,000470                                       ;
155620 / 000000,,000500                                       ;
155621 / 000000,,000504                                       ;
155622 / 000000,,000510                                       ;
155623 / 000000,,000730                                       ;
155624 / 000000,,000774                                       ;
155625 / 777777,,777777                                       ;
155626 / 777777,,777777                                       ;
155627 / 777777,,777777                                       ;
155630 / 777777,,777777                                       ;
155631 / 777777,,777777                                       ;
155632 / 777777,,777777                                       ;
155633 / 777777,,777777                                       ;
155634 / 777777,,777777                                       ;
                       SAVPI:
155635 / 000000,,000000                                       ;
155636 / 000000,,001077                                       ;;TURN OFF CHANNELS 2-7
                       SAVTTY:
155637 / 000000,,000000                                       ;
                       OUTLPT:
155640 / 000000,,000000                                       ;
                       SAVAPR:
155641 / 000000,,000000                                       ;
                       OUTRTN:
155642 / 000000,,000000                                       ;
                       STRING:
155643 / 000000,,000000                                       ;
                       MSK:
155644 / 777777,,777777           XWD -1,-1                   ;
                       MXINC:
155645 / 000000,,000100                                       ;
                       BMASK:
155646 / 000000,,000000                                       ;
                       FLGPTR:
155647 / 000000,,000000                                       ;
                       B1ADR:
155650 / 000000,,000000                                       ;
                       B1SKP:
155651 / 000000,,000000                                       ;
                       B1CNT:
155652 / 000000,,000000                                       ;
                       B1STR:
155653 / 000000,,000000                                       ;
155654 / 000000,,000000                                       ;
155655 / 000000,,000000                                       ;
155656 / 000000,,000000                                       ;
155657 / 000000,,000000                                       ;
155660 / 000000,,000000                                       ;
155661 / 000000,,000000                                       ;
155662 / 000000,,000000                                       ;
155663 / 000000,,000000                                       ;
155664 / 000000,,000000                                       ;
155665 / 000000,,000000                                       ;
155666 / 000000,,000000                                       ;
155667 / 000000,,000000                                       ;
155670 / 000000,,000000                                       ;
155671 / 000000,,000000                                       ;
155672 / 000000,,000000                                       ;
155673 / 000000,,000000                                       ;
155674 / 000000,,000000                                       ;
155675 / 000000,,000000                                       ;
155676 / 000000,,000000                                       ;
155677 / 000000,,000000                                       ;
155700 / 000000,,000000                                       ;
155701 / 000000,,000000                                       ;
155702 / 000000,,000000                                       ;
155703 / 000000,,000000                                       ;
155704 / 000000,,000000                                       ;
155705 / 000000,,000000                                       ;
155706 / 000000,,000000                                       ;
155707 / 000000,,000000                                       ;
155710 / 000000,,000000                                       ;
155711 / 000000,,000000                                       ;
155712 / 000000,,000000                                       ;
155713 / 000000,,000000                                       ;
155714 / 000000,,000000                                       ;
155715 / 000000,,000000                                       ;
155716 / 000000,,000000                                       ;
155717 / 000000,,000000                                       ;
155720 / 000000,,000000                                       ;
155721 / 000000,,000000                                       ;
155722 / 000000,,000000                                       ;
155723 / 000000,,000000                                       ;
155724 / 000000,,000000                                       ;
155725 / 000000,,000000                                       ;
155726 / 000000,,000000                                       ;
155727 / 000000,,000000                                       ;
155730 / 000000,,000000                                       ;
155731 / 000000,,000000                                       ;
155732 / 000000,,000000                                       ;
155733 / 000000,,000000                                       ;
155734 / 000000,,000000                                       ;
155735 / 000000,,000000                                       ;
155736 / 000000,,000000                                       ;
155737 / 000000,,000000                                       ;
155740 / 000000,,000000                                       ;
155741 / 000000,,000000                                       ;
155742 / 000000,,000000                                       ;
155743 / 000000,,000000                                       ;
155744 / 000000,,000000                                       ;
155745 / 000000,,000000                                       ;
155746 / 000000,,000000                                       ;
155747 / 000000,,000000                                       ;
155750 / 000000,,000000                                       ;
155751 / 000000,,000000                                       ;
155752 / 000000,,000000                                       ;
155753 / 000000,,000000                                       ;
155754 / 000000,,000000                                       ;
155755 / 000000,,000000                                       ;
155756 / 000000,,000000                                       ;
155757 / 000000,,000000                                       ;
155760 / 000000,,000000                                       ;
155761 / 000000,,000000                                       ;
155762 / 000000,,000000                                       ;
155763 / 000000,,000000                                       ;
155764 / 000000,,000000                                       ;
155765 / 000000,,000000                                       ;
155766 / 000000,,000000                                       ;
155767 / 000000,,000000                                       ;
155770 / 000000,,000000                                       ;
155771 / 000000,,000000                                       ;
155772 / 000000,,000000                                       ;
155773 / 000000,,000000                                       ;
155774 / 000000,,000000                                       ;
155775 / 000000,,000000                                       ;
155776 / 000000,,000000                                       ;
155777 / 000000,,000000                                       ;
156000 / 000000,,000000                                       ;
156001 / 000000,,000000                                       ;
156002 / 000000,,000000                                       ;
156003 / 000000,,000000                                       ;
156004 / 000000,,000000                                       ;
156005 / 000000,,000000                                       ;
156006 / 000000,,000000                                       ;
156007 / 000000,,000000                                       ;
156010 / 000000,,000000                                       ;
156011 / 000000,,000000                                       ;
156012 / 000000,,000000                                       ;
156013 / 000000,,000000                                       ;
156014 / 000000,,000000                                       ;
156015 / 000000,,000000                                       ;
156016 / 000000,,000000                                       ;
156017 / 000000,,000000                                       ;
156020 / 000000,,000000                                       ;
156021 / 000000,,000000                                       ;
156022 / 000000,,000000                                       ;
156023 / 000000,,000000                                       ;
156024 / 000000,,000000                                       ;
156025 / 000000,,000000                                       ;
156026 / 000000,,000000                                       ;
156027 / 000000,,000000                                       ;
156030 / 000000,,000000                                       ;
156031 / 000000,,000000                                       ;
156032 / 000000,,000000                                       ;
156033 / 000000,,000000                                       ;
156034 / 000000,,000000                                       ;
156035 / 000000,,000000                                       ;
156036 / 000000,,000000                                       ;
156037 / 000000,,000000                                       ;
                       AUTOPI:
156040 / 000000,,000000                                       ;
                       AC0:
                       AC17:
156060 / 000000,,000000                                       ;
                       SCHM:
156061 / 000000,,161207                                       ;;DO NOT CHANGE ORDER
156062 / 000000,,161275                                       ;
                       ODFM:
156063 / 000000,,000010                                       ;
                       SARS:
156064 / 000000,,000000                                       ;
                       TEM1:
156065 / 000000,,000000                                       ;
                       PS:
                       TBLK:
156136 / 000000,,000000                                       ;
                       TEMDDT:
156137 / 000000,,000000                                       ;
                       BLOCK:
156140 / 000000,,000000                                       ;
                       SVF:
156141 / 000000,,000000                                       ;
                       SW1:
156142 / 000000,,000000                                       ;
                       SVFB:
156143 / 000000,,000000                                       ;
                       SVTB:
156144 / 000000,,000000                                       ;
                       BLVL:
156145 / 000000,,000000                                       ;
                       WRD:
156146 / 000000,,000000                                       ;
                       WRD2:
156147 / 000000,,000000                                       ;
                       PRNC:
156150 / 000000,,000000                                       ;
                       FRASE:
156151 / 000000,,000000                                       ;;DONT CHANGE ORDER, SEE  SEARC+3
                       SYL:
156152 / 000000,,000000                                       ;
                       LWT:
156153 / 000000,,000000                                       ;
                       TEM2:
156154 / 000000,,000000                                       ;
                       FRASE1:
                       TEM3:
156155 / 000000,,000000                                       ;
                       DENDDT:
156156 / 000000,,000000                                       ;
                       PRGM:
156157 / 000000,,000000                                       ;
                       FSV:
156160 / 000000,,000000                                       ;
                       FHTTMP:
156161 / 000000,,000000                                       ;;TEMP CELL FOR FLOATING POINT VALUE ACCUMULATION
                       FHDTMP:
156162 / 000000,,000000                                       ;;TEMP CELL FOR FLOATING POINT VALUE ACCUMULATION
                       SYM:
156163 / 000000,,000000                                       ;
                       SPSAV:
156164 / 000000,,000000                                       ;;POINTER TO LAST SYMBOL TYPED
                       DEFV:
156165 / 000000,,000000                                       ;
                       ULIMIT:
156166 / 000000,,000000                                       ;
                       LLOC:
156167 / 000000,,000000                                       ;
                       LLOCO:
156170 / 000000,,000000                                       ;
                       SAVLOC:
156171 / 000000,,000000                                       ;
                       IOTFLG:
156172 / 000000,,000000                                       ;
                       SYMP:
156173 / 000000,,000036           XWD PPID,JOBSYM             ;
                       DDTSWP:
156174 / 777777,,777777                                       ;;NORMALLY ENABLE SWAPPING
                       NOTDDT:
156175 / 000000,,000000                                       ;;START WITH DDT
                       KEEPIN:
156176 / 777777,,777777                                       ;;DDT STAYS IN AT LEAST UNTIL THE FIRST START-UP
                       INDDT:
156177 / 777777,,777777                                       ;;DDT STARTS OUT IN CORE!
                       SYMLOC:
156200 / 000000,,000000                                       ;;SET BY BEGIN TO CONTENTS OF DDTSYM BEFORE ONCE ONLY CODE
                       EXMCOR:
156201 / 000000,,000000                                       ;;REFERENCE CORE AT FIRST
                       DDTSUM:
156202 / 000000,,000000                                       ;;CHECKSUM OF DDT
                       DDTIOP:
156203 / 000000,,000000                                       ;;STATE OF IOP SAVED HERE WHEN DDT ENTERED!
                       SWPWRD:
156204 / 000000,,000000                                       ;;PLACE TO KEEP WORD WE ARE DEPOSITING!
                       USROFF:
156205 / 000000,,000000                                       ;;OFFSET FROM CORE TO DISK FOR EXAMINE AND DEPOSIT
                       ;SET BY SETUSR
                       ;INITIALIZE SWAPPING DDT!!!
                       DDTINI:
156206 / 332000,,156202         SKIPE      156202             ;;THIS SHOULD TELL US IF DDT HAS
                       ;BEEN WRITTEN ON DISK YET!!!
156207 / 744700,,000400         CONSZ  DSK,000400             ;;IS DISK THERE AT ALL
156210 / 402000,,156174         SETZM      156174             ;;ASK FOR NO SWAPPING
156211 / 336000,,156174         SKIPN      DDTSWP             ;
156212 / 336000,,156177         SKIPN       INDDT             ;
156213 / 304000,,000000          CAIA                         ;
156214 / 254000,,156231          JRST       SETIN             ;
156215 / 260140,,156464         PUSHJ    P,156464             ;;TRY TO READ DDT FROM DISK
156216 / 254000,,156242          JRST      156242             ;;COULDN'T GET DDT, LOSE BIG!
156217 / 304000,,000000          CAIA                         ;
156220 / 336000,,156174         SKIPN      DDTSWP             ;
156221 / 254000,,156231          JRST       SETIN             ;
                       SETOUT:
156222 / 402000,,156176         SETZM      KEEPIN             ;
156223 / 402000,,156177         SETZM       INDDT             ;
156224 / 402000,,000036         SETZM      000036             ;;NO SYMBOLS, NOW
156225 / 402000,,156201         SETZM      156201             ;;EXAMINE DISK FOR USER
156226 / 201040,,157014         MOVEI  TAC,  DDTA             ;
156227 / 202040,,000573         MOVEM  TAC,000573             ;;GIVE LOSERS ALL THIS CORE!
156230 / 263140,,000000          POPJ    P,                   ;
                       SETIN:
156231 / 476000,,156176         SETOM      KEEPIN             ;
156232 / 574040,,000036          HLRE  TAC,DDTSYM             ;
156233 / 217000,,000001         MOVMS         TAC             ;
156234 / 270040,,000036           ADD  TAC,DDTSYM             ;
156235 / 326040,,156237         JUMPN  TAC,156237             ;
156236 / 201040,,163557         MOVEI  TAC,DDTEND             ;
156237 / 552040,,000573         HRRZM  TAC,SYSSIZ             ;
156240 / 476000,,156201         SETOM      156201             ;;EXAMINE CORE ONLY (DDT IS ALWAYS THERE)
156241 / 263140,,000000          POPJ    P,                   ;
                       CANTSW:
156737 / 254200,,000201          HALT         201             ;
156242 / 200040,,156737          MOVE  TAC,156737             ;
156243 / 202040,,156717         MOVEM  TAC,   DDT             ;
156244 / 254000,,156222          JRST      SETOUT             ;
                       ;GETDDT   CALLED FROM SAVE TO GET DDT INTO CORE!
                       GETDDT:
156245 / 336000,,156177         SKIPN      156177             ;;IF DDT ALREADY IN,
156246 / 700340,,000040         CONSO  APR,000040             ;;OR NOT PDP 10
156247 / 263140,,000000          POPJ    P,                   ;;THEN NOTHING TO DO
                       ;HERE WE ATTEMPT TO STOP THE PDP-6 SO IT WON'T MASH DDT OR SYMBOLS
156250 / 336000,,000562         SKIPN      000562             ;;SKIP IF THE PDP-6 IS SUPPOSED TO BE THERE
156251 / 254000,,156274          JRST      156274             ;;PDP-6 ISN'T THERE.  LET'S SKIP THIS MESS
156252 / 476000,,156451         SETOM      P2STP1             ;
156740 / 264000,,156453           JSR      P2STOP             ;
156253 / 200040,,156740          MOVE  TAC,156740             ;
156254 / 250040,,000046          EXCH  TAC,000046             ;;STORE IT WHERE THE PDP-6 WILL STUMBLE ON IT
156255 / 202040,,156450         MOVEM  TAC,156450             ;;STORE OLD JSR
156256 / 205040,,000001         MOVSI  TAC,000001             ;;NOW WE WAIT FOR THE PDP-6 TO HIT IT
156257 / 332000,,156451         SKIPE      156451             ;;WAIT FOR IT TO BE ZERO
156260 / 367040,,156257          SOJG  TAC,156257             ;;LOOP
156261 / 327040,,156274         JUMPG  TAC,156274             ;;JUMP IF IT REALLY STOPPED.
156262 / 265040,,156576           JSP  TAC,DDTMES             ;
156273 / 254200,,156274          HALT      GETDD1             ;
                       GETDD1:
156274 / 205040,,000001         MOVSI  TAC,000001             ;;WAIT FOR THE IBM DISK TO STOP SPINNING
156275 / 750340,,100020         CONSO  PMP,100020             ;;WAIT FOR CHANNEL TO REQUEST INTERRUPT OR IDLE
156276 / 365040,,156275         SOJGE  TAC,156275             ;;...
156277 / 201040,,156277         MOVEI  TAC,156277             ;;LET'S SEE WHERE WE ARE.
156300 / 315040,,000037         CAMGE  TAC,000037             ;;HAS 37 BEEN CLOBBERED?
156301 / 254000,,156306          JRST      156306             ;;I SUPPOSE WE'LL LET IT ALONE.
156302 / 315040,,022066         CAMGE  TAC,022066             ;;I HOPE THIS ISNT
156303 / 200040,,022066          MOVE  TAC,022066             ;
156304 / 275040,,000001          SUBI  TAC,     1             ;
156305 / 202040,,000037         MOVEM  TAC,    37             ;
                       GETDD2:
156306 / 701340,,777770         CONSO  IOP,777770             ;;IS IOP ACTIVE?
156307 / 254000,,156313          JRST      156313             ;;NO
156310 / 205040,,000001         MOVSI  TAC,     1             ;
156311 / 701340,,300070         CONSO  IOP,300070             ;;WAIT FOR IT TO BECOME INACTIVE
156312 / 367040,,156311          SOJG  TAC,156311             ;;IN CASE IT IS HUNG!
                       IOPFRE:
156313 / 701240,,000001          CONI  IOP,000001             ;;SAVE STATE OF IOP
156314 / 606040,,200000          TRNN  TAC,200000             ;;ANY IOP ERRORS WE CAN'T SAVE?
156315 / 744700,,003770         CONSZ  DSK,003770             ;;ANY DISK ERRORS WE CAN'T SAVE?
156316 / 660040,,000040           TRO  TAC,000040             ;;YES, SET DATA MISS FLAG
156317 / 202040,,156203         MOVEM  TAC,156203             ;;SAVE BITS HERE TO PUT BACK LATER!
156320 / 201100,,000010         MOVEI TAC1,000010             ;;TRY THIS MANY TIMES
                       OUTLOS:
156321 / 744600,,000000          CONO  DSK,                   ;;BLAST DISK
156322 / 701200,,000100          CONO  IOP,000100             ;;WRITE THIS TIME
156323 / 260140,,156543         PUSHJ    P,156543             ;;SET-UP USER ADDRESSES AND START TRANSFER
156324 / 367100,,156321          SOJG TAC1,OUTLOS             ;
156325 / 327100,,156346         JUMPG TAC1,156346             ;;WIN
156326 / 265040,,156576           JSP  TAC,DDTMES             ;
156345 / 254200,,156346          HALT      156346             ;
                       NOLOSO:
156346 / 260140,,156464         PUSHJ    P,156464             ;;TRY TO READ IN DDT
156347 / 254000,,156353          JRST       NODDT             ;
156350 / 254000,,156371          JRST       NOSYM             ;
                       LOSCON:
156351 / 701220,,156203          CONO  IOP,@DDTIOP            ;
156352 / 263140,,000000          POPJ    P,                   ;;ALL IS WELL
                       NODDT:
156353 / 265040,,156576           JSP  TAC,DDTMES             ;
156370 / 254200,,156346          HALT      NOLOSO             ;
                       NOSYM:
156371 / 265040,,156576           JSP  TAC,DDTMES             ;
156410 / 254200,,156351          HALT      LOSCON             ;
                       ;GETBAK   CALLED FROM RESTORE TO UPDATE SYMBOL TABLE AND GET USER CORE BACK!
                       GETBAK:
156411 / 700340,,000040         CONSO  APR, MAOFF             ;
156412 / 263140,,000000          POPJ    P,                   ;;PDP-6 DOESN'T DO ANYTHING
156413 / 336000,,156176         SKIPN      156176             ;;DDT GOING OUT?
156414 / 336000,,156177         SKIPN      156177             ;;AND IN NOW
156415 / 263140,,000000          POPJ    P,                   ;;NO
156416 / 402000,,000036         SETZM      000036             ;;NO DDT, NO SYMBOLS.
                       ;THE FOLLOWING SEMICOLONED OUT TO KEEP SYMBOLS IN ONE PIECE!
                       ;	MOVEI TAC1,DDTTRY	;UPDATE DDT ONLY IN SWAPPING DDT ENVIRONMENT
                       ;WRTLOS:	CONO DSK,0
                       ;	CONO IOP,100		;WRITE SYMBOL TABLE
                       ;	PUSHJ P,SETSYM		;UPDATE SYMBOL TABLE!!!
                       ;	SOJG TAC1,WRTLOS	;TRY AGAIN?
                       ;	JUMPG TAC1,NOUPDATE	;DID WE WIN?
                       ;	JSP TAC,DDTMES
                       ;	ASCIZ/
                       ;COULDN'T UPDATE YOUR SYMBOL TABLE ON THE DISK, SORRY!
                       ;/
                       NOUPDA:
156417 / 201100,,000010         MOVEI TAC1,000010             ;;NOW TO RESTORE LOSER CORE
156420 / 402000,,156177         SETZM      156177             ;;DDT NO LONGER IN CORE
                       USRLOS:
156421 / 744600,,000000          CONO  DSK,                   ;
156422 / 701200,,000000          CONO  IOP,                   ;;READ LOSER THIS TIME
156423 / 260140,,156543         PUSHJ    P,SETUSR             ;
156424 / 367100,,156421          SOJG TAC1,USRLOS             ;
156425 / 701220,,156203          CONO  IOP,@DDTIOP            ;
156426 / 327100,,156444         JUMPG TAC1,156444             ;;DID WE GET HIM BACK IN?
156427 / 265040,,156576           JSP  TAC,DDTMES             ;
156443 / 254200,,156444          HALT      156444             ;
                       USRLS1:
156444 / 200040,,156450          MOVE  TAC,156450             ;;GET OLD JSR BACK
156445 / 202040,,000046         MOVEM  TAC,000046             ;
156446 / 476000,,156451         SETOM      156451             ;;FLAG THE PDP-6 TO CONTINUE
156447 / 263140,,000000          POPJ    P,                   ;
                       P2STP0:
156450 / 000000,,000000                                       ;;HERE TO SAVE LOC 46
                       P2STP1:
156451 / 000000,,000000                                       ;;FLAG FOR PDP-6 IS WAITING
                       P2STP2:
156452 / 000000,,000000                                       ;;PDP-6 STORES TAC WHILE WAITING FOR DDT EXIT
                       P2STOP:
156453 / 000000,,000000                                       ;;JSR HERE IN CLOCK CHANNEL TO WAIT WHILE IN DDT
156454 / 700600,,000400          CONO   PI,000400             ;;STOP THE WORLD
156455 / 202040,,156452         MOVEM  TAC,156452             ;;SAVE AN AC
156456 / 402000,,156451         SETZM      156451             ;;TELL THE PDP-10 THAT WE'RE STOPPED
156457 / 200040,,156451          MOVE  TAC,P2STP1             ;
156460 / 322040,,156457         JUMPE  TAC,156457             ;;WAIT FOR THE 10 TO FINISH
156461 / 200040,,156452          MOVE  TAC,156452             ;;RESTORE TAC
156462 / 700600,,000200          CONO   PI,  PION             ;
156463 / 000000,,000000                                       ;
                       ;DDTREAD   CALLED FROM GETDDT TO READ DDT AND SYMBOL TABLE FROM DISK
                       DDTREA:
156464 / 201100,,000010         MOVEI TAC1,DDTTRY             ;
                       DDTLOS:
156465 / 744600,,000000          CONO  DSK,                   ;
156466 / 701200,,000000          CONO  IOP,                   ;;READ THIS TIME
156735 / 773175,,157014           XWD DDTA-DDTEND-40,DDTA     ;
156467 / 200040,,156735          MOVE  TAC,156735             ;
156470 / 421040,,000037        ANDCMI  TAC,    37             ;
156471 / 701140,,000001         DATAO  IOP,   TAC             ;
156472 / 201040,,157014         MOVEI  TAC,  DDTA             ;
156473 / 240040,,777773           ASH  TAC,777773             ;
156474 / 260140,,156601         PUSHJ    P,SECTOR             ;
156475 / 260140,,156613         PUSHJ    P,156613             ;
156476 / 367100,,156465          SOJG TAC1,DDTLOS             ;
156477 / 402000,,000036         SETZM      DDTSYM             ;
156500 / 323100,,156715        JUMPLE TAC1, CPOPJ             ;
156501 / 476000,,156177         SETOM      156177             ;;FLAG DDT IN CORE
156734 / 773235,,157014           XWD DDTA-DDTEND,DDTA        ;
156502 / 200040,,156734          MOVE  TAC,156734             ;
156503 / 260140,,050100         PUSHJ    P,050100             ;;CHECKSUM DDT!
156504 / 336000,,156202         SKIPN      156202             ;;IS THERE A CHECKSUM THERE?
156505 / 202100,,156202         MOVEM TAC1,156202             ;;NO, USE THIS ONE
156506 / 316100,,156202          CAMN TAC1,156202             ;;CHECKSUM OK?
156507 / 254000,,156517          JRST      156517             ;;YES
156510 / 265040,,156576           JSP  TAC,DDTMES             ;
                       SUMOK:
156517 / 201100,,000010         MOVEI TAC1,DDTTRY             ;
                       SYMLOS:
156520 / 744600,,000000          CONO  DSK,                   ;
156521 / 701200,,000000          CONO  IOP,                   ;;READ SYMBOL TABLE
156522 / 260140,,156532         PUSHJ    P,SETSYM             ;
156523 / 367100,,156520          SOJG TAC1,SYMLOS             ;
156524 / 323100,,156714        JUMPLE TAC1,156714             ;;LOSE ON SYMBOL TABLE READ
156525 / 200040,,156200          MOVE  TAC,SYMLOC             ;
156526 / 421040,,777740        ANDCMI  TAC,777740             ;
156527 / 271040,,163557          ADDI  TAC,DDTEND             ;
156530 / 202040,,000036         MOVEM  TAC,000036             ;;THIS IS WHERE THE SYMBOL TABLE IS
156531 / 254000,,037400          JRST      CPOPJ2             ;
                       ;SETSYM   CALLED TO READ OR WRITE SYMBOL TABLE
                       SETSYM:
156532 / 336040,,156200         SKIPN  TAC,SYMLOC             ;
156533 / 263140,,000000          POPJ    P,                   ;
156534 / 513000,,000001         HLLZS         TAC             ;
156732 / 777740,,163557           XWD -40,DDTEND              ;
156535 / 270040,,156732           ADD  TAC,156732             ;
156536 / 701140,,000001         DATAO  IOP,   TAC             ;
156537 / 550040,,156200          HRRZ  TAC,SYMLOC             ;
156540 / 240040,,777773           ASH  TAC,777773             ;
156541 / 260140,,156601         PUSHJ    P,SECTOR             ;
156542 / 254000,,156613          JRST      156613             ;;SKIP RETURNS IF ALL OK
                       ;SETUSR   CALLED TO READ OR WRITE USER CORE IN DDT REGION
                       SETUSR:
156543 / 205040,,773135         MOVSI  TAC,773135             ;;LET'S BE CAREFUL
156544 / 270040,,156200           ADD  TAC,156200             ;;AND LENGTH OF SYMBOL TABLE
156545 / 541040,,157014          HRRI  TAC,  DDTA             ;
156546 / 421040,,000037        ANDCMI  TAC,000037             ;;ROUND IT OFF TO NEAREST SECTOR
156547 / 202040,,000166         MOVEM  TAC,000166             ;;SAVE FOR BOOT HACK
156550 / 701140,,000001         DATAO  IOP,000001             ;;PHEW!
156551 / 574040,,156200          HLRE  TAC,156200             ;;LENGTH OF SYMBOL TABLE
156552 / 217000,,000001         MOVMS         TAC             ;
156553 / 270040,,156200           ADD  TAC,SYMLOC             ;
156554 / 553000,,000001         HRRZS         TAC             ;
156555 / 326040,,156557         JUMPN  TAC,156557             ;
156556 / 201040,,163603         MOVEI  TAC,163603             ;;MAYBE SYMBOL TABLE LOSES?
156557 / 271040,,000037          ADDI  TAC,    37             ;
156560 / 240040,,777773           ASH  TAC,777773             ;
156561 / 202040,,000167         MOVEM  TAC,000167             ;;SAVE FOR BOOT HACK
156562 / 202040,,156205         MOVEM  TAC,USROFF             ;
156563 / 260140,,156606         PUSHJ    P,156606             ;;AND THEY'RE OFF	;REG 5-9-72
156564 / 211040,,156755         MOVNI  TAC,156755             ;
156565 / 240040,,777773           ASH  TAC,777773             ;
156566 / 272040,,156205          ADDM  TAC,USROFF             ;
156567 / 254000,,156613          JRST      156613             ;
                       ;SETBUF   CALLED FROM EXAMINE & DEPOSIT TO READ OR WRITE 32 WORDS OF USER CORE
                       SETBUF:
156733 / 777740,,156754           XWD -40,DDTBUF              ;
156570 / 701140,,156733         DATAO  IOP,156733             ;;THE BUFFER IS EASY
156571 / 200040,,000001          MOVE  TAC,     R             ;
156572 / 240040,,777773           ASH  TAC,777773             ;
156573 / 270040,,156205           ADD  TAC,USROFF             ;
156574 / 260140,,156606         PUSHJ    P,156606             ;;REG 5-9-72
156575 / 254000,,156613          JRST      156613             ;
                       ;DDTMES   TYPES MESSAGE ON CTY
                       ;CALLING SEQUENCE:
                       ;	JSP TAC,DDTMES
                       ;	ASCIZ/MESSAGE/
                       ;	<RETURNS HERE>
                       DDTMES:
156576 / 440700,,000000 POINT 7,00000000,                     ;
156576 / 505040,,440700          HRLI  TAC,      (<POINT 7,0>)  ;
156577 / 264000,,000517           JSR      000517             ;
156600 / 254001,,000001          JRST           1(TAC)        ;;SEE HOW CLEVER WE ARE!!!!
                       SECTOR:
156601 / 301040,,002300          CAIL  TAC,002300             ;;NEXT TRACK?
156602 / 271040,,001500          ADDI  TAC,001500             ;;TAC←TAC-2300+1B24, WRAPAROUND TO NEXT ONE
156603 / 270040,,016027           ADD  TAC,016027             ;
156604 / 744540,,000001         DATAO  DSK,   TAC             ;
156605 / 263140,,000000          POPJ    P,                   ;
                       USECTO:
                       ;SAME AS SECTOR, BUT USES DDTBAND, NOT SYSBAND
                       ;WRITE USERS HERE.   REG 5-9-72
156606 / 301040,,002300          CAIL  TAC,002300             ;;NEXT TRACK?
156607 / 271040,,001500          ADDI  TAC,001500             ;;TAC←TAC-2300+1B24, WRAPAROUND TO NEXT ONE
156610 / 270040,,016031           ADD  TAC,016031             ;
156611 / 744540,,000001         DATAO  DSK,   TAC             ;
156612 / 263140,,000000          POPJ    P,                   ;
                       IOPWAI:
156613 / 744700,,000400         CONSZ  DSK,  1B27             ;
156614 / 263140,,000000          POPJ    P,                   ;
156615 / 205040,,000002         MOVSI  TAC,     2             ;
156616 / 701340,,300070         CONSO  IOP,300070             ;
156617 / 367040,,156616          SOJG  TAC,156616             ;
156620 / 322040,,156715         JUMPE  TAC, CPOPJ             ;
156621 / 701340,,300060         CONSO  IOP,IOPANY             ;
156622 / 744700,,003770         CONSZ  DSK,  3770             ;
156623 / 263140,,000000          POPJ    P,                   ;
156624 / 254000,,156714          JRST      CPOPJ1             ;
                       ;EXAMINE & DEPOSIT ROUTINES FOR SWAPPING DDT!
                       SWPEXM:
156625 / 700340,,000040         CONSO  APR, MAOFF             ;
156626 / 254000,,037400          JRST      037400             ;;PDP-6 GETS CORE!
156627 / 336000,,156201         SKIPN      156201             ;;EXAMINING REAL CORE
156630 / 332000,,156176         SKIPE      156176             ;;IS THERE SOMETHING ON THE DISK?
156631 / 254000,,037400          JRST      037400             ;;NO, DO NORMAL THING
156632 / 574200,,156200          HLRE    W,156200             ;;GET LENGTH OF SYMBOL TABLE (ON DISK)
156633 / 213000,,000004         MOVNS           W             ;
156634 / 301040,,157014          CAIL    R,  DDTA             ;
156635 / 303044,,157114         CAILE    R,157114(W)          ;;IS THIS LOCATION ON DISK?
156636 / 254000,,037400          JRST      037400             ;;NO
156637 / 201240,,000010         MOVEI    T,DDTTRY             ;
156640 / 261140,,000002          PUSH    P,     S             ;
156641 / 261140,,000001          PUSH    P,     R             ;
                       EXMLOS:
156642 / 744600,,000000          CONO  DSK,                   ;
156643 / 701200,,000000          CONO  IOP,                   ;
156644 / 260140,,156570         PUSHJ    P,SETBUF             ;
156645 / 367240,,156642          SOJG    T,EXMLOS             ;
156646 / 262140,,000001           POP    P,     R             ;
156647 / 262140,,000002           POP    P,     S             ;
156650 / 323240,,156655        JUMPLE    T,DSKLOS             ;
156651 / 200240,,000001          MOVE    T,     R             ;
156652 / 405240,,000037          ANDI    T,    37             ;
156653 / 200245,,156754          MOVE    T,DDTBUF(T)          ;
156654 / 263140,,000000          POPJ    P,                   ;;GOT IT (OFF DISK)
                       DSKLOS:
156655 / 261140,,000001          PUSH    P,   TAC             ;
156656 / 265040,,156576           JSP  TAC,DDTMES             ;
156664 / 262140,,000001           POP    P,   TAC             ;
156665 / 254000,,156714          JRST      156714             ;;SO SWPDEP WON'T TRY TO WRITE
                       SWPDEP:
156666 / 202240,,156204         MOVEM    T,SWPWRD             ;
156667 / 260140,,156625         PUSHJ    P,SWPEXM             ;
156670 / 254000,,156673          JRST      156673             ;;GOT IT IN!
156671 / 263140,,000000          POPJ    P,                   ;;MAKE BELIEVE IT WON!!
156672 / 254000,,156714          JRST      156714             ;;NOT ON DISK GET FROM CORE
                       SWPDP1:
156673 / 200200,,000001          MOVE    W,     R             ;
156674 / 405200,,000037          ANDI    W,    37             ;
156675 / 200240,,156204          MOVE    T,SWPWRD             ;
156676 / 202244,,156754         MOVEM    T,DDTBUF(W)          ;
156677 / 201200,,000010         MOVEI    W,DDTTRY             ;
156700 / 261140,,000002          PUSH    P,     S             ;
156701 / 261140,,000001          PUSH    P,     R             ;
                       DEPLOS:
156702 / 744600,,000000          CONO  DSK,                   ;
156703 / 701200,,000100          CONO  IOP,000100             ;;WRITE
156704 / 260140,,156570         PUSHJ    P,SETBUF             ;
156705 / 367200,,156702          SOJG    W,DEPLOS             ;
156706 / 262140,,000001           POP    P,     R             ;
156707 / 262140,,000002           POP    P,     S             ;
156710 / 200240,,156204          MOVE    T,SWPWRD             ;
156711 / 327200,,156715         JUMPG    W, CPOPJ             ;
156712 / 370003,,000000           SOS            (P)          ;;DSKLOS WANTS TO SKIP RETURN
156713 / 254000,,156655          JRST      156655             ;;TELL THEM IT LOST
                       ;DDT STARTS HERE
                       CPOPJ1:
156714 / 350003,,000000           AOS            (P)          ;
                       CPOPJ:
156715 / 263140,,000000          POPJ    P,                   ;
                       TMPTAC:
156716 / 000000,,000000                                       ;
                       DDT:
156717 / 700300,,000040         CONSZ  APR, MAOFF             ;
156720 / 254000,,156724          JRST       DDTP1             ;
156721 / 332000,,156177         SKIPE       INDDT             ;
156722 / 336000,,156176         SKIPN      KEEPIN             ;
156723 / 254200,,156717          HALT         DDT             ;
                       DDTP1:
156724 / 332000,,156175         SKIPE      NOTDDT             ;
156747 / 202040,,156716         MOVEM  TAC,TMPTAC             ;
156731 / 000000,,156742                                       ;
156731 / 440700,,156742 POINT 7,00156742,                     ;
156750 / 200040,,156731          MOVE  TAC,156731             ;
156751 / 264000,,000517           JSR      000517             ;
156752 / 200040,,156716          MOVE  TAC,TMPTAC             ;
156753 / 254200,,156717          HALT         DDT             ;
156725 / 254000,,156747          JRST      156747             ;
156726 / 264000,,155354           JSR        SAVE             ;
156727 / 254000,,157014          JRST        DDTA             ;
156730 / 254000,,157015          JRST        DDTB             ;
                       ;MAKE SURE EVERYTHING WE NEED STAYS IN!!!!!!!!!
                       DDTBUF:
                       DDTA:
                       ;FTDSWP
157014 / 260140,,160713         PUSHJ    P,REMOVB             ;
                       DDTB:
157015 / 260140,,157333         PUSHJ    P,157333             ;;SEE IF SYMBOL TABLE HAS MOVED
157016 / 554240,,161742          HLRZ    T,161742             ;;THIS SEQUENCE INITS SYM TABLE LOGIC
157017 / 274240,,161742           SUB    T,  ESTU             ;
157020 / 200220,,156173          MOVE    W,@  SYMP            ;
157021 / 270240,,000004           ADD    T,000004             ;;IF THE TOP OF THE UNDEFINED SYM TAB DOES
157022 / 602240,,777777          TRNE    T,777777             ;; NOT POINT TO BOTTOM OF REGULAR SYM TAB,THEN
157023 / 552200,,161742         HRRZM    W,161742             ;; RE-INIT UNDEFINED SYM TABLE POINTER, ESTU.
157024 / 200240,,156157          MOVE    T,  PRGM             ;
157025 / 274240,,000004           SUB    T,000004             ;;IF THE SYM TABLE PNTR AND THE PROGRAM
157026 / 651240,,000005           TSC    T,000005             ;; NAME (PRGM) PNTR DO NOT END UP IN THE
157027 / 200300,,156157          MOVE   W1,156157             ;; SAME PLACE, OR THEY DO NOT BOTH START ON
157030 / 430300,,000004           XOR   W1,000004             ;; AN EVEN (OR BOTH ON ODD) LOCATION, OR
157031 / 606300,,000001          TRNN   W1,000001             ;; PRGM .GE. 0, THEN RE-INIT PRGM.
157032 / 322240,,157035         JUMPE    T,   DD1             ;
157033 / 402000,,156157         SETZM        PRGM             ;
157034 / 402000,,156140         SETZM      156140             ;;RESET WORLD
                       DD1:
157035 / 621000,,000010           TLZ      000010             ;;CLOSE ANY OPEN REGISTER
157036 / 260140,,162404         PUSHJ    P,   CRF             ;
                       DD1_5:
163505 / 156061,,000010           XWD SCHM,SCH                ;
157037 / 200240,,163505          MOVE    T,163505             ;
157040 / 251240,,000012           BLT    T,000012             ;;LOAD ACS
                       DD2:
157041 / 402000,,156150         SETZM      156150             ;;PARENTHESES COUNT
157042 / 201140,,156066         MOVEI    P,    PS             ;
                       LIS:
157043 / 200240,,161742          MOVE    T,  ESTU             ;
157044 / 202240,,161743         MOVEM    T,161743             ;;INIT UNDEFINED SYM ASSEM
163470 / 773767,,022423           XWD 777777-ROF-STF,LF1+CF1+SBF+ITF+EQF+Q2F ;
157045 / 630000,,163470           TDZ      163470             ;
157046 / 402000,,156172         SETZM      156172             ;;NOT AN IOT YET
                       LIS0:
163467 / 770767,,000200           XWD 777777-ROF-STF-FAF-SAF,NAF ;
157047 / 630000,,163467           TDZ      163467             ;
157050 / 402000,,156146         SETZM         WRD             ;
                       LIS1:
157051 / 402000,,156151         SETZM       FRASE             ;
                       LIS2:
157052 / 201240,,000001         MOVEI    T,     1             ;
157053 / 202240,,156155         MOVEM    T,FRASE1             ;
157054 / 621000,,040200           TLZ      040200             ;
                       L1:
157055 / 621000,,030044           TLZ      030044             ;;TURN OFF CONTROL, SYL, PERIOD FLAG
157056 / 402000,,156152         SETZM         SYL             ;
                       L1RPR:
157057 / 402000,,156163         SETZM         SYM             ;
157060 / 201240,,000006         MOVEI    T,     6             ;
157061 / 202240,,156137         MOVEM    T,156137             ;;INIT SYMBOL COUNTER
163463 / 000000,,163256                                       ;
163463 / 440700,,163256 POINT 7,00163256,                     ;
157062 / 200240,,163463          MOVE    T,163463             ;;SET UP POINTER FOR OPEVAL
157063 / 202240,,163255         MOVEM    T,163255             ;;;CHP
157064 / 402000,,156156         SETZM      DENDDT             ;
157065 / 402000,,156147         SETZM        WRD2             ;
                       L2:
157066 / 260140,,162431         PUSHJ    P,162431             ;;PICK UP CHARACTER
157067 / 301240,,000141          CAIL    T,000141             ;
157070 / 303240,,000172         CAILE    T,000172             ;
157071 / 334000,,000000         SKIPA                         ;
157072 / 640240,,000040           TRC    T,    40             ;
157073 / 603000,,000040          TLNE      000040             ;;CONTROL FLAG
157074 / 254000,,157101          JRST         L21             ;
157075 / 307240,,000132          CAIG    T,000132             ;;Z
157076 / 305240,,000101         CAIGE    T,000101             ;;A
157077 / 254000,,157101          JRST      157101             ;
157100 / 254000,,157266          JRST         LET             ;
                       L21:
157101 / 200040,,000005          MOVE    R,     T             ;
157102 / 303240,,000137         CAILE    T,   137             ;
157103 / 254000,,157165          JRST         ERR             ;
157104 / 231040,,000003         IDIVI    R,     3             ;
157105 / 135202,,162535           LDB    W, BDISP(R+1)        ;
157106 / 305200,,001236         CAIGE    W,001236             ;;FIRST EVAL ROUTINE
157107 / 254004,,156717          JRST         DDT(W)          ;
157110 / 200240,,156152          MOVE    T,   SYL             ;
157111 / 627000,,000020          TLZN         LTF             ;
157112 / 254000,,157353          JRST       POWER             ;
163506 / 163264,,157457           XWD OPEVAL,EVAL             ;
157113 / 200240,,163506          MOVE    T,163506             ;;LOOKUP ROUTINES IN CORRETC ORDER
157114 / 336000,,156146         SKIPN      156146             ;;USE SYMBOL TABLE FST IF SOMETHING THERE
157115 / 207000,,000005         MOVSS           T             ;
157116 / 202240,,155354         MOVEM    T,  SAVE             ;
157117 / 254000,,157122          JRST        L213             ;
                       L212:
157120 / 557240,,155354         HLRZS    T,  SAVE             ;
157121 / 322240,,157203         JUMPE    T,157203             ;;NEITHER ONE
                       L213:
157122 / 260145,,000000         PUSHJ    P,      (T)          ;
157123 / 254000,,157120          JRST      157120             ;;TRY NEXT ONE
                       L4:
157124 / 623000,,000002          TLZE          MF             ;
157125 / 210240,,000005          MOVN    T,     T             ;
157126 / 607000,,000004          TLNN          SF             ;
157127 / 302200,,001245          CAIE    W,001245             ;
157130 / 254000,,157132          JRST      157132             ;
157131 / 254000,,160164          JRST        LPRN             ;
157132 / 250240,,156155          EXCH    T,FRASE1             ;
157133 / 607000,,040000          TLNN         DVF             ;
157134 / 223240,,156155         IMULB    T,FRASE1             ;
157135 / 623000,,040000          TLZE         DVF             ;
157136 / 233240,,156155         IDIVB    T,FRASE1             ;
157137 / 305200,,001241         CAIGE    W,001241             ;
157140 / 254004,,156717          JRST         DDT(W)          ;;MULTIPLY OR DIVIDE
157141 / 273240,,156151          ADDB    T, FRASE             ;
157142 / 305200,,001300         CAIGE    W,001300             ;
157143 / 254004,,156717          JRST         DDT(W)          ;; + - @ ,
157144 / 270240,,156146           ADD    T,   WRD             ;
157145 / 603000,,100000          TLNE      100000             ;;TRUNCATE INDICATOR FLAG
157146 / 500240,,156146           HLL    T,156146             ;;TRUNCATE
157147 / 202240,,156146         MOVEM    T,   WRD             ;
157150 / 607000,,000001          TLNN          QF             ;
157151 / 200240,,156153          MOVE    T,   LWT             ;
157152 / 402000,,000001         SETZM           R             ;
157153 / 200300,,161743          MOVE   W1, ESTUT             ;
157154 / 316300,,161742          CAMN   W1,  ESTU             ;
157155 / 254000,,157160          JRST          L5             ;
157156 / 303200,,001356         CAILE    W,001356             ;
157157 / 254000,,157165          JRST         ERR             ;
                       L5:
157160 / 307200,,001304          CAIG    W,001304             ;
157161 / 254004,,156717          JRST         DDT(W)          ;
157162 / 261140,,160012          PUSH    P,KILRET             ;
157163 / 336000,,156150         SKIPN        PRNC             ;
157164 / 254004,,156717          JRST         DDT(W)          ;
                       ERR:
157165 / 201300,,000077         MOVEI   W1,000077             ;
157166 / 254000,,157172          JRST      WRONG1             ;
                       UNDEF:
157167 / 201300,,000125         MOVEI   W1,000125             ;
157170 / 254000,,157172          JRST      WRONG1             ;
                       WRONG:
157171 / 200300,,163464          MOVE   W1,163464             ;
                       WRONG1:
157172 / 201140,,156066         MOVEI    P,    PS             ;
157173 / 260140,,162061         PUSHJ    P,  TEXT             ;
157174 / 260140,,162407         PUSHJ    P,162407             ;;TYPE TAB
157175 / 260140,,162505         PUSHJ    P,LISTEN             ;
157176 / 255000,,000000          JFCL                         ;
157177 / 254000,,157041          JRST         DD2             ;
                       RET:
157200 / 201140,,156066         MOVEI    P,    PS             ;
157201 / 260140,,162407         PUSHJ    P,162407             ;;COMMON RETURN FOR TAB;,JRST LIS
157202 / 254000,,157041          JRST         DD2             ;
                       UND1:
157203 / 200040,,161743          MOVE    R,161743             ;;UNDEFINED SYM ASSEMBLER
157204 / 574100,,161743          HLRE    S, ESTUT             ;
157205 / 240100,,777777           ASH    S,777777             ;;SETUP EVAL END TEST
157206 / 525300,,337777         HRLOI   W1,337777             ;
157207 / 260140,,157441         PUSHJ    P, EVAL2             ;
157210 / 306200,,001241          CAIN    W,001241             ;
157211 / 607000,,000010          TLNN         ROF             ;
157212 / 254000,,157167          JRST       UNDEF             ;
157213 / 332000,,156150         SKIPE        PRNC             ;
157214 / 254000,,157167          JRST       UNDEF             ;
157215 / 201240,,000043         MOVEI    T,000043             ;
157216 / 302200,,001241          CAIE    W,001241             ;
157217 / 260140,,162443         PUSHJ    P,  TOUT             ;
163476 / 000002,,000002           XWD 2,2                     ;
157220 / 210040,,163476          MOVN    R,163476             ;
157221 / 273040,,161743          ADDB    R, ESTUT             ;
157222 / 200240,,156163          MOVE    T,   SYM             ;
157223 / 661240,,040000           TLO    T,GLOBAL             ;
157224 / 202241,,000000         MOVEM    T,      (R)          ;
157225 / 550240,,156170          HRRZ    T, LLOCO             ;
157226 / 603000,,000002          TLNE          MF             ;
157227 / 661240,,400000           TLO    T,400000             ;
157230 / 202241,,000001         MOVEM    T,     1(R)          ;
157231 / 201240,,000000         MOVEI    T,                   ;
157232 / 254000,,157124          JRST          L4             ;
                       QUESTN:
157233 / 260140,,162404         PUSHJ    P,162404             ;;LIST UNDEFINED SYMBOLS
157234 / 200040,,161742          MOVE    R,  ESTU             ;
                       QUEST1:
157235 / 325040,,157035        JUMPGE    R,   DD1             ;
157236 / 200241,,000000          MOVE    T,      (R)          ;
157237 / 334300,,161742         SKIPA   W1,  ESTU             ;
                       QUEST2:
163476 / 000002,,000002           XWD 2,2                     ;
157240 / 270300,,163476           ADD   W1,163476             ;
157241 / 312246,,000000          CAME    T,      (W1)         ;
157242 / 254000,,157240          JRST      QUEST2             ;
157243 / 312040,,000006          CAME    R,    W1             ;
157244 / 254000,,157247          JRST      QUEST4             ;
157245 / 260140,,161703         PUSHJ    P,   SPT             ;
157246 / 260140,,162404         PUSHJ    P,   CRF             ;
                       QUEST4:
163476 / 000002,,000002           XWD 2,2                     ;
157247 / 270040,,163476           ADD    R,163476             ;
157250 / 254000,,157235          JRST      QUEST1             ;
                       NUM:
157251 / 405240,,000017          ANDI    T,000017             ;;T HOLDS CHARACTER
157252 / 603000,,020040          TLNE      020040             ;
157253 / 254000,,157321          JRST      157321             ;;$ OR . SEEN
157254 / 200200,,156152          MOVE    W,   SYL             ;
157255 / 242200,,000003           LSH    W,     3             ;
157256 / 270200,,000005           ADD    W,     T             ;
157257 / 202200,,156152         MOVEM    W,156152             ;;ACCUMULATE OCTAL VALUE
157260 / 200200,,156156          MOVE    W,DENDDT             ;
157261 / 221200,,000012         IMULI    W,000012             ;;CONVERT TO DECIMAL
157262 / 270200,,000005           ADD    W,     T             ;
157263 / 202200,,156156         MOVEM    W,156156             ;;ACCUMULATE DECIMAL VALUE
                       LE1:
157264 / 344240,,157302          AOJA    T,  LE1A             ;
                       PERC:
157265 / 201240,,000135         MOVEI    T,000135             ;;PERCENT SIGN
                       LET:
157266 / 641000,,020004           TLC      020004             ;;EXPONENT IFF LTF'*FEF'*(T=105)*SF*FPF=1
157267 / 627000,,420024          TLZN      420024             ;
157270 / 302240,,000105          CAIE    T,000105             ;; E
157271 / 665000,,000020          TLOA         LTF             ;
157272 / 665000,,400000          TLOA      400000             ;;E SEEN AS EXPONENT
157273 / 254000,,157301          JRST        LET1             ;
157274 / 627000,,000002          TLZN      000002             ;;MINUS FLAG?
157275 / 334300,,156152         SKIPA   W1,156152             ;;NOT MINUS
157276 / 210300,,156152          MOVN   W1,156152             ;;GOBBLE NEGATIVE VALUE
157277 / 202300,,156160         MOVEM   W1,156160             ;;SAVE FLOATING POINT VALUE.
157300 / 402000,,156156         SETZM      DENDDT             ;
                       LET1:
157301 / 275240,,000066          SUBI    T,000066             ;;FORM RADIX 50 SYMBOL
                       LE1A:
157302 / 661000,,000005           TLO      000005             ;
                       LE2:
157303 / 200200,,156163          MOVE    W,   SYM             ;
157304 / 201045,,000066         MOVEI    R,000066(T)          ;;SET UP IN SIXBIT FOR OPEVAL
157305 / 221200,,000050         IMULI    W,000050             ;;CONVERT TO RADIX 50
157306 / 270200,,000005           ADD    W,     T             ;
157307 / 375000,,156137         SOSGE      156137             ;;IGNORE CHARACS AFTER 6
157310 / 254000,,157066          JRST      157066             ;;GO IGNORE
157311 / 136040,,163255          IDPB    R,163255             ;;;CHP	;SAVE FOR OPEVAL
157312 / 202200,,156163         MOVEM    W,   SYM             ;
157313 / 254000,,157066          JRST          L2             ;
                       NUM1:
157314 / 250240,,156147          EXCH    T,156147             ;;FORM NUMBER AFTER $
157315 / 221240,,000012         IMULI    T,    12             ;
157316 / 272240,,156147          ADDM    T,  WRD2             ;
157317 / 660000,,000001           TRO         Q2F             ;
157320 / 254000,,157066          JRST          L2             ;
                       NM1:
157321 / 603000,,000040          TLNE      000040             ;;$ SEEN?
157322 / 254000,,157314          JRST      157314             ;;YES. NOW NUMBER.
157323 / 205040,,204500         MOVSI    R,204500             ;;FORM FLOATING POINT NUMBER.  R←10.0
157324 / 166040,,156162         FMPRM    R,156162             ;;MULTIPLY THE DIVISOR BY 10.0
157325 / 166040,,156161         FMPRM    R,156161             ;;MULTIPLY TOTAL ACCUMULATED NUMBER BY 10.0
157326 / 205045,,211000         MOVSI    R,211000(T)          ;;UNNORMALIZED VALUE OF THIS DIGIT
157327 / 147040,,156161         FADRB    R,156161             ;;ADD DIGIT TO TOTAL THUS FAR
157330 / 174040,,156162          FDVR    R,156162             ;;DIVIDE BY APPROPRIATE POWER OF 10.0
157331 / 202040,,156152         MOVEM    R,156152             ;;STORE FLOATING VALUE
157332 / 344240,,157302          AOJA    T,  LE1A             ;
                       CHKSYM:
157333 / 554240,,161742          HLRZ    T,161742             ;;THIS SEQUENCE INITS SYM TABLE LOGIC
157334 / 274240,,161742           SUB    T,  ESTU             ;
157335 / 200220,,156173          MOVE    W,@  SYMP            ;
157336 / 270240,,000004           ADD    T,000004             ;;IF THE TOP OF THE UNDEFINED SYM TAB DOES
157337 / 602240,,777777          TRNE    T,777777             ;; NOT POINT TO BOTTOM OF REGULAR SYM TAB,THEN
157340 / 552200,,161742         HRRZM    W,161742             ;; RE-INIT UNDEFINED SYM TABLE POINTER, ESTU.
157341 / 200240,,156157          MOVE    T,  PRGM             ;
157342 / 274240,,000004           SUB    T,000004             ;;IF THE SYM TABLE PNTR AND THE PROGRAM
157343 / 651240,,000005           TSC    T,000005             ;; NAME (PRGM) PNTR DO NOT END UP IN THE
157344 / 200300,,156157          MOVE   W1,156157             ;; SAME PLACE, OR THEY DO NOT BOTH START ON
157345 / 430300,,000004           XOR   W1,000004             ;; AN EVEN (OR BOTH ON ODD) LOCATION, OR
157346 / 606300,,000001          TRNN   W1,000001             ;; PRGM .GE. 0, THEN RE-INIT PRGM.
157347 / 322240,,156715         JUMPE    T, CPOPJ             ;
157350 / 402000,,156157         SETZM        PRGM             ;
157351 / 402000,,156140         SETZM      156140             ;;RESET WORLD
157352 / 263140,,000000          POPJ    P,                   ;
                       POWER:
157353 / 607000,,400000          TLNN         FEF             ;
157354 / 254000,,157124          JRST      157124             ;;NO EXPONENT
157355 / 302200,,160162          CAIE    W,  PLUS             ;
157356 / 306200,,160161          CAIN    W, MINUS             ;
157357 / 662000,,004000          TROE        POWF             ;
157360 / 624000,,004000          TRZA        POWF             ;
157361 / 254004,,000000          JRST            (W)          ;; E+-
157362 / 200340,,156156          MOVE   W2,DENDDT             ;
157363 / 402000,,156151         SETZM       FRASE             ;
157364 / 201300,,162043         MOVEI   W1,162043             ;
157365 / 623000,,000002          TLZE          MF             ;
157366 / 201300,,162052         MOVEI   W1,  FT01             ;
157367 / 334240,,156160         SKIPA    T,   FSV             ;
                       POW2:
157370 / 242340,,777777           LSH   W2,777777             ;
157371 / 622340,,000001          TRZE   W2,     1             ;
157372 / 164246,,000000          FMPR    T,      (W1)         ;
157373 / 322340,,157124         JUMPE   W2,    L4             ;
157374 / 364300,,157370          SOJA   W1,  POW2             ;
                       PERIOD:
157375 / 200240,,156167          MOVE    T,156167             ;;PERIOD ( . ) SEEN.  USUALLY THIS IS CURRENT LOCATION
157376 / 603000,,000004          TLNE      000004             ;;BUT IF A SYLLABLE HAD BEEN STARTED IT MEANS
157377 / 200240,,156156          MOVE    T,156156             ;;DECIMAL OR FLOATING POINT
157400 / 202240,,156152         MOVEM    T,   SYL             ;
157401 / 603000,,020000          TLNE      020000             ;;FLOATING POINT ON ALREADY?  I.E., ARE THERE 2 PERIODS?
157402 / 661000,,000020           TLO      000020             ;;TWO PERIODS.  THIS ONE IS A LETTER!
157403 / 667000,,020005          TLON      020005             ;;SET FLOATING POINT.  SKIP IF IN THE MIDDLE OF SYL
157404 / 201240,,000000         MOVEI    T,                   ;;AT FRONT OF SYL. DO THE RIGHT THING FOR .69
157405 / 231240,,000400         IDIVI    T,000400             ;;FLOAT THE VALUE OF T (HOW?)
157406 / 332000,,000005         SKIPE           T             ;
157407 / 641240,,243000           TLC    T,243000             ;
157410 / 641300,,233000           TLC   W1,233000             ;
163474 / 000000,,000000                                       ;
157411 / 140240,,163474           FAD    T,163474             ;
163474 / 000000,,000000                                       ;
157412 / 140300,,163474           FAD   W1,163474             ;
157413 / 144240,,000006          FADR    T,    W1             ;
157414 / 202240,,156161         MOVEM    T,156161             ;;STORE FLOATING VALUE
157415 / 205240,,201400         MOVSI    T,201400             ;
157416 / 202240,,156162         MOVEM    T,156162             ;;VALUE OF DIVISOR (10.0↑<NUMBER OF DIGITS AFTER POINT>)
157417 / 201240,,000045         MOVEI    T,000045             ;;RADIX 50 PERIOD
157420 / 254000,,157303          JRST         LE2             ;
                       QUAN:
157421 / 334240,,156153         SKIPA    T,156153             ;;LAST QUANTITY TYPED
                       PILOC:
157422 / 201240,,155635         MOVEI    T, SAVPI             ;
                       QUAN1:
157423 / 202240,,156152         MOVEM    T,   SYL             ;
                       QUAN2:
157424 / 661000,,000005           TLO      000005             ;;WRD,SYL STARTED
157425 / 621000,,010040           TLZ      010040             ;
157426 / 254000,,157066          JRST          L2             ;
                       CONTRO:
                       ;SOME KIND OF ALTMODE
157427 / 201240,,000044         MOVEI    T,000044             ;;$
157430 / 260140,,162443         PUSHJ    P,162443             ;;TYPE OUT $
                       DOLLAR:
157431 / 663000,,000040          TLOE          CF             ;
157432 / 661000,,010000           TLO         CCF             ;
157433 / 254000,,157066          JRST          L2             ;
                       EVAL0:
157434 / 525300,,237777         HRLOI   W1,237777             ;
157435 / 574120,,156173          HLRE    S,@  SYMP            ;
157436 / 240100,,777777           ASH    S,777777             ;;SETUP END TEST
157437 / 254000,,157444          JRST       EVAL3             ;
                       EVAL1:
163476 / 000002,,000002           XWD 2,2                     ;
157440 / 270040,,163476           ADD    R,163476             ;
                       EVAL2:
157441 / 331000,,000001         SKIPL           R             ;
157442 / 200060,,156173          MOVE    R,@  SYMP            ;
157443 / 347100,,156715          AOJG    S,156715             ;;TRNASFER IF NO SYMBOL FOUND
                       EVAL3:
157444 / 200241,,000000          MOVE    T,      (R)          ;
157445 / 430240,,156163           XOR    T,   SYM             ;
157446 / 607240,,740000          TLNN    T, PNAME             ;
157447 / 665300,,100000          TLOA   W1, LOCAL             ;
157450 / 612240,,000006          TDNE    T,    W1             ;
157451 / 254000,,157440          JRST       EVAL1             ;
157452 / 607240,,340000          TLNN    T,340000             ;
157453 / 254000,,157440          JRST       EVAL1             ;
157454 / 200241,,000001          MOVE    T,     1(R)          ;
157455 / 350003,,000000           AOS            (P)          ;;FOUND SYMBOL, SKIP
157456 / 263140,,000000          POPJ    P,                   ;
                       ;HERE IS THE WFW BLOCK STRUCTURE PATCH 
                       EVAL:
157457 / 205300,,200000         MOVSI   W1,  DELI             ;
157460 / 574120,,156173          HLRE    S,@  SYMP            ;
157461 / 240100,,777777           ASH    S,777777             ;
157462 / 331040,,156136         SKIPL    R,  TBLK             ;
157463 / 254000,,157466          JRST        EVL1             ;
157464 / 402000,,156136         SETZM        TBLK             ;
157465 / 254000,,157470          JRST        EVL2             ;
                       EVL1:
157466 / 331040,,156140         SKIPL    R, BLOCK             ;
157467 / 254000,,157536          JRST         EV5             ;
                       EVL2:
157470 / 200241,,000001          MOVE    T,     1(R)          ;
157471 / 202240,,156145         MOVEM    T,  BLVL             ;
157472 / 254000,,157476          JRST         EV1             ;
                       EV3:
157473 / 316060,,156173          CAMN    R,@  SYMP            ;
157474 / 254000,,157516          JRST         EV4             ;
157475 / 345100,,156715         AOJGE    S, CPOPJ             ;
                       EV1:
163476 / 000002,,000002           XWD 2,2                     ;
157476 / 274040,,163476           SUB    R,163476             ;
157477 / 200241,,000000          MOVE    T,      (R)          ;
157500 / 612240,,000006          TDNE    T,    W1             ;
157501 / 254000,,157473          JRST         EV3             ;
163457 / 000001,,000000                                       ;
163457 / 400401,,000000 POINT 4,01000000,3                    ;
157502 / 135240,,163457           LDB    T,163457             ;
157503 / 306240,,000003          CAIN    T,     3             ;
157504 / 254000,,157523          JRST         EV2             ;
157505 / 336000,,000005         SKIPN           T             ;
157506 / 665300,,100000          TLOA   W1, LOCAL             ;
157507 / 334241,,000000         SKIPA    T,      (R)          ;
157510 / 254000,,157473          JRST         EV3             ;
157511 / 430240,,156163           XOR    T,   SYM             ;
157512 / 621240,,740000           TLZ    T,740000             ;
157513 / 326240,,157473         JUMPN    T,   EV3             ;
157514 / 200241,,000001          MOVE    T,     1(R)          ;
157515 / 254000,,156714          JRST      CPOPJ1             ;
                       EV4:
157516 / 574060,,156173          HLRE    R,@  SYMP            ;
157517 / 213000,,000001         MOVNS           R             ;
157520 / 270060,,156173           ADD    R,@  SYMP            ;
157521 / 341100,,157476          AOJL    S,   EV1             ;
157522 / 263140,,000000          POPJ    P,                   ;
                       EV2:
157523 / 200241,,000001          MOVE    T,     1(R)          ;
157524 / 315240,,156145         CAMGE    T,  BLVL             ;
157525 / 254000,,157534          JRST        EV2A             ;
                       EV2B:
163476 / 000002,,000002           XWD 2,2                     ;
157526 / 274040,,163476           SUB    R,163476             ;
157527 / 271100,,000001          ADDI    S,     1             ;
163457 / 000001,,000000                                       ;
163457 / 400401,,000000 POINT 4,01000000,3                    ;
157530 / 135240,,163457           LDB    T,163457             ;
157531 / 302240,,000003          CAIE    T,     3             ;
157532 / 254000,,157526          JRST        EV2B             ;
157533 / 254000,,157523          JRST         EV2             ;
                       EV2A:
157534 / 202240,,156145         MOVEM    T,  BLVL             ;
157535 / 254000,,157473          JRST         EV3             ;
                       EV5:
157536 / 201240,,000001         MOVEI    T,     1             ;
157537 / 202240,,156145         MOVEM    T,  BLVL             ;
157540 / 335040,,156157        SKIPGE    R,  PRGM             ;
157541 / 254000,,157476          JRST         EV1             ;
157542 / 574060,,156173          HLRE    R,@  SYMP            ;
157543 / 213000,,000001         MOVNS           R             ;
157544 / 270060,,156173           ADD    R,@  SYMP            ;
157545 / 254000,,157476          JRST         EV1             ;
                       ;BIT 40 - DELETE OUTPUT
                       ; 20 - DELETE INPUT
                       ; 10 - LOCAL
                       ; 04 -GLOBAL
                       ; NO BITS - PROGRAM NAME
                       TEXI:
157546 / 260140,,162531         PUSHJ    P,162531             ;;INPUT TEXT
157547 / 202240,,156152         MOVEM    T,   SYL             ;
157550 / 201300,,000005         MOVEI   W1,     5             ;
157551 / 201200,,000000         MOVEI  T-1,                   ;
157552 / 260140,,162531         PUSHJ    P, TEXIN             ;
157553 / 603000,,010000          TLNE      010000             ;;WAS IT DOUBLE ALTMODE?
157554 / 254000,,157557          JRST      157557             ;;PERMIT ALTMODE AS FIRST CHR
157555 / 306240,,000033          CAIN    T,000033             ;;NEW ALT MODE, ESCAPE
157556 / 254000,,157424          JRST       QUAN2             ;
                       TEXI4:
157557 / 607000,,010000          TLNN         CCF             ;
157560 / 254000,,157565          JRST       TEXI5             ;
157561 / 200040,,156147          MOVE    R,  WRD2             ;
157562 / 302040,,000007          CAIE    R,     7             ;
157563 / 254000,,157747          JRST      SIXBIN             ;
157564 / 254000,,157571          JRST       TEXI6             ;
                       TEXI5:
157565 / 603000,,000040          TLNE          CF             ;
157566 / 254000,,157747          JRST      SIXBIN             ;
157567 / 334000,,000000         SKIPA                         ;
                       TEXI2:
157570 / 260140,,162531         PUSHJ    P, TEXIN             ;
                       TEXI6:
157571 / 316240,,156152          CAMN    T,   SYL             ;
157572 / 364300,,157612          SOJA   W1, TEXI3             ;
157573 / 241240,,777771           ROT    T,777771             ;
157574 / 246200,,000007          LSHC  T-1,     7             ;
157575 / 367300,,157570          SOJG   W1, TEXI2             ;
157576 / 607000,,010000          TLNN         CCF             ;
157577 / 254000,,157570          JRST       TEXI2             ;
157600 / 246200,,777735          LSHC  T-1,777735             ;
157601 / 261140,,000000          PUSH    P,                   ;
157602 / 621000,,000040           TLZ          CF             ;
157603 / 661000,,000001           TLO          QF             ;
157604 / 260140,,160344         PUSHJ    P,160344             ;;DEPOSIT
157605 / 262140,,000000           POP    P,                   ;
157606 / 350000,,156170           AOS       LLOCO             ;
157607 / 201200,,000000         MOVEI  T-1,                   ;
157610 / 201300,,000005         MOVEI   W1,     5             ;
157611 / 254000,,157570          JRST       TEXI2             ;
                       TEXI3:
157612 / 246200,,777735          LSHC  T-1,777735             ;
157613 / 321300,,157617         JUMPL   W1, TEXI7             ;
157614 / 321300,,157423         JUMPL   W1, QUAN1             ;
157615 / 242240,,000007           LSH    T,     7             ;
157616 / 364300,,157614          SOJA   W1,157614             ;
                       TEXI7:
157617 / 607000,,010000          TLNN         CCF             ;
157620 / 254000,,157423          JRST       QUAN1             ;
157621 / 246200,,777735          LSHC  T-1,777735             ;
157622 / 261140,,000000          PUSH    P,                   ;
157623 / 621000,,000040           TLZ          CF             ;
157624 / 661000,,000001           TLO          QF             ;
157625 / 260140,,160344         PUSHJ    P,160344             ;;DEPOSIT
157626 / 262140,,000000           POP    P,                   ;
157627 / 350000,,156170           AOS       LLOCO             ;
157630 / 201240,,000000         MOVEI    T,                   ;
157631 / 254000,,157423          JRST       QUAN1             ;
                       BYTI:
157632 / 626000,,000001          TRZN         Q2F             ;
157633 / 254000,,157265          JRST      157265             ;;JUST PERC IF NO ALTMODE
157634 / 336240,,156147         SKIPN    T,156147             ;;GET NUMBER OF BITS/BYTE
157635 / 254000,,157677          JRST      157677             ;;IF ZERO THEN USE BYTE MASK
157636 / 202240,,157743         MOVEM    T,157743             ;;SAVE
157637 / 402000,,157744         SETZM      157744             ;;ASSEMBLED WORD
157640 / 201240,,000044         MOVEI    T,000044             ;;TOTAL NUMBER OF BITS
157641 / 202240,,157745         MOVEM    T,SVBTI2             ;
                       BYTI4:
157642 / 201300,,000000         MOVEI  T+1,                   ;;READ IN NUMBER
                       BYTI3:
157643 / 260140,,162531         PUSHJ    P,162531             ;;NEXT CHR
157644 / 306240,,000054          CAIN    T,000054             ;;SEPERATES BYTES
157645 / 254000,,157656          JRST       BYTI1             ;
157646 / 306240,,000033          CAIN    T,000033             ;;ALTMODE TERMINATES
157647 / 254000,,157673          JRST       BYTI2             ;
157650 / 301240,,000060          CAIL    T,000060             ;;CHECK FOR DIGIT
157651 / 303240,,000067         CAILE    T,000067             ;
157652 / 254000,,157165          JRST         ERR             ;
157653 / 221300,,000010         IMULI  T+1,    10             ;
157654 / 271305,,777720          ADDI  T+1,777720(T)          ;
157655 / 254000,,157643          JRST       BYTI3             ;
                       BYTI1:
157656 / 260140,,157660         PUSHJ    P,BYTI1A             ;
157657 / 254000,,157642          JRST       BYTI4             ;
                       BYTI1A:
157660 / 210340,,157743          MOVN  T+2,157743             ;;GET SIZE
157661 / 241307,,000000           ROT  T+1,      (T+2)        ;;GET THAT MANY BITS INTO LEFT END
157662 / 200240,,157744          MOVE    T,157744             ;;NOW THE PARTIALLY ASSEMBLED WORD
157663 / 200340,,157743          MOVE  T+2,157743             ;;SIZE
157664 / 313340,,157745         CAMLE  T+2,157745             ;;MORE THAN WE NEED?
157665 / 200340,,157745          MOVE  T+2,157745             ;;YES, TAKE SMALLER
157666 / 246247,,000000          LSHC    T,      (T+2)        ;;SHIFT BITS IN
157667 / 213000,,000007         MOVNS      000007             ;;UPDATE NUUMBER OF BITS STILL NEEDED
157670 / 272340,,157745          ADDM  T+2,SVBTI2             ;
157671 / 202240,,157744         MOVEM    T,157744             ;;SAVE WORD
157672 / 263140,,000000          POPJ    P,                   ;
                       BYTI2:
157673 / 260140,,157660         PUSHJ    P,BYTI1A             ;
157674 / 200240,,157744          MOVE    T,157744             ;;GET WORD
157675 / 242260,,157745           LSH    T,@157745            ;;SHIFT REST OF WAY
157676 / 254000,,157423          JRST      157423             ;;GO PUT IT AWAY
                       BYTIM:
157677 / 201240,,000044         MOVEI    T,000044             ;;36 BITS TOTAL
157700 / 202240,,157743         MOVEM    T,157743             ;;SAVE FOR INPUT CHECK
157701 / 402000,,157744         SETZM      157744             ;;BUILD WORD HERE
157702 / 200340,,155646          MOVE  T+2,155646             ;;GET MASK BITS
                       BYTIM1:
157703 / 201300,,000000         MOVEI  T+1,                   ;;BUILD NUMBER
                       BYTIM2:
157704 / 260140,,162531         PUSHJ    P,162531             ;;GET CHARACTER
157705 / 306240,,000054          CAIN    T,000054             ;;COMMA FOR SEPERATOR
157706 / 254000,,157717          JRST      BYTIM3             ;
157707 / 306240,,000033          CAIN    T,000033             ;;ALTMODE TERMINATES
157710 / 254000,,157737          JRST      BYTIM6             ;
157711 / 301240,,000060          CAIL    T,000060             ;;CHECK FOR VALID DIGIT
157712 / 303240,,000067         CAILE    T,000067             ;
157713 / 254000,,157165          JRST         ERR             ;
157714 / 221300,,000010         IMULI  T+1,    10             ;
157715 / 271305,,777720          ADDI  T+1,777720(T)          ;;ACCUMULATE NUMBER
157716 / 254000,,157704          JRST      157704             ;;LOOP
                       BYTIM3:
157717 / 260140,,157721         PUSHJ    P,157721             ;;GO PROCESS NUMBER
157720 / 254000,,157703          JRST      BYTIM1             ;
                       BYTIM4:
157721 / 337000,,157743         SKIPG      157743             ;;ROOM FOR MORE?
157722 / 263140,,000000          POPJ    P,                   ;;NO, QUIT
157723 / 402000,,157745         SETZM      157745             ;;COUNT NUMBER OF BITS THIS POSITION
157724 / 331000,,000007         SKIPL      000007             ;;START WITH 1 BITS IN LEFT
157725 / 450340,,000000         SETCA  T+2,                   ;;COMPLIMENT
                       BYTIM5:
157726 / 242340,,000001           LSH  T+2,000001             ;;GET NEXT BIT
157727 / 241300,,777777           ROT  T+1,777777             ;;MOVE ANOTHHER BIT OF NUMBER TO LEFT END
157730 / 350000,,157745           AOS      157745             ;;SAVE COUNT
157731 / 373000,,157743         SOSLE      157743             ;;CHECK TO SEE IF WORD FULL
157732 / 321340,,157726         JUMPL  T+2,157726             ;;NEXT BIT PART OF SAME FIELD?
157733 / 200240,,157744          MOVE    T,157744             ;;NO, GET WORD
157734 / 246260,,157745          LSHC    T,@157745            ;;SHIFT CORRECT NUMBER OF BITS
157735 / 202240,,157744         MOVEM    T,157744             ;;AND SAVE AGAIN
157736 / 263140,,000000          POPJ    P,                   ;;RETURN
                       BYTIM6:
157737 / 260140,,157721         PUSHJ    P,157721             ;;PROCESS LAST NUMBER TYPED
157740 / 200240,,157744          MOVE    T,157744             ;;GET WORD
157741 / 242260,,157743           LSH    T,@157743            ;;FINISH  SHIFTING
157742 / 254000,,157423          JRST      157423             ;;ALL DONE
                       SVBTI:
157743 / 000000,,000000                                       ;
                       SVBTI1:
157744 / 000000,,000000                                       ;
                       SVBTI2:
157745 / 000000,,000000                                       ;
                       SIXBI1:
157746 / 260140,,162531         PUSHJ    P,162531             ;; INPUT TEXT (SIXBIT)
                       SIXBIN:
157747 / 316240,,156152          CAMN    T,   SYL             ;
157750 / 254000,,157776          JRST      SIXBI2             ;
157751 / 301240,,000141          CAIL    T,000141             ;
157752 / 303240,,000172         CAILE    T,000172             ;
157753 / 254000,,157755          JRST      157755             ;
157754 / 275240,,000040          SUBI    T,000040             ;;CONVERT LOWER CASE TO UPPER CASE.  REG 7/9/74
157755 / 405240,,000077          ANDI    T,    77             ;
157756 / 640240,,000040           TRC    T,    40             ;
157757 / 241240,,777772           ROT    T,777772             ;
157760 / 246200,,000006          LSHC  T-1,     6             ;
157761 / 365300,,157746         SOJGE   W1,SIXBI1             ;
157762 / 607000,,010000          TLNN         CCF             ;
157763 / 254000,,157746          JRST      SIXBI1             ;
157764 / 200240,,000004          MOVE    T,000004             ;
157765 / 261140,,000000          PUSH    P,                   ;
157766 / 621000,,000040           TLZ          CF             ;
157767 / 661000,,000001           TLO          QF             ;
157770 / 260140,,160344         PUSHJ    P, DEPRA             ;
157771 / 262140,,000000           POP    P,                   ;
157772 / 350000,,156170           AOS       LLOCO             ;
157773 / 201200,,000000         MOVEI  T-1,                   ;
157774 / 201300,,000005         MOVEI   W1,     5             ;
157775 / 254000,,157746          JRST      SIXBI1             ;
                       SIXBI2:
157776 / 200240,,000004          MOVE    T,000004             ;
157777 / 321300,,157423         JUMPL   W1, QUAN1             ;
160000 / 242240,,000006           LSH    T,     6             ;
160001 / 364300,,157777          SOJA   W1,157777             ;
                       KILL:
160002 / 607000,,000020          TLNN      000020             ;;DELETE SYMBOLS
160003 / 254000,,157165          JRST         ERR             ;
160004 / 260140,,157457         PUSHJ    P,  EVAL             ;
160005 / 254000,,160013          JRST       KILL1             ;
160006 / 201240,,000002         MOVEI    T,000002             ;;DELETE OUTPUT
160007 / 603000,,010000          TLNE         CCF             ;
160010 / 201240,,000001         MOVEI    T,000001             ;;NO INPUT OR OUTPUT
163461 / 000001,,000000                                       ;
163461 / 420201,,000000 POINT 2,01000000,1                    ;
160011 / 137240,,163461           DPB    T,163461             ;;LEFT 2 BITS IN SYMBOL
                       KILRET:
160012 / 254000,,157200          JRST      157200             ;;USED AS A CONSTANT
                       KILL1:
160013 / 200040,,161742          MOVE    R,161742             ;;REMOVE UNDEFINED SYMS
160014 / 325040,,157167        JUMPGE    R, UNDEF             ;
                       KILL2:
160015 / 260140,,157434         PUSHJ    P, EVAL0             ;
160016 / 254000,,157200          JRST         RET             ;
160017 / 260140,,160021         PUSHJ    P, REMUN             ;
160020 / 254000,,160015          JRST       KILL2             ;
                       REMUN:
163476 / 000002,,000002           XWD 2,2                     ;
160021 / 200100,,163476          MOVE    S,163476             ;;REMOVE ONE UNDEFINED SYMBOL
160022 / 273100,,161742          ADDB    S,  ESTU             ;
160023 / 200202,,777776          MOVE    W,777776(S)          ;
160024 / 202201,,000000         MOVEM    W,      (R)          ;
160025 / 200202,,777777          MOVE    W,777777(S)          ;
160026 / 202201,,000001         MOVEM    W,     1(R)          ;
160027 / 263140,,000000          POPJ    P,                   ;
                       TAG:
160030 / 607000,,000020          TLNN      000020             ;; NO LETTERS IS ERROR
160031 / 254000,,157165          JRST      157165             ;; GO SAY ERROR
160032 / 603000,,001000          TLNE      001000             ;; DEFINE SYMBOLS
160033 / 254000,,160040          JRST      160040             ;;A<B:
160034 / 603000,,000040          TLNE      000040             ;;DEFINE SYMBOL AS OPEN REGISTER
160035 / 254000,,160103          JRST      SETNAM             ;
160036 / 200200,,156170          MOVE    W, LLOCO             ;
160037 / 552200,,156165         HRRZM    W,  DEFV             ;
                       DEFIN:
160040 / 260140,,157457         PUSHJ    P,  EVAL             ;
160041 / 254000,,160043          JRST        DEF1             ;
160042 / 254000,,160053          JRST      160053             ;;NO, REDEFINE
                       DEF1:
163476 / 000002,,000002           XWD 2,2                     ;
160043 / 210040,,163476          MOVN    R,163476             ;
160044 / 273060,,156173          ADDB    R,@156173            ;;MOVE UNDEFINED TABLE 2 REGISTERS
160045 / 550240,,161742          HRRZ    T,  ESTU             ;
160046 / 275240,,000002          SUBI    T,     2             ;
160047 / 504240,,161742           HRL    T,  ESTU             ;
160050 / 542240,,161742          HRRM    T,  ESTU             ;
160051 / 335000,,161742        SKIPGE        ESTU             ;
160052 / 251241,,777777           BLT    T,777777(R)          ;
                       DEF2:
160053 / 200240,,156165          MOVE    T,  DEFV             ;
160054 / 202241,,000001         MOVEM    T,     1(R)          ;;PUT IN NEW VALUE
160055 / 205240,,040000         MOVSI    T,GLOBAL             ;
160056 / 437240,,156163          IORB    T,   SYM             ;
160057 / 202241,,000000         MOVEM    T,      (R)          ;;PUT IN NEW SYM AS GLOBAL
160060 / 200040,,161742          MOVE    R,  ESTU             ;
                       DEF3:
160061 / 325040,,157200        JUMPGE    R,157200             ;;PATCH IN VALUE FOR UNDEF SYM ENTRY
160062 / 200240,,156163          MOVE    T,   SYM             ;
160063 / 312241,,000000          CAME    T,      (R)          ;
160064 / 254000,,160101          JRST        DEF4             ;
160065 / 200100,,156165          MOVE    S,  DEFV             ;
160066 / 335001,,000001        SKIPGE           1(R)          ;
160067 / 210100,,000002          MOVN    S,     S             ;
160070 / 261140,,000001          PUSH    P,     R             ;
160071 / 200041,,000001          MOVE    R,     1(R)          ;
160072 / 260140,,161021         PUSHJ    P, FETCH             ;
160073 / 254000,,157165          JRST         ERR             ;
160074 / 270100,,000005           ADD    S,     T             ;
160075 / 542100,,000005          HRRM    S,     T             ;
160076 / 260140,,161007         PUSHJ    P,   DEP             ;
160077 / 262140,,000001           POP    P,     R             ;
160100 / 260140,,160021         PUSHJ    P, REMUN             ;
                       DEF4:
163476 / 000002,,000002           XWD 2,2                     ;
160101 / 270040,,163476           ADD    R,163476             ;;REMOVE THE NOW DEFINED SYMBOL
160102 / 254000,,160061          JRST        DEF3             ;
                       SETNAM:
160103 / 200060,,156173          MOVE    R,@156173            ;;SET PROGRAM NAME - DOLLAR COLON
                       SET1:
160104 / 325040,,157167        JUMPGE    R, UNDEF             ;
160105 / 200241,,000000          MOVE    T,      (R)          ;
160106 / 316240,,156163          CAMN    T,   SYM             ;
160107 / 254000,,160112          JRST        SET2             ;
163476 / 000002,,000002           XWD 2,2                     ;
160110 / 270040,,163476           ADD    R,163476             ;
160111 / 254000,,160104          JRST        SET1             ;
                       SET2:
160112 / 202040,,156157         MOVEM    R,  PRGM             ;
160113 / 402000,,156140         SETZM       BLOCK             ;
                       SET3:
160114 / 316060,,156173          CAMN    R,@  SYMP            ;
160115 / 254000,,157200          JRST         RET             ;
163476 / 000002,,000002           XWD 2,2                     ;
160116 / 274040,,163476           SUB    R,163476             ;
163457 / 000001,,000000                                       ;
163457 / 400401,,000000 POINT 4,01000000,3                    ;
160117 / 135240,,163457           LDB    T,163457             ;
160120 / 322240,,157200         JUMPE    T,   RET             ;
160121 / 302240,,000003          CAIE    T,     3             ;
160122 / 254000,,160114          JRST        SET3             ;
160123 / 200241,,000000          MOVE    T,      (R)          ;
160124 / 430240,,156163           XOR    T,   SYM             ;
160125 / 621240,,740000           TLZ    T,740000             ;
160126 / 326240,,160114         JUMPN    T,  SET3             ;
160127 / 254000,,160153          JRST       SBPRM             ;
                       SETBLK:
160130 / 607000,,000020          TLNN         LTF             ;
160131 / 254000,,157165          JRST         ERR             ;
160132 / 331040,,156157         SKIPL    R,  PRGM             ;
160133 / 254000,,157165          JRST         ERR             ;
                       SB1:
160134 / 316060,,156173          CAMN    R,@  SYMP            ;
160135 / 254000,,157167          JRST       UNDEF             ;
163476 / 000002,,000002           XWD 2,2                     ;
160136 / 274040,,163476           SUB    R,163476             ;
163457 / 000001,,000000                                       ;
163457 / 400401,,000000 POINT 4,01000000,3                    ;
160137 / 135240,,163457           LDB    T,163457             ;
160140 / 322240,,157167         JUMPE    T, UNDEF             ;
160141 / 302240,,000003          CAIE    T,     3             ;
160142 / 254000,,160134          JRST         SB1             ;
160143 / 200241,,000000          MOVE    T,      (R)          ;
160144 / 430240,,156163           XOR    T,   SYM             ;
160145 / 621240,,740000           TLZ    T,740000             ;
160146 / 326240,,160134         JUMPN    T,   SB1             ;
160147 / 603000,,000040          TLNE          CF             ;
160150 / 254000,,160153          JRST       SBPRM             ;
160151 / 202040,,156136         MOVEM    R,  TBLK             ;
160152 / 254000,,157057          JRST       L1RPR             ;
                       SBPRM:
160153 / 202040,,156140         MOVEM    R, BLOCK             ;
160154 / 254000,,157200          JRST         RET             ;
                       MULT:
160155 / 665000,,000300          TLOA      000300             ;;*
                       DIVD:
160156 / 661000,,040100           TLO      040100             ;;SINGLE QUOTE
160157 / 254000,,157055          JRST          L1             ;
                       ASSEM:
160160 / 254000,,160162          JRST      160162             ;;#
                       MINUS:
160161 / 661000,,000002           TLO          MF             ;
                       PLUS:
160162 / 661000,,000100           TLO         PTF             ;
160163 / 254000,,157052          JRST        LIS2             ;
                       LPRN:
163500 / 000044,,000000           XWD LPDL-4,0                ;
160164 / 311140,,163500          CAML    P,163500             ;;LEFT PARENTHESIS
160165 / 254000,,157165          JRST         ERR             ;
160166 / 261140,,000000          PUSH    P,                   ;;RECURSE FOR OPEN PAREN
160167 / 261140,,156146          PUSH    P,   WRD             ;
160170 / 261140,,156151          PUSH    P, FRASE             ;
160171 / 261140,,156155          PUSH    P,FRASE1             ;
160172 / 350000,,156150           AOS        PRNC             ;
160173 / 254000,,157043          JRST         LIS             ;
                       INDIRE:
160174 / 515200,,000020         HRLZI    W,000020             ;;@
160175 / 437200,,156146          IORB    W,   WRD             ;
160176 / 661000,,000001           TLO          QF             ;
160177 / 254000,,157052          JRST        LIS2             ;
                       ACCF:
160200 / 200040,,000005          MOVE    R,000005             ;;COMMA
160201 / 663000,,200000          TLOE      200000             ;;A COMMA SEEN, WAS IT SECOND?
160202 / 254000,,160214          JRST      160214             ;;YES, GO PROCESS
160203 / 270240,,156146           ADD    T,156146             ;;GET TOTAL
160204 / 542240,,160214          HRRM    T,160214             ;;AND SAVE
160205 / 510240,,000001          HLLZ    T,000001             ;;GET LEFT HALF BACK
160206 / 242040,,000027           LSH    R,    27             ;
160207 / 332000,,156172         SKIPE      156172             ;;IS THIS AN IOT?
160210 / 242040,,000001           LSH    R,000001             ;;THEN SHIFT ONE MORE
160211 / 270240,,000001           ADD    T,     R             ;
160212 / 273240,,156146          ADDB    T,   WRD             ;
160213 / 254000,,160220          JRST      160220             ;
                       ACCCF:
160214 / 205240,,000000         MOVSI    T,                   ;;MODIFIED TO BE LEFT HALF ON ,,
160215 / 202240,,156146         MOVEM    T,   WRD             ;
160216 / 254000,,160220          JRST      160220             ;;AND GO
                       SPACE:
160217 / 603000,,000001          TLNE          QF             ;
160220 / 661000,,100000           TLO         TIF             ;
                       SPAC1:
160221 / 621000,,000102           TLZ      000102             ;
160222 / 254000,,157051          JRST        LIS1             ;
                       RPRN:
160223 / 607000,,000001          TLNN      000001             ;;)
160224 / 201240,,000000         MOVEI    T,                   ;
160225 / 204240,,000005          MOVS    T,     T             ;
160226 / 375000,,156150         SOSGE        PRNC             ;
160227 / 254000,,157165          JRST         ERR             ;
160230 / 262140,,156155           POP    P,FRASE1             ;
160231 / 262140,,156151           POP    P, FRASE             ;
160232 / 262140,,156146           POP    P,   WRD             ;
160233 / 262140,,000000           POP    P,                   ;
160234 / 603000,,000100          TLNE         PTF             ;
160235 / 603000,,000004          TLNE          SF             ;
160236 / 254000,,160242          JRST       RPRN1             ;
160237 / 202240,,156152         MOVEM    T,   SYL             ;
160240 / 661000,,000005           TLO      000005             ;
160241 / 254000,,157057          JRST       L1RPR             ;
                       RPRN1:
160242 / 273240,,156146          ADDB    T,   WRD             ;
160243 / 661000,,000001           TLO          QF             ;
160244 / 254000,,157056          JRST      157056             ;
                       ;REGISTER EXAMINATION LOGIC
                       LINEF:
160245 / 260140,,160344         PUSHJ    P,160344             ;;NEXT REGISTER
                       LI0:
160246 / 260140,,162404         PUSHJ    P,   CRF             ;
160247 / 350240,,156167           AOS    T,  LLOC             ;
                       LI1:
160250 / 553000,,000005         HRRZS           T             ;
160251 / 552240,,156167         HRRZM    T,  LLOC             ;
160252 / 552240,,156170         HRRZM    T, LLOCO             ;
160253 / 260140,,161274         PUSHJ    P,   PAD             ;
160254 / 201240,,000057         MOVEI    T,000057             ;
160255 / 603000,,004000          TLNE         STF             ;
160256 / 201240,,000041         MOVEI    T,000041             ;
160257 / 260140,,162443         PUSHJ    P,  TOUT             ;
                       LI2:
160260 / 621000,,000010           TLZ         ROF             ;
160261 / 260140,,162407         PUSHJ    P,   LCT             ;
160262 / 200040,,156170          MOVE    R, LLOCO             ;
160263 / 260140,,161021         PUSHJ    P, FETCH             ;
160264 / 254000,,157165          JRST         ERR             ;
160265 / 661000,,000010           TLO         ROF             ;
160266 / 603000,,004000          TLNE         STF             ;
160267 / 254000,,157041          JRST         DD2             ;
160270 / 254000,,161200          JRST      161200             ;;RETURN IS A POPJ
                       VARRW:
160271 / 260140,,160344         PUSHJ    P,160344             ;;↑
160272 / 260140,,162404         PUSHJ    P,   CRF             ;
160273 / 370240,,156167           SOS    T,  LLOC             ;
160274 / 254000,,160250          JRST         LI1             ;
                       CARR:
160275 / 260140,,160344         PUSHJ    P,160344             ;;CLOSE REGISTER
160276 / 254000,,157035          JRST         DD1             ;
                       OCON:
160277 / 664000,,002400          TROA      002400             ;;OPEN AS CONSTANT
                       OSYM:
160300 / 620000,,000400           TRZ      000400             ;;OPEN SYMBOLICALLY
160301 / 664000,,002000          TROA         LF1             ;
                       SUPTYO:
160302 / 665000,,004000          TLOA      004000             ;;SUPPRESS TYPEOUT
                       SLASH:
160303 / 621000,,004000           TLZ      004000             ;;TYPE OUT REGISTER
160304 / 607000,,000040          TLNN      000040             ;;WAS $ USED?
160305 / 254000,,160310          JRST      160310             ;;NO
160306 / 260140,,161540         PUSHJ    P,161540             ;;TRY EFFECTIVE ADR
160307 / 254000,,157165          JRST      157165             ;;WE LOST
                       SLAS2:
160310 / 607000,,000001          TLNN          QF             ;
160311 / 254000,,160315          JRST       SLAS1             ;
160312 / 200040,,156167          MOVE    R,  LLOC             ;
160313 / 202040,,156171         MOVEM    R,156171             ;;SAVE FOR $CR ETC.
160314 / 552240,,156167         HRRZM    T,156167             ;;QUANTITY TYPED
                       SLAS1:
160315 / 552240,,156170         HRRZM    T, LLOCO             ;
160316 / 254000,,160260          JRST         LI2             ;
                       ICON:
160317 / 607000,,000010          TLNN      000010             ;;REGISTER OPENED OR ERR
160320 / 254000,,157165          JRST         ERR             ;
160321 / 260140,,161002         PUSHJ    P, DEPRS             ;
160322 / 607000,,000040          TLNN      000040             ;;CHECK FOR ALTMODE
160323 / 254000,,160315          JRST       SLAS1             ;
160324 / 260140,,161540         PUSHJ    P,EFFECA             ;
160325 / 254000,,157165          JRST      157165             ;;LOSE
160326 / 254000,,160315          JRST       SLAS1             ;
                       LTAB:
160327 / 207000,,000005         MOVSS      000005             ;;SWAP HALVES FIRST
160330 / 304000,,000000          CAIA                         ;
                       TAB:
160331 / 260140,,161002         PUSHJ    P,161002             ;;OPEN REGISTER OF Q
160332 / 607000,,000040          TLNN          CF             ;
160333 / 254000,,160336          JRST        TAB1             ;
160334 / 260140,,161540         PUSHJ    P,EFFECA             ;
160335 / 254000,,157165          JRST         ERR             ;
                       TAB1:
160336 / 201245,,777777         MOVEI    T,777777(T)          ;
160337 / 250240,,156167          EXCH    T,  LLOC             ;
160340 / 202240,,156171         MOVEM    T,156171             ;;AGAIN, SAVE IT
160341 / 561240,,700000         HRROI    T,700000             ;
160342 / 260140,,162060         PUSHJ    P, TEXTT             ;
160343 / 254000,,160246          JRST         LI0             ;
                       DEPRA:
160344 / 200040,,156171          MOVE    R,SAVLOC             ;
160345 / 603000,,000040          TLNE      000040             ;;WAS THERE AN ALTMODE?
160346 / 250040,,156167          EXCH    R,156167             ;;RESTORE OLD LOC
160347 / 202040,,156171         MOVEM    R,156171             ;;AND SAVE THIS
160350 / 603000,,000010          TLNE      000010             ;;IF REGISTER IS BEING CHANGED
160351 / 607000,,000001          TLNN      000001             ;;REMOVE ALL PREVIOUS UNDEFINED
160352 / 254000,,161002          JRST      161002             ;;SYMBOL REFERENCES TO IT
160353 / 200040,,161742          MOVE    R,  ESTU             ;
160354 / 202300,,161742         MOVEM   W1,  ESTU             ;
                       DEPRA2:
160355 / 325040,,161002        JUMPGE    R, DEPRS             ;
160356 / 550201,,000001          HRRZ    W,     1(R)          ;
160357 / 316200,,156170          CAMN    W, LLOCO             ;
160360 / 260140,,160021         PUSHJ    P, REMUN             ;
163476 / 000002,,000002           XWD 2,2                     ;
160361 / 270040,,163476           ADD    R,163476             ;
160362 / 254000,,160355          JRST      DEPRA2             ;
                       EQUAL:
160363 / 603000,,000040          TLNE      000040             ;;IF $≡
160364 / 660000,,020000           TRO      020000             ;;THEN REAL NUMERIC MODE
160365 / 664000,,002400          TROA      002400             ;;=
                       PSYM:
160366 / 620000,,000400           TRZ      000400             ;;@
160367 / 660000,,002000           TRO         LF1             ;
160370 / 260140,,161200         PUSHJ    P,CONSYM             ;
160371 / 254000,,157200          JRST         RET             ;
                       R50PNT:
160372 / 242240,,777742           LSH    T,777742             ;;RADIX 50 SYMBOL PRINTER
160373 / 620240,,000003           TRZ    T,     3             ;
160374 / 260140,,161643         PUSHJ    P,   TOC             ;
160375 / 260140,,162411         PUSHJ    P,  TSPC             ;
160376 / 402000,,156143         SETZM      156143             ;;NO BLOCK NAME
160377 / 201300,,156153         MOVEI   W1,156153             ;;SETUP FOR SPT
160400 / 254000,,161703          JRST         SPT             ;
                       SIXBP:
160401 / 211340,,000006         MOVNI   W2,000006             ;;SIXBIT PRINTER
160402 / 200300,,156153          MOVE   W1,   LWT             ;
                       SIXBP1:
160403 / 201240,,000000         MOVEI    T,                   ;
160404 / 245240,,000006          ROTC    T,     6             ;
160405 / 271240,,000040          ADDI    T,    40             ;
160406 / 260140,,162443         PUSHJ    P,  TOUT             ;
160407 / 341340,,160403          AOJL   W2,SIXBP1             ;
160410 / 263140,,000000          POPJ    P,                   ;
                       ;MODE CONTROL SWITCHES
                       ;SET JOB NUMBER TO EXAMINE
                       JOBSET:
160411 / 254000,,157165          JRST         ERR             ;
                       ;IFE UEDDTS
                       ;IFN UEDDTS
                       TEXO:
160412 / 201040,,000573         MOVEI    R,000573             ;;$T ASSUME 7 BIT ASCII
160413 / 200240,,156147          MOVE    T,  WRD2             ;
160414 / 306240,,000006          CAIN    T,000006             ;;CHECK FOR $6T
160415 / 201040,,777114         MOVEI    R,777114             ;;SET MODE SWITCH FOR SIXBIT
160416 / 306240,,000005          CAIN    T,000005             ;;CHECK FOR $5T
160417 / 201040,,777105         MOVEI    R,777105             ;;SET MODE SWITCH FOR RADIX 50
160420 / 306240,,000011          CAIN    T,000011             ;;CHECK FOR $9T
160421 / 201040,,000604         MOVEI    R,000604             ;;SET MODE SWITCH FOR 9 BIT ASCII
                       HWRDS:
160422 / 271040,,777321          ADDI    R,777321             ;;H
                       SFLOT:
160423 / 271040,,000535          ADDI    R,000535             ;;F
                       SYMBOL:
160424 / 271040,,777345          ADDI    R,777345             ;;S
                       CON:
160425 / 271040,,777777          ADDI    R,777777             ;;C
                       UCON:
160426 / 271040,,161643          ADDI    R,161643             ;;U
160427 / 550400,,000001          HRRZ  SCH,     R             ;
160430 / 254000,,160443          JRST       BASE1             ;
                       RELA:
160431 / 622000,,000001          TRZE      000001             ;;CHANGE ADDRESS MODE TO RELATIE
160432 / 254000,,160437          JRST      BASECH             ;
160433 / 201040,,777432         MOVEI    R,777432             ;
                       ABSA:
160434 / 271040,,161643          ADDI    R,161643             ;;A
160435 / 550440,,000001          HRRZ   AR,     R             ;
160436 / 254000,,160443          JRST       BASE1             ;
                       BASECH:
160437 / 200240,,156147          MOVE    T,156147             ;;$NR  CHANGE OUTPUT RADIX TO N, N>1
160440 / 305240,,000002         CAIGE    T,     2             ;
160441 / 254000,,157165          JRST         ERR             ;
160442 / 550500,,000005          HRRZ  ODF,     T             ;
                       BASE1:
163505 / 156061,,000010           XWD SCHM,SCH                ;
160443 / 204100,,163505          MOVS    S,163505             ;
160444 / 607000,,010000          TLNN         CCF             ;
160445 / 254000,,157051          JRST        LIS1             ;
160446 / 251100,,156063           BLT    S,156063             ;;WITH $$, MAKE MODES PERMANENT
160447 / 254000,,157200          JRST         RET             ;
                       SEMIC:
160450 / 202240,,156153         MOVEM    T,156153             ;;SEMICOLON TYPES IN CURRENT MODE
160451 / 254010,,000000          JRST            (SCH)        ;
                       ;GO AND EXECUTE LOGIC
                       STR:
                       GO:
160452 / 505240,,254000          HRLI    T,254000             ;;G
160453 / 663000,,000001          TLOE          QF             ;
160454 / 254000,,155536          JRST        XEC0             ;
160455 / 332240,,155556         SKIPE    T,STARTA             ;
                       ;LOAD TAPE START ADDRESS
                       ;GET STARTING ADDRESS
                       XEC:
160456 / 607000,,000001          TLNN      000001             ;;X
160457 / 254000,,157165          JRST         ERR             ;
160460 / 254000,,155536          JRST      155536             ;;RETCH!!!
                       BREAKA:
160461 / 260140,,160713         PUSHJ    P,160713             ;;REMOVE BREAKPOINTS
                       BREAKB:
160462 / 260140,,157333         PUSHJ    P,157333             ;;RESET PRGM AND BLOCK IF SYMBOLS MOVED
160463 / 370240,,155317           SOS    T, BCOM3             ;
160464 / 553000,,000005         HRRZS      000005             ;;GET ADDR OF BREAKPOINT JUST HIT
160465 / 275240,,155644          SUBI    T,155644             ;
160466 / 231240,,000004         IDIVI    T,     4             ;
160467 / 542240,,160512          HRRM    T,160512             ;;WE WANT IT LATER
160470 / 200305,,160522          MOVE   W1,160522(T)          ;;GET THE RIGHT JUNK
160471 / 260140,,162063         PUSHJ    P,162063             ;;AND PRINT
                       ;<<<<<<< THESE BALANCE THE >'S IN THE NEXT FEW LINES
                       ;;omit;;MOVSI W1,(<ASCIZ />/>)		;TYPE > FOR COND BREAK
160472 / 205300,,370000         MOVSI   W1,      (076B6)      ;;;replace;;previous line `2013-02-21 bgbaumgart@mac.com'
160473 / 337020,,155323         SKIPG      @155323            ;;TEST PROCEED COUNTER
                       ;;omit;;MOVSI W1,(<ASCIZ />>/>)	;TYPE >> FOR PROCEED COUNTER BREAK
160474 / 205300,,371740         MOVSI   W1,      (076B6+076B13)   ;;;replace;;previous line `2013-02-21 bgbaumgart@mac.com'
160475 / 260140,,162063         PUSHJ    P, TEXT2             ;
160476 / 200240,,155300          MOVE    T,  BCOM             ;
160477 / 502240,,155635          HLLM    T,155635             ;;SAVE PROCESSOR FLAGS
160500 / 201245,,777777         MOVEI    T,777777(T)          ;
160501 / 260140,,161274         PUSHJ    P,161274             ;;TYPE PC AT BREAK
160502 / 550260,,155317          HRRZ    T,@ BCOM3            ;
160503 / 542240,,160575          HRRM    T,160575             ;;SETUP ADDRESS OF BREAK
160504 / 554260,,155317          HLRZ    T,@ BCOM3            ;
160505 / 322240,,160511         JUMPE    T,160511             ;;TEST FOR REGISTER TO EXAMINE
160506 / 260140,,162407         PUSHJ    P,162407             ;;PRINT TAB
160507 / 554260,,155317          HLRZ    T,@ BCOM3            ;
160510 / 260140,,160250         PUSHJ    P,160250             ;;EXAMINE REGISTER C($NB)LEFT
                       BREAK1:
160511 / 205100,,400000         MOVSI    S,400000             ;
                       BREAK2:
160512 / 241100,,000000           ROT    S,                   ;;WILL BE MODIFIED WITH BREAK NUM
160513 / 260140,,162505         PUSHJ    P,162505             ;;DONT PROCEED IF TTY KEY HIT
160514 / 616100,,156040          TDNN    S,156040             ;;DONT PROCEED IF NOT AUTOMATIC
160515 / 254000,,155551          JRST      155551             ;;DONT PROCEED
160516 / 201240,,000002         MOVEI    T,000002             ;;COMPENSATE FOR SOS
160517 / 273260,,155323          ADDB    T,@ BCOM2            ;
160520 / 321240,,160573         JUMPL    T,160573             ;;GO IF STILL LESS THAN
160521 / 412100,,156040        ANDCAM    S,156040             ;;TURN OFF AUTOPI
160522 / 254000,,155551          JRST      155551             ;;AND BREAK
                       BRKNAM:
                       PROCED:
160561 / 603000,,000001          TLNE      000001             ;;N$P	;PROCEED AT A BREAKPOINT
160562 / 254000,,160566          JRST       PROC3             ;
160563 / 201240,,000001         MOVEI    T,     1             ;
160564 / 603000,,010000          TLNE      010000             ;;IF $$P
160565 / 205240,,200000         MOVSI    T,200000             ;;THEN VERY LARGE COUNT
                       PROC3:
160566 / 603000,,010000          TLNE      010000             ;;IF AUTOPROC
160567 / 213000,,000005         MOVNS      000005             ;;NEGATE
160570 / 202260,,155323         MOVEM    T,@ BCOM2            ;
160571 / 550040,,155317          HRRZ    R, BCOM3             ;
160572 / 260140,,160772         PUSHJ    P, AUTOP             ;
                       PROCD1:
160573 / 260140,,162404         PUSHJ    P,   CRF             ;
160574 / 260140,,162523         PUSHJ    P,TTYLEV             ;
                       PROC0:
160575 / 551040,,155544         HRRZI    R,155544             ;;MODIFIED TO ADDR OF BREAKPOINT
160576 / 260140,,161021         PUSHJ    P, FETCH             ;
160577 / 254000,,160647          JRST      160647             ;;ONLY GET HERE IF MEMORY SHRANK
160600 / 202240,,155345         MOVEM    T,  LEAV             ;
160601 / 260140,,160700         PUSHJ    P,INSRTB             ;
160602 / 254000,,160603          JRST       PROC2             ;
                       PROC2:
160603 / 201200,,000100         MOVEI    W,   100             ;
160604 / 202200,,156065         MOVEM    W,156065             ;;SETUP MAX LOOP COUNT
160605 / 254000,,160614          JRST       IXCT5             ;
                       IXCT4:
                       ;DONT PROCEDE FOR INIT
                       ;DONT INTERPRET FOR SYSTEM UUOS
160606 / 202040,,000040         MOVEM    R,000040             ;;INTERPRET FOR NON-SYSTEM UUOS
160607 / 201040,,000041         MOVEI    R,    41             ;
                       IXCT:
160610 / 371000,,156065          SOSL        TEM1             ;
160611 / 260140,,161021         PUSHJ    P, FETCH             ;
160612 / 254000,,160646          JRST      160646             ;;BREAKPOINT LOOPING OR FETCH FAILED
160613 / 202240,,155345         MOVEM    T,  LEAV             ;
                       IXCT5:
163526 / 000000,,155345                                       ;
163526 / 331100,,155345 POINT 9,00155345,8                    ;
160614 / 135240,,163526           LDB    T,163526             ;;GET INSTRUCTION
160615 / 306240,,000254          CAIN    T,000254             ;;DON'T DO ANYTHING TO JRST IN EXEC MODE
160616 / 254000,,160643          JRST       IXCT6             ;
160617 / 515740,,156041         HRLZI   17,   AC0             ;
160620 / 251740,,000017           BLT   17,    17             ;
160621 / 201260,,155345         MOVEI    T,@  LEAV            ;
163501 / 000000,,155345                                       ;
163501 / 002700,,155345 POINT 23,00155345,35                  ;
160622 / 137240,,163501           DPB    T,163501             ;;STORE EFFECTIVE ADDRESS
163515 / 000000,,155345                                       ;
163515 / 270400,,155345 POINT 4,00155345,12                   ;
160623 / 135300,,163515           LDB   W1,163515             ;;PICK UP AC FIELD
163526 / 000000,,155345                                       ;
163526 / 331100,,155345 POINT 9,00155345,8                    ;
160624 / 135240,,163526           LDB    T,163526             ;;PICK UP INSTRUCTION FIELD
160625 / 201140,,156066         MOVEI    P,    PS             ;
160626 / 306240,,000260          CAIN    T,   260             ;
160627 / 254000,,160652          JRST      160652             ;;INTERPRET PUSHJ
160630 / 306240,,000264          CAIN    T,   264             ;
160631 / 254000,,160664          JRST      160664             ;;INTERPRET JSR
160632 / 306240,,000265          CAIN    T,   265             ;
160633 / 254000,,160674          JRST      160674             ;;INTERPRET JSP
160634 / 306240,,000266          CAIN    T,   266             ;
160635 / 254000,,160660          JRST      160660             ;;INTERPRET JSA
160636 / 200040,,155345          MOVE    R,  LEAV             ;
160637 / 606240,,000700          TRNN    T,   700             ;
160640 / 254000,,160606          JRST      160606             ;;INTERPRET UUO
160641 / 306240,,000256          CAIN    T,   256             ;
160642 / 254000,,160610          JRST      160610             ;;INTERPRET XCT
                       IXCT6:
160643 / 200200,,155345          MOVE    W,155345             ;;FOR RESTORE TO XCT
160644 / 201260,,155300         MOVEI    T,@155300            ;;GET RETURN ADR
160645 / 254000,,155460          JRST      155460             ;
                       BPLUP:
160646 / 260140,,160713         PUSHJ    P,160713             ;;BREAKPOINT PROCEED ERROR
                       BPLUP1:
160647 / 264000,,155354           JSR        SAVE             ;
160650 / 255000,,000000          JFCL                         ;
160651 / 254000,,157165          JRST         ERR             ;
                       IPUSHJ:
163517 / 000000,,160657                                       ;
163517 / 270400,,160657 POINT 4,00160657,12                   ;
160652 / 137300,,163517           DPB   W1,163517             ;;STORE AC FIELD INTO A PUSH
160653 / 402000,,156155         SETZM        TEM3             ;
160654 / 200200,,160657          MOVE    W,160657             ;;GET A PUSH INSTR
160655 / 200240,,155345          MOVE    T,  LEAV             ;
160656 / 254000,,155461          JRST      RESTR1             ;
                       CPUSHP:
160657 / 261000,,000000          PUSH                         ;
                       IJSA:
160660 / 200240,,155300          MOVE    T,155300             ;;INTERPRET JSA
160661 / 504240,,155345           HRL    T,  LEAV             ;
160662 / 250246,,156041          EXCH    T,   AC0(W1)         ;
160663 / 254000,,160666          JRST       IJSR2             ;
                       IJSR:
160664 / 200240,,155300          MOVE    T,155300             ;;INTERPRET JSR
160665 / 500240,,155635           HLL    T, SAVPI             ;
                       IJSR2:
160666 / 200040,,155345          MOVE    R,  LEAV             ;
160667 / 260140,,161007         PUSHJ    P,   DEP             ;
160670 / 354240,,155345          AOSA    T,  LEAV             ;
                       IJSR3:
160671 / 200240,,155345          MOVE    T,  LEAV             ;
                       IJSR4:
160672 / 255000,,000000          JFCL                         ;
160672 / 205200,,255000         MOVSI    W,      (<JFCL>)     ;
160673 / 254000,,155460          JRST      155460             ;
                       IJSP:
160674 / 200200,,155300          MOVE    W,155300             ;;INTERPRET JSP
160675 / 500240,,155635           HLL    T, SAVPI             ;
160676 / 202206,,156041         MOVEM    W,   AC0(W1)         ;
160677 / 254000,,160671          JRST       IJSR3             ;
                       ;INSERT BREAKPOINTS
                       INSRTB:
163512 / 264000,,155110           JSR         BP1             ;
160700 / 200100,,163512          MOVE    S,163512             ;
                       INSRT1:
160701 / 332042,,000540         SKIPE    R,000540(S)          ;
160702 / 260140,,161021         PUSHJ    P, FETCH             ;
160703 / 254000,,160707          JRST      INSRT3             ;
160704 / 202242,,000002         MOVEM    T,000002(S)          ;
160705 / 200240,,000002          MOVE    T,     S             ;
160706 / 260140,,161007         PUSHJ    P,   DEP             ;
                       INSRT3:
160707 / 271100,,000004          ADDI    S,     4             ;
163513 / 264000,,155274           JSR         BPN             ;
160710 / 317100,,163513          CAMG    S,163513             ;
160711 / 254000,,160701          JRST      INSRT1             ;
160712 / 263140,,000000          POPJ    P,                   ;
                       ;REMOVE BREAKPOINTS
                       REMOVB:
160713 / 201100,,156034         MOVEI    S, BNADR             ;
                       REMOV1:
160714 / 200242,,777242          MOVE    T,777242(S)          ;
160715 / 332042,,000000         SKIPE    R,      (S)          ;
160716 / 260140,,161007         PUSHJ    P,   DEP             ;
160717 / 275100,,000004          SUBI    S,     4             ;
160720 / 301100,,155650          CAIL    S, B1ADR             ;
160721 / 254000,,160714          JRST      REMOV1             ;
160722 / 254000,,162512          JRST      TTYRET             ;
                       ;IN EXEC MODE, SAVE UP TTY STATUS
                       ;IN USER MODE, DONE BY SAVE
                       ;ALL $B COMMANDS OF FORM <A>$<N>B
                       BPS:
160723 / 623000,,000001          TLZE          QF             ;
160724 / 254000,,160733          JRST        BPS1             ;
160725 / 622000,,000001          TRZE         Q2F             ;
160726 / 254000,,160737          JRST        BPS2             ;
163504 / 155650,,155651           XWD B1ADR,B1ADR+1           ;
160727 / 200240,,163504          MOVE    T,163504             ;
160730 / 402000,,155650         SETZM       B1ADR             ;
160731 / 251240,,156040           BLT    T,156040             ;;CLEAR OUT ALL BREAKPOINTS AND AUTO PROCEDE REGESTER
160732 / 254000,,157200          JRST         RET             ;
                       BPS1:
160733 / 626000,,000001          TRZN         Q2F             ;
160734 / 254000,,160751          JRST        BPS3             ;
160735 / 200040,,000005          MOVE    R,     T             ;
160736 / 660000,,000002           TRO           2             ;
                       BPS2:
160737 / 200240,,156147          MOVE    T,  WRD2             ;
160740 / 301240,,000001          CAIL    T,     1             ;
160741 / 303240,,000036         CAILE    T,   NBP             ;
160742 / 254000,,157165          JRST         ERR             ;
160743 / 221240,,000004         IMULI    T,     4             ;
160744 / 271240,,155644          ADDI    T,155644             ;
160745 / 626000,,000002          TRZN         ITF             ;
160746 / 254000,,161446          JRST       MASK2             ;
160747 / 250040,,000005          EXCH    R,     T             ;
160750 / 254000,,160762          JRST        BPS5             ;
                       BPS3:
160751 / 201040,,155650         MOVEI    R,155650             ;;PROCESS THE A$B
                       BPS4:
160752 / 550201,,000000          HRRZ    W,      (R)          ;
160753 / 302205,,000000          CAIE    W,      (T)          ;
160754 / 336001,,000000         SKIPN            (R)          ;
160755 / 254000,,160762          JRST        BPS5             ;
160756 / 271040,,000004          ADDI    R,     4             ;
160757 / 307040,,156034          CAIG    R, BNADR             ;
160760 / 254000,,160752          JRST        BPS4             ;
160761 / 254000,,157165          JRST         ERR             ;
                       BPS5:
160762 / 202241,,000000         MOVEM    T,      (R)          ;
160763 / 402001,,000001         SETZM           1(R)          ;
160764 / 402001,,000002         SETZM           2(R)          ;
160765 / 402001,,000003         SETZM           3(R)          ;
160766 / 700340,,000040         CONSO  APR,000040             ;;WHICH INST SHALL WE USE?
163465 / 700300,,000040         CONSZ  APR, MAOFF             ;
160767 / 334100,,163465         SKIPA    S,163465             ;
163466 / 700340,,000040         CONSO  APR, MAOFF             ;
160770 / 200100,,163466          MOVE    S,163466             ;
160771 / 202101,,000001         MOVEM    S,000001(R)          ;;MAKE BREAK POINTS CONDITIONAL!
                       AUTOP:
160772 / 275040,,155650          SUBI    R,155650             ;;AOUT PROCEED SETUP
160773 / 231040,,000004         IDIVI    R,     4             ;
160774 / 201100,,000001         MOVEI    S,     1             ;
160775 / 242101,,000000           LSH    S,      (R)          ;
160776 / 412100,,156040        ANDCAM    S,AUTOPI             ;
160777 / 603000,,010000          TLNE         CCF             ;
161000 / 436100,,156040          IORM    S,AUTOPI             ;
161001 / 263140,,000000          POPJ    P,                   ;
                       ;FETCH AND DEPOSIT INTO MEMORY
                       DEPRS:
161002 / 202240,,156153         MOVEM    T,156153             ;;DEPOSIT REGISTER AND SAVE AS LWT
161003 / 200040,,156170          MOVE    R,156170             ;;QUAN TYPED IN REGIS EXAM
161004 / 623000,,000010          TLZE         ROF             ;
161005 / 607000,,000001          TLNN          QF             ;
161006 / 263140,,000000          POPJ    P,                   ;
                       DEP:
161007 / 606040,,777760          TRNN    R,777760             ;
161010 / 254000,,161017          JRST        DEP1             ;
161011 / 260140,,156666         PUSHJ    P,SWPDEP             ;
161012 / 263140,,000000          POPJ    P,                   ;;DEPOSIT DONE, OR LOST!
161013 / 550200,,000037          HRRZ    W,JOBREL             ;
161014 / 303201,,000000         CAILE    W,      (R)          ;
161015 / 202241,,000000         MOVEM    T,      (R)          ;
161016 / 263140,,000000          POPJ    P,                   ;
                       DEP1:
161017 / 202241,,156041         MOVEM    T,   AC0(R)          ;
161020 / 263140,,000000          POPJ    P,                   ;
                       FETCH:
                       ;IFE EDDT&1
161021 / 260140,,156625         PUSHJ    P,SWPEXM             ;
161022 / 254000,,156714          JRST      156714             ;;EXAMINE DONE, OR LOST
161023 / 254000,,156714          JRST      156714             ;;DISK REF FAILED!
                       ;IFN FTDSWP
161024 / 550240,,000037          HRRZ    T,JOBREL             ;
                       ;IFN EDDT&1
161025 / 305241,,000000         CAIGE    T,      (R)          ;
161026 / 263140,,000000          POPJ    P,                   ;
161027 / 606040,,777760          TRNN    R,777760             ;
161030 / 334241,,156041         SKIPA    T,   AC0(R)          ;
161031 / 200241,,000000          MOVE    T,      (R)          ;
161032 / 254000,,156714          JRST      CPOPJ1             ;
                       ;IFE UEDDTS
                       ;IFN UEDDTS
                       FIRARG:
161033 / 202240,,156165         MOVEM    T,  DEFV             ;
161034 / 661000,,001000           TLO         FAF             ;
161035 / 254000,,161040          JRST       ULIM1             ;
                       ULIM:
161036 / 661000,,002000           TLO         SAF             ;
161037 / 552240,,156166         HRRZM    T,ULIMIT             ;
                       ULIM1:
161040 / 607000,,000001          TLNN          QF             ;
161041 / 254000,,157165          JRST         ERR             ;
161042 / 254000,,157047          JRST        LIS0             ;
                       LOOK:
161043 / 402000,,156143         SETZM        SVFB             ;
161044 / 402000,,156144         SETZM        SVTB             ;
161045 / 402000,,156145         SETZM        BLVL             ;
161046 / 574120,,156173          HLRE    S,@  SYMP            ;
161047 / 240100,,777777           ASH    S,777777             ;
161050 / 621000,,600000           TLZ      600000             ;
161051 / 202000,,156141         MOVEM         SVF             ;
161052 / 515340,,600000         HRLZI   W2,600000             ;
161053 / 202240,,156137         MOVEM    T,TEMDDT             ;
161054 / 331040,,156157         SKIPL    R,  PRGM             ;
161055 / 254000,,161120          JRST      TOPDWD             ;
                       LOOK1:
163476 / 000002,,000002           XWD 2,2                     ;
161056 / 274040,,163476           SUB    R,163476             ;
161057 / 612341,,000000          TDNE   W2,      (R)          ;
161060 / 254000,,161110          JRST       LOOK3             ;
163457 / 000001,,000000                                       ;
163457 / 400401,,000000 POINT 4,01000000,3                    ;
161061 / 135240,,163457           LDB    T,163457             ;
161062 / 306240,,000003          CAIN    T,     3             ;
161063 / 254000,,161125          JRST       BLNME             ;
161064 / 322240,,161147         JUMPE    T,  PNAM             ;
161065 / 200240,,156137          MOVE    T,TEMDDT             ;
161066 / 200201,,000001          MOVE    W,     1(R)          ;
161067 / 430200,,000005           XOR    W,     T             ;
161070 / 321200,,161110         JUMPL    W, LOOK3             ;
161071 / 274241,,000001           SUB    T,     1(R)          ;
161072 / 321240,,161110         JUMPL    T, LOOK3             ;
161073 / 325000,,161077        JUMPGE       LOOK2             ;
161074 / 200201,,000001          MOVE    W,     1(R)          ;
161075 / 274206,,000001           SUB    W,     1(W1)         ;
161076 / 323200,,161110        JUMPLE    W, LOOK3             ;
                       LOOK2:
161077 / 540300,,000001           HRR   W1,     R             ;
161100 / 661000,,400000           TLO      400000             ;
161101 / 603000,,200000          TLNE      200000             ;
161102 / 254000,,161105          JRST      LOOK2A             ;
161103 / 200200,,156144          MOVE    W,  SVTB             ;
161104 / 202200,,156143         MOVEM    W,  SVFB             ;
                       LOOK2A:
161105 / 603340,,100000          TLNE   W2, LOCAL             ;
161106 / 402000,,156143         SETZM        SVFB             ;
161107 / 322240,,161166         JUMPE    T, LOOK4             ;
                       LOOK3:
161110 / 316060,,156173          CAMN    R,@  SYMP            ;
161111 / 254000,,161121          JRST      TOPDWN             ;
                       LOOK3A:
161112 / 343100,,161056         AOJLE    S, LOOK1             ;
161113 / 200240,,156137          MOVE    T,TEMDDT             ;
161114 / 603000,,400000          TLNE      400000             ;
161115 / 274246,,000001           SUB    T,     1(W1)         ;
161116 / 322240,,161702         JUMPE    T,  SPT0             ;
161117 / 254000,,156714          JRST      CPOPJ1             ;
                       TOPDWD:
161120 / 661340,,100000           TLO   W2, LOCAL             ;
                       TOPDWN:
161121 / 574060,,156173          HLRE    R,@  SYMP            ;
161122 / 213000,,000001         MOVNS           R             ;
161123 / 270060,,156173           ADD    R,@  SYMP            ;
161124 / 254000,,161112          JRST      LOOK3A             ;
                       BLNME:
161125 / 202040,,156144         MOVEM    R,  SVTB             ;
161126 / 200241,,000001          MOVE    T,     1(R)          ;
161127 / 316040,,156140          CAMN    R, BLOCK             ;
161130 / 254000,,161133          JRST       BLNM1             ;
161131 / 311240,,156145          CAML    T,  BLVL             ;
161132 / 254000,,161142          JRST       BLNM2             ;
                       BLNM1:
161133 / 202240,,156145         MOVEM    T,  BLVL             ;
161134 / 603000,,200000          TLNE      200000             ;
161135 / 254000,,161110          JRST       LOOK3             ;
161136 / 250000,,156141          EXCH         SVF             ;
161137 / 250300,,156142          EXCH   W1,   SW1             ;
161140 / 661000,,200000           TLO      200000             ;
161141 / 254000,,161110          JRST       LOOK3             ;
                       BLNM2:
161142 / 607000,,200000          TLNN      200000             ;
161143 / 254000,,161110          JRST       LOOK3             ;
                       PNAM1:
161144 / 250000,,156141          EXCH         SVF             ;
161145 / 250300,,156142          EXCH   W1,   SW1             ;
161146 / 254000,,161110          JRST       LOOK3             ;
                       PNAM:
161147 / 661340,,100000           TLO   W2, LOCAL             ;
161150 / 607000,,200000          TLNN      200000             ;
161151 / 254000,,161110          JRST       LOOK3             ;
161152 / 325000,,161172        JUMPGE       LOOK5             ;
161153 / 200000,,156141          MOVE         SVF             ;
161154 / 325000,,161162        JUMPGE       PNAM2             ;
161155 / 200246,,000001          MOVE    T,     1(W1)         ;
161156 / 250300,,156142          EXCH   W1,   SW1             ;
161157 / 315246,,000001         CAMGE    T,     1(W1)         ;
161160 / 254000,,161174          JRST      LOOK5A             ;
161161 / 200300,,156142          MOVE   W1,   SW1             ;
                       PNAM2:
161162 / 402000,,156143         SETZM        SVFB             ;
161163 / 661000,,400000           TLO      400000             ;
161164 / 621000,,200000           TLZ      200000             ;
161165 / 254000,,161110          JRST       LOOK3             ;
                       LOOK4:
161166 / 627000,,200000          TLZN      200000             ;
161167 / 254000,,161110          JRST       LOOK3             ;
161170 / 402000,,156143         SETZM        SVFB             ;
161171 / 254000,,161702          JRST        SPT0             ;
                       LOOK5:
161172 / 250000,,156141          EXCH         SVF             ;
161173 / 250300,,156142          EXCH   W1,   SW1             ;
                       LOOK5A:
161174 / 200246,,000001          MOVE    T,     1(W1)         ;
161175 / 316240,,156137          CAMN    T,TEMDDT             ;
161176 / 254000,,161702          JRST        SPT0             ;
161177 / 254000,,161110          JRST       LOOK3             ;
                       CONSYM:
161200 / 202240,,156153         MOVEM    T,   LWT             ;
161201 / 606000,,002000          TRNN         LF1             ;
161202 / 254010,,000000          JRST            (SCH)        ;;PIN OR FTOC
161203 / 602000,,000400          TRNE         CF1             ;
161204 / 254000,,161643          JRST        FTOC             ;
                       LFPIN:
161205 / 255000,,000000          JFCL                         ;
                       RFPIN:
161206 / 255000,,000000          JFCL                         ;
                       PIN:
                       ;PRINT INSTRUCTION
161207 / 641240,,700000           TLC    T,700000             ;
161210 / 647240,,700000          TLCN    T,700000             ;
161211 / 254000,,161330          JRST      161330             ;;IN-OUT INSTRUCTION OR NEG NUM
163471 / 777000,,000000           XWD 777000,0                ;
161212 / 404240,,163471           AND    T,163471             ;
161213 / 322240,,161265         JUMPE    T,  HLFW             ;
161214 / 260140,,163270         PUSHJ    P,OPTYPE             ;
                       PIN1:
161215 / 205240,,777000         MOVSI    T,777000             ;
161216 / 404240,,156153           AND    T,   LWT             ;
161217 / 606000,,000002          TRNN      000002             ;;HAS INSTRUCTION BEEN TYPED?
161220 / 260140,,161043         PUSHJ    P,161043             ;;NO, LOOK IN SYMBOL TABLE
161221 / 664000,,000200          TROA      000200             ;;INSTRUCTION TYPED, ALOOW NEG ADDRESSES
161222 / 254000,,161265          JRST      161265             ;;NOT FOUND, OUTPUT AS HALFWORDS
161223 / 260140,,162411         PUSHJ    P,  TSPC             ;
163516 / 270400,,156153           XWD 270400,LWT              ;
161224 / 135240,,163516           LDB    T,163516             ;;GET AC FIELD
161225 / 322240,,161231         JUMPE    T,   PI4             ;
161226 / 260140,,161274         PUSHJ    P,   PAD             ;
                       PI3A:
161227 / 201300,,000054         MOVEI   W1,000054             ;
161230 / 260140,,162061         PUSHJ    P,  TEXT             ;
                       PI4:
161231 / 200300,,156153          MOVE   W1,   LWT             ;
161232 / 201240,,000100         MOVEI    T,000100             ;
161233 / 603300,,000020          TLNE   W1,000020             ;;CHECK FOR INDIRECT BIT
161234 / 260140,,162443         PUSHJ    P,  TOUT             ;
161235 / 550240,,156153          HRRZ    T,   LWT             ;
163527 / 331100,,156153           XWD 331100,LWT              ;
161236 / 135200,,163527           LDB    W,163527             ;;INSTRUCTION BITS
161237 / 301200,,000240          CAIL    W,   240             ;
161240 / 303200,,000247         CAILE    W,   247             ;
161241 / 254000,,161257          JRST         PI8             ;
161242 / 607300,,000020          TLNN   W1,000020             ;;INDIRECT
161243 / 243000,,000000          JFFO                         ;
161243 / 306200,,000243          CAIN    W,000243             ;
161244 / 254000,,161257          JRST      161257             ;;AND JFFO GET SYMBOLIC
161245 / 260140,,161314         PUSHJ    P,PADS3A             ;
                       PI7:
161246 / 620000,,000200           TRZ      000200             ;
163510 / 220400,,156153           XWD 220400,LWT              ;
161247 / 135040,,163510           LDB    R,163510             ;;INDEX REGISTER CHECK
161250 / 322040,,161277         JUMPE    R,161277             ;;EXIT
161251 / 201240,,000050         MOVEI    T,   050             ;;;"("
161252 / 260140,,162443         PUSHJ    P,  TOUT             ;
161253 / 200240,,000001          MOVE    T,     R             ;
161254 / 260140,,161274         PUSHJ    P,   PAD             ;
161255 / 201240,,000051         MOVEI    T,   051             ;;;")"
161256 / 254000,,162443          JRST      162443             ;;EXIT
                       PI8:
161257 / 306400,,161205          CAIN  SCH,161205             ;;IN ONE OF THE SPECIAL MODES?
161260 / 254000,,162672          JRST       LFFLG             ;
161261 / 306400,,161206          CAIN  SCH, RFPIN             ;
161262 / 254000,,162702          JRST       RFFLG             ;
                       PI8A:
161263 / 260140,,161274         PUSHJ    P,   PAD             ;
161264 / 254000,,161246          JRST         PI7             ;
                       HLFW:
                       ;PRINT AS HALF WORDS
161265 / 554240,,156153          HLRZ    T,   LWT             ;
161266 / 322240,,161273         JUMPE    T, HLFW1             ;
161267 / 660000,,000200           TRO      000200             ;;ALLOW NEGATIVE
161270 / 260140,,161274         PUSHJ    P,   PAD             ;
161271 / 205300,,261300         MOVSI   W1,      (<ASCII /,,/>)   ;
161272 / 260140,,162063         PUSHJ    P, TEXT2             ;
                       HLFW1:
161273 / 550240,,156153          HRRZ    T,   LWT             ;
                       PAD:
                       ;PRINT ADDRESS
161274 / 254011,,000000          JRST            (AR)         ;;PADSO OR PAD1
                       PADSO:
161275 / 322240,,161670         JUMPE    T,161670             ;
161276 / 260140,,161043         PUSHJ    P,  LOOK             ;
                       PADS1:
161277 / 263140,,000000          POPJ    P,                   ;
161300 / 200346,,000001          MOVE   W2,     1(W1)         ;
161301 / 315240,,155645         CAMGE    T, MXINC             ;
161302 / 305340,,000060         CAIGE   W2,    60             ;
161303 / 254000,,161313          JRST       PADS3             ;
161304 / 202240,,156137         MOVEM    T,TEMDDT             ;
161305 / 325000,,161312        JUMPGE        PAD1             ;
161306 / 260140,,161702         PUSHJ    P,  SPT0             ;
161307 / 201240,,000053         MOVEI    T,000053             ;
                       PADS1A:
161310 / 260140,,162443         PUSHJ    P,  TOUT             ;
161311 / 550240,,156137          HRRZ    T,TEMDDT             ;
                       PAD1:
161312 / 254000,,161643          JRST      161643             ;;EXIT
                       PADS3:
161313 / 200240,,156137          MOVE    T,TEMDDT             ;
                       PADS3A:
161314 / 602000,,000200          TRNE         NAF             ;
161315 / 305240,,776000         CAIGE    T,776000             ;
161316 / 254000,,161643          JRST         TOC             ;
                       PADS3B:
163472 / 777777,,000000                                       ;
161317 / 316240,,163472          CAMN    T,163472             ;
161320 / 254000,,161324          JRST      161324             ;;SPECIAL CASE THAT PRINTS WRONG
161321 / 212240,,156137         MOVNM    T,TEMDDT             ;
161322 / 201240,,000055         MOVEI    T,000055             ;
161323 / 254000,,161310          JRST      PADS1A             ;
                       PADS3C:
161324 / 201240,,000055         MOVEI    T,000055             ;
161325 / 260140,,162443         PUSHJ    P,  TOUT             ;
161326 / 205240,,000001         MOVSI    T,     1             ;
161327 / 254000,,161643          JRST         TOC             ;
                       INOUT:
161330 / 641240,,777777           TLC    T,777777             ;;IS IT PERHAPS NEGATIVE
161331 / 647240,,777777          TLCN    T,777777             ;
161332 / 254000,,161317          JRST      PADS3B             ;
161333 / 641240,,777000           TLC    T,777000             ;
161334 / 647240,,777000          TLCN    T,777000             ;;THIS IS ALMOST AS GOOD
161335 / 254000,,161265          JRST      161265             ;;PRINT AS A HALF WORD
161336 / 205040,,777722         MOVSI    R,777722             ;;GET LENGTH OF IOT DEVICE TABLE
163522 / 000000,,000005                                       ;
163522 / 320700,,000005 POINT 7,00000005,9                    ;
161337 / 135340,,163522           LDB   W2,163522             ;;GET DEVICE NUMBER
161340 / 242340,,000002           LSH   W2,     2             ;
                       CKIOT:
161341 / 316341,,155557          CAMN   W2, IOTBL(R)          ;;THERE?
161342 / 254000,,161345          JRST      161345             ;;YES
161343 / 253040,,161341         AOBJN    R, CKIOT             ;
161344 / 254000,,161215          JRST      161215             ;;PRINT AS AN INSTRUCTION
                       ISIOT:
163514 / 000000,,000005                                       ;
163514 / 270300,,000005 POINT 3,00000005,12                   ;
161345 / 135040,,163514           LDB    R,163514             ;
163525 / 000000,,000005                                       ;
163525 / 330600,,000005 POINT 6,00000005,8                    ;
161346 / 137040,,163525           DPB    R,163525             ;;MOVE IO BITS OVER FOR OP DECODER
161347 / 260140,,163270         PUSHJ    P,OPTYPE             ;
161350 / 260140,,162411         PUSHJ    P,  TSPC             ;
163523 / 000000,,156153                                       ;
163523 / 320700,,156153 POINT 7,00156153,9                    ;
161351 / 135240,,163523           LDB    T,163523             ;
161352 / 322240,,161372         JUMPE    T, INOU1             ;
161353 / 242240,,000002           LSH    T,     2             ;
161354 / 205300,,777732         MOVSI   W1,777732             ;;GET NAME TABLE LENGTH
                       IOTLK:
161355 / 200206,,161375          MOVE    W, IOTB2(W1)         ;;GET NAME AND NUMBER
161356 / 405200,,000177          ANDI    W,000177             ;;MASK FOR NUMBER
161357 / 242200,,000002           LSH    W,000002             ;;SHIFT DEVICE NUMBER BACK TO COMPARE
161360 / 316240,,000004          CAMN    T,     W             ;
161361 / 254000,,161370          JRST      161370             ;;GOODY WE FOUND THE NUMBER
161362 / 253300,,161355         AOBJN   W1,161355             ;;GO LOOK SOME MORE
161363 / 260140,,161043         PUSHJ    P,161043             ;;LOOK FOR DEVICE NUMBER
161364 / 254000,,161227          JRST        PI3A             ;
161365 / 200240,,156137          MOVE    T,TEMDDT             ;
161366 / 260140,,161643         PUSHJ    P,   TOC             ;
161367 / 254000,,161227          JRST        PI3A             ;
                       IOTFD:
161370 / 200306,,161375          MOVE   W1, IOTB2(W1)         ;;GET NAME AND NUMBER
161371 / 624300,,000177          TRZA   W1,000177             ;;MASK OUT NUMBER AND PRINT
                       INOU1:
161372 / 200300,,163460          MOVE   W1,163460             ;
161373 / 260140,,162063         PUSHJ    P, TEXT2             ;
161374 / 254000,,161227          JRST        PI3A             ;
                       IOTB2:
161375 / 000000,,000000                                       ;
161375 / 406412,,200000                                       ;
161376 / 000000,,000001                                       ;
161376 / 502220,,000001                                       ;
161377 / 000000,,000002                                       ;
161377 / 446372,,000002                                       ;
161400 / 000000,,000005                                       ;
161400 / 502030,,700005                                       ;
161401 / 000000,,000020                                       ;
161401 / 502512,,000020                                       ;
161402 / 000000,,000021                                       ;
161402 / 502512,,200021                                       ;
161403 / 000000,,000024                                       ;
161403 / 416513,,100024                                       ;
161404 / 000000,,000025                                       ;
161404 / 462412,,400025                                       ;
161405 / 000000,,000040                                       ;
161405 / 422060,,000040                                       ;
161406 / 000000,,000041                                       ;
161406 / 422070,,200041                                       ;
161407 / 000000,,000042                                       ;
161407 / 422510,,300042                                       ;
161410 / 000000,,000043                                       ;
161410 / 422512,,300043                                       ;
161411 / 000000,,000044                                       ;
161411 / 466510,,300044                                       ;
161412 / 000000,,000045                                       ;
161412 / 466512,,300045                                       ;
161413 / 000000,,000046                                       ;
161413 / 466511,,500046                                       ;
161414 / 000000,,000050                                       ;
161414 / 406110,,300050                                       ;
161415 / 000000,,000051                                       ;
161415 / 422030,,300051                                       ;
161416 / 000000,,000060                                       ;
161416 / 422072,,340460                                       ;
161417 / 000000,,000061                                       ;
161417 / 422072,,341061                                       ;
161420 / 000000,,000062                                       ;
161420 / 422270,,200062                                       ;
161421 / 000000,,000075                                       ;
161421 / 532331,,100075                                       ;
161422 / 000000,,000076                                       ;
161422 / 502260,,000076                                       ;
161423 / 000000,,000077                                       ;
161423 / 422231,,400077                                       ;
161424 / 000000,,000100                                       ;
161424 / 446332,,000100                                       ;
161425 / 000000,,000101                                       ;
161425 / 522540,,000101                                       ;
161426 / 000000,,000103                                       ;
161426 / 502131,,600103                                       ;
161427 / 000000,,000104                                       ;
161427 / 406451,,500104                                       ;
161430 / 000000,,000105                                       ;
161430 / 406100,,000105                                       ;
161431 / 000000,,000106                                       ;
161431 / 422413,,100106                                       ;
161432 / 000000,,000107                                       ;
161432 / 456050,,400107                                       ;
161433 / 000000,,000110                                       ;
161433 / 542172,,000110                                       ;
161434 / 000000,,000111                                       ;
161434 / 422471,,300111                                       ;
161435 / 000000,,000116                                       ;
161435 / 421426,,100116                                       ;
161436 / 000000,,000120                                       ;
161436 / 502332,,000120                                       ;
161437 / 000000,,000121                                       ;
161437 / 446051,,500121                                       ;
161440 / 000000,,000122                                       ;
161440 / 422110,,400122                                       ;
161441 / 000000,,000166                                       ;
161441 / 502071,,445566                                       ;
161442 / 000000,,000177                                       ;
161442 / 406460,,000177                                       ;
                       MASK:
161443 / 603000,,000001          TLNE          QF             ;
161444 / 254000,,161451          JRST       MASK1             ;
161445 / 201240,,155644         MOVEI    T,   MSK             ;
                       MASK2:
161446 / 201200,,000001         MOVEI    W,     1             ;
161447 / 202200,,156155         MOVEM    W,FRASE1             ;
161450 / 254000,,157423          JRST       QUAN1             ;
                       MASK1:
161451 / 202240,,155644         MOVEM    T,   MSK             ;
161452 / 254000,,157200          JRST         RET             ;
                       EFFEC:
161453 / 661000,,000020           TLO         LTF             ;
161454 / 550240,,000005          HRRZ    T,     T             ;
                       WORD:
161455 / 201040,,774000         MOVEI    R,774000             ;;JUMPE-JUMPN
                       NWORD:
161456 / 271040,,326240          ADDI    R,326240             ;;JUMPN T,
161457 / 506040,,161501          HRLM    R, SEAR2             ;
161460 / 627000,,000001          TLZN          QF             ;
161461 / 254000,,157165          JRST         ERR             ;
161462 / 452240,,156146        SETCAM    T,   WRD             ;
161463 / 205240,,777772         MOVSI    T,777772             ;;PREVENT TYPE OUT OF DDT PARTS
161464 / 462005,,156151        SETCMM       FRASE(T)          ;
161465 / 253240,,161464         AOBJN    T,161464             ;
161466 / 200240,,156166          MOVE    T,ULIMIT             ;
161467 / 603000,,002000          TLNE         SAF             ;
161470 / 661000,,000001           TLO          QF             ;
161471 / 260140,,161561         PUSHJ    P,SETUP1             ;
161472 / 260140,,162404         PUSHJ    P,   CRF             ;
                       SEAR1:
161473 / 260140,,161021         PUSHJ    P, FETCH             ;
161474 / 254000,,161502          JRST      SEAR2A             ;
161475 / 603000,,000020          TLNE      000020             ;;CHECK FOR EFFECTIVE ADDRESS SEARCH
161476 / 254000,,161527          JRST      EFFEC0             ;
161477 / 444240,,156146           EQV    T,   WRD             ;
161500 / 404240,,155644           AND    T,   MSK             ;
                       SEAR2:
161501 / 322240,,161514         JUMPE    T,161514             ;;OR JUMPN T
                       SEAR2A:
161502 / 260140,,162505         PUSHJ    P,162505             ;;QUIT ON TELETYPE
161503 / 304000,,000000          CAIA                         ;
161504 / 254000,,161512          JRST      SEAR2B             ;
163473 / 777777,,777777                                       ;
161505 / 316040,,163473          CAMN    R,163473             ;;LOSING AOBJN WILL SCREW THIS UP!!!!
161506 / 254000,,161512          JRST      161512             ;;END
161507 / 253040,,161473         AOBJN    R, SEAR1             ;
161510 / 603040,,777777          TLNE    R,777777             ;;DID IT JUST GET TO 0 OR IS IT LARGER THAN 128K?
161511 / 254000,,161473          JRST      161473             ;;BIG SEARCH
                       SEAR2B:
161512 / 462000,,156153        SETCMM         LWT             ;
161513 / 254000,,157035          JRST         DD1             ;
                       SEAR3:
161514 / 260140,,161021         PUSHJ    P, FETCH             ;
161515 / 254000,,157165          JRST         ERR             ;
161516 / 621000,,004000           TLZ      004000             ;;TURN OFF SUPRESS OUTPUT
161517 / 202040,,156154         MOVEM    R,  TEM2             ;
161520 / 202040,,000005         MOVEM    R,     T             ;
161521 / 260140,,160250         PUSHJ    P,   LI1             ;
161522 / 260140,,162404         PUSHJ    P,   CRF             ;
161523 / 462000,,156153        SETCMM         LWT             ;
161524 / 462000,,156137        SETCMM      TEMDDT             ;
                       SEAR4:
161525 / 200040,,156154          MOVE    R,  TEM2             ;
161526 / 254000,,161502          JRST      SEAR2A             ;
                       EFFEC0:
161527 / 603000,,010000          TLNE      010000             ;;DOUBLE ALTMODE?
161530 / 254000,,161535          JRST      161535             ;;YES, NO @() CHECK -- RPH 5-12-73
161531 / 202040,,156154         MOVEM    R,  TEM2             ;
161532 / 260140,,161540         PUSHJ    P,EFFECA             ;
161533 / 254000,,161525          JRST      161525             ;;LOST ON EFF ADR CALC
161534 / 200040,,156154          MOVE    R,  TEM2             ;
                       EFFECR:
161535 / 444240,,156146           EQV    T,   WRD             ;
161536 / 405240,,777777          ANDI    T,777777             ;
161537 / 254000,,161501          JRST       SEAR2             ;
                       EFFECA:
161540 / 201200,,000100         MOVEI    W,   100             ;
161541 / 202200,,156137         MOVEM    W,TEMDDT             ;
                       EFFEC1:
161542 / 200200,,000005          MOVE    W,     T             ;
163507 / 000000,,000005                                       ;
163507 / 220400,,000005 POINT 4,00000005,17                   ;
161543 / 135040,,163507           LDB    R,163507             ;;GET IR FIELD
161544 / 322040,,161547         JUMPE    R,EFFEC2             ;
161545 / 550241,,156041          HRRZ    T,   AC0(R)          ;
161546 / 270240,,000004           ADD    T,     W             ;
                       EFFEC2:
161547 / 540040,,000005           HRR    R,     T             ;
161550 / 607200,,000020          TLNN    W,000020             ;;INDIRECT BIT CHECK
161551 / 254000,,161556          JRST      EFFEC3             ;
161552 / 372000,,156137          SOSE      TEMDDT             ;
161553 / 260140,,161021         PUSHJ    P, FETCH             ;
161554 / 263140,,000000          POPJ    P,                   ;;ERROR RETURN
161555 / 254000,,161542          JRST      EFFEC1             ;
                       EFFEC3:
161556 / 553000,,000005         HRRZS      000005             ;;HALFWORD ONLY
161557 / 254000,,156714          JRST      156714             ;;SKIP RETURN
                       SETUP:
161560 / 664000,,000010          TROA      000010             ;;FOR ZERO ONLY
                       SETUP1:
161561 / 620000,,000010           TRZ        R20F             ;
161562 / 607000,,002000          TLNN         SAF             ;
161563 / 200240,,000037          MOVE    T,JOBREL             ;
161564 / 501240,,000000          HLLI    T,                   ;
161565 / 202240,,156166         MOVEM    T,ULIMIT             ;
161566 / 313240,,000037         CAMLE    T,JOBREL             ;
161567 / 254000,,157165          JRST         ERR             ;
161570 / 550040,,156165          HRRZ    R,  DEFV             ;
161571 / 607000,,001000          TLNN         FAF             ;
161572 / 201040,,000000         MOVEI    R,                   ;
161573 / 311040,,156166          CAML    R,ULIMIT             ;
161574 / 254000,,157165          JRST         ERR             ;
161575 / 202040,,156165         MOVEM    R,  DEFV             ;
161576 / 201201,,777777         MOVEI    W,777777(R)          ;;RPH 3-17-72
161577 / 274200,,156166           SUB    W,ULIMIT             ;
161600 / 506200,,000001          HRLM    W,     R             ;
161601 / 263140,,000000          POPJ    P,                   ;
                       ZERO:
161602 / 607000,,010000          TLNN         CCF             ;
161603 / 254000,,157165          JRST         ERR             ;
161604 / 200340,,000005          MOVE   W2,     T             ;
161605 / 607000,,000001          TLNN          QF             ;
161606 / 201340,,000000         MOVEI   W2,                   ;
161607 / 550240,,156166          HRRZ    T,ULIMIT             ;
161610 / 260140,,161560         PUSHJ    P, SETUP             ;
                       ZERO1:
161611 / 602040,,777760          TRNE    R,777760             ;
161612 / 254000,,161616          JRST       ZERO2             ;
161613 / 202341,,156041         MOVEM   W2,   AC0(R)          ;
161614 / 253040,,161611         AOBJN    R, ZERO1             ;
161615 / 254000,,157035          JRST         DD1             ;
                       ZERO2:
161616 / 550040,,000001          HRRZ    R,     R             ;
161617 / 305040,,000040         CAIGE    R,  ZLOW             ;
161620 / 201040,,000040         MOVEI    R,000040             ;;DON'T ZERO 20-ZLOW
161621 / 550100,,000005          HRRZ    S,     T             ;
161622 / 301100,,156717          CAIL    S,   DDT             ;
161623 / 201100,,156717         MOVEI    S,156717             ;
161624 / 313100,,000001         CAMLE    S,     R             ;
161625 / 265200,,161635           JSP    W, ZEROR             ;
161626 / 550040,,000001          HRRZ    R,     R             ;
161627 / 307040,,163557          CAIG    R,163557             ;; DON'T ZERO OUT
161630 / 201040,,163557         MOVEI    R,163557             ;; DDT
161631 / 550100,,000005          HRRZ    S,     T             ;
161632 / 313100,,000001         CAMLE    S,     R             ;
161633 / 265200,,161635           JSP    W, ZEROR             ;
161634 / 254000,,157035          JRST         DD1             ;
                       ZEROR:
161635 / 504040,,000001           HRL    R,     R             ;
161636 / 202341,,000000         MOVEM   W2,      (R)          ;
161637 / 271040,,000001          ADDI    R,     1             ;
161640 / 251042,,777777           BLT    R,777777(S)          ;
161641 / 254004,,000000          JRST            (W)          ;
                       TOCC:
161642 / 660000,,020000           TRO      020000             ;;SET TO REAL NUMERIC MODE
                       FTOC:
                       TOC:
161643 / 550300,,000012          HRRZ   W1,   ODF             ;
161644 / 306300,,000012          CAIN   W1,    12             ;
161645 / 254000,,161672          JRST        TOC4             ;
161646 / 622000,,020000          TRZE         EQF             ;
161647 / 254000,,161661          JRST        TOCA             ;
161650 / 306300,,000010          CAIN   W1,    10             ;
161651 / 607240,,777777          TLNN    T,777777             ;;IF RADIX NOT 10, OR LEFT HALF EMPTY
161652 / 254000,,161661          JRST      161661             ;;PRINT
161653 / 542240,,161660          HRRM    T,161660             ;;SAVE RIGHT HALF
161654 / 557000,,000005         HLRZS           T             ;
161655 / 260140,,161661         PUSHJ    P,161661             ;;PRINT LEFT HALF
161656 / 205300,,261300         MOVSI   W1,      (<ASCII /,,/>)   ;
161657 / 260140,,162063         PUSHJ    P, TEXT2             ;
                       TOCS:
161660 / 201240,,000000         MOVEI    T,                   ;;MODIFIED TO HAVE RIGHT HALF
                       TOCA:
161661 / 246240,,777735          LSHC    T,777735             ;
161662 / 242300,,777777           LSH   W1,777777             ;;W1=T+1
                       TOC1:
161663 / 235252,,000000          DIVI    T,      (ODF)        ;
161664 / 506303,,000000          HRLM   W1,      (P)          ;
                       TOC3:
161665 / 322240,,161667         JUMPE    T,  TOC2             ;
161666 / 260140,,161661         PUSHJ    P,  TOCA             ;
                       TOC2:
161667 / 554243,,000000          HLRZ    T,      (P)          ;
161670 / 271240,,000060          ADDI    T,000060             ;
161671 / 254000,,162443          JRST      162443             ;;DOES POPJ TO TOC2 OR EXIT
                       TOC4:
161672 / 214300,,000005          MOVM   W1,     T             ;
161673 / 325240,,161676        JUMPGE    T,  TOC5             ;
161674 / 201240,,000055         MOVEI    T,000055             ;
161675 / 260140,,162443         PUSHJ    P,  TOUT             ;
                       TOC5:
161676 / 201240,,000000         MOVEI    T,                   ;
161677 / 260140,,161663         PUSHJ    P,  TOC1             ;
                       TOC6:
161700 / 201240,,000056         MOVEI    T,000056             ;
161701 / 254000,,162443          JRST        TOUT             ;
                       SPT0:
161702 / 552300,,156164         HRRZM   W1,156164             ;;SAVE POINTER TO TYPED SYM
                       SPT:
                       ;RADIX 50 SYMBOL PRINT
161703 / 200240,,156143          MOVE    T,  SVFB             ;
161704 / 322240,,161715         JUMPE    T, SPT1W             ;
161705 / 316240,,156140          CAMN    T, BLOCK             ;
161706 / 254000,,161715          JRST       SPT1W             ;
161707 / 261140,,000006          PUSH    P,    W1             ;
163502 / 000005,,000000                                       ;
163502 / 004005,,000000 POINT 32,05000000,35                  ;
161710 / 135240,,163502           LDB    T,163502             ;
161711 / 260140,,161716         PUSHJ    P,  SPT1             ;
161712 / 201240,,000046         MOVEI    T,000046             ;
161713 / 260140,,162443         PUSHJ    P,  TOUT             ;
161714 / 262140,,000006           POP    P,    W1             ;
                       SPT1W:
163503 / 000006,,000000                                       ;
163503 / 004006,,000000 POINT 32,06000000,35                  ;
161715 / 135240,,163503           LDB    T,163503             ;;GET SYMBOL
                       SPT1:
161716 / 231240,,000050         IDIVI    T,    50             ;
161717 / 506303,,000000          HRLM   W1,      (P)          ;
161720 / 322240,,161722         JUMPE    T,  SPT2             ;
161721 / 260140,,161716         PUSHJ    P,  SPT1             ;
                       SPT2:
161722 / 554243,,000000          HLRZ    T,      (P)          ;
161723 / 322240,,156715         JUMPE    T,156715             ;;FLUSH NULL CHARACTERS
161724 / 271240,,000257          ADDI    T,000257             ;
161725 / 303240,,000271         CAILE    T,   271             ;
161726 / 271240,,000007          ADDI    T,000007             ;
161727 / 303240,,000332         CAILE    T,   332             ;
161730 / 275240,,000070          SUBI    T,000070             ;
161731 / 306240,,000243          CAIN    T,   243             ;
                       SPT3:
161732 / 201240,,000256         MOVEI    T,   256             ;
161733 / 254000,,162443          JRST        TOUT             ;
                       SYMD:
161734 / 201240,,000002         MOVEI    T,000002             ;;$D ;DELETE LAST SYM & PRINT NEW
161735 / 550040,,156164          HRRZ    R,156164             ;;PICK UP POINTER TO LAST SYM
161736 / 322040,,157165         JUMPE    R,   ERR             ;
163461 / 000001,,000000                                       ;
163461 / 420201,,000000 POINT 2,01000000,1                    ;
161737 / 137240,,163461           DPB    T,163461             ;;STORE SEMI-DELETE BITS IN SYMBOL
161740 / 200240,,156153          MOVE    T,   LWT             ;
161741 / 254000,,161200          JRST      161200             ;;PRINT OUT NEXT BEST SYMBOL
                       ;THESE 2 ARE HERE BECAUSE SWAPPING DDT DOESN'T SAVE THE
                       ;UNDEFINED SYMBOL TABLE!!!!!!!
                       ESTU:
161742 / 000000,,000000                                       ;
                       ESTUT:
161743 / 000000,,000000                                       ;
                       ;FLOATING POINT OUTPUT
                       TFLOT:
161744 / 200040,,000005          MOVE    A,     T             ;
161745 / 327040,,161754         JUMPG    A,TFLOT1             ;
161746 / 322040,,161763         JUMPE    A,  FP1A             ;
161747 / 213000,,000001         MOVNS           A             ;
161750 / 201240,,000055         MOVEI    T,000055             ;
161751 / 260140,,162443         PUSHJ    P,  TOUT             ;
161752 / 623040,,400000          TLZE    A,400000             ;
161753 / 254000,,161763          JRST        FP1A             ;
                       TFLOT1:
161754 / 607040,,000400          TLNN    A,   400             ;
161755 / 254000,,162031          JRST      162031             ;;UNNORMALIZED FLOATING PRINT AS DECIMAL
                       FP1:
161756 / 201100,,000000         MOVEI    B,                   ;
161757 / 315040,,162052         CAMGE    A,  FT01             ;
161760 / 254000,,162003          JRST         FP4             ;
161761 / 311040,,162040          CAML    A,   FT8             ;
161762 / 344100,,162003          AOJA    B,   FP4             ;
                       FP1A:
161763 / 201200,,000000         MOVEI    C,                   ;
                       FP3:
161764 / 225040,,000400          MULI    A,   400             ;
161765 / 244101,,777535          ASHC    B,777535(A)          ;
161766 / 200040,,000002          MOVE    A,     B             ;
161767 / 402000,,156065         SETZM        TEM1             ;
161770 / 260140,,162020         PUSHJ    P,   FP7             ;
161771 / 260140,,161700         PUSHJ    P,161700             ;;PRINT DECIMAL POINT
161772 / 211040,,000010         MOVNI    A,    10             ;
161773 / 270040,,156065           ADD    A,  TEM1             ;
161774 / 200300,,000004          MOVE   W1,     C             ;
                       FP3A:
161775 / 200240,,000006          MOVE    T,    W1             ;
161776 / 225240,,000012          MULI    T,    12             ;
161777 / 260140,,162027         PUSHJ    P,  FP7B             ;
162000 / 332000,,000006         SKIPE          W1             ;
162001 / 341040,,161775          AOJL    A,  FP3A             ;
162002 / 263140,,000000          POPJ    P,                   ;
                       FP4:
162003 / 211200,,000006         MOVNI    C,     6             ;
162004 / 201340,,000000         MOVEI   W2,                   ;
                       FP4A:
162005 / 240340,,000001           ASH   W2,     1             ;
162006 / 256002,,162053           XCT         FCP(B)          ;
162007 / 254000,,162012          JRST        FP4B             ;
162010 / 164062,,162054          FMPR    A,@162054(B)         ;
162011 / 435340,,000001          IORI   W2,     1             ;
                       FP4B:
162012 / 346200,,162005          AOJN    C,  FP4A             ;
162013 / 261142,,162056          PUSH    P,  FSGN(B)          ;
162014 / 260140,,161764         PUSHJ    P,   FP3             ;
162015 / 262140,,000006           POP    P,    W1             ;
162016 / 200040,,000007          MOVE    A,    W2             ;
162017 / 260140,,162061         PUSHJ    P,  TEXT             ;
                       FP7:
162020 / 322040,,162034         JUMPE    A, FP7A2             ;
162021 / 231040,,000012         IDIVI    A,    12             ;
162022 / 350000,,156065           AOS        TEM1             ;
162023 / 506103,,000000          HRLM    B,      (P)          ;
162024 / 322040,,162026         JUMPE    A, FP7A1             ;
162025 / 260140,,162020         PUSHJ    P,   FP7             ;
                       FP7A1:
162026 / 554243,,000000          HLRZ    T,      (P)          ;
                       FP7B:
162027 / 271240,,000260          ADDI    T,   260             ;
162030 / 254000,,162443          JRST        TOUT             ;
                       FP7A:
162031 / 260140,,162020         PUSHJ    P,   FP7             ;
162032 / 201240,,000056         MOVEI    T,000056             ;
162033 / 254000,,162443          JRST      162443             ;;PRINT WITH A .
                       FP7A2:
162034 / 201240,,000060         MOVEI    T,000060             ;
162035 / 254000,,162443          JRST        TOUT             ;
162036 / 353473,,426555                                       ;;1.0E32
162037 / 266434,,157116                                       ;;1.0E16
                       FT8:
162040 / 233575,,360400                                       ;;1.0E8
162041 / 216470,,400000                                       ;;1.0E4
162042 / 207620,,000000                                       ;;1.0E2
162043 / 204500,,000000                                       ;;1.0E1
                       FT:
162044 / 201400,,000000                                       ;;1.0E0
162045 / 026637,,304365                                       ;;1.0E-32
162046 / 113715,,126246                                       ;;1.0E-16
162047 / 146527,,461671                                       ;;1.0E-8
162050 / 163643,,334273                                       ;;1.0E-4
162051 / 172507,,534122                                       ;;1.0E-2
                       FT01:
162052 / 175631,,463146                                       ;;1.0E-1
                       FCP:
162053 / 313044,,162053         CAMLE    A,   FT0(C)          ;
162054 / 315044,,162044         CAMGE    A,    FT(C)          ;
162055 / 000004,,162053           XWD C,FT0                   ;
                       FSGN:
                       TEXTT:
162060 / 200300,,000005          MOVE   W1,     T             ;
                       TEXT:
162061 / 607300,,774000          TLNN   W1,774000             ;;LEFT JUSTIFIED UNLESS LEFT CHAR IS NULL
162062 / 242300,,000035           LSH   W1,    35             ;
                       TEXT2:
162063 / 201240,,000000         MOVEI    T,                   ;
162064 / 246240,,000007          LSHC    T,     7             ;
162065 / 303240,,000004         CAILE    T,000004             ;;EOT
162066 / 260140,,162443         PUSHJ    P,  TOUT             ;
162067 / 326300,,162063         JUMPN   W1, TEXT2             ;
162070 / 263140,,000000          POPJ    P,                   ;
                       ;RPH 7-29-72  TYPE OUT TTY INPUT BUFFERS
                       TEXTT9:
162071 / 200300,,000005          MOVE   W1,     T             ;
                       TEXTT0:
162072 / 201240,,000000         MOVEI    T,                   ;
162073 / 246240,,000011          LSHC    T,    11             ;
162074 / 261140,,000005          PUSH    P,     T             ;
162075 / 242240,,777771           LSH    T,777771             ;
162076 / 261140,,000005          PUSH    P,     T             ;
163475 / 000000,,000136                                       ;
162077 / 334240,,163475         SKIPA    T,163475             ;
162100 / 260140,,162443         PUSHJ    P,  TOUT             ;
162101 / 371003,,000000          SOSL            (P)          ;
162102 / 254000,,162100          JRST      162100             ;
162103 / 262143,,000000           POP    P,      (P)          ;
162104 / 262140,,000005           POP    P,     T             ;
162105 / 405240,,000177          ANDI    T,   177             ;
162106 / 332000,,000005         SKIPE           T             ;
162107 / 260140,,162443         PUSHJ    P,  TOUT             ;
162110 / 326300,,162072         JUMPN   W1,TEXTT0             ;
162111 / 263140,,000000          POPJ    P,                   ;
                       CRN:
162402 / 201240,,000015         MOVEI    T,000015             ;;CARRIAGE RETURN
162403 / 254000,,162443          JRST        TOUT             ;
                       CRF:
162404 / 260140,,162402         PUSHJ    P,   CRN             ;
162405 / 201240,,000012         MOVEI    T,000012             ;;LINE FEED
162406 / 254000,,162443          JRST        TOUT             ;
                       LCT:
162407 / 260140,,162411         PUSHJ    P,  TSPC             ;
162410 / 260140,,162411         PUSHJ    P,  TSPC             ;
                       TSPC:
162411 / 201240,,000040         MOVEI    T,000040             ;;SPACE
162412 / 254000,,162443          JRST        TOUT             ;
                       TINSTR:
162413 / 134240,,155643          ILDB    T,STRING             ;
162414 / 322240,,162430         JUMPE    T,162430             ;;THERE IS A CHR
162415 / 712300,,000040         CONSZ TTYY,    40             ;
162416 / 254000,,162430          JRST        TIN3             ;
162417 / 302240,,000015          CAIE    T,    15             ;
162420 / 254000,,162435          JRST        TIN2             ;
162421 / 134240,,155643          ILDB    T,STRING             ;
162422 / 306240,,000012          CAIN    T,    12             ;
162423 / 254000,,162426          JRST        TIN4             ;
162424 / 205240,,070000         MOVSI    T, 70000             ;
162425 / 272240,,155643          ADDM    T,STRING             ;
                       TIN4:
162426 / 201240,,000015         MOVEI    T,    15             ;
162427 / 254000,,162435          JRST        TIN2             ;
                       TIN3:
162430 / 402000,,155643         SETZM      155643             ;;ZERO AND READ TTY
                       TIN:
162431 / 332000,,155643         SKIPE      STRING             ;
162432 / 254000,,162413          JRST      162413             ;;GET IT FROM THE STRING
162433 / 260140,,162505         PUSHJ    P,LISTEN             ;
162434 / 254000,,162433          JRST      162433             ;
                       TIN2:
162435 / 302240,,000175          CAIE    T,   175             ;
162436 / 306240,,000176          CAIN    T,   176             ;
162437 / 201240,,000033         MOVEI    T,000033             ;;CHANGE ALL ALT MODES TO NEW
162440 / 306240,,000177          CAIN    T,   177             ;
162441 / 254000,,157171          JRST       WRONG             ;
162442 / 602240,,000140          TRNE    T,   140             ;
                       TOUT:
162443 / 307240,,000004          CAIG    T,     4             ;
162444 / 263140,,000000          POPJ    P,                   ;
162445 / 332000,,155642         SKIPE      OUTRTN             ;
162446 / 254020,,155642          JRST      @OUTRTN            ;
162447 / 332000,,155640         SKIPE      OUTLPT             ;
162450 / 254000,,162465          JRST       LPOUT             ;
162451 / 506243,,000000          HRLM    T,      (P)          ;
162452 / 221240,,200401         IMULI    T,200401             ;
163477 / 000011,,111111                                       ;
162453 / 404240,,163477           AND    T,163477             ;
163477 / 000011,,111111                                       ;
162454 / 220240,,163477          IMUL    T,163477             ;
162455 / 544243,,000000           HLR    T,      (P)          ;
162456 / 603240,,000010          TLNE    T,    10             ;
162457 / 640240,,000200           TRC    T,   200             ;
162460 / 712300,,000020         CONSZ TTYY,    20             ;
162461 / 254000,,162460          JRST      162460             ;
162462 / 712140,,000005         DATAO TTYY,     T             ;
162463 / 405240,,000177          ANDI    T,   177             ;
162464 / 263140,,000000          POPJ    P,                   ;
                       LPOUT:
162465 / 136240,,162502          IDPB    T, LPPTR             ;
162466 / 373000,,162504         SOSLE       LPCNT             ;
162467 / 263140,,000000          POPJ    P,                   ;
162470 / 261140,,000005          PUSH    P,     T             ;
162471 / 201240,,000005         MOVEI    T,     5             ;
162472 / 202240,,162504         MOVEM    T, LPCNT             ;
162473 / 712540,,162503         DATAO  LPT, LPWRD             ;
163462 / 000000,,162503                                       ;
163462 / 440700,,162503 POINT 7,00162503,                     ;
162474 / 200240,,163462          MOVE    T,163462             ;
162475 / 202240,,162502         MOVEM    T, LPPTR             ;
162476 / 712740,,000100         CONSO  LPT,   100             ;
162477 / 254000,,162476          JRST      162476             ;
162500 / 262140,,000005           POP    P,     T             ;
162501 / 263140,,000000          POPJ    P,                   ;
                       LPPTR:
162502 / 000000,,162503                                       ;
162502 / 440700,,162503 POINT 7,00162503,                     ;
                       LPWRD:
162503 / 000000,,000000                                       ;
                       LPCNT:
162504 / 000000,,000005                                       ;
                       LISTEN:
162505 / 712340,,000040         CONSO TTYY,000040             ;;LISTEN FOR TTY
162506 / 263140,,000000          POPJ    P,                   ;
162507 / 712040,,000005         DATAI TTYY,     T             ;
162510 / 405240,,000177          ANDI    T,   177             ;
162511 / 254000,,156714          JRST      CPOPJ1             ;
                       TTYRET:
162512 / 201240,,003410         MOVEI    T,  3410             ;
                       TTY1:
162513 / 201340,,040000         MOVEI   W2, 40000             ;
162514 / 712300,,000120         CONSZ TTYY,   120             ;
162515 / 367340,,162514          SOJG   W2,162514             ;
162516 / 712240,,155637          CONI TTYY,SAVTTY             ;
162517 / 712040,,000007         DATAI TTYY,    W2             ;
162520 / 506340,,155637          HRLM   W2,SAVTTY             ;
162521 / 712205,,000000          CONO TTYY,      (T)          ;
162522 / 263140,,000000          POPJ    P,                   ;
                       TTYLEV:
162523 / 200240,,155637          MOVE    T,SAVTTY             ;
162524 / 620240,,000160           TRZ    T,   160             ;
162525 / 660240,,003600           TRO    T,  3600             ;
162526 / 602240,,000010          TRNE    T,    10             ;
162527 / 620240,,000200           TRZ    T,   200             ;
162530 / 254000,,162513          JRST        TTY1             ;
                       TEXIN:
162531 / 260140,,162431         PUSHJ    P,   TIN             ;
162532 / 606240,,000140          TRNN    T,   140             ;
162533 / 254000,,162443          JRST        TOUT             ;
162534 / 263140,,000000          POPJ    P,                   ;
                       BDISP:
162535 / 000001,,162540                                       ;
162535 / 301401,,162540 POINT 12,01162540,11                  ;
162536 / 000001,,162540                                       ;
162536 / 141401,,162540 POINT 12,01162540,23                  ;
162537 / 000001,,162540                                       ;
162537 / 001401,,162540 POINT 12,01162540,35                  ;
                       DISP:
                       ;;replace;;IFE EDDT&1&<EDDT>B36,;;means NOT Exec DDT with Papertape FLAG
                       FLGOUT:
162600 / 336040,,163556         SKIPN    R,FLGPNT             ;
162601 / 254000,,161265          JRST      161265             ;;IF NO POINTER USE HALFWORD
162602 / 205300,,400000         MOVSI   W1,400000             ;;SET FOR HIGH ORDER BIT
                       FLGLP2:
162603 / 260140,,162630         PUSHJ    P,PRNTIT             ;
163533 / 332000,,163554         SKIPE      163554             ;;WAS THERE SOMETHING PRINTED
163534 / 263140,,000000          POPJ    P,                   ;;YES, EXIT
163535 / 201240,,000060         MOVEI    T,000060             ;;NO, PRINT A 0
163536 / 254000,,162443          JRST        TOUT             ;
162604 / 322300,,163533         JUMPE   W1,163533             ;
162605 / 336000,,163554         SKIPN      EXFLAG             ;
162606 / 254000,,162603          JRST      FLGLP2             ;
162607 / 261140,,000005          PUSH    P,     T             ;
162610 / 201240,,000054         MOVEI    T,000054             ;
162611 / 260140,,162443         PUSHJ    P,  TOUT             ;
162612 / 260140,,162443         PUSHJ    P,  TOUT             ;
162613 / 262140,,000005           POP    P,     T             ;
162614 / 254000,,162603          JRST      FLGLP2             ;
                       GETPTR:
162615 / 336040,,155647         SKIPN    R,FLGPTR             ;
162616 / 263140,,000000          POPJ    P,                   ;
                       FLGSLP:
162617 / 552040,,163556         HRRZM    R,163556             ;
162620 / 602000,,000001          TRNE         Q2F             ;
162621 / 375000,,156147         SOSGE        WRD2             ;
162622 / 254000,,156714          JRST      CPOPJ1             ;
162623 / 557000,,000001         HLRZS           R             ;
162624 / 322040,,156715         JUMPE    R, CPOPJ             ;
162625 / 332041,,000000         SKIPE    R,      (R)          ;
162626 / 254000,,162617          JRST      FLGSLP             ;
162627 / 263140,,000000          POPJ    P,                   ;
                       PRNTIT:
162630 / 505040,,777756          HRLI    R,777756             ;;SET FOR HALF WORD
162631 / 402000,,163555         SETZM      163555             ;
162632 / 402000,,163554         SETZM      163554             ;;NO ! AND NO NUMERIC
                       FLGLP:
162633 / 616240,,000006          TDNN    T,    W1             ;
162634 / 254000,,162651          JRST       NOBIT             ;
162635 / 336001,,000000         SKIPN            (R)          ;;TEST FOR NAME
163531 / 436300,,163555          IORM   W1,163555             ;;SAVE BIT
163532 / 254000,,162651          JRST       NOBIT             ;
162636 / 254000,,163531          JRST      163531             ;
162637 / 261140,,000005          PUSH    P,     T             ;
162640 / 261140,,000006          PUSH    P,    W1             ;
162641 / 201240,,000041         MOVEI    T,000041             ;
162642 / 332000,,163554         SKIPE      EXFLAG             ;
162643 / 260140,,162443         PUSHJ    P,  TOUT             ;
162644 / 200241,,000000          MOVE    T,      (R)          ;
162645 / 260140,,161716         PUSHJ    P,  SPT1             ;
162646 / 476000,,163554         SETOM      163554             ;;WE HAVE PUT OUT SOMETHING
162647 / 262140,,000006           POP    P,    W1             ;
162650 / 262140,,000005           POP    P,     T             ;
                       NOBIT:
162651 / 242300,,777777           LSH   W1,777777             ;
162652 / 253040,,162633         AOBJN    R, FLGLP             ;
162653 / 332000,,163555         SKIPE      FLGNUM             ;
163537 / 261140,,000005          PUSH    P,     T             ;
163540 / 261140,,000006          PUSH    P,    W1             ;
163541 / 201240,,000041         MOVEI    T,    41             ;
163542 / 332000,,163554         SKIPE      EXFLAG             ;
163543 / 260140,,162443         PUSHJ    P,  TOUT             ;
163544 / 200240,,163555          MOVE    T,FLGNUM             ;
163545 / 606240,,777777          TRNN    T,777777             ;;CHECK TO SEE IF LEFT HALF
163546 / 207000,,000005         MOVSS           T             ;
163547 / 260140,,161642         PUSHJ    P,  TOCC             ;
163550 / 262140,,000006           POP    P,    W1             ;
163551 / 262140,,000005           POP    P,     T             ;
163552 / 476000,,163554         SETOM      EXFLAG             ;
163553 / 263140,,000000          POPJ    P,                   ;
162654 / 254000,,163537          JRST      163537             ;
162655 / 263140,,000000          POPJ    P,                   ;
                       FLGMOD:
162656 / 260140,,162615         PUSHJ    P,GETPTR             ;
162657 / 402000,,163556         SETZM      FLGPNT             ;
162660 / 201400,,162600         MOVEI  SCH,FLGOUT             ;
162661 / 254000,,160443          JRST       BASE1             ;
                       LFTT:
162662 / 260140,,162615         PUSHJ    P,GETPTR             ;
162663 / 402000,,163556         SETZM      FLGPNT             ;
162664 / 201400,,161205         MOVEI  SCH, LFPIN             ;
162665 / 254000,,160443          JRST       BASE1             ;
                       RFTT:
162666 / 260140,,162615         PUSHJ    P,GETPTR             ;
162667 / 402000,,163556         SETZM      FLGPNT             ;
162670 / 201400,,161206         MOVEI  SCH, RFPIN             ;
162671 / 254000,,160443          JRST       BASE1             ;
                       LFFLG:
162672 / 336040,,163556         SKIPN    R,FLGPNT             ;
162673 / 254000,,161263          JRST      161263             ;;NONE THERE
                       COMFLG:
162674 / 201300,,400000         MOVEI   W1,400000             ;
162675 / 260140,,162630         PUSHJ    P,PRNTIT             ;
162676 / 201240,,000060         MOVEI    T,000060             ;
162677 / 336000,,163554         SKIPN      EXFLAG             ;
162700 / 260140,,162443         PUSHJ    P,  TOUT             ;
162701 / 254000,,161246          JRST         PI7             ;
                       RFFLG:
162702 / 336040,,163556         SKIPN    R,FLGPNT             ;
162703 / 254000,,161263          JRST        PI8A             ;
162704 / 271040,,000022          ADDI    R,000022             ;
162705 / 254000,,162674          JRST      COMFLG             ;
162706 / 254000,,156717          JRST         DDT             ;
                       BITO:
162707 / 201040,,162724         MOVEI    R,162724             ;; PATCH FOR BYTE OUTPUT WW 12-9-66
162710 / 551440,,161643         HRRZI   AR,   TOC             ;
162711 / 626000,,000001          TRZN         Q2F             ;
162712 / 254000,,157165          JRST         ERR             ;
162713 / 200240,,156147          MOVE    T,  WRD2             ;
162714 / 202240,,163000         MOVEM    T, SVBTS             ;
162715 / 201240,,000044         MOVEI    T,000044             ;
162716 / 230240,,156147          IDIV    T,  WRD2             ;
162717 / 332000,,000006         SKIPE      000006             ;
162720 / 271240,,000001          ADDI    T,     1             ;
162721 / 202240,,163001         MOVEM    T,SVBTS2             ;
162722 / 550400,,000001          HRRZ  SCH,     R             ;
162723 / 254000,,160443          JRST       BASE1             ;
                       BITT:
162724 / 200300,,000005          MOVE  T+1,     T             ;
162725 / 336000,,163000         SKIPN      163000             ;;0 IS MASK CONDITION
162726 / 254000,,162750          JRST       BITTM             ;
162727 / 200240,,163001          MOVE    T,SVBTS2             ;
162730 / 202240,,163003         MOVEM    T, SVBT2             ;
162731 / 202300,,163002         MOVEM  T+1, SVBT3             ;
                       BITT2:
162732 / 201240,,000000         MOVEI    T,                   ;
162733 / 200340,,163000          MOVE  T+2, SVBTS             ;
162734 / 246247,,000000          LSHC    T,      (T+2)        ;
162735 / 202300,,163002         MOVEM  T+1, SVBT3             ;
162736 / 302440,,161275          CAIE   AR, PADSO             ;
162737 / 260140,,161643         PUSHJ    P,  FTOC             ;
162740 / 302440,,161643          CAIE   AR,   TOC             ;
162741 / 260140,,161207         PUSHJ    P,   PIN             ;
162742 / 377000,,163003          SOSG       SVBT2             ;
162743 / 263140,,000000          POPJ    P,                   ;
162744 / 201240,,000054         MOVEI    T,000054             ;
162745 / 260140,,162443         PUSHJ    P,  TOUT             ;
162746 / 200300,,163002          MOVE  T+1, SVBT3             ;
162747 / 254000,,162732          JRST       BITT2             ;
                       BITTM:
162750 / 201240,,000044         MOVEI    T,000044             ;;SET OUTPUT COUNT
162751 / 202240,,163002         MOVEM    T, SVBT3             ;
162752 / 200340,,155646          MOVE  T+2,155646             ;;GET MASK BITS
                       BITTM1:
162753 / 201240,,000000         MOVEI    T,                   ;;SET TO SHIFT WORD
162754 / 331000,,000007         SKIPL      000007             ;;START WITH 1 BITS
162755 / 450340,,000000         SETCA  T+2,                   ;
                       BITTM2:
162756 / 246240,,000001          LSHC    T,000001             ;;NEXT BIT
162757 / 242340,,000001           LSH  T+2,000001             ;;SHIFT MASK
162760 / 373000,,163002         SOSLE      163002             ;;ALL BITS GONE?
162761 / 321340,,162756         JUMPL  T+2,162756             ;;PART OF SAME FIELD
162762 / 202340,,163003         MOVEM  T+2,163003             ;;SAVE MASK
162763 / 202300,,162777         MOVEM  T+1,162777             ;;AND PARTIAL MASK
162764 / 302440,,161275          CAIE   AR,161275             ;;DO PROPER OUTPUT
162765 / 260140,,161643         PUSHJ    P,  FTOC             ;
162766 / 302440,,161643          CAIE   AR,   TOC             ;
162767 / 260140,,161207         PUSHJ    P,   PIN             ;
162770 / 337000,,163002         SKIPG      163002             ;;ANY MORE?
162771 / 263140,,000000          POPJ    P,                   ;;NO, RETURN
162772 / 201240,,000054         MOVEI    T,000054             ;;COMMA
162773 / 260140,,162443         PUSHJ    P,  TOUT             ;
162774 / 200300,,162777          MOVE  T+1,162777             ;;GET WORD BACK
162775 / 200340,,163003          MOVE  T+2,163003             ;;AND MASK
162776 / 254000,,162753          JRST      162753             ;;PRINT NEXT FIELD
                       SVBT4:
162777 / 000000,,000000                                       ;
                       SVBTS:
163000 / 000000,,000000                                       ;
                       SVBTS2:
163001 / 000000,,000000                                       ;
                       SVBT3:
163002 / 000000,,000000                                       ;
                       SVBT2:
163003 / 000000,,000000                                       ;;END OF PATCH  WW 12-9-66
                       ;DESCRIPTION OF OP DECODER FOR DDT:
                       ;         THE ENTIRE INSTRUCTION SET FOR THE PDP-6 CAN BE COMPACTED INTO
                       ;A SPACE MUCH SMALLER THAN ONE REGISTER FOR EVERY SYMBOL.  THIS OCCURS
                       ;BECAUSE OF THE MACHINE ORGANIZATION AND INSTRUCTION MNEMONICS CHOSEN
                       ;FOR THE PDP-6.  FOR EXAMPLE, IF BITS (0-2) OF AN INSTRUCTION EQUAL
                       ;101(2) THE INSTRUCTION IS A HALF WORD INSTRUCTION AND AN "H" MAY
                       ;BE ASSUMED. "T" MAY BE ASSUMED FOR ALL TEST INSTRUCTIONS (WHICH
                       ;BEGIN WITH 110(2).
                       ;     	THE TABLE TBL IN DDT CONSISTS OF 9 BIT BYTES, 4 TO A WORD.
                       ;THE NUMBERS IN THE BYTES HAVE THE FOLLOWING SIGNIFICANCE:
                       ;0-37(8):	THIS IS A DISPATCH COMMAND FOR THE OP-DECODER INTERPRETER.
                       ;	LET THE RIGHT MOST TWO BITS EQUAL N; LET THE NEXT 3 BITS
                       ;	EQUAL P.
                       ;	THE CONTENTS OF INST (INSTRUCTION) CONTAIN IN THE RIGHT
                       ;	MOST NINE BITS THE BINARY FOR THE MACHINE INSTRUCTION.
                       ;	P AND N REFER TO THE CONTENTS OF INST, AND THE OP DECODER
                       ;	WILL PRODUCE AN ANSWER D GIVEN P, N, AND THE CONTENTS
                       ;	OF INSTX N+1 GIVES THE NUMBER OF BITS IN INST; P GIVES THE
                       ;	POSITION (FROM THE RIGHT EDGE) OF THE N+1 BITS.
                       ;	EXAMPLE: P = 6
                       ;	         N = 2
                       ;;	C(INST) = .010 101 100(2)
                       ;	THE RESULT- D = 010(2) = 2(8)
                       ;	D IS USED AS A DISPATCH ON THE NEXT BYTES IN THE TABLE.
                       ;	IF D = 5, 5 BYTES IN THE TABLE (DON'T COUNT THE BYTES WHICH
                       ;	PRINT TEXT, 41-72(8)) ARE SKIPPED OVER AND THE 6TH BYTE RESUMES
                       ;	THE INTERPRETATION.
                       ;40(8)	THIS IS A STOP CODE; WHEN THIS IS REACHED INTERPRETATION
                       ;	IS FINISHED.
                       ;41(8)-72(8)      THE ALPHABET IS ENCODED INTO THIS RANGE.
                       ;	        41- A
                       ;	        42- B
                       ;	        72- Z
                       ;	        WHEN A BYTE IN THIS RANGE IS REACHED, ITS CORRESPONDING
                       ;	        LETTER IS TYPED.
                       ;73(8)-777(8)     THIS IS A TRANSFER BYTE.  IF THE BYTE IN THIS RANGE IS
                       ;	        CONSIDERED TO BE A, TRANSFER INTERPRETATION TO THE A-73(8)RD
                       ;	        BYTE IN THE TABLE.
                       ;MAROS ASSEMBLE THE TABLE TBL:
                       ; 1.   A NUMBER FOLLOWED BY ↑ ASSEMBLES A DISPATCH BYTE.  THE FIRST
                       ;      DIGIT IS THE POSITION; THE SECOND DIGIT IS THE SIZE.
                       ; 2.   A POINT (.) ASSEMBLES A STOP CODE.
                       ; 3.   A NAME FOLLOWED BY A SLASH ASSEMBLES A TRANSFER TO THE
                       ;      SYMBOLICALLY NAMED BYTE.
                       ; 4.   A STRING OF LETTERS TERMINATED BY A SPACE, COMMA, OR POINT,
                       ;      ASSEMBLE INTO A STRING OF BYTES, EACH BYTE BEING ONE LETTER.
                       ;EXAMPLE OF BINARY TO SYMBOLIC DECODING:
                       ;      THE MACHINE CODE FOR JRST IAS 254
                       ;          INST    0  1  0  1  0  1  1  0  0
                       ;      THE INTERPRETER STARTS WITH THE FIRST BYTE IN THE TABLE (63↑).
                       ;      THE RESULT OF APPLYING THIS TO C(INST) GIVES 2.  SKIPPING OVER
                       ;      2 BYTES IN THE TABLE AND INTERPRETING THE THIRD RESULTS IN
                       ;      HAK/ BEING INTERPRETED.  AT HAK:, THERE IS A 33↑.  APPLYING
                       ;      THIS TO C(INST) RESULTS IN 5 NON PRINTING BYTES BEING SKIPPED
                       ;      OVER:
                       ;          1.  MV/
                       ;               MOV      PRINTING TEXT
                       ;          2.  MO/
                       ;          3.  ML/
                       ;          4.  DV/
                       ;          5.  SH/
                       ;H1/ IS THE NEXT BYTE INTERPRETER.  AT H1: 03↑ IS FOUND SO
                       ;4 BYTES ARE SKIPPED OVER:
                       ;              EXC      PRINTING TEXT
                       ;          1.  S3/
                       ;              BL       PRINTING TEXT
                       ;              T        PRINTING TEXT
                       ;          2.  .
                       ;          3.  AO/
                       ;          4.  AOB/
                       ;          THE NEXT LETTERS JRS ARE TYPED OUT.  THEN T/ IS FOUND.  AT
                       ;T; A T IS TYPED OUT; THEN A "." IS FOUND AND EVERYTHING STOPS.
                       ;          THE TABLE IS ALSO USED GOING FROM SYMBOLIC TO BINARY BUT A
                       ;41-72      THE ALPHABET IS ENCODED INTO THIS RANGE.
                       ;	        41- A
                       ;	        42- B
                       ;	        72- Z
                       ;	        WHEN A BYTE IN THIS RANGE IS REACHED, ITS CORRESPONDING
                       ;	        LETTER IS TYPED.
                       ;73-777     THIS IS A TRANSFER BYTE.  IF THE BYTE IN THIS RANGE IS
                       ;	        CONSIDERED TO BE A, TRANSFER INTERPRETATION TO THE A-73(8)RD
                       ;	        <A-73+FIR.>BYTE IN THE TABLE.
                       ;MAROS ASSEMBLE THE TABLE TBL:
                       ; 1.   A NUMBER FOLLOWED BY ↑ ASSEMBLES A DISPATCH BYTE.  THE FIRST
                       ;      DIGIT IS THE POSITION; THE SECOND DIGIT IS THE SIZE.
                       ; 2.   A POINT (.) ASSEMBLES A STOP CODE.
                       ; 3.   A NAME FOLLOWED BY A SLASH ASSEMBLES A TRANSFER TO THE
                       ;      SYMBOLICALLY NAMED BYTE.
                       ; 4.   A STRING OF LETTERS TERMINATED BY A SPACE, COMMA, OR POINT,
                       ;      ASSEMBLE INTO A STRING OF BYTES, EACH BYTE BEING ONE LETTER.
                       ;EXAMPLE OF BINARY TO SYMBOLIC DECODING:
                       ;      THE MACHINE CODE FOR JRST IS 254
                       ;          INST    0  1  0  1  0  1  1  0  0
                       ;      THE INTERPERTED STARTS WITH THE FIRST BYTE IN THE TABLE (63↑).
                       ;      THE RESULT OF APPLYING THIS TO C(INST) GIVES 2.  SKIPPING OVER
                       ;      2 BYTES IN THE TABLE AND INTERPRETING THE THIRD RESULTS IN
                       ;      HAK/ BEING INTERPRETED.  AT HAK:, THERE IS A 33↑.  APPLYING
                       ;      THIS TO C(INST) RESULTS IN 5 NON PRINTING BYTES BEING SKIPPED
                       ;      OVER:
                       ;          1.  MV/
                       ;               MOV      PRINTING TEXT
                       ;          2.  MO/
                       ;          3.  ML/
                       ;          4.  DV/
                       ;          5.  SH/
                       ;H1/ IS THE NEXT BYTE INTERPRETER.  AT H1: 03↑ IS FOUND SO
                       ;4 BYTES ARE SKIPPED OVER:
                       ;              EXC      PRINTING TEXT
                       ;          1.  S3/
                       ;              BL       PRINTING TEXT
                       ;              T        PRINTING TEXT
                       ;          2.  .
                       ;          3.  AO/
                       ;          4.  AOB/
                       ;          THE NEXT LETTERS JRS ARE TYPED OUT.  THEN T/ IS FOUND.  AT
                       ;T: A " T " IS TYPED OUT; THEN A "." IS FOUND AND EVERYTHING STOPS.
                       ;          THE TABLE IS ALSO USED GOING FROM SYMBOLIC TO BINARY BUT A
163004 /                 ;::   BEGIN STANFO.DDT.OPDEFS.
                       TBL:
                       ;;here;;
163004 /                 ;::    BEND STANFO.DDT.OPDEFS.
                       PNTR:
163253 / 000000,,163254                                       ;;POINTER TO BITS IN INST
                       INST:
163254 / 000000,,000000                                       ;;BINARY FOR INSTRUCTION
                       CHP:
163255 / 000000,,000000                                       ;;CHAR POINTER INTO TXT, TXT+1
                       TXT:
                       SAVPDL:
163260 / 000000,,000000                                       ;;SAVE PUSH DOWN LIST POINTER
                       BTAB:
163261 / 000000,,163004                                       ;
163261 / 441200,,163004 POINT 10,00163004,                    ;
                       ;TABLE USED TO GET NEXT BYTE POINTER
163262 / 000000,,163004                                       ;
163262 / 321200,,163004 POINT 10,00163004,9                   ;
                       ;FOR TRANSFER BYTE
163263 / 000000,,163004                                       ;
163263 / 201200,,163004 POINT 10,00163004,19                  ;
                       OPEVAL:
163264 / 201240,,000000         MOVEI    T,                   ;;EVALUATE FOR AN OP CODE
163265 / 136240,,163255          IDPB    T,163255             ;;;CHP
163266 / 202140,,163260         MOVEM    P,SAVPDL             ;
163267 / 624000,,000004          TRZA        OUTF             ;
                       OPTYPE:
163270 / 660000,,000004           TRO      000004             ;;TYPE AN OPCODE SYMBOLICALLY
163271 / 242240,,777745           LSH    T,777745             ;
163272 / 202240,,163254         MOVEM    T,163254             ;;GET OPCODE INTO RIGHT 9 BITS
163463 / 440700,,163256           XWD 440700,TXT              ;
163273 / 200240,,163463          MOVE    T,163463             ;
163274 / 202240,,163255         MOVEM    T,163255             ;;;CHP		;FOR OPEVAL,SETUP POINTER TO INPUT TEXT
163275 / 620000,,000002           TRZ      000002             ;;CLEAR INSTRUCTION TYPED FLAG
163276 / 403040,,000006         SETZB    R,    W1             ;
163277 / 200340,,163261          MOVE   W2,  BTAB             ;
                       DC1:
163300 / 134240,,000007          ILDB    T,000007             ;;GET NEXT BYTE IN TBL
163301 / 303240,,000040         CAILE    T,    40             ;
163302 / 301240,,000073          CAIL    T,    73             ;
163303 / 365040,,163300         SOJGE    R,163300             ;;SKIP OVER # BYTES = C(R)
163304 / 327040,,163300         JUMPG    R,163300             ;;SKIP OVER ALPHA TEXT WITHOUT COUNTING
163305 / 275240,,000040          SUBI    T,    40             ;
163306 / 322240,,163335         JUMPE    T,163335             ;;TRANSFER ON ASTOP CODE
163307 / 327240,,163320         JUMPG    T,   DC2             ;
163530 / 340500,,163253           XWD 340500,PNTR             ;
163310 / 137240,,163530           DPB    T,163530             ;;SETUP R ON A DISPATCH BYTE
163311 / 620240,,777774           TRZ    T,777774             ;
163312 / 350000,,000005           AOS           T             ;
163521 / 300600,,163253           XWD 300600,PNTR             ;
163313 / 137240,,163521           DPB    T,163521             ;
163314 / 606000,,000004          TRNN        OUTF             ;
163315 / 254000,,163354          JRST      163354             ;;FOR OPEVAL ONLY
163316 / 135040,,163253           LDB    R,163253             ;;GET # BYTES TO SKIP OVER
163317 / 254000,,163300          JRST         DC1             ;
                       DC2:
163320 / 571245,,777745         HRREI    T,777745(T)          ;
163321 / 321240,,163327         JUMPL    T,163327             ;;TYPE OUT A LETTER
163322 / 200300,,000005          MOVE   W1,000005             ;;BYTE IS A TRANSFER
163323 / 231300,,000003         IDIVI   W1,     3             ;
163324 / 200347,,163261          MOVE   W2,  BTAB(W2)         ;;CALCULATE POINTER TO NEXT BYTE
163325 / 271346,,000000          ADDI   W2,      (W1)         ;
163326 / 254000,,163300          JRST         DC1             ;
                       DECT:
163327 / 602000,,000004          TRNE        OUTF             ;
163330 / 254000,,163402          JRST      163402             ;;TYPE OUT A LETTER
163331 / 134300,,163255          ILDB   W1,163255             ;;;CHP	;GET NEXT INPUT LETTER
163332 / 302305,,000133          CAIE   W1,   133(T)          ;;COMPARE WITH ASSUMED NEXT LETTER
163333 / 254000,,163341          JRST      163341             ;;DOESNT MATCH
163334 / 254000,,163300          JRST      163300             ;;MATCHES, TRY NEXT
                       DECX:
163335 / 602000,,000004          TRNE      000004             ;;STOP (CODE 40) HAS BEEN SEEN
163336 / 263140,,000000          POPJ    P,                   ;;IF FOR OUTPUT, RETURN
163337 / 134300,,163255          ILDB   W1,163255             ;;;CHP	;GET NEXT INPUT CHAR IF ANY
163340 / 322300,,163370         JUMPE   W1,163370             ;;DOES # OF CHARS MATCH
                       NOMAT:
163341 / 262140,,000001           POP    P,000001             ;;NO, BACK UP AND TRY SOME MORE
163342 / 262140,,000007           POP    P,    W2             ;
163343 / 262140,,163253           POP    P,  PNTR             ;
163344 / 262140,,163255           POP    P,163255             ;;;CHP
                       NOMAT1:
163345 / 350000,,000001           AOS      000001             ;;ASSUME NEXT NUMBER FOR BIN VALUE
163346 / 137040,,163253           DPB    R,163253             ;;STUFF INTO ANSWER
163347 / 135040,,163253           LDB    R,  PNTR             ;
163350 / 326040,,163356         JUMPN    R,163356             ;;IF =0, BYTE WAS TOO BIG
163351 / 312140,,163260          CAME    P,SAVPDL             ;
163352 / 254000,,163341          JRST      163341             ;;NOT AT TOP LEVEL
163353 / 263140,,000000          POPJ    P,                   ;;UNDEFINED, FINALLY
                       DC6:
163354 / 201040,,000000         MOVEI    R,                   ;;ASSUME 0 FOR INITIAL BINARY VALUE
163355 / 137040,,163253           DPB    R,  PNTR             ;
                       DC6AA:
163356 / 316140,,163260          CAMN    P,SAVPDL             ;
163357 / 254000,,163363          JRST       DC6BB             ;
163360 / 135243,,777776           LDB    T,777776(P)          ;;OLD VALUE OF PNTR
163361 / 312243,,000000          CAME    T,      (P)          ;
163362 / 254000,,163345          JRST      NOMAT1             ;
                       DC6BB:
163363 / 261140,,163255          PUSH    P,163255             ;;;CHP
163364 / 261140,,163253          PUSH    P,  PNTR             ;
163365 / 261140,,000007          PUSH    P,    W2             ;
163366 / 261140,,000001          PUSH    P,     R             ;
163367 / 254000,,163300          JRST         DC1             ;
                       DC7:
163370 / 200140,,163260          MOVE    P,163260             ;;RESTORE PUSH DOWN POINTER
163371 / 200240,,163254          MOVE    T,  INST             ;
163372 / 242240,,000033           LSH    T,000033             ;;PUSH BINARY INTO POSITION FOR OPEVAL
163373 / 641240,,700000           TLC    T,700000             ;
163374 / 643240,,700000          TLCE    T,700000             ;
163375 / 254000,,156714          JRST      CPOPJ1             ;
163376 / 476000,,156172         SETOM      156172             ;;IT IS AN IOT
163524 / 000000,,000005                                       ;
163524 / 330300,,000005 POINT 3,00000005,8                    ;
163377 / 135040,,163524           LDB    R,163524             ;
163520 / 000000,,000005                                       ;
163520 / 271200,,000005 POINT 10,00000005,12                  ;
163400 / 137040,,163520           DPB    R,163520             ;;ONLY DONE FOR IO INSTRUCTIONS
163401 / 254000,,156714          JRST      CPOPJ1             ;
                       DC8:
163402 / 660000,,000002           TRO      000002             ;;SET INSTRUCTION TYPED FLAG
163403 / 201245,,000133         MOVEI    T,   133(T)          ;
163404 / 260140,,162443         PUSHJ    P,162443             ;;OUTPUT A LETTER
163405 / 402000,,156164         SETZM      156164             ;;SO $D WONT TRY TO DELETE OP CODES
163406 / 254000,,163300          JRST         DC1             ;
                       PATCH:
                       ;KEEP IT ALL TOGETHER FOR SWAPPING DDT
163417 /                 ;::    BEND STANFO.DDT.
                       ;;omit;;> ;; bothersome DDT conditional assembly. See sln#55858 `2013-02-21 bgbaumgart@mac.com'
163417 /               ;: DDT[J17,SYS] EOF.
163417 /               ;: ONCE[J17,SYS]
163417 /                 ;::   BEGIN STANFO.ONCE.
                       LINKSR:
163602 / 260140,,140454         PUSHJ  PDP,OUTCHS             ;
163557 / 200040,,163602          MOVE  TAC,163602             ;;DWP FOR TTYSER
163560 / 202040,,042674         MOVEM  TAC,042674             ;;DWP
163601 / 260140,,140710         PUSHJ  PDP,GETCHR             ;
163561 / 200040,,163601          MOVE  TAC,163601             ;
163562 / 202040,,042775         MOVEM  TAC,042775             ;;DWP
                       LINKS1:
163563 / 260140,,164414         PUSHJ  PDP,APRCHK             ;
163564 / 712300,,000020         CONSZ  TTY,000020             ;;WAIT FOR CTY
163565 / 254000,,163563          JRST      LINKS1             ;
163566 / 200640,,163647          MOVE  AC1,163647             ;;SAVE RETURN ADDR
                       ;SAVE SYMBOLS FOR DDT. DDTSYM IS SET UP AT LOAD TIME.
163567 / 564100,,000036          HLRO TAC1,000036             ;;-LENGTH OF SYMBOL TABLE
163570 / 213000,,000002         MOVNS      000002             ;;MAKE IT +
163571 / 504040,,000036           HRL  TAC,000036             ;;SYMTAB BEGINS HERE
163572 / 541040,,163603          HRRI  TAC,163603             ;;MOVE IT TO HERE
163573 / 251042,,163602           BLT  TAC,163602(TAC1)       ;;THERE IT WENT
163574 / 201040,,163603         MOVEI  TAC,163603             ;;TELL EXEC DDT WHERE
163575 / 542040,,000036          HRRM  TAC,000036             ;;IT LOOKS AT 36
163576 / 201042,,163603         MOVEI  TAC,BLTBEG(TAC1)       ;;END OF SYMBOL TABLE ...
163577 / 202040,,000573         MOVEM  TAC,000573             ;;IS TOP OF SYSTEM.
163600 / 254020,,000015          JRST      @000015            ;; EXIT NOW, STAGE LEFT
                       ;SETUP LOCATIONS 40 THRU 61
                       LOC40:
163603 / 000000,,000000                                       ;;UUO PC
163604 / 264000,,024112           JSR      024112             ;;TO UUO HANDLER
163605 / 264000,,000611           JSR         CH1             ;
163606 / 265240,,043230           JSP  DAT, ERROR             ;
163607 / 264000,,000614           JSR         CH2             ;
163610 / 265240,,043230           JSP  DAT, ERROR             ;
163611 / 264000,,000616           JSR         CH3             ;
163612 / 265240,,043230           JSP  DAT, ERROR             ;
163613 / 264000,,000632           JSR         CH4             ;
163614 / 265240,,043230           JSP  DAT, ERROR             ;
163615 / 264000,,000646           JSR         CH5             ;
163616 / 265240,,043230           JSP  DAT, ERROR             ;
163617 / 264000,,000666           JSR         CH6             ;
163620 / 265240,,043230           JSP  DAT, ERROR             ;
163621 / 264000,,000710           JSR         CH7             ;
163622 / 265240,,043230           JSP  DAT, ERROR             ;
163623 / 000000,,000000                                       ;;UUO PC FOR TRAPS TO 60.
163624 / 264000,,024114           JSR        UUO2             ;
                       P2LOC4:
163625 / 000000,,000000                                       ;; P2 UUO'S COME HERE
163626 / 264000,,025330           JSR      025330             ;
163627 / 264000,,000716           JSR       P2CH1             ;
163630 / 265240,,043230           JSP  DAT, ERROR             ;
163631 / 264000,,000725           JSR       P2CH2             ;
163632 / 265240,,043230           JSP  DAT, ERROR             ;
163633 / 264000,,000731           JSR       P2CH3             ;
163634 / 265240,,043230           JSP  DAT, ERROR             ;
163635 / 264000,,000741           JSR       P2CH4             ;
163636 / 265240,,043230           JSP  DAT, ERROR             ;
163637 / 264000,,000761           JSR       P2CH5             ;
163640 / 265240,,043230           JSP  DAT, ERROR             ;
163641 / 264000,,000765           JSR       P2CH6             ;
163642 / 265240,,043230           JSP  DAT, ERROR             ;
163643 / 264000,,000771           JSR       P2CH7             ;
163644 / 265240,,043230           JSP  DAT, ERROR             ;
163645 / 000000,,000000                                       ;; P2 UNDEF OPCODES COME HERE
163646 / 264000,,025332           JSR      025332             ;; JSR OFF TO UNDEF OPCODE HANDLER
                       ;ONCE ONLY CODE - OPERATOR SETUP DIALOGUE
                       ONCE:
163647 / 000000,,000000                                       ;
163650 / 205040,,040000         MOVSI  TAC, 40000             ;
163651 / 202040,,000041         MOVEM  TAC,000041             ;;KLUDGE TO GET 6 INTO EXEC MODE
163652 / 402000,,000562         SETZM      000562             ;;IT ISN'T THERE YET
163653 / 200240,,164421          MOVE  DAT,164421             ;;SETUP LINE BYTE POINTER
165214 / 777700,,164452           XWD -ONCEPN,ONCEPD          ;
163654 / 200140,,165214          MOVE  PDP,165214             ;
163655 / 201000,,000000         MOVEI                         ;;MAKE SURE SCNSER WILL TYPE ;JS
165231 / 136400,,000005          IDPB  TEM,   DAT             ;
163656 / 200040,,165231          MOVE  TAC,165231             ;;DWP FOR TTYSER
163657 / 202040,,042674         MOVEM  TAC,042674             ;;DWP
165230 / 134400,,000005          ILDB  TEM,   DAT             ;
163660 / 200040,,165230          MOVE  TAC,165230             ;
163661 / 202040,,042775         MOVEM  TAC,042775             ;;DWP
163662 / 260140,,042667         PUSHJ  PDP,  CRLF             ;
163663 / 201040,,037565         MOVEI  TAC,CONFIG             ;
163664 / 260140,,042670         PUSHJ  PDP,CONMES             ;
163665 / 260140,,042667         PUSHJ  PDP,  CRLF             ;
163666 / 260140,,164365         PUSHJ    P, OPOUT             ;
                       ; HERE, WE MUST DISCOVER WHETHER WE HAVE BEEN CONFIGURED
                       ; AND IF SO, EXACTLY HOW AND FOR WHAT REASON
163667 / 402000,,000556         SETZM      DETFLG             ;
163670 / 255740,,163671          JFCL   17,163671             ;; CLEAR ARITHMETIC FLAGS
163671 / 201040,,000001         MOVEI  TAC,000001             ;; IF THIS PRODUCES AR CRY 0, WE ARE A 10
163672 / 370000,,000001           SOS         TAC             ;
163673 / 255200,,163755         JCRY0      163755             ;; P1 IS A TEN, HOW 'BOUT THAT?
                       ; P1 IS A PDP-6, TELL THE WORLD ABOUT IT
163674 / 201040,,100000         MOVEI  TAC,100000             ;; PARITY IS BIT 20 ON THE 6
163675 / 542040,,000625          HRRM  TAC,PARCON             ;
163676 / 201040,,132237         MOVEI  TAC,132237             ;; THIS ENABLES PARITY ON THE 6
163677 / 542040,,000600          HRRM  TAC, PICON             ;
163700 / 201040,,000006         MOVEI  TAC,000006             ;; PUT A 6 IN P1NUM
                       P1OK:
163701 / 261140,,000001          PUSH  PDP,000001             ;; PUT FUTURE P1NUM ON STACK
165232 / 163603,,000040           XWD LOC40,40                ;
163702 / 200040,,165232          MOVE  TAC,165232             ;; SET UP TO BLT IN THE INTERRUPT LOCATIONS
163703 / 251040,,000061           BLT  TAC,    61             ;
163704 / 201040,,000040         MOVEI  TAC,000040             ;; 40 IS OUR UUO TRAP LOCATION
163705 / 202040,,024116         MOVEM  TAC,024116             ;
                       ; REGARDLESS OF WHETHER P1 IS A 6 OR A 10, WE GET HERE
                       P1GO:
163706 / 262140,,000561           POP  PDP,000561             ;; SET UP OUR PROCESSOR NUMBER
163707 / 720600,,000007          CONO  DCB,000007             ;; SEE IF THE DCB IS ON LINE
163710 / 720700,,000007         CONSZ  DCB,000007             ;; SEE IF IT GIVES US BACK A 7
163711 / 254000,,164154          JRST      164154             ;; WE HAVE DCB, P2 HAS NOTHING
163712 / 201040,,100000         MOVEI  TAC,100000             ;; IS P2 STARTED?
163713 / 336000,,000562         SKIPN       P2NUM             ;
163714 / 365040,,163713         SOJGE  TAC,163713             ;
163715 / 332000,,000562         SKIPE       P2NUM             ;
163716 / 254000,,163730          JRST      163730             ;;YES. SKIP CTY TYO
163717 / 200240,,164421          MOVE  DAT,164421             ;; ASK OPERATOR TO START UP P2
163720 / 201040,,165324         MOVEI  TAC,165324             ;
163721 / 260140,,042670         PUSHJ  PDP,CONMES             ;
163722 / 201040,,000204         MOVEI  TAC,000204             ;
163723 / 260140,,043700         PUSHJ  PDP,OCTPNT             ;
163724 / 201040,,165300         MOVEI  TAC,165300             ;
163725 / 260140,,042670         PUSHJ  PDP,CONMES             ;
163726 / 260140,,042667         PUSHJ  PDP,  CRLF             ;
163727 / 260140,,164365         PUSHJ  PDP,164365             ;; DUMP CTY BUFFER ONTO THE CTY
                       ; NOW WE SIT AND WAIT FOR P2 TO START UP, OR FOR THE OPERATOR TO
                       ; TELL US IT ISN'T GOING TO START
                       P1G1:
163730 / 336000,,000562         SKIPN       P2NUM             ;
163731 / 712300,,000040         CONSZ  CTY,000040             ;; HAS HE TYPED CR?
163732 / 304000,,000000          CAIA                         ;
163733 / 254000,,163730          JRST        P1G1             ;
163734 / 712200,,003005          CONO  CTY,003005             ;; CLEAR CTY
163735 / 332000,,000562         SKIPE      000562             ;; HAS P2 STARTED ALREADY?
163736 / 254000,,164157          JRST      164157             ;; YES, LEAVE
163737 / 201040,,000576         MOVEI  TAC,000576             ;; MAKE SURE NO ONE STARTS P2 NOW
163740 / 542040,,000574          HRRM  TAC,P2XFR1             ;
165241 / 254200,,000204          JRST    4,   204             ;
163741 / 200040,,165241          MOVE  TAC,165241             ;
163742 / 202040,,000204         MOVEM  TAC,000204             ;;EVEN FROM HERE
163743 / 200240,,024116          MOVE  DAT,UUOLOC             ;
163744 / 431240,,000101          XORI  DAT,000101             ;;OTHER PROC'S 41
163745 / 505241,,777777          HRLI  DAT,777777(TAC)        ;
163746 / 202045,,777777         MOVEM  TAC,777777(DAT)        ;;ZAP OTHER PROCESSORS TRAP LOCS
163747 / 251245,,000020           BLT  DAT,000020(DAT)        ;;NORMALLY A NO-NO BUT INTS OFF HERE
163750 / 200240,,164421          MOVE  DAT, LINEP             ;
163751 / 260140,,042667         PUSHJ  PDP,042667             ;; ACKNOWLEDGE RECEIPT OF THE C.R.
163752 / 260140,,164365         PUSHJ  PDP, OPOUT             ;
                       ; HERE, WE MUST DETACH THE AD AND DIS, BECAUSE WE ARE THE ONLY
                       ; PROCESSOR AND WE DON'T HAVE THEM
163753 / 476000,,000556         SETOM      000556             ;; TELLS SYSINI TO DETACH THESE
163754 / 254000,,164154          JRST      164154             ;; NOW GO CHECK CRK
                       ; WE GET HERE IF P1 IS A PDP-10
                       PDP10:
163755 / 201040,,200000         MOVEI  TAC,200000             ;; THIS IS THE PARITY BIT
163756 / 542040,,000625          HRRM  TAC,PARCON             ;
163757 / 201040,,652237         MOVEI  TAC,652237             ;; AND THIS ENABLES IT
163760 / 542040,,000600          HRRM  TAC, PICON             ;
163761 / 201040,,000012         MOVEI  TAC,000012             ;; PUT 10 IN P1NUM
163762 / 700340,,000040         CONSO  APR,000040             ;; ARE WE IN MA TRP OFFSET?
163763 / 254000,,163701          JRST      163701             ;; NO, JUST LIKE A PDP-6
163764 / 661040,,000040           TLO  TAC,000040             ;; SET BIT IN P1NUM SAYING JUST THAT
163765 / 261140,,000001          PUSH  PDP,000001             ;; PUT P1NUM ON THE STACK
165242 / 264000,,163776           JSR      163776             ;
163766 / 200040,,165242          MOVE  TAC,165242             ;
163767 / 202040,,000204         MOVEM  TAC,000204             ;;TIME TO LET THE 6 GO
163770 / 202040,,000041         MOVEM  TAC,000041             ;;PERHAPS FROM HERE
165233 / 163603,,000140           XWD LOC40,140               ;
163771 / 200040,,165233          MOVE  TAC,165233             ;
163772 / 251040,,000161           BLT  TAC,000161             ;; PUT INTERRUPT LOCATIONS IN RIGHT PLACE
163773 / 201040,,000140         MOVEI  TAC,000140             ;; AND THIS IS OUR UUO TRAP LOCATION
163774 / 202040,,024116         MOVEM  TAC,024116             ;
                       ;END REPEAT 0
163775 / 254000,,163706          JRST        P1GO             ;
                       ; HERE IS WHERE P2 STARTS
                       ; WE MUST DECIDE IF THIS IS A LEGAL CONFIGURATION OR NOT
163776 / 000000,,000000                                       ;;JSR HERE TO ENTER EXEC MODE
                       P2STAR:
165237 / 254000,,041074          JRST       P2INI             ;
163777 / 200040,,165237          MOVE  TAC,165237             ;; TELL SYSTEM WE HAVE INITIALIZED
164000 / 202040,,000204         MOVEM  TAC,000204             ;
164001 / 255740,,164002          JFCL   17,164002             ;; CLEAR AR FLAGS
165215 / 777700,,164552           XWD -P2PLN,P2PDL            ;
164002 / 200140,,165215          MOVE  PDP,165215             ;
164003 / 201040,,000001         MOVEI  TAC,000001             ;; A PDP-10 SETS AR CRY 0
164004 / 370000,,000001           SOS      000001             ;; UPON ARRIVING AT 0
164005 / 255200,,164071         JCRY0      164071             ;; WE ARE A PDP-10
                       ; HERE, P2 IS A PDP-6. MAKE SURE P1 IS IN TRP OFFSET
                       P2SZZ1:
164006 / 200240,,000561          MOVE  DAT, P1NUM             ;
164007 / 322240,,164006         JUMPE  DAT,164006             ;; WAIT UNTIL P1 IS ON THE AIR
165226 / 000040,,000012           XWD MAOFF,=10               ;
164010 / 316240,,165226          CAMN  DAT,165226             ;
164011 / 254000,,164030          JRST       P2PAR             ;
                       ULOSE:
164012 / 200040,,164015          MOVE  TAC,ILLPNT             ;
164013 / 264000,,000517           JSR      000517             ;
164014 / 254200,,164012          HALT       ULOSE             ;
                       ILLPNT:
164015 / 000000,,164016                                       ;
164015 / 440700,,164016 POINT 7,00164016,                     ;
                       P2PAR:
164030 / 201240,,100000         MOVEI  DAT,100000             ;; PDP-6 PARITY BIT
164031 / 542240,,000734          HRRM  DAT,P2RCON             ;
164032 / 201040,,000040         MOVEI  TAC,000040             ;; UUO TRAP LOCATION
164033 / 202040,,025334         MOVEM  TAC,025334             ;
164034 / 201040,,132237         MOVEI  TAC,132237             ;; PI CONO TO SET UP PARITY ENABLE
164035 / 542040,,000601          HRRM  TAC, P2CON             ;
164036 / 201240,,000006         MOVEI  DAT,000006             ;; PUT 6 IN P2NUM
165234 / 163625,,000040           XWD P2LOC40,40              ;
164037 / 200040,,165234          MOVE  TAC,165234             ;
164040 / 251040,,000061           BLT  TAC,000061             ;; SET UP INTERRUPT LOCATIONS
                       P2GO:
164041 / 720600,,000007          CONO  DCB,000007             ;; SEE IF DCB IS ON LINE
164042 / 720700,,000007         CONSZ  DCB,     7             ;
164043 / 254000,,164060          JRST      164060             ;; HE'S THERE, GO ON.
164044 / 200040,,164047          MOVE  TAC,DCBPNT             ;
164045 / 264000,,000517           JSR      000517             ;; TELL THEM
164046 / 254000,,164060          JRST      P2WENT             ;
                       DCBPNT:
164047 / 000000,,164050                                       ;
164047 / 440700,,164050 POINT 7,00164050,                     ;
                       P2WENT:
164060 / 261140,,000005          PUSH  PDP,   DAT             ;
165222 / 002342,,002337           XWD ALTSAV,PTPSAV           ;
164061 / 200040,,165222          MOVE  TAC,165222             ;
164062 / 251040,,002341           BLT  TAC,002341             ;; SET UP DEVICE AC SAVE INDIRECT LOCATIONS
164063 / 260140,,060377         PUSHJ  PDP,060377             ;; SEE IF CRK WORKS
164064 / 254000,,164067          JRST      164067             ;; NO, SKIP IT
164065 / 202240,,000560         MOVEM  DAT,000560             ;; YES, SET STARTING DATE
164066 / 202200,,000557         MOVEM ITEM,CRKTIM             ;
                       P2GO1:
164067 / 262140,,000562           POP  PDP, P2NUM             ;
164070 / 254000,,000574          JRST      P2XFR1             ;
                       ; WE GET HERE IF P2 IS A PDP-10
                       P2P10:
164071 / 200240,,200000          MOVE  DAT,  1B19             ;
164072 / 542240,,000734          HRRM  DAT,P2RCON             ;
164073 / 201040,,652237         MOVEI  TAC,652237             ;
164074 / 542040,,000601          HRRM  TAC, P2CON             ;
164075 / 200240,,000561          MOVE  DAT, P1NUM             ;
164076 / 700340,,000040         CONSO  APR,000040             ;; ARE WE IN TRP OFFSET?
164077 / 254000,,164127          JRST      164127             ;; NO, CONTINUE
164100 / 607240,,000040          TLNN  DAT,000040             ;; IS P1 IN TRP OFFSET?
164101 / 254000,,164121          JRST      164121             ;; OK
164102 / 200040,,164105          MOVE  TAC,BOTHPN             ;
164103 / 264000,,000517           JSR      000517             ;
164104 / 254200,,164102          HALT      164102             ;
                       BOTHPN:
164105 / 000000,,164106                                       ;
164105 / 440700,,164106 POINT 7,00164106,                     ;
                       P2P10X:
165226 / 000040,,000012           XWD MAOFF,=10               ;
164121 / 200240,,165226          MOVE  DAT,165226             ;
165235 / 163625,,000140           XWD P2LOC40,140             ;
164122 / 201040,,165235         MOVEI  TAC,165235             ;
164123 / 251040,,000161           BLT  TAC,000161             ;; LOAD UP INTERRUPT LOCATIONS
164124 / 201040,,000140         MOVEI  TAC,000140             ;; THIS IS OUT UUO TRAP LOCATION
164125 / 202040,,025334         MOVEM  TAC,025334             ;
164126 / 254000,,164041          JRST        P2GO             ;
                       P2P10A:
164127 / 603240,,000040          TLNE  DAT, MAOFF             ;
164130 / 254000,,164146          JRST      P2P10B             ;
164131 / 200040,,164134          MOVE  TAC,NONPNT             ;
164132 / 264000,,000517           JSR      000517             ;
164133 / 254200,,164131          HALT      164131             ;
                       NONPNT:
164134 / 000000,,164135                                       ;
164134 / 440700,,164135 POINT 7,00164135,                     ;
                       P2P10B:
164146 / 201240,,000012         MOVEI  DAT,000012             ;; SET P2NUM TO 10
165234 / 163625,,000040           XWD P2LOC40,40              ;
164147 / 201040,,165234         MOVEI  TAC,165234             ;
164150 / 251040,,000061           BLT  TAC,000061             ;; BLT IN INTERRUPT TRAP LOCATIONS
164151 / 201040,,000040         MOVEI  TAC,000040             ;; THIS IS OUR UUO TRAP LOCATION
164152 / 202040,,025334         MOVEM  TAC,025334             ;
164153 / 254000,,164041          JRST        P2GO             ;
                       ; FINISHED CONFIGURING, NOW CHECK DATE AND ALL
                       ONEP:
164154 / 260140,,060377         PUSHJ  PDP,060377             ;; DO WE HAVE THE CRK?
164155 / 254000,,164165          JRST      164165             ;; NO, GET IT FROM OPERATOR
164156 / 254000,,164162          JRST       P2OK1             ;
                       P2OK:
164157 / 200200,,000557          MOVE ITEM,000557             ;; DOES P2 HAVE CRK?
164160 / 336240,,000560         SKIPN  DAT,CRKDAT             ;
164161 / 254000,,164165          JRST      164165             ;; NO, AGAIN GET IT FROM OPERATOR
                       P2OK1:
164162 / 202200,,024633         MOVEM ITEM,  TIME             ;
164163 / 202240,,024634         MOVEM  DAT,THSDAT             ;
164164 / 254000,,164276          JRST       ONCE9             ;
                       ;ASK FOR TODAY'S DATE AND CONVERT
                       ;DATE STORED AS ((Y-64)*12.+M-1)*31.+D-1
                       TBAD:
164165 / 260140,,164167         PUSHJ  PDP,DATLOP             ;
164166 / 254000,,164165          JRST      164165             ;
                       DATLOP:
164167 / 402000,,024634         SETZM      THSDAT             ;
164170 / 200240,,164421          MOVE  DAT, LINEP             ;
164171 / 201040,,164654         MOVEI  TAC,TODATE             ;
164172 / 260140,,042670         PUSHJ  PDP,CONMES             ;
164173 / 260140,,164365         PUSHJ  PDP, OPOUT             ;
164174 / 260140,,164330         PUSHJ  PDP,GETLIN             ;
164175 / 254000,,164167          JRST      DATLOP             ;
164176 / 261140,,000001          PUSH  PDP,000001             ;;SAVE INPUT BYTE POINTER
164177 / 201000,,000011         MOVEI      000011             ;;STORE DATE TYPED IN ON TOP OF DATE OF SYSTEM
164200 / 200200,,164663          MOVE ITEM,164663             ;;MAX. OF 11 CHAR. INCL. CR
                       ;CLOBBER SYSDAT
164201 / 134100,,000001          ILDB TAC1,   TAC             ;
164202 / 136100,,000004          IDPB TAC1,  ITEM             ;
164203 / 302100,,000015          CAIE TAC1,    15             ;
164204 / 367000,,164201          SOJG      164201             ;
164205 / 323000,,164167        JUMPLE      164167             ;;TOO MANY CHARS?
164206 / 201100,,000000         MOVEI TAC1,                   ;;STORE NULL ON TOP OF CR
164207 / 137100,,000004           DPB TAC1,  ITEM             ;
164210 / 262140,,000001           POP  PDP,000001             ;;RESTORE INPUT BYTE POINTER
164211 / 260140,,164301         PUSHJ  PDP,164301             ;;MONTH
164212 / 254000,,164167          JRST      164167             ;;ERROR
164213 / 332000,,000002         SKIPE        TAC1             ;
164214 / 303100,,000014         CAILE TAC1,000014             ;
164215 / 254000,,164167          JRST      DATLOP             ;
164216 / 275100,,000001          SUBI TAC1,     1             ;
164217 / 221100,,000037         IMULI TAC1,000037             ;
164220 / 272100,,024634          ADDM TAC1,THSDAT             ;
164221 / 260140,,164301         PUSHJ  PDP,164301             ;;DAY
164222 / 254000,,164167          JRST      DATLOP             ;
164223 / 332000,,000002         SKIPE        TAC1             ;
164224 / 303100,,000037         CAILE TAC1,000037             ;
164225 / 254000,,164167          JRST      DATLOP             ;
164226 / 275100,,000001          SUBI TAC1,     1             ;
164227 / 272100,,024634          ADDM TAC1,THSDAT             ;
164230 / 260140,,164301         PUSHJ  PDP,164301             ;;YEAR
164231 / 254000,,164167          JRST      DATLOP             ;
164232 / 301100,,000104          CAIL TAC1,000104             ;
164233 / 303100,,000143         CAILE TAC1,000143             ;
164234 / 254000,,164167          JRST      DATLOP             ;
164235 / 275100,,000100          SUBI TAC1,000100             ;;YEAR ZERO
164236 / 221100,,000564         IMULI TAC1,000564             ;
164237 / 272100,,024634          ADDM TAC1,THSDAT             ;
                       ;GET TIME OF DAY
164240 / 262140,,000001           POP  PDP,   TAC             ;
164241 / 260140,,164243         PUSHJ  PDP,TIMLOP             ;
164242 / 254000,,164241          JRST      164241             ;
                       TIMLOP:
164243 / 402000,,024633         SETZM        TIME             ;
164244 / 200240,,164421          MOVE  DAT, LINEP             ;
164245 / 201040,,164664         MOVEI  TAC, TIMEM             ;
164246 / 260140,,042670         PUSHJ  PDP,CONMES             ;
164247 / 260140,,164365         PUSHJ  PDP, OPOUT             ;
164250 / 260140,,164330         PUSHJ  PDP,GETLIN             ;
164251 / 254000,,164243          JRST      164243             ;;JUST A CR
164252 / 134100,,000001          ILDB TAC1,   TAC             ;
164253 / 275100,,000060          SUBI TAC1,    60             ;
164254 / 331000,,000002         SKIPL      000002             ;;CHECK FIRST DIGIT OF HOUR
164255 / 303100,,000002         CAILE TAC1,     2             ;
164256 / 254000,,164243          JRST      TIMLOP             ;
165225 / 000010,,172600                                       ;
164257 / 220100,,165225          IMUL TAC1,165225             ;
164260 / 202100,,024633         MOVEM TAC1,  TIME             ;
164261 / 134100,,000001          ILDB TAC1,   TAC             ;
164262 / 275100,,000060          SUBI TAC1,000060             ;;CONVERT TO BINARY
164263 / 331000,,000002         SKIPL        TAC1             ;
164264 / 303100,,000011         CAILE TAC1,000011             ;
164265 / 254000,,164243          JRST      TIMLOP             ;
164266 / 221100,,645700         IMULI TAC1,645700             ;
164267 / 272100,,024633          ADDM TAC1,  TIME             ;
164270 / 260140,,164301         PUSHJ  PDP, DECIN             ;
164271 / 254000,,164243          JRST      TIMLOP             ;
164272 / 303100,,000073         CAILE TAC1,000073             ;
164273 / 254000,,164243          JRST      TIMLOP             ;
164274 / 221100,,007020         IMULI TAC1,007020             ;
164275 / 272100,,024633          ADDM TAC1,  TIME             ;
                       ONCE9:
164276 / 255000,,000000          JFCL                         ;
164276 / 205040,,255000         MOVSI  TAC,      (<JFCL>)     ;
164277 / 202040,,023013         MOVEM  TAC, ONCEI             ;
164300 / 254000,,163557          JRST      LINKSR             ;
                       ;;DECIMAL INPUT ROUTINE - JAM
                       DECIN:
164301 / 134100,,000001          ILDB TAC1,000001             ;; FIRST, SKIP NULLS, SPACES, AND TABS
164302 / 322100,,164301         JUMPE TAC1, DECIN             ;
164303 / 302100,,000040          CAIE TAC1,000040             ;
164304 / 306100,,000011          CAIN TAC1,000011             ;
164305 / 254000,,164301          JRST       DECIN             ;
164306 / 307100,,000071          CAIG TAC1,000071             ;
164307 / 305100,,000060         CAIGE TAC1,000060             ;
164310 / 263140,,000000          POPJ  PDP,                   ;
164311 / 275100,,000060          SUBI TAC1,000060             ;
                       DECIN1:
164312 / 134640,,000001          ILDB  AC1,   TAC             ;
164313 / 302640,,000055          CAIE  AC1,000055             ;
164314 / 306640,,000057          CAIN  AC1,000057             ;
164315 / 254000,,037401          JRST      CPOPJ1             ;
164316 / 302640,,000015          CAIE  AC1,    15             ;
164317 / 306640,,000012          CAIN  AC1,    12             ;
164320 / 254000,,037401          JRST      CPOPJ1             ;
164321 / 307640,,000071          CAIG  AC1,000071             ;
164322 / 305640,,000060         CAIGE  AC1,000060             ;
164323 / 263140,,000000          POPJ  PDP,                   ;
164324 / 275640,,000060          SUBI  AC1,000060             ;
164325 / 221100,,000012         IMULI TAC1,000012             ;
164326 / 270100,,000015           ADD TAC1,   AC1             ;
164327 / 254000,,164312          JRST      DECIN1             ;
                       ;ROUTINE TO READ A LINE FROM OPERATORS CONSOLE
                       ;CALL:	PUSHJ PDP,GETLIN
                       ;	JUST A CR TYPED IN
                       ;	A LINE TYPED IN,TAC SET AS BYTE POINTER
                       GETLIN:
164330 / 200040,,164421          MOVE  TAC, LINEP             ;
164331 / 201200,,000000         MOVEI ITEM,                   ;
                       GET1:
164332 / 260140,,164410         PUSHJ  PDP,   TYI             ;
164333 / 712040,,000002         DATAI  TTY,  TAC1             ;
164334 / 405100,,000177          ANDI TAC1,   177             ;
164335 / 306100,,000177          CAIN TAC1,000177             ;;RUBOUT?
164336 / 254000,,164351          JRST      DELETE             ;
164337 / 200400,,000002          MOVE CHREC,000002             ;;NO, ECHO CHAR.
164340 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164341 / 136100,,000001          IDPB TAC1,000001             ;;AND STORE CHAR.
164342 / 302100,,000015          CAIE TAC1,    15             ;
164343 / 344200,,164332          AOJA ITEM,  GET1             ;
164344 / 201400,,000012         MOVEI CHREC,000012             ;;OUTPUT LF
164345 / 260140,,164403         PUSHJ  PDP,164403             ;;TYPE OUT
164346 / 200040,,164421          MOVE  TAC,164421             ;;RESET BYTE POINTER
164347 / 326200,,037401         JUMPN ITEM,037401             ;;NULL LINE?
164350 / 263140,,000000          POPJ  PDP,                   ;;YES, DON'T SKIP RETURN
                       DELETE:
164351 / 322200,,164360         JUMPE ITEM,164360             ;;AT BEGINNING OF LINE?
165227 / 070000,,000000           XWD 070000,0                ;
164352 / 270040,,165227           ADD  TAC,165227             ;;NO, BACK UP BYTE POINTER
164353 / 603040,,400000          TLNE  TAC,400000             ;;FINISHED THIS WORD YET?
165243 / 347777,,777777           XWD 347777,-1               ;
164354 / 270040,,165243           ADD  TAC,165243             ;;YES, BACK UP ADDRESS
164355 / 201400,,000134         MOVEI CHREC,000134             ;;OUTPUT BACK SLASH
164356 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164357 / 364200,,164332          SOJA ITEM,  GET1             ;
                       DELET1:
164360 / 201400,,000015         MOVEI CHREC,    15             ;
164361 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164362 / 201400,,000012         MOVEI CHREC,    12             ;
164363 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164364 / 254000,,164330          JRST      GETLIN             ;
                       ;ROUTINE TO TYPE A LINE ON OPERATOR CONSOLE
                       ;ECHO CHECK STOPS LINE AND RETURNS
                       ;CALL:	DAT SET TO END OF MESSAGE
                       OPOUT:
164365 / 200040,,164421          MOVE  TAC, LINEP             ;
164366 / 712200,,001000          CONO  TTY,001000             ;;CLEAR INPUT
                       OPOUT1:
164367 / 316040,,000005          CAMN  TAC,   DAT             ;
164370 / 263140,,000000          POPJ  PDP,                   ;
164371 / 712300,,000040         CONSZ  TTY,    40             ;
164372 / 254000,,164376          JRST      164376             ;;ECHO CHECK
164373 / 134400,,000001          ILDB CHREC,   TAC             ;
164374 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164375 / 254000,,164367          JRST      OPOUT1             ;
                       OPOUT2:
164376 / 201400,,000015         MOVEI CHREC,    15             ;
164377 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164400 / 201400,,000012         MOVEI CHREC,    12             ;
164401 / 260140,,164403         PUSHJ  PDP,   TYO             ;
164402 / 712200,,001000          CONO  TTY,001000             ;;CLEAR INPUT
                       ;WAIT TILL OUTPUT BUSY OFF BEFORE TYPING OUT CHAR.
                       TYO:
164403 / 260140,,164414         PUSHJ  PDP,164414             ;;CHECK CLOCK
164404 / 712300,,000020         CONSZ  TTY,    20             ;
164405 / 254000,,164403          JRST         TYO             ;
164406 / 712140,,000010         DATAO  TTY,000010             ;;DWP FOR TTYSER
164407 / 263140,,000000          POPJ  PDP,                   ;
                       ;WAIT TIL INPUT DONE ON BEFORE RETURNING WITH NEXT CHAR.
                       TYI:
164410 / 260140,,164414         PUSHJ  PDP,APRCHK             ;
164411 / 712340,,000040         CONSO  TTY,    40             ;
164412 / 254000,,164410          JRST         TYI             ;
164413 / 263140,,000000          POPJ  PDP,                   ;
                       ;CHECK APR FOR CLOCK FLAG SO TIME USER TYPES IN WILL BE ACCURATE
                       APRCHK:
164414 / 700340,,001000         CONSO  APR,001000             ;;IS CLOCK FLAG ON?
164415 / 263140,,000000          POPJ  PDP,                   ;;NO
164416 / 700200,,001000          CONO  APR,001000             ;;YES, CLEAR CLOCK FLAG
164417 / 350000,,024633           AOS      024633             ;;INCREMENT TIME
164420 / 263140,,000000          POPJ  PDP,                   ;
                       ;CONSTANTS AND PUSH DOWN LIST
                       LINEP:
164421 / 000000,,164422                                       ;
164421 / 440700,,164422 POINT 7,00164422,                     ;
                       ;INPUT AND OUTPUT LINE BUFFER
                       LINBUF:
                       ONCEPD:
                       P2PDL:
                       SYSDAT:
                       ;MESSAGES
                       TODATE:
                       DATPTR:
164663 / 000000,,164652                                       ;
164663 / 440700,,164652 POINT 7,00164652,                     ;
                       ;POINTER TO SYSTEM DATE
                       TIMEM:
                       ;206 RESTARTS -- USER AND EXEC MODE
                       BEGERR:
165224 / 000000,,000007                                       ;
164671 / 712140,,165224         DATAO  CTY,165224             ;;DING FOR HIM
164672 / 402000,,023014         SETZM      023014             ;;SYSTEM'S NOT ON L'SCOPE
164673 / 402000,,156202         SETZM      DDTSUM             ;
164674 / 402000,,156200         SETZM      156200             ;;NO SWAPPING DDT YET
164675 / 254200,,164676          HALT       BEGIN             ;
                       BEGIN:
164676 / 476000,,023014         SETOM      023014             ;;SET TO SAY SYSTEM IS ON LIBRASCOPE
165223 / 777600,,023657                                       ;
164677 / 200140,,165223          MOVE    P,165223             ;;GET A PDL
164700 / 265040,,164701           JSP  TAC,164701             ;;206 START:  WRITE OUT SYSTEM.
164701 / 603040,,010000          TLNE  TAC,010000             ;;ARE WE IN USER MODE?
164702 / 254000,,164711          JRST      164711             ;;USER MODE, SPECIAL HACK.
164703 / 700200,,200000          CONO      200000             ;;RESET THE WORLD
164704 / 260140,,037404         PUSHJ    P,037404             ;;MAKE SURE WE HAVE FAST AC'S
164705 / 254000,,164676          JRST      164676             ;;NO. LOOK AGAIN.
164706 / 744700,,000400         CONSZ  DSK,000400             ;; IS THE DISK ON-LINE?
164707 / 254000,,164671          JRST      164671             ;; NO, EXIT NOW.
164710 / 334040,,000036         SKIPA  TAC,DDTSYM             ;
                       USBG1:
164711 / 200040,,000116          MOVE  TAC,JOBSYM             ;
164712 / 202040,,156200         MOVEM  TAC,SYMLOC             ;
165221 / 773235,,157014           XWD DDTA-DDTEND,DDTA        ;
164713 / 200040,,165221          MOVE  TAC,165221             ;;GET IOWD FOR CHECKSUM
164714 / 260140,,050100         PUSHJ    P,050100             ;;MAKE A CHECKSUM
164715 / 202100,,156202         MOVEM TAC1,156202             ;;SAVE DDT CHECKSUM
                       ;;	USBG1:				;DEFINED AT LAST.
165240 / 254200,,000203          JRST    4,   203             ;
164716 / 200040,,165240          MOVE  TAC,165240             ;;SET UP LOCATION 206
164717 / 202040,,000206         MOVEM  TAC,000206             ;;STUFF SYSTEM INITIALIZATION ADDRESS
164720 / 265040,,164721           JSP  TAC,164721             ;
164721 / 603040,,010000          TLNE  TAC,010000             ;;USER MODE?
164722 / 254000,,164736          JRST      164736             ;;YES.  GO OFF AND FAKE IT.
165236 / 165051,,000020                                       ;
164723 / 200040,,165236          MOVE  TAC,165236             ;
164724 / 251040,,000027           BLT  TAC,000027             ;;MAKE SURE 20 LOADER IS GOOD
164725 / 701200,,000100          CONO  IOP,000100             ;;SET UP IOP FOR WRITING.
165213 / 550000,,000000           XWD -=76*2000,0             ;
164726 / 701140,,165213         DATAO  IOP,165213             ;;ALL OF LOWER CORE.
164727 / 744540,,016027         DATAO  DSK,016027             ;;BAND FOR SYSTEM STORAGE
164730 / 701340,,300070         CONSO  IOP,300070             ;;WAIT UNTIL DONE.
164731 / 254000,,164730          JRST      164730             ;;LOOP
164732 / 701340,,300060         CONSO  IOP,300060             ;;ERRORS?
164733 / 744700,,003370         CONSZ  DSK,003370             ;;ERRORS?
164734 / 254000,,164671          JRST      164671             ;;LOSE
164735 / 254000,,000200          JRST      000200             ;;START UP SYSTEM.
                       ;HERE IF USER SAYS
                       ;GET SYSTEM
                       ;S 206
                       USRBEG:
164736 / 047000,,000000         CALLI                         ;;RESET SELF.
164737 / 474040,,000000          SETO  TAC,                   ;
164740 / 047040,,400066         CALLI  TAC,400066             ;;SETPRV - GET CURRENT PRIVILEGES.
164741 / 667040,,400004          TLON  TAC,400004             ;;HAVE WE GOT PRIVILEGE?
165246 / 051140,,165244        OUTSTR      165244             ;
165247 / 047000,,000012         CALLI          12             ;
164742 / 254000,,165246          JRST      165246             ;;NOPE.
164743 / 047040,,400066         CALLI  TAC,400066             ;;GET IT.
164744 / 201640,,000140         MOVEI  AC1,000140             ;;FIRST ADDRESS TO WRITE.
164745 / 200040,,016030          MOVE  TAC,016030             ;;GET THE SYSTEM BAND.
164746 / 660040,,400000           TRO  TAC,400000             ;;MAKE IT ABSOLUTE.
164747 / 200700,,000044          MOVE  AC2,000044             ;;GET THIS SIZE
164750 / 275700,,000137          SUBI  AC2,000137             ;;LESS OFFSET, LEAVES WORD COUNT
164751 / 201740,,000003         MOVEI  AC3,000003             ;;START IN SECTOR 3 TO ACCOUNT FOR
                       ;OFFSET.
164752 / 707040,,000015         FBWRT  TAC,000015             ;;ASK SYSTEM TO WRITE THIS.
164753 / 051140,,165311        OUTSTR      165311             ;
164754 / 201700,,227777         MOVEI  AC2,227777             ;;THIS IS THE SIZE OF AN L'SCOPE BAND
164755 / 274700,,000044           SUB  AC2,000044             ;;THIS IS THE SIZE OF NEXT XFER
164756 / 322700,,164764         JUMPE  AC2,164764             ;;JUMP IF THERE'S NO SPACE TO FILL UP
164757 / 200740,,000044          MOVE  AC3,JOBREL             ;
164760 / 271740,,000001          ADDI  AC3,     1             ;
164761 / 242740,,777773           LSH  AC3,777773             ;;COMPUTE SECTOR
164762 / 707040,,000015         FBWRT  TAC,000015             ;;MAKE SURE ENTIRE BAND IS READABLE
164763 / 051140,,165304        OUTSTR      165304             ;
                       BEGUX:
164764 / 201700,,000101         MOVEI  AC2,000101             ;;(PAD TO 137 WITH ZEROES)
164765 / 400740,,000000          SETZ  AC3,                   ;;SECTOR
164766 / 201640,,165031         MOVEI  AC1,165031             ;;PLACE TO START.
164767 / 200100,,000116          MOVE TAC1,JOBSYM             ;
164770 / 202100,,165067         MOVEM TAC1,165067             ;;SAVE CYMBALS
164771 / 200100,,000044          MOVE TAC1,JOBREL             ;
164772 / 202100,,165070         MOVEM TAC1,165070             ;;SAVE JOBREL
164773 / 707040,,000015         FBWRT  TAC,   AC1             ;
164774 / 051140,,165316        OUTSTR      165316             ;
164775 / 047000,,000012         CALLI          12             ;
                       ;PUNCH SYSTEM LOADER WITH CURRENT LOC OF SYSTEM ON LIBRASCOPE
                       SYSLOD:
164776 / 200040,,016027          MOVE    1,016027             ;
164777 / 202040,,165046         MOVEM    1,165046             ;;GET BAND DYNAMICALLY
165000 / 265100,,165022           JSP    2,  FEED             ;
165001 / 710300,,000020         CONSZ  PTP,    20             ;
165002 / 254000,,165001          JRST      165001             ;
165003 / 710200,,000050          CONO  PTP,000050             ;;CLEAR PAPER TAPE PUNCH AND SET BINARY MODE
165216 / 777760,,165031                                       ;
165004 / 334040,,165216         SKIPA    1,165216             ;
                       PUNXT0:
165005 / 634100,,000002          TDZA    2,     2             ;
                       PUNNXT:
165006 / 200101,,000000          MOVE    2,      (1)          ;
165007 / 201140,,000006         MOVEI    3,     6             ;
                       PUN1:
165010 / 241100,,000006           ROT    2,     6             ;
165011 / 710300,,000020         CONSZ  PTP,    20             ;
165012 / 254000,,165011          JRST      165011             ;
165013 / 710140,,000002         DATAO  PTP,     2             ;
165014 / 367140,,165010          SOJG    3,  PUN1             ;
165015 / 253040,,165006         AOBJN    1,PUNNXT             ;
165016 / 607040,,777777          TLNN    1,777777             ;
165017 / 254000,,165005          JRST      165005             ;;PUNCH EXTRA WORD OF ZERO TO STOP PTR ON READIN
165020 / 265100,,165022           JSP    2,  FEED             ;
165021 / 254200,,164776          HALT      SYSLOD             ;
                       FEED:
165022 / 201040,,000144         MOVEI    1,000144             ;
                       FEED1:
165023 / 710300,,000020         CONSZ  PTP,    20             ;
165024 / 254000,,165023          JRST       FEED1             ;
165025 / 710200,,000010          CONO  PTP,    10             ;
165220 / 000000,,000000                                       ;
165026 / 710140,,165220         DATAO  PTP,165220             ;
165027 / 367040,,165023          SOJG    1, FEED1             ;
165030 / 254002,,000000          JRST            (2)          ;
                       LODTAB:
165031 / 777761,,000000           XWD -LODLEN+1,0             ;
                       LODIT:
165032 / 200000,,000016          MOVE      000016             ;;1 THIS IS LOC 20 BE CAREFUL
165033 / 402000,,000020         SETZM      000020             ;;2
165034 / 251000,,377777           BLT      377777             ;;3
                       LODLUP:
165035 / 701140,,000014         DATAO  IOP,000014             ;;4
165036 / 744540,,000015         DATAO  DSK,000015             ;;5
165037 / 701340,,300070         CONSO  IOP,300070             ;;6
165040 / 254000,,000006          JRST      000006             ;;7
165041 / 701340,,300060         CONSO  IOP,300060             ;;10
165042 / 744700,,003370         CONSZ  DSK,003370             ;;11
165043 / 254200,,000004          HALT      000004             ;;12
165044 / 254000,,000200          JRST      000200             ;;13
                       SLOC:
165045 / 550000,,000000           XWD -=76*2000,0		           ;
                       ;14
                       SBAND:
165046 / 000001,,000000                                       ;;15 REALLY TO BE FILLED IN BY SYSLOD
                       BLTAC:
165047 / 000020,,000021                                       ;;16
165050 / 254000,,000001          JRST      000001             ;;17 TO START IT
                       LOD20:
165051 / 710600,,000060          CONO  PTR,000060             ;;20 LOADER
165052 / 710740,,000010         CONSO  PTR,    10             ;
165053 / 254000,,000021          JRST          21             ;
165054 / 710440,,000026         DATAI  PTR,    26             ;
165055 / 710740,,000010         CONSO  PTR,    10             ;
165056 / 254000,,000024          JRST          24             ;
165057 / 000000,,000000                                       ;
165060 / 254000,,000021          JRST          21             ;
                       LODSYM:
165067 / 000000,,000000                                       ;
                       LODREL:
165070 / 000000,,000000                                       ;
                       DECOUT:
165132 / 231040,,000012         IDIVI  TAC,000012             ;
165133 / 506103,,000000          HRLM TAC1,      (P)          ;
165134 / 322040,,165136         JUMPE  TAC,165136             ;
165135 / 260140,,165132         PUSHJ    P,DECOUT             ;
165136 / 554043,,000000          HLRZ  TAC,      (P)          ;
165137 / 271040,,000060          ADDI  TAC,    60             ;
165140 / 051040,,000001        OUTCHR         TAC             ;
165141 / 263140,,000000          POPJ    P,                   ;
                       START:
165217 / 777760,,165172          IOWD 20,SPDL                 ;
165142 / 200140,,165217          MOVE    P,165217             ;;FOR USE WITH DUMP COPY OF SYSTEM
165143 / 051140,,037565        OUTSTR      037565             ;;SYSTEM NAME
165144 / 051140,,165253        OUTSTR      165253             ;
165145 / 201040,,740403         MOVEI  TAC,740403             ;
165146 / 260140,,165132         PUSHJ    P,DECOUT             ;
165147 / 051140,,165274        OUTSTR      165274             ;
165150 / 201040,,035345         MOVEI  TAC,035345             ;
165151 / 260140,,165132         PUSHJ    P,DECOUT             ;
165152 / 051140,,165270        OUTSTR      165270             ;
165153 / 201040,,060013         MOVEI  TAC,060013             ;
165154 / 260140,,165132         PUSHJ    P,DECOUT             ;
165155 / 051140,,165264        OUTSTR      165264             ;
165156 / 201040,,006624         MOVEI  TAC,006624             ;
165157 / 260140,,165132         PUSHJ    P,DECOUT             ;
165160 / 051140,,165256        OUTSTR      165256             ;
165161 / 201040,,001531         MOVEI  TAC,001531             ;
165162 / 260140,,165132         PUSHJ    P,DECOUT             ;
165163 / 564040,,000116          HLRO  TAC,000116             ;;JOBSYM
165164 / 213000,,000001         MOVNS         TAC             ;
165165 / 051140,,165261        OUTSTR      165261             ;
165166 / 260140,,165132         PUSHJ    P,DECOUT             ;
165167 / 051140,,165250        OUTSTR      165250             ;
165170 / 201040,,621061         MOVEI  TAC,621061             ;
165171 / 260140,,165132         PUSHJ    P,DECOUT             ;
165172 / 047000,,000012         CALLI          12             ;
                       SPDL:
                       THEEND:
165332 /                 ;::    BEND STANFO.ONCE.
165332 /               ;: ONCE[J17,SYS] EOF.
